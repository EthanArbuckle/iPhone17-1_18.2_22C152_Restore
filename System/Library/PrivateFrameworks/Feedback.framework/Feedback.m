void type metadata accessor for FBKEnvironment(uint64_t a1)
{
  sub_23CEE84A4(a1, &qword_268BCCD08);
}

void type metadata accessor for FBKAnswerType(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for BatchOnboardingView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for BatchOnboardingView()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for BatchOnboardingView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BatchOnboardingView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  char v5 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BatchOnboardingView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchOnboardingView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchOnboardingView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchOnboardingView()
{
  return &type metadata for BatchOnboardingView;
}

uint64_t sub_23CEE57FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CEE5818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCF88);
  MEMORY[0x270FA5388](v2 - 8);
  int v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_23D005578();
  uint64_t v6 = sub_23D0054E8();
  uint64_t v7 = sub_23D005128();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
  uint64_t v8 = sub_23D005158();
  sub_23CEE8BB4((uint64_t)v4, &qword_268BCCF88);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = sub_23D004C68();
  sub_23CEE5B20((uint64_t)&v45);
  uint64_t v11 = v45;
  uint64_t v12 = v46;
  char v13 = v47;
  long long v14 = v49;
  long long v15 = v52;
  long long v16 = v55;
  uint64_t v17 = v58;
  char v37 = 0;
  char v35 = v47;
  char v33 = v50;
  char v31 = v53;
  char v29 = v56;
  *(_DWORD *)&v48[3] = *(_DWORD *)&v36[3];
  *(_DWORD *)v48 = *(_DWORD *)v36;
  *(_DWORD *)&v51[3] = *(_DWORD *)&v34[3];
  *(_DWORD *)v51 = *(_DWORD *)v34;
  *(_DWORD *)&v54[3] = *(_DWORD *)&v32[3];
  *(_DWORD *)v54 = *(_DWORD *)v32;
  *(_DWORD *)&v57[3] = *(_DWORD *)&v30[3];
  *(_DWORD *)v57 = *(_DWORD *)v30;
  *(_DWORD *)&v60[3] = HIDWORD(v28);
  *(_DWORD *)v60 = *(_DWORD *)((char *)&v28 + 1);
  DWORD1(v39) = *(_DWORD *)&v36[3];
  char v18 = v50;
  *(_DWORD *)((char *)&v39 + 1) = *(_DWORD *)v36;
  HIDWORD(v40) = *(_DWORD *)&v34[3];
  char v19 = v53;
  *(_DWORD *)((char *)&v40 + 9) = *(_DWORD *)v34;
  *(_DWORD *)&v42[4] = *(_DWORD *)&v32[3];
  char v20 = v56;
  *(_DWORD *)&v42[1] = *(_DWORD *)v32;
  *(_DWORD *)&v42[28] = *(_DWORD *)&v30[3];
  *(void *)&long long v38 = v10;
  *((void *)&v38 + 1) = 0x4010000000000000;
  LOBYTE(v39) = 0;
  *((void *)&v39 + 1) = v45;
  *(void *)&long long v40 = v46;
  BYTE8(v40) = v47;
  long long v41 = v49;
  v42[0] = v50;
  *(_OWORD *)&v42[8] = v52;
  v42[24] = v53;
  *(_DWORD *)&v42[25] = *(_DWORD *)v30;
  long long v43 = v55;
  LOBYTE(v44) = v56;
  DWORD1(v44) = HIDWORD(v28);
  *(_DWORD *)((char *)&v44 + 1) = *(_DWORD *)((char *)&v28 + 1);
  *((void *)&v44 + 1) = v58;
  long long v21 = v38;
  long long v22 = v39;
  long long v23 = v49;
  *(_OWORD *)(a1 + 64) = v40;
  *(_OWORD *)(a1 + 80) = v23;
  *(_OWORD *)(a1 + 32) = v21;
  *(_OWORD *)(a1 + 48) = v22;
  long long v24 = *(_OWORD *)v42;
  long long v25 = *(_OWORD *)&v42[16];
  long long v26 = v44;
  *(_OWORD *)(a1 + 128) = v43;
  *(_OWORD *)(a1 + 144) = v26;
  *(_OWORD *)(a1 + 96) = v24;
  *(_OWORD *)(a1 + 112) = v25;
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = KeyPath;
  *(void *)(a1 + 24) = v8;
  uint64_t v45 = v10;
  uint64_t v46 = 0x4010000000000000;
  char v47 = 0;
  *(void *)&long long v49 = v11;
  *((void *)&v49 + 1) = v12;
  char v50 = v13;
  long long v52 = v14;
  char v53 = v18;
  long long v55 = v15;
  char v56 = v19;
  long long v58 = v16;
  char v59 = v20;
  uint64_t v61 = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23CEE8C18((uint64_t)&v38);
  sub_23CEE8C8C((uint64_t)&v45);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23CEE5B20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = sub_23D004B08();
  sub_23CEE8D00();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_23D005228();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = sub_23D0051E8();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_23CEE7DE0(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_23CEE8444(v7, v9, v13);
  swift_bridgeObjectRetain();
  sub_23CEE7DE0(v7, v9, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_23D005228();
  uint64_t v16 = v15;
  LOBYTE(v4) = v17 & 1;
  *(void *)a1 = v20;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 80) = v15;
  *(unsigned char *)(a1 + 88) = v17 & 1;
  *(void *)(a1 + 96) = v18;
  sub_23CEE8444(v7, v9, v13);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v14, v16, v4);
  swift_bridgeObjectRetain();
  sub_23CEE7DE0(v14, v16, v4);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v7, v9, v13);
  return swift_bridgeObjectRelease();
}

double sub_23CEE5CDC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_23D004AF8();
  sub_23CEE5818((uint64_t)v9);
  *(_OWORD *)&v10[119] = v9[7];
  *(_OWORD *)&v10[103] = v9[6];
  *(_OWORD *)&v10[55] = v9[3];
  *(_OWORD *)&v10[39] = v9[2];
  *(_OWORD *)&v10[135] = v9[8];
  *(_OWORD *)&v10[151] = v9[9];
  *(_OWORD *)&v10[71] = v9[4];
  *(_OWORD *)&v10[87] = v9[5];
  *(_OWORD *)&v10[7] = v9[0];
  *(_OWORD *)&v10[23] = v9[1];
  long long v3 = *(_OWORD *)&v10[96];
  *(_OWORD *)(a1 + 129) = *(_OWORD *)&v10[112];
  long long v4 = *(_OWORD *)&v10[144];
  *(_OWORD *)(a1 + 145) = *(_OWORD *)&v10[128];
  *(_OWORD *)(a1 + 161) = v4;
  long long v5 = *(_OWORD *)&v10[32];
  *(_OWORD *)(a1 + 65) = *(_OWORD *)&v10[48];
  long long v6 = *(_OWORD *)&v10[80];
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v10[64];
  *(_OWORD *)(a1 + 97) = v6;
  *(_OWORD *)(a1 + 113) = v3;
  double result = *(double *)v10;
  long long v8 = *(_OWORD *)&v10[16];
  *(_OWORD *)(a1 + 17) = *(_OWORD *)v10;
  *(_OWORD *)(a1 + 33) = v8;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0x4028000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 176) = *(void *)&v10[159];
  *(_OWORD *)(a1 + 49) = v5;
  return result;
}

uint64_t sub_23CEE5DC8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD18);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD20);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)char v12 = sub_23D004C58();
  *((void *)v12 + 1) = 0x4040000000000000;
  v12[16] = 0;
  char v17 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD28) + 44)];
  v23[8] = a2 & 1;
  v23[0] = a4 & 1;
  sub_23CEE5FD0(a1, a2 & 1, a3, a4 & 1, v17);
  LOBYTE(a3) = sub_23D005078();
  sub_23CEE82CC((uint64_t)v12, (uint64_t)v16, &qword_268BCCD18);
  uint64_t v18 = &v16[*(int *)(v14 + 44)];
  *uint64_t v18 = a3;
  *(_OWORD *)(v18 + 8) = 0u;
  *(_OWORD *)(v18 + 24) = 0u;
  v18[40] = 1;
  sub_23CEE8BB4((uint64_t)v12, &qword_268BCCD18);
  if (qword_268BCCC10 != -1) {
    swift_once();
  }
  double v19 = *(double *)&qword_268BDACE8;
  uint64_t v20 = sub_23D005778();
  sub_23CF58A0C(0.0, 1, 0.0, 1, v19, 0, 0.0, 1, a5, 0.0, 1, 0.0, 1, v20, v21);
  return sub_23CEE8BB4((uint64_t)v16, &qword_268BCCD20);
}

uint64_t sub_23CEE5FD0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, void *a5@<X8>)
{
  LODWORD(v74) = a4;
  uint64_t v72 = a3;
  LODWORD(v71) = a2;
  uint64_t v70 = a1;
  v73 = a5;
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD30);
  uint64_t v79 = *(void *)(v80 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v80);
  v78 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  v77 = (char *)&v63 - v7;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD38);
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  v67 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD40);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v75 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v76 = (uint64_t)&v63 - v13;
  sub_23D004BC8();
  uint64_t v14 = sub_23D005208();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_23D0050D8();
  uint64_t v19 = sub_23D0051F8();
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  swift_release();
  char v26 = v23 & 1;
  sub_23CEE7DE0(v14, v16, v18);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v86 = v19;
  uint64_t v87 = v21;
  LOBYTE(v88) = v23 & 1;
  uint64_t v89 = v25;
  uint64_t v90 = KeyPath;
  char v91 = 1;
  sub_23D005138();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD48);
  sub_23CEE8024();
  uint64_t v28 = v67;
  sub_23D005288();
  sub_23CEE7DE0(v19, v21, v26);
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v25) = sub_23D005068();
  sub_23D004578();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = v68;
  uint64_t v38 = v75;
  uint64_t v39 = v69;
  (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v75, v28, v69);
  uint64_t v40 = v38 + *(int *)(v10 + 44);
  uint64_t v41 = v38;
  *(unsigned char *)uint64_t v40 = v25;
  *(void *)(v40 + 8) = v30;
  *(void *)(v40 + 16) = v32;
  *(void *)(v40 + 24) = v34;
  *(void *)(v40 + 32) = v36;
  *(unsigned char *)(v40 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v39);
  uint64_t v42 = v76;
  sub_23CEE83D8(v38, v76, &qword_268BCCD40);
  uint64_t v43 = v70;
  uint64_t v81 = v70;
  LOBYTE(v25) = v71 & 1;
  char v82 = v71 & 1;
  uint64_t v44 = v72;
  uint64_t v83 = v72;
  LOBYTE(v21) = v74 & 1;
  char v84 = v74 & 1;
  sub_23D005058();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD68);
  sub_23CEE8D90(&qword_268BCCD70, &qword_268BCCD68);
  uint64_t v45 = v77;
  sub_23D0045C8();
  uint64_t v71 = sub_23D004C68();
  LOBYTE(v86) = v25;
  char v85 = v21;
  sub_23CEE6D44(v43, v25, v44, v21, (uint64_t)&v86);
  uint64_t v66 = v86;
  uint64_t v65 = v87;
  uint64_t v64 = v88;
  uint64_t v46 = v90;
  uint64_t v63 = v89;
  uint64_t v72 = v92;
  uint64_t v74 = v93;
  LODWORD(v70) = v94;
  uint64_t v69 = v95;
  v67 = v96;
  LODWORD(v68) = v97;
  LOBYTE(v37) = v91;
  sub_23CEE82CC(v42, v38, &qword_268BCCD40);
  char v47 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  v48 = v78;
  long long v49 = v45;
  uint64_t v50 = v80;
  v47(v78, v49, v80);
  v51 = v73;
  void *v73 = 0x4040000000000000;
  *((unsigned char *)v51 + 8) = 0;
  long long v52 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD78);
  sub_23CEE82CC(v41, (uint64_t)v51 + v52[12], &qword_268BCCD40);
  v47((char *)v51 + v52[16], v48, v50);
  char v53 = (char *)v51 + v52[20];
  *(void *)char v53 = 0;
  v53[8] = 1;
  v54 = (char *)v51 + v52[24];
  *(void *)v54 = v71;
  *((void *)v54 + 1) = 0x4028000000000000;
  v54[16] = 0;
  uint64_t v55 = v66;
  uint64_t v56 = v65;
  *((void *)v54 + 3) = v66;
  *((void *)v54 + 4) = v56;
  uint64_t v57 = v63;
  *((void *)v54 + 5) = v64;
  *((void *)v54 + 6) = v57;
  *((void *)v54 + 7) = v46;
  v54[64] = v37;
  uint64_t v58 = v74;
  *((void *)v54 + 9) = v72;
  *((void *)v54 + 10) = v58;
  v54[88] = v70;
  char v59 = v67;
  *((void *)v54 + 12) = v69;
  *((void *)v54 + 13) = v59;
  v54[112] = v68;
  sub_23CEE812C(v55, v56);
  v60 = *(void (**)(char *, uint64_t))(v79 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v61 = v80;
  v60(v77, v80);
  sub_23CEE8BB4(v76, &qword_268BCCD40);
  sub_23CEE8170(v55, v56);
  swift_release();
  swift_bridgeObjectRelease();
  v60(v78, v61);
  return sub_23CEE8BB4(v75, &qword_268BCCD40);
}

double sub_23CEE6750@<D0>(char a1@<W1>, char a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_23D004C68();
  v14[0] = a1 & 1;
  LOBYTE(v12[0]) = a2 & 1;
  sub_23CEE6874(a1 & 1, (uint64_t)v12);
  *(_OWORD *)&v14[119] = v12[7];
  *(_OWORD *)&v14[103] = v12[6];
  *(_OWORD *)&v14[55] = v12[3];
  *(_OWORD *)&v14[39] = v12[2];
  *(_OWORD *)&v14[135] = v12[8];
  v14[151] = v13;
  *(_OWORD *)&v14[71] = v12[4];
  *(_OWORD *)&v14[87] = v12[5];
  *(_OWORD *)&v14[7] = v12[0];
  *(_OWORD *)&v14[23] = v12[1];
  long long v7 = *(_OWORD *)&v14[112];
  *(_OWORD *)(a3 + 113) = *(_OWORD *)&v14[96];
  *(_OWORD *)(a3 + 129) = v7;
  *(_OWORD *)(a3 + 145) = *(_OWORD *)&v14[128];
  long long v8 = *(_OWORD *)&v14[48];
  *(_OWORD *)(a3 + 49) = *(_OWORD *)&v14[32];
  *(_OWORD *)(a3 + 65) = v8;
  long long v9 = *(_OWORD *)&v14[80];
  *(_OWORD *)(a3 + 81) = *(_OWORD *)&v14[64];
  *(_OWORD *)(a3 + 97) = v9;
  double result = *(double *)v14;
  long long v11 = *(_OWORD *)&v14[16];
  *(_OWORD *)(a3 + 17) = *(_OWORD *)v14;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = 0x4038000000000000;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 161) = *(void *)&v14[144];
  *(_OWORD *)(a3 + 33) = v11;
  return result;
}

double sub_23CEE6874@<D0>(char a1@<W1>, uint64_t a2@<X8>)
{
  char v3 = a1 & 1;
  uint64_t v4 = swift_retain();
  uint64_t v5 = sub_23CF396CC(v4, v3);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v30 = v5;
  sub_23CEE8284(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DD8();
  swift_release();
  char v6 = *(unsigned char *)(v5 + 18);
  swift_release();
  if (v6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = 0x552073626D756854;
    unint64_t v15 = 0xE900000000000070;
    unint64_t v16 = 0xD000000000000027;
    *(void *)&long long v17 = 0x800000023D00FA30;
    *((void *)&v17 + 1) = 0xD000000000000019;
    unint64_t v18 = 0x800000023D00FA60;
    *(void *)&long long v19 = 0x442073626D756854;
    *((void *)&v19 + 1) = 0xEB000000006E776FLL;
    unint64_t v20 = 0xD00000000000002BLL;
    unint64_t v21 = 0x800000023D00FA80;
    unint64_t v22 = 0xD00000000000001BLL;
    unint64_t v23 = 0x800000023D00FAB0;
    uint64_t v24 = 0x696F50206E726145;
    unint64_t v25 = 0xEB0000000073746ELL;
    unint64_t v26 = 0xD00000000000002ALL;
    unint64_t v27 = 0x800000023D00FAD0;
    unint64_t v28 = 0xD000000000000012;
    unint64_t v29 = 0x800000023D00FB00;
    sub_23CEE83CC((uint64_t)&v14);
  }
  else
  {
    uint64_t v7 = sub_23D004C58();
    sub_23CEE6BE4((uint64_t)&v30);
    uint64_t v14 = v7;
    unint64_t v15 = 0;
    LOBYTE(v16) = 1;
    long long v17 = v30;
    LOBYTE(v18) = v31[0];
    long long v19 = *(_OWORD *)&v31[8];
    LOBYTE(v20) = v31[24];
    unint64_t v21 = v32;
    LOBYTE(v22) = BYTE8(v32);
    sub_23CEE843C((uint64_t)&v14);
  }
  sub_23CEE83D8((uint64_t)&v14, (uint64_t)&v13, &qword_268BCCD98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCDA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCDA8);
  sub_23CEE8D90(&qword_268BCCDB0, &qword_268BCCDA0);
  sub_23CEE8D90(&qword_268BCCDB8, &qword_268BCCDA8);
  sub_23D004D88();
  long long v8 = v36;
  *(_OWORD *)(a2 + 96) = v35;
  *(_OWORD *)(a2 + 112) = v8;
  *(_OWORD *)(a2 + 128) = v37;
  *(unsigned char *)(a2 + 144) = v38;
  long long v9 = v32;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)&v31[16];
  *(_OWORD *)(a2 + 48) = v9;
  long long v10 = v34;
  *(_OWORD *)(a2 + 64) = v33;
  *(_OWORD *)(a2 + 80) = v10;
  double result = *(double *)&v30;
  long long v12 = *(_OWORD *)v31;
  *(_OWORD *)a2 = v30;
  *(_OWORD *)(a2 + 16) = v12;
  return result;
}

uint64_t sub_23CEE6BE4@<X0>(uint64_t a1@<X8>)
{
  sub_23D004BC8();
  uint64_t v2 = sub_23D005208();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_23D005168();
  uint64_t v7 = sub_23D0051F8();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_23CEE7DE0(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = KeyPath;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  sub_23CEE8444(v7, v9, v11 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23CEE7DE0(v7, v9, v11 & 1);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23CEE6D44@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  int v9 = a2 & 1;
  uint64_t v10 = swift_retain();
  uint64_t v11 = sub_23CF396CC(v10, v9);
  swift_release();
  swift_getKeyPath();
  sub_23CEE8284(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DD8();
  swift_release();
  int v12 = *(unsigned __int8 *)(v11 + 18);
  swift_release();
  if (v12 == 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    unint64_t v15 = 0;
    uint64_t v16 = 0;
    char v17 = 0;
  }
  else
  {
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a1;
    *(unsigned char *)(v16 + 24) = v9 != 0;
    *(void *)(v16 + 32) = a3;
    *(unsigned char *)(v16 + 40) = a4 & 1;
    swift_retain();
    swift_retain();
    char v17 = 1;
    unint64_t v15 = sub_23CEE821C;
    uint64_t v14 = 0xE700000000000000;
    uint64_t v13 = 0x776F4E20746F4ELL;
  }
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(unsigned char *)(v18 + 24) = v9 != 0;
  *(void *)(v18 + 32) = a3;
  *(unsigned char *)(v18 + 40) = a4 & 1;
  *(void *)a5 = v13;
  *(void *)(a5 + 8) = v14;
  *(void *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = v15;
  *(void *)(a5 + 32) = v16;
  *(unsigned char *)(a5 + 40) = v17;
  *(void *)(a5 + 48) = 0x65756E69746E6F43;
  *(void *)(a5 + 56) = 0xE800000000000000;
  *(unsigned char *)(a5 + 64) = 0;
  *(void *)(a5 + 72) = sub_23CEE81C0;
  *(void *)(a5 + 80) = v18;
  *(unsigned char *)(a5 + 88) = 0;
  swift_retain();
  sub_23CEE812C(v13, v14);
  swift_retain();
  return sub_23CEE8170(v13, v14);
}

void sub_23CEE6F78(uint64_t a1, char a2, uint64_t a3, char a4)
{
  char v5 = a2 & 1;
  uint64_t v6 = sub_23D004708();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD88);
  MEMORY[0x270FA5388](v10 - 8);
  int v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_23CF396CC(v13, v5);
  swift_release();
  swift_getKeyPath();
  uint64_t v26 = v14;
  char v27 = 1;
  uint64_t v28 = v14;
  sub_23CEE8284(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DC8();
  swift_release();
  swift_release();
  id v15 = objc_msgSend(self, sel_mainBundle);
  id v16 = objc_msgSend(v15, sel_bundleIdentifier);

  if (v16)
  {
    uint64_t v17 = sub_23D005948();
    uint64_t v19 = v18;

    if (v17 == 0xD00000000000001ALL && v19 == 0x800000023D00FA10)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      id v21 = objc_msgSend(self, sel_sharedApplication);
      objc_msgSend(v21, sel_suspend);

      return;
    }
    char v20 = sub_23D006218();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_6;
    }
  }
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_23CF396E8(v22, a4 & 1);
  swift_release();
  swift_getKeyPath();
  uint64_t v28 = v23;
  sub_23CEE8284(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  uint64_t v24 = v23 + OBJC_IVAR____TtC8Feedback15BatchController__dismissHandler;
  swift_beginAccess();
  sub_23CEE82CC(v24, (uint64_t)v12, &qword_268BCCD88);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6))
  {
    sub_23CEE8BB4((uint64_t)v12, &qword_268BCCD88);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(v9, v12, v6);
    sub_23CEE8BB4((uint64_t)v12, &qword_268BCCD88);
    sub_23D0046F8();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_release();
}

uint64_t sub_23CEE7390(uint64_t a1, char a2)
{
  char v2 = a2 & 1;
  uint64_t v3 = swift_retain();
  uint64_t v4 = sub_23CF396CC(v3, v2);
  swift_release();
  swift_getKeyPath();
  sub_23CEE8284(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DD8();
  swift_release();
  char v5 = *(unsigned char *)(v4 + 18);
  uint64_t v6 = swift_release();
  if (v5)
  {
    uint64_t v7 = swift_retain();
    sub_23CF396CC(v7, v2);
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    sub_23D003DC8();
    swift_release();
    swift_release();
    uint64_t v9 = swift_retain();
    sub_23CF396CC(v9, v2);
    swift_release();
    uint64_t v10 = swift_getKeyPath();
    MEMORY[0x270FA5388](v10);
    sub_23D003DC8();
    swift_release();
  }
  else
  {
    MEMORY[0x270FA5388](v6);
    sub_23D005788();
    sub_23D004798();
  }
  return swift_release();
}

uint64_t sub_23CEE7638(uint64_t a1, char a2)
{
  char v2 = a2 & 1;
  uint64_t v3 = swift_retain();
  sub_23CF396CC(v3, v2);
  swift_release();
  swift_getKeyPath();
  sub_23CEE8284(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DC8();
  swift_release();
  return swift_release();
}

uint64_t sub_23CEE7738()
{
  return sub_23D0052E8();
}

uint64_t sub_23CEE7754@<X0>(uint64_t a1@<X8>)
{
  return sub_23CEE5DC8(*(void *)v1, *(unsigned char *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_23CEE7774@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CEE8284(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC8Feedback15BatchController__dismissHandler;
  swift_beginAccess();
  return sub_23CEE82CC(v4, a2, &qword_268BCCD88);
}

uint64_t sub_23CEE7848(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD88);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23CEE82CC(a1, (uint64_t)v6, &qword_268BCCD88);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_23CEE8284(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DC8();
  swift_release();
  return sub_23CEE8BB4((uint64_t)v6, &qword_268BCCD88);
}

uint64_t sub_23CEE7988(uint64_t a1, uint64_t a2)
{
  return sub_23CEE7AF4(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_23CEE79A0(uint64_t a1, id *a2)
{
  uint64_t result = sub_23D005928();
  *a2 = 0;
  return result;
}

uint64_t sub_23CEE7A18(uint64_t a1, id *a2)
{
  char v3 = sub_23D005938();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_23CEE7A98@<X0>(uint64_t *a1@<X8>)
{
  sub_23D005948();
  uint64_t v2 = sub_23D005918();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23CEE7ADC(uint64_t a1, uint64_t a2)
{
  return sub_23CEE7AF4(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_23CEE7AF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_23D005948();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23CEE7B38()
{
  sub_23D005948();
  sub_23D0059D8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23CEE7B8C()
{
  sub_23D005948();
  sub_23D0062C8();
  sub_23D0059D8();
  uint64_t v0 = sub_23D0062F8();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_23CEE7C00(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_23CEE7C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_23CEE7C20@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_23CEE7C34@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_23CEE7C48@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23CEE7C5C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_23CEE7C8C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_23CEE7CB8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_23CEE7CDC(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_23CEE7CF0(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_23CEE7D04(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_23CEE7D18@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23CEE7D2C(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_23CEE7D40(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_23CEE7D54(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_23CEE7D68()
{
  return *v0 == 0;
}

void *sub_23CEE7D78(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_23CEE7D8C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_23CEE7DE0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23CEE7DF0()
{
  uint64_t v0 = sub_23D005948();
  uint64_t v2 = v1;
  if (v0 == sub_23D005948() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_23D006218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_23CEE7E7C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23CEE7E90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_23CEE8B7C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_23CEE7ED0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_23CEE7EE0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_23CEE7EEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_23D005918();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_23CEE7F34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_23D005948();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23CEE7F60(uint64_t a1)
{
  uint64_t v2 = sub_23CEE8284(&qword_268BCCF78, type metadata accessor for Key);
  uint64_t v3 = sub_23CEE8284(&qword_268BCCF80, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

unint64_t sub_23CEE8024()
{
  unint64_t result = qword_268BCCD50;
  if (!qword_268BCCD50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCCD48);
    sub_23CEE8D90(&qword_268BCCD58, &qword_268BCCD60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCCD50);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

double sub_23CEE810C@<D0>(uint64_t a1@<X8>)
{
  return sub_23CEE6750(*(unsigned char *)(v1 + 24), *(unsigned char *)(v1 + 40), a1);
}

uint64_t sub_23CEE812C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23CEE8170(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_23CEE81C0()
{
  return sub_23CEE8234((uint64_t (*)(void))sub_23CEE7390);
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t sub_23CEE821C()
{
  return sub_23CEE8234((uint64_t (*)(void))sub_23CEE6F78);
}

uint64_t sub_23CEE8234(uint64_t (*a1)(void))
{
  return a1(*(void *)(v1 + 16));
}

uint64_t sub_23CEE8264()
{
  return sub_23CF51568(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_23CEE8284(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CEE82CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23CEE8330()
{
  return sub_23CF132EC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_23CEE8354()
{
  return sub_23CF148C4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_23CEE8374()
{
  return sub_23CEE7638(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_23CEE83AC()
{
  return sub_23CF51A08(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_23CEE83CC(uint64_t result)
{
  *(unsigned char *)(result + 144) = 1;
  return result;
}

uint64_t sub_23CEE83D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23CEE843C(uint64_t result)
{
  *(unsigned char *)(result + 144) = 0;
  return result;
}

uint64_t sub_23CEE8444(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for FBKBugFormRole(uint64_t a1)
{
}

void type metadata accessor for FBKStartupUI(uint64_t a1)
{
}

void type metadata accessor for FBKStartupFailure(uint64_t a1)
{
}

void sub_23CEE84A4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t destroy for Row()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Row(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Row(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for Row(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Row(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Row(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Row()
{
  return &type metadata for Row;
}

unint64_t sub_23CEE872C()
{
  unint64_t result = qword_268BCCF00;
  if (!qword_268BCCF00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCCF08);
    sub_23CEE87A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCCF00);
  }
  return result;
}

unint64_t sub_23CEE87A8()
{
  unint64_t result = qword_268BCCF10;
  if (!qword_268BCCF10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCCD20);
    sub_23CEE8D90(&qword_268BCCF18, &qword_268BCCD18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCCF10);
  }
  return result;
}

uint64_t sub_23CEE8848()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CEE8864()
{
  return sub_23CEE8284(&qword_268BCCF20, type metadata accessor for FBKStartupFailure);
}

uint64_t sub_23CEE88AC()
{
  return sub_23CEE8284(&qword_268BCCF28, type metadata accessor for FBKStartupFailure);
}

uint64_t sub_23CEE88F4()
{
  return sub_23CEE8284(&qword_268BCCF30, type metadata accessor for FBKStartupFailure);
}

uint64_t sub_23CEE893C()
{
  return sub_23CEE8284(&qword_268BCCF38, type metadata accessor for FBKStartupFailure);
}

uint64_t sub_23CEE8984()
{
  return sub_23CEE8284(&qword_268BCCF40, type metadata accessor for FBKStartupUI);
}

uint64_t sub_23CEE89CC()
{
  return sub_23CEE8284(&qword_268BCCF48, type metadata accessor for FBKStartupUI);
}

uint64_t sub_23CEE8A14()
{
  return sub_23CEE8284(&qword_268BCCF50, type metadata accessor for FBKStartupUI);
}

uint64_t sub_23CEE8A5C()
{
  return sub_23CEE8284(&qword_268BCCF58, type metadata accessor for FBKStartupUI);
}

uint64_t sub_23CEE8AA4()
{
  return sub_23CEE8284(&qword_268BCCF60, type metadata accessor for Key);
}

uint64_t sub_23CEE8AEC()
{
  return sub_23CEE8284(&qword_268BCCF68, type metadata accessor for Key);
}

uint64_t sub_23CEE8B34()
{
  return sub_23CEE8284(&qword_268BCCF70, type metadata accessor for Key);
}

uint64_t sub_23CEE8B7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_23CEE8BB4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23CEE8C18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  sub_23CEE8444(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  swift_bridgeObjectRetain();
  sub_23CEE8444(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23CEE8C8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 104);
  char v4 = *(unsigned char *)(a1 + 112);
  sub_23CEE7DE0(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23CEE8D00()
{
  unint64_t result = qword_268BCCF90;
  if (!qword_268BCCF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCCF90);
  }
  return result;
}

uint64_t sub_23CEE8D54()
{
  return sub_23CEE8D90(&qword_268BCCF98, (uint64_t *)&unk_268BCCFA0);
}

uint64_t sub_23CEE8D90(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CEE8E0C()
{
  return sub_23CEE8264();
}

BOOL static AgreementConsentView.ConsentResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AgreementConsentView.ConsentResult.hash(into:)()
{
  return sub_23D0062D8();
}

uint64_t AgreementConsentView.ConsentResult.hashValue.getter()
{
  return sub_23D0062F8();
}

BOOL sub_23CEE8ED4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_23CEE8EEC()
{
  return sub_23D0062F8();
}

uint64_t sub_23CEE8F34()
{
  return sub_23D0062D8();
}

uint64_t sub_23CEE8F60()
{
  return sub_23D0062F8();
}

id AgreementConsentView.pendingConsent.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for AgreementConsentView() + 24) + 8);

  return v1;
}

uint64_t type metadata accessor for AgreementConsentView()
{
  uint64_t result = qword_268BCD070;
  if (!qword_268BCD070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_23CEE9028(void **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (id *)(a2 + *(int *)(type metadata accessor for AgreementConsentView() + 24) + 8);

  objc_storeStrong(v3, v2);
}

void AgreementConsentView.pendingConsent.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AgreementConsentView() + 24);

  *(void *)(v3 + 8) = a1;
}

uint64_t (*AgreementConsentView.pendingConsent.modify())()
{
  return nullsub_1;
}

uint64_t AgreementConsentView.$pendingConsent.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for AgreementConsentView() + 24));
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  unint64_t v4 = sub_23CEE9198();
  uint64_t v5 = sub_23CEED5A8((unint64_t *)&qword_268BCD018, (void (*)(uint64_t))sub_23CEE9198);

  return MEMORY[0x270EFFB88](v2, v3, v4, v5);
}

unint64_t sub_23CEE9198()
{
  unint64_t result = qword_268BCD010;
  if (!qword_268BCD010)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268BCD010);
  }
  return result;
}

uint64_t sub_23CEE91D8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AgreementConsentView() + 32));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_23CEED418;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;

  return sub_23CEE935C(v4);
}

uint64_t sub_23CEE926C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_23CEED3F0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for AgreementConsentView() + 32));
  uint64_t v8 = *v7;
  sub_23CEE935C(v3);
  uint64_t result = sub_23CEE93B4(v8);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t AgreementConsentView.completion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AgreementConsentView() + 32));
  sub_23CEE935C(v1);
  return v1;
}

uint64_t sub_23CEE935C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t AgreementConsentView.completion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for AgreementConsentView() + 32));
  uint64_t result = sub_23CEE93B4(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t sub_23CEE93B4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t (*AgreementConsentView.completion.modify())()
{
  return nullsub_1;
}

uint64_t AgreementConsentView.init(consent:completion:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (int *)type metadata accessor for AgreementConsentView();
  uint64_t v7 = (uint64_t *)((char *)a3 + v6[5]);
  *uint64_t v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD028);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (char *)a3 + v6[7];
  sub_23D0055B8();
  *uint64_t v8 = v13;
  *((void *)v8 + 1) = v14;
  uint64_t v9 = (uint64_t *)((char *)a3 + v6[8]);
  uint64_t v10 = (uint64_t *)((char *)a3 + v6[6]);
  sub_23CEE9198();
  sub_23CEED5A8((unint64_t *)&qword_268BCD018, (void (*)(uint64_t))sub_23CEE9198);
  uint64_t result = sub_23D0047F8();
  *uint64_t v10 = result;
  v10[1] = v12;
  *uint64_t v9 = a1;
  v9[1] = a2;
  return result;
}

uint64_t AgreementConsentView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v43 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD030);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD038);
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD040);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD048);
  MEMORY[0x270FA5388](v13);
  id v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = sub_23D004C58();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD050);
  sub_23CEE98AC(v2, (uint64_t *)&v5[*(int *)(v16 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_23CEE82CC((uint64_t)v5, (uint64_t)v9, &qword_268BCD030);
  uint64_t v18 = &v9[*(int *)(v7 + 44)];
  *(void *)uint64_t v18 = KeyPath;
  v18[8] = 1;
  sub_23CEE8BB4((uint64_t)v5, &qword_268BCD030);
  LOBYTE(v5) = sub_23D005088();
  char v19 = sub_23D0050B8();
  sub_23D0050B8();
  if (sub_23D0050B8() != v5) {
    char v19 = sub_23D0050B8();
  }
  sub_23D004578();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_23CEE82CC((uint64_t)v9, (uint64_t)v12, &qword_268BCD038);
  uint64_t v28 = &v12[*(int *)(v10 + 36)];
  *uint64_t v28 = v19;
  *((void *)v28 + 1) = v21;
  *((void *)v28 + 2) = v23;
  *((void *)v28 + 3) = v25;
  *((void *)v28 + 4) = v27;
  v28[40] = 0;
  sub_23CEE8BB4((uint64_t)v9, &qword_268BCD038);
  unsigned __int8 v29 = sub_23D0050A8();
  unsigned __int8 v30 = sub_23D0050C8();
  char v31 = sub_23D0050B8();
  sub_23D0050B8();
  if (sub_23D0050B8() != v29) {
    char v31 = sub_23D0050B8();
  }
  sub_23D0050B8();
  if (sub_23D0050B8() != v30) {
    char v31 = sub_23D0050B8();
  }
  sub_23D004578();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_23CEE82CC((uint64_t)v12, (uint64_t)v15, &qword_268BCD040);
  uint64_t v40 = &v15[*(int *)(v13 + 36)];
  *uint64_t v40 = v31;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_23CEE8BB4((uint64_t)v12, &qword_268BCD040);
  return sub_23CEE83D8((uint64_t)v15, v43, &qword_268BCD048);
}

void sub_23CEE98AC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v162 = a2;
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0D0);
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  v158 = (char *)&v128 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0D8);
  uint64_t v4 = MEMORY[0x270FA5388](v157);
  v161 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v170 = (uint64_t)&v128 - v6;
  uint64_t v151 = sub_23D004EF8();
  uint64_t v149 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151);
  v148 = (char *)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AgreementConsentView();
  uint64_t v140 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v141 = v9;
  uint64_t v166 = (uint64_t)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0E0);
  uint64_t v144 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  v143 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0E8);
  uint64_t v152 = *(void *)(v153 - 8);
  MEMORY[0x270FA5388](v153);
  v150 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0F0);
  MEMORY[0x270FA5388](v147);
  v156 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0F8);
  uint64_t v13 = MEMORY[0x270FA5388](v155);
  uint64_t v169 = (uint64_t)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v154 = (uint64_t)&v128 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v168 = (uint64_t)&v128 - v17;
  uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD100);
  uint64_t v138 = *(void *)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  v130 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCE600);
  MEMORY[0x270FA5388](v19 - 8);
  v135 = (char *)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_23D003CE8();
  uint64_t v136 = *(void *)(v137 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v137);
  v134 = (char *)&v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  v129 = (char *)&v128 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD108);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v167 = (uint64_t)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v173 = (uint64_t)&v128 - v27;
  uint64_t v133 = sub_23D004DB8();
  uint64_t v132 = *(void *)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  unsigned __int8 v29 = (char *)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD110);
  uint64_t v30 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v32 = (char *)&v128 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD118);
  uint64_t v164 = *(void *)(v33 - 8);
  uint64_t v165 = v33;
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  v163 = (char *)&v128 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)&v128 - v37;
  MEMORY[0x270FA5388](v36);
  v172 = (char *)&v128 - v39;
  uint64_t v40 = sub_23D004828();
  uint64_t v41 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v128 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = v8;
  sub_23CF3974C((uint64_t)v43);
  LOBYTE(v8) = sub_23D004818();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  if ((v8 & 1) == 0)
  {
    uint64_t v46 = *(void **)(a1 + *(int *)(v171 + 24) + 8);
    sub_23CEE9198();
    sub_23CEED5A8((unint64_t *)&qword_268BCD018, (void (*)(uint64_t))sub_23CEE9198);
    id v47 = v46;
    uint64_t v44 = sub_23D0047F8();
  }
  uint64_t v142 = v44;
  v146 = v45;
  MEMORY[0x270FA5388](v44);
  *(&v128 - 2) = a1;
  sub_23D005058();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD120);
  sub_23CEE8D90(&qword_268BCD128, &qword_268BCD120);
  sub_23D0045C8();
  sub_23D004DA8();
  unsigned __int8 v48 = sub_23D005058();
  sub_23D005048();
  sub_23D005048();
  if (sub_23D005048() != v48) {
    sub_23D005048();
  }
  sub_23CEE8D90(&qword_268BCD130, &qword_268BCD110);
  uint64_t v49 = v131;
  sub_23D0053D8();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v29, v133);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v49);
  (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v172, v38, v165);
  id v50 = objc_msgSend(*(id *)(a1 + *(int *)(v171 + 24) + 8), sel_learnMoreURL);
  uint64_t v51 = a1;
  uint64_t v52 = v166;
  char v53 = v134;
  if (v50)
  {
    v54 = v50;
    sub_23D003CA8();

    uint64_t v55 = v136;
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v136 + 32);
    uint64_t v57 = (uint64_t)v135;
    uint64_t v58 = v137;
    v56(v135, v53, v137);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v57, 0, 1, v58);
    int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v57, 1, v58);
    uint64_t v60 = v138;
    if (v59 != 1)
    {
      uint64_t v133 = v51;
      uint64_t v61 = v129;
      v56(v129, (char *)v57, v58);
      sub_23D004BC8();
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v53, v61, v58);
      v62 = v130;
      sub_23D005198();
      uint64_t v63 = v61;
      uint64_t v51 = v133;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v63, v58);
      uint64_t v64 = v173;
      uint64_t v65 = v139;
      (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v173, v62, v139);
      uint64_t v66 = 0;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v57 = (uint64_t)v135;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v136 + 56))(v135, 1, 1, v137);
    uint64_t v60 = v138;
  }
  sub_23CEE8BB4(v57, (uint64_t *)&unk_268BCE600);
  uint64_t v66 = 1;
  uint64_t v64 = v173;
  uint64_t v65 = v139;
LABEL_10:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v64, v66, 1, v65);
  sub_23CEED448(v51, v52);
  uint64_t v67 = *(unsigned __int8 *)(v140 + 80);
  uint64_t v68 = (v67 + 16) & ~v67;
  v141 += v68;
  uint64_t v140 = v67 | 7;
  uint64_t v69 = swift_allocObject();
  uint64_t v70 = sub_23CEED4B0(v52, v69 + v68);
  MEMORY[0x270FA5388](v70);
  *(&v128 - 2) = v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD138);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD140);
  uint64_t v72 = sub_23CEED048(&qword_268BCD148, &qword_268BCD140, (void (*)(void))sub_23CEED534);
  uint64_t v175 = v71;
  uint64_t v176 = v72;
  swift_getOpaqueTypeConformance2();
  v73 = v143;
  sub_23D0055F8();
  uint64_t v74 = v148;
  sub_23D004EE8();
  sub_23CEE8D90(&qword_268BCD160, &qword_268BCD0E0);
  sub_23CEED5A8(&qword_268BCD168, MEMORY[0x263F1A3B8]);
  uint64_t v75 = v150;
  uint64_t v76 = v145;
  uint64_t v77 = v151;
  sub_23D0052A8();
  (*(void (**)(char *, uint64_t))(v149 + 8))(v74, v77);
  (*(void (**)(char *, uint64_t))(v144 + 8))(v73, v76);
  unsigned __int8 v78 = sub_23D005098();
  char v79 = sub_23D0050B8();
  sub_23D0050B8();
  if (sub_23D0050B8() != v78) {
    char v79 = sub_23D0050B8();
  }
  sub_23D004578();
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v87 = v86;
  uint64_t v88 = v152;
  uint64_t v89 = (uint64_t)v156;
  uint64_t v90 = v153;
  (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v156, v75, v153);
  uint64_t v91 = v89 + *(int *)(v147 + 36);
  *(unsigned char *)uint64_t v91 = v79;
  *(void *)(v91 + 8) = v81;
  *(void *)(v91 + 16) = v83;
  *(void *)(v91 + 24) = v85;
  *(void *)(v91 + 32) = v87;
  *(unsigned char *)(v91 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v88 + 8))(v75, v90);
  uint64_t v92 = v51;
  uint64_t v93 = v51 + *(int *)(v171 + 28);
  uint64_t v94 = *(void *)(v93 + 8);
  LOBYTE(v175) = *(unsigned char *)v93;
  uint64_t v176 = v94;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD170);
  sub_23D0055C8();
  char v95 = v174;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v97 = swift_allocObject();
  *(unsigned char *)(v97 + 16) = v95;
  uint64_t v98 = v154;
  sub_23CEE82CC(v89, v154, &qword_268BCD0F0);
  v99 = (uint64_t *)(v98 + *(int *)(v155 + 36));
  uint64_t *v99 = KeyPath;
  v99[1] = (uint64_t)sub_23CEED608;
  v99[2] = v97;
  sub_23CEE8BB4(v89, &qword_268BCD0F0);
  uint64_t v100 = v168;
  sub_23CEE83D8(v98, v168, &qword_268BCD0F8);
  uint64_t v101 = v166;
  sub_23CEED448(v92, v166);
  uint64_t v102 = swift_allocObject();
  uint64_t v103 = sub_23CEED4B0(v101, v102 + v68);
  MEMORY[0x270FA5388](v103);
  *(&v128 - 2) = v92;
  v104 = v158;
  sub_23D0055F8();
  uint64_t v105 = *(void *)(v93 + 8);
  LOBYTE(v175) = *(unsigned char *)v93;
  uint64_t v176 = v105;
  sub_23D0055C8();
  LOBYTE(v101) = v174;
  uint64_t v106 = swift_getKeyPath();
  uint64_t v107 = swift_allocObject();
  *(unsigned char *)(v107 + 16) = v101;
  uint64_t v108 = v159;
  uint64_t v109 = (uint64_t)v161;
  uint64_t v110 = v160;
  (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v161, v104, v160);
  v111 = (uint64_t *)(v109 + *(int *)(v157 + 36));
  uint64_t *v111 = v106;
  v111[1] = (uint64_t)sub_23CEED8AC;
  v111[2] = v107;
  (*(void (**)(char *, uint64_t))(v108 + 8))(v104, v110);
  uint64_t v112 = v170;
  sub_23CEE83D8(v109, v170, &qword_268BCD0D8);
  sub_23D005778();
  sub_23D0046C8();
  uint64_t v171 = v175;
  LODWORD(v166) = v176;
  uint64_t v160 = v177;
  LODWORD(v159) = v178;
  v158 = v179;
  uint64_t v157 = v180;
  uint64_t v114 = v164;
  uint64_t v113 = v165;
  v115 = *(void (**)(char *, char *, uint64_t))(v164 + 16);
  v116 = v163;
  v115(v163, v172, v165);
  uint64_t v117 = v167;
  sub_23CEE82CC(v173, v167, &qword_268BCD108);
  sub_23CEE82CC(v100, v169, &qword_268BCD0F8);
  sub_23CEE82CC(v112, v109, &qword_268BCD0D8);
  v118 = v162;
  v119 = v146;
  uint64_t *v162 = v142;
  v118[1] = (uint64_t)v119;
  v120 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD178);
  v115((char *)v118 + v120[12], v116, v113);
  v121 = (char *)v118 + v120[16];
  *(void *)v121 = 0;
  v121[8] = 1;
  sub_23CEE82CC(v117, (uint64_t)v118 + v120[20], &qword_268BCD108);
  v122 = (char *)v118 + v120[24];
  *(void *)v122 = 0x402E000000000000;
  v122[8] = 0;
  uint64_t v123 = v169;
  sub_23CEE82CC(v169, (uint64_t)v118 + v120[28], &qword_268BCD0F8);
  sub_23CEE82CC(v109, (uint64_t)v118 + v120[32], &qword_268BCD0D8);
  v124 = (char *)v118 + v120[36];
  *(void *)v124 = 0;
  v124[8] = 1;
  *((void *)v124 + 2) = v171;
  v124[24] = v166;
  *((void *)v124 + 4) = v160;
  v124[40] = v159;
  uint64_t v125 = v157;
  *((void *)v124 + 6) = v158;
  *((void *)v124 + 7) = v125;
  id v126 = v119;
  sub_23CEE8BB4(v170, &qword_268BCD0D8);
  sub_23CEE8BB4(v168, &qword_268BCD0F8);
  sub_23CEE8BB4(v173, &qword_268BCD108);
  v127 = *(void (**)(char *, uint64_t))(v114 + 8);
  v127(v172, v113);
  sub_23CEE8BB4(v109, &qword_268BCD0D8);
  sub_23CEE8BB4(v123, &qword_268BCD0F8);
  sub_23CEE8BB4(v167, &qword_268BCD108);
  v127(v163, v113);
}

uint64_t sub_23CEEADAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_23D004828();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AgreementConsentView();
  sub_23CF3974C((uint64_t)v7);
  char v9 = sub_23D004818();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  if (v9)
  {
    uint64_t v12 = *(void **)(a1 + *(int *)(v8 + 24) + 8);
    sub_23CEE9198();
    sub_23CEED5A8((unint64_t *)&qword_268BCD018, (void (*)(uint64_t))sub_23CEE9198);
    id v13 = v12;
    uint64_t v10 = sub_23D0047F8();
    uint64_t v11 = v14;
  }
  id v15 = objc_msgSend(*(id *)(a1 + *(int *)(v8 + 24) + 8), sel_bodyText);
  sub_23D005948();

  sub_23D004BC8();
  uint64_t v16 = sub_23D005208();
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t v22 = v21;
  unsigned __int8 v23 = sub_23D0050A8();
  unsigned __int8 v24 = sub_23D0050C8();
  char v25 = sub_23D0050B8();
  sub_23D0050B8();
  if (sub_23D0050B8() != v23) {
    char v25 = sub_23D0050B8();
  }
  sub_23D0050B8();
  if (sub_23D0050B8() != v24) {
    char v25 = sub_23D0050B8();
  }
  char v26 = v20 & 1;
  sub_23D004578();
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v18;
  *(unsigned char *)(a2 + 32) = v26;
  *(void *)(a2 + 40) = v22;
  *(unsigned char *)(a2 + 48) = v25;
  *(void *)(a2 + 56) = v27;
  *(void *)(a2 + 64) = v28;
  *(void *)(a2 + 72) = v29;
  *(void *)(a2 + 80) = v30;
  *(unsigned char *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = 0x4034000000000000;
  *(unsigned char *)(a2 + 104) = 0;
  id v31 = v11;
  sub_23CEE8444(v16, v18, v26);
  swift_bridgeObjectRetain();
  sub_23CEE7DE0(v16, v18, v26);

  return swift_bridgeObjectRelease();
}

uint64_t sub_23CEEB07C(uint64_t a1)
{
  uint64_t v2 = sub_23D004708();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for AgreementConsentView();
  uint64_t v7 = (char *)(a1 + *(int *)(v6 + 28));
  char v8 = *v7;
  uint64_t v9 = *((void *)v7 + 1);
  v13[0] = v8;
  uint64_t v14 = v9;
  v12[15] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD170);
  sub_23D0055D8();
  uint64_t v10 = *(void (**)(unsigned char *))(a1 + *(int *)(v6 + 32));
  if (v10)
  {
    v13[0] = 0;
    v10(v13);
  }
  sub_23CF3970C((uint64_t)v5);
  sub_23D0046F8();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23CEEB1C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD138);
  uint64_t v3 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*(id *)(a1 + *(int *)(type metadata accessor for AgreementConsentView() + 24) + 8), sel_agreeButtonText);
  uint64_t v7 = sub_23D005948();
  uint64_t v9 = v8;

  uint64_t v38 = v7;
  uint64_t v39 = v9;
  sub_23CEE8D00();
  uint64_t v10 = sub_23D005228();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v16 = v15;
  unsigned __int8 v17 = sub_23D0050A8();
  unsigned __int8 v18 = sub_23D0050C8();
  char v19 = sub_23D0050B8();
  sub_23D0050B8();
  if (sub_23D0050B8() != v17) {
    char v19 = sub_23D0050B8();
  }
  sub_23D0050B8();
  if (sub_23D0050B8() != v18) {
    char v19 = sub_23D0050B8();
  }
  sub_23D004578();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  unsigned __int8 v28 = sub_23D005088();
  unsigned __int8 v29 = sub_23D005098();
  char v30 = sub_23D0050B8();
  sub_23D0050B8();
  if (sub_23D0050B8() != v28) {
    char v30 = sub_23D0050B8();
  }
  sub_23D0050B8();
  if (sub_23D0050B8() != v29) {
    char v30 = sub_23D0050B8();
  }
  sub_23D004578();
  char v56 = v14 & 1;
  char v55 = 0;
  char v54 = 0;
  uint64_t v38 = v10;
  uint64_t v39 = v12;
  char v40 = v14 & 1;
  uint64_t v41 = v16;
  char v42 = v19;
  uint64_t v43 = v21;
  uint64_t v44 = v23;
  uint64_t v45 = v25;
  uint64_t v46 = v27;
  char v47 = 0;
  char v48 = v30;
  uint64_t v49 = v31;
  uint64_t v50 = v32;
  uint64_t v51 = v33;
  uint64_t v52 = v34;
  char v53 = 0;
  sub_23D005148();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD140);
  sub_23CEED048(&qword_268BCD148, &qword_268BCD140, (void (*)(void))sub_23CEED534);
  sub_23D005288();
  sub_23CEE7DE0(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(v37, v5, v36);
}

uint64_t sub_23CEEB4EC(uint64_t a1)
{
  uint64_t v2 = sub_23D004708();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for AgreementConsentView();
  uint64_t v7 = a1 + *(int *)(v6 + 28);
  char v8 = *(unsigned char *)v7;
  uint64_t v9 = *(void *)(v7 + 8);
  v13[0] = v8;
  uint64_t v14 = v9;
  v12[15] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD170);
  sub_23D0055D8();
  uint64_t v10 = *(void (**)(char *))(a1 + *(int *)(v6 + 32));
  if (v10)
  {
    v13[0] = 1;
    v10(v13);
  }
  sub_23CF3970C((uint64_t)v5);
  sub_23D0046F8();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23CEEB63C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*(id *)(a1 + *(int *)(type metadata accessor for AgreementConsentView() + 24) + 8), sel_declineButtonText);
  sub_23D005948();

  sub_23CEE8D00();
  uint64_t v4 = sub_23D005228();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  sub_23D005148();
  uint64_t v9 = sub_23D0051B8();
  uint64_t v11 = v10;
  char v13 = v12;
  uint64_t v15 = v14;
  sub_23CEE7DE0(v4, v6, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v13 & 1;
  *(void *)(a2 + 24) = v15;
  return result;
}

uint64_t sub_23CEEB74C@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  id v50 = a1;
  uint64_t v51 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0B0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0B8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCF88);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0C0);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unsigned __int8 v17 = (uint64_t *)((char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  uint64_t v52 = (uint64_t)&v49 - v18;
  id v19 = objc_msgSend(a1, sel_symbolImageName);
  sub_23D005948();

  uint64_t v20 = sub_23D005578();
  uint64_t v21 = sub_23D005128();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v12, 1, 1, v21);
  uint64_t v22 = sub_23D005158();
  sub_23CEE8BB4((uint64_t)v12, &qword_268BCCF88);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = sub_23D0054E8();
  sub_23D004C78();
  uint64_t v25 = sub_23D004C88();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 0, 1, v25);
  uint64_t v26 = swift_getKeyPath();
  sub_23CEE82CC(v9, (uint64_t)v6 + *(int *)(v4 + 36), &qword_268BCD0B8);
  *uint64_t v6 = v26;
  sub_23CEE82CC((uint64_t)v6, (uint64_t)v17 + *(int *)(v14 + 44), &qword_268BCD0B0);
  *unsigned __int8 v17 = v20;
  v17[1] = KeyPath;
  v17[2] = v22;
  v17[3] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23CEE8BB4((uint64_t)v6, &qword_268BCD0B0);
  sub_23CEE8BB4(v9, &qword_268BCD0B8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23CEE83D8((uint64_t)v17, v52, &qword_268BCD0C0);
  id v27 = objc_msgSend(v50, sel_title);
  uint64_t v28 = sub_23D005948();
  uint64_t v30 = v29;

  uint64_t v53 = v28;
  uint64_t v54 = v30;
  sub_23CEE8D00();
  uint64_t v31 = sub_23D005228();
  uint64_t v33 = v32;
  LOBYTE(KeyPath) = v34 & 1;
  sub_23D005118();
  uint64_t v35 = sub_23D0051F8();
  uint64_t v37 = v36;
  LOBYTE(v9) = v38;
  swift_release();
  sub_23CEE7DE0(v31, v33, KeyPath);
  swift_bridgeObjectRelease();
  sub_23D005138();
  uint64_t v39 = sub_23D0051B8();
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  LOBYTE(v14) = v44 & 1;
  sub_23CEE7DE0(v35, v37, v9 & 1);
  swift_bridgeObjectRelease();
  LOBYTE(v30) = sub_23D005078();
  uint64_t v45 = v52;
  sub_23CEE82CC(v52, (uint64_t)v17, &qword_268BCD0C0);
  uint64_t v46 = v51;
  sub_23CEE82CC((uint64_t)v17, v51, &qword_268BCD0C0);
  uint64_t v47 = v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0C8) + 48);
  *(void *)uint64_t v47 = v39;
  *(void *)(v47 + 8) = v41;
  *(unsigned char *)(v47 + 16) = v14;
  *(void *)(v47 + 24) = v43;
  *(unsigned char *)(v47 + 32) = v30;
  *(_OWORD *)(v47 + 40) = 0u;
  *(_OWORD *)(v47 + 56) = 0u;
  *(unsigned char *)(v47 + 72) = 1;
  sub_23CEE8444(v39, v41, v14);
  swift_bridgeObjectRetain();
  sub_23CEE8BB4(v45, &qword_268BCD0C0);
  sub_23CEE7DE0(v39, v41, v14);
  swift_bridgeObjectRelease();
  return sub_23CEE8BB4((uint64_t)v17, &qword_268BCD0C0);
}

uint64_t sub_23CEEBC54@<X0>(uint64_t a1@<X8>)
{
  return sub_23CEEB74C(*(void **)(v1 + 8), a1);
}

uint64_t sub_23CEEBC5C()
{
  return sub_23D004A68();
}

uint64_t sub_23CEEBC80()
{
  return sub_23D004A68();
}

uint64_t sub_23CEEBCA4()
{
  return sub_23D004958();
}

uint64_t sub_23CEEBCC8()
{
  return sub_23D004958();
}

uint64_t sub_23CEEBCEC(uint64_t a1)
{
  uint64_t v2 = sub_23D004828();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_23D004968();
}

uint64_t sub_23CEEBDB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_23D004A08();
  *a1 = result;
  return result;
}

uint64_t sub_23CEEBDE4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_23D004A08();
  *a1 = result;
  return result;
}

uint64_t sub_23CEEBE10()
{
  return sub_23D004A18();
}

uint64_t sub_23CEEBE38()
{
  return sub_23D004A18();
}

unint64_t sub_23CEEBE64()
{
  unint64_t result = qword_268BCD058;
  if (!qword_268BCD058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD058);
  }
  return result;
}

uint64_t sub_23CEEBEB8()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_23CEEBED4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + *(int *)(type metadata accessor for AgreementConsentView() + 24) + 8);
  *a2 = v3;

  return v3;
}

uint64_t *initializeBufferWithCopyOfBuffer for AgreementConsentView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_23D004708();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD028);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_23D004828();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)a1 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v18 = *v16;
    unsigned __int8 v17 = (void *)v16[1];
    *uint64_t v15 = v18;
    v15[1] = v17;
    id v19 = (char *)a1 + v14;
    uint64_t v20 = (char *)a2 + v14;
    *id v19 = *v20;
    *((void *)v19 + 1) = *((void *)v20 + 1);
    uint64_t v21 = a3[8];
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = *v23;
    id v25 = v17;
    swift_retain();
    if (v24)
    {
      uint64_t v26 = v23[1];
      *uint64_t v22 = v24;
      v22[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    }
  }
  return a1;
}

uint64_t destroy for AgreementConsentView(uint64_t a1, int *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_23D004708();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD028);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_23D004828();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  uint64_t result = swift_release();
  if (*(void *)(a1 + a2[8]))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for AgreementConsentView(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_23D004708();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD028);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_23D004828();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v16 = *v14;
  uint64_t v15 = (void *)v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  unsigned __int8 v17 = (char *)a1 + v12;
  uint64_t v18 = (char *)a2 + v12;
  *unsigned __int8 v17 = *v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = *v21;
  id v23 = v15;
  swift_retain();
  if (v22)
  {
    uint64_t v24 = v21[1];
    *uint64_t v20 = v22;
    v20[1] = v24;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  }
  return a1;
}

void *assignWithCopy for AgreementConsentView(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_23CEE8BB4((uint64_t)a1, &qword_268BCD020);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_23D004708();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_23CEE8BB4((uint64_t)a1 + v7, &qword_268BCD028);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD028);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_23D004828();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  uint64_t v14 = (void *)v13[1];
  uint64_t v15 = (void *)v12[1];
  v12[1] = v14;
  id v16 = v14;

  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *uint64_t v18 = *v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_retain();
  swift_release();
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = *(void *)((char *)a1 + v20);
  uint64_t v24 = *v22;
  if (!v23)
  {
    if (v24)
    {
      uint64_t v26 = v22[1];
      *uint64_t v21 = v24;
      v21[1] = v26;
      swift_retain();
      return a1;
    }
LABEL_15:
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    return a1;
  }
  if (!v24)
  {
    swift_release();
    goto LABEL_15;
  }
  uint64_t v25 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v25;
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for AgreementConsentView(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_23D004708();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD028);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_23D004828();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  id v16 = &a2[v14];
  uint64_t v17 = *(void *)v16;
  if (*(void *)v16)
  {
    uint64_t v18 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = v17;
    *((void *)v15 + 1) = v18;
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  return a1;
}

char *assignWithTake for AgreementConsentView(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_23CEE8BB4((uint64_t)a1, &qword_268BCD020);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_23D004708();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_23CEE8BB4((uint64_t)&a1[v8], &qword_268BCD028);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD028);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_23D004828();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v17 = *(void *)v15;
  uint64_t v16 = *((void *)v15 + 1);
  uint64_t v18 = (void *)*((void *)v14 + 1);
  *(void *)uint64_t v14 = v17;
  *((void *)v14 + 1) = v16;

  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  *uint64_t v20 = *v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_release();
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *(void *)&a1[v22];
  uint64_t v26 = *(void *)v24;
  if (!v25)
  {
    if (v26)
    {
      uint64_t v28 = *((void *)v24 + 1);
      *(void *)uint64_t v23 = v26;
      *((void *)v23 + 1) = v28;
      return a1;
    }
LABEL_14:
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    return a1;
  }
  if (!v26)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v27 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = v26;
  *((void *)v23 + 1) = v27;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AgreementConsentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CEECA74);
}

uint64_t sub_23CEECA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD060);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD068);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AgreementConsentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CEECBA8);
}

uint64_t sub_23CEECBA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD060);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD068);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_23CEECCC4()
{
  sub_23CEECDD8(319, &qword_268BCD080, MEMORY[0x263F188C0]);
  if (v0 <= 0x3F)
  {
    sub_23CEECDD8(319, &qword_268BCD088, MEMORY[0x263F18D80]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_23CEECDD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_23D004608();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AgreementConsentView.ConsentResult(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AgreementConsentView.ConsentResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CEECF98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_23CEECFC0(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_23CEECFC8(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AgreementConsentView.ConsentResult()
{
  return &type metadata for AgreementConsentView.ConsentResult;
}

uint64_t sub_23CEECFE4()
{
  return sub_23CEED048(&qword_268BCD090, &qword_268BCD048, (void (*)(void))sub_23CEED020);
}

uint64_t sub_23CEED020()
{
  return sub_23CEED048(&qword_268BCD098, &qword_268BCD040, (void (*)(void))sub_23CEED0C8);
}

uint64_t sub_23CEED048(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23CEED0C8()
{
  unint64_t result = qword_268BCD0A0;
  if (!qword_268BCD0A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD038);
    sub_23CEE8D90(&qword_268BCD0A8, &qword_268BCD030);
    sub_23CEE8D90(&qword_268BCCD58, &qword_268BCCD60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD0A0);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ConsentTitleView(void *a1, void *a2)
{
  int v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

void destroy for ConsentTitleView(uint64_t a1)
{
}

void *assignWithCopy for ConsentTitleView(void *a1, void *a2)
{
  *a1 = *a2;
  int v3 = (void *)a2[1];
  id v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for ConsentTitleView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  id v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for ConsentTitleView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConsentTitleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConsentTitleView()
{
  return &type metadata for ConsentTitleView;
}

uint64_t sub_23CEED2D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CEED2FC()
{
  return sub_23D0049E8();
}

uint64_t sub_23CEED320(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0B8);
  MEMORY[0x270FA5388](v2 - 8);
  sub_23CEE82CC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_268BCD0B8);
  return sub_23D0049F8();
}

uint64_t sub_23CEED3B8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23CEED3F0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23CEED418()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23CEED440@<X0>(uint64_t a1@<X8>)
{
  return sub_23CEEADAC(*(void *)(v1 + 16), a1);
}

uint64_t sub_23CEED448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AgreementConsentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CEED4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AgreementConsentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CEED514()
{
  return sub_23CEED7E4(sub_23CEEB07C);
}

uint64_t sub_23CEED52C@<X0>(uint64_t a1@<X8>)
{
  return sub_23CEEB1C4(*(void *)(v1 + 16), a1);
}

unint64_t sub_23CEED534()
{
  unint64_t result = qword_268BCD150;
  if (!qword_268BCD150)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD158);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD150);
  }
  return result;
}

uint64_t sub_23CEED5A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CEED5F8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char *sub_23CEED608(unsigned char *a1)
{
  return sub_23CF73954(a1, *(unsigned char *)(v1 + 16));
}

uint64_t objectdestroy_30Tm()
{
  uint64_t v1 = (int *)type metadata accessor for AgreementConsentView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_23D004708();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD028);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_23D004828();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  swift_release();
  if (*(void *)(v5 + v1[8])) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_23CEED7CC()
{
  return sub_23CEED7E4(sub_23CEEB4EC);
}

uint64_t sub_23CEED7E4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for AgreementConsentView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_23CEED858@<X0>(uint64_t a1@<X8>)
{
  return sub_23CEEB63C(*(void *)(v1 + 16), a1);
}

uint64_t sub_23CEED860()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_23CEED870()
{
  return sub_23CEE8D90(&qword_268BCD180, &qword_268BCD188);
}

ValueMetadata *type metadata accessor for BatchEmptyView()
{
  return &type metadata for BatchEmptyView;
}

uint64_t sub_23CEED8C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CEED8E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_mainBundle);
  uint64_t v4 = sub_23D003BA8();
  uint64_t v6 = v5;

  sub_23D005FC8();
  sub_23D0059F8();
  id v7 = objc_msgSend(self, sel_currentDevice, 0x800000023D010070);
  objc_msgSend(v7, sel_userInterfaceIdiom);

  sub_23D0059F8();
  swift_bridgeObjectRelease();
  sub_23D0059F8();
  id v8 = objc_msgSend(v2, sel_mainBundle);
  uint64_t v9 = sub_23D003BA8();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();

  type metadata accessor for DonationController();
  sub_23CEEDB6C();
  uint64_t v12 = sub_23D004618();
  LOBYTE(v7) = v13;
  uint64_t result = sub_23D0055B8();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v11;
  *(unsigned char *)(a1 + 32) = 2;
  *(void *)(a1 + 40) = 0xD000000000000011;
  *(void *)(a1 + 48) = 0x800000023D010160;
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0xE000000000000000;
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = v7 & 1;
  return result;
}

unint64_t sub_23CEEDB6C()
{
  unint64_t result = qword_268BCD190;
  if (!qword_268BCD190)
  {
    type metadata accessor for DonationController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD190);
  }
  return result;
}

unint64_t sub_23CEEDBC8()
{
  unint64_t result = qword_268BCD198;
  if (!qword_268BCD198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD198);
  }
  return result;
}

double ScoreIndicator.init(controller:size:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(void *)a2 = a1;
  *(double *)(a2 + 8) = a3;
  double result = 0.666666667;
  *(_OWORD *)(a2 + 16) = xmmword_23D007C20;
  return result;
}

double ScoreIndicator.init(size:)@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  type metadata accessor for ScoreController();
  uint64_t v4 = swift_allocObject();
  *(_WORD *)(v4 + 16) = 0;
  sub_23D003E08();
  if (qword_268BCCC78 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_268BDAD20;
  swift_getKeyPath();
  sub_23CEEF79C((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DD8();
  swift_release();
  *(void *)(v4 + 24) = *(void *)(v5 + 24);
  *(void *)a1 = v4;
  *(double *)(a1 + 8) = a2;
  double result = 0.666666667;
  *(_OWORD *)(a1 + 16) = xmmword_23D007C20;
  return result;
}

double ScoreIndicator.init()@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for ScoreController();
  uint64_t v2 = swift_allocObject();
  *(_WORD *)(v2 + 16) = 0;
  sub_23D003E08();
  if (qword_268BCCC78 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_268BDAD20;
  swift_getKeyPath();
  sub_23CEEF79C((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DD8();
  swift_release();
  *(void *)(v2 + 24) = *(void *)(v3 + 24);
  *(void *)a1 = v2;
  double result = 64.0;
  *(_OWORD *)(a1 + 8) = xmmword_23D007C30;
  *(void *)(a1 + 24) = 0x4062C00000000000;
  return result;
}

uint64_t sub_23CEEDE90()
{
  uint64_t v1 = *v0;
  swift_getKeyPath();
  sub_23CEEF79C((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  double v3 = floor(sqrt((double)*(uint64_t *)(v1 + 24) * 0.5));
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  if ((uint64_t)v3 <= 0) {
    return 45;
  }
  else {
    return sub_23D0061F8();
  }
}

uint64_t ScoreIndicator.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v2 = sub_23D004BB8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_23D004EB8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD1A8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)v1;
  double v12 = *(double *)(v1 + 8);
  double v13 = *(double *)(v1 + 16);
  double v14 = *(double *)(v1 + 24);
  uint64_t v15 = sub_23D005778();
  uint64_t v17 = v16;
  sub_23CEEE308(v11, &v25[2], v12, v13, v14);
  v25[0] = v15;
  v25[1] = v17;
  v25[49] = 0;
  *(double *)&v25[50] = v12 * 0.1;
  sub_23D004EA8();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD1B0);
  unint64_t v19 = sub_23CEEF2CC();
  sub_23D0053C8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  memcpy(v26, v25, 0x198uLL);
  sub_23CEEF36C((uint64_t)v26);
  sub_23D004BA8();
  sub_23D004B98();
  v25[0] = v11;
  *(double *)&v25[1] = v12;
  *(double *)&v25[2] = v13;
  *(double *)&v25[3] = v14;
  sub_23CEEDE90();
  sub_23D004B88();
  swift_bridgeObjectRelease();
  sub_23D004B98();
  sub_23D004BD8();
  v25[0] = v18;
  v25[1] = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v20 = v22;
  sub_23D005378();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v20);
}

void *sub_23CEEE308@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  v115 = a2;
  uint64_t v9 = sub_23D004288();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  double v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCF88);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v230[0] = a1;
  sub_23CEEF79C((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  swift_release();
  if (*(unsigned char *)(a1 + 17) == 1)
  {
    sub_23D005778();
    sub_23D0046C8();
    uint64_t v114 = v155[0];
    DWORD2(v113) = LOBYTE(v155[1]);
    uint64_t v16 = v155[2];
    LODWORD(v113) = LOBYTE(v155[3]);
    uint64_t v111 = v155[5];
    uint64_t v112 = v155[4];
    uint64_t v17 = sub_23D0054E8();
    uint64_t v18 = sub_23D005578();
    uint64_t v19 = sub_23D005128();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v15, 1, 1, v19);
    uint64_t v20 = sub_23D005158();
    sub_23CEEF7EC((uint64_t)v15);
    uint64_t KeyPath = swift_getKeyPath();
    if (qword_268BCCCD8 != -1) {
      swift_once();
    }
    uint64_t v22 = __swift_project_value_buffer(v9, (uint64_t)qword_268BDADB8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v22, v9);
    uint64_t v23 = sub_23D005558();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v110 = KeyPath;
    swift_retain();
    swift_retain();
    v197[0] = v114;
    LOBYTE(v197[1]) = BYTE8(v113);
    v197[2] = v16;
    LOBYTE(v197[3]) = v113;
    v197[4] = v112;
    v197[5] = v111;
    v197[6] = v17;
    v197[7] = v18;
    v197[8] = KeyPath;
    v197[9] = v20;
    v197[10] = v23;
    sub_23CEEF970((uint64_t)v197);
    sub_23CEEF8C8((uint64_t)v197, (uint64_t)v230);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD1F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD200);
    sub_23CEE8D90(&qword_268BCD208, &qword_268BCD1F8);
    sub_23CEE8D90(&qword_268BCD210, &qword_268BCD200);
    sub_23D004D88();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    double v84 = a5 * 0.0174532925;
    sub_23D0057C8();
    uint64_t v88 = v25;
    uint64_t v89 = v24;
    uint64_t v90 = sub_23D0054E8();
    uint64_t v83 = v15;
    sub_23D004628();
    unsigned int v103 = v209;
    unsigned int v104 = v208;
    uint64_t v86 = v210;
    uint64_t v87 = v207;
    uint64_t v102 = v211;
    uint64_t v85 = v212;
    uint64_t v26 = sub_23D005778();
    uint64_t v98 = v27;
    uint64_t v99 = v26;
    sub_23D005778();
    sub_23D0046C8();
    uint64_t v92 = v213;
    LODWORD(v111) = v214;
    uint64_t v108 = v215;
    LODWORD(v112) = v216;
    long long v113 = v217;
    unsigned __int8 v202 = v214;
    unsigned __int8 v201 = v216;
    sub_23CF14668();
    double v29 = fmin(v28, 1.0);
    if (v28 > 0.025) {
      double v30 = v29;
    }
    else {
      double v30 = 0.025;
    }
    double v31 = v30 * a4;
    sub_23D0057C8();
    uint64_t v33 = v32;
    uint64_t v106 = v34;
    uint64_t v91 = sub_23D0054E8();
    sub_23D004628();
    uint64_t v35 = v218;
    unsigned int v94 = v219;
    unsigned int v107 = v220;
    uint64_t v36 = v221;
    uint64_t v79 = v218;
    uint64_t v80 = v221;
    uint64_t v114 = v222;
    uint64_t v105 = v223;
    uint64_t v37 = sub_23D005778();
    uint64_t v109 = v38;
    uint64_t v110 = v37;
    sub_23D005778();
    sub_23D0046C8();
    int v93 = v225;
    uint64_t v96 = v224;
    uint64_t v97 = v226;
    int v95 = v227;
    uint64_t v100 = v229;
    uint64_t v101 = v228;
    v124[408] = v225;
    v124[400] = v227;
    v230[0] = a1;
    *(double *)&v230[1] = a3;
    *(double *)&v230[2] = a4;
    *(double *)&v230[3] = a5;
    v230[0] = sub_23CEEDE90();
    v230[1] = v39;
    sub_23CEE8D00();
    uint64_t v40 = sub_23D005228();
    uint64_t v42 = v41;
    char v44 = v43 & 1;
    sub_23D005138();
    uint64_t v45 = sub_23D0051B8();
    uint64_t v47 = v46;
    char v49 = v48 & 1;
    sub_23CEE7DE0(v40, v42, v44);
    swift_bridgeObjectRelease();
    v230[0] = sub_23D0054E8();
    uint64_t v50 = sub_23D0051D8();
    uint64_t v52 = v51;
    char v54 = v53 & 1;
    sub_23CEE7DE0(v45, v47, v49);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v55 = *MEMORY[0x263F1A5F8];
    uint64_t v56 = sub_23D005128();
    uint64_t v57 = *(void *)(v56 - 8);
    uint64_t v58 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 104))(v83, v55, v56);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v56);
    sub_23D005158();
    sub_23CEEF7EC(v58);
    uint64_t v59 = sub_23D0051F8();
    uint64_t v61 = v60;
    char v63 = v62;
    uint64_t v83 = v64;
    swift_release();
    LODWORD(v57) = v63 & 1;
    sub_23CEE7DE0(v50, v52, v54);
    swift_bridgeObjectRelease();
    int v122 = v205;
    __int16 v123 = v206;
    v121[0] = *(_DWORD *)v204;
    *(_DWORD *)((char *)v121 + 3) = *(_DWORD *)&v204[3];
    v120[0] = *(_DWORD *)v203;
    *(_DWORD *)((char *)v120 + 3) = *(_DWORD *)&v203[3];
    int v118 = v127;
    __int16 v119 = v128;
    v117[0] = *(_DWORD *)v126;
    *(_DWORD *)((char *)v117 + 3) = *(_DWORD *)&v126[3];
    v116[0] = *(_DWORD *)v125;
    *(_DWORD *)((char *)v116 + 3) = *(_DWORD *)&v125[3];
    HIWORD(v134) = v206;
    *(_DWORD *)((char *)&v134 + 10) = v205;
    HIDWORD(v136) = *(_DWORD *)&v204[3];
    *(_DWORD *)((char *)&v136 + 9) = *(_DWORD *)v204;
    HIDWORD(v137) = *(_DWORD *)&v203[3];
    *(_DWORD *)((char *)&v137 + 9) = *(_DWORD *)v203;
    uint64_t v139 = 0x3FD0000000000000;
    *((double *)&v140 + 1) = v31;
    double v65 = a4;
    double v78 = a4;
    double v66 = v84;
    *(double *)&long long v141 = v84;
    *((void *)&v141 + 1) = v33;
    *(void *)&long long v142 = v106;
    *((void *)&v142 + 1) = v35;
    *(void *)&long long v143 = __PAIR64__(v107, v94);
    *((void *)&v143 + 1) = v36;
    *(void *)&long long v144 = v114;
    *((void *)&v144 + 1) = v105;
    uint64_t v67 = v91;
    *(void *)&long long v145 = v91;
    WORD4(v145) = 256;
    HIWORD(v145) = v128;
    *(_DWORD *)((char *)&v145 + 10) = v127;
    *(void *)&long long v146 = v110;
    *((void *)&v146 + 1) = v109;
    *(void *)&long long v147 = v96;
    BYTE8(v147) = v93;
    HIDWORD(v147) = *(_DWORD *)&v126[3];
    *(_DWORD *)((char *)&v147 + 9) = *(_DWORD *)v126;
    *(void *)&long long v148 = v97;
    BYTE8(v148) = v95;
    HIDWORD(v148) = *(_DWORD *)&v125[3];
    *(_DWORD *)((char *)&v148 + 9) = *(_DWORD *)v125;
    *(void *)&long long v149 = v101;
    *((void *)&v149 + 1) = v100;
    uint64_t v150 = 0x3FF0000000000000;
    *(_OWORD *)((char *)&v153[18] + 8) = v148;
    *(_OWORD *)((char *)&v153[19] + 8) = v149;
    *(_OWORD *)((char *)&v153[16] + 8) = v146;
    *(_OWORD *)((char *)&v153[17] + 8) = v147;
    *(void *)&v153[10] = 0x3FD0000000000000;
    *((void *)&v153[20] + 1) = 0x3FF0000000000000;
    *(void *)&long long v140 = 0;
    *(_OWORD *)((char *)&v153[13] + 8) = v143;
    *(_OWORD *)((char *)&v153[14] + 8) = v144;
    *(_OWORD *)((char *)&v153[15] + 8) = v145;
    *(_OWORD *)((char *)&v153[10] + 8) = v140;
    *(_OWORD *)((char *)&v153[11] + 8) = v141;
    *(_OWORD *)((char *)&v153[12] + 8) = v142;
    *(void *)&long long v129 = 0;
    *((double *)&v129 + 1) = v65;
    *(double *)&long long v130 = v84;
    uint64_t v69 = v88;
    uint64_t v68 = v89;
    *((void *)&v130 + 1) = v89;
    *(void *)&long long v131 = v88;
    uint64_t v70 = v86;
    uint64_t v71 = v87;
    *((void *)&v131 + 1) = v87;
    *(void *)&long long v132 = __PAIR64__(v103, v104);
    *((void *)&v132 + 1) = v86;
    uint64_t v72 = v102;
    *(void *)&long long v133 = v102;
    uint64_t v73 = v85;
    *((void *)&v133 + 1) = v85;
    uint64_t v74 = v90;
    *(void *)&long long v134 = v90;
    WORD4(v134) = 256;
    *(void *)&long long v135 = v99;
    *((void *)&v135 + 1) = v98;
    *(void *)&long long v136 = v92;
    BYTE8(v136) = v111;
    *(void *)&long long v137 = v108;
    BYTE8(v137) = v112;
    long long v138 = v113;
    v153[1] = v130;
    v153[0] = v129;
    v153[5] = v134;
    v153[4] = v133;
    v153[2] = v131;
    v153[3] = v132;
    v153[9] = v113;
    v153[8] = v137;
    v153[6] = v135;
    v153[7] = v136;
    int v82 = v57;
    char v152 = v57;
    memcpy(v155, v153, sizeof(v155));
    int v81 = v57;
    v154[0] = *(_DWORD *)v151;
    *(_DWORD *)((char *)v154 + 3) = *(_DWORD *)&v151[3];
    sub_23CEEF84C((uint64_t)&v129);
    sub_23CEEF84C((uint64_t)&v140);
    sub_23CEE8444(v59, v61, v57);
    uint64_t v75 = v83;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v76 = v114;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23CEE8444(v59, v61, v57);
    swift_bridgeObjectRetain();
    sub_23CEE7DE0(v59, v61, v57);
    swift_bridgeObjectRelease();
    v156[0] = 0;
    *(double *)&v156[1] = v31;
    *(double *)&v156[2] = v66;
    v156[3] = v33;
    v156[4] = v106;
    v156[5] = v79;
    unsigned int v157 = v94;
    unsigned int v158 = v107;
    uint64_t v159 = v80;
    uint64_t v160 = v76;
    uint64_t v161 = v105;
    uint64_t v162 = v67;
    __int16 v163 = 256;
    int v164 = v118;
    __int16 v165 = v119;
    uint64_t v166 = v110;
    uint64_t v167 = v109;
    uint64_t v168 = v96;
    char v169 = v93;
    *(_DWORD *)&v170[3] = *(_DWORD *)((char *)v117 + 3);
    *(_DWORD *)uint64_t v170 = v117[0];
    uint64_t v171 = v97;
    char v172 = v95;
    *(_DWORD *)&v173[3] = *(_DWORD *)((char *)v116 + 3);
    *(_DWORD *)uint64_t v173 = v116[0];
    uint64_t v174 = v101;
    uint64_t v175 = v100;
    uint64_t v176 = 0x3FF0000000000000;
    sub_23CEEF884((uint64_t)v156);
    v177[0] = 0;
    *(double *)&v177[1] = v78;
    *(double *)&v177[2] = v66;
    v177[3] = v68;
    v177[4] = v69;
    v177[5] = v71;
    unsigned int v178 = v104;
    unsigned int v179 = v103;
    uint64_t v180 = v70;
    uint64_t v181 = v72;
    uint64_t v182 = v73;
    uint64_t v183 = v74;
    __int16 v184 = 256;
    int v185 = v122;
    __int16 v186 = v123;
    uint64_t v187 = v99;
    uint64_t v188 = v98;
    uint64_t v189 = v92;
    char v190 = v111;
    *(_DWORD *)&v191[3] = *(_DWORD *)((char *)v121 + 3);
    *(_DWORD *)v191 = v121[0];
    uint64_t v192 = v108;
    char v193 = v112;
    *(_DWORD *)&v194[3] = *(_DWORD *)((char *)v120 + 3);
    *(_DWORD *)v194 = v120[0];
    long long v195 = v113;
    uint64_t v196 = 0x3FD0000000000000;
    sub_23CEEF884((uint64_t)v177);
    memcpy(v197, v155, 0x150uLL);
    v197[42] = v59;
    v197[43] = v61;
    char v198 = v81;
    *(_DWORD *)v199 = v154[0];
    *(_DWORD *)&v199[3] = *(_DWORD *)((char *)v154 + 3);
    v200 = v75;
    sub_23CEEF8BC((uint64_t)v197);
    sub_23CEEF8C8((uint64_t)v197, (uint64_t)v230);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD1F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD200);
    sub_23CEE8D90(&qword_268BCD208, &qword_268BCD1F8);
    sub_23CEE8D90(&qword_268BCD210, &qword_268BCD200);
    sub_23D004D88();
    sub_23CEE7DE0(v59, v61, v82);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  memcpy(v230, v124, 0x171uLL);
  return memcpy(v115, v230, 0x171uLL);
}

uint64_t sub_23CEEF150@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CEEF79C((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(void *)(v3 + 24);
  return result;
}

uint64_t sub_23CEEF1FC()
{
  return swift_release();
}

unint64_t sub_23CEEF2CC()
{
  unint64_t result = qword_268BCD1B8;
  if (!qword_268BCD1B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD1B0);
    sub_23CEE8D90(&qword_268BCD1C0, &qword_268BCD1C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD1B8);
  }
  return result;
}

uint64_t sub_23CEEF36C(uint64_t a1)
{
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v3 = *(_OWORD *)(a1 + 240);
  long long v4 = *(_OWORD *)(a1 + 256);
  sub_23CEEF408(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152), *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    *(void *)(a1 + 368),
    *(void *)(a1 + 376),
    *(unsigned char *)(a1 + 384));
  return a1;
}

uint64_t sub_23CEEF408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45,uint64_t a46,char a47)
{
  if (a47)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_23CEE7DE0(a43, a44, a45 & 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_23CEEF500()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for ScoreIndicator()
{
  return swift_release();
}

uint64_t initializeWithCopy for ScoreIndicator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  return a1;
}

void *assignWithCopy for ScoreIndicator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for ScoreIndicator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScoreIndicator(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScoreIndicator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoreIndicator()
{
  return &type metadata for ScoreIndicator;
}

unint64_t sub_23CEEF6B4()
{
  unint64_t result = qword_268BCD1D0;
  if (!qword_268BCD1D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD1D8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD1B0);
    sub_23CEEF2CC();
    swift_getOpaqueTypeConformance2();
    sub_23CEEF79C((unint64_t *)&qword_268BCD1E0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD1D0);
  }
  return result;
}

uint64_t sub_23CEEF79C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CEEF7EC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCF88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23CEEF84C(uint64_t a1)
{
  return a1;
}

uint64_t sub_23CEEF884(uint64_t a1)
{
  return a1;
}

uint64_t sub_23CEEF8BC(uint64_t result)
{
  *(unsigned char *)(result + 368) = 1;
  return result;
}

uint64_t sub_23CEEF8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD1F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_23CEEF970(uint64_t result)
{
  *(unsigned char *)(result + 368) = 0;
  return result;
}

void sub_23CEEF978()
{
  sub_23CF9BB8C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_23CEEF994(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v27 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    long long v8 = (void *)a2[2];
    char v9 = *((unsigned char *)a2 + 24);
    swift_retain();
    sub_23CEF00A4(v8, v9);
    *(void *)(v4 + 16) = v8;
    *(unsigned char *)(v4 + 24) = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = v4 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = sub_23D003DB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = (int *)type metadata accessor for BatchInteraction(0);
    uint64_t v15 = v14[5];
    uint64_t v16 = *(void **)(v12 + v15);
    *(void *)(v11 + v15) = v16;
    *(void *)(v11 + v14[6]) = *(void *)(v12 + v14[6]);
    uint64_t v17 = v14[7];
    uint64_t v18 = (void *)(v11 + v17);
    uint64_t v19 = (void **)(v12 + v17);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    id v20 = v16;
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v22 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v23 + 48);
    int v25 = v24(v19, 1, v22);
    if (EnumCaseMultiPayload == 1)
    {
      if (v25)
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v18, v19, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            double v31 = *v19;
            *uint64_t v18 = *v19;
            id v32 = v31;
            break;
          case 3u:
            uint64_t v33 = *v19;
            uint64_t v34 = v19[1];
            *uint64_t v18 = *v19;
            v18[1] = v34;
            v18[2] = v19[2];
            id v35 = v33;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v36 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v36 - 8) + 16))(v18, v19, v36);
            break;
          case 5u:
            uint64_t v37 = *v19;
            double v78 = v19[2];
            int v81 = v19[1];
            uint64_t v72 = (uint64_t)v19[4];
            uint64_t v75 = (uint64_t)v19[3];
            uint64_t v69 = (uint64_t)v19[6];
            uint64_t v70 = (uint64_t)v19[5];
            uint64_t v68 = v19[7];
            uint64_t v84 = (uint64_t)v19[8];
            char v87 = *((unsigned char *)v19 + 72);
            sub_23CEF00B0((uint64_t)*v19, v81, v78, v75, v72, v70, v69, v68, v84, v87);
            *uint64_t v18 = v37;
            v18[1] = v81;
            v18[2] = v78;
            v18[3] = v75;
            v18[4] = v72;
            v18[5] = v70;
            v18[6] = v69;
            v18[7] = v68;
            v18[8] = v84;
            *((unsigned char *)v18 + 72) = v87;
            break;
          default:
            double v29 = v19[1];
            *uint64_t v18 = *v19;
            v18[1] = v29;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
      }
      uint64_t v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v39 = (void *)((char *)v18 + v38);
      uint64_t v40 = (void **)((char *)v19 + v38);
      if (v24((void **)((char *)v19 + v38), 1, v22))
      {
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v55 = *v40;
            *uint64_t v39 = *v40;
            id v56 = v55;
            break;
          case 3u:
            uint64_t v57 = *v40;
            uint64_t v58 = v40[1];
            *uint64_t v39 = *v40;
            v39[1] = v58;
            v39[2] = v40[2];
            id v59 = v57;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v60 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v60 - 8) + 16))(v39, v40, v60);
            break;
          case 5u:
            uint64_t v61 = v40[1];
            char v63 = v40[2];
            uint64_t v62 = (uint64_t)v40[3];
            uint64_t v83 = v62;
            uint64_t v86 = (uint64_t)*v40;
            uint64_t v64 = (uint64_t)v40[5];
            uint64_t v77 = v64;
            uint64_t v80 = (uint64_t)v40[4];
            double v65 = v40[7];
            uint64_t v71 = v65;
            uint64_t v74 = (uint64_t)v40[6];
            uint64_t v89 = (uint64_t)v40[8];
            char v66 = *((unsigned char *)v40 + 72);
            sub_23CEF00B0(v86, v61, v63, v62, v80, v64, v74, v65, v89, v66);
            *uint64_t v39 = v86;
            v39[1] = v61;
            v39[2] = v63;
            v39[3] = v83;
            v39[4] = v80;
            v39[5] = v77;
            v39[6] = v74;
            v39[7] = v71;
            v39[8] = v89;
            *((unsigned char *)v39 + 72) = v66;
            break;
          default:
            uint64_t v42 = v40[1];
            *uint64_t v39 = *v40;
            v39[1] = v42;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v39, 0, 1, v22);
      }
    }
    else if (v25)
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v18, v19, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          char v43 = *v19;
          *uint64_t v18 = *v19;
          id v44 = v43;
          break;
        case 3u:
          uint64_t v45 = *v19;
          uint64_t v46 = v19[1];
          *uint64_t v18 = *v19;
          v18[1] = v46;
          v18[2] = v19[2];
          id v47 = v45;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v48 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v48 - 8) + 16))(v18, v19, v48);
          break;
        case 5u:
          uint64_t v49 = (uint64_t)*v19;
          uint64_t v50 = v19[2];
          uint64_t v51 = (uint64_t)v19[3];
          uint64_t v52 = (uint64_t)v19[4];
          uint64_t v82 = v52;
          uint64_t v85 = v19[1];
          uint64_t v53 = (uint64_t)v19[6];
          uint64_t v76 = v53;
          uint64_t v79 = (uint64_t)v19[5];
          uint64_t v73 = v19[7];
          uint64_t v88 = (uint64_t)v19[8];
          char v54 = *((unsigned char *)v19 + 72);
          sub_23CEF00B0(v49, v85, v50, v51, v52, v79, v53, v73, v88, v54);
          *uint64_t v18 = v49;
          v18[1] = v85;
          v18[2] = v50;
          v18[3] = v51;
          v18[4] = v82;
          v18[5] = v79;
          v18[6] = v76;
          v18[7] = v73;
          v18[8] = v88;
          *((unsigned char *)v18 + 72) = v54;
          break;
        default:
          double v30 = v19[1];
          *uint64_t v18 = *v19;
          v18[1] = v30;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

id sub_23CEF00A4(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t sub_23CEF00B0(uint64_t result, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8, uint64_t a9, char a10)
{
  uint64_t v13 = (void *)result;
  if (a10 == 2)
  {
    swift_bridgeObjectRetain();
    id v15 = v13;
    swift_bridgeObjectRetain();
    return sub_23CEF0204(a6, a7, a8);
  }
  else
  {
    if (a10 == 1)
    {
      id v16 = a2;
      id v17 = v13;
      sub_23CEF01C0(a3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (a10)
    {
      return result;
    }
    return swift_bridgeObjectRetain();
  }
}

id sub_23CEF01C0(id result)
{
  if (result)
  {
    id v1 = result;
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_23CEF0204(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_23CEF021C(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_23CEF021C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_23CEF022C(uint64_t a1, uint64_t a2)
{
  swift_release();
  sub_23CEF05EC(*(id *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v7 = v4 + *(int *)(v6 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v9 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  int v11 = v10(v7, 1, v9);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v11)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v15 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v7, v15);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v7, *(void **)(v7 + 8), *(void **)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
          break;
        default:
          break;
      }
    }
    v7 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v10(v7, 1, v9))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_14;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_13;
        case 4u:
          goto LABEL_17;
        case 5u:
          goto LABEL_20;
        default:
          return;
      }
    }
  }
  else if (!v11)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        goto LABEL_14;
      case 2u:
LABEL_10:
        id v12 = *(id *)v7;

        break;
      case 3u:
LABEL_13:

LABEL_14:
        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_17:
        uint64_t v13 = sub_23D003B88();
        uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
        v14(v7, v13);
        break;
      case 5u:
LABEL_20:
        sub_23CEF05F8(*(void **)v7, *(void **)(v7 + 8), *(void **)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
        break;
      default:
        return;
    }
  }
}

void sub_23CEF05EC(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

void *sub_23CEF05F8(void *result, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8, uint64_t a9, char a10)
{
  if (a10 == 2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)sub_23CEF0740(a6, a7, a8);
  }
  else
  {
    if (a10 == 1)
    {

      sub_23CEF0700(a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (a10)
    {
      return result;
    }
    return (void *)swift_bridgeObjectRelease();
  }
}

void *sub_23CEF0700(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23CEF0740(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_23CEF0758(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_23CEF0758(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23CEF0768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = *(void **)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  swift_retain();
  sub_23CEF00A4(v7, v8);
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v14 = v13[5];
  uint64_t v15 = *(void **)(v11 + v14);
  *(void *)(v10 + v14) = v15;
  *(void *)(v10 + v13[6]) = *(void *)(v11 + v13[6]);
  uint64_t v16 = v13[7];
  id v17 = (void *)(v10 + v16);
  uint64_t v18 = (void **)(v11 + v16);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  id v19 = v15;
  swift_retain();
  LODWORD(v15) = swift_getEnumCaseMultiPayload();
  uint64_t v20 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  if (v15 == 1)
  {
    if (v23)
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v28 = *v18;
          *id v17 = *v18;
          id v29 = v28;
          break;
        case 3u:
          double v30 = *v18;
          double v31 = v18[1];
          *id v17 = *v18;
          v17[1] = v31;
          v17[2] = v18[2];
          id v32 = v30;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v33 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v33 - 8) + 16))(v17, v18, v33);
          break;
        case 5u:
          uint64_t v34 = *v18;
          uint64_t v75 = v18[2];
          double v78 = v18[1];
          uint64_t v69 = (uint64_t)v18[4];
          uint64_t v72 = (uint64_t)v18[3];
          uint64_t v66 = (uint64_t)v18[6];
          uint64_t v67 = (uint64_t)v18[5];
          double v65 = v18[7];
          uint64_t v81 = (uint64_t)v18[8];
          char v84 = *((unsigned char *)v18 + 72);
          sub_23CEF00B0((uint64_t)*v18, v78, v75, v72, v69, v67, v66, v65, v81, v84);
          *id v17 = v34;
          v17[1] = v78;
          v17[2] = v75;
          v17[3] = v72;
          v17[4] = v69;
          v17[5] = v67;
          v17[6] = v66;
          v17[7] = v65;
          v17[8] = v81;
          *((unsigned char *)v17 + 72) = v84;
          break;
        default:
          uint64_t v26 = v18[1];
          *id v17 = *v18;
          v17[1] = v26;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    }
    uint64_t v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    uint64_t v36 = (void *)((char *)v17 + v35);
    uint64_t v37 = (void **)((char *)v18 + v35);
    if (v22((void **)((char *)v18 + v35), 1, v20))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v52 = *v37;
          *uint64_t v36 = *v37;
          id v53 = v52;
          break;
        case 3u:
          char v54 = *v37;
          uint64_t v55 = v37[1];
          *uint64_t v36 = *v37;
          v36[1] = v55;
          v36[2] = v37[2];
          id v56 = v54;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v57 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v57 - 8) + 16))(v36, v37, v57);
          break;
        case 5u:
          uint64_t v58 = v37[1];
          uint64_t v60 = v37[2];
          uint64_t v59 = (uint64_t)v37[3];
          uint64_t v80 = v59;
          uint64_t v83 = (uint64_t)*v37;
          uint64_t v61 = (uint64_t)v37[5];
          uint64_t v74 = v61;
          uint64_t v77 = (uint64_t)v37[4];
          uint64_t v62 = v37[7];
          uint64_t v68 = v62;
          uint64_t v71 = (uint64_t)v37[6];
          uint64_t v86 = (uint64_t)v37[8];
          char v63 = *((unsigned char *)v37 + 72);
          sub_23CEF00B0(v83, v58, v60, v59, v77, v61, v71, v62, v86, v63);
          *uint64_t v36 = v83;
          v36[1] = v58;
          v36[2] = v60;
          v36[3] = v80;
          v36[4] = v77;
          v36[5] = v74;
          v36[6] = v71;
          unsigned char v36[7] = v68;
          v36[8] = v86;
          *((unsigned char *)v36 + 72) = v63;
          break;
        default:
          uint64_t v39 = v37[1];
          *uint64_t v36 = *v37;
          v36[1] = v39;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v36, 0, 1, v20);
    }
  }
  else if (v23)
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v17, v18, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v40 = *v18;
        *id v17 = *v18;
        id v41 = v40;
        break;
      case 3u:
        uint64_t v42 = *v18;
        char v43 = v18[1];
        *id v17 = *v18;
        v17[1] = v43;
        v17[2] = v18[2];
        id v44 = v42;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v45 = sub_23D003B88();
        (*(void (**)(void *, void **, uint64_t))(*(void *)(v45 - 8) + 16))(v17, v18, v45);
        break;
      case 5u:
        uint64_t v46 = (uint64_t)*v18;
        id v47 = v18[2];
        uint64_t v48 = (uint64_t)v18[3];
        uint64_t v49 = (uint64_t)v18[4];
        uint64_t v79 = v49;
        uint64_t v82 = v18[1];
        uint64_t v50 = (uint64_t)v18[6];
        uint64_t v73 = v50;
        uint64_t v76 = (uint64_t)v18[5];
        uint64_t v70 = v18[7];
        uint64_t v85 = (uint64_t)v18[8];
        char v51 = *((unsigned char *)v18 + 72);
        sub_23CEF00B0(v46, v82, v47, v48, v49, v76, v50, v70, v85, v51);
        *id v17 = v46;
        v17[1] = v82;
        v17[2] = v47;
        v17[3] = v48;
        v17[4] = v79;
        v17[5] = v76;
        v17[6] = v73;
        v17[7] = v70;
        v17[8] = v85;
        *((unsigned char *)v17 + 72) = v51;
        break;
      default:
        uint64_t v27 = v18[1];
        *id v17 = *v18;
        v17[1] = v27;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23CEF0E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void **)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  sub_23CEF00A4(v7, v8);
  uint64_t v9 = *(void **)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  sub_23CEF05EC(v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v16 = v15[5];
  id v17 = *(void **)(v13 + v16);
  uint64_t v18 = *(void **)(v12 + v16);
  *(void *)(v12 + v16) = v17;
  id v19 = v17;

  *(void *)(v12 + v15[6]) = *(void *)(v13 + v15[6]);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v20 = v15[7];
    uint64_t v21 = (void *)(v12 + v20);
    uint64_t v22 = (void **)(v13 + v20);
    sub_23CEF155C(v12 + v20);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v24 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v25 + 48);
    int v27 = v26(v22, 1, v24);
    if (EnumCaseMultiPayload == 1)
    {
      if (v27)
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            double v30 = *v22;
            *uint64_t v21 = *v22;
            id v31 = v30;
            break;
          case 3u:
            id v32 = *v22;
            *uint64_t v21 = *v22;
            v21[1] = v22[1];
            v21[2] = v22[2];
            id v33 = v32;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v34 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v34 - 8) + 16))(v21, v22, v34);
            break;
          case 5u:
            uint64_t v35 = *v22;
            uint64_t v73 = v22[2];
            uint64_t v76 = v22[1];
            uint64_t v67 = (uint64_t)v22[4];
            uint64_t v70 = (uint64_t)v22[3];
            uint64_t v64 = (uint64_t)v22[6];
            uint64_t v65 = (uint64_t)v22[5];
            char v63 = v22[7];
            uint64_t v79 = (uint64_t)v22[8];
            char v82 = *((unsigned char *)v22 + 72);
            sub_23CEF00B0((uint64_t)*v22, v76, v73, v70, v67, v65, v64, v63, v79, v82);
            *uint64_t v21 = v35;
            v21[1] = v76;
            v21[2] = v73;
            v21[3] = v70;
            v21[4] = v67;
            v21[5] = v65;
            v21[6] = v64;
            v21[7] = v63;
            v21[8] = v79;
            *((unsigned char *)v21 + 72) = v82;
            break;
          default:
            *uint64_t v21 = *v22;
            v21[1] = v22[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
      }
      uint64_t v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v37 = (void *)((char *)v21 + v36);
      uint64_t v38 = (void **)((char *)v22 + v36);
      if (v26((void **)((char *)v22 + v36), 1, v24))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            char v51 = *v38;
            *uint64_t v37 = *v38;
            id v52 = v51;
            break;
          case 3u:
            id v53 = *v38;
            *uint64_t v37 = *v38;
            v37[1] = v38[1];
            v37[2] = v38[2];
            id v54 = v53;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v55 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v55 - 8) + 16))(v37, v38, v55);
            break;
          case 5u:
            id v56 = v38[1];
            uint64_t v58 = v38[2];
            uint64_t v57 = (uint64_t)v38[3];
            uint64_t v78 = v57;
            uint64_t v81 = (uint64_t)*v38;
            uint64_t v59 = (uint64_t)v38[5];
            uint64_t v72 = v59;
            uint64_t v75 = (uint64_t)v38[4];
            uint64_t v60 = v38[7];
            uint64_t v66 = v60;
            uint64_t v69 = (uint64_t)v38[6];
            uint64_t v84 = (uint64_t)v38[8];
            char v61 = *((unsigned char *)v38 + 72);
            sub_23CEF00B0(v81, v56, v58, v57, v75, v59, v69, v60, v84, v61);
            *uint64_t v37 = v81;
            v37[1] = v56;
            v37[2] = v58;
            v37[3] = v78;
            v37[4] = v75;
            v37[5] = v72;
            v37[6] = v69;
            v37[7] = v66;
            v37[8] = v84;
            *((unsigned char *)v37 + 72) = v61;
            break;
          default:
            *uint64_t v37 = *v38;
            v37[1] = v38[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v37, 0, 1, v24);
      }
    }
    else if (v27)
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v21, v22, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v40 = *v22;
          *uint64_t v21 = *v22;
          id v41 = v40;
          break;
        case 3u:
          uint64_t v42 = *v22;
          *uint64_t v21 = *v22;
          v21[1] = v22[1];
          v21[2] = v22[2];
          id v43 = v42;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v44 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v44 - 8) + 16))(v21, v22, v44);
          break;
        case 5u:
          uint64_t v45 = (uint64_t)*v22;
          uint64_t v46 = v22[2];
          uint64_t v47 = (uint64_t)v22[3];
          uint64_t v48 = (uint64_t)v22[4];
          uint64_t v77 = v48;
          uint64_t v80 = v22[1];
          uint64_t v49 = (uint64_t)v22[6];
          uint64_t v71 = v49;
          uint64_t v74 = (uint64_t)v22[5];
          uint64_t v68 = v22[7];
          uint64_t v83 = (uint64_t)v22[8];
          char v50 = *((unsigned char *)v22 + 72);
          sub_23CEF00B0(v45, v80, v46, v47, v48, v74, v49, v68, v83, v50);
          *uint64_t v21 = v45;
          v21[1] = v80;
          v21[2] = v46;
          v21[3] = v47;
          v21[4] = v77;
          v21[5] = v74;
          v21[6] = v71;
          v21[7] = v68;
          v21[8] = v83;
          *((unsigned char *)v21 + 72) = v50;
          break;
        default:
          *uint64_t v21 = *v22;
          v21[1] = v22[1];
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23CEF155C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23CEF15B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  char v8 = (int *)type metadata accessor for BatchInteraction(0);
  *(void *)(v5 + v8[5]) = *(void *)(v6 + v8[5]);
  *(void *)(v5 + v8[6]) = *(void *)(v6 + v8[6]);
  uint64_t v9 = v8[7];
  char v10 = (char *)(v5 + v9);
  uint64_t v11 = (char *)(v6 + v9);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v13 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  if (EnumCaseMultiPayload == 1)
  {
    if (v16)
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v19 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v10, v11, v19);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(void *)(v14 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
    }
    uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    uint64_t v22 = &v10[v21];
    int v23 = &v11[v21];
    if (v15(v23, 1, v13))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v25 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v22, v23, *(void *)(v14 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
    }
  }
  else if (v16)
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v20 = sub_23D003B88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v10, v11, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(v14 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23CEF19BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  char v7 = *(unsigned char *)(a2 + 24);
  char v8 = *(void **)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  sub_23CEF05EC(v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v15 = v14[5];
  int v16 = *(void **)(v11 + v15);
  *(void *)(v11 + v15) = *(void *)(v12 + v15);

  *(void *)(v11 + v14[6]) = *(void *)(v12 + v14[6]);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v17 = v14[7];
    uint64_t v18 = (char *)(v11 + v17);
    uint64_t v19 = (char *)(v12 + v17);
    sub_23CEF155C(v11 + v17);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v21 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v22 = *(void *)(v21 - 8);
    int v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
    int v24 = v23(v19, 1, v21);
    if (EnumCaseMultiPayload == 1)
    {
      if (v24)
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v27 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v18, v19, v27);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v18, v19, *(void *)(v22 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
      }
      uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      double v30 = &v18[v29];
      id v31 = &v19[v29];
      if (v23(v31, 1, v21))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v33 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v30, v31, v33);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v30, v31, *(void *)(v22 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v30, 0, 1, v21);
      }
    }
    else if (v24)
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v18, v19, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v28 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v18, v19, v28);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v18, v19, *(void *)(v22 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23CEF1E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CEF1E14);
}

uint64_t sub_23CEF1E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for BatchInteraction(0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_23CEF1EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CEF1ED0);
}

uint64_t sub_23CEF1ED0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for BatchInteraction(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SkipButton()
{
  uint64_t result = qword_268BCD228;
  if (!qword_268BCD228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CEF1FC0()
{
  uint64_t result = type metadata accessor for BatchInteraction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23CEF2058()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_23CEF2074(uint64_t a1)
{
  uint64_t v1 = a1;
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = swift_retain();
  sub_23CF396E8(v3, v2);
  swift_release();
  uint64_t v4 = v1 + *(int *)(type metadata accessor for SkipButton() + 24);
  uint64_t v5 = *(void **)(v1 + 16);
  LOBYTE(v1) = *(unsigned char *)(v1 + 24);
  sub_23CEF00A4(v5, v1);
  id v6 = sub_23CF39A44(v5, v1);
  sub_23CEF05EC(v5, v1);
  sub_23CF121BC(2, v4, (uint64_t)v6);
  swift_release();
}

uint64_t sub_23CEF2138(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  sub_23CEF22A0(v1, (uint64_t)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  sub_23CEF26E4((uint64_t)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4);
  v7[0] = sub_23CEF2748;
  v7[1] = v5;
  sub_23D004BC8();
  sub_23CEF27A8();
  sub_23D005378();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CEF22A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SkipButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CEF2304()
{
  uint64_t v1 = (int *)(type metadata accessor for SkipButton() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  sub_23CEF05EC(*(id *)(v0 + v3 + 16), *(unsigned char *)(v0 + v3 + 24));
  uint64_t v5 = v0 + v3 + v1[8];
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v8 = v5 + *(int *)(v7 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v10 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  int v12 = v11(v8, 1, v10);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v12)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v14 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v8, v14);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v8, *(void **)(v8 + 8), *(void **)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), *(void *)(v8 + 48), *(void *)(v8 + 56), *(void *)(v8 + 64), *(unsigned char *)(v8 + 72));
          break;
        default:
          break;
      }
    }
    v8 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v11(v8, 1, v10))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else if (!v12)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
LABEL_7:
        swift_bridgeObjectRelease();
        break;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_12:
        uint64_t v13 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v8, v13);
        break;
      case 5u:
LABEL_13:
        sub_23CEF05F8(*(void **)v8, *(void **)(v8 + 8), *(void **)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), *(void *)(v8 + 48), *(void *)(v8 + 56), *(void *)(v8 + 64), *(unsigned char *)(v8 + 72));
        break;
      default:
        break;
    }
  }

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_23CEF26E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SkipButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23CEF2748()
{
  uint64_t v1 = *(void *)(type metadata accessor for SkipButton() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_23CEF2074(v2);
}

unint64_t sub_23CEF27A8()
{
  unint64_t result = qword_268BCD238;
  if (!qword_268BCD238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD238);
  }
  return result;
}

unint64_t sub_23CEF2800()
{
  unint64_t result = qword_268BCD240;
  if (!qword_268BCD240)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD248);
    sub_23CEF27A8();
    sub_23CEF287C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD240);
  }
  return result;
}

unint64_t sub_23CEF287C()
{
  unint64_t result = qword_268BCD1E0;
  if (!qword_268BCD1E0)
  {
    sub_23D004F98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD1E0);
  }
  return result;
}

void *sub_23CEF28D4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_23D003DB8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for BatchInteraction(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = *(void **)((char *)a2 + v9);
    *(void *)((char *)a1 + v9) = v10;
    *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
    uint64_t v11 = v8[7];
    int v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void **)((char *)a2 + v11);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    id v14 = v10;
    swift_retain();
    LODWORD(v10) = swift_getEnumCaseMultiPayload();
    uint64_t v15 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v112 = *(void *)(v15 - 8);
    int v16 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v112 + 48);
    int v17 = v16(v13, 1, v15);
    if (v10 == 1)
    {
      if (v17)
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            int v23 = *v13;
            *int v12 = *v13;
            id v24 = v23;
            break;
          case 3u:
            uint64_t v25 = *v13;
            uint64_t v26 = v13[1];
            *int v12 = *v13;
            v12[1] = v26;
            v12[2] = v13[2];
            id v27 = v25;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v28 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v28 - 8) + 16))(v12, v13, v28);
            break;
          case 5u:
            uint64_t v96 = v13[1];
            uint64_t v100 = *v13;
            uint64_t v89 = (uint64_t)v13[3];
            uint64_t v92 = v13[2];
            uint64_t v83 = (uint64_t)v13[5];
            uint64_t v86 = (uint64_t)v13[4];
            uint64_t v79 = v13[7];
            uint64_t v80 = (uint64_t)v13[6];
            uint64_t v104 = (uint64_t)v13[8];
            char v108 = *((unsigned char *)v13 + 72);
            sub_23CEF00B0((uint64_t)*v13, v96, v92, v89, v86, v83, v80, v79, v104, v108);
            *int v12 = v100;
            v12[1] = v96;
            v12[2] = v92;
            v12[3] = v89;
            v12[4] = v86;
            v12[5] = v83;
            v12[6] = v80;
            v12[7] = v79;
            v12[8] = v104;
            *((unsigned char *)v12 + 72) = v108;
            break;
          default:
            uint64_t v21 = v13[1];
            *int v12 = *v13;
            v12[1] = v21;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v112 + 56))(v12, 0, 1, v15);
      }
      uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      double v30 = (void *)((char *)v12 + v29);
      id v31 = (void **)((char *)v13 + v29);
      if (v16(v31, 1, v15))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v45 = *v31;
            *double v30 = *v31;
            id v46 = v45;
            break;
          case 3u:
            uint64_t v47 = *v31;
            uint64_t v48 = v31[1];
            *double v30 = *v31;
            v30[1] = v48;
            v30[2] = v31[2];
            id v49 = v47;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v50 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v50 - 8) + 16))(v30, v31, v50);
            break;
          case 5u:
            char v51 = v31[1];
            uint64_t v102 = v51;
            uint64_t v106 = (uint64_t)*v31;
            uint64_t v52 = (uint64_t)v31[3];
            uint64_t v94 = v52;
            uint64_t v98 = v31[2];
            uint64_t v53 = (uint64_t)v31[5];
            uint64_t v88 = v53;
            uint64_t v91 = (uint64_t)v31[4];
            id v54 = v31[7];
            char v82 = v54;
            uint64_t v85 = (uint64_t)v31[6];
            uint64_t v110 = (uint64_t)v31[8];
            char v55 = *((unsigned char *)v31 + 72);
            sub_23CEF00B0(v106, v51, v98, v52, v91, v53, v85, v54, v110, v55);
            *double v30 = v106;
            v30[1] = v102;
            v30[2] = v98;
            v30[3] = v94;
            v30[4] = v91;
            v30[5] = v88;
            v30[6] = v85;
            unsigned char v30[7] = v82;
            v30[8] = v110;
            *((unsigned char *)v30 + 72) = v55;
            break;
          default:
            uint64_t v33 = v31[1];
            *double v30 = *v31;
            v30[1] = v33;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v112 + 56))(v30, 0, 1, v15);
      }
    }
    else if (v17)
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v34 = *v13;
          *int v12 = *v13;
          id v35 = v34;
          break;
        case 3u:
          uint64_t v36 = *v13;
          uint64_t v37 = v13[1];
          *int v12 = *v13;
          v12[1] = v37;
          v12[2] = v13[2];
          id v38 = v36;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v39 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v39 - 8) + 16))(v12, v13, v39);
          break;
        case 5u:
          uint64_t v40 = v13[1];
          uint64_t v101 = v40;
          uint64_t v105 = (uint64_t)*v13;
          uint64_t v41 = (uint64_t)v13[3];
          uint64_t v93 = v41;
          uint64_t v97 = v13[2];
          uint64_t v42 = (uint64_t)v13[5];
          uint64_t v87 = v42;
          uint64_t v90 = (uint64_t)v13[4];
          id v43 = v13[7];
          uint64_t v81 = v43;
          uint64_t v84 = (uint64_t)v13[6];
          uint64_t v109 = (uint64_t)v13[8];
          char v44 = *((unsigned char *)v13 + 72);
          sub_23CEF00B0(v105, v40, v97, v41, v90, v42, v84, v43, v109, v44);
          *int v12 = v105;
          v12[1] = v101;
          v12[2] = v97;
          v12[3] = v93;
          v12[4] = v90;
          v12[5] = v87;
          v12[6] = v84;
          v12[7] = v81;
          v12[8] = v109;
          *((unsigned char *)v12 + 72) = v44;
          break;
        default:
          uint64_t v22 = v13[1];
          *int v12 = *v13;
          v12[1] = v22;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v112 + 56))(v12, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v56 = a3[5];
    uint64_t v57 = (void *)((char *)a1 + v56);
    uint64_t v58 = (void **)((char *)a2 + v56);
    if (v16((void **)((char *)a2 + v56), 1, v15))
    {
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          char v61 = *v58;
          *uint64_t v57 = *v58;
          id v62 = v61;
          break;
        case 3u:
          char v63 = *v58;
          uint64_t v64 = v58[1];
          *uint64_t v57 = *v58;
          v57[1] = v64;
          v57[2] = v58[2];
          id v65 = v63;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v66 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v66 - 8) + 16))(v57, v58, v66);
          break;
        case 5u:
          uint64_t v67 = (uint64_t)*v58;
          uint64_t v68 = v58[1];
          uint64_t v69 = (uint64_t)v58[3];
          uint64_t v70 = (uint64_t)v58[4];
          uint64_t v107 = v70;
          uint64_t v111 = v58[2];
          uint64_t v71 = (uint64_t)v58[6];
          uint64_t v99 = v71;
          uint64_t v103 = (uint64_t)v58[5];
          int v95 = v58[7];
          uint64_t v72 = (uint64_t)v58[8];
          char v73 = *((unsigned char *)v58 + 72);
          sub_23CEF00B0(v67, v68, v111, v69, v70, v103, v71, v95, v72, v73);
          *uint64_t v57 = v67;
          v57[1] = v68;
          v57[2] = v111;
          v57[3] = v69;
          v57[4] = v107;
          v57[5] = v103;
          v57[6] = v99;
          unsigned char v57[7] = v95;
          v57[8] = v72;
          *((unsigned char *)v57 + 72) = v73;
          break;
        default:
          uint64_t v60 = v58[1];
          *uint64_t v57 = *v58;
          v57[1] = v60;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v112 + 56))(v57, 0, 1, v15);
    }
    uint64_t v74 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v75 = (char *)a1 + v74;
    uint64_t v76 = (char *)a2 + v74;
    uint64_t v77 = *(void *)v76;
    LOBYTE(v76) = v76[8];
    *(void *)uint64_t v75 = v77;
    v75[8] = (char)v76;
  }
  swift_retain();
  return a1;
}

uint64_t sub_23CEF3234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v6 = a1 + *(int *)(v5 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  int v10 = v9(v6, 1, v8);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v15 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v6, v15);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
          break;
        default:
          break;
      }
    }
    v6 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v9(v6, 1, v8))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else if (!v10)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
LABEL_7:
        swift_bridgeObjectRelease();
        break;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_12:
        uint64_t v11 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
        break;
      case 5u:
LABEL_13:
        sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
        break;
      default:
        break;
    }
  }
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  if (!v9(v12, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:

        break;
      case 3u:

        swift_bridgeObjectRelease();
        break;
      case 4u:
        uint64_t v14 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
        break;
      case 5u:
        sub_23CEF05F8(*(void **)v12, *(void **)(v12 + 8), *(void **)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void *)(v12 + 64), *(unsigned char *)(v12 + 72));
        break;
      default:
        break;
    }
  }

  return swift_release();
}

uint64_t sub_23CEF369C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  *(void *)(a1 + v6[6]) = *(void *)(a2 + v6[6]);
  uint64_t v9 = v6[7];
  int v10 = (void *)(a1 + v9);
  uint64_t v11 = (void **)(a2 + v9);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  id v12 = v8;
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v14 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v11, 1, v14);
  if (EnumCaseMultiPayload == 1)
  {
    if (v17)
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v22 = *v11;
          *int v10 = *v11;
          id v23 = v22;
          break;
        case 3u:
          id v24 = *v11;
          uint64_t v25 = v11[1];
          *int v10 = *v11;
          v10[1] = v25;
          v10[2] = v11[2];
          id v26 = v24;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v27 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v27 - 8) + 16))(v10, v11, v27);
          break;
        case 5u:
          uint64_t v96 = v11[1];
          uint64_t v100 = *v11;
          uint64_t v89 = (uint64_t)v11[3];
          uint64_t v92 = v11[2];
          uint64_t v83 = (uint64_t)v11[5];
          uint64_t v86 = (uint64_t)v11[4];
          uint64_t v79 = v11[7];
          uint64_t v80 = (uint64_t)v11[6];
          uint64_t v104 = (uint64_t)v11[8];
          char v108 = *((unsigned char *)v11 + 72);
          sub_23CEF00B0((uint64_t)*v11, v96, v92, v89, v86, v83, v80, v79, v104, v108);
          *int v10 = v100;
          v10[1] = v96;
          v10[2] = v92;
          v10[3] = v89;
          v10[4] = v86;
          v10[5] = v83;
          v10[6] = v80;
          v10[7] = v79;
          v10[8] = v104;
          *((unsigned char *)v10 + 72) = v108;
          break;
        default:
          uint64_t v20 = v11[1];
          *int v10 = *v11;
          v10[1] = v20;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    uint64_t v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    uint64_t v29 = (void *)((char *)v10 + v28);
    double v30 = (void **)((char *)v11 + v28);
    if (v16(v30, 1, v14))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          char v44 = *v30;
          *uint64_t v29 = *v30;
          id v45 = v44;
          break;
        case 3u:
          id v46 = *v30;
          uint64_t v47 = v30[1];
          *uint64_t v29 = *v30;
          v29[1] = v47;
          v29[2] = v30[2];
          id v48 = v46;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v49 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v49 - 8) + 16))(v29, v30, v49);
          break;
        case 5u:
          uint64_t v50 = v30[1];
          uint64_t v102 = v50;
          uint64_t v106 = (uint64_t)*v30;
          uint64_t v51 = (uint64_t)v30[3];
          uint64_t v94 = v51;
          uint64_t v98 = v30[2];
          uint64_t v52 = (uint64_t)v30[5];
          uint64_t v88 = v52;
          uint64_t v91 = (uint64_t)v30[4];
          uint64_t v53 = v30[7];
          char v82 = v53;
          uint64_t v85 = (uint64_t)v30[6];
          uint64_t v110 = (uint64_t)v30[8];
          char v54 = *((unsigned char *)v30 + 72);
          sub_23CEF00B0(v106, v50, v98, v51, v91, v52, v85, v53, v110, v54);
          *uint64_t v29 = v106;
          v29[1] = v102;
          v29[2] = v98;
          v29[3] = v94;
          v29[4] = v91;
          v29[5] = v88;
          v29[6] = v85;
          v29[7] = v82;
          v29[8] = v110;
          *((unsigned char *)v29 + 72) = v54;
          break;
        default:
          uint64_t v32 = v30[1];
          *uint64_t v29 = *v30;
          v29[1] = v32;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v29, 0, 1, v14);
    }
  }
  else if (v17)
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v10, v11, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v33 = *v11;
        *int v10 = *v11;
        id v34 = v33;
        break;
      case 3u:
        id v35 = *v11;
        uint64_t v36 = v11[1];
        *int v10 = *v11;
        v10[1] = v36;
        v10[2] = v11[2];
        id v37 = v35;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v38 = sub_23D003B88();
        (*(void (**)(void *, void **, uint64_t))(*(void *)(v38 - 8) + 16))(v10, v11, v38);
        break;
      case 5u:
        uint64_t v39 = v11[1];
        uint64_t v101 = v39;
        uint64_t v105 = (uint64_t)*v11;
        uint64_t v40 = (uint64_t)v11[3];
        uint64_t v93 = v40;
        uint64_t v97 = v11[2];
        uint64_t v41 = (uint64_t)v11[5];
        uint64_t v87 = v41;
        uint64_t v90 = (uint64_t)v11[4];
        uint64_t v42 = v11[7];
        uint64_t v81 = v42;
        uint64_t v84 = (uint64_t)v11[6];
        uint64_t v109 = (uint64_t)v11[8];
        char v43 = *((unsigned char *)v11 + 72);
        sub_23CEF00B0(v105, v39, v97, v40, v90, v41, v84, v42, v109, v43);
        *int v10 = v105;
        v10[1] = v101;
        v10[2] = v97;
        v10[3] = v93;
        v10[4] = v90;
        v10[5] = v87;
        v10[6] = v84;
        v10[7] = v81;
        v10[8] = v109;
        *((unsigned char *)v10 + 72) = v43;
        break;
      default:
        uint64_t v21 = v11[1];
        *int v10 = *v11;
        v10[1] = v21;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = a3;
  uint64_t v56 = *(int *)(a3 + 20);
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = (void **)(a2 + v56);
  if (v16((void **)(a2 + v56), 1, v14))
  {
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        char v61 = *v58;
        *uint64_t v57 = *v58;
        id v62 = v61;
        break;
      case 3u:
        char v63 = *v58;
        uint64_t v64 = v58[1];
        *uint64_t v57 = *v58;
        v57[1] = v64;
        v57[2] = v58[2];
        id v65 = v63;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v66 = sub_23D003B88();
        (*(void (**)(void *, void **, uint64_t))(*(void *)(v66 - 8) + 16))(v57, v58, v66);
        break;
      case 5u:
        uint64_t v67 = (uint64_t)*v58;
        uint64_t v68 = v58[1];
        uint64_t v69 = (uint64_t)v58[3];
        uint64_t v70 = (uint64_t)v58[4];
        uint64_t v107 = v70;
        uint64_t v111 = v58[2];
        uint64_t v71 = (uint64_t)v58[6];
        uint64_t v99 = v71;
        uint64_t v103 = (uint64_t)v58[5];
        int v95 = v58[7];
        uint64_t v72 = (uint64_t)v58[8];
        char v73 = *((unsigned char *)v58 + 72);
        sub_23CEF00B0(v67, v68, v111, v69, v70, v103, v71, v95, v72, v73);
        *uint64_t v57 = v67;
        v57[1] = v68;
        uint64_t v55 = a3;
        v57[2] = v111;
        v57[3] = v69;
        v57[4] = v107;
        v57[5] = v103;
        v57[6] = v99;
        unsigned char v57[7] = v95;
        v57[8] = v72;
        *((unsigned char *)v57 + 72) = v73;
        break;
      default:
        uint64_t v60 = v58[1];
        *uint64_t v57 = *v58;
        v57[1] = v60;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v57, 0, 1, v14);
  }
  uint64_t v74 = *(int *)(v55 + 28);
  *(unsigned char *)(a1 + *(int *)(v55 + 24)) = *(unsigned char *)(a2 + *(int *)(v55 + 24));
  uint64_t v75 = a1 + v74;
  uint64_t v76 = (uint64_t *)(a2 + v74);
  uint64_t v77 = *v76;
  LOBYTE(v76) = *((unsigned char *)v76 + 8);
  *(void *)uint64_t v75 = v77;
  *(unsigned char *)(v75 + 8) = (_BYTE)v76;
  swift_retain();
  return a1;
}

uint64_t sub_23CEF3FB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = *(void **)(a2 + v8);
  int v10 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = v9;
  id v11 = v9;

  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v12 = v7[7];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void **)(a2 + v12);
    sub_23CEFA9FC(a1 + v12, type metadata accessor for BatchInteraction.ContentPolarity);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v16 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v17 + 48);
    int v19 = v18(v14, 1, v16);
    if (EnumCaseMultiPayload == 1)
    {
      if (v19)
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v22 = *v14;
            *uint64_t v13 = *v14;
            id v23 = v22;
            break;
          case 3u:
            id v24 = *v14;
            *uint64_t v13 = *v14;
            v13[1] = v14[1];
            v13[2] = v14[2];
            id v25 = v24;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v26 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v26 - 8) + 16))(v13, v14, v26);
            break;
          case 5u:
            uint64_t v103 = v14[1];
            char v108 = *v14;
            uint64_t v96 = (uint64_t)v14[3];
            uint64_t v99 = v14[2];
            uint64_t v92 = (uint64_t)v14[5];
            uint64_t v93 = (uint64_t)v14[4];
            uint64_t v90 = v14[7];
            uint64_t v91 = (uint64_t)v14[6];
            uint64_t v113 = (uint64_t)v14[8];
            char v118 = *((unsigned char *)v14 + 72);
            sub_23CEF00B0((uint64_t)*v14, v103, v99, v96, v93, v92, v91, v90, v113, v118);
            *uint64_t v13 = v108;
            v13[1] = v103;
            v13[2] = v99;
            v13[3] = v96;
            v13[4] = v93;
            v13[5] = v92;
            v13[6] = v91;
            v13[7] = v90;
            char v13[8] = v113;
            *((unsigned char *)v13 + 72) = v118;
            break;
          default:
            *uint64_t v13 = *v14;
            v13[1] = v14[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
      uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v28 = (void *)((char *)v13 + v27);
      uint64_t v29 = (void **)((char *)v14 + v27);
      if (v18(v29, 1, v16))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v42 = *v29;
            *uint64_t v28 = *v29;
            id v43 = v42;
            break;
          case 3u:
            char v44 = *v29;
            *uint64_t v28 = *v29;
            v28[1] = v29[1];
            v28[2] = v29[2];
            id v45 = v44;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v46 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v46 - 8) + 16))(v28, v29, v46);
            break;
          case 5u:
            uint64_t v47 = (uint64_t)*v29;
            id v48 = v29[2];
            v115 = v48;
            v120 = v29[1];
            uint64_t v49 = (uint64_t)v29[4];
            uint64_t v105 = v49;
            uint64_t v110 = (uint64_t)v29[3];
            uint64_t v50 = (uint64_t)v29[6];
            uint64_t v98 = v50;
            uint64_t v101 = (uint64_t)v29[5];
            int v95 = v29[7];
            uint64_t v51 = (uint64_t)v29[8];
            char v52 = *((unsigned char *)v29 + 72);
            sub_23CEF00B0(v47, v120, v48, v110, v49, v101, v50, v95, v51, v52);
            *uint64_t v28 = v47;
            v28[1] = v120;
            v28[2] = v115;
            v28[3] = v110;
            v28[4] = v105;
            v28[5] = v101;
            v28[6] = v98;
            v28[7] = v95;
            v28[8] = v51;
            *((unsigned char *)v28 + 72) = v52;
            break;
          default:
            *uint64_t v28 = *v29;
            v28[1] = v29[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v28, 0, 1, v16);
      }
    }
    else if (v19)
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v31 = *v14;
          *uint64_t v13 = *v14;
          id v32 = v31;
          break;
        case 3u:
          uint64_t v33 = *v14;
          *uint64_t v13 = *v14;
          v13[1] = v14[1];
          v13[2] = v14[2];
          id v34 = v33;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v35 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v35 - 8) + 16))(v13, v14, v35);
          break;
        case 5u:
          uint64_t v36 = (uint64_t)*v14;
          id v37 = v14[2];
          uint64_t v114 = v37;
          __int16 v119 = v14[1];
          uint64_t v38 = (uint64_t)v14[4];
          uint64_t v104 = v38;
          uint64_t v109 = (uint64_t)v14[3];
          uint64_t v39 = (uint64_t)v14[6];
          uint64_t v97 = v39;
          uint64_t v100 = (uint64_t)v14[5];
          uint64_t v94 = v14[7];
          uint64_t v40 = (uint64_t)v14[8];
          char v41 = *((unsigned char *)v14 + 72);
          sub_23CEF00B0(v36, v119, v37, v109, v38, v100, v39, v94, v40, v41);
          *uint64_t v13 = v36;
          v13[1] = v119;
          v13[2] = v114;
          v13[3] = v109;
          v13[4] = v104;
          v13[5] = v100;
          v13[6] = v97;
          v13[7] = v94;
          char v13[8] = v40;
          *((unsigned char *)v13 + 72) = v41;
          break;
        default:
          *uint64_t v13 = *v14;
          v13[1] = v14[1];
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v53 = a3[5];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  int v59 = v58(v54, 1, v56);
  int v60 = v58(v55, 1, v56);
  if (v59)
  {
    if (!v60)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          id v62 = *(void **)v55;
          *(void *)uint64_t v54 = *(void *)v55;
          id v63 = v62;
          break;
        case 3u:
          uint64_t v64 = *(void **)v55;
          *(void *)uint64_t v54 = *(void *)v55;
          *(void *)(v54 + 8) = *(void *)(v55 + 8);
          *(void *)(v54 + 16) = *(void *)(v55 + 16);
          id v65 = v64;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v66 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(v54, v55, v66);
          break;
        case 5u:
          uint64_t v67 = *(void *)v55;
          uint64_t v68 = *(void **)(v55 + 16);
          uint64_t v69 = *(void *)(v55 + 24);
          uint64_t v70 = *(void *)(v55 + 32);
          uint64_t v116 = v70;
          v121 = *(void **)(v55 + 8);
          uint64_t v71 = *(void *)(v55 + 48);
          uint64_t v106 = v71;
          uint64_t v111 = *(void *)(v55 + 40);
          uint64_t v102 = *(void *)(v55 + 56);
          uint64_t v123 = *(void *)(v55 + 64);
          char v72 = *(unsigned char *)(v55 + 72);
          sub_23CEF00B0(v67, v121, v68, v69, v70, v111, v71, v102, v123, v72);
          *(void *)uint64_t v54 = v67;
          *(void *)(v54 + 8) = v121;
          *(void *)(v54 + 16) = v68;
          *(void *)(v54 + 24) = v69;
          *(void *)(v54 + 32) = v116;
          *(void *)(v54 + 40) = v111;
          *(void *)(v54 + 48) = v106;
          *(void *)(v54 + 56) = v102;
          *(void *)(v54 + 64) = v123;
          *(unsigned char *)(v54 + 72) = v72;
          break;
        default:
          *(void *)uint64_t v54 = *(void *)v55;
          *(void *)(v54 + 8) = *(void *)(v55 + 8);
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      goto LABEL_46;
    }
LABEL_37:
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy((void *)v54, (const void *)v55, *(void *)(*(void *)(v61 - 8) + 64));
    goto LABEL_46;
  }
  if (v60)
  {
    sub_23CEFA9FC(v54, type metadata accessor for BatchInteraction.ContentPreview);
    goto LABEL_37;
  }
  if (a1 != a2)
  {
    sub_23CEFA9FC(v54, type metadata accessor for BatchInteraction.ContentPreview);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v78 = *(void **)v55;
        *(void *)uint64_t v54 = *(void *)v55;
        id v79 = v78;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v80 = *(void **)v55;
        *(void *)uint64_t v54 = *(void *)v55;
        *(void *)(v54 + 8) = *(void *)(v55 + 8);
        *(void *)(v54 + 16) = *(void *)(v55 + 16);
        id v81 = v80;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v82 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v54, v55, v82);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v83 = *(void *)v55;
        uint64_t v84 = *(void **)(v55 + 8);
        uint64_t v85 = *(void **)(v55 + 16);
        uint64_t v86 = *(void *)(v55 + 24);
        uint64_t v87 = *(void *)(v55 + 40);
        uint64_t v117 = v87;
        uint64_t v122 = *(void *)(v55 + 32);
        uint64_t v88 = *(void *)(v55 + 56);
        uint64_t v107 = v88;
        uint64_t v112 = *(void *)(v55 + 48);
        uint64_t v124 = *(void *)(v55 + 64);
        char v89 = *(unsigned char *)(v55 + 72);
        sub_23CEF00B0(v83, v84, v85, v86, v122, v87, v112, v88, v124, v89);
        *(void *)uint64_t v54 = v83;
        *(void *)(v54 + 8) = v84;
        *(void *)(v54 + 16) = v85;
        *(void *)(v54 + 24) = v86;
        *(void *)(v54 + 32) = v122;
        *(void *)(v54 + 40) = v117;
        *(void *)(v54 + 48) = v112;
        *(void *)(v54 + 56) = v107;
        *(void *)(v54 + 64) = v124;
        *(unsigned char *)(v54 + 72) = v89;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        *(void *)uint64_t v54 = *(void *)v55;
        *(void *)(v54 + 8) = *(void *)(v55 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
LABEL_46:
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v73 = a3[7];
  uint64_t v74 = a1 + v73;
  uint64_t v75 = (uint64_t *)(a2 + v73);
  uint64_t v76 = *v75;
  LOBYTE(v75) = *((unsigned char *)v75 + 8);
  *(void *)uint64_t v74 = v76;
  *(unsigned char *)(v74 + 8) = (_BYTE)v75;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23CEF4BC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for BatchInteraction(0);
  *(void *)(a1 + v6[5]) = *(void *)(a2 + v6[5]);
  *(void *)(a1 + v6[6]) = *(void *)(a2 + v6[6]);
  uint64_t v7 = v6[7];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v11 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  if (EnumCaseMultiPayload == 1)
  {
    if (v14)
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v17 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v8, v9, v17);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(void *)(v12 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
    uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    uint64_t v21 = &v8[v20];
    uint64_t v22 = &v9[v20];
    if (v13(v22, 1, v11))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v24 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v21, v22, *(void *)(v12 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    }
  }
  else
  {
    if (!v14)
    {
      uint64_t v18 = a3;
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v19 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v8, v9, v19);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(void *)(v12 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      goto LABEL_21;
    }
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3;
LABEL_21:
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v18[5];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (const void *)(a2 + v25);
  if (v13((char *)(a2 + v25), 1, v11))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v29 = sub_23D003B88();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(v12 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
  }
  uint64_t v30 = v18[7];
  *(unsigned char *)(a1 + v18[6]) = *(unsigned char *)(a2 + v18[6]);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  return a1;
}

uint64_t sub_23CEF50CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);

  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v10 = v7[7];
    uint64_t v11 = (char *)(a1 + v10);
    uint64_t v12 = (char *)(a2 + v10);
    sub_23CEFA9FC(a1 + v10, type metadata accessor for BatchInteraction.ContentPolarity);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v14 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
    int v17 = v16(v12, 1, v14);
    if (EnumCaseMultiPayload == 1)
    {
      if (v17)
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v20 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v11, v12, v20);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v11, v12, *(void *)(v15 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v23 = &v11[v22];
      uint64_t v24 = &v12[v22];
      if (v16(v24, 1, v14))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v26 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v23, v24, *(void *)(v15 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
      }
    }
    else if (v17)
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v21 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v11, v12, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(void *)(v15 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v27 = a3[5];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (!v33)
  {
    if (!v34)
    {
      if (a1 == a2) {
        goto LABEL_35;
      }
      sub_23CEFA9FC((uint64_t)v28, type metadata accessor for BatchInteraction.ContentPreview);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v37 = sub_23D003B88();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 32))(v28, v29, v37);
        swift_storeEnumTagMultiPayload();
        goto LABEL_35;
      }
      size_t v36 = *(void *)(v31 + 64);
      goto LABEL_29;
    }
    sub_23CEFA9FC((uint64_t)v28, type metadata accessor for BatchInteraction.ContentPreview);
LABEL_28:
    size_t v36 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218) - 8) + 64);
LABEL_29:
    memcpy(v28, v29, v36);
    goto LABEL_35;
  }
  if (v34) {
    goto LABEL_28;
  }
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v35 = sub_23D003B88();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 32))(v28, v29, v35);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(void *)(v31 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_35:
  uint64_t v38 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v41 = *v40;
  LOBYTE(v40) = *((unsigned char *)v40 + 8);
  *(void *)uint64_t v39 = v41;
  *(unsigned char *)(v39 + 8) = (_BYTE)v40;
  swift_release();
  return a1;
}

uint64_t sub_23CEF5728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CEF573C);
}

uint64_t sub_23CEF573C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BatchInteraction(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 8);
      if (v14 > 1) {
        return (v14 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_23CEF5854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CEF5868);
}

uint64_t sub_23CEF5868(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for BatchInteraction(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 28) + 8) = -(char)a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for Previewer()
{
  uint64_t result = qword_268BCD250;
  if (!qword_268BCD250) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_23CEF59CC()
{
  type metadata accessor for BatchInteraction(319);
  if (v0 <= 0x3F)
  {
    sub_23CEF5AA8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_23CEF5AA8()
{
  if (!qword_268BCD260)
  {
    type metadata accessor for BatchInteraction.ContentPreview(255);
    unint64_t v0 = sub_23D005DF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268BCD260);
    }
  }
}

uint64_t sub_23CEF5B00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CEF5B1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD3B0);
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_23D0048C8();
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (_OWORD *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_23D005588();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = a1;
  sub_23D005568();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F1B4B8], v12);
  uint64_t v17 = sub_23D005598();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v18 = (char *)v11 + *(int *)(v9 + 28);
  uint64_t v19 = *MEMORY[0x263F19860];
  uint64_t v20 = sub_23D004C28();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v18, v19, v20);
  __asm { FMOV            V0.2D, #16.0 }
  *uint64_t v11 = _Q0;
  sub_23CEFA994((uint64_t)v11, (uint64_t)v7, MEMORY[0x263F19048]);
  *(_WORD *)&v7[*(int *)(v5 + 44)] = 256;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD3B8);
  sub_23CEE82CC((uint64_t)v7, a2 + *(int *)(v26 + 36), &qword_268BCD3B0);
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = 0;
  *(_WORD *)(a2 + 16) = 1;
  swift_retain();
  sub_23CEE8BB4((uint64_t)v7, &qword_268BCD3B0);
  sub_23CEFA9FC((uint64_t)v11, MEMORY[0x263F19048]);
  return swift_release();
}

uint64_t sub_23CEF5DD4@<X0>(uint64_t a1@<X8>)
{
  return sub_23CEF5B1C(*v1, a1);
}

uint64_t sub_23CEF5DDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_23D004AF8();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD278);
  return sub_23CEF5E2C(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_23CEF5E2C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD280);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  *(void *)uint64_t v9 = sub_23D004C68();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD288);
  sub_23CEF5F50(a1, (uint64_t)&v9[*(int *)(v10 + 44)]);
  sub_23CEE82CC((uint64_t)v9, (uint64_t)v7, &qword_268BCD280);
  sub_23CEE82CC((uint64_t)v7, a2, &qword_268BCD280);
  uint64_t v11 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD290) + 48);
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  sub_23CEE8BB4((uint64_t)v9, &qword_268BCD280);
  return sub_23CEE8BB4((uint64_t)v7, &qword_268BCD280);
}

uint64_t sub_23CEF5F50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v182 = a2;
  id v183 = a1;
  uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD298);
  MEMORY[0x270FA5388](v179);
  uint64_t v180 = (char *)v145 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2A0);
  MEMORY[0x270FA5388](v152);
  uint64_t v154 = (_OWORD *)((char *)v145 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2A8);
  MEMORY[0x270FA5388](v178);
  uint64_t v155 = (char *)v145 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2B0);
  MEMORY[0x270FA5388](v181);
  uint64_t v6 = (char *)v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2B8);
  MEMORY[0x270FA5388](v153);
  uint64_t v151 = (void *)((char *)v145 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&long long v163 = type metadata accessor for WebView(0);
  MEMORY[0x270FA5388](v163);
  uint64_t v150 = (void *)((char *)v145 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2C0);
  MEMORY[0x270FA5388](v159);
  *(void *)&long long v161 = (char *)v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2C8);
  MEMORY[0x270FA5388](v175);
  int v164 = (char *)v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_23D003B88();
  uint64_t v162 = *(void *)(v170 - 8);
  uint64_t v11 = *(void *)(v162 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v170);
  long long v149 = (char *)v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  char v169 = (char *)v145 - v13;
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2D0);
  uint64_t v166 = *(void (***)(void, void, void))(v176 - 8);
  MEMORY[0x270FA5388](v176);
  *(void *)&long long v165 = (char *)v145 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2D8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2E0);
  MEMORY[0x270FA5388](v172);
  uint64_t v174 = (uint64_t)v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2E8);
  MEMORY[0x270FA5388](v156);
  unsigned int v157 = (char *)v145 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2F0);
  MEMORY[0x270FA5388](v173);
  *(void *)&long long v160 = (char *)v145 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2F8);
  MEMORY[0x270FA5388](v21);
  uint64_t v177 = (char *)v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Previewer();
  uint64_t v24 = v23 - 8;
  uint64_t v167 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v167 + 64);
  MEMORY[0x270FA5388](v23);
  uint64_t v168 = (uint64_t)v145 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD300);
  uint64_t v148 = *(void *)(v158 - 8);
  MEMORY[0x270FA5388](v158);
  long long v147 = (char *)v145 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)v145 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CEE82CC((uint64_t)v183 + *(int *)(v24 + 28), (uint64_t)v29, &qword_268BCD218);
  uint64_t v30 = type metadata accessor for BatchInteraction.ContentPreview(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v29, 1, v30) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_23CEF8E80();
    sub_23D004D88();
    sub_23CEE82CC((uint64_t)v6, (uint64_t)v17, &qword_268BCD2B0);
    swift_storeEnumTagMultiPayload();
    sub_23CEF8F58(&qword_268BCD368, &qword_268BCD2F8, (void (*)(void))sub_23CEF91A8, (void (*)(void))sub_23CEF92D0);
    sub_23CEF93F4();
    sub_23D004D88();
    uint64_t v31 = (uint64_t)v6;
    uint64_t v32 = &qword_268BCD2B0;
    return sub_23CEE8BB4(v31, v32);
  }
  else
  {
    v145[0] = v6;
    v145[1] = v15;
    uint64_t v171 = v21;
    long long v146 = v17;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v60 = *((void *)v29 + 1);
        uint64_t v61 = (uint64_t)v150;
        void *v150 = *(void *)v29;
        *(void *)(v61 + 8) = v60;
        type metadata accessor for WebView.HTMLContent(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v62 = v163;
        *(unsigned char *)(v61 + *(int *)(v163 + 20)) = 0;
        *(unsigned char *)(v61 + *(int *)(v62 + 24)) = 0;
        sub_23CEFA994(v61, v161, type metadata accessor for WebView);
        swift_storeEnumTagMultiPayload();
        *(void *)&long long v196 = MEMORY[0x263F1A830];
        *((void *)&v196 + 1) = MEMORY[0x263F1A820];
        swift_getOpaqueTypeConformance2();
        sub_23CEF93AC(&qword_268BCD388, (void (*)(uint64_t))type metadata accessor for WebView);
        uint64_t v63 = (uint64_t)v164;
        sub_23D004D88();
        sub_23CEE82CC(v63, v174, &qword_268BCD2C8);
        swift_storeEnumTagMultiPayload();
        sub_23CEF91A8();
        sub_23CEF92D0();
        uint64_t v64 = (uint64_t)v177;
        sub_23D004D88();
        sub_23CEE8BB4(v63, &qword_268BCD2C8);
        sub_23CEE82CC(v64, (uint64_t)v146, &qword_268BCD2F8);
        swift_storeEnumTagMultiPayload();
        sub_23CEF8F58(&qword_268BCD368, &qword_268BCD2F8, (void (*)(void))sub_23CEF91A8, (void (*)(void))sub_23CEF92D0);
        sub_23CEF93F4();
        sub_23D004D88();
        sub_23CEE8BB4(v64, &qword_268BCD2F8);
        uint64_t result = sub_23CEFA9FC(v61, type metadata accessor for WebView);
        break;
      case 2u:
        id v65 = *(void **)v29;
        *(void *)&long long v196 = v65;
        uint64_t v66 = v168;
        sub_23CEFA994((uint64_t)v183, v168, (uint64_t (*)(void))type metadata accessor for Previewer);
        unint64_t v67 = (*(unsigned __int8 *)(v167 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
        uint64_t v68 = swift_allocObject();
        sub_23CEF8DAC(v66, v68 + v67);
        *(void *)(v68 + ((v25 + v67 + 7) & 0xFFFFFFFFFFFFFFF8)) = v65;
        unint64_t v69 = sub_23CEF927C();
        id v183 = v65;
        uint64_t v70 = v147;
        sub_23D0052D8();
        swift_release();

        uint64_t v71 = v148;
        uint64_t v72 = v158;
        (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v157, v70, v158);
        swift_storeEnumTagMultiPayload();
        *(void *)&long long v196 = &type metadata for DataImage;
        *((void *)&v196 + 1) = v69;
        swift_getOpaqueTypeConformance2();
        *(void *)&long long v196 = MEMORY[0x263F1A830];
        *((void *)&v196 + 1) = MEMORY[0x263F1A820];
        swift_getOpaqueTypeConformance2();
        uint64_t v73 = v160;
        sub_23D004D88();
        sub_23CEE82CC(v73, v174, &qword_268BCD2F0);
        swift_storeEnumTagMultiPayload();
        sub_23CEF91A8();
        sub_23CEF92D0();
        uint64_t v74 = (uint64_t)v177;
        sub_23D004D88();
        sub_23CEE8BB4(v73, &qword_268BCD2F0);
        sub_23CEE82CC(v74, (uint64_t)v146, &qword_268BCD2F8);
        swift_storeEnumTagMultiPayload();
        sub_23CEF8F58(&qword_268BCD368, &qword_268BCD2F8, (void (*)(void))sub_23CEF91A8, (void (*)(void))sub_23CEF92D0);
        sub_23CEF93F4();
        sub_23D004D88();

        sub_23CEE8BB4(v74, &qword_268BCD2F8);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v70, v72);
        break;
      case 3u:
        uint64_t v76 = *(void **)v29;
        uint64_t v75 = (void *)*((void *)v29 + 1);
        uint64_t v77 = *((void *)v29 + 2);
        uint64_t v78 = sub_23D004C68();
        uint64_t v79 = (uint64_t)v151;
        *uint64_t v151 = v78;
        *(void *)(v79 + 8) = 0;
        *(unsigned char *)(v79 + 16) = 1;
        uint64_t v80 = (char *)(v79 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD398) + 44));
        sub_23CEF7DE4(v75, v77, (uint64_t)v183, v76, v80);
        swift_bridgeObjectRelease();
        sub_23CEE82CC(v79, (uint64_t)v154, &qword_268BCD2B8);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD320);
        sub_23CEE8D90(&qword_268BCD310, &qword_268BCD2B8);
        sub_23CEF8F58(&qword_268BCD318, &qword_268BCD320, (void (*)(void))sub_23CEF8FE0, (void (*)(void))sub_23CEF9154);
        uint64_t v81 = (uint64_t)v155;
        sub_23D004D88();
        sub_23CEE82CC(v81, (uint64_t)v180, &qword_268BCD2A8);
        swift_storeEnumTagMultiPayload();
        sub_23CEF8E80();
        uint64_t v82 = v145[0];
        sub_23D004D88();
        sub_23CEE8BB4(v81, &qword_268BCD2A8);
        sub_23CEE82CC(v82, (uint64_t)v146, &qword_268BCD2B0);
        swift_storeEnumTagMultiPayload();
        sub_23CEF8F58(&qword_268BCD368, &qword_268BCD2F8, (void (*)(void))sub_23CEF91A8, (void (*)(void))sub_23CEF92D0);
        sub_23CEF93F4();
        sub_23D004D88();

        sub_23CEE8BB4(v82, &qword_268BCD2B0);
        uint64_t v31 = v79;
        uint64_t v32 = &qword_268BCD2B8;
        return sub_23CEE8BB4(v31, v32);
      case 4u:
        uint64_t v83 = v162;
        uint64_t v84 = *(char **)(v162 + 32);
        uint64_t v179 = v162 + 32;
        uint64_t v180 = v84;
        uint64_t v85 = v169;
        uint64_t v86 = v29;
        uint64_t v87 = v170;
        ((void (*)(char *, char *, uint64_t))v84)(v169, v86, v170);
        uint64_t v178 = *(void *)(v83 + 16);
        uint64_t v88 = v149;
        ((void (*)(char *, char *, uint64_t))v178)(v149, v85, v87);
        uint64_t v89 = sub_23D005218();
        uint64_t v91 = v90;
        char v93 = v92 & 1;
        sub_23D005108();
        uint64_t v94 = sub_23D0051F8();
        unsigned int v157 = v95;
        uint64_t v158 = v94;
        LODWORD(v156) = v96;
        *(void *)&long long v160 = v97;
        swift_release();
        sub_23CEE7DE0(v89, v91, v93);
        swift_bridgeObjectRelease();
        *(void *)&long long v196 = v158;
        *((void *)&v196 + 1) = v157;
        v197[0] = v156 & 1;
        *(void *)&v197[8] = v160;
        uint64_t v98 = v168;
        sub_23CEFA994((uint64_t)v183, v168, (uint64_t (*)(void))type metadata accessor for Previewer);
        uint64_t v99 = v170;
        ((void (*)(char *, char *, uint64_t))v178)(v88, v169, v170);
        unint64_t v100 = (*(unsigned __int8 *)(v167 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
        uint64_t v101 = v162;
        unint64_t v102 = (v25 + *(unsigned __int8 *)(v162 + 80) + v100) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80);
        uint64_t v103 = swift_allocObject();
        sub_23CEF8DAC(v98, v103 + v100);
        ((void (*)(unint64_t, char *, uint64_t))v180)(v103 + v102, v88, v99);
        uint64_t v104 = MEMORY[0x263F1A830];
        uint64_t v105 = MEMORY[0x263F1A820];
        uint64_t v106 = v165;
        sub_23D0052D8();
        swift_release();
        sub_23CEE7DE0(v196, *((uint64_t *)&v196 + 1), v197[0]);
        swift_bridgeObjectRelease();
        uint64_t v107 = v166;
        uint64_t v108 = v176;
        v166[2](v161, v106, v176);
        swift_storeEnumTagMultiPayload();
        *(void *)&long long v196 = v104;
        *((void *)&v196 + 1) = v105;
        swift_getOpaqueTypeConformance2();
        sub_23CEF93AC(&qword_268BCD388, (void (*)(uint64_t))type metadata accessor for WebView);
        uint64_t v109 = (uint64_t)v164;
        sub_23D004D88();
        sub_23CEE82CC(v109, v174, &qword_268BCD2C8);
        swift_storeEnumTagMultiPayload();
        sub_23CEF91A8();
        sub_23CEF92D0();
        uint64_t v110 = (uint64_t)v177;
        sub_23D004D88();
        sub_23CEE8BB4(v109, &qword_268BCD2C8);
        sub_23CEE82CC(v110, (uint64_t)v146, &qword_268BCD2F8);
        swift_storeEnumTagMultiPayload();
        sub_23CEF8F58(&qword_268BCD368, &qword_268BCD2F8, (void (*)(void))sub_23CEF91A8, (void (*)(void))sub_23CEF92D0);
        sub_23CEF93F4();
        sub_23D004D88();
        sub_23CEE8BB4(v110, &qword_268BCD2F8);
        ((void (*)(uint64_t, uint64_t))v107[1])(v106, v108);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v101 + 8))(v169, v170);
        break;
      case 5u:
        uint64_t v112 = *(char **)v29;
        uint64_t v111 = (char *)*((void *)v29 + 1);
        uint64_t v113 = (void *)*((void *)v29 + 2);
        uint64_t v114 = *((void *)v29 + 3);
        uint64_t v115 = *((void *)v29 + 4);
        uint64_t v116 = *((void *)v29 + 5);
        uint64_t v117 = *((void *)v29 + 6);
        uint64_t v118 = *((void *)v29 + 7);
        uint64_t v119 = *((void *)v29 + 8);
        int v120 = v29[72];
        id v183 = v113;
        uint64_t v176 = v119;
        uint64_t v177 = v111;
        LODWORD(v175) = v120;
        uint64_t v173 = v116;
        uint64_t v174 = v114;
        uint64_t v172 = v117;
        char v169 = v112;
        uint64_t v170 = v118;
        uint64_t v168 = v115;
        if (v120)
        {
          if (v120 == 1)
          {
            *(void *)&long long v196 = v112;
            *((void *)&v196 + 1) = v111;
            *(void *)v197 = v113;
            *(void *)&v197[8] = v114;
            *(void *)&v197[16] = v115;
            *(void *)&v197[24] = v116;
            *(void *)&v197[32] = v117;
            *(void *)&v197[40] = v118;
            *(void *)&v197[48] = v119;
            char v198 = 1;
            v121 = v111;
            uint64_t v122 = v112;
            sub_23CEF01C0(v113);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD340);
            sub_23CEF901C();
            sub_23CEF9100();
            sub_23D004D88();
            long long v190 = v184;
            long long v191 = v185;
            long long v192 = v186;
            long long v193 = v187;
            uint64_t v194 = v188;
            __int16 v195 = v189;
          }
          else
          {
            *(void *)&long long v190 = v112;
            *((void *)&v190 + 1) = v111;
            *(void *)&long long v191 = v113;
            *((void *)&v191 + 1) = v114;
            *(void *)&long long v192 = v115;
            *((void *)&v192 + 1) = v116;
            *(void *)&long long v193 = v117;
            *((void *)&v193 + 1) = v118;
            uint64_t v194 = 0;
            __int16 v195 = 256;
            swift_bridgeObjectRetain();
            uint64_t v125 = v112;
            swift_bridgeObjectRetain();
            sub_23CEF0204(v116, v117, v118);
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD330);
          sub_23CEF8FE0();
          sub_23CEF9154();
          sub_23D004D88();
        }
        else
        {
          if (v111)
          {
            long long v190 = (unint64_t)v112;
            LOWORD(v191) = 256;
            sub_23CEF9058();
            sub_23CEF90AC();
            swift_bridgeObjectRetain();
          }
          else
          {
            type metadata accessor for FullScreenPreviewController(0);
            sub_23CEF93AC(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
            swift_bridgeObjectRetain();
            uint64_t v123 = sub_23D004618();
            *(void *)&long long v190 = v112;
            *((void *)&v190 + 1) = v123;
            LOWORD(v191) = v124 & 1;
            sub_23CEF9058();
            sub_23CEF90AC();
          }
          sub_23D004D88();
          uint64_t v126 = v197[0];
          int v127 = v197[1];
          uint64_t v128 = 256;
          if (!v197[1]) {
            uint64_t v128 = 0;
          }
          *(void *)v197 = v128 | v197[0];
          memset(&v197[8], 0, 48);
          char v198 = 0;
          uint64_t v166 = (void (**)(void, void, void))*((void *)&v196 + 1);
          uint64_t v167 = v196;
          LODWORD(v165) = v126;
          LODWORD(v164) = v127;
          sub_23CEF95FC(v196, *((uint64_t *)&v196 + 1), v126, v127);
          __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD340);
          sub_23CEF901C();
          sub_23CEF9100();
          sub_23D004D88();
          long long v129 = (void *)v184;
          long long v130 = v185;
          uint64_t v131 = v186;
          uint64_t v132 = v188;
          char v133 = v189;
          long long v190 = v184;
          *(void *)&long long v160 = *((void *)&v184 + 1);
          long long v191 = v185;
          long long v192 = v186;
          uint64_t v162 = v187;
          *(void *)&long long v163 = *((void *)&v186 + 1);
          long long v193 = v187;
          *(void *)&long long v161 = *((void *)&v187 + 1);
          uint64_t v194 = v188;
          __int16 v195 = v189;
          sub_23CEF9534((void *)v184, *((void **)&v184 + 1), (void *)v185, *((uint64_t *)&v185 + 1), v186, *((uint64_t *)&v186 + 1), v187, *((uint64_t *)&v187 + 1), v188, v189);
          __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD330);
          sub_23CEF8FE0();
          sub_23CEF9154();
          sub_23D004D88();
          sub_23CEF97C8(v167, (uint64_t)v166, v165, (char)v164);
          sub_23CEF9700(v129, (void *)v160, (void *)v130, *((uint64_t *)&v130 + 1), v131, v163, v162, v161, v132, v133);
        }
        long long v134 = *(_OWORD *)v197;
        long long v135 = *(_OWORD *)&v197[16];
        long long v136 = *(_OWORD *)&v197[32];
        uint64_t v137 = *(void *)&v197[48];
        char v138 = v198;
        char v139 = v199;
        long long v165 = v196;
        long long v163 = *(_OWORD *)v197;
        long long v160 = *(_OWORD *)&v197[32];
        long long v161 = *(_OWORD *)&v197[16];
        long long v140 = v154;
        *uint64_t v154 = v196;
        v140[1] = v134;
        v140[2] = v135;
        v140[3] = v136;
        *((void *)v140 + 8) = v137;
        *((unsigned char *)v140 + 72) = v138;
        *((unsigned char *)v140 + 73) = v139;
        uint64_t v141 = v137;
        uint64_t v167 = v137;
        swift_storeEnumTagMultiPayload();
        uint64_t v166 = (void (**)(void, void, void))v165;
        int v164 = (char *)v163;
        *(void *)&long long v165 = *((void *)&v165 + 1);
        uint64_t v162 = v161;
        *(void *)&long long v163 = *((void *)&v163 + 1);
        *(void *)&long long v161 = *((void *)&v161 + 1);
        long long v142 = v160;
        *(void *)&long long v160 = *((void *)&v160 + 1);
        sub_23CEF9470(v166, *((void **)&v165 + 1), v164, *((uint64_t *)&v163 + 1), v162, *((uint64_t *)&v161 + 1), v142, *((uint64_t *)&v142 + 1), v141, v138, v139);
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD320);
        sub_23CEE8D90(&qword_268BCD310, &qword_268BCD2B8);
        sub_23CEF8F58(&qword_268BCD318, &qword_268BCD320, (void (*)(void))sub_23CEF8FE0, (void (*)(void))sub_23CEF9154);
        uint64_t v143 = (uint64_t)v155;
        sub_23D004D88();
        sub_23CEE82CC(v143, (uint64_t)v180, &qword_268BCD2A8);
        swift_storeEnumTagMultiPayload();
        sub_23CEF8E80();
        uint64_t v144 = v145[0];
        sub_23D004D88();
        sub_23CEE8BB4(v143, &qword_268BCD2A8);
        sub_23CEE82CC(v144, (uint64_t)v146, &qword_268BCD2B0);
        swift_storeEnumTagMultiPayload();
        sub_23CEF8F58(&qword_268BCD368, &qword_268BCD2F8, (void (*)(void))sub_23CEF91A8, (void (*)(void))sub_23CEF92D0);
        sub_23CEF93F4();
        sub_23D004D88();
        sub_23CEF05F8(v169, v177, v183, v174, v168, v173, v172, v170, v176, v175);
        sub_23CEF963C(v166, (void *)v165, v164, v163, v162, v161, v142, v160, v167, v138, v139);
        uint64_t v31 = v144;
        uint64_t v32 = &qword_268BCD2B0;
        return sub_23CEE8BB4(v31, v32);
      default:
        int v34 = *(char **)v29;
        uint64_t v179 = *((void *)v29 + 1);
        uint64_t v180 = v34;
        *(void *)&long long v196 = v34;
        *((void *)&v196 + 1) = v179;
        sub_23CEE8D00();
        swift_bridgeObjectRetain();
        uint64_t v35 = sub_23D005228();
        uint64_t v37 = v36;
        char v39 = v38 & 1;
        sub_23D005108();
        uint64_t v40 = sub_23D0051F8();
        uint64_t v42 = v41;
        LODWORD(v178) = v43;
        uint64_t v45 = v44;
        swift_release();
        sub_23CEE7DE0(v35, v37, v39);
        swift_bridgeObjectRelease();
        *(void *)&long long v196 = v40;
        *((void *)&v196 + 1) = v42;
        v197[0] = v178 & 1;
        *(void *)&v197[8] = v45;
        uint64_t v46 = v168;
        sub_23CEFA994((uint64_t)v183, v168, (uint64_t (*)(void))type metadata accessor for Previewer);
        unint64_t v47 = (*(unsigned __int8 *)(v167 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
        unint64_t v48 = (v25 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v49 = swift_allocObject();
        sub_23CEF8DAC(v46, v49 + v47);
        uint64_t v50 = (char **)(v49 + v48);
        uint64_t v51 = v179;
        *uint64_t v50 = v180;
        v50[1] = (char *)v51;
        uint64_t v52 = MEMORY[0x263F1A830];
        uint64_t v53 = MEMORY[0x263F1A820];
        uint64_t v54 = v165;
        sub_23D0052D8();
        swift_release();
        sub_23CEE7DE0(v196, *((uint64_t *)&v196 + 1), v197[0]);
        swift_bridgeObjectRelease();
        uint64_t v55 = v166;
        uint64_t v56 = v176;
        ((void (**)(char *, uint64_t, uint64_t))v166)[2](v157, v54, v176);
        swift_storeEnumTagMultiPayload();
        unint64_t v57 = sub_23CEF927C();
        *(void *)&long long v196 = &type metadata for DataImage;
        *((void *)&v196 + 1) = v57;
        swift_getOpaqueTypeConformance2();
        *(void *)&long long v196 = v52;
        *((void *)&v196 + 1) = v53;
        swift_getOpaqueTypeConformance2();
        uint64_t v58 = v160;
        sub_23D004D88();
        sub_23CEE82CC(v58, v174, &qword_268BCD2F0);
        swift_storeEnumTagMultiPayload();
        sub_23CEF91A8();
        sub_23CEF92D0();
        uint64_t v59 = (uint64_t)v177;
        sub_23D004D88();
        sub_23CEE8BB4(v58, &qword_268BCD2F0);
        sub_23CEE82CC(v59, (uint64_t)v146, &qword_268BCD2F8);
        swift_storeEnumTagMultiPayload();
        sub_23CEF8F58(&qword_268BCD368, &qword_268BCD2F8, (void (*)(void))sub_23CEF91A8, (void (*)(void))sub_23CEF92D0);
        sub_23CEF93F4();
        sub_23D004D88();
        sub_23CEE8BB4(v59, &qword_268BCD2F8);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v55[1])(v54, v56);
        break;
    }
  }
  return result;
}

uint64_t sub_23CEF7BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D004028();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *(unsigned char *)(a1 + *(int *)(type metadata accessor for Previewer() + 28) + 8);
  uint64_t v12 = swift_retain();
  sub_23CF39C80(v12, v11);
  swift_release();
  uint64_t v13 = sub_23D003B88();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v10, a2, v13);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for BatchInteraction(0);
  sub_23D004038();
  sub_23CF257D0((uint64_t)v10, (uint64_t)v7);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_23CEFA9FC((uint64_t)v10, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
}

uint64_t sub_23CEF7DE4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char *a5@<X8>)
{
  uint64_t v59 = a4;
  uint64_t v57 = a3;
  uint64_t v6 = a1;
  uint64_t v54 = a1;
  uint64_t v64 = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD300);
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v61 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v66 = (char *)&v52 - v10;
  uint64_t v11 = type metadata accessor for Previewer();
  uint64_t v56 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v56 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v55 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD2D0);
  uint64_t v67 = *(void *)(v60 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v60);
  uint64_t v58 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v65 = (char *)&v52 - v15;
  id v68 = v6;
  uint64_t v69 = a2;
  uint64_t v53 = a2;
  sub_23CEE8D00();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_23D005228();
  uint64_t v18 = v17;
  LOBYTE(a2) = v19 & 1;
  sub_23D005108();
  uint64_t v20 = (void *)sub_23D0051F8();
  uint64_t v22 = v21;
  LOBYTE(v6) = v23;
  uint64_t v25 = v24;
  swift_release();
  sub_23CEE7DE0(v16, v18, a2);
  swift_bridgeObjectRelease();
  id v68 = v20;
  uint64_t v69 = v22;
  char v70 = v6 & 1;
  uint64_t v71 = v25;
  uint64_t v26 = v57;
  uint64_t v27 = v55;
  sub_23CEFA994(v57, v55, (uint64_t (*)(void))type metadata accessor for Previewer);
  unint64_t v28 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  unint64_t v29 = (v12 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v27;
  sub_23CEF8DAC(v27, v30 + v28);
  uint64_t v32 = (void *)(v30 + v29);
  uint64_t v33 = v53;
  *uint64_t v32 = v54;
  v32[1] = v33;
  swift_bridgeObjectRetain();
  int v34 = v65;
  sub_23D0052D8();
  swift_release();
  sub_23CEE7DE0((uint64_t)v68, v69, v70);
  swift_bridgeObjectRelease();
  uint64_t v35 = v59;
  id v68 = v59;
  sub_23CEFA994(v26, v31, (uint64_t (*)(void))type metadata accessor for Previewer);
  uint64_t v36 = swift_allocObject();
  sub_23CEF8DAC(v31, v36 + v28);
  *(void *)(v36 + v29) = v35;
  sub_23CEF927C();
  id v37 = v35;
  char v38 = v66;
  sub_23D0052D8();
  swift_release();

  char v39 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  uint64_t v40 = v58;
  uint64_t v41 = v60;
  v39(v58, v34, v60);
  uint64_t v42 = v61;
  uint64_t v43 = v62;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  uint64_t v45 = v38;
  uint64_t v46 = v63;
  v44(v61, v45, v63);
  unint64_t v47 = v64;
  v39(v64, v40, v41);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD3A0);
  v44(&v47[*(int *)(v48 + 48)], v42, v46);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v43 + 8);
  v49(v66, v46);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v67 + 8);
  v50(v65, v41);
  v49(v42, v46);
  return ((uint64_t (*)(char *, uint64_t))v50)(v40, v41);
}

uint64_t sub_23CEF82FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23D004028();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v13 = *(unsigned char *)(a1 + *(int *)(type metadata accessor for Previewer() + 28) + 8);
  uint64_t v14 = swift_retain();
  sub_23CF39C80(v14, v13);
  swift_release();
  *uint64_t v12 = a2;
  v12[1] = a3;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for BatchInteraction(0);
  swift_bridgeObjectRetain();
  sub_23D004038();
  sub_23CF257D0((uint64_t)v12, (uint64_t)v9);
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_23CEFA9FC((uint64_t)v12, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
}

uint64_t sub_23CEF84C0(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_23D004028();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v11 = *(unsigned char *)(a1 + *(int *)(type metadata accessor for Previewer() + 28) + 8);
  uint64_t v12 = swift_retain();
  sub_23CF39C80(v12, v11);
  swift_release();
  *uint64_t v10 = a2;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for BatchInteraction(0);
  id v13 = a2;
  sub_23D004038();
  sub_23CF257D0((uint64_t)v10, (uint64_t)v7);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_23CEFA9FC((uint64_t)v10, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
}

uint64_t sub_23CEF867C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1 - 8;
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = type metadata accessor for BatchInteraction(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CEFA994(v3, (uint64_t)v10, type metadata accessor for BatchInteraction);
  char v11 = *(unsigned char *)(v3 + *(int *)(v5 + 32));
  sub_23CEFA994(v3, (uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for Previewer);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = swift_allocObject();
  sub_23CEF8DAC((uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD268);
  uint64_t v15 = a2 + v14[12];
  type metadata accessor for FullScreenPreviewController(0);
  sub_23CEF93AC(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
  *(void *)uint64_t v15 = sub_23D004618();
  *(unsigned char *)(v15 + 8) = v16 & 1;
  sub_23CEFA994((uint64_t)v10, a2, type metadata accessor for BatchInteraction);
  *(unsigned char *)(a2 + v14[9]) = v11;
  uint64_t result = sub_23CEFA9FC((uint64_t)v10, type metadata accessor for BatchInteraction);
  *(void *)(a2 + v14[11]) = MEMORY[0x263F8EE78];
  uint64_t v18 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a2 + v14[10]);
  *uint64_t v18 = sub_23CEF8E10;
  v18[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v13;
  return result;
}

uint64_t sub_23CEF88C4()
{
  uint64_t v1 = type metadata accessor for Previewer();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v16 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v3, v4);
  uint64_t v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v5 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  int v10 = v9(v6, 1, v8);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v14 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v6, v14);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
          break;
        default:
          break;
      }
    }
    v6 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v9(v6, 1, v8))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else if (!v10)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
LABEL_7:
        swift_bridgeObjectRelease();
        break;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_12:
        uint64_t v11 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
        break;
      case 5u:
LABEL_13:
        sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
        break;
      default:
        break;
    }
  }
  uint64_t v12 = v0 + v3 + *(int *)(v1 + 20);
  if (!v9(v12, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:

        break;
      case 3u:

        swift_bridgeObjectRelease();
        break;
      case 4u:
        uint64_t v13 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        break;
      case 5u:
        sub_23CEF05F8(*(void **)v12, *(void **)(v12 + 8), *(void **)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void *)(v12 + 64), *(unsigned char *)(v12 + 72));
        break;
      default:
        break;
    }
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v16, v2 | 7);
}

uint64_t sub_23CEF8DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Previewer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CEF8E10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for Previewer() - 8);
  uint64_t v4 = (void *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_23CEF5DDC(v4, a1);
}

unint64_t sub_23CEF8E80()
{
  unint64_t result = qword_268BCD308;
  if (!qword_268BCD308)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD2A8);
    sub_23CEE8D90(&qword_268BCD310, &qword_268BCD2B8);
    sub_23CEF8F58(&qword_268BCD318, &qword_268BCD320, (void (*)(void))sub_23CEF8FE0, (void (*)(void))sub_23CEF9154);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD308);
  }
  return result;
}

uint64_t sub_23CEF8F58(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CEF8FE0()
{
  return sub_23CEF8F58(&qword_268BCD328, &qword_268BCD330, (void (*)(void))sub_23CEF901C, (void (*)(void))sub_23CEF9100);
}

uint64_t sub_23CEF901C()
{
  return sub_23CEF8F58(&qword_268BCD338, &qword_268BCD340, (void (*)(void))sub_23CEF9058, (void (*)(void))sub_23CEF90AC);
}

unint64_t sub_23CEF9058()
{
  unint64_t result = qword_268BCD348;
  if (!qword_268BCD348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD348);
  }
  return result;
}

unint64_t sub_23CEF90AC()
{
  unint64_t result = qword_268BCD350;
  if (!qword_268BCD350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD350);
  }
  return result;
}

unint64_t sub_23CEF9100()
{
  unint64_t result = qword_268BCD358;
  if (!qword_268BCD358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD358);
  }
  return result;
}

unint64_t sub_23CEF9154()
{
  unint64_t result = qword_268BCD360;
  if (!qword_268BCD360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD360);
  }
  return result;
}

unint64_t sub_23CEF91A8()
{
  unint64_t result = qword_268BCD370;
  if (!qword_268BCD370)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD2F0);
    sub_23CEF927C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD370);
  }
  return result;
}

unint64_t sub_23CEF927C()
{
  unint64_t result = qword_268BCD378;
  if (!qword_268BCD378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD378);
  }
  return result;
}

unint64_t sub_23CEF92D0()
{
  unint64_t result = qword_268BCD380;
  if (!qword_268BCD380)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD2C8);
    swift_getOpaqueTypeConformance2();
    sub_23CEF93AC(&qword_268BCD388, (void (*)(uint64_t))type metadata accessor for WebView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD380);
  }
  return result;
}

uint64_t sub_23CEF93AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23CEF93F4()
{
  unint64_t result = qword_268BCD390;
  if (!qword_268BCD390)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD2B0);
    sub_23CEF8E80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD390);
  }
  return result;
}

uint64_t sub_23CEF9470(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  unsigned __int8 v11 = a8;
  if (a11)
  {
    swift_bridgeObjectRetain();
    id v15 = a1;
    swift_bridgeObjectRetain();
    return sub_23CEF0204(a6, a7, v11);
  }
  else
  {
    char v18 = a10 & 1;
    return sub_23CEF9534(a1, a2, a3, a4, a5, a6, a7, a8, a9, v18);
  }
}

uint64_t sub_23CEF9534(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10)
  {
    id v12 = a2;
    id v13 = a1;
    sub_23CEF01C0(a3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    return sub_23CEF95FC((uint64_t)a1, (uint64_t)a2, (uint64_t)a3, BYTE1(a3) & 1);
  }
}

uint64_t sub_23CEF95FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    swift_retain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_23CEF963C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  unsigned __int8 v11 = a8;
  if (a11)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_23CEF0740(a6, a7, v11);
  }
  else
  {
    char v16 = a10 & 1;
    return sub_23CEF9700(a1, a2, a3, a4, a5, a6, a7, a8, a9, v16);
  }
}

uint64_t sub_23CEF9700(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10)
  {

    sub_23CEF0700(a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_23CEF97C8((uint64_t)a1, (uint64_t)a2, (uint64_t)a3, BYTE1(a3) & 1);
  }
}

uint64_t sub_23CEF97C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result = swift_bridgeObjectRelease();
  if ((a4 & 1) == 0)
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_23CEF9814()
{
  uint64_t v1 = type metadata accessor for Previewer();
  uint64_t v19 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v17 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v2 = sub_23D003B88();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v16 = *(void *)(v3 + 64);
  uint64_t v20 = v0;
  uint64_t v18 = (v19 + 16) & ~v19;
  uint64_t v5 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v18, v5);
  uint64_t v6 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v7 = v0 + v18 + *(int *)(v6 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v9 = type metadata accessor for BatchInteraction.ContentPreview(0);
  int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  int v11 = v10(v7, 1, v9);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = v2;
    if (!v11)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v7, *(void **)(v7 + 8), *(void **)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
          break;
        default:
          break;
      }
    }
    v7 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v10(v7, 1, v9))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else
  {
    uint64_t v12 = v2;
    if (!v11)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
LABEL_7:
          swift_bridgeObjectRelease();
          break;
        case 2u:
LABEL_10:

          break;
        case 3u:
LABEL_11:

          swift_bridgeObjectRelease();
          break;
        case 4u:
LABEL_12:
          (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v12);
          break;
        case 5u:
LABEL_13:
          sub_23CEF05F8(*(void **)v7, *(void **)(v7 + 8), *(void **)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
          break;
        default:
          break;
      }
    }
  }
  uint64_t v13 = v0 + v18 + *(int *)(v1 + 20);
  if (!v10(v13, 1, v9))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:

        break;
      case 3u:

        swift_bridgeObjectRelease();
        break;
      case 4u:
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
        break;
      case 5u:
        sub_23CEF05F8(*(void **)v13, *(void **)(v13 + 8), *(void **)(v13 + 16), *(void *)(v13 + 24), *(void *)(v13 + 32), *(void *)(v13 + 40), *(void *)(v13 + 48), *(void *)(v13 + 56), *(void *)(v13 + 64), *(unsigned char *)(v13 + 72));
        break;
      default:
        break;
    }
  }
  uint64_t v14 = (v18 + v17 + v4) & ~v4;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v20 + v14, v12);

  return MEMORY[0x270FA0238](v20, v14 + v16, v19 | v4 | 7);
}

uint64_t sub_23CEF9D48()
{
  uint64_t v1 = *(void *)(type metadata accessor for Previewer() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_23D003B88() - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_23CEF7BF4(v0 + v2, v5);
}

uint64_t objectdestroy_7Tm()
{
  uint64_t v1 = type metadata accessor for Previewer();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v16 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v3, v4);
  uint64_t v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v5 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  int v10 = v9(v6, 1, v8);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v14 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v6, v14);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
          break;
        default:
          break;
      }
    }
    v6 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v9(v6, 1, v8))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else if (!v10)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
LABEL_7:
        swift_bridgeObjectRelease();
        break;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_12:
        uint64_t v11 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
        break;
      case 5u:
LABEL_13:
        sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
        break;
      default:
        break;
    }
  }
  uint64_t v12 = v0 + v3 + *(int *)(v1 + 20);
  if (!v9(v12, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:

        break;
      case 3u:

        swift_bridgeObjectRelease();
        break;
      case 4u:
        uint64_t v13 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        break;
      case 5u:
        sub_23CEF05F8(*(void **)v12, *(void **)(v12 + 8), *(void **)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void *)(v12 + 64), *(unsigned char *)(v12 + 72));
        break;
      default:
        break;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, ((v16 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_23CEFA328()
{
  uint64_t v1 = *(void *)(type metadata accessor for Previewer() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23CEF82FC(v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v1 = type metadata accessor for Previewer();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v17 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v3, v4);
  uint64_t v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v5 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  int v10 = v9(v6, 1, v8);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v15 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v6, v15);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
          break;
        default:
          break;
      }
    }
    v6 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v9(v6, 1, v8))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else if (!v10)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
LABEL_7:
        swift_bridgeObjectRelease();
        break;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_12:
        uint64_t v11 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
        break;
      case 5u:
LABEL_13:
        sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
        break;
      default:
        break;
    }
  }
  uint64_t v12 = v0 + v3 + *(int *)(v1 + 20);
  if (!v9(v12, 1, v8))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:

        break;
      case 3u:

        swift_bridgeObjectRelease();
        break;
      case 4u:
        uint64_t v14 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
        break;
      case 5u:
        sub_23CEF05F8(*(void **)v12, *(void **)(v12 + 8), *(void **)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void *)(v12 + 64), *(unsigned char *)(v12 + 72));
        break;
      default:
        break;
    }
  }
  unint64_t v13 = (v17 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  return MEMORY[0x270FA0238](v0, v13 + 8, v2 | 7);
}

uint64_t sub_23CEFA8AC()
{
  uint64_t v1 = *(void *)(type metadata accessor for Previewer() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_23CEF84C0(v0 + v2, *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

ValueMetadata *type metadata accessor for DataImage()
{
  return &type metadata for DataImage;
}

uint64_t sub_23CEFA93C()
{
  return sub_23CEE8D90(&qword_268BCD3A8, &qword_268BCD268);
}

uint64_t sub_23CEFA978()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CEFA994(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23CEFA9FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_23CEFAA60()
{
  unint64_t result = qword_268BCD3C0;
  if (!qword_268BCD3C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD3B8);
    sub_23CEFAB00();
    sub_23CEE8D90(&qword_268BCD3D8, &qword_268BCD3B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD3C0);
  }
  return result;
}

unint64_t sub_23CEFAB00()
{
  unint64_t result = qword_268BCD3C8;
  if (!qword_268BCD3C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD3D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD3C8);
  }
  return result;
}

BOOL sub_23CEFAB74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_23CEFAB88(_OWORD *a1, _OWORD *a2)
{
  sub_23CF05EA8(a1, v4);
  sub_23CF05EA8(a2, v5);
  return sub_23CF041B4(v4, v5) & 1;
}

uint64_t sub_23CEFABE4(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 176) = a3;
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = a2;
  uint64_t v4 = sub_23D004058();
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = *(void *)(v4 - 8);
  *(void *)(v3 + 72) = swift_task_alloc();
  *(void *)(v3 + 80) = swift_task_alloc();
  *(void *)(v3 + 88) = type metadata accessor for BatchInteraction.ContentPreview(0);
  *(void *)(v3 + 96) = swift_task_alloc();
  *(void *)(v3 + 104) = swift_task_alloc();
  *(void *)(v3 + 112) = swift_task_alloc();
  *(void *)(v3 + 120) = swift_task_alloc();
  uint64_t v5 = sub_23D0041B8();
  *(void *)(v3 + 128) = v5;
  *(void *)(v3 + 136) = *(void *)(v5 - 8);
  *(void *)(v3 + 144) = swift_task_alloc();
  *(void *)(v3 + 152) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD498);
  *(void *)(v3 + 160) = swift_task_alloc();
  *(void *)(v3 + 168) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23CEFADBC, 0, 0);
}

uint64_t sub_23CEFADBC()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  sub_23CEFBC50(*(unsigned char *)(v0 + 176), v2);
  sub_23CEE82CC(v2, v1, &qword_268BCD498);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = *(void **)(v0 + 48);
    sub_23CEE8BB4(*(void *)(v0 + 160), &qword_268BCD498);
    type metadata accessor for BatchInteraction.ContentPreview.Err(0);
    sub_23CF05DAC((unint64_t *)&qword_268BCD4A0, (void (*)(uint64_t))type metadata accessor for BatchInteraction.ContentPreview.Err);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    uint64_t v7 = v5;
LABEL_3:
    sub_23CEE8BB4(v7, &qword_268BCD498);
    goto LABEL_28;
  }
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v10 = *(void *)(v0 + 136);
  uint64_t v9 = *(void *)(v0 + 144);
  uint64_t v11 = *(void *)(v0 + 128);
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 32))(v8, *(void *)(v0 + 160), v11);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v12(v9, v8, v11);
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v9, v11);
  if (v13 == *MEMORY[0x263F3C558])
  {
    uint64_t v14 = *(void *)(v0 + 168);
    uint64_t v16 = *(void **)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 128);
    uint64_t v18 = *(void *)(v0 + 136);
    uint64_t v19 = *(void **)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
    sub_23CEE8BB4(v14, &qword_268BCD498);
    (*(void (**)(void *, uint64_t))(v18 + 96))(v16, v17);
    uint64_t v20 = v16[1];
    *uint64_t v19 = *v16;
    v19[1] = v20;
LABEL_6:
    swift_storeEnumTagMultiPayload();
    goto LABEL_28;
  }
  if (v13 == *MEMORY[0x263F3C578])
  {
    uint64_t v21 = *(uint64_t **)(v0 + 144);
    (*(void (**)(uint64_t *, void))(*(void *)(v0 + 136) + 96))(v21, *(void *)(v0 + 128));
    uint64_t v22 = *v21;
    unint64_t v23 = v21[1];
    id v24 = objc_allocWithZone(MEMORY[0x263F827E8]);
    sub_23CF05F28(v22, v23);
    uint64_t v25 = (void *)sub_23D003CF8();
    id v26 = objc_msgSend(v24, sel_initWithData_, v25);
    sub_23CF05F80(v22, v23);

    uint64_t v27 = *(void *)(v0 + 168);
    uint64_t v28 = *(void *)(v0 + 152);
    uint64_t v30 = *(void *)(v0 + 128);
    uint64_t v29 = *(void *)(v0 + 136);
    if (v26)
    {
      uint64_t v31 = *(void **)(v0 + 120);
      uint64_t v32 = *(void **)(v0 + 48);
      uint64_t v145 = *(void *)(v0 + 40);
      sub_23CF05F80(v22, v23);

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
      sub_23CEE8BB4(v27, &qword_268BCD498);
      *uint64_t v31 = v26;
LABEL_13:
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t)v31;
LABEL_14:
      uint64_t v45 = v145;
LABEL_27:
      sub_23CF05CD8(v44, v45);
      goto LABEL_28;
    }
    uint64_t v60 = *(void **)(v0 + 48);
    type metadata accessor for BatchInteraction.ContentPreview.Err(0);
    sub_23CF05DAC((unint64_t *)&qword_268BCD4A0, (void (*)(uint64_t))type metadata accessor for BatchInteraction.ContentPreview.Err);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23CF05F80(v22, v23);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    goto LABEL_22;
  }
  if (v13 == *MEMORY[0x263F3C590])
  {
    uint64_t v33 = *(uint64_t **)(v0 + 144);
    (*(void (**)(uint64_t *, void))(*(void *)(v0 + 136) + 96))(v33, *(void *)(v0 + 128));
    uint64_t v34 = *v33;
    unint64_t v35 = v33[1];
    uint64_t v36 = v33[2];
    uint64_t v37 = v33[3];
    id v38 = objc_allocWithZone(MEMORY[0x263F827E8]);
    sub_23CF05F28(v34, v35);
    char v39 = (void *)sub_23D003CF8();
    id v40 = objc_msgSend(v38, sel_initWithData_, v39);
    sub_23CF05F80(v34, v35);

    uint64_t v27 = *(void *)(v0 + 168);
    uint64_t v41 = *(void *)(v0 + 152);
    uint64_t v42 = *(void *)(v0 + 136);
    uint64_t v141 = *(void *)(v0 + 128);
    if (v40)
    {
      uint64_t v31 = *(void **)(v0 + 112);
      uint64_t v128 = v37;
      uint64_t v43 = *(void **)(v0 + 48);
      uint64_t v145 = *(void *)(v0 + 40);
      sub_23CF05F80(v34, v35);

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v141);
      sub_23CEE8BB4(v27, &qword_268BCD498);
      *uint64_t v31 = v40;
      v31[1] = v36;
      v31[2] = v128;
      goto LABEL_13;
    }
    id v68 = *(void **)(v0 + 48);
    type metadata accessor for BatchInteraction.ContentPreview.Err(0);
    sub_23CF05DAC((unint64_t *)&qword_268BCD4A0, (void (*)(uint64_t))type metadata accessor for BatchInteraction.ContentPreview.Err);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_23CF05F80(v34, v35);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v141);
LABEL_22:
    uint64_t v7 = v27;
    goto LABEL_3;
  }
  if (v13 == *MEMORY[0x263F3C510])
  {
    uint64_t v46 = *(void *)(v0 + 144);
    uint64_t v48 = *(void *)(v0 + 72);
    uint64_t v47 = *(void *)(v0 + 80);
    uint64_t v49 = *(void *)(v0 + 56);
    uint64_t v50 = *(void *)(v0 + 64);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 136) + 96))(v46, *(void *)(v0 + 128));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v47, v46, v49);
    uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
    v51(v48, v47, v49);
    int v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 88))(v48, v49);
    if (v52 == *MEMORY[0x263F3C360])
    {
      uint64_t v129 = *(void *)(v0 + 152);
      uint64_t v135 = *(void *)(v0 + 168);
      uint64_t v54 = *(void *)(v0 + 128);
      uint64_t v53 = *(void *)(v0 + 136);
      uint64_t v55 = *(uint64_t **)(v0 + 96);
      uint64_t v56 = *(void *)(v0 + 80);
      uint64_t v58 = *(void *)(v0 + 56);
      uint64_t v57 = *(void *)(v0 + 64);
      uint64_t v59 = *(void **)(v0 + 48);
      uint64_t v142 = *(void *)(v0 + 40);
      (*(void (**)(void, uint64_t))(v57 + 96))(*(void *)(v0 + 72), v58);
      sub_23D0059F8();
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v129, v54);
      sub_23CEE8BB4(v135, &qword_268BCD498);
      *uint64_t v55 = 0;
      v55[1] = 0xE000000000000000;
LABEL_25:
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t)v55;
LABEL_26:
      uint64_t v45 = v142;
      goto LABEL_27;
    }
    if (v52 == *MEMORY[0x263F3C380])
    {
      uint64_t v130 = *(void *)(v0 + 152);
      uint64_t v136 = *(void *)(v0 + 168);
      uint64_t v69 = *(void *)(v0 + 128);
      uint64_t v70 = *(void *)(v0 + 136);
      uint64_t v55 = *(uint64_t **)(v0 + 104);
      uint64_t v71 = *(void *)(v0 + 80);
      uint64_t v72 = *(void *)(v0 + 64);
      uint64_t v73 = *(void **)(v0 + 72);
      uint64_t v74 = *(void **)(v0 + 48);
      uint64_t v75 = *(void *)(v0 + 56);
      uint64_t v142 = *(void *)(v0 + 40);
      (*(void (**)(void *, uint64_t))(v72 + 96))(v73, v75);
      *(void *)(v0 + 32) = *v73;
      uint64_t v76 = sub_23D0061F8();
      uint64_t v78 = v77;

      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v75);
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v130, v69);
      sub_23CEE8BB4(v136, &qword_268BCD498);
      *uint64_t v55 = v76;
      v55[1] = v78;
      goto LABEL_25;
    }
    if (v52 == *MEMORY[0x263F3C370])
    {
      uint64_t v131 = *(void *)(v0 + 152);
      uint64_t v137 = *(void *)(v0 + 168);
      uint64_t v84 = *(void *)(v0 + 128);
      uint64_t v83 = *(void *)(v0 + 136);
      uint64_t v85 = *(uint64_t **)(v0 + 104);
      uint64_t v86 = *(void *)(v0 + 80);
      uint64_t v87 = *(void *)(v0 + 64);
      uint64_t v89 = *(void **)(v0 + 48);
      uint64_t v88 = *(void *)(v0 + 56);
      uint64_t v142 = *(void *)(v0 + 40);
      (*(void (**)(void, uint64_t))(v87 + 96))(*(void *)(v0 + 72), v88);
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0xE000000000000000;
      sub_23D005BD8();

      uint64_t v90 = *(void *)(v0 + 16);
      uint64_t v91 = *(void *)(v0 + 24);
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v86, v88);
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v131, v84);
      sub_23CEE8BB4(v137, &qword_268BCD498);
      *uint64_t v85 = v90;
      v85[1] = v91;
LABEL_34:
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t)v85;
      goto LABEL_26;
    }
    if (v52 == *MEMORY[0x263F3C378])
    {
      uint64_t v132 = *(void *)(v0 + 152);
      uint64_t v138 = *(void *)(v0 + 168);
      uint64_t v92 = *(void *)(v0 + 128);
      uint64_t v93 = *(void *)(v0 + 136);
      uint64_t v94 = *(void **)(v0 + 104);
      uint64_t v95 = *(void *)(v0 + 80);
      uint64_t v97 = *(void *)(v0 + 64);
      int v96 = *(uint64_t **)(v0 + 72);
      uint64_t v98 = *(void **)(v0 + 48);
      uint64_t v99 = *(void *)(v0 + 56);
      uint64_t v142 = *(void *)(v0 + 40);
      (*(void (**)(uint64_t *, uint64_t))(v97 + 96))(v96, v99);
      uint64_t v100 = *v96;
      uint64_t v101 = v96[1];

      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v95, v99);
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v132, v92);
      sub_23CEE8BB4(v138, &qword_268BCD498);
      *uint64_t v94 = v100;
      v94[1] = v101;
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t)v94;
      goto LABEL_26;
    }
    if (v52 == *MEMORY[0x263F3C368])
    {
      uint64_t v133 = *(void *)(v0 + 152);
      uint64_t v139 = *(void *)(v0 + 168);
      uint64_t v102 = *(void *)(v0 + 136);
      uint64_t v126 = *(void *)(v0 + 128);
      uint64_t v85 = *(uint64_t **)(v0 + 104);
      uint64_t v103 = *(void *)(v0 + 80);
      uint64_t v104 = *(void *)(v0 + 64);
      uint64_t v105 = *(void **)(v0 + 72);
      uint64_t v106 = *(void **)(v0 + 48);
      uint64_t v107 = *(void *)(v0 + 56);
      uint64_t v142 = *(void *)(v0 + 40);
      (*(void (**)(void *, uint64_t))(v104 + 96))(v105, v107);
      uint64_t v108 = MEMORY[0x23ECF5570](*v105, v107);
      uint64_t v110 = v109;
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v103, v107);
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v133, v126);
      sub_23CEE8BB4(v139, &qword_268BCD498);
      *uint64_t v85 = v108;
      v85[1] = v110;
      goto LABEL_34;
    }
    uint64_t v111 = *(void *)(v0 + 64);
    uint64_t v112 = (void (**)(uint64_t, uint64_t))(v111 + 8);
    uint64_t v113 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 136) + 8);
    uint64_t v140 = *(void *)(v0 + 128);
    uint64_t v144 = *(void *)(v0 + 168);
    uint64_t v134 = *(void *)(v0 + 152);
    if (v52 == *MEMORY[0x263F3C358])
    {
      uint64_t v114 = *(uint64_t **)(v0 + 104);
      uint64_t v124 = *(void *)(v0 + 80);
      uint64_t v115 = *(void **)(v0 + 48);
      uint64_t v116 = *(void *)(v0 + 56);
      uint64_t v145 = *(void *)(v0 + 40);
      (*(void (**)(void, uint64_t))(v111 + 96))(*(void *)(v0 + 72), v116);
      uint64_t v117 = sub_23D0058C8();
      uint64_t v119 = v118;
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v124, v116);
      (*v113)(v134, v140);
      sub_23CEE8BB4(v144, &qword_268BCD498);
      *uint64_t v114 = v117;
      v114[1] = v119;
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (uint64_t)v114;
      goto LABEL_14;
    }
    uint64_t v120 = *(void *)(v0 + 80);
    uint64_t v121 = *(void *)(v0 + 56);
    uint64_t v125 = *(void **)(v0 + 48);
    uint64_t v127 = *(void *)(v0 + 72);
    type metadata accessor for BatchInteraction.ContentPreview.Err(0);
    sub_23CF05DAC((unint64_t *)&qword_268BCD4A0, (void (*)(uint64_t))type metadata accessor for BatchInteraction.ContentPreview.Err);
    swift_allocError();
    v51(v122, v120, v121);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    uint64_t v123 = *v112;
    (*v112)(v120, v121);
    (*v113)(v134, v140);
    sub_23CEE8BB4(v144, &qword_268BCD498);
    v123(v127, v121);
  }
  else
  {
    uint64_t v61 = *(void *)(v0 + 168);
    uint64_t v62 = *(void **)(v0 + 144);
    uint64_t v63 = *(void *)(v0 + 152);
    uint64_t v64 = *(void *)(v0 + 128);
    uint64_t v65 = *(void *)(v0 + 136);
    if (v13 == *MEMORY[0x263F3C548])
    {
      uint64_t v66 = *(void **)(v0 + 40);

      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
      sub_23CEE8BB4(v61, &qword_268BCD498);
      (*(void (**)(void *, uint64_t))(v65 + 96))(v62, v64);
      uint64_t v67 = v62[1];
      *uint64_t v66 = *v62;
      v66[1] = v67;
      goto LABEL_6;
    }
    uint64_t v143 = *(void **)(v0 + 48);
    type metadata accessor for BatchInteraction.ContentPreview.Err(0);
    sub_23CF05DAC((unint64_t *)&qword_268BCD4A0, (void (*)(uint64_t))type metadata accessor for BatchInteraction.ContentPreview.Err);
    swift_allocError();
    v12(v81, v63, v64);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    uint64_t v82 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    v82(v63, v64);
    sub_23CEE8BB4(v61, &qword_268BCD498);
    v82((uint64_t)v62, v64);
  }
LABEL_28:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v79 = *(uint64_t (**)(void))(v0 + 8);
  return v79();
}

uint64_t sub_23CEFBC50@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  int v2 = a1;
  uint64_t v3 = sub_23D004138();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD4A8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = sub_23D0041B8();
  uint64_t v28 = *(void *)(v13 - 8);
  uint64_t v29 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v27 - v17;
  uint64_t v19 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v2)
  {
    sub_23D004198();
    if ((*v19)(v10, 1, v3))
    {
      sub_23CEE8BB4((uint64_t)v10, &qword_268BCD4A8);
      return sub_23D004158();
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
    sub_23CEE8BB4((uint64_t)v10, &qword_268BCD4A8);
    sub_23D0040E8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v21 = v28;
    uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
    uint64_t v23 = v30;
    uint64_t v24 = v30;
    uint64_t v25 = v16;
  }
  else
  {
    sub_23D004178();
    if ((*v19)(v12, 1, v3))
    {
      sub_23CEE8BB4((uint64_t)v12, &qword_268BCD4A8);
      return sub_23D004068();
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v12, v3);
    sub_23CEE8BB4((uint64_t)v12, &qword_268BCD4A8);
    sub_23D0040E8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v21 = v28;
    uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
    uint64_t v23 = v30;
    uint64_t v24 = v30;
    uint64_t v25 = v18;
  }
  uint64_t v26 = v29;
  v22(v24, v25, v29);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v26);
}

uint64_t sub_23CEFBFBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_23D003DB8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

void *sub_23CEFC028()
{
  swift_getKeyPath();
  sub_23CF05DAC(&qword_268BCD468, (void (*)(uint64_t))type metadata accessor for NullableBatchInteraction);
  sub_23D003DD8();
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Feedback24NullableBatchInteraction__donation);
  id v2 = v1;
  return v1;
}

id sub_23CEFC0D8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF05DAC(&qword_268BCD468, (void (*)(uint64_t))type metadata accessor for NullableBatchInteraction);
  sub_23D003DD8();
  swift_release();
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC8Feedback24NullableBatchInteraction__donation);
  *a2 = v4;

  return v4;
}

uint64_t sub_23CEFC198(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_23CF05DAC(&qword_268BCD468, (void (*)(uint64_t))type metadata accessor for NullableBatchInteraction);
  id v2 = v1;
  sub_23D003DC8();

  return swift_release();
}

uint64_t sub_23CEFC274(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  uint64_t v3 = type metadata accessor for BatchInteraction.ContentPreview(0);
  v2[22] = v3;
  v2[23] = *(void *)(v3 - 8);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  uint64_t v4 = sub_23D004028();
  v2[26] = v4;
  v2[27] = *(void *)(v4 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  sub_23D003ED8();
  uint64_t v5 = OBJC_IVAR____TtC8Feedback24NullableBatchInteraction_id;
  v2[30] = OBJC_IVAR____TtC8Feedback24NullableBatchInteraction_id;
  uint64_t v6 = v1 + v5;
  uint64_t v7 = (void *)swift_task_alloc();
  v2[31] = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_23CEFC404;
  return MEMORY[0x270F28800](v6);
}

uint64_t sub_23CEFC404(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[32] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    v4[33] = a1;
    return MEMORY[0x270FA2498](sub_23CEFC570, 0, 0);
  }
}

uint64_t sub_23CEFC570()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v2 = v0[21];
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  v0[17] = v2;
  sub_23CF05DAC(&qword_268BCD468, (void (*)(uint64_t))type metadata accessor for NullableBatchInteraction);
  id v4 = v1;
  sub_23D003DC8();
  swift_release();

  swift_task_dealloc();
  if (!v1)
  {
    sub_23CF05E54();
    swift_allocError();
    *uint64_t v15 = 0;
    v15[1] = 0;
    swift_willThrow();
LABEL_17:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
  uint64_t v5 = v0[29];
  uint64_t v6 = v0[26];
  uint64_t v7 = v0[27];
  id v8 = v4;
  sub_23D004038();

  int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v5, v6);
  uint64_t v10 = (uint64_t *)v0[29];
  uint64_t v11 = v0[26];
  uint64_t v12 = v0[27];
  if (v9 == *MEMORY[0x263F3C330])
  {
    (*(void (**)(void, uint64_t))(v12 + 96))(v0[29], v11);
    uint64_t v13 = *v10;
    uint64_t v14 = v10[1];
    if (v13 == 0x6164696C61766E69 && v14 == 0xEA00000000006574)
    {
      swift_bridgeObjectRelease();
LABEL_16:
      sub_23CF05E54();
      swift_allocError();
      *uint64_t v25 = xmmword_23D007EF0;
      swift_willThrow();

      goto LABEL_17;
    }
    char v24 = sub_23D006218();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t))(v12 + 8))(v0[29], v11);
  }
  uint64_t v16 = sub_23CFE5288(v8);
  if (v17 || (uint64_t v16 = sub_23D0041C8(), v17))
  {
    uint64_t v18 = v16;
    uint64_t v19 = v17;
    type metadata accessor for AppInfoController();
    uint64_t v20 = (void *)swift_allocObject();
    v20[3] = 0;
    v20[4] = 0;
    v20[2] = 0;
    sub_23D003E08();
    v20[5] = v18;
    v20[6] = v19;
  }
  else
  {
    uint64_t v20 = 0;
  }
  v0[34] = v20;
  sub_23CF52CF8((uint64_t)v8, (uint64_t)(v0 + 12));
  uint64_t v21 = v0[15];
  sub_23CEE8BB4((uint64_t)(v0 + 12), &qword_268BCD480);
  if (v21)
  {
    uint64_t v22 = (void *)swift_task_alloc();
    v0[35] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_23CEFC9C8;
    return sub_23CF526FC((uint64_t)(v0 + 2), (uint64_t)v8);
  }
  else
  {
    id v27 = v8;
    uint64_t v28 = (void *)swift_task_alloc();
    v0[37] = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_23CEFCC58;
    uint64_t v29 = v0[25];
    return sub_23CEFABE4(v29, (uint64_t)v27, 0);
  }
}

uint64_t sub_23CEFC9C8()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_23CEFD0B0;
  }
  else {
    uint64_t v2 = sub_23CEFCADC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23CEFCADC()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);

  uint64_t v5 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v3, v4 + v1, v5);
  uint64_t v6 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v7 = (_OWORD *)(v3 + v6[7]);
  sub_23CF05EA8((_OWORD *)(v0 + 16), v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = *(void *)(v0 + 264);
  uint64_t v8 = *(void *)(v0 + 272);
  uint64_t v10 = *(void *)(v0 + 160);
  (*(void (**)(_OWORD *, void, uint64_t, void))(v2 + 56))(v7, 0, 1, *(void *)(v0 + 176));
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = v6[6];
  *(void *)(v10 + v6[5]) = v9;
  *(void *)(v10 + v11) = v8;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_23CEFCC58()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_23CEFD408, 0, 0);
  }
  else
  {
    id v3 = *(id *)(v2 + 264);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 312) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_23CEFCDEC;
    uint64_t v5 = *(void *)(v2 + 192);
    return sub_23CEFABE4(v5, (uint64_t)v3, 1);
  }
}

uint64_t sub_23CEFCDEC()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_23CEFD4A4;
  }
  else {
    uint64_t v2 = sub_23CEFCF00;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23CEFCF00()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 168);

  uint64_t v8 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7 + v1, v8);
  uint64_t v9 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v10 = v6 + v9[7];
  uint64_t v11 = v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
  sub_23CF05CD8(v3, v10);
  uint64_t v12 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
  v12(v10, 0, 1, v4);
  sub_23CF05CD8(v2, v11);
  uint64_t v13 = *(void *)(v0 + 264);
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 160);
  v12(v11, 0, 1, *(void *)(v0 + 176));
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = v9[6];
  *(void *)(v15 + v9[5]) = v13;
  *(void *)(v15 + v16) = v14;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_23CEFD0B0()
{
  uint64_t v29 = v0;
  if (qword_268BCCCB0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[36];
  uint64_t v2 = (void *)v0[33];
  uint64_t v3 = sub_23D004498();
  __swift_project_value_buffer(v3, (uint64_t)qword_268BDAD70);
  id v4 = v2;
  id v5 = v1;
  id v6 = v4;
  id v7 = v1;
  uint64_t v8 = sub_23D004478();
  os_log_type_t v9 = sub_23D005C98();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = (void *)v0[36];
  uint64_t v12 = (void *)v0[33];
  if (v10)
  {
    uint64_t v13 = v0[27];
    uint64_t v14 = v0[28];
    uint64_t v15 = v0[26];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = v27;
    *(_DWORD *)uint64_t v16 = 136446466;
    log = v8;
    sub_23D004038();
    sub_23CF05DAC(&qword_268BCD490, MEMORY[0x263F3C338]);
    uint64_t v17 = sub_23D0061F8();
    unint64_t v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
    v0[18] = sub_23CF231B0(v17, v19, &v28);
    sub_23D005E48();
    swift_bridgeObjectRelease();

    *(_WORD *)(v16 + 12) = 2114;
    id v20 = v11;
    uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
    v0[19] = v21;
    sub_23D005E48();
    *uint64_t v26 = v21;

    uint64_t v8 = log;
    _os_log_impl(&dword_23CEE3000, log, v9, "FBKSInteraction.Content is for %{public}s but failed with error: %{public}@", (uint8_t *)v16, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDC00);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v26, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v27, -1, -1);
    MEMORY[0x23ECF6610](v16, -1, -1);
  }
  else
  {
  }
  uint64_t v22 = (void *)v0[33];
  swift_willThrow();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_23CEFD408()
{
  uint64_t v1 = *(void **)(v0 + 264);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_23CEFD4A4()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v2 = v0[25];

  swift_release();
  sub_23CF0148C(v2, type metadata accessor for BatchInteraction.ContentPreview);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_23CEFD560(uint64_t a1)
{
  uint64_t v3 = v2;
  v3[8] = a1;
  v3[9] = v1;
  uint64_t v5 = sub_23D004028();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for AnalyticsEvent();
  v3[14] = swift_task_alloc();
  id v6 = (void *)swift_task_alloc();
  v3[15] = v6;
  *id v6 = v3;
  v6[1] = sub_23CEFD68C;
  return sub_23CEFC274(a1);
}

uint64_t sub_23CEFD68C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_23CEFDBBC;
  }
  else {
    uint64_t v2 = sub_23CEFD7A0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23CEFD7A0()
{
  uint64_t v13 = v0;
  uint64_t v1 = v0[8];
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for BatchInteraction(0) + 24));
  v0[17] = v2;
  if (v2)
  {
    uint64_t v3 = qword_268BCCCB0;
    swift_retain();
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_23D004498();
    __swift_project_value_buffer(v4, (uint64_t)qword_268BDAD70);
    uint64_t v5 = sub_23D004478();
    os_log_type_t v6 = sub_23D005C88();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v12 = v8;
      *(_DWORD *)id v7 = 136315138;
      v0[7] = sub_23CF231B0(0x292864616F6CLL, 0xE600000000000000, &v12);
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v5, v6, "%s - interaction has appInfoController", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v8, -1, -1);
      MEMORY[0x23ECF6610](v7, -1, -1);
    }

    os_log_type_t v9 = (void *)swift_task_alloc();
    v0[18] = v9;
    *os_log_type_t v9 = v0;
    v9[1] = sub_23CEFDA48;
    return MEMORY[0x270FA2318]();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_23CEFDA48()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_23CEFDB44, 0, 0);
}

uint64_t sub_23CEFDB44()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23CEFDBBC()
{
  unint64_t v35 = v0;
  if (qword_268BCCCB0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = sub_23D004498();
  v0[19] = __swift_project_value_buffer(v2, (uint64_t)qword_268BDAD70);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_23D004478();
  os_log_type_t v6 = sub_23D005C98();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[16];
  if (v7)
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    BOOL v10 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 138543362;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[6] = v12;
    sub_23D005E48();
    *BOOL v10 = v12;

    _os_log_impl(&dword_23CEE3000, v5, v6, "Error loading data on interaction: %{public}@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDC00);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v10, -1, -1);
    MEMORY[0x23ECF6610](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = v0[9];
  swift_getKeyPath();
  v0[20] = OBJC_IVAR____TtC8Feedback24NullableBatchInteraction___observationRegistrar;
  v0[2] = v13;
  v0[21] = sub_23CF05DAC(&qword_268BCD468, (void (*)(uint64_t))type metadata accessor for NullableBatchInteraction);
  sub_23D003DD8();
  swift_release();
  uint64_t v14 = OBJC_IVAR____TtC8Feedback24NullableBatchInteraction__donation;
  v0[22] = OBJC_IVAR____TtC8Feedback24NullableBatchInteraction__donation;
  uint64_t v15 = *(void **)(v13 + v14);
  v0[23] = v15;
  if (v15)
  {
    swift_retain_n();
    v15;
    uint64_t v16 = sub_23D004478();
    os_log_type_t v17 = sub_23D005C98();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)unint64_t v18 = 136315138;
      uint64_t v34 = v19;
      sub_23D003DB8();
      sub_23CF05DAC(&qword_268BCD470, MEMORY[0x263F07508]);
      uint64_t v20 = sub_23D0061F8();
      v0[5] = sub_23CF231B0(v20, v21, &v34);
      sub_23D005E48();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23CEE3000, v16, v17, "Will invalidate: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v19, -1, -1);
      MEMORY[0x23ECF6610](v18, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v33 = (uint64_t (*)(void))((int)*MEMORY[0x263F3C1B8] + MEMORY[0x263F3C1B8]);
    uint64_t v29 = (void *)swift_task_alloc();
    v0[24] = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_23CEFE15C;
    return v33();
  }
  else
  {
    uint64_t v22 = v0[9];
    swift_getKeyPath();
    v0[3] = v22;
    sub_23D003DD8();
    swift_release();
    uint64_t v23 = *(void **)(v22 + v14);
    uint64_t v24 = v0[14];
    if (v23)
    {
      uint64_t v26 = v0[11];
      uint64_t v25 = v0[12];
      uint64_t v27 = v0[10];
      id v28 = v23;
      sub_23D004038();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v24, v25, v27);
    }
    else
    {
      (*(void (**)(void, void, void))(v0[11] + 104))(v0[14], *MEMORY[0x263F3C320], v0[10]);
    }
    uint64_t v31 = v0[14];
    swift_storeEnumTagMultiPayload();
    sub_23CFDE698();
    sub_23CF0148C(v31, (uint64_t (*)(void))type metadata accessor for AnalyticsEvent);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = (uint64_t (*)(void))v0[1];
    return v32();
  }
}

uint64_t sub_23CEFE15C()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_23CEFE3E4;
  }
  else {
    uint64_t v2 = sub_23CEFE270;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23CEFE270()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 72);
  swift_getKeyPath();
  *(void *)(v0 + 24) = v2;
  sub_23D003DD8();
  swift_release();
  id v3 = *(void **)(v2 + v1);
  uint64_t v4 = *(void *)(v0 + 112);
  if (v3)
  {
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v7 = *(void *)(v0 + 80);
    id v8 = v3;
    sub_23D004038();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v4, v5, v7);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 88) + 104))(*(void *)(v0 + 112), *MEMORY[0x263F3C320], *(void *)(v0 + 80));
  }
  uint64_t v9 = *(void *)(v0 + 112);
  swift_storeEnumTagMultiPayload();
  sub_23CFDE698();
  sub_23CF0148C(v9, (uint64_t (*)(void))type metadata accessor for AnalyticsEvent);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_23CEFE3E4()
{
  uint64_t v24 = v0;
  swift_retain_n();
  uint64_t v1 = sub_23D004478();
  os_log_type_t v2 = sub_23D005C98();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v21 = (void *)v0[23];
    uint64_t v22 = (void *)v0[25];
    id v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v4 = v23;
    *(_DWORD *)id v3 = 136315138;
    sub_23D003DB8();
    sub_23CF05DAC(&qword_268BCD470, MEMORY[0x263F07508]);
    uint64_t v5 = sub_23D0061F8();
    v0[4] = sub_23CF231B0(v5, v6, &v23);
    sub_23D005E48();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23CEE3000, v1, v2, "Failed to invalidate interaction: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v4, -1, -1);
    MEMORY[0x23ECF6610](v3, -1, -1);

    uint64_t v7 = v22;
  }
  else
  {
    id v8 = (void *)v0[25];
    uint64_t v9 = (void *)v0[23];
    swift_release_n();

    uint64_t v7 = v8;
  }

  uint64_t v10 = v0[22];
  uint64_t v11 = v0[9];
  swift_getKeyPath();
  v0[3] = v11;
  sub_23D003DD8();
  swift_release();
  uint64_t v12 = *(void **)(v11 + v10);
  uint64_t v13 = v0[14];
  if (v12)
  {
    uint64_t v15 = v0[11];
    uint64_t v14 = v0[12];
    uint64_t v16 = v0[10];
    id v17 = v12;
    sub_23D004038();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v13, v14, v16);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[11] + 104))(v0[14], *MEMORY[0x263F3C320], v0[10]);
  }
  uint64_t v18 = v0[14];
  swift_storeEnumTagMultiPayload();
  sub_23CFDE698();
  sub_23CF0148C(v18, (uint64_t (*)(void))type metadata accessor for AnalyticsEvent);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_23CEFE6FC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Feedback24NullableBatchInteraction_id;
  uint64_t v2 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0 + OBJC_IVAR____TtC8Feedback24NullableBatchInteraction___observationRegistrar;
  uint64_t v4 = sub_23D003E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_23CEFE7F0()
{
  return type metadata accessor for NullableBatchInteraction(0);
}

uint64_t type metadata accessor for NullableBatchInteraction(uint64_t a1)
{
  return sub_23CF05EF0(a1, (uint64_t *)&unk_268BCD3F0);
}

uint64_t sub_23CEFE818()
{
  uint64_t result = sub_23D003DB8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_23D003E18();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_23CEFE8EC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_23D003DB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v11 = a3[7];
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (void **)((char *)a2 + v11);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    id v14 = v10;
    swift_retain();
    LODWORD(v10) = swift_getEnumCaseMultiPayload();
    uint64_t v15 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v16 = *(void *)(v15 - 8);
    id v17 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v16 + 48);
    int v18 = v17(v13, 1, v15);
    if (v10 == 1)
    {
      if (v18)
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v24 = *v13;
            *uint64_t v12 = *v13;
            id v25 = v24;
            break;
          case 3u:
            uint64_t v26 = *v13;
            uint64_t v27 = v13[1];
            *uint64_t v12 = *v13;
            v12[1] = v27;
            v12[2] = v13[2];
            id v28 = v26;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v29 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v29 - 8) + 16))(v12, v13, v29);
            break;
          case 5u:
            uint64_t v30 = *v13;
            uint64_t v70 = v13[2];
            uint64_t v73 = v13[1];
            uint64_t v64 = (uint64_t)v13[4];
            uint64_t v67 = (uint64_t)v13[3];
            uint64_t v62 = (uint64_t)v13[6];
            uint64_t v63 = (uint64_t)v13[5];
            uint64_t v61 = v13[7];
            uint64_t v76 = (uint64_t)v13[8];
            char v79 = *((unsigned char *)v13 + 72);
            sub_23CEF00B0((uint64_t)*v13, v73, v70, v67, v64, v63, v62, v61, v76, v79);
            *uint64_t v12 = v30;
            v12[1] = v73;
            v12[2] = v70;
            v12[3] = v67;
            v12[4] = v64;
            v12[5] = v63;
            v12[6] = v62;
            v12[7] = v61;
            v12[8] = v76;
            *((unsigned char *)v12 + 72) = v79;
            break;
          default:
            uint64_t v22 = v13[1];
            *uint64_t v12 = *v13;
            v12[1] = v22;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v32 = (void *)((char *)v12 + v31);
      uint64_t v33 = (void **)((char *)v13 + v31);
      if (v17(v33, 1, v15))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v48 = *v33;
            *uint64_t v32 = *v33;
            id v49 = v48;
            break;
          case 3u:
            uint64_t v50 = *v33;
            uint64_t v51 = v33[1];
            *uint64_t v32 = *v33;
            v32[1] = v51;
            v32[2] = v33[2];
            id v52 = v50;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v53 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v53 - 8) + 16))(v32, v33, v53);
            break;
          case 5u:
            uint64_t v54 = (uint64_t)*v33;
            uint64_t v55 = v33[2];
            uint64_t v56 = (uint64_t)v33[3];
            uint64_t v57 = (uint64_t)v33[4];
            uint64_t v75 = v57;
            uint64_t v78 = v33[1];
            uint64_t v58 = (uint64_t)v33[6];
            uint64_t v69 = v58;
            uint64_t v72 = (uint64_t)v33[5];
            uint64_t v66 = v33[7];
            uint64_t v81 = (uint64_t)v33[8];
            char v59 = *((unsigned char *)v33 + 72);
            sub_23CEF00B0(v54, v78, v55, v56, v57, v72, v58, v66, v81, v59);
            *uint64_t v32 = v54;
            v32[1] = v78;
            v32[2] = v55;
            v32[3] = v56;
            v32[4] = v75;
            v32[5] = v72;
            v32[6] = v69;
            unsigned char v32[7] = v66;
            v32[8] = v81;
            *((unsigned char *)v32 + 72) = v59;
            break;
          default:
            unint64_t v35 = v33[1];
            *uint64_t v32 = *v33;
            v32[1] = v35;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v32, 0, 1, v15);
      }
    }
    else if (v18)
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v12, v13, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v36 = *v13;
          *uint64_t v12 = *v13;
          id v37 = v36;
          break;
        case 3u:
          id v38 = *v13;
          char v39 = v13[1];
          *uint64_t v12 = *v13;
          v12[1] = v39;
          v12[2] = v13[2];
          id v40 = v38;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v41 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v41 - 8) + 16))(v12, v13, v41);
          break;
        case 5u:
          uint64_t v42 = (uint64_t)*v13;
          uint64_t v43 = v13[2];
          uint64_t v44 = (uint64_t)v13[3];
          uint64_t v45 = (uint64_t)v13[4];
          uint64_t v74 = v45;
          uint64_t v77 = v13[1];
          uint64_t v46 = (uint64_t)v13[6];
          uint64_t v68 = v46;
          uint64_t v71 = (uint64_t)v13[5];
          uint64_t v65 = v13[7];
          uint64_t v80 = (uint64_t)v13[8];
          char v47 = *((unsigned char *)v13 + 72);
          sub_23CEF00B0(v42, v77, v43, v44, v45, v71, v46, v65, v80, v47);
          *uint64_t v12 = v42;
          v12[1] = v77;
          v12[2] = v43;
          v12[3] = v44;
          v12[4] = v74;
          v12[5] = v71;
          v12[6] = v68;
          v12[7] = v65;
          v12[8] = v80;
          *((unsigned char *)v12 + 72) = v47;
          break;
        default:
          uint64_t v23 = v13[1];
          *uint64_t v12 = *v13;
          v12[1] = v23;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for BatchInteraction.ContentPolarity(uint64_t a1)
{
  return sub_23CF05EF0(a1, (uint64_t *)&unk_268BCD430);
}

uint64_t type metadata accessor for BatchInteraction.ContentPreview(uint64_t a1)
{
  return sub_23CF05EF0(a1, (uint64_t *)&unk_268BCD420);
}

void sub_23CEFF03C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  int v9 = v8(v5, 1, v7);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v9)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v13 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v5, v13);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v5, *(void **)(v5 + 8), *(void **)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(unsigned char *)(v5 + 72));
          break;
        default:
          break;
      }
    }
    v5 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v8(v5, 1, v7))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_14;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_13;
        case 4u:
          goto LABEL_17;
        case 5u:
          goto LABEL_20;
        default:
          return;
      }
    }
  }
  else if (!v9)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        goto LABEL_14;
      case 2u:
LABEL_10:
        id v10 = *(id *)v5;

        break;
      case 3u:
LABEL_13:

LABEL_14:
        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_17:
        uint64_t v11 = sub_23D003B88();
        uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
        v12(v5, v11);
        break;
      case 5u:
LABEL_20:
        sub_23CEF05F8(*(void **)v5, *(void **)(v5 + 8), *(void **)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(unsigned char *)(v5 + 72));
        break;
      default:
        return;
    }
  }
}

uint64_t sub_23CEFF3D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  int v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void **)(a2 + v10);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  id v13 = v9;
  swift_retain();
  LODWORD(v9) = swift_getEnumCaseMultiPayload();
  uint64_t v14 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  if (v9 == 1)
  {
    if (v17)
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v22 = *v12;
          *uint64_t v11 = *v12;
          id v23 = v22;
          break;
        case 3u:
          uint64_t v24 = *v12;
          id v25 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v25;
          v11[2] = v12[2];
          id v26 = v24;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v27 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v27 - 8) + 16))(v11, v12, v27);
          break;
        case 5u:
          id v28 = *v12;
          uint64_t v68 = v12[2];
          uint64_t v71 = v12[1];
          uint64_t v62 = (uint64_t)v12[4];
          uint64_t v65 = (uint64_t)v12[3];
          uint64_t v60 = (uint64_t)v12[6];
          uint64_t v61 = (uint64_t)v12[5];
          char v59 = v12[7];
          uint64_t v74 = (uint64_t)v12[8];
          char v77 = *((unsigned char *)v12 + 72);
          sub_23CEF00B0((uint64_t)*v12, v71, v68, v65, v62, v61, v60, v59, v74, v77);
          *uint64_t v11 = v28;
          v11[1] = v71;
          v11[2] = v68;
          v11[3] = v65;
          v11[4] = v62;
          v11[5] = v61;
          v11[6] = v60;
          v11[7] = v59;
          v11[8] = v74;
          *((unsigned char *)v11 + 72) = v77;
          break;
        default:
          uint64_t v20 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v20;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    }
    uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    uint64_t v30 = (void *)((char *)v11 + v29);
    uint64_t v31 = (void **)((char *)v12 + v29);
    if (v16(v31, 1, v14))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v46 = *v31;
          *uint64_t v30 = *v31;
          id v47 = v46;
          break;
        case 3u:
          uint64_t v48 = *v31;
          id v49 = v31[1];
          *uint64_t v30 = *v31;
          v30[1] = v49;
          v30[2] = v31[2];
          id v50 = v48;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v51 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v51 - 8) + 16))(v30, v31, v51);
          break;
        case 5u:
          uint64_t v52 = (uint64_t)*v31;
          uint64_t v53 = v31[2];
          uint64_t v54 = (uint64_t)v31[3];
          uint64_t v55 = (uint64_t)v31[4];
          uint64_t v73 = v55;
          uint64_t v76 = v31[1];
          uint64_t v56 = (uint64_t)v31[6];
          uint64_t v67 = v56;
          uint64_t v70 = (uint64_t)v31[5];
          uint64_t v64 = v31[7];
          uint64_t v79 = (uint64_t)v31[8];
          char v57 = *((unsigned char *)v31 + 72);
          sub_23CEF00B0(v52, v76, v53, v54, v55, v70, v56, v64, v79, v57);
          *uint64_t v30 = v52;
          v30[1] = v76;
          v30[2] = v53;
          v30[3] = v54;
          v30[4] = v73;
          v30[5] = v70;
          v30[6] = v67;
          unsigned char v30[7] = v64;
          v30[8] = v79;
          *((unsigned char *)v30 + 72) = v57;
          break;
        default:
          uint64_t v33 = v31[1];
          *uint64_t v30 = *v31;
          v30[1] = v33;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v30, 0, 1, v14);
    }
  }
  else if (v17)
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v34 = *v12;
        *uint64_t v11 = *v12;
        id v35 = v34;
        break;
      case 3u:
        uint64_t v36 = *v12;
        id v37 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v37;
        v11[2] = v12[2];
        id v38 = v36;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v39 = sub_23D003B88();
        (*(void (**)(void *, void **, uint64_t))(*(void *)(v39 - 8) + 16))(v11, v12, v39);
        break;
      case 5u:
        uint64_t v40 = (uint64_t)*v12;
        uint64_t v41 = v12[2];
        uint64_t v42 = (uint64_t)v12[3];
        uint64_t v43 = (uint64_t)v12[4];
        uint64_t v72 = v43;
        uint64_t v75 = v12[1];
        uint64_t v44 = (uint64_t)v12[6];
        uint64_t v66 = v44;
        uint64_t v69 = (uint64_t)v12[5];
        uint64_t v63 = v12[7];
        uint64_t v78 = (uint64_t)v12[8];
        char v45 = *((unsigned char *)v12 + 72);
        sub_23CEF00B0(v40, v75, v41, v42, v43, v69, v44, v63, v78, v45);
        *uint64_t v11 = v40;
        v11[1] = v75;
        v11[2] = v41;
        v11[3] = v42;
        v11[4] = v72;
        v11[5] = v69;
        v11[6] = v66;
        v11[7] = v63;
        v11[8] = v78;
        *((unsigned char *)v11 + 72) = v45;
        break;
      default:
        uint64_t v21 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v21;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23CEFFA98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  int v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v11 = a3[7];
    uint64_t v12 = (void *)(a1 + v11);
    id v13 = (void **)(a2 + v11);
    sub_23CF0148C(a1 + v11, type metadata accessor for BatchInteraction.ContentPolarity);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v15 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v16 = *(void *)(v15 - 8);
    int v17 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v16 + 48);
    int v18 = v17(v13, 1, v15);
    if (EnumCaseMultiPayload == 1)
    {
      if (v18)
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v21 = *v13;
            *uint64_t v12 = *v13;
            id v22 = v21;
            break;
          case 3u:
            id v23 = *v13;
            *uint64_t v12 = *v13;
            v12[1] = v13[1];
            v12[2] = v13[2];
            id v24 = v23;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v25 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v25 - 8) + 16))(v12, v13, v25);
            break;
          case 5u:
            id v26 = *v13;
            uint64_t v63 = v13[2];
            uint64_t v66 = v13[1];
            uint64_t v57 = (uint64_t)v13[4];
            uint64_t v60 = (uint64_t)v13[3];
            uint64_t v55 = (uint64_t)v13[6];
            uint64_t v56 = (uint64_t)v13[5];
            uint64_t v54 = v13[7];
            uint64_t v69 = (uint64_t)v13[8];
            char v72 = *((unsigned char *)v13 + 72);
            sub_23CEF00B0((uint64_t)*v13, v66, v63, v60, v57, v56, v55, v54, v69, v72);
            *uint64_t v12 = v26;
            v12[1] = v66;
            v12[2] = v63;
            v12[3] = v60;
            v12[4] = v57;
            v12[5] = v56;
            v12[6] = v55;
            v12[7] = v54;
            v12[8] = v69;
            *((unsigned char *)v12 + 72) = v72;
            break;
          default:
            *uint64_t v12 = *v13;
            v12[1] = v13[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
      uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      id v28 = (void *)((char *)v12 + v27);
      uint64_t v29 = (void **)((char *)v13 + v27);
      if (v17(v29, 1, v15))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v42 = *v29;
            *id v28 = *v29;
            id v43 = v42;
            break;
          case 3u:
            uint64_t v44 = *v29;
            *id v28 = *v29;
            v28[1] = v29[1];
            v28[2] = v29[2];
            id v45 = v44;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v46 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v46 - 8) + 16))(v28, v29, v46);
            break;
          case 5u:
            uint64_t v47 = (uint64_t)*v29;
            uint64_t v48 = v29[2];
            uint64_t v49 = (uint64_t)v29[3];
            uint64_t v50 = (uint64_t)v29[4];
            uint64_t v68 = v50;
            uint64_t v71 = v29[1];
            uint64_t v51 = (uint64_t)v29[6];
            uint64_t v62 = v51;
            uint64_t v65 = (uint64_t)v29[5];
            char v59 = v29[7];
            uint64_t v74 = (uint64_t)v29[8];
            char v52 = *((unsigned char *)v29 + 72);
            sub_23CEF00B0(v47, v71, v48, v49, v50, v65, v51, v59, v74, v52);
            *id v28 = v47;
            v28[1] = v71;
            v28[2] = v48;
            v28[3] = v49;
            v28[4] = v68;
            v28[5] = v65;
            v28[6] = v62;
            v28[7] = v59;
            v28[8] = v74;
            *((unsigned char *)v28 + 72) = v52;
            break;
          default:
            *id v28 = *v29;
            v28[1] = v29[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v28, 0, 1, v15);
      }
    }
    else if (v18)
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v31 = *v13;
          *uint64_t v12 = *v13;
          id v32 = v31;
          break;
        case 3u:
          uint64_t v33 = *v13;
          *uint64_t v12 = *v13;
          v12[1] = v13[1];
          v12[2] = v13[2];
          id v34 = v33;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v35 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v35 - 8) + 16))(v12, v13, v35);
          break;
        case 5u:
          uint64_t v36 = (uint64_t)*v13;
          id v37 = v13[2];
          uint64_t v38 = (uint64_t)v13[3];
          uint64_t v39 = (uint64_t)v13[4];
          uint64_t v67 = v39;
          uint64_t v70 = v13[1];
          uint64_t v40 = (uint64_t)v13[6];
          uint64_t v61 = v40;
          uint64_t v64 = (uint64_t)v13[5];
          uint64_t v58 = v13[7];
          uint64_t v73 = (uint64_t)v13[8];
          char v41 = *((unsigned char *)v13 + 72);
          sub_23CEF00B0(v36, v70, v37, v38, v39, v64, v40, v58, v73, v41);
          *uint64_t v12 = v36;
          v12[1] = v70;
          v12[2] = v37;
          v12[3] = v38;
          v12[4] = v67;
          v12[5] = v64;
          v12[6] = v61;
          v12[7] = v58;
          v12[8] = v73;
          *((unsigned char *)v12 + 72) = v41;
          break;
        default:
          *uint64_t v12 = *v13;
          v12[1] = v13[1];
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23CF001CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  int v9 = (char *)(a1 + v8);
  id v10 = (char *)(a2 + v8);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v12 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  if (EnumCaseMultiPayload == 1)
  {
    if (v15)
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v18 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v9, v10, v18);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(v13 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    uint64_t v21 = &v9[v20];
    id v22 = &v10[v20];
    if (v14(v22, 1, v12))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v24 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v21, v22, *(void *)(v13 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
    }
  }
  else if (v15)
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v19 = sub_23D003B88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v9, v10, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(v13 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23CF005A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = a3[7];
    id v10 = (char *)(a1 + v9);
    uint64_t v11 = (char *)(a2 + v9);
    sub_23CF0148C(a1 + v9, type metadata accessor for BatchInteraction.ContentPolarity);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v13 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v14 = *(void *)(v13 - 8);
    int v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
    int v16 = v15(v11, 1, v13);
    if (EnumCaseMultiPayload == 1)
    {
      if (v16)
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v19 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v10, v11, v19);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v10, v11, *(void *)(v14 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
      uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      id v22 = &v10[v21];
      uint64_t v23 = &v11[v21];
      if (v15(v23, 1, v13))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v25 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v22, v23, *(void *)(v14 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
      }
    }
    else if (v16)
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v20 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v10, v11, v20);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(void *)(v14 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23CF009AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF009C0);
}

uint64_t sub_23CF009C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23D003DB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for BatchInteraction.ContentPolarity(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_23CF00AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF00B00);
}

uint64_t sub_23CF00B00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_23D003DB8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for BatchInteraction.ContentPolarity(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for BatchInteraction(uint64_t a1)
{
  return sub_23CF05EF0(a1, (uint64_t *)&unk_268BCD410);
}

uint64_t sub_23CF00C4C()
{
  uint64_t result = sub_23D003DB8();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for BatchInteraction.ContentPolarity(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_23CF00D2C(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v8 = *a2;
        *(void *)a1 = *a2;
        uint64_t v9 = v8;
        break;
      case 3u:
        unint64_t v10 = *a2;
        uint64_t v11 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v11;
        *((void *)a1 + 2) = a2[2];
        uint64_t v12 = v10;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v13 = sub_23D003B88();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        break;
      case 5u:
        uint64_t v14 = (uint64_t)*a2;
        int v15 = a2[1];
        int v16 = a2[2];
        uint64_t v17 = (uint64_t)a2[3];
        uint64_t v18 = (uint64_t)a2[4];
        uint64_t v19 = (uint64_t)a2[5];
        uint64_t v21 = (uint64_t)a2[6];
        uint64_t v20 = a2[7];
        uint64_t v24 = v20;
        uint64_t v25 = (uint64_t)a2[8];
        char v22 = *((unsigned char *)a2 + 72);
        sub_23CEF00B0(v14, v15, v16, v17, v18, v19, v21, v20, v25, v22);
        *(void *)a1 = v14;
        *((void *)a1 + 1) = v15;
        *((void *)a1 + 2) = v16;
        *((void *)a1 + 3) = v17;
        *((void *)a1 + 4) = v18;
        *((void *)a1 + 5) = v19;
        *((void *)a1 + 6) = v21;
        *((void *)a1 + 7) = v24;
        *((void *)a1 + 8) = v25;
        a1[72] = v22;
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v6;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23CF00F58(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      goto LABEL_6;
    case 2u:
      id v2 = *(id *)a1;

      break;
    case 3u:

LABEL_6:
      swift_bridgeObjectRelease();
      break;
    case 4u:
      uint64_t v3 = sub_23D003B88();
      uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      break;
    case 5u:
      sub_23CEF05F8(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
      break;
    default:
      return;
  }
}

uint64_t sub_23CF01098(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      int v5 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v6 = v5;
      break;
    case 3u:
      uint64_t v7 = *(void **)a2;
      uint64_t v8 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      id v9 = v7;
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v10 = sub_23D003B88();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      break;
    case 5u:
      uint64_t v11 = *(void *)a2;
      uint64_t v12 = *(void **)(a2 + 8);
      uint64_t v13 = *(void **)(a2 + 16);
      uint64_t v14 = *(void *)(a2 + 24);
      uint64_t v15 = *(void *)(a2 + 32);
      uint64_t v16 = *(void *)(a2 + 40);
      uint64_t v18 = *(void *)(a2 + 48);
      uint64_t v17 = *(void *)(a2 + 56);
      uint64_t v21 = v17;
      uint64_t v22 = *(void *)(a2 + 64);
      char v19 = *(unsigned char *)(a2 + 72);
      sub_23CEF00B0(v11, v12, v13, v14, v15, v16, v18, v17, v22, v19);
      *(void *)a1 = v11;
      *(void *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = v13;
      *(void *)(a1 + 24) = v14;
      *(void *)(a1 + 32) = v15;
      *(void *)(a1 + 40) = v16;
      *(void *)(a1 + 48) = v18;
      *(void *)(a1 + 56) = v21;
      *(void *)(a1 + 64) = v22;
      *(unsigned char *)(a1 + 72) = v19;
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23CF01274(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_23CF0148C(a1, type metadata accessor for BatchInteraction.ContentPreview);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v4 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v5 = v4;
        break;
      case 3u:
        id v6 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        id v7 = v6;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v8 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 5u:
        uint64_t v9 = *(void *)a2;
        uint64_t v10 = *(void **)(a2 + 8);
        uint64_t v11 = *(void **)(a2 + 16);
        uint64_t v12 = *(void *)(a2 + 24);
        uint64_t v13 = *(void *)(a2 + 32);
        uint64_t v14 = *(void *)(a2 + 40);
        uint64_t v16 = *(void *)(a2 + 48);
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v19 = v15;
        uint64_t v20 = *(void *)(a2 + 64);
        char v17 = *(unsigned char *)(a2 + 72);
        sub_23CEF00B0(v9, v10, v11, v12, v13, v14, v16, v15, v20, v17);
        *(void *)a1 = v9;
        *(void *)(a1 + 8) = v10;
        *(void *)(a1 + 16) = v11;
        *(void *)(a1 + 24) = v12;
        *(void *)(a1 + 32) = v13;
        *(void *)(a1 + 40) = v14;
        *(void *)(a1 + 48) = v16;
        *(void *)(a1 + 56) = v19;
        *(void *)(a1 + 64) = v20;
        *(unsigned char *)(a1 + 72) = v17;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23CF0148C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_23CF014EC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v6 = sub_23D003B88();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_23CF015A4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_23CF0148C((uint64_t)a1, type metadata accessor for BatchInteraction.ContentPreview);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v6 = sub_23D003B88();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23CF0168C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23CF0169C()
{
  uint64_t result = sub_23D003B88();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_23CF01750(uint64_t *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *(char **)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)&v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
    int v10 = v9(a2, 1, v7);
    if (EnumCaseMultiPayload == 1)
    {
      if (v10)
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v16 = *(void **)a2;
            *a1 = *(void *)a2;
            id v17 = v16;
            break;
          case 3u:
            uint64_t v18 = *(void **)a2;
            uint64_t v19 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v19;
            a1[2] = *((void *)a2 + 2);
            id v20 = v18;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v21 = sub_23D003B88();
            (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
            break;
          case 5u:
            uint64_t v22 = *(void *)a2;
            uint64_t v61 = (void *)*((void *)a2 + 2);
            uint64_t v64 = (void *)*((void *)a2 + 1);
            uint64_t v23 = *((void *)a2 + 4);
            uint64_t v24 = *((void *)a2 + 5);
            uint64_t v58 = *((void *)a2 + 6);
            uint64_t v59 = *((void *)a2 + 3);
            uint64_t v57 = *((void *)a2 + 7);
            uint64_t v67 = *((void *)a2 + 8);
            char v70 = a2[72];
            sub_23CEF00B0(*(void *)a2, v64, v61, v59, v23, v24, v58, v57, v67, v70);
            *a1 = v22;
            a1[1] = (uint64_t)v64;
            a1[2] = (uint64_t)v61;
            a1[3] = v59;
            a1[4] = v23;
            a1[5] = v24;
            a1[6] = v58;
            a1[7] = v57;
            a1[8] = v67;
            *((unsigned char *)a1 + 72) = v70;
            break;
          default:
            uint64_t v14 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v14;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      id v26 = (uint64_t *)((char *)a1 + v25);
      uint64_t v27 = (void **)&a2[v25];
      if (v9((char *)v27, 1, v7))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            id v43 = *v27;
            *id v26 = *v27;
            id v44 = v43;
            break;
          case 3u:
            id v45 = *v27;
            uint64_t v46 = v27[1];
            *id v26 = *v27;
            v26[1] = v46;
            v26[2] = v27[2];
            id v47 = v45;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v48 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v48 - 8) + 16))(v26, v27, v48);
            break;
          case 5u:
            uint64_t v49 = v27[1];
            uint64_t v50 = v27[2];
            uint64_t v51 = (uint64_t)v27[3];
            uint64_t v53 = (uint64_t)v27[4];
            uint64_t v52 = (uint64_t)v27[5];
            uint64_t v66 = v52;
            uint64_t v69 = (uint64_t)*v27;
            uint64_t v54 = v27[7];
            uint64_t v60 = v54;
            uint64_t v63 = (uint64_t)v27[6];
            uint64_t v72 = (uint64_t)v27[8];
            char v55 = *((unsigned char *)v27 + 72);
            sub_23CEF00B0(v69, v49, v50, v51, v53, v52, v63, v54, v72, v55);
            *id v26 = v69;
            v26[1] = v49;
            v26[2] = v50;
            v26[3] = v51;
            v26[4] = v53;
            v26[5] = v66;
            v26[6] = v63;
            v26[7] = v60;
            v26[8] = v72;
            *((unsigned char *)v26 + 72) = v55;
            break;
          default:
            uint64_t v29 = v27[1];
            *id v26 = *v27;
            v26[1] = v29;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v26, 0, 1, v7);
      }
    }
    else if (v10)
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v30 = *(void **)a2;
          *a1 = *(void *)a2;
          id v31 = v30;
          break;
        case 3u:
          id v32 = *(void **)a2;
          uint64_t v33 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v33;
          a1[2] = *((void *)a2 + 2);
          id v34 = v32;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v35 = sub_23D003B88();
          (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
          break;
        case 5u:
          uint64_t v36 = *(void *)a2;
          id v37 = (void *)*((void *)a2 + 2);
          uint64_t v38 = *((void *)a2 + 3);
          uint64_t v39 = *((void *)a2 + 4);
          uint64_t v40 = *((void *)a2 + 5);
          uint64_t v41 = *((void *)a2 + 6);
          uint64_t v65 = v41;
          uint64_t v68 = (void *)*((void *)a2 + 1);
          uint64_t v62 = *((void *)a2 + 7);
          uint64_t v71 = *((void *)a2 + 8);
          char v42 = a2[72];
          sub_23CEF00B0(v36, v68, v37, v38, v39, v40, v41, v62, v71, v42);
          *a1 = v36;
          a1[1] = (uint64_t)v68;
          a1[2] = (uint64_t)v37;
          a1[3] = v38;
          a1[4] = v39;
          a1[5] = v40;
          a1[6] = v65;
          a1[7] = v62;
          a1[8] = v71;
          *((unsigned char *)a1 + 72) = v42;
          break;
        default:
          uint64_t v15 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v15;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23CF01E70(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48);
  int v5 = v4(a1, 1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v5)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v9 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
          break;
        default:
          break;
      }
    }
    a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v4(a1, 1, v3))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_14;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_13;
        case 4u:
          goto LABEL_17;
        case 5u:
          goto LABEL_20;
        default:
          return;
      }
    }
  }
  else if (!v5)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        goto LABEL_14;
      case 2u:
LABEL_10:
        id v6 = *(id *)a1;

        break;
      case 3u:
LABEL_13:

LABEL_14:
        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_17:
        uint64_t v7 = sub_23D003B88();
        uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
        v8(a1, v7);
        break;
      case 5u:
LABEL_20:
        sub_23CEF05F8(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
        break;
      default:
        return;
    }
  }
}

void *sub_23CF0219C(void *a1, void **a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a2, 1, v5);
  if (EnumCaseMultiPayload == 1)
  {
    if (v8)
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v13 = *a2;
          *a1 = *a2;
          id v14 = v13;
          break;
        case 3u:
          uint64_t v15 = *a2;
          uint64_t v16 = a2[1];
          *a1 = *a2;
          a1[1] = v16;
          a1[2] = a2[2];
          id v17 = v15;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v18 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
          break;
        case 5u:
          uint64_t v19 = *a2;
          uint64_t v58 = a2[2];
          uint64_t v61 = a2[1];
          uint64_t v20 = (uint64_t)a2[4];
          uint64_t v21 = (uint64_t)a2[5];
          uint64_t v55 = (uint64_t)a2[6];
          uint64_t v56 = (uint64_t)a2[3];
          uint64_t v54 = a2[7];
          uint64_t v64 = (uint64_t)a2[8];
          char v67 = *((unsigned char *)a2 + 72);
          sub_23CEF00B0((uint64_t)*a2, v61, v58, v56, v20, v21, v55, v54, v64, v67);
          *a1 = v19;
          a1[1] = v61;
          a1[2] = v58;
          a1[3] = v56;
          a1[4] = v20;
          a1[5] = v21;
          a1[6] = v55;
          a1[7] = v54;
          a1[8] = v64;
          *((unsigned char *)a1 + 72) = v67;
          break;
        default:
          uint64_t v11 = a2[1];
          *a1 = *a2;
          a1[1] = v11;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    uint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void **)((char *)a2 + v22);
    if (v7(v24, 1, v5))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v40 = *v24;
          *uint64_t v23 = *v24;
          id v41 = v40;
          break;
        case 3u:
          char v42 = *v24;
          id v43 = v24[1];
          *uint64_t v23 = *v24;
          v23[1] = v43;
          v23[2] = v24[2];
          id v44 = v42;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v45 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v45 - 8) + 16))(v23, v24, v45);
          break;
        case 5u:
          uint64_t v46 = v24[1];
          id v47 = v24[2];
          uint64_t v48 = (uint64_t)v24[3];
          uint64_t v50 = (uint64_t)v24[4];
          uint64_t v49 = (uint64_t)v24[5];
          uint64_t v63 = v49;
          uint64_t v66 = (uint64_t)*v24;
          uint64_t v51 = v24[7];
          uint64_t v57 = v51;
          uint64_t v60 = (uint64_t)v24[6];
          uint64_t v69 = (uint64_t)v24[8];
          char v52 = *((unsigned char *)v24 + 72);
          sub_23CEF00B0(v66, v46, v47, v48, v50, v49, v60, v51, v69, v52);
          *uint64_t v23 = v66;
          v23[1] = v46;
          v23[2] = v47;
          v23[3] = v48;
          v23[4] = v50;
          v23[5] = v63;
          v23[6] = v60;
          v23[7] = v57;
          v23[8] = v69;
          *((unsigned char *)v23 + 72) = v52;
          break;
        default:
          id v26 = v24[1];
          *uint64_t v23 = *v24;
          v23[1] = v26;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
    }
  }
  else if (v8)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v27 = *a2;
        *a1 = *a2;
        id v28 = v27;
        break;
      case 3u:
        uint64_t v29 = *a2;
        uint64_t v30 = a2[1];
        *a1 = *a2;
        a1[1] = v30;
        a1[2] = a2[2];
        id v31 = v29;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v32 = sub_23D003B88();
        (*(void (**)(void *, void **, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
        break;
      case 5u:
        uint64_t v33 = (uint64_t)*a2;
        id v34 = a2[2];
        uint64_t v35 = (uint64_t)a2[3];
        uint64_t v36 = (uint64_t)a2[4];
        uint64_t v37 = (uint64_t)a2[5];
        uint64_t v38 = (uint64_t)a2[6];
        uint64_t v62 = v38;
        uint64_t v65 = a2[1];
        uint64_t v59 = a2[7];
        uint64_t v68 = (uint64_t)a2[8];
        char v39 = *((unsigned char *)a2 + 72);
        sub_23CEF00B0(v33, v65, v34, v35, v36, v37, v38, v59, v68, v39);
        *a1 = v33;
        a1[1] = v65;
        a1[2] = v34;
        a1[3] = v35;
        a1[4] = v36;
        a1[5] = v37;
        a1[6] = v62;
        a1[7] = v59;
        a1[8] = v68;
        *((unsigned char *)a1 + 72) = v39;
        break;
      default:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_23CF02870(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_23CF0148C((uint64_t)a1, type metadata accessor for BatchInteraction.ContentPolarity);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v6 + 48);
    int v8 = v7(a2, 1, v5);
    if (EnumCaseMultiPayload == 1)
    {
      if (v8)
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v11 = *a2;
            *a1 = *a2;
            id v12 = v11;
            break;
          case 3u:
            uint64_t v13 = *a2;
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            id v14 = v13;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v15 = sub_23D003B88();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
            break;
          case 5u:
            uint64_t v16 = *a2;
            char v52 = a2[2];
            uint64_t v55 = a2[1];
            uint64_t v17 = (uint64_t)a2[4];
            uint64_t v18 = (uint64_t)a2[5];
            uint64_t v49 = (uint64_t)a2[6];
            uint64_t v50 = (uint64_t)a2[3];
            uint64_t v48 = a2[7];
            uint64_t v58 = (uint64_t)a2[8];
            char v61 = *((unsigned char *)a2 + 72);
            sub_23CEF00B0((uint64_t)*a2, v55, v52, v50, v17, v18, v49, v48, v58, v61);
            *a1 = v16;
            a1[1] = v55;
            a1[2] = v52;
            a1[3] = (void *)v50;
            a1[4] = (void *)v17;
            a1[5] = (void *)v18;
            a1[6] = (void *)v49;
            a1[7] = v48;
            a1[8] = (void *)v58;
            *((unsigned char *)a1 + 72) = v61;
            break;
          default:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void **, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      uint64_t v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v20 = (void **)((char *)a1 + v19);
      uint64_t v21 = (void **)((char *)a2 + v19);
      if (v7(v21, 1, v5))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v35 = *v21;
            *uint64_t v20 = *v21;
            id v36 = v35;
            break;
          case 3u:
            uint64_t v37 = *v21;
            *uint64_t v20 = *v21;
            v20[1] = v21[1];
            v20[2] = v21[2];
            id v38 = v37;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v39 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v39 - 8) + 16))(v20, v21, v39);
            break;
          case 5u:
            uint64_t v40 = v21[1];
            id v41 = v21[2];
            uint64_t v42 = (uint64_t)v21[3];
            uint64_t v44 = (uint64_t)v21[4];
            uint64_t v43 = (uint64_t)v21[5];
            uint64_t v57 = v43;
            uint64_t v60 = (uint64_t)*v21;
            uint64_t v45 = v21[7];
            uint64_t v51 = v45;
            uint64_t v54 = (uint64_t)v21[6];
            uint64_t v63 = (uint64_t)v21[8];
            char v46 = *((unsigned char *)v21 + 72);
            sub_23CEF00B0(v60, v40, v41, v42, v44, v43, v54, v45, v63, v46);
            *uint64_t v20 = v60;
            v20[1] = v40;
            v20[2] = v41;
            v20[3] = v42;
            v20[4] = v44;
            v20[5] = v57;
            v20[6] = v54;
            v20[7] = v51;
            v20[8] = v63;
            *((unsigned char *)v20 + 72) = v46;
            break;
          default:
            *uint64_t v20 = *v21;
            v20[1] = v21[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v20, 0, 1, v5);
      }
    }
    else if (v8)
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v23 = *a2;
          *a1 = *a2;
          id v24 = v23;
          break;
        case 3u:
          uint64_t v25 = *a2;
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          id v26 = v25;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v27 = sub_23D003B88();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
          break;
        case 5u:
          uint64_t v28 = (uint64_t)*a2;
          uint64_t v29 = a2[2];
          uint64_t v30 = (uint64_t)a2[3];
          uint64_t v31 = (uint64_t)a2[4];
          uint64_t v32 = (uint64_t)a2[5];
          uint64_t v33 = (uint64_t)a2[6];
          uint64_t v56 = v33;
          uint64_t v59 = a2[1];
          uint64_t v53 = a2[7];
          uint64_t v62 = (uint64_t)a2[8];
          char v34 = *((unsigned char *)a2 + 72);
          sub_23CEF00B0(v28, v59, v29, v30, v31, v32, v33, v53, v62, v34);
          *a1 = (void *)v28;
          a1[1] = v59;
          a1[2] = v29;
          a1[3] = (void *)v30;
          a1[4] = (void *)v31;
          a1[5] = (void *)v32;
          a1[6] = (void *)v56;
          a1[7] = v53;
          a1[8] = (void *)v62;
          *((unsigned char *)a1 + 72) = v34;
          break;
        default:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void **, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_23CF02FB0(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a2, 1, v5);
  if (EnumCaseMultiPayload == 1)
  {
    if (v8)
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v11 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    id v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    if (v7(v15, 1, v5))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v17 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v14, v15, *(void *)(v6 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
    }
  }
  else if (v8)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v12 = sub_23D003B88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_23CF03314(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_23CF0148C((uint64_t)a1, type metadata accessor for BatchInteraction.ContentPolarity);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
    int v8 = v7(a2, 1, v5);
    if (EnumCaseMultiPayload == 1)
    {
      if (v8)
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v11 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(v6 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      id v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      if (v7(v15, 1, v5))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v17 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v14, v15, *(void *)(v6 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
      }
    }
    else if (v8)
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v12 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23CF0369C()
{
  sub_23CEF5AA8();
  if (v1 <= 0x3F)
  {
    v2[4] = *(void *)(v0 - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_23CF03738()
{
  return sub_23CF05DAC((unint64_t *)&qword_268BCD440, MEMORY[0x263F07508]);
}

uint64_t sub_23CF03780@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8Feedback24NullableBatchInteraction_id;
  uint64_t v4 = sub_23D003DB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_23CF037F8()
{
  return sub_23D003D98();
}

uint64_t sub_23CF03814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CatchUpDonationDecoder.Result.Mail(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v21 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_31:
    char v17 = 0;
    return v17 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_23CF05D3C(a1 + v12, (uint64_t)v10, type metadata accessor for CatchUpDonationDecoder.Result.Mail);
      sub_23CF05D3C(a2 + v12, (uint64_t)v7, type metadata accessor for CatchUpDonationDecoder.Result.Mail);
      BOOL v15 = *v10 == *v7 && v10[1] == v7[1];
      if (!v15 && (sub_23D006218() & 1) == 0) {
        break;
      }
      BOOL v16 = v10[2] == v7[2] && v10[3] == v7[3];
      if (!v16 && (sub_23D006218() & 1) == 0 || (v10[4] != v7[4] || v10[5] != v7[5]) && (sub_23D006218() & 1) == 0) {
        break;
      }
      if ((v10[6] != v7[6] || v10[7] != v7[7]) && (sub_23D006218() & 1) == 0
        || (sub_23D003D58() & 1) == 0
        || (sub_23D003D98() & 1) == 0)
      {
        break;
      }
      char v17 = sub_23D003B78();
      sub_23CF0148C((uint64_t)v7, type metadata accessor for CatchUpDonationDecoder.Result.Mail);
      sub_23CF0148C((uint64_t)v10, type metadata accessor for CatchUpDonationDecoder.Result.Mail);
      BOOL v19 = v14-- != 0;
      if (v17)
      {
        v12 += v13;
        if (v19) {
          continue;
        }
      }
      return v17 & 1;
    }
    sub_23CF0148C((uint64_t)v7, type metadata accessor for CatchUpDonationDecoder.Result.Mail);
    sub_23CF0148C((uint64_t)v10, type metadata accessor for CatchUpDonationDecoder.Result.Mail);
    goto LABEL_31;
  }
  char v17 = 1;
  return v17 & 1;
}

uint64_t sub_23CF03A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v21 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_26:
    char v17 = 0;
    return v17 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_23CF05D3C(a1 + v12, (uint64_t)v10, type metadata accessor for CatchUpDonationDecoder.Result.Message);
      sub_23CF05D3C(a2 + v12, (uint64_t)v7, type metadata accessor for CatchUpDonationDecoder.Result.Message);
      BOOL v15 = *v10 == *v7 && v10[1] == v7[1];
      if (!v15 && (sub_23D006218() & 1) == 0) {
        break;
      }
      BOOL v16 = v10[2] == v7[2] && v10[3] == v7[3];
      if (!v16 && (sub_23D006218() & 1) == 0
        || (sub_23D003D58() & 1) == 0
        || (sub_23D003B78() & 1) == 0
        || *((unsigned __int8 *)v10 + *(int *)(v4 + 32)) != *((unsigned __int8 *)v7 + *(int *)(v4 + 32)))
      {
        break;
      }
      char v17 = sub_23D003D98();
      sub_23CF0148C((uint64_t)v7, type metadata accessor for CatchUpDonationDecoder.Result.Message);
      sub_23CF0148C((uint64_t)v10, type metadata accessor for CatchUpDonationDecoder.Result.Message);
      BOOL v19 = v14-- != 0;
      if (v17)
      {
        v12 += v13;
        if (v19) {
          continue;
        }
      }
      return v17 & 1;
    }
    sub_23CF0148C((uint64_t)v7, type metadata accessor for CatchUpDonationDecoder.Result.Message);
    sub_23CF0148C((uint64_t)v10, type metadata accessor for CatchUpDonationDecoder.Result.Message);
    goto LABEL_26;
  }
  char v17 = 1;
  return v17 & 1;
}

uint64_t sub_23CF03CF0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_23D006218(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_23D006218() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_23CF03DB8(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v5 = a1[6];
  uint64_t v6 = a2[6];
  BOOL v7 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v7 || (BOOL v8 = 0, (sub_23D006218() & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v9 = sub_23CF03F58(v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9)
    {
      uint64_t v10 = a2 + 9;
      BOOL v11 = a1 + 9;
      do
      {
        BOOL v8 = --v2 == 0;
        if (!v2) {
          break;
        }
        uint64_t v13 = *v11;
        uint64_t v14 = *v10;
        BOOL v15 = *(v11 - 2) == *(v10 - 2) && *(v11 - 1) == *(v10 - 1);
        if (!v15 && (sub_23D006218() & 1) == 0) {
          break;
        }
        v10 += 3;
        v11 += 3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v12 = sub_23CF03F58(v13, v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v12 & 1) != 0);
      return v8;
    }
    return 0;
  }
  return v8;
}

uint64_t sub_23CF03F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unsigned char *)(a1 + 56);
  for (i = (unsigned char *)(a2 + 56); ; i += 32)
  {
    uint64_t v6 = (void *)*((void *)v3 - 3);
    uint64_t v5 = *((void *)v3 - 2);
    BOOL v8 = (void *)*((void *)i - 3);
    uint64_t v7 = *((void *)i - 2);
    int v9 = *i;
    if (!*v3)
    {
      if (*i) {
        return 0;
      }
LABEL_13:
      BOOL v10 = v6 == v8 && v5 == v7;
      if (!v10 && (sub_23D006218() & 1) == 0) {
        return 0;
      }
      goto LABEL_7;
    }
    if (*v3 == 1)
    {
      if (v9 != 1) {
        return 0;
      }
      goto LABEL_13;
    }
    if (v9 != 2) {
      return 0;
    }
    uint64_t v11 = *((void *)v3 - 1);
    uint64_t v12 = *((void *)i - 1);
    sub_23CF05C30();
    uint64_t v21 = v5;
    sub_23CF06F6C(v6, v5, v11, 2u);
    uint64_t v22 = v7;
    uint64_t v13 = v12;
    sub_23CF06F6C(v8, v7, v12, 2u);
    uint64_t v14 = v6;
    id v15 = v6;
    id v16 = v8;
    LOBYTE(v12) = sub_23D005DD8();

    if ((v12 & 1) == 0)
    {
      uint64_t v18 = v21;
      uint64_t v17 = v11;
      goto LABEL_32;
    }
    if (!v11) {
      break;
    }
    uint64_t v17 = v11;
    uint64_t v18 = v21;
    if (!v13) {
      goto LABEL_32;
    }
    if (v21 == v22 && v11 == v13)
    {
      sub_23CF06FD8(v8, v21, v11, 2u);
LABEL_6:
      sub_23CF06FD8(v14, v18, v17, 2u);
      goto LABEL_7;
    }
    char v19 = sub_23D006218();
    sub_23CF06FD8(v8, v22, v13, 2u);
    sub_23CF06FD8(v14, v21, v11, 2u);
    if ((v19 & 1) == 0) {
      return 0;
    }
LABEL_7:
    v3 += 32;
    if (!--v2) {
      return 1;
    }
  }
  uint64_t v18 = v21;
  if (!v13)
  {
    sub_23CF06FD8(v8, v22, 0, 2u);
    uint64_t v17 = 0;
    goto LABEL_6;
  }
  uint64_t v17 = 0;
LABEL_32:
  sub_23CF06FD8(v8, v22, v13, 2u);
  sub_23CF06FD8(v14, v18, v17, 2u);
  return 0;
}

uint64_t sub_23CF041B4(_OWORD *a1, _OWORD *a2)
{
  sub_23CF05EA8(a1, &v20);
  if (!v24)
  {
    sub_23CF06D1C((uint64_t)&v20, (uint64_t)&v11);
    sub_23CF05EA8(a2, &v15);
    if (!v19)
    {
      sub_23CF06D1C((uint64_t)&v15, (uint64_t)v8);
      sub_23CF06D1C((uint64_t)&v11, (uint64_t)&v25);
      uint64_t v5 = v25;
      if (BYTE8(v25))
      {
        sub_23CF06D1C((uint64_t)v8, (uint64_t)&v9);
        if ((v10 & 1) == 0 || (sub_23CF03A9C(v5, v9) & 1) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_23CF06D1C((uint64_t)v8, (uint64_t)&v9);
        if ((v10 & 1) != 0 || (sub_23CF03814(v5, v9) & 1) == 0) {
          goto LABEL_16;
        }
      }
      char v6 = 1;
      return v6 & 1;
    }
LABEL_16:
    char v6 = 0;
    return v6 & 1;
  }
  if (v24 != 1)
  {
    long long v25 = v20;
    long long v26 = v21;
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v22;
    *(_OWORD *)&v27[9] = *(_OWORD *)&v22[9];
    sub_23CF05EA8(a2, &v15);
    if (v19 == 2)
    {
      long long v11 = v15;
      long long v12 = v16;
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v17;
      *(_OWORD *)&v13[9] = *(_OWORD *)&v17[9];
      sub_23CF06CC4((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_23CEF00B0);
      sub_23CF06CC4((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_23CEF00B0);
      char v4 = sub_23CF086C0((uint64_t)&v25, (uint64_t)&v11);
      goto LABEL_12;
    }
    goto LABEL_16;
  }
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v22;
  *(_OWORD *)&v27[16] = *(_OWORD *)&v22[16];
  uint64_t v28 = v23;
  long long v25 = v20;
  long long v26 = v21;
  sub_23CF05EA8(a2, &v15);
  if (v19 != 1) {
    goto LABEL_16;
  }
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v17;
  *(_OWORD *)&v13[16] = *(_OWORD *)&v17[16];
  uint64_t v14 = v18;
  long long v11 = v15;
  long long v12 = v16;
  sub_23CF06CC4((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_23CEF00B0);
  sub_23CF06CC4((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_23CEF00B0);
  char v4 = sub_23CFE166C((uint64_t)&v25, (uint64_t)&v11);
LABEL_12:
  char v6 = v4;
  sub_23CF06CC4((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_23CEF05F8);
  sub_23CF06CC4((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_23CEF05F8);
  return v6 & 1;
}

uint64_t sub_23CF043DC(uint64_t a1, uint64_t a2)
{
  uint64_t v154 = a2;
  uint64_t v3 = sub_23D003B88();
  uint64_t v152 = *(unsigned char **)(v3 - 8);
  uint64_t v153 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v151 = &v137[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  BOOL v8 = &v137[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  long long v11 = &v137[-v10];
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (void **)&v137[-v13];
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (void **)&v137[-v16];
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  long long v20 = (uint64_t *)&v137[-v19];
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (uint64_t *)&v137[-v21];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD460);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  long long v26 = &v137[*(int *)(v24 + 56) - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = a1;
  uint64_t v28 = &v137[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23CF05D3C(v27, (uint64_t)v28, type metadata accessor for BatchInteraction.ContentPreview);
  sub_23CF05D3C(v154, (uint64_t)v26, type metadata accessor for BatchInteraction.ContentPreview);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_23CF05D3C((uint64_t)v28, (uint64_t)v20, type metadata accessor for BatchInteraction.ContentPreview);
      uint64_t v35 = *v20;
      uint64_t v34 = v20[1];
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_35;
      }
      uint64_t v36 = *(void *)v26;
      uint64_t v37 = *((void *)v26 + 1);
      if (v35 == v36 && v34 == v37) {
        goto LABEL_41;
      }
      goto LABEL_13;
    case 2u:
      sub_23CF05D3C((uint64_t)v28, (uint64_t)v17, type metadata accessor for BatchInteraction.ContentPreview);
      uint64_t v40 = *v17;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        id v41 = *(void **)v26;
        sub_23CF05C30();
        char v42 = sub_23D005DD8();

        goto LABEL_27;
      }

      goto LABEL_38;
    case 3u:
      sub_23CF05D3C((uint64_t)v28, (uint64_t)v14, type metadata accessor for BatchInteraction.ContentPreview);
      uint64_t v44 = *v14;
      uint64_t v43 = v14[1];
      uint64_t v45 = v14[2];
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v46 = (uint64_t)v28;
        uint64_t v48 = *(void **)v26;
        id v47 = (void *)*((void *)v26 + 1);
        uint64_t v49 = (void *)*((void *)v26 + 2);
        sub_23CF05C30();
        char v50 = sub_23D005DD8();

        if (v50)
        {
          if (v43 == v47 && v45 == v49)
          {
            swift_bridgeObjectRelease_n();
LABEL_54:
            uint64_t v108 = v46;
LABEL_55:
            sub_23CF0148C(v108, type metadata accessor for BatchInteraction.ContentPreview);
            char v42 = 1;
            return v42 & 1;
          }
          char v52 = sub_23D006218();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v52) {
            goto LABEL_54;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_23CF0148C(v46, type metadata accessor for BatchInteraction.ContentPreview);
        goto LABEL_39;
      }

LABEL_35:
      swift_bridgeObjectRelease();
LABEL_38:
      sub_23CEE8BB4((uint64_t)v28, &qword_268BCD460);
LABEL_39:
      char v42 = 0;
      return v42 & 1;
    case 4u:
      sub_23CF05D3C((uint64_t)v28, (uint64_t)v11, type metadata accessor for BatchInteraction.ContentPreview);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        (*((void (**)(unsigned char *, uint64_t))v152 + 1))(v11, v153);
        goto LABEL_38;
      }
      uint64_t v54 = v152;
      uint64_t v53 = v153;
      uint64_t v55 = v151;
      (*((void (**)(unsigned char *, unsigned char *, uint64_t))v152 + 4))(v151, v26, v153);
      char v42 = sub_23D003B78();
      uint64_t v56 = (void (*)(unsigned char *, uint64_t))*((void *)v54 + 1);
      v56(v55, v53);
      v56(v11, v53);
LABEL_27:
      sub_23CF0148C((uint64_t)v28, type metadata accessor for BatchInteraction.ContentPreview);
      return v42 & 1;
    case 5u:
      uint64_t v152 = v28;
      sub_23CF05D3C((uint64_t)v28, (uint64_t)v8, type metadata accessor for BatchInteraction.ContentPreview);
      uint64_t v57 = *(void **)v8;
      uint64_t v58 = (void *)*((void *)v8 + 1);
      uint64_t v59 = (void *)*((void *)v8 + 2);
      uint64_t v60 = *((void *)v8 + 3);
      uint64_t v62 = *((void *)v8 + 4);
      uint64_t v61 = *((void *)v8 + 5);
      uint64_t v63 = *((void *)v8 + 6);
      uint64_t v153 = *((void *)v8 + 7);
      uint64_t v154 = v61;
      uint64_t v64 = (unsigned char *)*((void *)v8 + 8);
      int v65 = v8[72];
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        sub_23CEF05F8(v57, v58, v59, v60, v62, v154, v63, v153, (uint64_t)v64, v65);
        uint64_t v28 = v152;
        goto LABEL_38;
      }
      uint64_t v66 = (uint64_t)v64;
      char v67 = v57;
      uint64_t v68 = v58;
      char v70 = *(void **)v26;
      uint64_t v69 = (void *)*((void *)v26 + 1);
      uint64_t v71 = (void *)*((void *)v26 + 2);
      uint64_t v72 = *((void *)v26 + 3);
      uint64_t v73 = *((void *)v26 + 4);
      uint64_t v74 = *((void *)v26 + 5);
      uint64_t v75 = *((void *)v26 + 6);
      uint64_t v76 = *((void *)v26 + 7);
      uint64_t v77 = *((void *)v26 + 8);
      int v78 = v26[72];
      if (v65)
      {
        unsigned __int8 v79 = v153;
        uint64_t v80 = v57;
        uint64_t v81 = v64;
        if (v65 == 1)
        {
          uint64_t v155 = v57;
          uint64_t v156 = v68;
          uint64_t v82 = v68;
          unsigned int v157 = v59;
          uint64_t v158 = v60;
          uint64_t v159 = v62;
          uint64_t v160 = v154;
          uint64_t v83 = v63;
          uint64_t v161 = v63;
          uint64_t v162 = v153;
          long long v163 = v64;
          if (v78 == 1)
          {
            int v164 = v70;
            long long v165 = v69;
            uint64_t v166 = v71;
            uint64_t v167 = v72;
            uint64_t v168 = v73;
            uint64_t v169 = v74;
            uint64_t v170 = v75;
            uint64_t v171 = v76;
            uint64_t v172 = v77;
            long long v147 = v69;
            uint64_t v84 = v68;
            uint64_t v144 = v59;
            uint64_t v139 = v71;
            uint64_t v85 = v59;
            uint64_t v145 = v60;
            uint64_t v86 = v72;
            uint64_t v87 = v60;
            uint64_t v146 = v62;
            uint64_t v88 = v73;
            uint64_t v89 = v62;
            uint64_t v90 = v74;
            uint64_t v91 = v75;
            uint64_t v92 = v63;
            uint64_t v93 = v76;
            uint64_t v151 = v64;
            uint64_t v94 = (uint64_t)v70;
            long long v149 = v70;
            uint64_t v95 = v77;
            uint64_t v148 = v77;
            uint64_t v150 = v82;
            sub_23CEF00B0((uint64_t)v80, v84, v85, v87, v89, v154, v92, v153, v66, 1);
            uint64_t v135 = v95;
            uint64_t v96 = v94;
            uint64_t v97 = v147;
            uint64_t v98 = v139;
            uint64_t v143 = v90;
            uint64_t v141 = v91;
            uint64_t v142 = v93;
            sub_23CEF00B0(v96, v147, v139, v86, v88, v90, v91, v93, v135, 1);
            BOOL v99 = sub_23CFE166C((uint64_t)&v155, (uint64_t)&v164);
            uint64_t v140 = v83;
            BOOL v138 = v99;
            sub_23CEF05F8(v149, v97, v98, v86, v88, v90, v91, v93, v148, 1);
            uint64_t v100 = v144;
            uint64_t v101 = v145;
            uint64_t v102 = v146;
            unsigned __int8 v103 = v153;
            uint64_t v104 = v154;
            uint64_t v105 = v140;
            sub_23CEF05F8(v80, v150, v144, v145, v146, v154, v140, v153, (uint64_t)v151, 1);
            sub_23CEF05F8(v149, v147, v98, v86, v88, v143, v141, v142, v148, 1);
            char v106 = 1;
            goto LABEL_51;
          }
        }
        else
        {
          uint64_t v155 = v57;
          uint64_t v156 = v68;
          uint64_t v82 = v68;
          unsigned int v157 = v59;
          uint64_t v158 = v60;
          uint64_t v159 = v62;
          uint64_t v160 = v154;
          uint64_t v83 = v63;
          uint64_t v161 = v63;
          LOBYTE(v162) = v153;
          if (v78 == 2)
          {
            int v164 = v70;
            long long v165 = v69;
            uint64_t v166 = v71;
            uint64_t v167 = v72;
            uint64_t v168 = v73;
            uint64_t v169 = v74;
            uint64_t v170 = v75;
            LOBYTE(v171) = v76;
            long long v147 = v69;
            uint64_t v116 = v68;
            uint64_t v144 = v59;
            uint64_t v139 = v71;
            uint64_t v117 = v59;
            uint64_t v145 = v60;
            uint64_t v118 = v72;
            uint64_t v119 = v60;
            uint64_t v146 = v62;
            uint64_t v120 = v73;
            uint64_t v121 = v62;
            uint64_t v122 = v74;
            uint64_t v123 = v75;
            uint64_t v124 = v63;
            uint64_t v125 = v76;
            uint64_t v151 = v64;
            uint64_t v126 = (uint64_t)v70;
            long long v149 = v70;
            uint64_t v127 = v77;
            uint64_t v148 = v77;
            uint64_t v150 = v82;
            sub_23CEF00B0((uint64_t)v80, v116, v117, v119, v121, v154, v124, v153, v66, 2);
            uint64_t v136 = v127;
            uint64_t v128 = v126;
            uint64_t v129 = v147;
            uint64_t v130 = v139;
            uint64_t v143 = v122;
            uint64_t v141 = v123;
            uint64_t v142 = v125;
            sub_23CEF00B0(v128, v147, v139, v118, v120, v122, v123, v125, v136, 2);
            int v131 = sub_23CF086C0((uint64_t)&v155, (uint64_t)&v164);
            uint64_t v140 = v83;
            BOOL v138 = v131;
            sub_23CEF05F8(v149, v129, v130, v118, v120, v122, v123, v125, v148, 2);
            uint64_t v100 = v144;
            uint64_t v101 = v145;
            uint64_t v102 = v146;
            unsigned __int8 v103 = v153;
            uint64_t v104 = v154;
            uint64_t v105 = v140;
            sub_23CEF05F8(v80, v150, v144, v145, v146, v154, v140, v153, (uint64_t)v151, 2);
            sub_23CEF05F8(v149, v147, v130, v118, v120, v143, v141, v142, v148, 2);
            char v106 = 2;
LABEL_51:
            sub_23CEF05F8(v80, v150, v100, v101, v102, v104, v105, v103, (uint64_t)v151, v106);
            uint64_t v108 = (uint64_t)v152;
            if (v138) {
              goto LABEL_55;
            }
            goto LABEL_59;
          }
        }
        goto LABEL_58;
      }
      unsigned __int8 v79 = v153;
      uint64_t v83 = v63;
      uint64_t v82 = v58;
      uint64_t v80 = v67;
      uint64_t v81 = v64;
      if (v78) {
        goto LABEL_58;
      }
      if (v68)
      {
        if (v69)
        {
          uint64_t v109 = v69;
          uint64_t v146 = v62;
          uint64_t v145 = v60;
          uint64_t v144 = v59;
          uint64_t v151 = v64;
          uint64_t v142 = v76;
          uint64_t v141 = v75;
          uint64_t v143 = v74;
          uint64_t v110 = v73;
          uint64_t v111 = v72;
          uint64_t v112 = v71;
          uint64_t v113 = v70;
          uint64_t v114 = v77;
          int v115 = sub_23CF03A9C((uint64_t)v80, (uint64_t)v70);
LABEL_61:
          LODWORD(v150) = v115;
          sub_23CEF05F8(v113, v109, v112, v111, v110, v143, v141, v142, v114, 0);
          sub_23CEF05F8(v80, v68, v144, v145, v146, v154, v83, v79, (uint64_t)v151, 0);
          uint64_t v108 = (uint64_t)v152;
          if (v150) {
            goto LABEL_55;
          }
LABEL_59:
          sub_23CF0148C(v108, type metadata accessor for BatchInteraction.ContentPreview);
          goto LABEL_39;
        }
      }
      else if ((v69 & 1) == 0)
      {
        uint64_t v109 = v69;
        uint64_t v146 = v62;
        uint64_t v145 = v60;
        uint64_t v144 = v59;
        uint64_t v151 = v64;
        uint64_t v142 = v76;
        uint64_t v141 = v75;
        uint64_t v143 = v74;
        uint64_t v110 = v73;
        uint64_t v111 = v72;
        uint64_t v112 = v71;
        uint64_t v113 = v70;
        uint64_t v114 = v77;
        int v115 = sub_23CF03814((uint64_t)v80, (uint64_t)v70);
        goto LABEL_61;
      }
      LOBYTE(v78) = 0;
      uint64_t v82 = v68;
LABEL_58:
      uint64_t v132 = v154;
      uint64_t v133 = (uint64_t)v81;
      uint64_t v134 = v82;
      sub_23CEF05F8(v70, v69, v71, v72, v73, v74, v75, v76, v77, v78);
      sub_23CEF05F8(v80, v134, v59, v60, v62, v132, v83, v79, v133, v65);
      uint64_t v108 = (uint64_t)v152;
      goto LABEL_59;
    default:
      sub_23CF05D3C((uint64_t)v28, (uint64_t)v22, type metadata accessor for BatchInteraction.ContentPreview);
      uint64_t v30 = *v22;
      uint64_t v29 = v22[1];
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_35;
      }
      uint64_t v31 = *(void *)v26;
      uint64_t v32 = *((void *)v26 + 1);
      if (v30 == v31 && v29 == v32)
      {
LABEL_41:
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_13:
        char v39 = sub_23D006218();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v39 & 1) == 0)
        {
          sub_23CF0148C((uint64_t)v28, type metadata accessor for BatchInteraction.ContentPreview);
          goto LABEL_39;
        }
      }
      uint64_t v108 = (uint64_t)v28;
      goto LABEL_55;
  }
}

uint64_t sub_23CF051B8(uint64_t a1, uint64_t a2)
{
  uint64_t v79 = a1;
  uint64_t v80 = (char *)a2;
  uint64_t v2 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v76 = *(void *)(v2 - 8);
  uint64_t v77 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v71 = (uint64_t)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD450);
  uint64_t v4 = MEMORY[0x270FA5388](v78);
  uint64_t v70 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v75 = (char *)&v69 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v74 = (char *)&v69 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v69 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v73 = (char *)&v69 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v72 = (uint64_t)&v69 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v69 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v69 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v69 - v23;
  MEMORY[0x270FA5388](v22);
  long long v26 = (char *)&v69 - v25;
  uint64_t v27 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v69 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD458);
  uint64_t v34 = MEMORY[0x270FA5388](v33 - 8);
  uint64_t v36 = (char *)&v69 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = (uint64_t)&v36[*(int *)(v34 + 56)];
  sub_23CF05D3C(v79, (uint64_t)v36, type metadata accessor for BatchInteraction.ContentPolarity);
  sub_23CF05D3C((uint64_t)v80, v37, type metadata accessor for BatchInteraction.ContentPolarity);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v38 = (uint64_t)v73;
    uint64_t v39 = (uint64_t)v75;
    uint64_t v80 = v18;
    uint64_t v40 = (uint64_t)v21;
    sub_23CF05D3C((uint64_t)v36, (uint64_t)v30, type metadata accessor for BatchInteraction.ContentPolarity);
    uint64_t v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v42 = (uint64_t)v21;
      sub_23CF05C70(v37, (uint64_t)v21);
      uint64_t v43 = (uint64_t)v80;
      sub_23CF05C70((uint64_t)&v30[v41], (uint64_t)v80);
      sub_23CF05C70(v37 + v41, v72);
      uint64_t v44 = v39 + *(int *)(v78 + 48);
      uint64_t v45 = (uint64_t)v30;
      uint64_t v46 = v39;
      sub_23CF05C70(v45, v39);
      sub_23CEE82CC(v40, v44, &qword_268BCD218);
      uint64_t v47 = v77;
      uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
      if (v48(v39, 1, v77) == 1)
      {
        if (v48(v44, 1, v47) == 1)
        {
          sub_23CEE8BB4(v39, &qword_268BCD218);
LABEL_21:
          uint64_t v60 = v70;
          uint64_t v61 = v70 + *(int *)(v78 + 48);
          sub_23CEE82CC(v43, v70, &qword_268BCD218);
          uint64_t v62 = v72;
          sub_23CEE82CC(v72, v61, &qword_268BCD218);
          if (v48(v60, 1, v47) == 1)
          {
            sub_23CEE8BB4(v62, &qword_268BCD218);
            sub_23CEE8BB4(v43, &qword_268BCD218);
            sub_23CEE8BB4(v42, &qword_268BCD218);
            if (v48(v61, 1, v47) == 1)
            {
              uint64_t v54 = v60;
              goto LABEL_24;
            }
          }
          else
          {
            uint64_t v65 = v69;
            sub_23CEE82CC(v60, v69, &qword_268BCD218);
            if (v48(v61, 1, v47) != 1)
            {
              uint64_t v66 = v71;
              sub_23CF05CD8(v61, v71);
              char v67 = sub_23CF043DC(v65, v66);
              sub_23CF0148C(v66, type metadata accessor for BatchInteraction.ContentPreview);
              sub_23CEE8BB4(v62, &qword_268BCD218);
              sub_23CEE8BB4((uint64_t)v80, &qword_268BCD218);
              sub_23CEE8BB4(v42, &qword_268BCD218);
              sub_23CF0148C(v65, type metadata accessor for BatchInteraction.ContentPreview);
              sub_23CEE8BB4(v60, &qword_268BCD218);
              if (v67) {
                goto LABEL_31;
              }
              goto LABEL_32;
            }
            sub_23CEE8BB4(v62, &qword_268BCD218);
            sub_23CEE8BB4((uint64_t)v80, &qword_268BCD218);
            sub_23CEE8BB4(v42, &qword_268BCD218);
            sub_23CF0148C(v65, type metadata accessor for BatchInteraction.ContentPreview);
          }
          sub_23CEE8BB4(v60, &qword_268BCD450);
LABEL_32:
          sub_23CF0148C((uint64_t)v36, type metadata accessor for BatchInteraction.ContentPolarity);
          return 0;
        }
      }
      else
      {
        uint64_t v55 = v39;
        uint64_t v56 = v38;
        sub_23CEE82CC(v55, v38, &qword_268BCD218);
        if (v48(v44, 1, v47) != 1)
        {
          uint64_t v57 = v71;
          sub_23CF05CD8(v44, v71);
          char v58 = sub_23CF043DC(v38, v57);
          uint64_t v59 = v57;
          uint64_t v43 = (uint64_t)v80;
          sub_23CF0148C(v59, type metadata accessor for BatchInteraction.ContentPreview);
          sub_23CF0148C(v56, type metadata accessor for BatchInteraction.ContentPreview);
          sub_23CEE8BB4(v46, &qword_268BCD218);
          if (v58) {
            goto LABEL_21;
          }
LABEL_16:
          sub_23CEE8BB4(v72, &qword_268BCD218);
          sub_23CEE8BB4(v43, &qword_268BCD218);
          sub_23CEE8BB4(v42, &qword_268BCD218);
          goto LABEL_32;
        }
        sub_23CF0148C(v38, type metadata accessor for BatchInteraction.ContentPreview);
      }
      sub_23CEE8BB4(v46, &qword_268BCD450);
      goto LABEL_16;
    }
    sub_23CEE8BB4((uint64_t)&v30[v41], &qword_268BCD218);
  }
  else
  {
    uint64_t v49 = (uint64_t)v74;
    sub_23CF05D3C((uint64_t)v36, (uint64_t)v32, type metadata accessor for BatchInteraction.ContentPolarity);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v50 = (uint64_t)v26;
      sub_23CF05C70(v37, (uint64_t)v26);
      uint64_t v51 = v49 + *(int *)(v78 + 48);
      sub_23CF05C70((uint64_t)v32, v49);
      sub_23CEE82CC((uint64_t)v26, v51, &qword_268BCD218);
      uint64_t v52 = v77;
      uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
      if (v53(v49, 1, v77) == 1)
      {
        sub_23CEE8BB4(v50, &qword_268BCD218);
        if (v53(v51, 1, v52) == 1)
        {
          uint64_t v54 = v49;
LABEL_24:
          sub_23CEE8BB4(v54, &qword_268BCD218);
LABEL_31:
          sub_23CF0148C((uint64_t)v36, type metadata accessor for BatchInteraction.ContentPolarity);
          return 1;
        }
      }
      else
      {
        sub_23CEE82CC(v49, (uint64_t)v24, &qword_268BCD218);
        if (v53(v51, 1, v52) != 1)
        {
          uint64_t v63 = v71;
          sub_23CF05CD8(v51, v71);
          char v64 = sub_23CF043DC((uint64_t)v24, v63);
          sub_23CF0148C(v63, type metadata accessor for BatchInteraction.ContentPreview);
          sub_23CEE8BB4(v50, &qword_268BCD218);
          sub_23CF0148C((uint64_t)v24, type metadata accessor for BatchInteraction.ContentPreview);
          sub_23CEE8BB4(v49, &qword_268BCD218);
          if (v64) {
            goto LABEL_31;
          }
          goto LABEL_32;
        }
        sub_23CEE8BB4(v50, &qword_268BCD218);
        sub_23CF0148C((uint64_t)v24, type metadata accessor for BatchInteraction.ContentPreview);
      }
      sub_23CEE8BB4(v49, &qword_268BCD450);
      goto LABEL_32;
    }
    uint64_t v30 = v32;
  }
  sub_23CEE8BB4((uint64_t)v30, &qword_268BCD218);
  sub_23CEE8BB4((uint64_t)v36, &qword_268BCD458);
  return 0;
}

uint64_t sub_23CF05B4C(uint64_t a1, uint64_t a2)
{
  if ((sub_23D003D98() & 1) == 0) {
    return 0;
  }
  sub_23CF05C30();
  uint64_t v4 = type metadata accessor for BatchInteraction(0);
  if ((sub_23D005DD8() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = *(void **)(a2 + v5);
  if (!*(void *)(a1 + v5))
  {
    if (!v6) {
      goto LABEL_6;
    }
    return 0;
  }
  if (!v6) {
    return 0;
  }
  swift_retain();
  uint64_t v7 = (void *)swift_retain();
  char v8 = sub_23CFE4CE0(v7, v6);
  swift_release();
  swift_release();
  if ((v8 & 1) == 0) {
    return 0;
  }
LABEL_6:
  uint64_t v9 = *(int *)(v4 + 28);

  return sub_23CF051B8(a1 + v9, a2 + v9);
}

unint64_t sub_23CF05C30()
{
  unint64_t result = qword_268BCD448;
  if (!qword_268BCD448)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268BCD448);
  }
  return result;
}

uint64_t sub_23CF05C70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF05CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BatchInteraction.ContentPreview(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF05D3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23CF05DAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF05DF4(uint64_t a1)
{
  return sub_23CFE351C(a1);
}

void sub_23CF05DFC()
{
}

void sub_23CF05E14()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Feedback24NullableBatchInteraction__donation);
  *(void *)(v1 + OBJC_IVAR____TtC8Feedback24NullableBatchInteraction__donation) = v2;
  id v4 = v2;
}

unint64_t sub_23CF05E54()
{
  unint64_t result = qword_268BCD478;
  if (!qword_268BCD478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD478);
  }
  return result;
}

_OWORD *sub_23CF05EA8(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  long long v2 = a1[1];
  long long v3 = a1[2];
  long long v4 = a1[3];
  *(_OWORD *)((char *)a2 + 57) = *(_OWORD *)((char *)a1 + 57);
  a2[2] = v3;
  a2[3] = v4;
  a2[1] = v2;
  return a2;
}

uint64_t type metadata accessor for BatchInteraction.ContentPreview.Err(uint64_t a1)
{
  return sub_23CF05EF0(a1, (uint64_t *)&unk_268BCD4B0);
}

uint64_t sub_23CF05EF0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF05F28(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_23CF05F80(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t *sub_23CF05FD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_23D0041B8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_23D004058();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23CF06128(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_23D0041B8();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_23D004058();
  }
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void *sub_23CF061B4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_23D0041B8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_23D004058();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23CF062C0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_23CF0148C((uint64_t)a1, type metadata accessor for BatchInteraction.ContentPreview.Err);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_23D0041B8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_23D004058();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_23CF063F0(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_23D0041B8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_23D004058();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23CF064FC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_23CF0148C((uint64_t)a1, type metadata accessor for BatchInteraction.ContentPreview.Err);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_23D0041B8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_23D004058();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FBKEvaluation.Input(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for FBKEvaluation.Input(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_23CF0667C()
{
  uint64_t result = sub_23D004058();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_23D0041B8();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unint64_t destroy for NullableBatchInteraction.LoadDataError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8Feedback24NullableBatchInteractionC13LoadDataErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for NullableBatchInteraction.LoadDataError(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for NullableBatchInteraction.LoadDataError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NullableBatchInteraction.LoadDataError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NullableBatchInteraction.LoadDataError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_23CF0695C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_23CF06974(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for NullableBatchInteraction.LoadDataError()
{
  return &type metadata for NullableBatchInteraction.LoadDataError;
}

void *destroy for BatchInteraction.ContentPreview.DonationDecoded(uint64_t a1)
{
  return sub_23CEF05F8(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
}

uint64_t initializeWithCopy for BatchInteraction.ContentPreview.DonationDecoded(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  unsigned int v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  sub_23CEF00B0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(unsigned char *)(a2 + 72));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v13;
  return a1;
}

uint64_t assignWithCopy for BatchInteraction.ContentPreview.DonationDecoded(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  unsigned int v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  sub_23CEF00B0(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(unsigned char *)(a2 + 72));
  uint64_t v12 = *(void **)a1;
  char v13 = *(void **)(a1 + 8);
  uint64_t v14 = *(void **)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  char v21 = *(unsigned char *)(a1 + 72);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v23;
  sub_23CEF05F8(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for BatchInteraction.ContentPreview.DonationDecoded(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 64);
  char v4 = *(unsigned char *)(a2 + 72);
  unsigned int v5 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  char v14 = *(unsigned char *)(a1 + 72);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(void *)(a1 + 64) = v3;
  *(unsigned char *)(a1 + 72) = v4;
  sub_23CEF05F8(v5, v7, v6, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchInteraction.ContentPreview.DonationDecoded(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchInteraction.ContentPreview.DonationDecoded(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 72) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_23CF06CA4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 72);
}

uint64_t sub_23CF06CAC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 72) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BatchInteraction.ContentPreview.DonationDecoded()
{
  return &type metadata for BatchInteraction.ContentPreview.DonationDecoded;
}

uint64_t sub_23CF06CC4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 72);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), v4);
  return a1;
}

uint64_t sub_23CF06D1C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t getEnumTagSinglePayload for BatchInteraction.ContentPreview.Mode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BatchInteraction.ContentPreview.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CF06ED4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_23CF06EFC(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for BatchInteraction.ContentPreview.Mode()
{
  return &type metadata for BatchInteraction.ContentPreview.Mode;
}

unint64_t sub_23CF06F18()
{
  unint64_t result = qword_268BCD4C0;
  if (!qword_268BCD4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD4C0);
  }
  return result;
}

id sub_23CF06F6C(id result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 == 2)
  {
    id v5 = result;
    swift_bridgeObjectRetain();
    return v5;
  }
  else if (a4 <= 1u)
  {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_23CF06FD8(void *result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 >= 2u)
  {
    if (a4 != 2) {
      return result;
    }
  }
  return (void *)swift_bridgeObjectRelease();
}

uint64_t sub_23CF07028()
{
  return sub_23D0062F8();
}

uint64_t sub_23CF070C8()
{
  sub_23D0059D8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF07154()
{
  return sub_23D0062F8();
}

uint64_t sub_23CF071F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_23CF08E30();
  *a1 = result;
  return result;
}

void sub_23CF07220(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE300000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x6E616D6F77;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6E79676F72646E61;
    unint64_t v4 = 0xEB0000000073756FLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 7233901;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_23CF0727C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23CF07394(*a1, *a2);
}

uint64_t sub_23CF07288(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x49557466697753;
    }
    else {
      uint64_t v3 = 0x74694B707041;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x49557466697753;
      }
      else {
        uint64_t v6 = 0x74694B707041;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x74694B4955;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x74694B4955)
  {
LABEL_21:
    char v8 = sub_23D006218();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23CF07394(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E616D6F77;
    }
    else {
      uint64_t v3 = 0x6E79676F72646E61;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xEB0000000073756FLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E616D6F77;
      }
      else {
        uint64_t v6 = 0x6E79676F72646E61;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000;
      }
      else {
        unint64_t v7 = 0xEB0000000073756FLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE300000000000000;
    uint64_t v3 = 7233901;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE300000000000000;
  if (v3 != 7233901)
  {
LABEL_21:
    char v8 = sub_23D006218();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23CF074A8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 7107189;
  }
  else {
    uint64_t v3 = 0x54786F62646E6173;
  }
  if (v2) {
    unint64_t v4 = 0xEC0000006E656B6FLL;
  }
  else {
    unint64_t v4 = 0xE300000000000000;
  }
  if (a2) {
    uint64_t v5 = 7107189;
  }
  else {
    uint64_t v5 = 0x54786F62646E6173;
  }
  if (a2) {
    unint64_t v6 = 0xE300000000000000;
  }
  else {
    unint64_t v6 = 0xEC0000006E656B6FLL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_23D006218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_23CF07550(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x800000023D00F8A0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000019;
      unint64_t v6 = "Failed to Submit Feedback";
      goto LABEL_9;
    case 2:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v6 = "Repeated Evaluation";
      goto LABEL_9;
    case 3:
      unint64_t v5 = 0xD000000000000043;
      unint64_t v6 = "Unable to convert between FBKSEvaluation and FBKEvaluation.Response";
      goto LABEL_9;
    case 4:
      unint64_t v5 = 0x6C75736572206F4ELL;
      unint64_t v3 = 0xEA00000000007374;
      break;
    case 5:
      unint64_t v5 = 0xD00000000000002CLL;
      unint64_t v6 = "Form completed without an FBKSEvaluation set";
      goto LABEL_9;
    case 6:
      unint64_t v5 = 0xD00000000000002ELL;
      unint64_t v6 = "Operations already in-flight. Try again later.";
      goto LABEL_9;
    case 7:
      unint64_t v5 = 0xD000000000000025;
      unint64_t v6 = "Invalid FBKEvaluationController state";
LABEL_9:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x800000023D00F8A0;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000019;
      char v8 = "Failed to Submit Feedback";
      goto LABEL_18;
    case 2:
      unint64_t v2 = 0xD000000000000013;
      char v8 = "Repeated Evaluation";
      goto LABEL_18;
    case 3:
      unint64_t v2 = 0xD000000000000043;
      char v8 = "Unable to convert between FBKSEvaluation and FBKEvaluation.Response";
      goto LABEL_18;
    case 4:
      unint64_t v2 = 0x6C75736572206F4ELL;
      unint64_t v7 = 0xEA00000000007374;
      break;
    case 5:
      unint64_t v2 = 0xD00000000000002CLL;
      char v8 = "Form completed without an FBKSEvaluation set";
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xD00000000000002ELL;
      char v8 = "Operations already in-flight. Try again later.";
      goto LABEL_18;
    case 7:
      unint64_t v2 = 0xD000000000000025;
      char v8 = "Invalid FBKEvaluationController state";
LABEL_18:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_23D006218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_23CF07764(char a1)
{
  uint64_t result = 0x6C6559696A6F6D65;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74736572696166;
      break;
    case 2:
      uint64_t result = 0x696146746867696CLL;
      break;
    case 3:
      uint64_t result = 1919508838;
      break;
    case 4:
      uint64_t result = 0x64654D746867696CLL;
      break;
    case 5:
      uint64_t result = 0x6D756964656DLL;
      break;
    case 6:
      uint64_t result = 0x61446D756964656DLL;
      break;
    case 7:
      uint64_t result = 1802658148;
      break;
    case 8:
      uint64_t result = 0x6B72614470656564;
      break;
    case 9:
      uint64_t result = 0x7473656B726164;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23CF078A4()
{
  char v1 = *v0;
  sub_23D0062C8();
  sub_23CF07764(v1);
  sub_23D0059D8();
  swift_bridgeObjectRelease();
  return sub_23D0062F8();
}

uint64_t sub_23CF07908()
{
  sub_23CF07764(*v0);
  sub_23D0059D8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF0795C()
{
  char v1 = *v0;
  sub_23D0062C8();
  sub_23CF07764(v1);
  sub_23D0059D8();
  swift_bridgeObjectRelease();
  return sub_23D0062F8();
}

uint64_t sub_23CF079BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_23CF08E7C();
  *a1 = result;
  return result;
}

uint64_t sub_23CF079EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_23CF07764(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23CF07A18(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_23CF07764(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_23CF07764(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_23D006218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23CF07AA4()
{
  return 0;
}

uint64_t sub_23CF07BB4(__int16 *a1, __int16 *a2)
{
  return sub_23CF08528(*a1, *a2);
}

uint64_t sub_23CF07BC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if ((a1[2] & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
      return sub_23CF08528(v3, *(void *)a2);
    }
    return 0;
  }
  if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = a1[1];
  if (v3 == *(void *)a2 && v4 == *(void *)(a2 + 8)) {
    return 1;
  }
  else {
    return sub_23D006218();
  }
}

uint64_t sub_23CF07C18(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 9) = *(_OWORD *)((char *)a1 + 41);
  long long v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v8[0] = a2[2];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a2 + 41);
  return sub_23CF086C0((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_23CF07C74()
{
  uint64_t v1 = sub_23D004028();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_23D004038();
  char v6 = sub_23CF320A0((uint64_t)v4, v5);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6 & 1;
}

uint64_t sub_23CF07D5C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 96) = a1;
  char v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_268BCD4D0 + dword_268BCD4D0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 104) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_23CF07E18;
  return v6(v2 + 16, a2);
}

uint64_t sub_23CF07E18()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (!v0) {
    sub_23CF05EA8((_OWORD *)(v2 + 16), *(_OWORD **)(v2 + 96));
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

uint64_t sub_23CF07F28(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_23CF083CC(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_23D005A78();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_23D0059E8();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_23D0059E8();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_23D005A98();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_23CF227CC(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_23CF227CC((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  v13[2] = v27 + 1;
  uint64_t v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_23D0059E8();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_23D005A98();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_23CF227CC(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_23CF227CC((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    v13[2] = v39 + 1;
    uint64_t v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_23D006098();
  __break(1u);
LABEL_42:
  uint64_t result = sub_23D006098();
  __break(1u);
  return result;
}

uint64_t sub_23CF083CC(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_23D005A98();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_23CF227CC(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_23CF227CC((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_23D006098();
  __break(1u);
  return result;
}

uint64_t sub_23CF08528(__int16 a1, __int16 a2)
{
  char v2 = HIBYTE(a2);
  char v3 = HIBYTE(a1);
  int v4 = a1;
  if (!(_BYTE)a1)
  {
    unint64_t v6 = 0xE300000000000000;
    uint64_t v5 = 7233901;
    int v7 = a2;
    if ((_BYTE)a2) {
      goto LABEL_9;
    }
LABEL_18:
    unint64_t v9 = 0xE300000000000000;
    if (v5 != 7233901) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  if (a1 == 1) {
    uint64_t v5 = 0x6E616D6F77;
  }
  else {
    uint64_t v5 = 0x6E79676F72646E61;
  }
  if (v4 == 1) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xEB0000000073756FLL;
  }
  int v7 = a2;
  if (!(_BYTE)a2) {
    goto LABEL_18;
  }
LABEL_9:
  if (v7 == 1) {
    uint64_t v8 = 0x6E616D6F77;
  }
  else {
    uint64_t v8 = 0x6E79676F72646E61;
  }
  if (v7 == 1) {
    unint64_t v9 = 0xE500000000000000;
  }
  else {
    unint64_t v9 = 0xEB0000000073756FLL;
  }
  if (v5 != v8)
  {
LABEL_21:
    char v10 = sub_23D006218();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = 0;
    if ((v10 & 1) == 0) {
      return v11 & 1;
    }
    goto LABEL_22;
  }
LABEL_19:
  if (v6 != v9) {
    goto LABEL_21;
  }
  swift_bridgeObjectRelease_n();
LABEL_22:
  uint64_t v12 = sub_23CF07764(v3);
  uint64_t v14 = v13;
  if (v12 == sub_23CF07764(v2) && v14 == v15) {
    char v11 = 1;
  }
  else {
    char v11 = sub_23D006218();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_23CF086C0(uint64_t a1, uint64_t a2)
{
  sub_23CF05C30();
  if ((sub_23D005DD8() & 1) == 0) {
    return 0;
  }
  BOOL v4 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (v4 || (char v5 = sub_23D006218(), result = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void *)(a2 + 32);
    if (v7)
    {
      if (!v8) {
        return 0;
      }
      if (*(void *)(a1 + 24) != *(void *)(a2 + 24) || v7 != v8)
      {
        char v9 = sub_23D006218();
        uint64_t result = 0;
        if ((v9 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v8)
    {
      return 0;
    }
    int v10 = *(unsigned __int8 *)(a1 + 56);
    int v11 = *(unsigned __int8 *)(a2 + 56);
    if (v10 == 255)
    {
      if (v11 == 255) {
        return 1;
      }
    }
    else if (v11 != 255)
    {
      uint64_t v12 = *(void *)(a1 + 40);
      if (v10)
      {
        if ((v11 & 1) != 0
          && (v12 == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48) || (sub_23D006218() & 1) != 0))
        {
          return 1;
        }
      }
      else if (v11 & 1) == 0 && (sub_23CF08528(v12, *(void *)(a2 + 40)))
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenmojiDonationDecoder()
{
  return &type metadata for GenmojiDonationDecoder;
}

unint64_t sub_23CF087FC(uint64_t a1)
{
  uint64_t v82 = sub_23D003A78();
  uint64_t v2 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v81 = (char *)v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = sub_23CF18814(MEMORY[0x263F8EE78]);
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return result;
  }
  unint64_t v85 = result;
  uint64_t v6 = a1 + 32;
  v78[1] = a1;
  uint64_t v79 = (void (**)(char *, uint64_t))(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v84 = v5;
  uint64_t v80 = a1 + 32;
  while (2)
  {
    uint64_t v8 = (unint64_t *)(v6 + 32 * v7);
    unint64_t v9 = *v8;
    unint64_t v10 = v8[1] >> 14;
    int v11 = (void *)MEMORY[0x263F8EE78];
    if (v10 == *v8 >> 14) {
      goto LABEL_30;
    }
    uint64_t v83 = v7;
    unint64_t v12 = v8[3];
    swift_bridgeObjectRetain_n();
    unint64_t v13 = v9;
    unint64_t v14 = v9;
    unint64_t v15 = v9;
    uint64_t v88 = (void *)MEMORY[0x263F8EE78];
    unint64_t v86 = v12;
    do
    {
      unint64_t v18 = v10;
      if (sub_23D005E18() == 58 && v19 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v20 = sub_23D006218();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
        {
          unint64_t v13 = sub_23D005E08();
          goto LABEL_9;
        }
      }
      if (v14 >> 14 != v13 >> 14)
      {
        if (v13 >> 14 < v14 >> 14) {
          goto LABEL_48;
        }
        uint64_t v21 = sub_23D005E28();
        uint64_t v87 = v22;
        uint64_t v24 = v23;
        uint64_t v26 = v25;
        unint64_t v27 = v88;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v27 = sub_23CF227CC(0, v27[2] + 1, 1, v27);
        }
        unint64_t v29 = v27[2];
        unint64_t v28 = v27[3];
        uint64_t v30 = v27;
        if (v29 >= v28 >> 1) {
          uint64_t v30 = sub_23CF227CC((void *)(v28 > 1), v29 + 1, 1, v27);
        }
        uint64_t v88 = v30;
        v30[2] = v29 + 1;
        unint64_t v16 = &v30[4 * v29];
        uint64_t v17 = v87;
        v16[4] = v21;
        v16[5] = v17;
        v16[6] = v24;
        v16[7] = v26;
      }
      unint64_t v13 = sub_23D005E08();
      unint64_t v14 = v13;
      unint64_t v15 = v13;
LABEL_9:
      unint64_t v10 = v18;
    }
    while (v18 != v13 >> 14);
    if (v18 == v14 >> 14)
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = v83;
      uint64_t v5 = v84;
      uint64_t v6 = v80;
      int v11 = v88;
      goto LABEL_29;
    }
    if (v18 < v15 >> 14) {
      goto LABEL_48;
    }
    uint64_t v31 = sub_23D005E28();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    int v11 = v88;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v11 = sub_23CF227CC(0, v11[2] + 1, 1, v11);
    }
    uint64_t v38 = v84;
    uint64_t v6 = v80;
    unint64_t v40 = v11[2];
    unint64_t v39 = v11[3];
    if (v40 >= v39 >> 1) {
      int v11 = sub_23CF227CC((void *)(v39 > 1), v40 + 1, 1, v11);
    }
    v11[2] = v40 + 1;
    uint64_t v41 = &v11[4 * v40];
    v41[4] = v31;
    v41[5] = v33;
    v41[6] = v35;
    v41[7] = v37;
    uint64_t v7 = v83;
    uint64_t v5 = v38;
LABEL_29:
    swift_bridgeObjectRelease();
LABEL_30:
    if (v11[2] < 2uLL)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    uint64_t v42 = v11[4];
    uint64_t v43 = v11[5];
    uint64_t v44 = v11[6];
    uint64_t v45 = v11[7];
    swift_bridgeObjectRetain();
    uint64_t v46 = MEMORY[0x23ECF5430](v42, v43, v44, v45);
    uint64_t v47 = v11;
    uint64_t v49 = v48;
    swift_bridgeObjectRelease();
    if (v47[2] < 2uLL)
    {
      __break(1u);
      goto LABEL_46;
    }
    uint64_t v50 = v47[8];
    uint64_t v51 = v47[9];
    uint64_t v52 = v47[10];
    uint64_t v53 = v47[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v54 = MEMORY[0x23ECF5430](v50, v51, v52, v53);
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v89 = (void *)v54;
    uint64_t v90 = v56;
    uint64_t v57 = v81;
    sub_23D003A68();
    sub_23CEE8D00();
    uint64_t v58 = sub_23D005E78();
    uint64_t v60 = v59;
    (*v79)(v57, v82);
    swift_bridgeObjectRelease();
    uint64_t v61 = (void *)v85;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v89 = v61;
    unint64_t v64 = sub_23CF23884(v46, v49);
    uint64_t v65 = v61[2];
    BOOL v66 = (v63 & 1) == 0;
    uint64_t v67 = v65 + v66;
    if (__OFADD__(v65, v66))
    {
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      sub_23D006098();
      __break(1u);
      goto LABEL_49;
    }
    char v68 = v63;
    if (v61[3] >= v67)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_23CF69358();
      }
LABEL_38:
      uint64_t v71 = v89;
      unint64_t v85 = (unint64_t)v89;
      if (v68)
      {
        uint64_t v72 = (uint64_t *)(v89[7] + 16 * v64);
        swift_bridgeObjectRelease();
        *uint64_t v72 = v58;
        v72[1] = v60;
LABEL_42:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = v84;
LABEL_4:
        if (++v7 == v5)
        {
          swift_bridgeObjectRelease();
          return v85;
        }
        continue;
      }
      v89[(v64 >> 6) + 8] |= 1 << v64;
      uint64_t v73 = (uint64_t *)(v71[6] + 16 * v64);
      uint64_t *v73 = v46;
      v73[1] = v49;
      uint64_t v74 = (uint64_t *)(v71[7] + 16 * v64);
      *uint64_t v74 = v58;
      v74[1] = v60;
      uint64_t v75 = v71[2];
      BOOL v76 = __OFADD__(v75, 1);
      uint64_t v77 = v75 + 1;
      if (!v76)
      {
        v71[2] = v77;
        swift_bridgeObjectRetain();
        goto LABEL_42;
      }
      goto LABEL_47;
    }
    break;
  }
  sub_23CF67A14(v67, isUniquelyReferenced_nonNull_native);
  unint64_t v69 = sub_23CF23884(v46, v49);
  if ((v68 & 1) == (v70 & 1))
  {
    unint64_t v64 = v69;
    goto LABEL_38;
  }
LABEL_49:
  unint64_t result = sub_23D006268();
  __break(1u);
  return result;
}

uint64_t sub_23CF08E30()
{
  unint64_t v0 = sub_23D006118();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_23CF08E7C()
{
  unint64_t v0 = sub_23D006118();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_23CF08EC8(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = sub_23D004138();
  void v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD4A8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  uint64_t v4 = sub_23D0041B8();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23CF09034, 0, 0);
}

uint64_t sub_23CF09034()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  sub_23D004198();
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v4(v1, 1, v2))
  {
    sub_23CF097B0(v0[10]);
LABEL_8:
    sub_23CF09810();
    swift_allocError();
    *uint64_t v25 = 2;
    swift_willThrow();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    goto LABEL_10;
  }
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[10];
  uint64_t v10 = v0[7];
  uint64_t v9 = v0[8];
  uint64_t v11 = v0[6];
  uint64_t v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v73(v9, v8, v11);
  sub_23CF097B0(v8);
  sub_23D0040E8();
  uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v72(v9, v11);
  unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 88);
  int v13 = v12(v5, v6);
  unint64_t v14 = (uint64_t *)v0[14];
  uint64_t v15 = v0[11];
  uint64_t v16 = v0[12];
  if (v13 != *MEMORY[0x263F3C578])
  {
    (*(void (**)(void, uint64_t))(v16 + 8))(v0[14], v15);
    goto LABEL_8;
  }
  uint64_t v17 = v12;
  char v68 = *(void (**)(void, uint64_t))(v16 + 96);
  v68(v0[14], v15);
  uint64_t v19 = *v14;
  unint64_t v18 = v14[1];
  id v20 = objc_allocWithZone(MEMORY[0x263F827E8]);
  sub_23CF05F28(v19, v18);
  uint64_t v21 = (void *)sub_23D003CF8();
  id v22 = objc_msgSend(v20, sel_initWithData_, v21);
  sub_23CF05F80(v19, v18);

  if (!v22)
  {
    type metadata accessor for BatchInteraction.ContentPreview.Err(0);
    sub_23CF09864();
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
LABEL_28:
    sub_23CF05F80(v19, v18);
    goto LABEL_9;
  }
  char v70 = v22;
  uint64_t v71 = v19;
  unint64_t v69 = v18;
  uint64_t v23 = v0[9];
  uint64_t v24 = v0[6];
  sub_23D004178();
  if (v4(v23, 1, v24))
  {
    sub_23CF097B0(v0[9]);
    unint64_t v18 = v69;
LABEL_27:
    sub_23CF09810();
    swift_allocError();
    *uint64_t v59 = 1;
    swift_willThrow();

    goto LABEL_28;
  }
  uint64_t v28 = v0[13];
  uint64_t v29 = v0[11];
  uint64_t v31 = v0[8];
  uint64_t v30 = v0[9];
  uint64_t v32 = v0[6];
  v73(v31, v30, v32);
  sub_23CF097B0(v30);
  sub_23D0040E8();
  v72(v31, v32);
  int v33 = v17(v28, v29);
  uint64_t v34 = (uint64_t *)v0[13];
  uint64_t v19 = v71;
  if (v33 != *MEMORY[0x263F3C558])
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    unint64_t v18 = v69;
    goto LABEL_27;
  }
  v68(v0[13], v0[11]);
  uint64_t v36 = *v34;
  unint64_t v35 = v34[1];
  v0[2] = 10;
  v0[3] = 0xE100000000000000;
  uint64_t v37 = swift_task_alloc();
  *(void *)(v37 + 16) = v0 + 2;
  swift_bridgeObjectRetain();
  uint64_t v38 = (void *)sub_23CF07F28(0x7FFFFFFFFFFFFFFFLL, 1, sub_23CF098BC, v37, v36, v35);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (!v38[2])
  {
    swift_bridgeObjectRelease();
    sub_23CF09810();
    swift_allocError();
    *uint64_t v61 = 0;
    swift_willThrow();

    sub_23CF05F80(v71, v69);
    goto LABEL_9;
  }
  uint64_t v39 = v38[4];
  uint64_t v40 = v38[5];
  uint64_t v41 = v38[6];
  uint64_t v42 = v38[7];
  swift_bridgeObjectRetain();
  id v43 = v70;
  uint64_t v44 = MEMORY[0x23ECF5430](v39, v40, v41, v42);
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  id v47 = v43;
  swift_bridgeObjectRetain();
  unint64_t v48 = sub_23CF087FC((uint64_t)v38);
  swift_bridgeObjectRelease();
  uint64_t v74 = v46;
  uint64_t v75 = v44;
  if (!*(void *)(v48 + 16)) {
    goto LABEL_29;
  }
  sub_23CF23884(0x7265646E6567, 0xE600000000000000);
  if (v49)
  {
    swift_bridgeObjectRetain();
    unint64_t v50 = sub_23D006118();
    swift_bridgeObjectRelease();
    if (v50 <= 2)
    {
      if (!*(void *)(v48 + 16)) {
        goto LABEL_29;
      }
      sub_23CF23884(0x6E6F74206E696B73, 0xE900000000000065);
      if (v51)
      {
        swift_bridgeObjectRetain();
        unsigned __int8 v52 = sub_23CF08E7C();
        if (v52 != 10)
        {
          uint64_t v56 = 0;
          unsigned int v58 = 0;
          unint64_t v57 = v50 | ((unint64_t)v52 << 8);
          if (!*(void *)(v48 + 16)) {
            goto LABEL_35;
          }
          goto LABEL_32;
        }
      }
    }
  }
  if (*(void *)(v48 + 16))
  {
    unint64_t v53 = sub_23CF23884(0x5555736F746F6870, 0xEA00000000004449);
    if (v54)
    {
      uint64_t v55 = (unint64_t *)(*(void *)(v48 + 56) + 16 * v53);
      unint64_t v57 = *v55;
      uint64_t v56 = v55[1];
      swift_bridgeObjectRetain();
      unsigned int v58 = 1;
      if (!*(void *)(v48 + 16)) {
        goto LABEL_35;
      }
    }
    else
    {
      unint64_t v57 = 0;
      uint64_t v56 = 0;
      unsigned int v58 = 255;
      if (!*(void *)(v48 + 16)) {
        goto LABEL_35;
      }
    }
LABEL_32:
    unint64_t v62 = sub_23CF23884(0xD000000000000016, 0x800000023D0101E0);
    if (v63)
    {
      unint64_t v64 = (uint64_t *)(*(void *)(v48 + 56) + 16 * v62);
      uint64_t v60 = v64[1];
      uint64_t v67 = *v64;
      swift_bridgeObjectRetain();
      goto LABEL_36;
    }
LABEL_35:
    uint64_t v67 = 0;
    uint64_t v60 = 0;
    goto LABEL_36;
  }
LABEL_29:
  uint64_t v56 = 0;
  unint64_t v57 = 0;
  uint64_t v67 = 0;
  uint64_t v60 = 0;
  unsigned int v58 = 255;
LABEL_36:
  uint64_t v65 = v0[4];

  sub_23CF05F80(v71, v69);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v66 = v47;
  swift_bridgeObjectRetain();
  sub_23CEF0204(v57, v56, v58);
  swift_bridgeObjectRelease_n();

  swift_bridgeObjectRelease();
  sub_23CEF0740(v57, v56, v58);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v65 = v47;
  *(void *)(v65 + 8) = v75;
  *(void *)(v65 + 16) = v74;
  *(void *)(v65 + 24) = v67;
  *(void *)(v65 + 32) = v60;
  *(void *)(v65 + 40) = v57;
  *(void *)(v65 + 48) = v56;
  *(void *)(v65 + 56) = v58;
  *(void *)(v65 + 64) = 0;
  *(unsigned char *)(v65 + 72) = 2;
  uint64_t v26 = (uint64_t (*)(void))v0[1];
LABEL_10:
  return v26();
}

uint64_t sub_23CF097B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD4A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23CF09810()
{
  unint64_t result = qword_268BCD4D8;
  if (!qword_268BCD4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD4D8);
  }
  return result;
}

unint64_t sub_23CF09864()
{
  unint64_t result = qword_268BCD4A0;
  if (!qword_268BCD4A0)
  {
    type metadata accessor for BatchInteraction.ContentPreview.Err(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD4A0);
  }
  return result;
}

uint64_t sub_23CF098BC(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_23D006218() & 1;
  }
}

uint64_t sub_23CF09914()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_23CF0994C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

ValueMetadata *type metadata accessor for GenmojiDonationDecoder.Err()
{
  return &type metadata for GenmojiDonationDecoder.Err;
}

uint64_t destroy for GenmojiDonationDecoder.Result(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 != 255)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    return sub_23CEF0758(v4, v5, v3 & 1);
  }
  return result;
}

uint64_t initializeWithCopy for GenmojiDonationDecoder.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  int v7 = *(unsigned __int8 *)(a2 + 56);
  id v8 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  }
  else
  {
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    sub_23CEF021C(v10, v9, v7 & 1);
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v9;
    *(unsigned char *)(a1 + 56) = v7 & 1;
  }
  return a1;
}

uint64_t assignWithCopy for GenmojiDonationDecoder.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v7 = (long long *)(a1 + 40);
  id v8 = (long long *)(a2 + 40);
  int v9 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v9 == 255)
    {
      long long v11 = *v8;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *int v7 = v11;
    }
    else
    {
      char v18 = v9 & 1;
      uint64_t v20 = *(void *)(a2 + 40);
      uint64_t v19 = *(void *)(a2 + 48);
      sub_23CEF021C(v20, v19, v9 & 1);
      *(void *)(a1 + 40) = v20;
      *(void *)(a1 + 48) = v19;
      *(unsigned char *)(a1 + 56) = v18;
    }
  }
  else if (v9 == 255)
  {
    sub_23CF09BB4(a1 + 40);
    char v10 = *(unsigned char *)(a2 + 56);
    *int v7 = *v8;
    *(unsigned char *)(a1 + 56) = v10;
  }
  else
  {
    char v12 = v9 & 1;
    uint64_t v14 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 48);
    sub_23CEF021C(v14, v13, v9 & 1);
    uint64_t v15 = *(void *)(a1 + 40);
    uint64_t v16 = *(void *)(a1 + 48);
    char v17 = *(unsigned char *)(a1 + 56);
    *(void *)(a1 + 40) = v14;
    *(void *)(a1 + 48) = v13;
    *(unsigned char *)(a1 + 56) = v12;
    sub_23CEF0758(v15, v16, v17);
  }
  return a1;
}

uint64_t sub_23CF09BB4(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GenmojiDonationDecoder.Result(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  int v7 = (_OWORD *)(a2 + 40);
  int v8 = *(unsigned __int8 *)(a1 + 56);
  if (v8 != 255)
  {
    int v9 = *(unsigned __int8 *)(a2 + 56);
    if (v9 != 255)
    {
      uint64_t v10 = *(void *)(a1 + 40);
      uint64_t v11 = *(void *)(a1 + 48);
      *(_OWORD *)(a1 + 40) = *v7;
      *(unsigned char *)(a1 + 56) = v9 & 1;
      sub_23CEF0758(v10, v11, v8 & 1);
      return a1;
    }
    sub_23CF09BB4(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenmojiDonationDecoder.Result(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenmojiDonationDecoder.Result(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenmojiDonationDecoder.Result()
{
  return &type metadata for GenmojiDonationDecoder.Result;
}

uint64_t destroy for GenmojiDonationDecoder.Result.Person(uint64_t a1)
{
  return sub_23CEF0758(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8Feedback22GenmojiDonationDecoderV6ResultV6PersonOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_23CEF021C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for GenmojiDonationDecoder.Result.Person(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_23CEF021C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_23CEF0758(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for GenmojiDonationDecoder.Result.Person(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_23CEF0758(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenmojiDonationDecoder.Result.Person(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GenmojiDonationDecoder.Result.Person(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_23CF09F04(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_23CF09F0C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for GenmojiDonationDecoder.Result.Person()
{
  return &type metadata for GenmojiDonationDecoder.Result.Person;
}

unint64_t sub_23CF09F2C()
{
  unint64_t result = qword_268BCD4E0;
  if (!qword_268BCD4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD4E0);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for GenmojiDonationDecoder.Result.Person.Generic(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 65282 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65282 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65282;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GenmojiDonationDecoder.Result.Person.Generic(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CF0A0ECLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenmojiDonationDecoder.Result.Person.Generic()
{
  return &type metadata for GenmojiDonationDecoder.Result.Person.Generic;
}

uint64_t getEnumTagSinglePayload for GenmojiDonationDecoder.Result.Person.Generic.SkinTone(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for GenmojiDonationDecoder.Result.Person.Generic.SkinTone(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CF0A280);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenmojiDonationDecoder.Result.Person.Generic.SkinTone()
{
  return &type metadata for GenmojiDonationDecoder.Result.Person.Generic.SkinTone;
}

unsigned char *_s8Feedback22GenmojiDonationDecoderV6ResultV6PersonO7GenericV6GenderOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CF0A384);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenmojiDonationDecoder.Result.Person.Generic.Gender()
{
  return &type metadata for GenmojiDonationDecoder.Result.Person.Generic.Gender;
}

unint64_t sub_23CF0A3C0()
{
  unint64_t result = qword_268BCD4E8;
  if (!qword_268BCD4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD4E8);
  }
  return result;
}

unint64_t sub_23CF0A418()
{
  unint64_t result = qword_268BCD4F0[0];
  if (!qword_268BCD4F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268BCD4F0);
  }
  return result;
}

uint64_t sub_23CF0A474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_23CF0A488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_23CF0A49C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_23CF0A4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_23CF0A4B8()
{
  uint64_t result = type metadata accessor for BatchInteraction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_23CF0A574(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    unsigned int v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_23D003DB8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    int v8 = (int *)type metadata accessor for BatchInteraction(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = *(void **)((char *)a2 + v9);
    *(void *)((char *)v4 + v9) = v10;
    *(void *)((char *)v4 + v8[6]) = *(void *)((char *)a2 + v8[6]);
    uint64_t v11 = v8[7];
    char v12 = (void *)((char *)v4 + v11);
    uint64_t v13 = (void **)((char *)a2 + v11);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    id v14 = v10;
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v16 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v17 = *(void *)(v16 - 8);
    char v18 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v17 + 48);
    int v19 = v18(v13, 1, v16);
    if (EnumCaseMultiPayload == 1)
    {
      if (v19)
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v25 = *v13;
            *char v12 = *v13;
            id v26 = v25;
            break;
          case 3u:
            unint64_t v27 = *v13;
            uint64_t v28 = v13[1];
            *char v12 = *v13;
            v12[1] = v28;
            v12[2] = v13[2];
            id v29 = v27;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v30 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v30 - 8) + 16))(v12, v13, v30);
            break;
          case 5u:
            uint64_t v81 = v13[1];
            uint64_t v84 = *v13;
            uint64_t v75 = (uint64_t)v13[3];
            uint64_t v78 = v13[2];
            uint64_t v71 = (uint64_t)v13[5];
            uint64_t v72 = (uint64_t)v13[4];
            unint64_t v69 = v13[7];
            uint64_t v70 = (uint64_t)v13[6];
            uint64_t v87 = (uint64_t)v13[8];
            char v90 = *((unsigned char *)v13 + 72);
            sub_23CEF00B0((uint64_t)*v13, v81, v78, v75, v72, v71, v70, v69, v87, v90);
            *char v12 = v84;
            v12[1] = v81;
            v12[2] = v78;
            v12[3] = v75;
            v12[4] = v72;
            v12[5] = v71;
            v12[6] = v70;
            v12[7] = v69;
            v12[8] = v87;
            *((unsigned char *)v12 + 72) = v90;
            break;
          default:
            uint64_t v23 = v13[1];
            *char v12 = *v13;
            v12[1] = v23;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
      }
      uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v32 = (void *)((char *)v12 + v31);
      int v33 = (void **)((char *)v13 + v31);
      if (v18(v33, 1, v16))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            unint64_t v48 = *v33;
            *uint64_t v32 = *v33;
            id v49 = v48;
            break;
          case 3u:
            unint64_t v50 = *v33;
            char v51 = v33[1];
            *uint64_t v32 = *v33;
            v32[1] = v51;
            v32[2] = v33[2];
            id v52 = v50;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v53 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v53 - 8) + 16))(v32, v33, v53);
            break;
          case 5u:
            uint64_t v54 = (uint64_t)*v33;
            uint64_t v55 = v33[2];
            uint64_t v89 = v55;
            uint64_t v92 = v33[1];
            uint64_t v56 = (uint64_t)v33[4];
            uint64_t v83 = v56;
            uint64_t v86 = (uint64_t)v33[3];
            uint64_t v57 = (uint64_t)v33[6];
            uint64_t v77 = v57;
            uint64_t v80 = (uint64_t)v33[5];
            uint64_t v74 = v33[7];
            uint64_t v58 = (uint64_t)v33[8];
            char v59 = *((unsigned char *)v33 + 72);
            sub_23CEF00B0(v54, v92, v55, v86, v56, v80, v57, v74, v58, v59);
            *uint64_t v32 = v54;
            v32[1] = v92;
            v32[2] = v89;
            v32[3] = v86;
            v32[4] = v83;
            v32[5] = v80;
            v32[6] = v77;
            unsigned char v32[7] = v74;
            v32[8] = v58;
            *((unsigned char *)v32 + 72) = v59;
            break;
          default:
            unint64_t v35 = v33[1];
            *uint64_t v32 = *v33;
            v32[1] = v35;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v32, 0, 1, v16);
      }
    }
    else if (v19)
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v36 = *v13;
          *char v12 = *v13;
          id v37 = v36;
          break;
        case 3u:
          uint64_t v38 = *v13;
          uint64_t v39 = v13[1];
          *char v12 = *v13;
          v12[1] = v39;
          v12[2] = v13[2];
          id v40 = v38;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v41 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v41 - 8) + 16))(v12, v13, v41);
          break;
        case 5u:
          uint64_t v42 = (uint64_t)*v13;
          id v43 = v13[2];
          uint64_t v88 = v43;
          uint64_t v91 = v13[1];
          uint64_t v44 = (uint64_t)v13[4];
          uint64_t v82 = v44;
          uint64_t v85 = (uint64_t)v13[3];
          uint64_t v45 = (uint64_t)v13[6];
          uint64_t v76 = v45;
          uint64_t v79 = (uint64_t)v13[5];
          uint64_t v73 = v13[7];
          uint64_t v46 = (uint64_t)v13[8];
          char v47 = *((unsigned char *)v13 + 72);
          sub_23CEF00B0(v42, v91, v43, v85, v44, v79, v45, v73, v46, v47);
          *char v12 = v42;
          v12[1] = v91;
          v12[2] = v88;
          v12[3] = v85;
          v12[4] = v82;
          v12[5] = v79;
          v12[6] = v76;
          v12[7] = v73;
          v12[8] = v46;
          *((unsigned char *)v12 + 72) = v47;
          break;
        default:
          uint64_t v24 = v13[1];
          *char v12 = *v13;
          v12[1] = v24;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v61 = (void *)((char *)v4 + v60);
    unint64_t v62 = (void *)((char *)a2 + v60);
    uint64_t v63 = v62[1];
    *uint64_t v61 = *v62;
    v61[1] = v63;
    uint64_t v64 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    uint64_t v65 = (char *)v4 + v64;
    id v66 = (char *)a2 + v64;
    uint64_t v67 = *(void *)v66;
    LOBYTE(v66) = v66[8];
    *(void *)uint64_t v65 = v67;
    v65[8] = (char)v66;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23CF0ACE4(uint64_t a1)
{
  uint64_t v2 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v4 = a1 + *(int *)(v3 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v6 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  int v8 = v7(v4, 1, v6);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v11 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v4, v11);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v4, *(void **)(v4 + 8), *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(unsigned char *)(v4 + 72));
          break;
        default:
          break;
      }
    }
    v4 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v7(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else if (!v8)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
LABEL_7:
        swift_bridgeObjectRelease();
        break;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_12:
        uint64_t v9 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v4, v9);
        break;
      case 5u:
LABEL_13:
        sub_23CEF05F8(*(void **)v4, *(void **)(v4 + 8), *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(unsigned char *)(v4 + 72));
        break;
      default:
        break;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_23CF0B064(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v9;
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  uint64_t v10 = v7[7];
  uint64_t v11 = (void *)(a1 + v10);
  char v12 = (void **)(a2 + v10);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  id v13 = v9;
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v15 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v12, 1, v15);
  if (EnumCaseMultiPayload == 1)
  {
    if (v18)
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v23 = *v12;
          *uint64_t v11 = *v12;
          id v24 = v23;
          break;
        case 3u:
          uint64_t v25 = *v12;
          id v26 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v26;
          v11[2] = v12[2];
          id v27 = v25;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v28 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v28 - 8) + 16))(v11, v12, v28);
          break;
        case 5u:
          uint64_t v79 = v12[1];
          uint64_t v82 = *v12;
          uint64_t v73 = (uint64_t)v12[3];
          uint64_t v76 = v12[2];
          uint64_t v69 = (uint64_t)v12[5];
          uint64_t v70 = (uint64_t)v12[4];
          uint64_t v67 = v12[7];
          uint64_t v68 = (uint64_t)v12[6];
          uint64_t v85 = (uint64_t)v12[8];
          char v88 = *((unsigned char *)v12 + 72);
          sub_23CEF00B0((uint64_t)*v12, v79, v76, v73, v70, v69, v68, v67, v85, v88);
          *uint64_t v11 = v82;
          v11[1] = v79;
          v11[2] = v76;
          v11[3] = v73;
          v11[4] = v70;
          v11[5] = v69;
          v11[6] = v68;
          v11[7] = v67;
          v11[8] = v85;
          *((unsigned char *)v11 + 72) = v88;
          break;
        default:
          uint64_t v21 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v21;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
    }
    uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    uint64_t v30 = (void *)((char *)v11 + v29);
    uint64_t v31 = (void **)((char *)v12 + v29);
    if (v17(v31, 1, v15))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v46 = *v31;
          *uint64_t v30 = *v31;
          id v47 = v46;
          break;
        case 3u:
          unint64_t v48 = *v31;
          id v49 = v31[1];
          *uint64_t v30 = *v31;
          v30[1] = v49;
          v30[2] = v31[2];
          id v50 = v48;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v51 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v51 - 8) + 16))(v30, v31, v51);
          break;
        case 5u:
          uint64_t v52 = (uint64_t)*v31;
          uint64_t v53 = v31[2];
          uint64_t v87 = v53;
          char v90 = v31[1];
          uint64_t v54 = (uint64_t)v31[4];
          uint64_t v81 = v54;
          uint64_t v84 = (uint64_t)v31[3];
          uint64_t v55 = (uint64_t)v31[6];
          uint64_t v75 = v55;
          uint64_t v78 = (uint64_t)v31[5];
          uint64_t v72 = v31[7];
          uint64_t v56 = (uint64_t)v31[8];
          char v57 = *((unsigned char *)v31 + 72);
          sub_23CEF00B0(v52, v90, v53, v84, v54, v78, v55, v72, v56, v57);
          *uint64_t v30 = v52;
          v30[1] = v90;
          v30[2] = v87;
          v30[3] = v84;
          v30[4] = v81;
          v30[5] = v78;
          v30[6] = v75;
          unsigned char v30[7] = v72;
          v30[8] = v56;
          *((unsigned char *)v30 + 72) = v57;
          break;
        default:
          int v33 = v31[1];
          *uint64_t v30 = *v31;
          v30[1] = v33;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v30, 0, 1, v15);
    }
  }
  else if (v18)
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v11, v12, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v34 = *v12;
        *uint64_t v11 = *v12;
        id v35 = v34;
        break;
      case 3u:
        uint64_t v36 = *v12;
        id v37 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v37;
        v11[2] = v12[2];
        id v38 = v36;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v39 = sub_23D003B88();
        (*(void (**)(void *, void **, uint64_t))(*(void *)(v39 - 8) + 16))(v11, v12, v39);
        break;
      case 5u:
        uint64_t v40 = (uint64_t)*v12;
        uint64_t v41 = v12[2];
        uint64_t v86 = v41;
        uint64_t v89 = v12[1];
        uint64_t v42 = (uint64_t)v12[4];
        uint64_t v80 = v42;
        uint64_t v83 = (uint64_t)v12[3];
        uint64_t v43 = (uint64_t)v12[6];
        uint64_t v74 = v43;
        uint64_t v77 = (uint64_t)v12[5];
        uint64_t v71 = v12[7];
        uint64_t v44 = (uint64_t)v12[8];
        char v45 = *((unsigned char *)v12 + 72);
        sub_23CEF00B0(v40, v89, v41, v83, v42, v77, v43, v71, v44, v45);
        *uint64_t v11 = v40;
        v11[1] = v89;
        v11[2] = v86;
        v11[3] = v83;
        v11[4] = v80;
        v11[5] = v77;
        v11[6] = v74;
        v11[7] = v71;
        v11[8] = v44;
        *((unsigned char *)v11 + 72) = v45;
        break;
      default:
        uint64_t v22 = v12[1];
        *uint64_t v11 = *v12;
        v11[1] = v22;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v58 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  char v59 = (void *)(a1 + v58);
  uint64_t v60 = (void *)(a2 + v58);
  uint64_t v61 = v60[1];
  *char v59 = *v60;
  v59[1] = v61;
  uint64_t v62 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v63 = a1 + v62;
  uint64_t v64 = (uint64_t *)(a2 + v62);
  uint64_t v65 = *v64;
  LOBYTE(v64) = *((unsigned char *)v64 + 8);
  *(void *)uint64_t v63 = v65;
  *(unsigned char *)(v63 + 8) = (_BYTE)v64;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_23CF0B788(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = *(void **)(a2 + v8);
  uint64_t v10 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = v9;
  id v11 = v9;

  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v12 = v7[7];
    id v13 = (void *)(a1 + v12);
    id v14 = (void **)(a2 + v12);
    sub_23CF11598(a1 + v12, type metadata accessor for BatchInteraction.ContentPolarity);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v16 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v17 = *(void *)(v16 - 8);
    int v18 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v17 + 48);
    int v19 = v18(v14, 1, v16);
    if (EnumCaseMultiPayload == 1)
    {
      if (v19)
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v22 = *v14;
            *id v13 = *v14;
            id v23 = v22;
            break;
          case 3u:
            id v24 = *v14;
            *id v13 = *v14;
            v13[1] = v14[1];
            v13[2] = v14[2];
            id v25 = v24;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v26 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v26 - 8) + 16))(v13, v14, v26);
            break;
          case 5u:
            uint64_t v74 = v14[1];
            uint64_t v77 = *v14;
            uint64_t v68 = (uint64_t)v14[3];
            uint64_t v71 = v14[2];
            uint64_t v64 = (uint64_t)v14[5];
            uint64_t v65 = (uint64_t)v14[4];
            uint64_t v62 = v14[7];
            uint64_t v63 = (uint64_t)v14[6];
            uint64_t v80 = (uint64_t)v14[8];
            char v83 = *((unsigned char *)v14 + 72);
            sub_23CEF00B0((uint64_t)*v14, v74, v71, v68, v65, v64, v63, v62, v80, v83);
            *id v13 = v77;
            v13[1] = v74;
            v13[2] = v71;
            v13[3] = v68;
            v13[4] = v65;
            v13[5] = v64;
            v13[6] = v63;
            v13[7] = v62;
            char v13[8] = v80;
            *((unsigned char *)v13 + 72) = v83;
            break;
          default:
            *id v13 = *v14;
            v13[1] = v14[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
      uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v28 = (void *)((char *)v13 + v27);
      uint64_t v29 = (void **)((char *)v14 + v27);
      if (v18(v29, 1, v16))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v42 = *v29;
            *uint64_t v28 = *v29;
            id v43 = v42;
            break;
          case 3u:
            uint64_t v44 = *v29;
            *uint64_t v28 = *v29;
            v28[1] = v29[1];
            v28[2] = v29[2];
            id v45 = v44;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v46 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v46 - 8) + 16))(v28, v29, v46);
            break;
          case 5u:
            uint64_t v47 = (uint64_t)*v29;
            unint64_t v48 = v29[2];
            uint64_t v82 = v48;
            uint64_t v85 = v29[1];
            uint64_t v49 = (uint64_t)v29[4];
            uint64_t v76 = v49;
            uint64_t v79 = (uint64_t)v29[3];
            uint64_t v50 = (uint64_t)v29[6];
            uint64_t v70 = v50;
            uint64_t v73 = (uint64_t)v29[5];
            uint64_t v67 = v29[7];
            uint64_t v51 = (uint64_t)v29[8];
            char v52 = *((unsigned char *)v29 + 72);
            sub_23CEF00B0(v47, v85, v48, v79, v49, v73, v50, v67, v51, v52);
            *uint64_t v28 = v47;
            v28[1] = v85;
            v28[2] = v82;
            v28[3] = v79;
            v28[4] = v76;
            v28[5] = v73;
            v28[6] = v70;
            v28[7] = v67;
            v28[8] = v51;
            *((unsigned char *)v28 + 72) = v52;
            break;
          default:
            *uint64_t v28 = *v29;
            v28[1] = v29[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v28, 0, 1, v16);
      }
    }
    else if (v19)
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v31 = *v14;
          *id v13 = *v14;
          id v32 = v31;
          break;
        case 3u:
          int v33 = *v14;
          *id v13 = *v14;
          v13[1] = v14[1];
          v13[2] = v14[2];
          id v34 = v33;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v35 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v35 - 8) + 16))(v13, v14, v35);
          break;
        case 5u:
          uint64_t v36 = (uint64_t)*v14;
          id v37 = v14[2];
          uint64_t v81 = v37;
          uint64_t v84 = v14[1];
          uint64_t v38 = (uint64_t)v14[4];
          uint64_t v75 = v38;
          uint64_t v78 = (uint64_t)v14[3];
          uint64_t v39 = (uint64_t)v14[6];
          uint64_t v69 = v39;
          uint64_t v72 = (uint64_t)v14[5];
          id v66 = v14[7];
          uint64_t v40 = (uint64_t)v14[8];
          char v41 = *((unsigned char *)v14 + 72);
          sub_23CEF00B0(v36, v84, v37, v78, v38, v72, v39, v66, v40, v41);
          *id v13 = v36;
          v13[1] = v84;
          v13[2] = v81;
          v13[3] = v78;
          v13[4] = v75;
          v13[5] = v72;
          v13[6] = v69;
          v13[7] = v66;
          char v13[8] = v40;
          *((unsigned char *)v13 + 72) = v41;
          break;
        default:
          *id v13 = *v14;
          v13[1] = v14[1];
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v53 = a3[10];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (void *)(a2 + v53);
  uint64_t v56 = v55[1];
  void *v54 = *v55;
  v54[1] = v56;
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = a3[12];
  uint64_t v58 = a1 + v57;
  char v59 = (uint64_t *)(a2 + v57);
  uint64_t v60 = *v59;
  LOBYTE(v59) = *((unsigned char *)v59 + 8);
  *(void *)uint64_t v58 = v60;
  *(unsigned char *)(v58 + 8) = (_BYTE)v59;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23CF0BF3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for BatchInteraction(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  uint64_t v8 = v7[7];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v12 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  if (EnumCaseMultiPayload == 1)
  {
    if (v15)
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v18 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v9, v10, v18);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(v13 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    if (v14(v22, 1, v12))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v24 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v21, v22, *(void *)(v13 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
    }
  }
  else if (v15)
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v19 = sub_23D003B88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v9, v10, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(v13 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  uint64_t v26 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  return a1;
}

uint64_t sub_23CF0C35C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);

  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v10 = v7[7];
    id v11 = (char *)(a1 + v10);
    uint64_t v12 = (char *)(a2 + v10);
    sub_23CF11598(a1 + v10, type metadata accessor for BatchInteraction.ContentPolarity);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v14 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
    int v17 = v16(v12, 1, v14);
    if (EnumCaseMultiPayload == 1)
    {
      if (v17)
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v20 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v11, v12, v20);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v11, v12, *(void *)(v15 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v23 = &v11[v22];
      uint64_t v24 = &v12[v22];
      if (v16(v24, 1, v14))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v26 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v23, v24, *(void *)(v15 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
      }
    }
    else if (v17)
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v21 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v11, v12, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(void *)(v15 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v27 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[12];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v31 = *v30;
  LOBYTE(v30) = *((unsigned char *)v30 + 8);
  *(void *)uint64_t v29 = v31;
  *(unsigned char *)(v29 + 8) = (_BYTE)v30;
  swift_release();
  return a1;
}

uint64_t sub_23CF0C7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF0C7F4);
}

uint64_t sub_23CF0C7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BatchInteraction(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_23CF0C8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF0C8C8);
}

uint64_t sub_23CF0C8C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for BatchInteraction(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for PrebuiltPreviewController()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_23CF0C99C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF0C9E0(uint64_t a1)
{
  char v2 = *(unsigned char *)(v1 + *(int *)(a1 + 48) + 8);
  uint64_t v3 = swift_retain();
  uint64_t v4 = sub_23CF39C80(v3, v2);
  swift_release();
  return v4;
}

uint64_t sub_23CF0CA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v3 + *(int *)(a1 + 44));
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = v5 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_23CF11708(v7, (uint64_t)v9);
      if (sub_23CF0CB24(v9, v3)) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      v7 += 40;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_23CF115F8(v9, a2);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_7:
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF0CB24(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v5 = type metadata accessor for PrebuiltPreviewController();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 24))(a2, *(unsigned __int8 *)(a2 + *(int *)(v5 + 36)), v3, v4) & 1;
}

double sub_23CF0CBBC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23CF0CA2C(a1, (uint64_t)v11);
  uint64_t v5 = v12;
  if (v12)
  {
    uint64_t v6 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v7 = *(unsigned __int8 *)(v2 + *(int *)(a1 + 36));
    uint64_t v8 = sub_23CF0C9E0(a1);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 32);
    *(void *)(a2 + 24) = swift_getAssociatedTypeWitness();
    *(void *)(a2 + 32) = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
    v9(v2, v7, v8, v5, v6);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    sub_23CEE8BB4((uint64_t)v11, &qword_268BCD658);
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_23CF0CCF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v27[1] = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD578);
  v27[0] = swift_allocBox();
  sub_23CF0C9E0(a1);
  uint64_t v6 = type metadata accessor for FullScreenPreviewController(0);
  uint64_t v7 = sub_23CF113C0(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
  sub_23D005758();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = *(void *)(a1 + 24);
  *(void *)(v9 + 16) = *(void *)(a1 + 16);
  *(void *)(v9 + 24) = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  *(void *)(v9 + ((v5 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v27[0];
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD580);
  sub_23D004D98();
  sub_23D004D98();
  uint64_t v30 = MEMORY[0x263F1B720];
  uint64_t v31 = v6;
  uint64_t v32 = MEMORY[0x263F1B718];
  unint64_t v33 = v7;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = v10;
  swift_getWitnessTable();
  uint64_t v11 = sub_23D005648();
  uint64_t v12 = type metadata accessor for FullScreenPreviewController.Content(255);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD588);
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = sub_23CF113C0(&qword_268BCD590, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController.Content);
  unint64_t v16 = sub_23CF1016C();
  uint64_t v30 = v11;
  uint64_t v31 = v12;
  uint64_t v32 = v13;
  unint64_t v33 = v14;
  uint64_t v34 = v15;
  unint64_t v35 = v16;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v30 = v11;
  uint64_t v31 = v12;
  uint64_t v32 = v13;
  unint64_t v33 = v14;
  uint64_t v34 = v15;
  unint64_t v35 = v16;
  uint64_t v18 = swift_getOpaqueTypeConformance2();
  uint64_t v30 = OpaqueTypeMetadata2;
  uint64_t v31 = v18;
  uint64_t v19 = swift_getOpaqueTypeMetadata2();
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_268BCE600);
  uint64_t v30 = OpaqueTypeMetadata2;
  uint64_t v31 = v18;
  uint64_t v21 = swift_getOpaqueTypeConformance2();
  unint64_t v22 = sub_23CF1020C();
  uint64_t v30 = v19;
  uint64_t v31 = v20;
  uint64_t v32 = v21;
  unint64_t v33 = v22;
  swift_getOpaqueTypeMetadata2();
  uint64_t v30 = v19;
  uint64_t v31 = v20;
  uint64_t v32 = v21;
  unint64_t v33 = v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = sub_23D0047B8();
  uint64_t v29 = v23;
  uint64_t v24 = sub_23D0047C8();
  uint64_t v25 = swift_getWitnessTable();
  sub_23CFBE07C(&v28, v24, v25);
  swift_release();
  uint64_t v28 = v30;
  uint64_t v29 = v31;
  sub_23CFBE07C(&v28, v24, v25);
  swift_release();
  return swift_release();
}

uint64_t sub_23CF0D190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v130 = a3;
  uint64_t v104 = a2;
  uint64_t v118 = a1;
  uint64_t v121 = a6;
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCE600);
  MEMORY[0x270FA5388](v129);
  uint64_t v120 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD5C0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v119 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_23D004728();
  uint64_t v114 = *(void *)(v115 - 8);
  uint64_t v116 = *(void *)(v114 + 64);
  MEMORY[0x270FA5388](v115);
  uint64_t v113 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for PrebuiltPreviewController();
  uint64_t v110 = *(void *)(v111 - 8);
  uint64_t v112 = *(void *)(v110 + 64);
  MEMORY[0x270FA5388](v111);
  uint64_t v109 = (char *)&v82 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD5C8);
  MEMORY[0x270FA5388](v13 - 8);
  unsigned __int8 v103 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD578);
  uint64_t v131 = *(void *)(v127 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v127);
  uint64_t v126 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v128 = (char *)&v82 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD580);
  uint64_t v124 = a4;
  sub_23D004D98();
  sub_23D004D98();
  uint64_t v18 = type metadata accessor for FullScreenPreviewController(255);
  uint64_t v117 = sub_23CF113C0(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
  uint64_t v136 = MEMORY[0x263F1B720];
  uint64_t v137 = v18;
  uint64_t v138 = MEMORY[0x263F1B718];
  unint64_t v139 = v117;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v145 = a5;
  uint64_t v123 = a5;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v143 = a5;
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v19 = sub_23D005648();
  uint64_t v98 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v84 = (char *)&v82 - v20;
  uint64_t v21 = type metadata accessor for FullScreenPreviewController.Content(255);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD588);
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = sub_23CF113C0(&qword_268BCD590, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController.Content);
  unint64_t v25 = sub_23CF1016C();
  uint64_t v136 = v19;
  uint64_t v137 = v21;
  uint64_t v92 = v19;
  uint64_t v88 = v21;
  uint64_t v138 = v22;
  unint64_t v139 = v23;
  uint64_t v93 = v22;
  uint64_t v91 = v23;
  uint64_t v140 = v24;
  unint64_t v141 = v25;
  uint64_t v90 = v24;
  unint64_t v89 = v25;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v97 = *(void *)(OpaqueTypeMetadata2 - 8);
  MEMORY[0x270FA5388](OpaqueTypeMetadata2);
  uint64_t v122 = (char *)&v82 - v27;
  uint64_t v136 = v19;
  uint64_t v137 = v21;
  uint64_t v138 = v22;
  unint64_t v139 = v23;
  uint64_t v140 = v24;
  unint64_t v141 = v25;
  uint64_t v28 = swift_getOpaqueTypeConformance2();
  uint64_t v136 = OpaqueTypeMetadata2;
  uint64_t v137 = v28;
  uint64_t v29 = OpaqueTypeMetadata2;
  uint64_t v94 = OpaqueTypeMetadata2;
  uint64_t v30 = v28;
  uint64_t v95 = v28;
  uint64_t v31 = swift_getOpaqueTypeMetadata2();
  uint64_t v102 = v31;
  uint64_t v108 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v125 = (char *)&v82 - v32;
  uint64_t v136 = v29;
  uint64_t v137 = v30;
  uint64_t v33 = swift_getOpaqueTypeConformance2();
  uint64_t v101 = v33;
  unint64_t v100 = sub_23CF1020C();
  uint64_t v136 = v31;
  uint64_t v137 = v129;
  uint64_t v138 = v33;
  unint64_t v139 = v100;
  uint64_t v105 = MEMORY[0x263F1B260];
  uint64_t v106 = swift_getOpaqueTypeMetadata2();
  uint64_t v107 = *(void *)(v106 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v106);
  uint64_t v96 = (char *)&v82 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  BOOL v99 = (char *)&v82 - v36;
  uint64_t v132 = v124;
  uint64_t v133 = v123;
  uint64_t v37 = v104;
  uint64_t v134 = v104;
  uint64_t v135 = v130;
  sub_23D004C58();
  sub_23D005638();
  uint64_t v87 = swift_projectBox();
  uint64_t v38 = v131;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v131 + 16);
  uint64_t v85 = v131 + 16;
  uint64_t v86 = v39;
  uint64_t v40 = v126;
  uint64_t v41 = v127;
  v39(v126, v87, v127);
  uint64_t v42 = v128;
  sub_23D005748();
  id v43 = *(void (**)(char *, uint64_t))(v38 + 8);
  v43(v40, v41);
  char v83 = v43;
  uint64_t v131 = v38 + 8;
  swift_getKeyPath();
  uint64_t v44 = (uint64_t)v103;
  sub_23D005768();
  swift_release();
  v43(v42, v41);
  uint64_t v45 = v110;
  uint64_t v46 = v109;
  uint64_t v47 = v111;
  (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v109, v37, v111);
  uint64_t v48 = v114;
  uint64_t v49 = v113;
  uint64_t v50 = v115;
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v113, v118, v115);
  unint64_t v51 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v52 = v48;
  unint64_t v53 = (v112 + *(unsigned __int8 *)(v48 + 80) + v51) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v123;
  *(void *)(v54 + 16) = v124;
  *(void *)(v54 + 24) = v55;
  (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v54 + v51, v46, v47);
  (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v54 + v53, v49, v50);
  swift_checkMetadataState();
  uint64_t v56 = v92;
  uint64_t v57 = v84;
  sub_23D005468();
  swift_release();
  sub_23CEE8BB4(v44, &qword_268BCD5C8);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v57, v56);
  uint64_t v58 = v126;
  uint64_t v59 = v87;
  uint64_t v60 = v127;
  uint64_t v61 = v86;
  v86(v126, v87, v127);
  uint64_t v62 = v128;
  sub_23D005748();
  uint64_t v63 = v58;
  uint64_t v64 = v83;
  v83(v63, v60);
  swift_getKeyPath();
  uint64_t v65 = (uint64_t)v119;
  sub_23D005768();
  swift_release();
  v64(v62, v60);
  uint64_t v66 = v94;
  uint64_t v67 = v122;
  sub_23D005238();
  sub_23CEE8BB4(v65, &qword_268BCD5C0);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v67, v66);
  v61(v62, v59, v60);
  sub_23D005738();
  v64(v62, v60);
  uint64_t v68 = v136;
  swift_getKeyPath();
  uint64_t v136 = v68;
  sub_23D003DD8();
  swift_release();
  uint64_t v69 = v68 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__quickLookPreviewURL;
  swift_beginAccess();
  uint64_t v70 = v120;
  sub_23CEE82CC(v69, v120, (uint64_t *)&unk_268BCE600);
  swift_release();
  swift_retain();
  uint64_t v71 = v96;
  uint64_t v72 = v102;
  uint64_t v73 = v129;
  uint64_t v74 = v101;
  unint64_t v75 = v100;
  uint64_t v76 = v125;
  sub_23D0054C8();
  swift_release();
  sub_23CEE8BB4(v70, (uint64_t *)&unk_268BCE600);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v76, v72);
  uint64_t v136 = v72;
  uint64_t v137 = v73;
  uint64_t v138 = v74;
  unint64_t v139 = v75;
  uint64_t v77 = swift_getOpaqueTypeConformance2();
  uint64_t v78 = v99;
  uint64_t v79 = v106;
  sub_23CFBE07C(v71, v106, v77);
  uint64_t v80 = *(void (**)(char *, uint64_t))(v107 + 8);
  v80(v71, v79);
  sub_23CFBE07C(v78, v79, v77);
  return ((uint64_t (*)(char *, uint64_t))v80)(v78, v79);
}

uint64_t sub_23CF0DFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v87 = a5;
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD578);
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  unint64_t v75 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD580);
  uint64_t v80 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v79 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v72 - v16;
  uint64_t v81 = v18;
  uint64_t v19 = sub_23D004D98();
  uint64_t v84 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  char v83 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v82 = (char *)&v72 - v22;
  uint64_t v86 = sub_23D004D98();
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v24 = (char *)&v72 - v23;
  uint64_t v25 = type metadata accessor for PrebuiltPreviewController();
  sub_23CF0CA2C(v25, (uint64_t)&v99);
  uint64_t v26 = v102;
  uint64_t v27 = sub_23CEE8BB4((uint64_t)&v99, &qword_268BCD658);
  if (v26)
  {
    uint64_t v73 = v19;
    uint64_t v74 = v24;
    uint64_t v72 = a4;
    sub_23CF0CBBC(v25, (uint64_t)&v90);
    if (v92)
    {
      sub_23CF115F8(&v90, (uint64_t)&v99);
      uint64_t v28 = __swift_project_boxed_opaque_existential_1(&v99, v102);
      MEMORY[0x270FA5388](v28);
      (*(void (**)(char *))(v30 + 16))((char *)&v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
      *(void *)&long long v90 = sub_23D005658();
      uint64_t v31 = swift_projectBox();
      uint64_t v32 = v77;
      uint64_t v33 = v75;
      uint64_t v34 = v78;
      (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v75, v31, v78);
      sub_23D005738();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
      uint64_t v35 = type metadata accessor for FullScreenPreviewController(0);
      uint64_t v36 = sub_23CF113C0(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
      uint64_t v37 = (uint64_t)v79;
      uint64_t v38 = MEMORY[0x263F1B720];
      uint64_t v39 = MEMORY[0x263F1B718];
      sub_23D0052B8();
      swift_release();
      swift_release();
      *(void *)&long long v90 = v38;
      *((void *)&v90 + 1) = v35;
      uint64_t v91 = v39;
      uint64_t v92 = v36;
      uint64_t v40 = v39;
      swift_getOpaqueTypeConformance2();
      uint64_t v41 = v82;
      uint64_t v42 = v81;
      uint64_t v43 = v72;
      sub_23CFBE27C(v37, v81);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v37, v42);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v99);
    }
    else
    {
      uint64_t v52 = sub_23CEE8BB4((uint64_t)&v90, &qword_268BCD650);
      (*(void (**)(uint64_t))(a1 + *(int *)(v25 + 40)))(v52);
      unint64_t v53 = v17;
      uint64_t v43 = v72;
      sub_23CFBE07C(v15, a3, v72);
      uint64_t v54 = *(void (**)(char *, uint64_t))(v12 + 8);
      v54(v15, a3);
      sub_23CFBE07C(v53, a3, v43);
      uint64_t v55 = type metadata accessor for FullScreenPreviewController(255);
      uint64_t v56 = sub_23CF113C0(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
      uint64_t v57 = MEMORY[0x263F1B720];
      uint64_t v99 = MEMORY[0x263F1B720];
      uint64_t v100 = v55;
      uint64_t v58 = MEMORY[0x263F1B718];
      uint64_t v101 = MEMORY[0x263F1B718];
      uint64_t v102 = v56;
      swift_getOpaqueTypeConformance2();
      uint64_t v41 = v82;
      sub_23CFBE374((uint64_t)v15, v81, a3);
      uint64_t v59 = v15;
      uint64_t v40 = v58;
      v54(v59, a3);
      uint64_t v60 = v53;
      uint64_t v38 = v57;
      v54(v60, a3);
    }
    uint64_t v49 = v86;
    uint64_t v61 = type metadata accessor for FullScreenPreviewController(255);
    uint64_t v62 = sub_23CF113C0(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
    uint64_t v99 = v38;
    uint64_t v100 = v61;
    uint64_t v101 = v40;
    uint64_t v102 = v62;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v89 = v43;
    uint64_t v63 = v73;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v65 = v40;
    uint64_t v66 = (uint64_t)v83;
    sub_23CFBE07C(v41, v63, WitnessTable);
    uint64_t v24 = v74;
    sub_23CFBE27C(v66, v63);
    uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
    uint64_t v68 = v66;
    uint64_t v51 = v65;
    uint64_t v47 = v61;
    v67(v68, v63);
    v67((uint64_t)v41, v63);
    uint64_t v50 = v85;
  }
  else
  {
    uint64_t v44 = (void (**)(uint64_t))(a1 + *(int *)(v25 + 40));
    uint64_t v45 = MEMORY[0x263F1B718];
    (*v44)(v27);
    sub_23CFBE07C(v15, a3, a4);
    uint64_t v46 = *(void (**)(char *, uint64_t))(v12 + 8);
    v46(v15, a3);
    sub_23CFBE07C(v17, a3, a4);
    uint64_t v47 = type metadata accessor for FullScreenPreviewController(255);
    uint64_t v48 = sub_23CF113C0(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
    uint64_t v99 = MEMORY[0x263F1B720];
    uint64_t v100 = v47;
    uint64_t v101 = v45;
    uint64_t v102 = v48;
    uint64_t v97 = swift_getOpaqueTypeConformance2();
    uint64_t v98 = a4;
    swift_getWitnessTable();
    sub_23CFBE374((uint64_t)v15, v19, a3);
    v46(v15, a3);
    v46(v17, a3);
    uint64_t v49 = v86;
    uint64_t v43 = a4;
    uint64_t v50 = v85;
    uint64_t v51 = v45;
  }
  type metadata accessor for FullScreenPreviewController(255);
  uint64_t v69 = sub_23CF113C0(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
  uint64_t v99 = MEMORY[0x263F1B720];
  uint64_t v100 = v47;
  uint64_t v101 = v51;
  uint64_t v102 = v69;
  uint64_t v95 = swift_getOpaqueTypeConformance2();
  uint64_t v96 = v43;
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v94 = v43;
  uint64_t v70 = swift_getWitnessTable();
  sub_23CFBE07C(v24, v49, v70);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v24, v49);
}

uint64_t sub_23CF0EA2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_23D004728();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD5A8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD588);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = sub_23D004C58();
  *((void *)v12 + 1) = 0;
  unsigned char v12[16] = 1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD5D8);
  sub_23CF0EC6C(a1, (uint64_t)&v12[*(int *)(v17 + 44)]);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  sub_23D004718();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_23D005778();
  sub_23D0046C8();
  sub_23CEE82CC((uint64_t)v12, (uint64_t)v16, &qword_268BCD5A8);
  uint64_t v18 = &v16[*(int *)(v14 + 44)];
  long long v19 = v21[1];
  *(_OWORD *)uint64_t v18 = v21[0];
  *((_OWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 2) = v21[2];
  sub_23CEE8BB4((uint64_t)v12, &qword_268BCD5A8);
  return sub_23CF11208((uint64_t)v16, a3);
}

uint64_t sub_23CF0EC6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v64 = a2;
  uint64_t v2 = type metadata accessor for FullScreenPreviewController.Content(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v45 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD5E0);
  MEMORY[0x270FA5388](v49);
  uint64_t v53 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD5E8);
  MEMORY[0x270FA5388](v63);
  uint64_t v54 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for CatchUpMailOriginalContentFullScreenPreviewController(0);
  uint64_t v6 = MEMORY[0x270FA5388](v47);
  uint64_t v46 = (uint64_t *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6);
  uint64_t v55 = (uint64_t)&v44 - v8;
  uint64_t v56 = type metadata accessor for FullPreviewAttributedText();
  MEMORY[0x270FA5388](v56);
  uint64_t v52 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_23D003B88();
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v51 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v48 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD5F0);
  MEMORY[0x270FA5388](v62);
  uint64_t v58 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD5F8);
  MEMORY[0x270FA5388](v59);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD600);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (uint64_t *)((char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD608);
  MEMORY[0x270FA5388](v60);
  long long v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD610);
  MEMORY[0x270FA5388](v61);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (uint64_t *)((char *)&v44 - v26);
  uint64_t v28 = v2;
  uint64_t v29 = *(int *)(v2 + 20);
  uint64_t v30 = v57;
  sub_23CF11530(v57 + v29, (uint64_t)&v44 - v26, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v34 = v50;
      uint64_t v33 = v51;
      uint64_t v35 = v48;
      (*(void (**)(char *, void *, uint64_t))(v50 + 32))(v48, v27, v51);
      uint64_t v36 = (uint64_t)v52;
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v52, v35, v33);
      sub_23CF11530(v36, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FullPreviewAttributedText);
      swift_storeEnumTagMultiPayload();
      sub_23CF1136C();
      sub_23CF113C0(&qword_268BCD638, (void (*)(uint64_t))type metadata accessor for FullPreviewAttributedText);
      sub_23D004D88();
      sub_23CEE82CC((uint64_t)v19, (uint64_t)v14, &qword_268BCD608);
      swift_storeEnumTagMultiPayload();
      sub_23CF112C0();
      sub_23CF11408();
      sub_23D004D88();
      sub_23CEE8BB4((uint64_t)v19, &qword_268BCD608);
      sub_23CEE82CC((uint64_t)v21, v58, &qword_268BCD610);
      swift_storeEnumTagMultiPayload();
      sub_23CF114B4();
      sub_23D004D88();
      sub_23CEE8BB4((uint64_t)v21, &qword_268BCD610);
      sub_23CF11598(v36, (uint64_t (*)(void))type metadata accessor for FullPreviewAttributedText);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v33);
    case 2u:
      goto LABEL_7;
    case 3u:
      uint64_t v37 = (uint64_t)v46;
      uint64_t v38 = v47;
      *uint64_t v46 = *v27;
      uint64_t v39 = (uint64_t *)(v37 + *(int *)(v38 + 20));
      *uint64_t v39 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = v55;
      sub_23CF1209C(v37, v55, type metadata accessor for CatchUpMailOriginalContentFullScreenPreviewController);
      sub_23CF11530(v40, v53, type metadata accessor for CatchUpMailOriginalContentFullScreenPreviewController);
      swift_storeEnumTagMultiPayload();
      sub_23CF113C0(&qword_268BCD620, (void (*)(uint64_t))type metadata accessor for CatchUpMailOriginalContentFullScreenPreviewController);
      uint64_t v41 = (uint64_t)v54;
      sub_23D004D88();
      sub_23CEE82CC(v41, (uint64_t)v14, &qword_268BCD5E8);
      swift_storeEnumTagMultiPayload();
      sub_23CF112C0();
      sub_23CF11408();
      sub_23D004D88();
      sub_23CEE8BB4(v41, &qword_268BCD5E8);
      sub_23CEE82CC((uint64_t)v21, v58, &qword_268BCD610);
      swift_storeEnumTagMultiPayload();
      sub_23CF114B4();
      sub_23D004D88();
      sub_23CEE8BB4((uint64_t)v21, &qword_268BCD610);
      return sub_23CF11598(v40, type metadata accessor for CatchUpMailOriginalContentFullScreenPreviewController);
    case 4u:
      uint64_t v42 = v30;
      uint64_t v43 = v45;
      sub_23CF11530(v42, v45, type metadata accessor for FullScreenPreviewController.Content);
      uint64_t v65 = 0;
      unint64_t v66 = 0xE000000000000000;
      sub_23D005FC8();
      sub_23D0059F8();
      sub_23CF11530(v43 + *(int *)(v28 + 20), (uint64_t)v25, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
      sub_23D005998();
      sub_23D0059F8();
      swift_bridgeObjectRelease();
LABEL_7:
      sub_23D0060A8();
      __break(1u);
      JUMPOUT(0x23CF0F72CLL);
    default:
      uint64_t v31 = v27[1];
      *uint64_t v17 = *v27;
      v17[1] = v31;
      swift_storeEnumTagMultiPayload();
      sub_23CF1136C();
      sub_23CF113C0(&qword_268BCD638, (void (*)(uint64_t))type metadata accessor for FullPreviewAttributedText);
      sub_23D004D88();
      sub_23CEE82CC((uint64_t)v19, (uint64_t)v14, &qword_268BCD608);
      swift_storeEnumTagMultiPayload();
      sub_23CF112C0();
      sub_23CF11408();
      sub_23D004D88();
      sub_23CEE8BB4((uint64_t)v19, &qword_268BCD608);
      sub_23CEE82CC((uint64_t)v21, v58, &qword_268BCD610);
      swift_storeEnumTagMultiPayload();
      sub_23CF114B4();
      sub_23D004D88();
      return sub_23CEE8BB4((uint64_t)v21, &qword_268BCD610);
  }
}

uint64_t sub_23CF0F740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v38[1] = a3;
  uint64_t v41 = (uint8_t *)a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD578);
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCE600);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v38 - v11;
  uint64_t v13 = sub_23D003CE8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v40 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v42 = (char *)v38 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v38 - v19;
  sub_23CEE82CC(a1, (uint64_t)v12, (uint64_t *)&unk_268BCE600);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v21(v12, 1, v13) == 1)
  {
    uint64_t v22 = v14;
    sub_23CEE8BB4((uint64_t)v12, (uint64_t *)&unk_268BCE600);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v12, v13);
    uint64_t v23 = swift_projectBox();
    uint64_t v24 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v6, v23, v4);
    sub_23D005738();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
    sub_23CF280D0((uint64_t)v20);
    swift_release();
    uint64_t v22 = v14;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
  }
  sub_23CEE82CC((uint64_t)v41, (uint64_t)v10, (uint64_t *)&unk_268BCE600);
  unsigned int v25 = v21(v10, 1, v13);
  uint64_t v26 = v42;
  if (v25 == 1) {
    return sub_23CEE8BB4((uint64_t)v10, (uint64_t *)&unk_268BCE600);
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v42, v10, v13);
  if (qword_268BCCCB0 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_23D004498();
  __swift_project_value_buffer(v28, (uint64_t)qword_268BDAD70);
  uint64_t v29 = v40;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v40, v26, v13);
  uint64_t v30 = sub_23D004478();
  os_log_type_t v31 = sub_23D005C88();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v44 = v33;
    *(_DWORD *)uint64_t v32 = 136315138;
    uint64_t v41 = v32 + 4;
    sub_23CF113C0((unint64_t *)&qword_268BCD5D0, MEMORY[0x263F06EA8]);
    uint64_t v34 = sub_23D0061F8();
    uint64_t v43 = sub_23CF231B0(v34, v35, &v44);
    sub_23D005E48();
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void (**)(char *, uint64_t))(v22 + 8);
    v36(v29, v13);
    _os_log_impl(&dword_23CEE3000, v30, v31, "New quicklook preview url: %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v33, -1, -1);
    MEMORY[0x23ECF6610](v32, -1, -1);

    return ((uint64_t (*)(char *, uint64_t))v36)(v26, v13);
  }
  else
  {

    uint64_t v37 = *(void (**)(char *, uint64_t))(v22 + 8);
    v37(v29, v13);
    return ((uint64_t (*)(char *, uint64_t))v37)(v26, v13);
  }
}

uint64_t sub_23CF0FC8C()
{
  uint64_t v1 = *(void *)(type metadata accessor for PrebuiltPreviewController() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v14 = *(void *)(v1 + 64);
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v3, v4);
  uint64_t v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v5 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  int v10 = v9(v6, 1, v8);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v12 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v6, v12);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
          break;
        default:
          break;
      }
    }
    v6 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v9(v6, 1, v8))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else if (!v10)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
LABEL_7:
        swift_bridgeObjectRelease();
        break;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_12:
        uint64_t v11 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
        break;
      case 5u:
LABEL_13:
        sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
        break;
      default:
        break;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, ((v14 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_23CF100A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for PrebuiltPreviewController() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v2 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_23CF0D190(a1, v2 + v8, v9, v5, v6, a2);
}

unint64_t sub_23CF1016C()
{
  unint64_t result = qword_268BCD598;
  if (!qword_268BCD598)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD588);
    sub_23CEE8D90(&qword_268BCD5A0, &qword_268BCD5A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD598);
  }
  return result;
}

unint64_t sub_23CF1020C()
{
  unint64_t result = qword_268BCD5B0;
  if (!qword_268BCD5B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_268BCE600);
    sub_23CF113C0(&qword_268BCD5B8, MEMORY[0x263F06EA8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD5B0);
  }
  return result;
}

uint64_t sub_23CF102B0@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF0DFB8(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_23CF102C4()
{
  uint64_t v1 = *(void *)(type metadata accessor for PrebuiltPreviewController() - 8);
  uint64_t v19 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v17 = *(void *)(v1 + 64);
  uint64_t v20 = sub_23D004728();
  uint64_t v2 = *(void *)(v20 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v16 = *(void *)(v2 + 64);
  uint64_t v18 = (v19 + 32) & ~v19;
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v18, v4);
  uint64_t v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v6 = v0 + v18 + *(int *)(v5 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  int v10 = v9(v6, 1, v8);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v14 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v6, v14);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
          break;
        default:
          break;
      }
    }
    v6 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v9(v6, 1, v8))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else if (!v10)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
LABEL_7:
        swift_bridgeObjectRelease();
        break;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_12:
        uint64_t v11 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
        break;
      case 5u:
LABEL_13:
        sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
        break;
      default:
        break;
    }
  }
  uint64_t v12 = v19 | v3 | 7;
  uint64_t v13 = (v18 + v17 + v3) & ~v3;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v13, v20);

  return MEMORY[0x270FA0238](v0, v13 + v16, v12);
}

uint64_t sub_23CF10758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for PrebuiltPreviewController() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_23D004728() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_23CF0EA2C(a1, v9, a2);
}

uint64_t sub_23CF10860(uint64_t a1, uint64_t a2)
{
  return sub_23CF0F740(a1, a2, v2);
}

uint64_t sub_23CF10868()
{
  return sub_23D0045C8();
}

uint64_t sub_23CF1090C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_23D004B08();
  sub_23CF10A30((uint64_t)v13);
  uint64_t v3 = v13[0];
  uint64_t v4 = v13[1];
  char v5 = v14;
  uint64_t v6 = v15;
  uint64_t v7 = v16;
  char v8 = v17;
  uint64_t v9 = v18;
  char v10 = v20;
  long long v11 = v19;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 96) = v10;
  *(void *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 112) = 1;
  sub_23CEE8444(v3, v4, v5);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23CEE7DE0(v3, v4, v5);
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF10A30@<X0>(uint64_t a1@<X8>)
{
  sub_23CEE8D00();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_23D005228();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = sub_23D005108();
  uint64_t v11 = swift_getKeyPath();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = KeyPath;
  *(unsigned char *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 1;
  sub_23CEE8444(v2, v4, v8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23CEE7DE0(v2, v4, v8);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

__n128 sub_23CF10B54@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = sub_23D004288();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  uint64_t v10 = (uint64_t *)((char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD670) + 40));
  *uint64_t v10 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
  swift_storeEnumTagMultiPayload();
  a1[3].n128_u64[0] = (unint64_t)sub_23CF11FA4;
  a1[3].n128_u64[1] = v9;
  uint64_t v11 = qword_268BCCD00;
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(v3, (uint64_t)qword_268BDAE30);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v12, v3);
  uint64_t v13 = sub_23D005558();
  __asm { FMOV            V0.2D, #16.0 }
  *a1 = result;
  a1[1].n128_u64[0] = 0;
  a1[1].n128_u64[1] = 0;
  a1[2].n128_u64[0] = v13;
  a1[2].n128_u8[8] = 0;
  return result;
}

uint64_t sub_23CF10CFC()
{
  return sub_23D0045C8();
}

uint64_t sub_23CF10DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_23D003B88();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_23D004B08();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v9 = sub_23D005218();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = sub_23D005108();
  uint64_t v18 = swift_getKeyPath();
  sub_23CEE8444(v9, v11, v15);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23CEE7DE0(v9, v11, v15);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v11;
  *(unsigned char *)(a2 + 40) = v15;
  *(void *)(a2 + 48) = v13;
  *(void *)(a2 + 56) = KeyPath;
  *(unsigned char *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = v18;
  *(void *)(a2 + 80) = v17;
  *(void *)(a2 + 88) = 0;
  *(unsigned char *)(a2 + 96) = 1;
  *(void *)(a2 + 104) = 0;
  *(unsigned char *)(a2 + 112) = 1;
  sub_23CEE8444(v9, v11, v15);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23CEE7DE0(v9, v11, v15);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

__n128 sub_23CF10FB4@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v6 = sub_23D004288();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF11530(v4, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FullPreviewAttributedText);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  sub_23CF1209C((uint64_t)v13, v15 + v14, (uint64_t (*)(void))type metadata accessor for FullPreviewAttributedText);
  uint64_t v16 = (uint64_t *)((char *)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD670) + 40));
  *uint64_t v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
  swift_storeEnumTagMultiPayload();
  a2[3].n128_u64[0] = (unint64_t)sub_23CF12104;
  a2[3].n128_u64[1] = v15;
  if (qword_268BCCD00 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v6, (uint64_t)qword_268BDAE30);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v17, v6);
  uint64_t v18 = sub_23D005558();
  __asm { FMOV            V0.2D, #16.0 }
  *a2 = result;
  a2[1].n128_u64[0] = 0;
  a2[1].n128_u64[1] = 0;
  a2[2].n128_u64[0] = v18;
  a2[2].n128_u8[8] = 0;
  return result;
}

uint64_t sub_23CF11208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FullPreviewAttributedText()
{
  uint64_t result = qword_268BCD660;
  if (!qword_268BCD660) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_23CF112C0()
{
  unint64_t result = qword_268BCD628;
  if (!qword_268BCD628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD608);
    sub_23CF1136C();
    sub_23CF113C0(&qword_268BCD638, (void (*)(uint64_t))type metadata accessor for FullPreviewAttributedText);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD628);
  }
  return result;
}

unint64_t sub_23CF1136C()
{
  unint64_t result = qword_268BCD630;
  if (!qword_268BCD630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD630);
  }
  return result;
}

uint64_t sub_23CF113C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23CF11408()
{
  unint64_t result = qword_268BCD640;
  if (!qword_268BCD640)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD5E8);
    sub_23CF113C0(&qword_268BCD620, (void (*)(uint64_t))type metadata accessor for CatchUpMailOriginalContentFullScreenPreviewController);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD640);
  }
  return result;
}

unint64_t sub_23CF114B4()
{
  unint64_t result = qword_268BCD648;
  if (!qword_268BCD648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD610);
    sub_23CF112C0();
    sub_23CF11408();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD648);
  }
  return result;
}

uint64_t sub_23CF11530(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23CF11598(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23CF115F8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_23CF11708(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_23CF1179C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003B88();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_23CF11808(uint64_t a1)
{
  uint64_t v2 = sub_23D003B88();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_23CF1186C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003B88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23CF118D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003B88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23CF11934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003B88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23CF11998(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003B88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23CF119FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF11A10);
}

uint64_t sub_23CF11A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003B88();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_23CF11A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF11A90);
}

uint64_t sub_23CF11A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003B88();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_23CF11B00()
{
  uint64_t result = sub_23D003B88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FullPreviewText(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FullPreviewText()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for FullPreviewText(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FullPreviewText(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FullPreviewText()
{
  return &type metadata for FullPreviewText;
}

uint64_t sub_23CF11C4C()
{
  return swift_getWitnessTable();
}

uint64_t sub_23CF11F34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF11F50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF11F6C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23CF11FA4()
{
  return sub_23CF10868();
}

uint64_t sub_23CF11FAC@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF1090C(a1);
}

uint64_t sub_23CF11FC4()
{
  uint64_t v1 = *(void *)(type metadata accessor for FullPreviewAttributedText() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_23D003B88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_23CF1209C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23CF12104()
{
  type metadata accessor for FullPreviewAttributedText();

  return sub_23CF10CFC();
}

uint64_t sub_23CF12174@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF10DA0(*(void *)(v1 + 16), a1);
}

uint64_t sub_23CF1217C()
{
  return sub_23CEE8D90(&qword_268BCD688, &qword_268BCD670);
}

uint64_t sub_23CF121BC(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v59 = a3;
  uint64_t v57 = a2;
  int v64 = a1;
  uint64_t v58 = sub_23D003F98();
  uint64_t v3 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v5 = (void *)((char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_23D003F38();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v56 - v11;
  if (qword_268BCCCB0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_23D004498();
  uint64_t v63 = __swift_project_value_buffer(v13, (uint64_t)qword_268BDAD70);
  unint64_t v14 = sub_23D004478();
  os_log_type_t v15 = sub_23D005C88();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v60 = v7;
  uint64_t v61 = v12;
  if (v16)
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v66 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v65 = sub_23CF231B0(0xD000000000000013, 0x800000023D010460, &v66);
    uint64_t v7 = v60;
    sub_23D005E48();
    _os_log_impl(&dword_23CEE3000, v14, v15, "%s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v18, -1, -1);
    MEMORY[0x23ECF6610](v17, -1, -1);
  }

  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  uint64_t v20 = v62;
  v56[-2] = v62;
  unsigned __int8 v21 = v64;
  LOBYTE(v56[-1]) = v64;
  int v22 = v21;
  uint64_t v23 = v20 + OBJC_IVAR____TtC8Feedback15BatchController___observationRegistrar;
  uint64_t v66 = v20;
  v56[1] = sub_23CF13C2C(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  v56[2] = v23;
  sub_23D003DC8();
  swift_release();
  if (v22 == 2)
  {
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, *MEMORY[0x263F3C1F8], v6);
  }
  else
  {
    uint64_t v24 = sub_23D004478();
    os_log_type_t v25 = sub_23D005C88();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v56[0] = v6;
      uint64_t v28 = v27;
      uint64_t v66 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v65 = sub_23CF231B0(0xD000000000000013, 0x800000023D010460, &v66);
      uint64_t v7 = v60;
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v24, v25, "%s - will increment score", v26, 0xCu);
      swift_arrayDestroy();
      uint64_t v29 = v28;
      uint64_t v6 = v56[0];
      MEMORY[0x23ECF6610](v29, -1, -1);
      MEMORY[0x23ECF6610](v26, -1, -1);
    }

    swift_getKeyPath();
    uint64_t v30 = v62;
    uint64_t v66 = v62;
    sub_23D003DD8();
    swift_release();
    uint64_t v31 = *(void *)(v30 + 24);
    swift_retain_n();
    uint64_t v32 = sub_23D005798();
    MEMORY[0x270FA5388](v32);
    v56[-2] = sub_23CF14488;
    v56[-1] = v31;
    sub_23D004798();
    swift_release_n();
    swift_release();
    if ((_BYTE)v64) {
      uint64_t v33 = (unsigned int *)MEMORY[0x263F3C1D8];
    }
    else {
      uint64_t v33 = (unsigned int *)MEMORY[0x263F3C200];
    }
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, *v33, v6);
  }
  uint64_t v34 = (uint64_t)v61;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v61, v10, v6);
  unint64_t v35 = sub_23D004478();
  os_log_type_t v36 = sub_23D005C78();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v66 = v38;
    *(_DWORD *)uint64_t v37 = 136315394;
    uint64_t v65 = sub_23CF231B0(0xD000000000000013, 0x800000023D010460, &v66);
    sub_23D005E48();
    *(_WORD *)(v37 + 12) = 2080;
    if ((_BYTE)v64)
    {
      if (v64 == 1) {
        uint64_t v39 = 0x6F4473626D756874;
      }
      else {
        uint64_t v39 = 1885956979;
      }
      if (v64 == 1) {
        unint64_t v40 = 0xEA00000000006E77;
      }
      else {
        unint64_t v40 = 0xE400000000000000;
      }
    }
    else
    {
      uint64_t v39 = 0x705573626D756874;
      unint64_t v40 = 0xE800000000000000;
    }
    uint64_t v65 = sub_23CF231B0(v39, v40, &v66);
    sub_23D005E48();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23CEE3000, v35, v36, "%s - will commit action %s on evaluation controller", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v38, -1, -1);
    MEMORY[0x23ECF6610](v37, -1, -1);

    uint64_t v7 = v60;
    uint64_t v34 = (uint64_t)v61;
  }
  else
  {
  }
  uint64_t v41 = type metadata accessor for BatchInteraction(0);
  uint64_t v42 = v58;
  uint64_t v43 = *(void **)(v57 + *(int *)(v41 + 20));
  *uint64_t v5 = v43;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F3C228], v42);
  int v44 = v64;
  id v45 = v43;
  sub_23CFC9758(v34, (uint64_t)v5, v44 == 1, 0);
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v42);
  uint64_t v46 = sub_23D004478();
  if (v44 == 1)
  {
    os_log_type_t v47 = sub_23D005C78();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v66 = v49;
      *(_DWORD *)uint64_t v48 = 136315394;
      uint64_t v65 = sub_23CF231B0(0xD000000000000013, 0x800000023D010460, &v66);
      sub_23D005E48();
      *(_WORD *)(v48 + 12) = 2080;
      uint64_t v65 = sub_23CF231B0(0x6F4473626D756874, 0xEA00000000006E77, &v66);
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v46, v47, "%s - action is %s, will not animate yet", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v49, -1, -1);
      MEMORY[0x23ECF6610](v48, -1, -1);

      return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v34, v6);
    }
  }
  else
  {
    os_log_type_t v51 = sub_23D005C88();
    if (os_log_type_enabled(v46, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v66 = v53;
      *(_DWORD *)uint64_t v52 = 136315394;
      uint64_t v65 = sub_23CF231B0(0xD000000000000013, 0x800000023D010460, &v66);
      sub_23D005E48();
      *(_WORD *)(v52 + 12) = 2080;
      if ((_BYTE)v64) {
        uint64_t v54 = 1885956979;
      }
      else {
        uint64_t v54 = 0x705573626D756874;
      }
      if ((_BYTE)v64) {
        unint64_t v55 = 0xE400000000000000;
      }
      else {
        unint64_t v55 = 0xE800000000000000;
      }
      uint64_t v65 = sub_23CF231B0(v54, v55, &v66);
      uint64_t v7 = v60;
      sub_23D005E48();
      uint64_t v34 = (uint64_t)v61;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23CEE3000, v46, v51, "%s - action %s was not feedback, will animate out", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v53, -1, -1);
      MEMORY[0x23ECF6610](v52, -1, -1);
    }

    swift_getKeyPath();
    uint64_t v66 = v62;
    sub_23D003DD8();
    swift_release();
    swift_retain();
    sub_23CF9BEAC();
    swift_release();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v34, v6);
}

void sub_23CF12CD0()
{
  qword_268BDACE8 = 0x407E000000000000;
}

uint64_t sub_23CF12CE0()
{
  return swift_retain();
}

uint64_t sub_23CF12D84(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_23CF12DC0()
{
  return swift_retain();
}

uint64_t sub_23CF12E64(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_23CF12EA0()
{
  return swift_retain();
}

uint64_t sub_23CF12F44(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_23CF12F80()
{
  return swift_retain();
}

uint64_t sub_23CF13024(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_23CF13060()
{
  return swift_retain();
}

uint64_t sub_23CF13104(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 48) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_23CF13140()
{
  return swift_retain();
}

uint64_t sub_23CF131E4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_23CF13220@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_23CF13C2C(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Feedback15BatchController__dismissHandler;
  swift_beginAccess();
  return sub_23CF13C74(v3, a1);
}

uint64_t sub_23CF132EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC8Feedback15BatchController__dismissHandler;
  swift_beginAccess();
  sub_23CF13BBC(a2, v3);
  return swift_endAccess();
}

uint64_t sub_23CF13358()
{
  swift_getKeyPath();
  sub_23CF13C2C(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Feedback15BatchController__lastAction);
}

uint64_t sub_23CF13400@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF13C2C(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC8Feedback15BatchController__lastAction);
  return result;
}

uint64_t sub_23CF134B0()
{
  return swift_release();
}

uint64_t BatchController.__allocating_init(scoreController:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  BatchController.init(scoreController:)(a1);
  return v2;
}

void *BatchController.init(scoreController:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (char *)v1 + OBJC_IVAR____TtC8Feedback15BatchController__dismissHandler;
  uint64_t v5 = sub_23D004708();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *((unsigned char *)v2 + OBJC_IVAR____TtC8Feedback15BatchController__lastAction) = 3;
  sub_23D003E08();
  if (a1)
  {
    v2[3] = a1;
  }
  else
  {
    type metadata accessor for ScoreController();
    uint64_t v6 = swift_allocObject();
    *(_WORD *)(v6 + 16) = 0;
    sub_23D003E08();
    if (qword_268BCCC78 != -1) {
      swift_once();
    }
    uint64_t v7 = qword_268BDAD20;
    swift_getKeyPath();
    sub_23CF13C2C((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
    sub_23D003DD8();
    swift_release();
    *(void *)(v6 + 24) = *(void *)(v7 + 24);
    v2[3] = v6;
  }
  type metadata accessor for DebugController();
  uint64_t v8 = swift_allocObject();
  *(_WORD *)(v8 + 16) = 0;
  swift_retain();
  sub_23D003E08();
  void v2[6] = v8;
  type metadata accessor for OnboardingController();
  swift_allocObject();
  v2[4] = sub_23CF51A14();
  type metadata accessor for StateController();
  uint64_t v9 = (_OWORD *)swift_allocObject();
  sub_23D003E08();
  *(_OWORD *)((char *)v9 + 57) = 0u;
  long long v9[2] = 0u;
  v9[3] = 0u;
  v9[1] = 0u;
  v2[5] = v9;
  type metadata accessor for DonationController();
  swift_allocObject();
  uint64_t v10 = swift_retain_n();
  v2[2] = sub_23CF9DC1C(v10);
  type metadata accessor for FullScreenPreviewController(0);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = v11 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__content;
  uint64_t v13 = type metadata accessor for FullScreenPreviewController.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = v11 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__quickLookPreviewURL;
  uint64_t v15 = sub_23D003CE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_23D003E08();
  swift_release();
  swift_release();
  v2[7] = v11;
  return v2;
}

uint64_t BatchController.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23CEE8BB4(v0 + OBJC_IVAR____TtC8Feedback15BatchController__dismissHandler, &qword_268BCCD88);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Feedback15BatchController___observationRegistrar;
  uint64_t v2 = sub_23D003E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t BatchController.__deallocating_deinit()
{
  BatchController.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_23CF139F8()
{
  return type metadata accessor for BatchController();
}

uint64_t type metadata accessor for BatchController()
{
  uint64_t result = qword_268BCD6A8;
  if (!qword_268BCD6A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_23CF13A4C()
{
  sub_23CF13B64();
  if (v0 <= 0x3F)
  {
    sub_23D003E18();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for BatchController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BatchController);
}

uint64_t dispatch thunk of BatchController.__allocating_init(scoreController:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

void sub_23CF13B64()
{
  if (!qword_268BCD6B8)
  {
    sub_23D004708();
    unint64_t v0 = sub_23D005DF8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268BCD6B8);
    }
  }
}

uint64_t sub_23CF13BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF13C2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF13C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_23CF13D0C(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD6C0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_268BCCCB0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_23D004498();
  v31[0] = __swift_project_value_buffer(v9, (uint64_t)qword_268BDAD70);
  uint64_t v10 = sub_23D004478();
  os_log_type_t v11 = sub_23D005C88();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v33 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v32 = sub_23CF231B0(0xD00000000000001DLL, 0x800000023D010440, &v33);
    sub_23D005E48();
    _os_log_impl(&dword_23CEE3000, v10, v11, "%s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v13, -1, -1);
    MEMORY[0x23ECF6610](v12, -1, -1);
  }

  swift_getKeyPath();
  uint64_t v33 = v3;
  sub_23CF13C2C(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Feedback15BatchController__lastAction) != 1)
  {
    if ((a2 & 1) == 0)
    {
      id v15 = a1;
      goto LABEL_15;
    }
LABEL_10:
    id v17 = a1;
    id v18 = a1;
    id v19 = a1;
    uint64_t v20 = sub_23D004478();
    os_log_type_t v21 = sub_23D005C98();
    if (!os_log_type_enabled(v20, v21))
    {
      sub_23CF14464(a1);
      sub_23CF14464(a1);

      return;
    }
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v33 = v24;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v32 = sub_23CF231B0(0xD00000000000001DLL, 0x800000023D010440, &v33);
    sub_23D005E48();
    *(_WORD *)(v22 + 12) = 2112;
    id v25 = a1;
    uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v32 = v26;
    sub_23D005E48();
    *uint64_t v23 = v26;
    sub_23CF14464(a1);
    sub_23CF14464(a1);
    _os_log_impl(&dword_23CEE3000, v20, v21, "%s - Failed to record evaluation: %@", (uint8_t *)v22, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDC00);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v23, -1, -1);
    goto LABEL_17;
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  v31[-2] = v3;
  LOBYTE(v31[-1]) = 3;
  uint64_t v33 = v3;
  sub_23D003DC8();
  swift_release();
  if (a2) {
    goto LABEL_10;
  }
  id v15 = a1;
  sub_23D003F08();
  uint64_t v16 = sub_23D003EF8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v8, 1, v16) == 1)
  {
    sub_23CF14464(a1);
    sub_23CEE8BB4((uint64_t)v8, &qword_268BCD6C0);
  }
  else
  {
    sub_23CEE8BB4((uint64_t)v8, &qword_268BCD6C0);
    swift_getKeyPath();
    uint64_t v33 = v3;
    sub_23D003DD8();
    swift_release();
    swift_retain();
    sub_23CF9BEAC();
    swift_release();
    sub_23CF14464(a1);
  }
LABEL_15:
  id v27 = v15;
  uint64_t v20 = sub_23D004478();
  os_log_type_t v28 = sub_23D005C78();
  if (os_log_type_enabled(v20, v28))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v29 = (void *)swift_slowAlloc();
    v31[0] = swift_slowAlloc();
    uint64_t v33 = v31[0];
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v32 = sub_23CF231B0(0xD00000000000001DLL, 0x800000023D010440, &v33);
    sub_23D005E48();
    *(_WORD *)(v22 + 12) = 2112;
    uint64_t v32 = (uint64_t)v27;
    id v30 = v27;
    sub_23D005E48();
    *uint64_t v29 = v27;
    sub_23CF14464(a1);
    sub_23CF14464(a1);
    _os_log_impl(&dword_23CEE3000, v20, v28, "%s - Successfully saved evaluation: %@", (uint8_t *)v22, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDC00);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v29, -1, -1);
    uint64_t v24 = v31[0];
LABEL_17:
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v24, -1, -1);
    MEMORY[0x23ECF6610](v22, -1, -1);

    sub_23CF14464(a1);
    return;
  }
  sub_23CF14464(a1);
  sub_23CF14464(a1);
}

void sub_23CF14464(id a1)
{
}

void sub_23CF14470()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8Feedback15BatchController__lastAction) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_23CF14488()
{
  return sub_23CF151A4(v0);
}

uint64_t sub_23CF14490()
{
  return sub_23CF2853C(*(uint64_t (**)(void))(v0 + 16));
}

void sub_23CF144AC()
{
}

uint64_t ScoreController.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(_WORD *)(v0 + 16) = 0;
  sub_23D003E08();
  if (qword_268BCCC78 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_268BDAD20;
  swift_getKeyPath();
  sub_23CF15694((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DD8();
  swift_release();
  *(void *)(v0 + 24) = *(void *)(v1 + 24);
  return v0;
}

uint64_t sub_23CF145C8()
{
  swift_getKeyPath();
  sub_23CF15694((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_23CF14668()
{
  swift_getKeyPath();
  sub_23CF15694((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  double v2 = floor(sqrt((double)*(uint64_t *)(v0 + 24) * 0.5));
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v3 = (uint64_t)v2;
  if ((uint64_t)v2 >= 99) {
    uint64_t v3 = 99;
  }
  double v4 = floor((double)v3 * (double)v3 + (double)v3 * (double)v3);
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0) {
    goto LABEL_13;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v4 < 9.22337204e18)
  {
    swift_getKeyPath();
    sub_23D003DD8();
    swift_release();
    return sub_23CF15048();
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_23CF1481C()
{
  swift_getKeyPath();
  sub_23CF15694((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_23CF148BC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_23CF148C4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 17) = a2;
  return result;
}

uint64_t sub_23CF148CC()
{
  swift_getKeyPath();
  sub_23CF15694((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  swift_release();
  return *(void *)(v0 + 24);
}

uint64_t sub_23CF1496C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF15694((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(void *)(v3 + 24);
  return result;
}

uint64_t sub_23CF14A14()
{
  return swift_release();
}

uint64_t sub_23CF14AE0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a2;
  if (qword_268BCCC78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  sub_23CF15694((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  sub_23CF15694((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DC8();
  return swift_release();
}

uint64_t ScoreController.init()()
{
  *(_WORD *)(v0 + 16) = 0;
  sub_23D003E08();
  if (qword_268BCCC78 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_268BDAD20;
  swift_getKeyPath();
  sub_23CF15694((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DD8();
  swift_release();
  *(void *)(v0 + 24) = *(void *)(v1 + 24);
  return v0;
}

uint64_t sub_23CF14D78()
{
  uint64_t v1 = type metadata accessor for AnalyticsEvent();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath();
  uint64_t v9 = v0;
  sub_23CF15694((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  double v5 = floor(sqrt((double)*(uint64_t *)(v0 + 24) * 0.5));
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v5 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if ((uint64_t)v5 >= 99) {
    uint64_t v6 = 99;
  }
  else {
    uint64_t v6 = (uint64_t)v5;
  }
  swift_getKeyPath();
  uint64_t v9 = v0;
  sub_23D003DD8();
  swift_release();
  uint64_t v7 = *(void *)(v0 + 24);
  *uint64_t v3 = v6;
  v3[1] = v7;
  swift_storeEnumTagMultiPayload();
  sub_23CFDE698();
  sub_23CF15708((uint64_t)v3);
  sub_23D005788();
  sub_23D004798();
  return swift_release();
}

uint64_t sub_23CF14F6C()
{
  return swift_release();
}

uint64_t sub_23CF15048()
{
  swift_getKeyPath();
  sub_23CF15694((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  double v2 = floor(sqrt((double)*(uint64_t *)(v0 + 24) * 0.5));
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v3 = (uint64_t)v2;
  if ((uint64_t)v2 >= 99) {
    uint64_t v3 = 99;
  }
  double v4 = (double)(v3 + 1) * (double)(v3 + 1);
  double v5 = floor(v4 + v4);
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0) {
    goto LABEL_13;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v5 < 9.22337204e18) {
    return (uint64_t)v5;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_23CF151A4(uint64_t a1)
{
  swift_getKeyPath();
  sub_23CF15694((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 24);
  if (__OFADD__(v2, 1))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 + 1 >= sub_23CF15048()) {
    sub_23CF14D78();
  }
  swift_getKeyPath();
  sub_23D003DD8();
  swift_release();
  swift_getKeyPath();
  sub_23D003DF8();
  swift_release();
  uint64_t v3 = *(void *)(a1 + 24);
  BOOL v4 = __OFADD__(v3, 1);
  uint64_t v5 = v3 + 1;
  if (v4) {
    goto LABEL_8;
  }
  *(void *)(a1 + 24) = v5;
  if (qword_268BCCC78 != -1) {
LABEL_9:
  }
    swift_once();
  swift_getKeyPath();
  sub_23D003DD8();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  sub_23CF15694((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DC8();
  swift_release();
  swift_getKeyPath();
  sub_23D003DE8();
  return swift_release();
}

uint64_t ScoreController.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Feedback15ScoreController___observationRegistrar;
  uint64_t v2 = sub_23D003E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ScoreController.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Feedback15ScoreController___observationRegistrar;
  uint64_t v2 = sub_23D003E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_23CF15560()
{
  return type metadata accessor for ScoreController();
}

uint64_t type metadata accessor for ScoreController()
{
  uint64_t result = qword_268BCD6D0;
  if (!qword_268BCD6D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF155B4()
{
  uint64_t result = sub_23D003E18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ScoreController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ScoreController);
}

uint64_t dispatch thunk of ScoreController.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_23CF15694(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF156DC()
{
  return sub_23CF14AE0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_23CF15708(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnalyticsEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23CF15764()
{
  return sub_23CF14F6C();
}

void sub_23CF15780()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 17) = *(unsigned char *)(v0 + 24);
}

void sub_23CF15790()
{
}

void *sub_23CF157A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    char v5 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v5;
    char v6 = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = v6;
    char v7 = *((unsigned char *)a2 + 40);
    *(void *)(a1 + 32) = a2[4];
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (uint64_t *)((char *)a2 + v8);
    uint64_t v10 = (void *)(a1 + v8);
    *(unsigned char *)(a1 + 40) = v7;
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD6E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_23D0045E8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v9, v11);
    }
    else
    {
      *uint64_t v10 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_23CF15908(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD6E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_23D0045E8();
    char v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_23CF159D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  char v5 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  char v6 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (void *)(a2 + v7);
  uint64_t v9 = (void *)(a1 + v7);
  *(unsigned char *)(a1 + 40) = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD6E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_23D0045E8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v8, v10);
  }
  else
  {
    *uint64_t v9 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23CF15AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  char v7 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  char v8 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_23CEE8BB4(a1 + v9, &qword_268BCD6E0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD6E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_23D0045E8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23CF15C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(int *)(a3 + 28);
  char v5 = (const void *)(a2 + v4);
  char v6 = (void *)(a1 + v4);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD6E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_23D0045E8();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v5, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v5, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_23CF15D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  char v7 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v7;
  swift_release();
  char v8 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v8;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    sub_23CEE8BB4(a1 + v9, &qword_268BCD6E0);
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD6E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_23D0045E8();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23CF15E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF15E58);
}

uint64_t sub_23CF15E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD6E8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_23CF15F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF15F18);
}

uint64_t sub_23CF15F18(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD6E8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CardStack()
{
  uint64_t result = qword_268BCD6F0;
  if (!qword_268BCD6F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_23CF1600C()
{
  sub_23CF160A8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_23CF160A8()
{
  if (!qword_268BCD700)
  {
    sub_23D0045E8();
    unint64_t v0 = sub_23D004608();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268BCD700);
    }
  }
}

uint64_t sub_23CF16100()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF1611C@<X0>(uint64_t (*a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v65 = a3;
  uint64_t v66 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD708);
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD718);
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v63 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v60 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD720);
  MEMORY[0x270FA5388](v58);
  uint64_t v61 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD728);
  uint64_t v9 = MEMORY[0x270FA5388](v59);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v64 = (uint64_t)&v55 - v12;
  uint64_t v13 = sub_23D0045E8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v55 - v18;
  uint64_t v20 = sub_23D004288();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = qword_268BCCCF0;
  swift_retain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = __swift_project_value_buffer(v20, (uint64_t)qword_268BDAE00);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v25, v20);
  uint64_t v26 = sub_23D005558();
  type metadata accessor for CardStack();
  sub_23CF39CB8((uint64_t)v19);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, *MEMORY[0x263F18508], v13);
  char v27 = sub_23D0045D8();
  os_log_type_t v28 = *(void (**)(char *, uint64_t))(v14 + 8);
  v28(v17, v13);
  v28(v19, v13);
  if (v27) {
    double v29 = 8.0;
  }
  else {
    double v29 = 0.0;
  }
  id v30 = v66;
  uint64_t v31 = swift_projectBox();
  uint64_t v33 = v56;
  uint64_t v32 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v5, v31, v57);
  sub_23D005738();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v32);
  double v34 = v68;
  swift_getKeyPath();
  double v68 = v34;
  sub_23CF186CC((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
  sub_23D003DD8();
  swift_release();
  double v35 = (double)*(uint64_t *)(*(void *)&v34 + 40);
  swift_getKeyPath();
  double v68 = v34;
  sub_23D003DD8();
  swift_release();
  uint64_t v36 = *(void *)(*(void *)&v34 + 48);
  swift_release();
  double v68 = v35 / (double)v36;
  char v69 = 0;
  uint64_t v67 = 0x3FF0000000000000;
  sub_23CF18028();
  uint64_t v37 = v60;
  sub_23D004648();
  LOBYTE(v34) = sub_23D005078();
  uint64_t v39 = (uint64_t)v61;
  uint64_t v38 = v62;
  uint64_t v40 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v61, v37, v63);
  uint64_t v41 = v39 + *(int *)(v58 + 36);
  *(unsigned char *)uint64_t v41 = LOBYTE(v34);
  *(_OWORD *)(v41 + 8) = 0u;
  *(_OWORD *)(v41 + 24) = 0u;
  *(unsigned char *)(v41 + 40) = 1;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v40);
  LOBYTE(v34) = sub_23D005098();
  sub_23D004578();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  sub_23CEE82CC(v39, (uint64_t)v11, &qword_268BCD720);
  uint64_t v50 = &v11[*(int *)(v59 + 36)];
  *uint64_t v50 = LOBYTE(v34);
  *((void *)v50 + 1) = v43;
  *((void *)v50 + 2) = v45;
  *((void *)v50 + 3) = v47;
  *((void *)v50 + 4) = v49;
  v50[40] = 0;
  sub_23CEE8BB4(v39, &qword_268BCD720);
  uint64_t v51 = v64;
  sub_23CEE83D8((uint64_t)v11, v64, &qword_268BCD728);
  sub_23CEE82CC(v51, (uint64_t)v11, &qword_268BCD728);
  uint64_t v52 = v65;
  *uint64_t v65 = sub_23CF18010;
  v52[1] = v30;
  v52[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v26;
  *((double *)v52 + 3) = v29;
  v52[4] = 0;
  v52[5] = 0;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD738);
  sub_23CEE82CC((uint64_t)v11, (uint64_t)v52 + *(int *)(v53 + 48), &qword_268BCD728);
  swift_retain();
  swift_retain();
  sub_23CEE8BB4(v51, &qword_268BCD728);
  sub_23CEE8BB4((uint64_t)v11, &qword_268BCD728);
  swift_release();
  return swift_release();
}

uint64_t sub_23CF16808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v73 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD740);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v72 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD708);
  uint64_t v70 = *(void *)(v7 - 8);
  uint64_t v71 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v67 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  double v68 = (char *)&v50 - v10;
  uint64_t v11 = sub_23D004E98();
  uint64_t v65 = *(void *)(v11 - 8);
  uint64_t v66 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_23D004FB8();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v54 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_23D004FD8();
  uint64_t v56 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD748);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD750);
  uint64_t v52 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD758);
  uint64_t v57 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD760);
  uint64_t v63 = *(void *)(v25 - 8);
  uint64_t v64 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v61 = (char *)&v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD768);
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v58 = (char *)&v50 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23D005038();
  uint64_t v69 = a2;
  uint64_t v74 = a2;
  uint64_t v75 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD770);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD778);
  uint64_t v29 = sub_23CEE8D90(&qword_268BCD780, &qword_268BCD778);
  uint64_t v76 = v28;
  uint64_t v77 = v29;
  swift_getOpaqueTypeConformance2();
  uint64_t v30 = v51;
  uint64_t v31 = v53;
  sub_23D0045C8();
  uint64_t v32 = sub_23CEE8D90(&qword_268BCD788, &qword_268BCD748);
  sub_23D0052F8();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_23D004FA8();
  sub_23D004FC8();
  uint64_t v76 = v17;
  uint64_t v77 = v32;
  uint64_t v33 = v55;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = MEMORY[0x263F1A480];
  sub_23D0053E8();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v33);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v22, v30);
  sub_23D004E78();
  LOBYTE(v22) = sub_23D005058();
  unsigned __int8 v36 = sub_23D005038();
  sub_23D005048();
  sub_23D005048();
  if (sub_23D005048() != v22) {
    sub_23D005048();
  }
  sub_23D005048();
  if (sub_23D005048() != v36) {
    sub_23D005048();
  }
  uint64_t v76 = v30;
  uint64_t v77 = v33;
  uint64_t v78 = OpaqueTypeConformance2;
  uint64_t v79 = v35;
  uint64_t v37 = swift_getOpaqueTypeConformance2();
  uint64_t v38 = v61;
  uint64_t v39 = v59;
  sub_23D005358();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v31, v66);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v24, v39);
  uint64_t v40 = swift_projectBox();
  uint64_t v42 = v70;
  uint64_t v41 = v71;
  uint64_t v43 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v67, v40, v71);
  uint64_t v44 = v68;
  sub_23D005748();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v42 + 8);
  v45(v43, v41);
  swift_getKeyPath();
  uint64_t v46 = (uint64_t)v72;
  sub_23D005768();
  swift_release();
  v45(v44, v41);
  sub_23D003DB8();
  uint64_t v76 = v39;
  uint64_t v77 = v37;
  swift_getOpaqueTypeConformance2();
  sub_23CF186CC((unint64_t *)&qword_268BCD440, MEMORY[0x263F07508]);
  uint64_t v47 = v58;
  uint64_t v48 = v64;
  sub_23D005308();
  sub_23CEE8BB4(v46, &qword_268BCD740);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v48);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v73, v47, v62);
}

uint64_t sub_23CF17168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D004E08();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD778);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  sub_23D004B08();
  int v13 = 0;
  sub_23CF186CC(&qword_268BCD790, MEMORY[0x263F19D28]);
  sub_23D006348();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD798);
  sub_23CF18094();
  sub_23D004588();
  sub_23CEE8D90(&qword_268BCD780, &qword_268BCD778);
  sub_23D005398();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23CF1737C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_23D004728();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD708);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_23D005738();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = v19;
  swift_getKeyPath();
  uint64_t v19 = v11;
  sub_23CF186CC((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
  sub_23D003DD8();
  swift_release();
  swift_beginAccess();
  uint64_t v12 = swift_bridgeObjectRetain();
  size_t v13 = sub_23CF18134(v12);
  swift_release();
  swift_bridgeObjectRelease();
  size_t v18 = v13;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v14, (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_23CF18548;
  *(void *)(v16 + 24) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD7B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD7B0);
  sub_23CEE8D90(&qword_268BCD7C0, &qword_268BCD7B8);
  sub_23CF186CC((unint64_t *)&qword_268BCD440, MEMORY[0x263F07508]);
  sub_23CEE8D90(&qword_268BCD7A8, &qword_268BCD7B0);
  return sub_23D0056E8();
}

uint64_t sub_23CF17744@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v45 = a1;
  uint64_t v4 = sub_23D004F18();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD7D0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EvaluationCard();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD7D8);
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v41 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD7E0);
  uint64_t v16 = v15 - 8;
  MEMORY[0x270FA5388](v15);
  size_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD7E8) - 8;
  MEMORY[0x270FA5388](v44);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF18668(a1, (uint64_t)v12);
  uint64_t v21 = &v12[*(int *)(v10 + 20)];
  type metadata accessor for BatchController();
  sub_23CF186CC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  *(void *)uint64_t v21 = sub_23D004618();
  v21[8] = v22 & 1;
  uint64_t v23 = &v12[*(int *)(v10 + 24)];
  uint64_t v24 = sub_23D003F98();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
  id v25 = objc_allocWithZone((Class)type metadata accessor for FBKEvaluationController(0));
  id v50 = FBKEvaluationController.init(subject:)((uint64_t)v9);
  sub_23D0055B8();
  uint64_t v26 = *((void *)&v51 + 1);
  *(void *)uint64_t v23 = v51;
  *((void *)v23 + 1) = v26;
  sub_23D004F08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD7F0);
  sub_23CF186CC(&qword_268BCD7F8, (void (*)(uint64_t))type metadata accessor for EvaluationCard);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD800);
  uint64_t v28 = sub_23D004908();
  uint64_t v29 = sub_23CF186CC(&qword_268BCD808, MEMORY[0x263F191C0]);
  *(void *)&long long v51 = v28;
  *((void *)&v51 + 1) = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v51 = v27;
  *((void *)&v51 + 1) = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = v41;
  sub_23D005368();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v6, v47);
  sub_23CF18714((uint64_t)v12);
  LOBYTE(v9) = sub_23D005078();
  uint64_t v32 = v42;
  uint64_t v33 = v43;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v18, v31, v43);
  double v34 = &v18[*(int *)(v16 + 44)];
  *double v34 = (char)v9;
  *(_OWORD *)(v34 + 8) = 0u;
  *(_OWORD *)(v34 + 24) = 0u;
  v34[40] = 1;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
  sub_23D004718();
  sub_23D004718();
  sub_23D005778();
  sub_23D0046C8();
  sub_23CEE82CC((uint64_t)v18, (uint64_t)v20, &qword_268BCD7E0);
  uint64_t v35 = &v20[*(int *)(v44 + 44)];
  long long v36 = v52;
  *(_OWORD *)uint64_t v35 = v51;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v53;
  sub_23CEE8BB4((uint64_t)v18, &qword_268BCD7E0);
  uint64_t v37 = v49;
  sub_23CEE82CC((uint64_t)v20, v49, &qword_268BCD7E8);
  uint64_t v38 = v37 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD7B0) + 52);
  uint64_t v39 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v38, v45, v39);
  return sub_23CEE8BB4((uint64_t)v20, &qword_268BCD7E8);
}

uint64_t sub_23CF17D44()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD800);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_23D004E18()) {
    double v4 = 1.0;
  }
  else {
    double v4 = 0.6;
  }
  sub_23D0057C8();
  double v6 = v5;
  double v8 = v7;
  uint64_t v9 = sub_23D004908();
  uint64_t v10 = sub_23CF186CC(&qword_268BCD808, MEMORY[0x263F191C0]);
  MEMORY[0x23ECF4120](v9, v10, v4, v6, v8);
  sub_23D004E18();
  v12[0] = v9;
  v12[1] = v10;
  swift_getOpaqueTypeConformance2();
  sub_23D0046B8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_23CF17F10@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD708);
  uint64_t v3 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))swift_allocBox();
  char v4 = *(unsigned char *)(v1 + 40);
  uint64_t v5 = swift_retain();
  sub_23CF39C9C(v5, v4);
  swift_release();
  type metadata accessor for DonationController();
  sub_23CF186CC((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
  sub_23D005758();
  *(void *)a1 = sub_23D004C58();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD710);
  sub_23CF1611C(v3, v1, (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(a1 + *(int *)(v6 + 44)));

  return swift_release();
}

uint64_t sub_23CF18010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23CF16808(a1, v2, a2);
}

unint64_t sub_23CF18028()
{
  unint64_t result = qword_268BCD730;
  if (!qword_268BCD730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD730);
  }
  return result;
}

uint64_t sub_23CF1807C()
{
  return sub_23CF17168(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_23CF1808C()
{
  return sub_23CF1737C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_23CF18094()
{
  unint64_t result = qword_268BCD7A0;
  if (!qword_268BCD7A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD798);
    sub_23CEE8D90(&qword_268BCD7A8, &qword_268BCD7B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD7A0);
  }
  return result;
}

size_t sub_23CF18134(uint64_t a1)
{
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD7C8);
  uint64_t v2 = MEMORY[0x270FA5388](v48);
  uint64_t v42 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v46 = (void *)((char *)v41 - v5);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)v41 - v6;
  uint64_t v47 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  uint64_t v45 = v10;
  v41[1] = a1;
  if (v10)
  {
    uint64_t v43 = (v9 + 32) & ~v9;
    uint64_t v12 = MEMORY[0x263F8EE78] + v43;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = *(void *)(type metadata accessor for BatchInteraction(0) - 8);
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v44 = *(void *)(v15 + 72);
    v41[2] = v9 | 7;
    uint64_t v17 = v11;
    size_t v18 = v42;
    while (1)
    {
      uint64_t v20 = v48;
      uint64_t v21 = (uint64_t)&v18[*(int *)(v48 + 48)];
      sub_23CF18668(v16, v21);
      uint64_t v22 = (uint64_t)v46;
      uint64_t v23 = (uint64_t)v46 + *(int *)(v20 + 48);
      *uint64_t v46 = v13;
      sub_23CF18770(v21, v23);
      size_t result = sub_23CEE83D8(v22, (uint64_t)v7, &qword_268BCD7C8);
      if (v14)
      {
        uint64_t v11 = v17;
        BOOL v19 = __OFSUB__(v14--, 1);
        if (v19) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v25 = v17[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v26 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1) {
          uint64_t v27 = 1;
        }
        else {
          uint64_t v27 = v26;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD810);
        uint64_t v28 = *(void *)(v47 + 72);
        uint64_t v29 = v43;
        uint64_t v11 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v11);
        if (!v28) {
          goto LABEL_34;
        }
        int64_t v30 = result - v29;
        if (result - v29 == 0x8000000000000000 && v28 == -1) {
          goto LABEL_35;
        }
        uint64_t v32 = v30 / v28;
        v11[2] = v27;
        void v11[3] = 2 * (v30 / v28);
        uint64_t v33 = (char *)v11 + v29;
        uint64_t v34 = v17[3] >> 1;
        uint64_t v35 = v34 * v28;
        if (v17[2])
        {
          if (v11 < v17 || v33 >= (char *)v17 + v43 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v11 != v17)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v17[2] = 0;
        }
        uint64_t v12 = (uint64_t)&v33[v35];
        uint64_t v37 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
        swift_release();
        size_t v18 = v42;
        BOOL v19 = __OFSUB__(v37, 1);
        uint64_t v14 = v37 - 1;
        if (v19)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v13;
      sub_23CEE83D8((uint64_t)v7, v12, &qword_268BCD7C8);
      v12 += *(void *)(v47 + 72);
      v16 += v44;
      uint64_t v17 = v11;
      if (v45 == v13) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v14 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v38 = v11[3];
  if (v38 >= 2)
  {
    unint64_t v39 = v38 >> 1;
    BOOL v19 = __OFSUB__(v39, v14);
    uint64_t v40 = v39 - v14;
    if (v19) {
      goto LABEL_36;
    }
    v11[2] = v40;
  }
  return (size_t)v11;
}

uint64_t sub_23CF184B8()
{
  uint64_t v1 = sub_23D004728();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_23CF18548@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_23D004728() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_23CF17744(a1, v6, a2);
}

uint64_t sub_23CF185D0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23CF18608(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD7C8);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_23CF18668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BatchInteraction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF186CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF18714(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EvaluationCard();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23CF18770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BatchInteraction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF187D8()
{
  return sub_23CEE8D90(&qword_268BCD818, &qword_268BCD820);
}

unint64_t sub_23CF18814(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD8B0);
  uint64_t v2 = (void *)sub_23D0060E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_23CF23884(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23CF18938(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD890);
  uint64_t v2 = (void *)sub_23D0060E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    unint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    sub_23CF24FD0(v5, v6);
    swift_bridgeObjectRetain();
    unint64_t result = sub_23CF238FC(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23CF18A58(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD8C8);
  uint64_t v2 = (void *)sub_23D0060E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_23CF23A1C((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23CF18B64(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD878);
  uint64_t v2 = (void *)sub_23D0060E8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_23CF23884(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t FBKSInteraction.feedbackForm(interaction:action:attachmentDirectory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[32] = a3;
  v4[33] = v3;
  v4[30] = a1;
  v4[31] = a2;
  uint64_t v5 = sub_23D004268();
  v4[34] = v5;
  v4[35] = *(void *)(v5 - 8);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD830);
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  uint64_t v6 = sub_23D004028();
  v4[40] = v6;
  v4[41] = *(void *)(v6 - 8);
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  v4[46] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23CF18E24, 0, 0);
}

uint64_t sub_23CF18E24()
{
  uint64_t v58 = v0[45];
  uint64_t v2 = v0[40];
  uint64_t v1 = v0[41];
  uint64_t v3 = sub_23CF24AE4();
  uint64_t v5 = v4;
  id v6 = objc_allocWithZone((Class)type metadata accessor for FBKFeedbackForm());
  id v7 = FBKFeedbackForm.init(identifier:)(v3, v5);
  v0[47] = v7;
  uint64_t v8 = &v7[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__largeTitleIcon];
  *uint64_t v8 = 0xD00000000000001BLL;
  v8[1] = 0x800000023D0104E0;
  swift_bridgeObjectRelease();
  v7[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__showInlineUserInfo] = 1;
  v7[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__hideAttachmentButton] = 1;
  char v9 = &v7[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_alwaysDeletesDrafts];
  swift_beginAccess();
  *char v9 = 1;
  char v10 = &v7[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_allowsAttachmentDragAndDrop];
  swift_beginAccess();
  *char v10 = 0;
  uint64_t v59 = v7;
  v7[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__disableAccountSwitching] = 1;
  sub_23D004038();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD838);
  uint64_t v11 = *(void *)(v1 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_23D008C70;
  unint64_t v51 = v12;
  unint64_t v14 = v13 + v12;
  uint64_t v15 = *(void (**)(void))(v1 + 104);
  ((void (*)(unint64_t, void, uint64_t))v15)(v14, *MEMORY[0x263F3C280], v2);
  unint64_t v56 = v14 + v11;
  v15();
  unint64_t v55 = v14 + 2 * v11;
  v15();
  unint64_t v54 = v14 + 3 * v11;
  v15();
  unint64_t v53 = v14 + 4 * v11;
  long long v52 = v15;
  v15();
  uint64_t v57 = *(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 16);
  v57(v58, v14, v2);
  sub_23CF25778(&qword_268BCD840, MEMORY[0x263F3C338]);
  LOBYTE(v10) = sub_23D005908();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v0[48] = v16;
  v0[49] = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  swift_bridgeObjectRetain();
  v16(v58, v2);
  if (v10) {
    goto LABEL_5;
  }
  uint64_t v17 = v0[45];
  uint64_t v18 = v0[40];
  v57(v17, v56, v18);
  char v19 = sub_23D005908();
  v16(v17, v18);
  if (v19) {
    goto LABEL_5;
  }
  uint64_t v20 = v0[45];
  uint64_t v21 = v0[40];
  v57(v20, v55, v21);
  char v22 = sub_23D005908();
  v16(v20, v21);
  if ((v22 & 1) != 0
    || (uint64_t v23 = v0[45], v24 = v0[40], v57(v23, v54, v24), v25 = sub_23D005908(), v16(v23, v24), (v25 & 1) != 0))
  {
LABEL_5:
    uint64_t v26 = v0[46];
    uint64_t v27 = v0[40];
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v16(v26, v27);
    uint64_t v28 = v59;
  }
  else
  {
    uint64_t v38 = v0[45];
    uint64_t v37 = v0[46];
    uint64_t v39 = v0[40];
    v57(v38, v53, v39);
    char v40 = sub_23D005908();
    v16(v38, v39);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v16(v37, v39);
    uint64_t v28 = v59;
    if ((v40 & 1) == 0)
    {
      uint64_t v41 = v0[44];
      uint64_t v42 = v0[40];
      sub_23D004038();
      uint64_t v43 = swift_allocObject();
      uint64_t v44 = v16;
      *(_OWORD *)(v43 + 16) = xmmword_23D008C80;
      ((void (*)(unint64_t, void, uint64_t))v52)(v43 + v51, *MEMORY[0x263F3C2F8], v42);
      char v45 = sub_23D005908();
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v28 = v59;
      swift_deallocClassInstance();
      uint64_t v46 = ((uint64_t (*)(uint64_t, uint64_t))v16)(v41, v42);
      if ((v45 & 1) == 0)
      {
        if (MEMORY[0x23ECF5E10](v46)) {
          goto LABEL_7;
        }
        uint64_t v48 = v0[42];
        uint64_t v47 = v0[43];
        uint64_t v49 = v0[40];
        sub_23D004038();
        ((void (*)(uint64_t, void, uint64_t))v52)(v48, *MEMORY[0x263F3C278], v49);
        char v50 = sub_23D005908();
        v44(v48, v49);
        v44(v47, v49);
        if (v50) {
          goto LABEL_7;
        }
      }
    }
  }
  uint64_t v29 = &v28[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_authenticationMethod];
  swift_beginAccess();
  *uint64_t v29 = 0;
LABEL_7:
  int64_t v30 = &v28[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_authenticationMethod];
  swift_beginAccess();
  if (*v30) {
    unint64_t v31 = 0xD000000000000026;
  }
  else {
    unint64_t v31 = 0xD000000000000028;
  }
  if (*v30) {
    unint64_t v32 = 0x800000023D010500;
  }
  else {
    unint64_t v32 = 0x800000023D010530;
  }
  uint64_t v33 = (unint64_t *)&v28[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__onBoardingKitIdentifier];
  swift_beginAccess();
  *uint64_t v33 = v31;
  v33[1] = v32;
  swift_bridgeObjectRelease();
  v28[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__useInlineChoices] = 1;
  v28[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__showUserSwitcherLast] = 1;
  uint64_t v34 = (void *)swift_task_alloc();
  v0[50] = v34;
  *uint64_t v34 = v0;
  v34[1] = sub_23CF195FC;
  uint64_t v35 = v0[32];
  return FBKSInteraction.writeAttachments(baseURL:)(v35);
}

uint64_t sub_23CF195FC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 408) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_23CF196FC, 0, 0);
}

uint64_t sub_23CF196FC()
{
  uint64_t v98 = v0;
  uint64_t v1 = v0[51];
  if (*(void *)(v1 + 16))
  {
    unint64_t v2 = sub_23CF239B0(0);
    if (v3)
    {
      uint64_t v4 = *(void *)(*(void *)(v0[51] + 56) + 16 * v2);
      swift_beginAccess();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_23CF1CB50(v4);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v1 + 16))
    {
      unint64_t v5 = sub_23CF239B0(1u);
      if (v6)
      {
        uint64_t v7 = *(void *)(*(void *)(v0[51] + 56) + 16 * v5);
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_23CF1CB50(v7);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v1 + 16))
      {
        sub_23CF239B0(2u);
        if (v8)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          uint64_t v9 = swift_bridgeObjectRetain();
          sub_23CF1CB50(v9);
          swift_endAccess();
          swift_bridgeObjectRelease();
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  char v10 = (void **)(v0 + 30);
  uint64_t v11 = (void (*)(uint64_t, uint64_t))v0[48];
  uint64_t v12 = v0[43];
  uint64_t v13 = v0[40];
  long long v90 = v0;
  sub_23D004038();
  uint64_t v14 = sub_23CFC0CF0();
  uint64_t v16 = v15;
  v11(v12, v13);
  swift_bridgeObjectRelease();
  sub_23D0059F8();
  sub_23CFC11C4();
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  long long v97 = 0uLL;
  sub_23CFE7E18((uint64_t *)&v97, v14, v16);
  swift_bridgeObjectRelease();
  long long v97 = xmmword_23D008C90;
  sub_23D004038();
  uint64_t v17 = sub_23CFC1650();
  uint64_t v19 = v18;
  v11(v12, v13);
  sub_23CFE7E18((uint64_t *)&v97, v17, v19);
  uint64_t v20 = v0;
  swift_bridgeObjectRelease();
  sub_23CF24D10(v97, *((unint64_t *)&v97 + 1));
  uint64_t v21 = sub_23D003FE8();
  if (v22)
  {
    long long v97 = xmmword_23D008CA0;
    sub_23CFE7E18((uint64_t *)&v97, v21, v22);
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = sub_23D0041C8();
  if (v24)
  {
    long long v97 = xmmword_23D008CB0;
    sub_23CFE7E18((uint64_t *)&v97, v23, v24);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_268BCCCA0 != -1) {
LABEL_62:
    }
      swift_once();
    char v25 = *v10;
    uint64_t v26 = sub_23D004498();
    __swift_project_value_buffer(v26, (uint64_t)qword_268BDAD40);
    id v27 = v25;
    uint64_t v28 = sub_23D004478();
    os_log_type_t v29 = sub_23D005C98();
    BOOL v30 = os_log_type_enabled(v28, v29);
    unint64_t v31 = *v10;
    if (v30)
    {
      uint64_t v93 = v20 + 29;
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      *(void *)&long long v97 = v95;
      *(_DWORD *)unint64_t v32 = 136315138;
      id v33 = v31;
      id v34 = objc_msgSend(v33, sel_description);
      uint64_t v35 = sub_23D005948();
      unint64_t v37 = v36;

      *uint64_t v93 = sub_23CF231B0(v35, v37, (uint64_t *)&v97);
      sub_23D005E48();
      swift_bridgeObjectRelease();

      uint64_t v20 = v90;
      _os_log_impl(&dword_23CEE3000, v28, v29, "No bundle identifier found in interaction [%s]", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v95, -1, -1);
      MEMORY[0x23ECF6610](v32, -1, -1);
    }
    else
    {
    }
  }
  char v10 = (void **)v20[47];
  long long v97 = xmmword_23D008CC0;
  uint64_t v38 = sub_23CFC1B64();
  sub_23CFE7E18((uint64_t *)&v97, v38, v39);
  swift_bridgeObjectRelease();
  uint64_t result = sub_23D004168();
  if (!result)
  {
LABEL_57:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v81 = (uint64_t (*)(uint64_t))v20[1];
    uint64_t v82 = v20[47];
    return v81(v82);
  }
  uint64_t v41 = result;
  int64_t v88 = 0;
  uint64_t v42 = -1;
  uint64_t v83 = result + 64;
  uint64_t v43 = -1 << *(unsigned char *)(result + 32);
  uint64_t v44 = v20[35];
  if (-v43 < 64) {
    uint64_t v42 = ~(-1 << -(char)v43);
  }
  unint64_t v45 = v42 & *(void *)(result + 64);
  uint64_t v94 = (void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
  uint64_t v86 = v20[35];
  uint64_t v87 = (void (**)(void))(v44 + 32);
  uint64_t v46 = (void (**)(uint64_t, uint64_t))(v44 + 8);
  int64_t v84 = (unint64_t)(63 - v43) >> 6;
  uint64_t v85 = result;
  uint64_t v92 = (void (**)(uint64_t, uint64_t))(v44 + 8);
  while (1)
  {
    if (v45)
    {
      unint64_t v47 = __clz(__rbit64(v45));
      uint64_t v48 = (v45 - 1) & v45;
      unint64_t v49 = v47 | (v88 << 6);
LABEL_27:
      uint64_t v50 = v20[38];
      (*(void (**)(uint64_t, unint64_t, void))(v86 + 16))(v50, *(void *)(v41 + 48) + *(void *)(v86 + 72) * v49, v20[34]);
      uint64_t v51 = *(void *)(v41 + 56);
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD850);
      *(void *)(v50 + *(int *)(v52 + 48)) = *(void *)(v51 + 8 * v49);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v50, 0, 1, v52);
      swift_bridgeObjectRetain();
      goto LABEL_46;
    }
    int64_t v53 = v88 + 1;
    if (__OFADD__(v88, 1))
    {
      __break(1u);
      goto LABEL_62;
    }
    if (v53 < v84)
    {
      unint64_t v54 = *(void *)(v83 + 8 * v53);
      if (v54) {
        goto LABEL_31;
      }
      int64_t v55 = v88 + 2;
      ++v88;
      if (v53 + 1 < v84)
      {
        unint64_t v54 = *(void *)(v83 + 8 * v55);
        if (v54) {
          goto LABEL_34;
        }
        int64_t v88 = v53 + 1;
        if (v53 + 2 < v84)
        {
          unint64_t v54 = *(void *)(v83 + 8 * (v53 + 2));
          if (v54)
          {
            v53 += 2;
            goto LABEL_31;
          }
          int64_t v55 = v53 + 3;
          int64_t v88 = v53 + 2;
          if (v53 + 3 < v84) {
            break;
          }
        }
      }
    }
LABEL_45:
    uint64_t v56 = v20[38];
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD850);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 1, 1, v57);
    uint64_t v48 = 0;
LABEL_46:
    uint64_t v58 = v20[39];
    sub_23CEE83D8(v20[38], v58, &qword_268BCD830);
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD850);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v58, 1, v59) == 1)
    {
      swift_release();
      goto LABEL_57;
    }
    unint64_t v89 = v48;
    uint64_t v60 = *(void *)(v20[39] + *(int *)(v59 + 48));
    (*v87)(v20[37]);
    char v10 = *(void ***)(v60 + 16);
    if (v10)
    {
      uint64_t v61 = (unint64_t *)(v60 + 40);
      do
      {
        uint64_t v66 = *(v61 - 1);
        unint64_t v65 = *v61;
        uint64_t v67 = qword_268BCCCA0;
        swift_bridgeObjectRetain();
        if (v67 != -1) {
          swift_once();
        }
        uint64_t v96 = v66;
        uint64_t v69 = v20[36];
        uint64_t v68 = v20[37];
        uint64_t v70 = v20[34];
        uint64_t v71 = sub_23D004498();
        __swift_project_value_buffer(v71, (uint64_t)qword_268BDAD40);
        (*v94)(v69, v68, v70);
        swift_bridgeObjectRetain_n();
        uint64_t v72 = sub_23D004478();
        os_log_type_t v73 = sub_23D005C88();
        BOOL v74 = os_log_type_enabled(v72, v73);
        uint64_t v75 = v20[36];
        uint64_t v76 = v20[34];
        if (v74)
        {
          uint64_t v77 = swift_slowAlloc();
          uint64_t v91 = swift_slowAlloc();
          *(void *)&long long v97 = v91;
          *(_DWORD *)uint64_t v77 = 136446467;
          sub_23CF25778(&qword_268BCD858, MEMORY[0x263F3C5D0]);
          uint64_t v78 = sub_23D0061F8();
          *(void *)(v77 + 4) = sub_23CF231B0(v78, v79, (uint64_t *)&v97);
          swift_bridgeObjectRelease();
          uint64_t v62 = *v92;
          (*v92)(v75, v76);
          *(_WORD *)(v77 + 12) = 2081;
          swift_bridgeObjectRetain();
          uint64_t v63 = v96;
          *(void *)(v77 + 14) = sub_23CF231B0(v96, v65, (uint64_t *)&v97);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_23CEE3000, v72, v73, "Pre-filling question-answer: %{public}s -> %{private}s", (uint8_t *)v77, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23ECF6610](v91, -1, -1);
          uint64_t v80 = v77;
          uint64_t v20 = v90;
          MEMORY[0x23ECF6610](v80, -1, -1);
        }
        else
        {
          uint64_t v62 = *v92;
          (*v92)(v20[36], v20[34]);
          swift_bridgeObjectRelease_n();

          uint64_t v63 = v96;
        }
        *(void *)&long long v97 = sub_23D004258();
        *((void *)&v97 + 1) = v64;
        sub_23CFE7E18((uint64_t *)&v97, v63, v65);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v61 += 2;
        char v10 = (void **)((char *)v10 - 1);
      }
      while (v10);
      swift_bridgeObjectRelease();
      uint64_t v41 = v85;
      uint64_t v46 = v92;
      uint64_t result = ((uint64_t (*)(void, void))v62)(v20[37], v20[34]);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t result = ((uint64_t (*)(void, void))*v46)(v20[37], v20[34]);
    }
    unint64_t v45 = v89;
  }
  unint64_t v54 = *(void *)(v83 + 8 * v55);
  if (v54)
  {
LABEL_34:
    int64_t v53 = v55;
LABEL_31:
    uint64_t v48 = (v54 - 1) & v54;
    unint64_t v49 = __clz(__rbit64(v54)) + (v53 << 6);
    int64_t v88 = v53;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v53 = v55 + 1;
    if (__OFADD__(v55, 1)) {
      break;
    }
    if (v53 >= v84)
    {
      int64_t v88 = v84 - 1;
      goto LABEL_45;
    }
    unint64_t v54 = *(void *)(v83 + 8 * v53);
    ++v55;
    if (v54) {
      goto LABEL_31;
    }
  }
  __break(1u);
  return result;
}

uint64_t FBKSInteraction.writeAttachments(baseURL:)(uint64_t a1)
{
  v2[17] = a1;
  v2[18] = v1;
  uint64_t v3 = sub_23D0041B8();
  v2[19] = v3;
  v2[20] = *(void *)(v3 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD498);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD4A8);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  uint64_t v4 = sub_23D004138();
  v2[28] = v4;
  v2[29] = *(void *)(v4 - 8);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  uint64_t v5 = sub_23D003CE8();
  v2[33] = v5;
  v2[34] = *(void *)(v5 - 8);
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_23CF1A4F8, 0, 0);
}

uint64_t sub_23CF1A4F8()
{
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = MEMORY[0x263F8EE78];
  unint64_t v4 = sub_23CF247D0(MEMORY[0x263F8EE78]);
  *(void *)(v0 + 296) = v4;
  type metadata accessor for FBKEvaluationController(0);
  sub_23CFC1EB0(v2, v1);
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v7 = *(void *)(v0 + 216);
  (*(void (**)(void, void, void))(*(void *)(v0 + 272) + 32))(*(void *)(v0 + 288), *(void *)(v0 + 280), *(void *)(v0 + 264));
  sub_23CF1D1C4();
  sub_23CF1ED30();
  sub_23D004178();
  char v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  *(void *)(v0 + 304) = v8;
  *(void *)(v0 + 312) = (v5 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v8(v7, 1, v6) != 1)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 232) + 32))(*(void *)(v0 + 256), *(void *)(v0 + 216), *(void *)(v0 + 224));
    sub_23D004068();
    *(unsigned char *)(v0 + 424) = 0;
    BOOL v30 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v30;
    *BOOL v30 = v0;
    v30[1] = sub_23CF1AF1C;
    uint64_t v31 = *(void *)(v0 + 288);
    uint64_t v32 = *(void *)(v0 + 256);
    uint64_t v33 = *(void *)(v0 + 200);
    uint64_t v34 = v0 + 16;
    uint64_t v35 = (unsigned char *)(v0 + 424);
LABEL_14:
    return sub_23CF1F328(v34, v32, v31, v33, v35);
  }
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v11 = *(void *)(v0 + 152);
  uint64_t v10 = *(void *)(v0 + 160);
  sub_23CEE8BB4(*(void *)(v0 + 216), &qword_268BCD4A8);
  sub_23D004068();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v9, 1, v11) != 1)
  {
    unint64_t v36 = (unsigned char *)(v0 + 422);
    uint64_t v37 = v0 + 32;
    (*(void (**)(void, void, void))(*(void *)(v0 + 160) + 32))(*(void *)(v0 + 176), *(void *)(v0 + 192), *(void *)(v0 + 152));
    *(unsigned char *)(v0 + 422) = 0;
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v38;
    *uint64_t v38 = v0;
    v38[1] = sub_23CF1B628;
    uint64_t v39 = *(void *)(v0 + 288);
    uint64_t v40 = *(void *)(v0 + 176);
LABEL_18:
    return sub_23CF1FDC4(v37, v40, v39, v36);
  }
  sub_23CEE8BB4(*(void *)(v0 + 192), &qword_268BCD498);
  *(void *)(v0 + 336) = v4;
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 304);
  uint64_t v13 = *(void *)(v0 + 224);
  uint64_t v14 = *(void *)(v0 + 208);
  sub_23D004198();
  if (v12(v14, 1, v13) != 1)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 232) + 32))(*(void *)(v0 + 248), *(void *)(v0 + 208), *(void *)(v0 + 224));
    sub_23D004158();
    *(unsigned char *)(v0 + 420) = 1;
    uint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v41;
    *uint64_t v41 = v0;
    v41[1] = sub_23CF1BD10;
    uint64_t v31 = *(void *)(v0 + 288);
    uint64_t v32 = *(void *)(v0 + 248);
    uint64_t v33 = *(void *)(v0 + 200);
    uint64_t v34 = v0 + 80;
    uint64_t v35 = (unsigned char *)(v0 + 420);
    goto LABEL_14;
  }
  uint64_t v15 = *(void *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 152);
  uint64_t v16 = *(void *)(v0 + 160);
  sub_23CEE8BB4(*(void *)(v0 + 208), &qword_268BCD4A8);
  sub_23D004158();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v15, 1, v17) != 1)
  {
    unint64_t v36 = (unsigned char *)(v0 + 421);
    uint64_t v37 = v0 + 96;
    (*(void (**)(void, void, void))(*(void *)(v0 + 160) + 32))(*(void *)(v0 + 168), *(void *)(v0 + 184), *(void *)(v0 + 152));
    *(unsigned char *)(v0 + 421) = 1;
    uint64_t v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v42;
    *uint64_t v42 = v0;
    v42[1] = sub_23CF1C244;
    uint64_t v39 = *(void *)(v0 + 288);
    uint64_t v40 = *(void *)(v0 + 168);
    goto LABEL_18;
  }
  sub_23CEE8BB4(*(void *)(v0 + 184), &qword_268BCD498);
  *(void *)(v0 + 360) = v4;
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v3;
  uint64_t v18 = *(void *)(sub_23D003FD8() + 16);
  swift_bridgeObjectRelease();
  if (v18)
  {
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v19 = *(void **)(v0 + 144);
    uint64_t v20 = sub_23D004498();
    __swift_project_value_buffer(v20, (uint64_t)qword_268BDAD40);
    id v21 = v19;
    uint64_t v22 = sub_23D004478();
    os_log_type_t v23 = sub_23D005C78();
    BOOL v24 = os_log_type_enabled(v22, v23);
    char v25 = *(void **)(v0 + 144);
    if (v24)
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 134217984;
      uint64_t v27 = *(void *)(sub_23D003FD8() + 16);
      swift_bridgeObjectRelease();

      *(void *)(v0 + 112) = v27;
      sub_23D005E48();

      _os_log_impl(&dword_23CEE3000, v22, v23, "Will attach [%ld] annotated extra content.", v26, 0xCu);
      MEMORY[0x23ECF6610](v26, -1, -1);
    }
    else
    {

      uint64_t v22 = *(NSObject **)(v0 + 144);
    }
  }
  uint64_t v43 = sub_23D003FD8();
  *(void *)(v0 + 368) = v43;
  uint64_t v44 = *(void *)(v43 + 16);
  *(void *)(v0 + 376) = v44;
  if (v44)
  {
    uint64_t v45 = *(void *)(v0 + 224);
    uint64_t v46 = *(void *)(v0 + 232);
    unint64_t v47 = *(void (**)(void, unint64_t, uint64_t))(v46 + 16);
    v46 += 16;
    int v48 = *(_DWORD *)(v46 + 64);
    *(_DWORD *)(v0 + 416) = v48;
    *(void *)(v0 + 384) = *(void *)(v46 + 56);
    *(void *)(v0 + 392) = v47;
    *(void *)(v0 + 400) = 0;
    uint64_t v49 = *(void *)(v0 + 200);
    uint64_t v51 = *(void *)(v0 + 152);
    uint64_t v50 = *(void *)(v0 + 160);
    v47(*(void *)(v0 + 240), v43 + ((v48 + 32) & ~(unint64_t)v48), v45);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v49, 1, 1, v51);
    *(unsigned char *)(v0 + 423) = 2;
    uint64_t v52 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v52;
    *uint64_t v52 = v0;
    v52[1] = sub_23CF1C754;
    uint64_t v31 = *(void *)(v0 + 288);
    uint64_t v32 = *(void *)(v0 + 240);
    uint64_t v33 = *(void *)(v0 + 200);
    uint64_t v34 = v0 + 64;
    uint64_t v35 = (unsigned char *)(v0 + 423);
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  uint64_t v53 = *(void *)(v0 + 360);
  uint64_t v54 = *(void *)(v0 + 288);
  uint64_t v55 = *(void *)(v0 + 264);
  uint64_t v56 = *(void *)(v0 + 272);
  uint64_t v57 = *(void *)(v0 + 48);
  uint64_t v58 = *(void *)(v0 + 56);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23CF2440C(v57, v58, 2, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v28(v53);
}

uint64_t sub_23CF1AF1C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 200);
  swift_task_dealloc();
  sub_23CEE8BB4(v1, &qword_268BCD498);
  return MEMORY[0x270FA2498](sub_23CF1B03C, 0, 0);
}

uint64_t sub_23CF1B03C()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23CF2440C(v5, v6, 0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  *(void *)(v0 + 336) = v1;
  char v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 224);
  uint64_t v10 = *(void *)(v0 + 208);
  sub_23D004198();
  if (v8(v10, 1, v9) != 1)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 232) + 32))(*(void *)(v0 + 248), *(void *)(v0 + 208), *(void *)(v0 + 224));
    sub_23D004158();
    *(unsigned char *)(v0 + 420) = 1;
    char v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v25;
    *char v25 = v0;
    v25[1] = sub_23CF1BD10;
    uint64_t v26 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 248);
    uint64_t v28 = *(void *)(v0 + 200);
    uint64_t v29 = v0 + 80;
    BOOL v30 = (unsigned char *)(v0 + 420);
LABEL_16:
    return sub_23CF1F328(v29, v27, v26, v28, v30);
  }
  uint64_t v11 = *(void *)(v0 + 184);
  uint64_t v12 = *(void *)(v0 + 152);
  uint64_t v13 = *(void *)(v0 + 160);
  sub_23CEE8BB4(*(void *)(v0 + 208), &qword_268BCD4A8);
  sub_23D004158();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_23CEE8BB4(*(void *)(v0 + 184), &qword_268BCD498);
    *(void *)(v0 + 360) = v1;
    uint64_t v14 = MEMORY[0x263F8EE78];
    *(void *)(v0 + 48) = MEMORY[0x263F8EE78];
    *(void *)(v0 + 56) = v14;
    uint64_t v15 = *(void *)(sub_23D003FD8() + 16);
    swift_bridgeObjectRelease();
    if (v15)
    {
      if (qword_268BCCCA0 != -1) {
        swift_once();
      }
      uint64_t v16 = *(void **)(v0 + 144);
      uint64_t v17 = sub_23D004498();
      __swift_project_value_buffer(v17, (uint64_t)qword_268BDAD40);
      id v18 = v16;
      uint64_t v19 = sub_23D004478();
      os_log_type_t v20 = sub_23D005C78();
      BOOL v21 = os_log_type_enabled(v19, v20);
      uint64_t v22 = *(void **)(v0 + 144);
      if (v21)
      {
        os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v23 = 134217984;
        uint64_t v24 = *(void *)(sub_23D003FD8() + 16);
        swift_bridgeObjectRelease();

        *(void *)(v0 + 112) = v24;
        sub_23D005E48();

        _os_log_impl(&dword_23CEE3000, v19, v20, "Will attach [%ld] annotated extra content.", v23, 0xCu);
        MEMORY[0x23ECF6610](v23, -1, -1);
      }
      else
      {

        uint64_t v19 = *(NSObject **)(v0 + 144);
      }
    }
    uint64_t v35 = sub_23D003FD8();
    *(void *)(v0 + 368) = v35;
    uint64_t v36 = *(void *)(v35 + 16);
    *(void *)(v0 + 376) = v36;
    if (v36)
    {
      uint64_t v37 = *(void *)(v0 + 224);
      uint64_t v38 = *(void *)(v0 + 232);
      uint64_t v39 = *(void (**)(void, unint64_t, uint64_t))(v38 + 16);
      v38 += 16;
      int v40 = *(_DWORD *)(v38 + 64);
      *(_DWORD *)(v0 + 416) = v40;
      *(void *)(v0 + 384) = *(void *)(v38 + 56);
      *(void *)(v0 + 392) = v39;
      *(void *)(v0 + 400) = 0;
      uint64_t v41 = *(void *)(v0 + 200);
      uint64_t v43 = *(void *)(v0 + 152);
      uint64_t v42 = *(void *)(v0 + 160);
      v39(*(void *)(v0 + 240), v35 + ((v40 + 32) & ~(unint64_t)v40), v37);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v41, 1, 1, v43);
      *(unsigned char *)(v0 + 423) = 2;
      uint64_t v44 = (void *)swift_task_alloc();
      *(void *)(v0 + 408) = v44;
      *uint64_t v44 = v0;
      v44[1] = sub_23CF1C754;
      uint64_t v26 = *(void *)(v0 + 288);
      uint64_t v27 = *(void *)(v0 + 240);
      uint64_t v28 = *(void *)(v0 + 200);
      uint64_t v29 = v0 + 64;
      BOOL v30 = (unsigned char *)(v0 + 423);
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void *)(v0 + 360);
    uint64_t v46 = *(void *)(v0 + 288);
    uint64_t v47 = *(void *)(v0 + 264);
    uint64_t v48 = *(void *)(v0 + 272);
    uint64_t v49 = *(void *)(v0 + 48);
    uint64_t v50 = *(void *)(v0 + 56);
    char v51 = swift_isUniquelyReferenced_nonNull_native();
    sub_23CF2440C(v49, v50, 2, v51);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v52 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v52(v45);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 160) + 32))(*(void *)(v0 + 168), *(void *)(v0 + 184), *(void *)(v0 + 152));
    *(unsigned char *)(v0 + 421) = 1;
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_23CF1C244;
    uint64_t v32 = *(void *)(v0 + 288);
    uint64_t v33 = *(void *)(v0 + 168);
    return sub_23CF1FDC4(v0 + 96, v33, v32, (unsigned char *)(v0 + 421));
  }
}

uint64_t sub_23CF1B628()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_23CF1B724, 0, 0);
}

uint64_t sub_23CF1B724()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23CF2440C(v5, v6, 0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  *(void *)(v0 + 336) = v1;
  char v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 224);
  uint64_t v10 = *(void *)(v0 + 208);
  sub_23D004198();
  if (v8(v10, 1, v9) != 1)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 232) + 32))(*(void *)(v0 + 248), *(void *)(v0 + 208), *(void *)(v0 + 224));
    sub_23D004158();
    *(unsigned char *)(v0 + 420) = 1;
    char v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v25;
    *char v25 = v0;
    v25[1] = sub_23CF1BD10;
    uint64_t v26 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 248);
    uint64_t v28 = *(void *)(v0 + 200);
    uint64_t v29 = v0 + 80;
    BOOL v30 = (unsigned char *)(v0 + 420);
LABEL_16:
    return sub_23CF1F328(v29, v27, v26, v28, v30);
  }
  uint64_t v11 = *(void *)(v0 + 184);
  uint64_t v12 = *(void *)(v0 + 152);
  uint64_t v13 = *(void *)(v0 + 160);
  sub_23CEE8BB4(*(void *)(v0 + 208), &qword_268BCD4A8);
  sub_23D004158();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_23CEE8BB4(*(void *)(v0 + 184), &qword_268BCD498);
    *(void *)(v0 + 360) = v1;
    uint64_t v14 = MEMORY[0x263F8EE78];
    *(void *)(v0 + 48) = MEMORY[0x263F8EE78];
    *(void *)(v0 + 56) = v14;
    uint64_t v15 = *(void *)(sub_23D003FD8() + 16);
    swift_bridgeObjectRelease();
    if (v15)
    {
      if (qword_268BCCCA0 != -1) {
        swift_once();
      }
      uint64_t v16 = *(void **)(v0 + 144);
      uint64_t v17 = sub_23D004498();
      __swift_project_value_buffer(v17, (uint64_t)qword_268BDAD40);
      id v18 = v16;
      uint64_t v19 = sub_23D004478();
      os_log_type_t v20 = sub_23D005C78();
      BOOL v21 = os_log_type_enabled(v19, v20);
      uint64_t v22 = *(void **)(v0 + 144);
      if (v21)
      {
        os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v23 = 134217984;
        uint64_t v24 = *(void *)(sub_23D003FD8() + 16);
        swift_bridgeObjectRelease();

        *(void *)(v0 + 112) = v24;
        sub_23D005E48();

        _os_log_impl(&dword_23CEE3000, v19, v20, "Will attach [%ld] annotated extra content.", v23, 0xCu);
        MEMORY[0x23ECF6610](v23, -1, -1);
      }
      else
      {

        uint64_t v19 = *(NSObject **)(v0 + 144);
      }
    }
    uint64_t v35 = sub_23D003FD8();
    *(void *)(v0 + 368) = v35;
    uint64_t v36 = *(void *)(v35 + 16);
    *(void *)(v0 + 376) = v36;
    if (v36)
    {
      uint64_t v37 = *(void *)(v0 + 224);
      uint64_t v38 = *(void *)(v0 + 232);
      uint64_t v39 = *(void (**)(void, unint64_t, uint64_t))(v38 + 16);
      v38 += 16;
      int v40 = *(_DWORD *)(v38 + 64);
      *(_DWORD *)(v0 + 416) = v40;
      *(void *)(v0 + 384) = *(void *)(v38 + 56);
      *(void *)(v0 + 392) = v39;
      *(void *)(v0 + 400) = 0;
      uint64_t v41 = *(void *)(v0 + 200);
      uint64_t v43 = *(void *)(v0 + 152);
      uint64_t v42 = *(void *)(v0 + 160);
      v39(*(void *)(v0 + 240), v35 + ((v40 + 32) & ~(unint64_t)v40), v37);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v41, 1, 1, v43);
      *(unsigned char *)(v0 + 423) = 2;
      uint64_t v44 = (void *)swift_task_alloc();
      *(void *)(v0 + 408) = v44;
      *uint64_t v44 = v0;
      v44[1] = sub_23CF1C754;
      uint64_t v26 = *(void *)(v0 + 288);
      uint64_t v27 = *(void *)(v0 + 240);
      uint64_t v28 = *(void *)(v0 + 200);
      uint64_t v29 = v0 + 64;
      BOOL v30 = (unsigned char *)(v0 + 423);
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void *)(v0 + 360);
    uint64_t v46 = *(void *)(v0 + 288);
    uint64_t v47 = *(void *)(v0 + 264);
    uint64_t v48 = *(void *)(v0 + 272);
    uint64_t v49 = *(void *)(v0 + 48);
    uint64_t v50 = *(void *)(v0 + 56);
    char v51 = swift_isUniquelyReferenced_nonNull_native();
    sub_23CF2440C(v49, v50, 2, v51);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v52 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v52(v45);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 160) + 32))(*(void *)(v0 + 168), *(void *)(v0 + 184), *(void *)(v0 + 152));
    *(unsigned char *)(v0 + 421) = 1;
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_23CF1C244;
    uint64_t v32 = *(void *)(v0 + 288);
    uint64_t v33 = *(void *)(v0 + 168);
    return sub_23CF1FDC4(v0 + 96, v33, v32, (unsigned char *)(v0 + 421));
  }
}

uint64_t sub_23CF1BD10()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 200);
  swift_task_dealloc();
  sub_23CEE8BB4(v1, &qword_268BCD498);
  return MEMORY[0x270FA2498](sub_23CF1BE30, 0, 0);
}

uint64_t sub_23CF1BE30()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 88);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23CF2440C(v5, v6, 1, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 48) = MEMORY[0x263F8EE78];
  *(void *)(v0 + 360) = v1;
  *(void *)(v0 + 56) = v8;
  uint64_t v9 = *(void *)(sub_23D003FD8() + 16);
  swift_bridgeObjectRelease();
  if (v9)
  {
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v10 = *(void **)(v0 + 144);
    uint64_t v11 = sub_23D004498();
    __swift_project_value_buffer(v11, (uint64_t)qword_268BDAD40);
    id v12 = v10;
    uint64_t v13 = sub_23D004478();
    os_log_type_t v14 = sub_23D005C78();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = *(void **)(v0 + 144);
    if (v15)
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 134217984;
      uint64_t v18 = *(void *)(sub_23D003FD8() + 16);
      swift_bridgeObjectRelease();

      *(void *)(v0 + 112) = v18;
      sub_23D005E48();

      _os_log_impl(&dword_23CEE3000, v13, v14, "Will attach [%ld] annotated extra content.", v17, 0xCu);
      MEMORY[0x23ECF6610](v17, -1, -1);
    }
    else
    {

      uint64_t v13 = *(NSObject **)(v0 + 144);
    }
  }
  uint64_t v19 = sub_23D003FD8();
  *(void *)(v0 + 368) = v19;
  uint64_t v20 = *(void *)(v19 + 16);
  *(void *)(v0 + 376) = v20;
  if (v20)
  {
    uint64_t v21 = *(void *)(v0 + 224);
    uint64_t v22 = *(void *)(v0 + 232);
    os_log_type_t v23 = *(void (**)(void, unint64_t, uint64_t))(v22 + 16);
    v22 += 16;
    int v24 = *(_DWORD *)(v22 + 64);
    *(_DWORD *)(v0 + 416) = v24;
    *(void *)(v0 + 384) = *(void *)(v22 + 56);
    *(void *)(v0 + 392) = v23;
    *(void *)(v0 + 400) = 0;
    uint64_t v25 = *(void *)(v0 + 200);
    uint64_t v27 = *(void *)(v0 + 152);
    uint64_t v26 = *(void *)(v0 + 160);
    v23(*(void *)(v0 + 240), v19 + ((v24 + 32) & ~(unint64_t)v24), v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v25, 1, 1, v27);
    *(unsigned char *)(v0 + 423) = 2;
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_23CF1C754;
    uint64_t v29 = *(void *)(v0 + 288);
    uint64_t v30 = *(void *)(v0 + 240);
    uint64_t v31 = *(void *)(v0 + 200);
    return sub_23CF1F328(v0 + 64, v30, v29, v31, (unsigned char *)(v0 + 423));
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void *)(v0 + 360);
    uint64_t v34 = *(void *)(v0 + 288);
    uint64_t v35 = *(void *)(v0 + 264);
    uint64_t v36 = *(void *)(v0 + 272);
    uint64_t v37 = *(void *)(v0 + 48);
    uint64_t v38 = *(void *)(v0 + 56);
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    sub_23CF2440C(v37, v38, 2, v39);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v40 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v40(v33);
  }
}

uint64_t sub_23CF1C244()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_23CF1C340, 0, 0);
}

uint64_t sub_23CF1C340()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 104);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23CF2440C(v5, v6, 1, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 48) = MEMORY[0x263F8EE78];
  *(void *)(v0 + 360) = v1;
  *(void *)(v0 + 56) = v8;
  uint64_t v9 = *(void *)(sub_23D003FD8() + 16);
  swift_bridgeObjectRelease();
  if (v9)
  {
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v10 = *(void **)(v0 + 144);
    uint64_t v11 = sub_23D004498();
    __swift_project_value_buffer(v11, (uint64_t)qword_268BDAD40);
    id v12 = v10;
    uint64_t v13 = sub_23D004478();
    os_log_type_t v14 = sub_23D005C78();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = *(void **)(v0 + 144);
    if (v15)
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 134217984;
      uint64_t v18 = *(void *)(sub_23D003FD8() + 16);
      swift_bridgeObjectRelease();

      *(void *)(v0 + 112) = v18;
      sub_23D005E48();

      _os_log_impl(&dword_23CEE3000, v13, v14, "Will attach [%ld] annotated extra content.", v17, 0xCu);
      MEMORY[0x23ECF6610](v17, -1, -1);
    }
    else
    {

      uint64_t v13 = *(NSObject **)(v0 + 144);
    }
  }
  uint64_t v19 = sub_23D003FD8();
  *(void *)(v0 + 368) = v19;
  uint64_t v20 = *(void *)(v19 + 16);
  *(void *)(v0 + 376) = v20;
  if (v20)
  {
    uint64_t v21 = *(void *)(v0 + 224);
    uint64_t v22 = *(void *)(v0 + 232);
    os_log_type_t v23 = *(void (**)(void, unint64_t, uint64_t))(v22 + 16);
    v22 += 16;
    int v24 = *(_DWORD *)(v22 + 64);
    *(_DWORD *)(v0 + 416) = v24;
    *(void *)(v0 + 384) = *(void *)(v22 + 56);
    *(void *)(v0 + 392) = v23;
    *(void *)(v0 + 400) = 0;
    uint64_t v25 = *(void *)(v0 + 200);
    uint64_t v27 = *(void *)(v0 + 152);
    uint64_t v26 = *(void *)(v0 + 160);
    v23(*(void *)(v0 + 240), v19 + ((v24 + 32) & ~(unint64_t)v24), v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v25, 1, 1, v27);
    *(unsigned char *)(v0 + 423) = 2;
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_23CF1C754;
    uint64_t v29 = *(void *)(v0 + 288);
    uint64_t v30 = *(void *)(v0 + 240);
    uint64_t v31 = *(void *)(v0 + 200);
    return sub_23CF1F328(v0 + 64, v30, v29, v31, (unsigned char *)(v0 + 423));
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void *)(v0 + 360);
    uint64_t v34 = *(void *)(v0 + 288);
    uint64_t v35 = *(void *)(v0 + 264);
    uint64_t v36 = *(void *)(v0 + 272);
    uint64_t v37 = *(void *)(v0 + 48);
    uint64_t v38 = *(void *)(v0 + 56);
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    sub_23CF2440C(v37, v38, 2, v39);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v40 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v40(v33);
  }
}

uint64_t sub_23CF1C754()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 200);
  swift_task_dealloc();
  sub_23CEE8BB4(v1, &qword_268BCD498);
  return MEMORY[0x270FA2498](sub_23CF1C874, 0, 0);
}

uint64_t sub_23CF1C874()
{
  uint64_t v25 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 400) + 1;
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_23CF1CD30(v5);
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_23CF1CB50(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4 == v25)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)(v0 + 360);
    uint64_t v8 = *(void *)(v0 + 288);
    uint64_t v9 = *(void *)(v0 + 264);
    uint64_t v10 = *(void *)(v0 + 272);
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v12 = *(void *)(v0 + 56);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23CF2440C(v11, v12, 2, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v14(v7);
  }
  else
  {
    uint64_t v16 = *(void (**)(void, unint64_t, void))(v0 + 392);
    uint64_t v17 = *(void *)(v0 + 400) + 1;
    *(void *)(v0 + 400) = v17;
    uint64_t v18 = *(void *)(v0 + 200);
    uint64_t v20 = *(void *)(v0 + 152);
    uint64_t v19 = *(void *)(v0 + 160);
    v16(*(void *)(v0 + 240), *(void *)(v0 + 368)+ ((*(unsigned __int8 *)(v0 + 416) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 416))+ *(void *)(v0 + 384) * v17, *(void *)(v0 + 224));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v18, 1, 1, v20);
    *(unsigned char *)(v0 + 423) = 2;
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_23CF1C754;
    uint64_t v22 = *(void *)(v0 + 288);
    uint64_t v23 = *(void *)(v0 + 240);
    uint64_t v24 = *(void *)(v0 + 200);
    return sub_23CF1F328(v0 + 64, v23, v22, v24, (unsigned char *)(v0 + 423));
  }
}

uint64_t sub_23CF1CB50(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_23CF22518(isUniquelyReferenced_nonNull_native, v23, 1, v3, &qword_268BCD8D8, MEMORY[0x263F06EA8], MEMORY[0x263F06EA8]);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(sub_23D003CE8() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

uint64_t sub_23CF1CD30(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  unint64_t v3 = sub_23CF229EC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

uint64_t sub_23CF1CEA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_23CF22518(isUniquelyReferenced_nonNull_native, v22, 1, v3, &qword_268BCD888, MEMORY[0x263F07508], MEMORY[0x263F07508]);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_23D003DB8() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

double FBKSInteraction.idealFeedbackUIHeight.getter()
{
  uint64_t v0 = sub_23D004028();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  int64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v10 - v5;
  sub_23D004038();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, *MEMORY[0x263F3C318], v0);
  char v7 = MEMORY[0x23ECF3A90](v6, v4);
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  double result = 700.0;
  if (v7) {
    return 800.0;
  }
  return result;
}

uint64_t sub_23CF1D1C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD8F8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v167 = (char *)v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v152 - v5;
  uint64_t v171 = sub_23D0040F8();
  uint64_t v176 = *(void (***)(char *, uint64_t))(v171 - 8);
  MEMORY[0x270FA5388](v171);
  uint64_t v169 = (char *)v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_23D004028();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v172 = (char *)v152 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v173 = (char *)v152 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v152 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD4A8);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v175 = (void (*)(char *, uint64_t))((char *)v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v170 = (char *)v152 - v20;
  MEMORY[0x270FA5388](v19);
  int64_t v22 = (char *)v152 - v21;
  uint64_t v23 = sub_23D004138();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v177 = (char *)v152 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)v152 - v27;
  sub_23D004178();
  uint64_t v174 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v174(v22, 1, v23) == 1) {
    return sub_23CEE8BB4((uint64_t)v22, &qword_268BCD4A8);
  }
  uint64_t v165 = v24 + 48;
  uint64_t v162 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v163 = v24 + 32;
  v162(v28, v22, v23);
  sub_23D004038();
  uint64_t v160 = *(uint64_t (**)(char *, uint64_t))(v9 + 88);
  uint64_t v161 = v9 + 88;
  int v30 = v160(v15, v8);
  int v159 = *MEMORY[0x263F3C330];
  uint64_t v166 = v8;
  uint64_t v164 = v9;
  uint64_t v168 = v24;
  if (v30 == v159)
  {
    uint64_t v31 = v8;
    uint64_t v32 = v0;
    (*(void (**)(char *, uint64_t))(v9 + 96))(v15, v31);
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if (v30 == *MEMORY[0x263F3C2C8] || v30 == *MEMORY[0x263F3C2B8]) {
    goto LABEL_11;
  }
  uint64_t v32 = v0;
  if (v30 == *MEMORY[0x263F3C270]) {
    goto LABEL_5;
  }
  if (v30 == *MEMORY[0x263F3C2D8])
  {
    uint64_t v48 = v176;
    uint64_t v71 = v169;
    uint64_t v72 = v171;
    ((void (*)(char *, void, uint64_t))v176[13])(v169, *MEMORY[0x263F3C3C0], v171);
    os_log_type_t v73 = v170;
    sub_23D004088();
    v48[1](v71, v72);
    uint64_t v24 = v168;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v168 + 56))(v73, 0, 1, v23);
LABEL_34:
    uint64_t v1 = v0;
    sub_23D004188();
    goto LABEL_16;
  }
  uint64_t v24 = v168;
  if (v30 == *MEMORY[0x263F3C280])
  {
    uint64_t v46 = (unsigned int *)MEMORY[0x263F3C3D8];
    goto LABEL_12;
  }
  if (v30 == *MEMORY[0x263F3C298])
  {
    uint64_t v46 = (unsigned int *)MEMORY[0x263F3C4A0];
    goto LABEL_12;
  }
  if (v30 == *MEMORY[0x263F3C288])
  {
    sub_23D004118();
    uint64_t v48 = v176;
    int v85 = ((uint64_t (*)(char *, uint64_t, uint64_t))v176[6])(v6, 1, v171);
    sub_23CEE8BB4((uint64_t)v6, &qword_268BCD8F8);
    if (v85 == 1)
    {
      uint64_t v47 = *MEMORY[0x263F3C428];
      goto LABEL_13;
    }
  }
  else
  {
    if (v30 == *MEMORY[0x263F3C2C0])
    {
      uint64_t v46 = (unsigned int *)MEMORY[0x263F3C440];
      goto LABEL_12;
    }
    if (v30 == *MEMORY[0x263F3C2E0] || v30 == *MEMORY[0x263F3C2B0])
    {
      uint64_t v104 = sub_23D004128();
      uint64_t v48 = v176;
      long long v97 = v176[13];
      uint64_t v105 = v24;
      uint64_t v99 = v28;
      uint64_t v100 = v176 + 1;
      uint64_t v101 = (void (**)(char *, void, uint64_t, uint64_t))(v105 + 56);
      uint64_t v95 = v171;
      if (v104 < 2) {
        uint64_t v102 = (unsigned int *)MEMORY[0x263F3C3B8];
      }
      else {
        uint64_t v102 = (unsigned int *)MEMORY[0x263F3C3A8];
      }
    }
    else
    {
      uint64_t v95 = v171;
      if (v30 == *MEMORY[0x263F3C300])
      {
        uint64_t v96 = sub_23D004128();
        uint64_t v48 = v176;
        long long v97 = v176[13];
        uint64_t v98 = v24;
        uint64_t v99 = v28;
        uint64_t v100 = v176 + 1;
        uint64_t v101 = (void (**)(char *, void, uint64_t, uint64_t))(v98 + 56);
        if (v96 < 2) {
          uint64_t v102 = (unsigned int *)MEMORY[0x263F3C3E8];
        }
        else {
          uint64_t v102 = (unsigned int *)MEMORY[0x263F3C400];
        }
      }
      else
      {
        if (v30 != *MEMORY[0x263F3C318])
        {
          if (v30 == *MEMORY[0x263F3C308]) {
            goto LABEL_5;
          }
          uint64_t v95 = v171;
          if (v30 != *MEMORY[0x263F3C310])
          {
            uint64_t v1 = v0;
            uint64_t v24 = v168;
            if (v30 == *MEMORY[0x263F3C268])
            {
LABEL_11:
              uint64_t v46 = (unsigned int *)MEMORY[0x263F3C4C0];
LABEL_12:
              uint64_t v47 = *v46;
              uint64_t v48 = v176;
LABEL_13:
              uint64_t v49 = v169;
              uint64_t v50 = v171;
              ((void (*)(char *, uint64_t, uint64_t))v48[13])(v169, v47, v171);
              char v51 = v170;
              sub_23D004088();
              v48[1](v49, v50);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v51, 0, 1, v23);
              sub_23D004188();
              goto LABEL_16;
            }
            if (v30 == *MEMORY[0x263F3C278] || v30 == *MEMORY[0x263F3C2A8]) {
              goto LABEL_5;
            }
            uint64_t v24 = v168;
            uint64_t v119 = v28;
            uint64_t v156 = v23;
            if (v30 != *MEMORY[0x263F3C2E8])
            {
              uint64_t v23 = v156;
              if (v30 != *MEMORY[0x263F3C2D0]
                && v30 != *MEMORY[0x263F3C2F8]
                && v30 != *MEMORY[0x263F3C328]
                && v30 != *MEMORY[0x263F3C2F0]
                && v30 != *MEMORY[0x263F3C320])
              {
                if (qword_268BCCCA0 != -1) {
                  swift_once();
                }
                uint64_t v140 = sub_23D004498();
                __swift_project_value_buffer(v140, (uint64_t)qword_268BDAD40);
                unint64_t v141 = v0;
                uint64_t v142 = sub_23D004478();
                os_log_type_t v143 = sub_23D005C88();
                unsigned int v157 = v142;
                int v154 = v143;
                if (os_log_type_enabled(v142, v143))
                {
                  uint64_t v144 = swift_slowAlloc();
                  uint64_t v153 = swift_slowAlloc();
                  v179[0] = v153;
                  *(_DWORD *)uint64_t v144 = 136446466;
                  v152[1] = v144 + 4;
                  uint64_t v145 = v173;
                  sub_23D004038();
                  sub_23CF25778(&qword_268BCD490, MEMORY[0x263F3C338]);
                  uint64_t v146 = v166;
                  v152[0] = sub_23D0061F8();
                  unint64_t v148 = v147;
                  uint64_t v155 = *(void (**)(char *, uint64_t))(v164 + 8);
                  v155(v145, v146);
                  uint64_t v178 = sub_23CF231B0(v152[0], v148, v179);
                  sub_23D005E48();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v144 + 12) = 2082;
                  uint64_t v178 = sub_23CF231B0(0xD000000000000013, 0x800000023D010B00, v179);
                  sub_23D005E48();
                  long long v149 = v157;
                  _os_log_impl(&dword_23CEE3000, v157, (os_log_type_t)v154, "Feature domain: %{public}s not handled in %{public}s for original content", (uint8_t *)v144, 0x16u);
                  uint64_t v150 = v153;
                  swift_arrayDestroy();
                  MEMORY[0x23ECF6610](v150, -1, -1);
                  MEMORY[0x23ECF6610](v144, -1, -1);
                }
                else
                {

                  uint64_t v155 = *(void (**)(char *, uint64_t))(v164 + 8);
                }
                v155(v15, v166);
                uint64_t v23 = v156;
                uint64_t v28 = v119;
                uint64_t v1 = v32;
                goto LABEL_15;
              }
LABEL_5:
              if (qword_268BCCCA0 != -1) {
                swift_once();
              }
              uint64_t v33 = sub_23D004498();
              __swift_project_value_buffer(v33, (uint64_t)qword_268BDAD40);
              uint64_t v1 = v32;
              uint64_t v34 = v32;
              uint64_t v35 = sub_23D004478();
              os_log_type_t v36 = sub_23D005C88();
              if (os_log_type_enabled(v35, v36))
              {
                uint64_t v37 = swift_slowAlloc();
                uint64_t v38 = swift_slowAlloc();
                uint64_t v156 = v23;
                uint64_t v39 = v38;
                v179[0] = v38;
                *(_DWORD *)uint64_t v37 = 136446466;
                uint64_t v155 = (void (*)(char *, uint64_t))(v37 + 4);
                int v40 = v173;
                sub_23D004038();
                sub_23CF25778(&qword_268BCD490, MEMORY[0x263F3C338]);
                uint64_t v41 = v166;
                uint64_t v42 = sub_23D0061F8();
                unsigned int v157 = v1;
                uint64_t v43 = v28;
                unint64_t v45 = v44;
                (*(void (**)(char *, uint64_t))(v164 + 8))(v40, v41);
                uint64_t v178 = sub_23CF231B0(v42, v45, v179);
                sub_23D005E48();

                uint64_t v28 = v43;
                uint64_t v24 = v168;
                uint64_t v1 = v157;
                swift_bridgeObjectRelease();
                *(_WORD *)(v37 + 12) = 2082;
                uint64_t v178 = sub_23CF231B0(0xD000000000000013, 0x800000023D010B00, v179);
                sub_23D005E48();
                _os_log_impl(&dword_23CEE3000, v35, v36, "Feature domain: %{public}s intentionally not handled in %{public}s for original content", (uint8_t *)v37, 0x16u);
                swift_arrayDestroy();
                uint64_t v23 = v156;
                MEMORY[0x23ECF6610](v39, -1, -1);
                MEMORY[0x23ECF6610](v37, -1, -1);
              }
              else
              {

                uint64_t v24 = v168;
              }
LABEL_15:
              uint64_t v48 = v176;
              goto LABEL_16;
            }
            uint64_t v48 = v176;
            uint64_t v120 = v169;
            uint64_t v121 = v171;
            ((void (*)(char *, void, uint64_t))v176[13])(v169, *MEMORY[0x263F3C3F0], v171);
            uint64_t v122 = v170;
            sub_23D004088();
            v48[1](v120, v121);
            uint64_t v23 = v156;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v122, 0, 1, v156);
            goto LABEL_34;
          }
        }
        uint64_t v106 = sub_23D004128();
        uint64_t v48 = v176;
        long long v97 = v176[13];
        uint64_t v99 = v28;
        uint64_t v100 = v176 + 1;
        uint64_t v101 = (void (**)(char *, void, uint64_t, uint64_t))(v168 + 56);
        if (v106 < 2) {
          uint64_t v102 = (unsigned int *)MEMORY[0x263F3C3D0];
        }
        else {
          uint64_t v102 = (unsigned int *)MEMORY[0x263F3C3E0];
        }
      }
    }
    uint64_t v108 = v169;
    ((void (*)(char *, void, uint64_t))v97)(v169, *v102, v95);
    uint64_t v109 = v170;
    sub_23D004088();
    (*v100)(v108, v95);
    (*v101)(v109, 0, 1, v23);
    sub_23D004188();
    uint64_t v28 = v99;
    uint64_t v1 = v0;
    uint64_t v24 = v168;
  }
LABEL_16:
  uint64_t v52 = (uint64_t)v175;
  sub_23D004198();
  if (v174((char *)v52, 1, v23) == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v23);
    return sub_23CEE8BB4(v52, &qword_268BCD4A8);
  }
  v162(v177, (char *)v52, v23);
  uint64_t v53 = v172;
  sub_23D004038();
  uint64_t v54 = v166;
  int v55 = v160(v53, v166);
  if (v55 == v159)
  {
    uint64_t v56 = v164;
    (*(void (**)(char *, uint64_t))(v164 + 96))(v53, v54);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v56 = v164;
  if (v55 == *MEMORY[0x263F3C2C8])
  {
LABEL_25:
    uint64_t v158 = v28;
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_23D004498();
    __swift_project_value_buffer(v61, (uint64_t)qword_268BDAD40);
    uint64_t v58 = v1;
    uint64_t v59 = sub_23D004478();
    os_log_type_t v60 = sub_23D005C88();
    if (!os_log_type_enabled(v59, v60))
    {

      uint64_t v69 = *(void (**)(char *, uint64_t))(v24 + 8);
      v69(v177, v23);
      uint64_t v70 = v158;
      return ((uint64_t (*)(char *, uint64_t))v69)(v70, v23);
    }
    goto LABEL_28;
  }
  if (v55 == *MEMORY[0x263F3C2B8] || v55 == *MEMORY[0x263F3C270]) {
    goto LABEL_20;
  }
  if (v55 == *MEMORY[0x263F3C2D8])
  {
    BOOL v74 = v169;
    uint64_t v75 = v171;
    ((void (*)(char *, void, uint64_t))v48[13])(v169, *MEMORY[0x263F3C3C0], v171);
    uint64_t v76 = v170;
    uint64_t v77 = v177;
    sub_23D004088();
    v48[1](v74, v75);
    uint64_t v78 = v168;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v168 + 56))(v76, 0, 1, v23);
    sub_23D0041A8();
    unint64_t v79 = *(void (**)(char *, uint64_t))(v78 + 8);
    v79(v77, v23);
    return ((uint64_t (*)(char *, uint64_t))v79)(v28, v23);
  }
  uint64_t v80 = v177;
  uint64_t v24 = v168;
  if (v55 == *MEMORY[0x263F3C280])
  {
    uint64_t v81 = (unsigned int *)MEMORY[0x263F3C438];
LABEL_48:
    uint64_t v82 = v169;
    uint64_t v83 = v171;
    ((void (*)(char *, void, uint64_t))v48[13])(v169, *v81, v171);
    goto LABEL_49;
  }
  if (v55 == *MEMORY[0x263F3C298])
  {
    uint64_t v81 = (unsigned int *)MEMORY[0x263F3C4A8];
    goto LABEL_48;
  }
  if (v55 == *MEMORY[0x263F3C288])
  {
    uint64_t v86 = (uint64_t)v167;
    sub_23D004118();
    uint64_t v83 = v171;
    int v87 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v48[6])(v86, 1, v171);
    sub_23CEE8BB4(v86, &qword_268BCD8F8);
    if (v87 != 1) {
      goto LABEL_50;
    }
    uint64_t v82 = v169;
    ((void (*)(char *, void, uint64_t))v48[13])(v169, *MEMORY[0x263F3C4B0], v83);
LABEL_49:
    int64_t v84 = v170;
    sub_23D004088();
    v48[1](v82, v83);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v84, 0, 1, v23);
    sub_23D0041A8();
LABEL_50:
    uint64_t v69 = *(void (**)(char *, uint64_t))(v24 + 8);
    v69(v80, v23);
    uint64_t v70 = v28;
    return ((uint64_t (*)(char *, uint64_t))v69)(v70, v23);
  }
  if (v55 == *MEMORY[0x263F3C2C0]) {
    goto LABEL_25;
  }
  if (v55 == *MEMORY[0x263F3C2E0])
  {
    unsigned int v157 = v1;
    uint64_t v88 = sub_23D004128();
    unint64_t v89 = v48[13];
    long long v90 = v48 + 1;
    uint64_t v91 = v80;
    uint64_t v92 = (void (**)(char *, void, uint64_t, uint64_t))(v168 + 56);
    uint64_t v93 = (uint64_t (**)(char *, uint64_t))(v168 + 8);
    if (v88 < 2) {
      uint64_t v94 = (unsigned int *)MEMORY[0x263F3C448];
    }
    else {
      uint64_t v94 = (unsigned int *)MEMORY[0x263F3C410];
    }
LABEL_101:
    uint64_t v123 = v169;
    uint64_t v124 = v171;
    ((void (*)(char *, void, uint64_t))v89)(v169, *v94, v171);
    uint64_t v125 = v170;
    sub_23D004088();
    (*v90)(v123, v124);
    (*v92)(v125, 0, 1, v23);
    sub_23D0041A8();
    uint64_t v126 = *v93;
    (*v93)(v91, v23);
    return v126(v28, v23);
  }
  if (v55 == *MEMORY[0x263F3C2B0])
  {
LABEL_20:
    uint64_t v158 = v28;
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_23D004498();
    __swift_project_value_buffer(v57, (uint64_t)qword_268BDAD40);
    uint64_t v58 = v1;
    uint64_t v59 = sub_23D004478();
    os_log_type_t v60 = sub_23D005C88();
    if (!os_log_type_enabled(v59, v60))
    {

LABEL_29:
      uint64_t v69 = *(void (**)(char *, uint64_t))(v168 + 8);
      v69(v177, v23);
      uint64_t v70 = v158;
      return ((uint64_t (*)(void, void))v69)(v70, v23);
    }
LABEL_28:
    uint64_t v62 = swift_slowAlloc();
    uint64_t v176 = (void (**)(char *, uint64_t))swift_slowAlloc();
    v179[0] = (uint64_t)v176;
    *(_DWORD *)uint64_t v62 = 136446466;
    uint64_t v175 = (void (*)(char *, uint64_t))(v62 + 4);
    uint64_t v63 = v173;
    sub_23D004038();
    sub_23CF25778(&qword_268BCD490, MEMORY[0x263F3C338]);
    uint64_t v64 = v166;
    uint64_t v65 = sub_23D0061F8();
    unint64_t v67 = v66;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v63, v64);
    uint64_t v178 = sub_23CF231B0(v65, v67, v179);
    sub_23D005E48();

    swift_bridgeObjectRelease();
    *(_WORD *)(v62 + 12) = 2082;
    uint64_t v178 = sub_23CF231B0(0xD000000000000013, 0x800000023D010B00, v179);
    sub_23D005E48();
    _os_log_impl(&dword_23CEE3000, v59, v60, "Feature domain: %{public}s intentionally not handled in %{public}s for generated content", (uint8_t *)v62, 0x16u);
    uint64_t v68 = v176;
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v68, -1, -1);
    MEMORY[0x23ECF6610](v62, -1, -1);
    goto LABEL_29;
  }
  if (v55 == *MEMORY[0x263F3C300])
  {
    unsigned int v157 = v1;
    uint64_t v91 = v177;
    uint64_t v103 = sub_23D004128();
    unint64_t v89 = v48[13];
    long long v90 = v48 + 1;
    uint64_t v92 = (void (**)(char *, void, uint64_t, uint64_t))(v168 + 56);
    uint64_t v93 = (uint64_t (**)(char *, uint64_t))(v168 + 8);
    if (v103 < 2) {
      uint64_t v94 = (unsigned int *)MEMORY[0x263F3C478];
    }
    else {
      uint64_t v94 = (unsigned int *)MEMORY[0x263F3C488];
    }
    goto LABEL_101;
  }
  if (v55 == *MEMORY[0x263F3C318])
  {
    unsigned int v157 = v1;
    uint64_t v91 = v177;
    uint64_t v107 = sub_23D004128();
    unint64_t v89 = v48[13];
    long long v90 = v48 + 1;
    uint64_t v92 = (void (**)(char *, void, uint64_t, uint64_t))(v168 + 56);
    uint64_t v93 = (uint64_t (**)(char *, uint64_t))(v168 + 8);
    if (v107 < 2) {
      uint64_t v94 = (unsigned int *)MEMORY[0x263F3C460];
    }
    else {
      uint64_t v94 = (unsigned int *)MEMORY[0x263F3C470];
    }
    goto LABEL_101;
  }
  if (v55 == *MEMORY[0x263F3C308] || v55 == *MEMORY[0x263F3C310]) {
    goto LABEL_20;
  }
  uint64_t v24 = v168;
  if (v55 == *MEMORY[0x263F3C268]) {
    goto LABEL_25;
  }
  if (v55 == *MEMORY[0x263F3C278] || v55 == *MEMORY[0x263F3C2A8]) {
    goto LABEL_20;
  }
  uint64_t v110 = v168;
  uint64_t v111 = v28;
  uint64_t v112 = v23;
  if (v55 == *MEMORY[0x263F3C2E8])
  {
    uint64_t v113 = v176;
    uint64_t v114 = v169;
    uint64_t v115 = v171;
    ((void (*)(char *, void, uint64_t))v176[13])(v169, *MEMORY[0x263F3C480], v171);
    uint64_t v116 = v170;
    uint64_t v117 = v177;
    sub_23D004088();
    v113[1](v114, v115);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v116, 0, 1, v112);
    sub_23D0041A8();
    uint64_t v118 = *(void (**)(char *, uint64_t))(v110 + 8);
    v118(v117, v112);
    return ((uint64_t (*)(char *, uint64_t))v118)(v111, v112);
  }
  else
  {
    uint64_t v56 = v164;
    if (v55 == *MEMORY[0x263F3C2D0]
      || v55 == *MEMORY[0x263F3C2F8]
      || v55 == *MEMORY[0x263F3C328]
      || v55 == *MEMORY[0x263F3C2F0]
      || v55 == *MEMORY[0x263F3C320])
    {
      goto LABEL_20;
    }
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v127 = sub_23D004498();
    __swift_project_value_buffer(v127, (uint64_t)qword_268BDAD40);
    uint64_t v128 = v1;
    uint64_t v129 = sub_23D004478();
    os_log_type_t v130 = sub_23D005C88();
    uint64_t v176 = (void (**)(char *, uint64_t))v129;
    LODWORD(v174) = v130;
    if (os_log_type_enabled(v129, v130))
    {
      uint64_t v131 = swift_slowAlloc();
      uint64_t v171 = swift_slowAlloc();
      v179[0] = v171;
      *(_DWORD *)uint64_t v131 = 136446466;
      uint64_t v170 = (char *)(v131 + 4);
      uint64_t v132 = v173;
      sub_23D004038();
      sub_23CF25778(&qword_268BCD490, MEMORY[0x263F3C338]);
      uint64_t v133 = v166;
      uint64_t v134 = sub_23D0061F8();
      unint64_t v136 = v135;
      uint64_t v175 = *(void (**)(char *, uint64_t))(v164 + 8);
      v175(v132, v133);
      uint64_t v178 = sub_23CF231B0(v134, v136, v179);
      sub_23D005E48();

      swift_bridgeObjectRelease();
      *(_WORD *)(v131 + 12) = 2082;
      uint64_t v178 = sub_23CF231B0(0xD000000000000013, 0x800000023D010B00, v179);
      sub_23D005E48();
      uint64_t v137 = v176;
      _os_log_impl(&dword_23CEE3000, (os_log_t)v176, (os_log_type_t)v174, "Feature domain: %{public}s not handled in %{public}s for generated content", (uint8_t *)v131, 0x16u);
      uint64_t v138 = v171;
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v138, -1, -1);
      MEMORY[0x23ECF6610](v131, -1, -1);

      unint64_t v139 = *(void (**)(char *, uint64_t))(v110 + 8);
      v139(v177, v23);
      v139(v111, v23);
    }
    else
    {

      uint64_t v151 = *(void (**)(char *, uint64_t))(v110 + 8);
      v151(v177, v23);
      v151(v28, v23);
      uint64_t v175 = *(void (**)(char *, uint64_t))(v164 + 8);
    }
    return ((uint64_t (*)(char *, uint64_t))v175)(v172, v166);
  }
}

uint64_t sub_23CF1ED30()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD4A8);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v49 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v50 = (char *)&v41 - v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = sub_23D004138();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v46 = (char *)&v41 - v13;
  uint64_t v14 = sub_23D004028();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v48 = sub_23CF20584();
  sub_23D004038();
  char v18 = sub_23CF20F64();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v51 = v14;
  uint64_t v52 = v19;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v19)(v17, v14);
  if (v18)
  {
    unint64_t v44 = v12;
    uint64_t v45 = v8;
    uint64_t v47 = v9;
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_23D004498();
    __swift_project_value_buffer(v21, (uint64_t)qword_268BDAD40);
    id v22 = v0;
    uint64_t v23 = sub_23D004478();
    os_log_type_t v24 = sub_23D005CB8();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v54 = v43;
      uint64_t v42 = v25;
      *(_DWORD *)uint64_t v25 = 136446210;
      uint64_t v41 = v25 + 4;
      sub_23D004038();
      sub_23CF25778(&qword_268BCD490, MEMORY[0x263F3C338]);
      uint64_t v26 = v51;
      uint64_t v27 = sub_23D0061F8();
      unint64_t v29 = v28;
      v52(v17, v26);
      uint64_t v53 = sub_23CF231B0(v27, v29, &v54);
      sub_23D005E48();

      swift_bridgeObjectRelease();
      int v30 = v42;
      _os_log_impl(&dword_23CEE3000, v23, v24, "Remapping dynamic alert strings for feature: [%{public}s]", v42, 0xCu);
      uint64_t v31 = v43;
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v31, -1, -1);
      MEMORY[0x23ECF6610](v30, -1, -1);
    }
    else
    {
    }
    sub_23D004178();
    uint64_t v32 = v47;
    uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    uint64_t v34 = v45;
    if (v33(v7, 1, v45) == 1)
    {
      sub_23CEE8BB4((uint64_t)v7, &qword_268BCD4A8);
    }
    else
    {
      uint64_t v35 = v46;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v46, v7, v34);
      sub_23D004038();
      os_log_type_t v36 = v50;
      sub_23CF21650((uint64_t)v17, v48);
      v52(v17, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v36, 0, 1, v34);
      sub_23D004188();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v34);
    }
    uint64_t v37 = (uint64_t)v49;
    sub_23D004198();
    if (v33((char *)v37, 1, v34) == 1)
    {
      return sub_23CEE8BB4(v37, &qword_268BCD4A8);
    }
    else
    {
      uint64_t v38 = v47;
      uint64_t v39 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v44, v37, v34);
      sub_23D004038();
      int v40 = v50;
      sub_23CF21650((uint64_t)v17, v48);
      v52(v17, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v34);
      sub_23D0041A8();
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v39, v34);
    }
  }
  return result;
}

uint64_t sub_23CF1F328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  *(void *)(v6 + 80) = a4;
  *(void *)(v6 + 88) = v5;
  *(void *)(v6 + 64) = a2;
  *(void *)(v6 + 72) = a3;
  *(void *)(v6 + 56) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD4A8);
  *(void *)(v6 + 96) = swift_task_alloc();
  uint64_t v8 = sub_23D004028();
  *(void *)(v6 + 104) = v8;
  *(void *)(v6 + 112) = *(void *)(v8 - 8);
  *(void *)(v6 + 120) = swift_task_alloc();
  uint64_t v9 = sub_23D0041B8();
  *(void *)(v6 + 128) = v9;
  *(void *)(v6 + 136) = *(void *)(v9 - 8);
  *(void *)(v6 + 144) = swift_task_alloc();
  *(unsigned char *)(v6 + 161) = *a5;
  return MEMORY[0x270FA2498](sub_23CF1F488, 0, 0);
}

uint64_t sub_23CF1F488()
{
  uint64_t v30 = v0;
  if (*(unsigned char *)(v0 + 161) != 2)
  {
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_23D004498();
    __swift_project_value_buffer(v1, (uint64_t)qword_268BDAD40);
    uint64_t v2 = sub_23D004478();
    os_log_type_t v3 = sub_23D005C78();
    if (os_log_type_enabled(v2, v3))
    {
      int v4 = *(unsigned __int8 *)(v0 + 161);
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      uint64_t v29 = v6;
      if (v4) {
        uint64_t v7 = 0x65746172656E6547;
      }
      else {
        uint64_t v7 = 0x6C616E696769724FLL;
      }
      if (v4) {
        unint64_t v8 = 0xE900000000000064;
      }
      else {
        unint64_t v8 = 0xE800000000000000;
      }
      *(void *)(v0 + 48) = sub_23CF231B0(v7, v8, &v29);
      sub_23D005E48();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23CEE3000, v2, v3, "Will attach annotated %s content.", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v6, -1, -1);
      MEMORY[0x23ECF6610](v5, -1, -1);
    }
  }
  if ((*(unsigned int (**)(void, uint64_t, void))(*(void *)(v0 + 136) + 48))(*(void *)(v0 + 80), 1, *(void *)(v0 + 128)) != 1)
  {
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_23D004498();
    __swift_project_value_buffer(v9, (uint64_t)qword_268BDAD40);
    uint64_t v10 = sub_23D004478();
    os_log_type_t v11 = sub_23D005C98();
    if (os_log_type_enabled(v10, v11))
    {
      int v12 = *(unsigned __int8 *)(v0 + 161);
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v29 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v15 = 0x65746172656E6547;
      unint64_t v16 = 0xE900000000000064;
      if (v12 != 1)
      {
        uint64_t v15 = 0x6172747845;
        unint64_t v16 = 0xE500000000000000;
      }
      if (v12) {
        uint64_t v17 = v15;
      }
      else {
        uint64_t v17 = 0x6C616E696769724FLL;
      }
      if (v12) {
        unint64_t v18 = v16;
      }
      else {
        unint64_t v18 = 0xE800000000000000;
      }
      *(void *)(v0 + 40) = sub_23CF231B0(v17, v18, &v29);
      sub_23D005E48();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23CEE3000, v10, v11, "Ignoring %s content because annotated is present.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v14, -1, -1);
      MEMORY[0x23ECF6610](v13, -1, -1);
    }
  }
  char v19 = *(unsigned char *)(v0 + 161);
  uint64_t v20 = *(void *)(v0 + 96);
  uint64_t v21 = *(void *)(v0 + 64);
  sub_23D0040E8();
  sub_23D004038();
  *(unsigned char *)(v0 + 160) = v19;
  uint64_t v22 = sub_23D004138();
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v20, v21, v22);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  os_log_type_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v24;
  *os_log_type_t v24 = v0;
  v24[1] = sub_23CF1F91C;
  uint64_t v25 = *(void *)(v0 + 120);
  uint64_t v26 = *(void *)(v0 + 96);
  uint64_t v27 = *(void *)(v0 + 72);
  return sub_23CF434C4(v0 + 16, v27, v25, (unsigned char *)(v0 + 160), v26);
}

uint64_t sub_23CF1F91C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 120);
  uint64_t v2 = *(void *)(*(void *)v0 + 112);
  uint64_t v3 = *(void *)(*(void *)v0 + 104);
  uint64_t v4 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  sub_23CEE8BB4(v4, &qword_268BCD4A8);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x270FA2498](sub_23CF1FA98, 0, 0);
}

uint64_t sub_23CF1FA98()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v24 = *(void *)(v0 + 16);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    unint64_t v5 = 0x268BCC000uLL;
    uint64_t v25 = v2;
    do
    {
      uint64_t v6 = *(void **)(v2 + 8 * v4 + 32);
      id v7 = v6;
      if (*(void *)(v5 + 3232) != -1) {
        swift_once();
      }
      uint64_t v8 = sub_23D004498();
      __swift_project_value_buffer(v8, (uint64_t)qword_268BDAD40);
      id v9 = v6;
      id v10 = v6;
      os_log_type_t v11 = sub_23D004478();
      os_log_type_t v12 = sub_23D005C98();
      if (os_log_type_enabled(v11, v12))
      {
        int v13 = *(unsigned __int8 *)(v0 + 161);
        uint64_t v14 = swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v26 = v15;
        *(_DWORD *)uint64_t v14 = 136315394;
        if (v13)
        {
          if (v13 == 1) {
            uint64_t v16 = 0x65746172656E6547;
          }
          else {
            uint64_t v16 = 0x6172747845;
          }
          if (v13 == 1) {
            unint64_t v17 = 0xE900000000000064;
          }
          else {
            unint64_t v17 = 0xE500000000000000;
          }
        }
        else
        {
          unint64_t v17 = 0xE800000000000000;
          uint64_t v16 = 0x6C616E696769724FLL;
        }
        *(void *)(v14 + 4) = sub_23CF231B0(v16, v17, &v26);
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2082;
        *(void *)(v0 + 32) = v6;
        id v18 = v6;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
        uint64_t v19 = sub_23D005998();
        *(void *)(v14 + 14) = sub_23CF231B0(v19, v20, &v26);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23CEE3000, v11, v12, "Annotated %s content attachments could not be attached: %{public}s)", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v15, -1, -1);
        MEMORY[0x23ECF6610](v14, -1, -1);

        uint64_t v2 = v25;
        unint64_t v5 = 0x268BCC000;
      }
      else
      {
      }
      ++v4;
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
    uint64_t v1 = v24;
  }
  uint64_t v21 = *(void **)(v0 + 56);
  (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));
  *uint64_t v21 = v1;
  v21[1] = v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_23CF1FDC4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  *(void *)(v5 + 64) = a3;
  *(void *)(v5 + 72) = v4;
  *(void *)(v5 + 48) = a1;
  *(void *)(v5 + 56) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD4A8);
  *(void *)(v5 + 80) = swift_task_alloc();
  uint64_t v7 = sub_23D004028();
  *(void *)(v5 + 88) = v7;
  *(void *)(v5 + 96) = *(void *)(v7 - 8);
  *(void *)(v5 + 104) = swift_task_alloc();
  *(unsigned char *)(v5 + 129) = *a4;
  return MEMORY[0x270FA2498](sub_23CF1FEC4, 0, 0);
}

uint64_t sub_23CF1FEC4()
{
  uint64_t v20 = v0;
  if (qword_268BCCCA0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_23D004498();
  *(void *)(v0 + 112) = __swift_project_value_buffer(v1, (uint64_t)qword_268BDAD40);
  uint64_t v2 = sub_23D004478();
  os_log_type_t v3 = sub_23D005C78();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 129);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v19 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    unint64_t v7 = 0xE900000000000064;
    uint64_t v8 = 0x65746172656E6547;
    if (v4 != 1)
    {
      uint64_t v8 = 0x6172747845;
      unint64_t v7 = 0xE500000000000000;
    }
    if (v4) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 0x6C616E696769724FLL;
    }
    if (v4) {
      unint64_t v10 = v7;
    }
    else {
      unint64_t v10 = 0xE800000000000000;
    }
    *(void *)(v0 + 40) = sub_23CF231B0(v9, v10, &v19);
    sub_23D005E48();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23CEE3000, v2, v3, "Will attach %s content.", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v6, -1, -1);
    MEMORY[0x23ECF6610](v5, -1, -1);
  }

  char v11 = *(unsigned char *)(v0 + 129);
  uint64_t v12 = *(void *)(v0 + 80);
  sub_23D004038();
  *(unsigned char *)(v0 + 128) = v11;
  uint64_t v13 = sub_23D004138();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_23CF20164;
  uint64_t v15 = *(void *)(v0 + 104);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v17 = *(void *)(v0 + 64);
  return sub_23CF434C4(v0 + 16, v17, v15, (unsigned char *)(v0 + 128), v16);
}

uint64_t sub_23CF20164()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  uint64_t v2 = *(void *)(*(void *)v0 + 96);
  uint64_t v3 = *(void *)(*(void *)v0 + 88);
  uint64_t v4 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  sub_23CEE8BB4(v4, &qword_268BCD4A8);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x270FA2498](sub_23CF202E0, 0, 0);
}

uint64_t sub_23CF202E0()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v22 = *(void *)(v0 + 16);
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = *(void **)(v2 + 8 * i + 32);
      id v6 = v5;
      id v7 = v5;
      id v8 = v5;
      uint64_t v9 = sub_23D004478();
      os_log_type_t v10 = sub_23D005C98();
      if (os_log_type_enabled(v9, v10))
      {
        int v11 = *(unsigned __int8 *)(v0 + 129);
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        uint64_t v23 = v13;
        *(_DWORD *)uint64_t v12 = 136315394;
        if (v11)
        {
          if (v11 == 1) {
            uint64_t v14 = 0x65746172656E6547;
          }
          else {
            uint64_t v14 = 0x6172747845;
          }
          if (v11 == 1) {
            unint64_t v15 = 0xE900000000000064;
          }
          else {
            unint64_t v15 = 0xE500000000000000;
          }
        }
        else
        {
          unint64_t v15 = 0xE800000000000000;
          uint64_t v14 = 0x6C616E696769724FLL;
        }
        *(void *)(v12 + 4) = sub_23CF231B0(v14, v15, &v23);
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2082;
        *(void *)(v0 + 32) = v5;
        id v16 = v5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
        uint64_t v17 = sub_23D005998();
        *(void *)(v12 + 14) = sub_23CF231B0(v17, v18, &v23);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23CEE3000, v9, v10, "%s content attachments could not be attached: %{public}s)", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v13, -1, -1);
        MEMORY[0x23ECF6610](v12, -1, -1);
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v1 = v22;
  }
  uint64_t v19 = *(void **)(v0 + 48);
  *uint64_t v19 = v1;
  v19[1] = v2;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

BOOL sub_23CF20584()
{
  uint64_t v0 = sub_23D004138();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v81 = (char *)&v68 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t)&v68 - v7;
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD4A8);
  uint64_t v9 = *(void *)(v80 - 8);
  uint64_t v10 = v9;
  uint64_t v11 = MEMORY[0x270FA5388](v80);
  uint64_t v13 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  id v16 = (char *)&v68 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v72 = (char *)&v68 - v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD8E8);
  uint64_t v18 = *(void *)(v9 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_23D008CD0;
  uint64_t v21 = v20 + v19;
  sub_23D004178();
  uint64_t v22 = v21 + v18;
  sub_23D004198();
  unint64_t v79 = (void (*)(char *, char *, uint64_t))v21;
  sub_23CF256B4(v21, (uint64_t)v16);
  sub_23CEE83D8((uint64_t)v16, v13, &qword_268BCD4A8);
  uint64_t v23 = (void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
  uint64_t v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  uint64_t v76 = v1 + 48;
  int v24 = v75(v13, 1, v0);
  uint64_t v73 = v1;
  BOOL v74 = (void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
  if (v24 != 1)
  {
    uint64_t v26 = *v23;
    (*v23)(v8, v13, v0);
    uint64_t v78 = v26;
    v26((uint64_t)v81, v8, v0);
    unint64_t v27 = MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_85;
    }
    goto LABEL_4;
  }
  sub_23CEE8BB4(v13, &qword_268BCD4A8);
  unint64_t v25 = MEMORY[0x263F8EE78];
  while (2)
  {
    sub_23CF256B4(v22, (uint64_t)v16);
    sub_23CEE83D8((uint64_t)v16, v13, &qword_268BCD4A8);
    if (v75(v13, 1, v0) == 1)
    {
      sub_23CEE8BB4(v13, &qword_268BCD4A8);
    }
    else
    {
      uint64_t v31 = *v74;
      (*v74)(v8, v13, v0);
      uint64_t v22 = (uint64_t)v81;
      v31((uint64_t)v81, v8, v0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v25 = sub_23CF22518(0, *(void *)(v25 + 16) + 1, 1, v25, &qword_268BCD8F0, MEMORY[0x263F3C4E0], MEMORY[0x263F3C4E0]);
      }
      unint64_t v33 = *(void *)(v25 + 16);
      unint64_t v32 = *(void *)(v25 + 24);
      if (v33 >= v32 >> 1) {
        unint64_t v25 = sub_23CF22518(v32 > 1, v33 + 1, 1, v25, &qword_268BCD8F0, MEMORY[0x263F3C4E0], MEMORY[0x263F3C4E0]);
      }
      *(void *)(v25 + 16) = v33 + 1;
      v31(v25+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v33, v22, v0);
    }
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    unint64_t v34 = v25;
    uint64_t v81 = *(char **)(v25 + 16);
    if (v81)
    {
      os_log_type_t v36 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
      uint64_t v35 = v1 + 16;
      uint64_t v78 = (void (*)(uint64_t, uint64_t, uint64_t))(v25
                                                           + ((*(unsigned __int8 *)(v35 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 64)));
      unint64_t v79 = v36;
      uint64_t v69 = (char *)v82 + 2;
      uint64_t v70 = (char *)v82 + 3;
      uint64_t v37 = (void (**)(char *, uint64_t))(v35 - 8);
      uint64_t v80 = v35;
      uint64_t v77 = *(void *)(v35 + 56);
      unint64_t v71 = v34;
      swift_bridgeObjectRetain();
      uint64_t v38 = 0;
      id v16 = 0;
      while (1)
      {
        v79(v4, (char *)v78 + v77 * (void)v38, v0);
        uint64_t v40 = sub_23D004098();
        if (v40)
        {
          uint64_t v22 = v40;
          uint64_t v41 = sub_23D004078();
          uint64_t v8 = v42;
          if (*(void *)(v22 + 16) && (unint64_t v43 = sub_23CF23884(v41, v42), (v44 & 1) != 0))
          {
            uint64_t v45 = (uint64_t *)(*(void *)(v22 + 56) + 16 * v43);
            uint64_t v13 = *v45;
            unint64_t v27 = v45[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            unint64_t v27 = 0xE100000000000000;
            uint64_t v13 = 48;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v27 = 0xE100000000000000;
          uint64_t v13 = 48;
        }
        uint64_t v46 = HIBYTE(v27) & 0xF;
        uint64_t v47 = v13 & 0xFFFFFFFFFFFFLL;
        if ((v27 & 0x2000000000000000) != 0 ? HIBYTE(v27) & 0xF : v13 & 0xFFFFFFFFFFFFLL) {
          break;
        }
        swift_bridgeObjectRelease();
LABEL_18:
        ++v38;
        (*v37)(v4, v0);
        if (v38 == v81)
        {
          swift_bridgeObjectRelease();
          uint64_t v39 = 1;
          uint64_t v1 = v73;
          goto LABEL_81;
        }
      }
      if ((v27 & 0x1000000000000000) != 0)
      {
        uint64_t v8 = sub_23CFDD5C8(v13, v27, 10);
        char v51 = v64;
        goto LABEL_59;
      }
      if ((v27 & 0x2000000000000000) == 0)
      {
        if ((v13 & 0x1000000000000000) != 0) {
          uint64_t v49 = (unsigned __int8 *)((v27 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          uint64_t v49 = (unsigned __int8 *)sub_23D006028();
        }
        uint64_t v8 = (uint64_t)sub_23CFDD5B0(v49, v47, 10);
        char v51 = v50 & 1;
LABEL_59:
        swift_bridgeObjectRelease();
        if ((v51 & 1) == 0 && v8 > 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v65 = (uint64_t)v72;
          (*v74)((uint64_t)v72, (uint64_t)v4, v0);
          uint64_t v39 = 0;
          uint64_t v1 = v73;
          goto LABEL_82;
        }
        goto LABEL_18;
      }
      v82[0] = v13;
      v82[1] = v27 & 0xFFFFFFFFFFFFFFLL;
      if (v13 == 43)
      {
        if (!v46) {
          goto LABEL_84;
        }
        if (v46 == 1 || (BYTE1(v13) - 48) > 9u) {
          goto LABEL_56;
        }
        uint64_t v8 = (BYTE1(v13) - 48);
        if (v46 == 2) {
          goto LABEL_58;
        }
        if ((BYTE2(v13) - 48) <= 9u)
        {
          uint64_t v8 = 10 * (BYTE1(v13) - 48) + (BYTE2(v13) - 48);
          uint64_t v52 = v46 - 3;
          if (v52)
          {
            uint64_t v53 = (unsigned __int8 *)v70;
            while (1)
            {
              unsigned int v54 = *v53 - 48;
              if (v54 > 9) {
                goto LABEL_56;
              }
              uint64_t v55 = 10 * v8;
              if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
                goto LABEL_56;
              }
              uint64_t v8 = v55 + v54;
              if (__OFADD__(v55, v54)) {
                goto LABEL_56;
              }
              char v51 = 0;
              ++v53;
              if (!--v52) {
                goto LABEL_59;
              }
            }
          }
          goto LABEL_58;
        }
      }
      else if (v13 == 45)
      {
        if (!v46)
        {
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          unint64_t v27 = sub_23CF22518(0, *(void *)(v27 + 16) + 1, 1, v27, &qword_268BCD8F0, MEMORY[0x263F3C4E0], MEMORY[0x263F3C4E0]);
LABEL_4:
          unint64_t v29 = *(void *)(v27 + 16);
          unint64_t v28 = *(void *)(v27 + 24);
          unint64_t v25 = v27;
          if (v29 >= v28 >> 1) {
            unint64_t v25 = sub_23CF22518(v28 > 1, v29 + 1, 1, v27, &qword_268BCD8F0, MEMORY[0x263F3C4E0], MEMORY[0x263F3C4E0]);
          }
          *(void *)(v25 + 16) = v29 + 1;
          unint64_t v30 = v25
              + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))
              + *(void *)(v73 + 72) * v29;
          uint64_t v1 = v73;
          v78(v30, (uint64_t)v81, v0);
          continue;
        }
        if (v46 != 1 && (BYTE1(v13) - 48) <= 9u)
        {
          if (v46 == 2)
          {
            char v51 = 0;
            uint64_t v8 = -(uint64_t)(BYTE1(v13) - 48);
            goto LABEL_59;
          }
          if ((BYTE2(v13) - 48) <= 9u)
          {
            uint64_t v8 = -10 * (BYTE1(v13) - 48) - (BYTE2(v13) - 48);
            uint64_t v60 = v46 - 3;
            if (v60)
            {
              uint64_t v61 = (unsigned __int8 *)v70;
              while (1)
              {
                unsigned int v62 = *v61 - 48;
                if (v62 > 9) {
                  goto LABEL_56;
                }
                uint64_t v63 = 10 * v8;
                if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
                  goto LABEL_56;
                }
                uint64_t v8 = v63 - v62;
                if (__OFSUB__(v63, v62)) {
                  goto LABEL_56;
                }
                char v51 = 0;
                ++v61;
                if (!--v60) {
                  goto LABEL_59;
                }
              }
            }
LABEL_58:
            char v51 = 0;
            goto LABEL_59;
          }
        }
      }
      else if (v46 && (v13 - 48) <= 9u)
      {
        uint64_t v8 = (v13 - 48);
        if (v46 == 1) {
          goto LABEL_58;
        }
        if ((BYTE1(v13) - 48) <= 9u)
        {
          uint64_t v8 = 10 * (v13 - 48) + (BYTE1(v13) - 48);
          uint64_t v56 = v46 - 2;
          if (v56)
          {
            uint64_t v57 = (unsigned __int8 *)v69;
            while (1)
            {
              unsigned int v58 = *v57 - 48;
              if (v58 > 9) {
                goto LABEL_56;
              }
              uint64_t v59 = 10 * v8;
              if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
                goto LABEL_56;
              }
              uint64_t v8 = v59 + v58;
              if (__OFADD__(v59, v58)) {
                goto LABEL_56;
              }
              char v51 = 0;
              ++v57;
              if (!--v56) {
                goto LABEL_59;
              }
            }
          }
          goto LABEL_58;
        }
      }
LABEL_56:
      uint64_t v8 = 0;
      char v51 = 1;
      goto LABEL_59;
    }
    break;
  }
  uint64_t v39 = 1;
LABEL_81:
  uint64_t v65 = (uint64_t)v72;
LABEL_82:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56))(v65, v39, 1, v0);
  swift_bridgeObjectRelease();
  BOOL v66 = v75(v65, 1, v0) != 1;
  sub_23CEE8BB4(v65, &qword_268BCD4A8);
  return v66;
}

uint64_t sub_23CF20F64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_23D004028();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  BOOL v48 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unsigned int v62 = (char *)&v47 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v56 = (char *)&v47 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v61 = (char *)&v47 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD838);
  uint64_t v16 = *(void *)(v3 + 72);
  uint64_t v17 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v18 = (v17 + 32) & ~v17;
  uint64_t v19 = 2 * v16;
  uint64_t v51 = v18 + 3 * v16;
  uint64_t v52 = v15;
  uint64_t v50 = v17 | 7;
  uint64_t v20 = swift_allocObject();
  long long v49 = xmmword_23D008CE0;
  *(_OWORD *)(v20 + 16) = xmmword_23D008CE0;
  uint64_t v53 = (char *)v18;
  uint64_t v21 = v20 + v18;
  uint64_t v22 = (void (*)(void))v4[13];
  ((void (*)(uint64_t, void, uint64_t))v22)(v21, *MEMORY[0x263F3C2E0], v2);
  uint64_t v54 = v16;
  uint64_t v23 = v21 + v16;
  ((void (*)(uint64_t, void, uint64_t))v22)(v23, *MEMORY[0x263F3C2B0], v2);
  uint64_t v55 = (void (*)(char *, uint64_t))v19;
  unsigned int v58 = v4 + 13;
  uint64_t v59 = v21 + v19;
  uint64_t v57 = v22;
  v22();
  int v24 = (void (*)(char *, uint64_t, uint64_t))v4[2];
  v24(v14, v21, v2);
  uint64_t v25 = sub_23CF25778(&qword_268BCD840, MEMORY[0x263F3C338]);
  uint64_t v64 = v1;
  uint64_t v60 = v25;
  LOBYTE(v1) = sub_23D005908();
  uint64_t v26 = (void (*)(char *, uint64_t))v4[1];
  swift_bridgeObjectRetain();
  v26(v14, v2);
  uint64_t v63 = v4 + 1;
  if (v1 & 1) != 0 || (v24(v14, v23, v2), char v27 = sub_23D005908(), v26(v14, v2), (v27))
  {
    unint64_t v28 = v26;
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    unint64_t v29 = v61;
    uint64_t v30 = v64;
    v24(v61, v64, v2);
LABEL_4:
    v28(v29, v2);
    uint64_t v31 = v62;
    v24(v62, v30, v2);
    goto LABEL_5;
  }
  v24(v14, v59, v2);
  uint64_t v34 = v64;
  LODWORD(v59) = sub_23D005908();
  unint64_t v28 = v26;
  v26(v14, v2);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v29 = v61;
  v24(v61, v34, v2);
  uint64_t v30 = v34;
  if (v59) {
    goto LABEL_4;
  }
  uint64_t v35 = swift_allocObject();
  os_log_type_t v36 = v4 + 2;
  *(_OWORD *)(v35 + 16) = v49;
  uint64_t v37 = &v53[v35];
  uint64_t v38 = v57;
  ((void (*)(char *, void, uint64_t))v57)(&v53[v35], *MEMORY[0x263F3C308], v2);
  v54 += (uint64_t)v37;
  v38();
  uint64_t v53 = (char *)v55 + (void)v37;
  v38();
  uint64_t v39 = v56;
  uint64_t v59 = (uint64_t)v36;
  v24(v56, (uint64_t)v37, v2);
  uint64_t v40 = v29;
  char v41 = sub_23D005908();
  swift_bridgeObjectRetain();
  uint64_t v55 = v26;
  v26(v39, v2);
  if (v41 & 1) != 0 || (v24(v39, v54, v2), char v42 = sub_23D005908(), v55(v39, v2), (v42))
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    unint64_t v29 = v40;
    goto LABEL_4;
  }
  v24(v39, (uint64_t)v53, v2);
  char v43 = sub_23D005908();
  char v44 = v39;
  uint64_t v45 = v55;
  v55(v44, v2);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v45(v40, v2);
  uint64_t v31 = v62;
  v24(v62, v30, v2);
  unint64_t v28 = v45;
  if ((v43 & 1) == 0)
  {
    uint64_t v46 = v48;
    ((void (*)(char *, void, uint64_t))v57)(v48, *MEMORY[0x263F3C288], v2);
    char v32 = MEMORY[0x23ECF3A90](v31, v46);
    v28(v46, v2);
    goto LABEL_6;
  }
LABEL_5:
  char v32 = 1;
LABEL_6:
  v28(v31, v2);
  return v32 & 1;
}

uint64_t sub_23CF21650(uint64_t a1, char a2)
{
  sub_23D004098();
  uint64_t v2 = sub_23D0040B8();
  uint64_t v4 = v3;
  uint64_t v5 = sub_23CF24D24();
  uint64_t v7 = v6;
  if (v6)
  {
    uint64_t v8 = v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_23CF242B8(v8, v7, v2, v4, isUniquelyReferenced_nonNull_native);
  }
  else
  {
    sub_23CF241D0(v2, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_23D0040A8();
  uint64_t v12 = v11;
  uint64_t v13 = sub_23CF21B1C(a2 & 1);
  uint64_t v15 = v14;
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_23CF242B8(v13, v15, v10, v12, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23D0040D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF21B1C(int a1)
{
  int v62 = a1;
  uint64_t v1 = sub_23D004028();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = v2;
  uint64_t v4 = MEMORY[0x270FA5388](v1);
  uint64_t v56 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v57 = (char *)v48 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v63 = (char *)v48 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v48 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD838);
  uint64_t v13 = *(void *)(v2 + 72);
  uint64_t v14 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v51 = v15 + 3 * v13;
  uint64_t v52 = v12;
  uint64_t v50 = v14 | 7;
  uint64_t v16 = swift_allocObject();
  long long v49 = xmmword_23D008CE0;
  *(_OWORD *)(v16 + 16) = xmmword_23D008CE0;
  uint64_t v53 = v15;
  uint64_t v17 = v16 + v15;
  uint64_t v18 = *(void (**)(void))(v2 + 104);
  ((void (*)(uint64_t, void, uint64_t))v18)(v17, *MEMORY[0x263F3C2E0], v1);
  uint64_t v54 = v13;
  uint64_t v61 = (void (*)(char *, uint64_t, uint64_t))(v17 + v13);
  v18();
  uint64_t v55 = 2 * v13;
  uint64_t v59 = v2 + 104;
  uint64_t v60 = v17 + 2 * v13;
  unsigned int v58 = v18;
  v18();
  uint64_t v19 = v2 + 16;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v20(v11, v17, v1);
  uint64_t v21 = sub_23CF25778(&qword_268BCD840, MEMORY[0x263F3C338]);
  LOBYTE(v2) = sub_23D005908();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v22 = (char *)(v3 + 8);
  swift_bridgeObjectRetain();
  uint64_t v64 = v23;
  v23(v11, v1);
  if (v2 & 1) != 0 || (v20(v11, (uint64_t)v61, v1), char v24 = sub_23D005908(), v64(v11, v1), (v24))
  {
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v25 = v63;
    v20(v63, v67, v1);
    uint64_t v26 = v64;
LABEL_4:
    v26(v25, v1);
LABEL_5:
    id v27 = objc_msgSend(self, sel_mainBundle);
    goto LABEL_6;
  }
  v20(v11, v60, v1);
  uint64_t v60 = v21;
  uint64_t v61 = v20;
  uint64_t v30 = v67;
  char v31 = sub_23D005908();
  char v32 = v11;
  unint64_t v33 = v64;
  v64(v32, v1);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v25 = v63;
  uint64_t v34 = v61;
  v61(v63, v30, v1);
  uint64_t v26 = v33;
  if (v31) {
    goto LABEL_4;
  }
  uint64_t v35 = v19;
  os_log_type_t v36 = v34;
  v48[1] = v35;
  uint64_t v37 = v57;
  uint64_t v38 = v58;
  ((void (*)(char *, void, uint64_t))v58)(v57, *MEMORY[0x263F3C288], v1);
  char v39 = MEMORY[0x23ECF3A90](v25, v37);
  v26(v37, v1);
  v26(v25, v1);
  if (v39) {
    goto LABEL_5;
  }
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = v49;
  uint64_t v41 = v40 + v53;
  ((void (*)(uint64_t, void, uint64_t))v38)(v40 + v53, *MEMORY[0x263F3C308], v1);
  uint64_t v63 = v22;
  uint64_t v57 = (char *)(v41 + v54);
  v38();
  v55 += v41;
  v38();
  char v42 = v56;
  uint64_t v59 = v41;
  v36(v56, v41, v1);
  char v43 = sub_23D005908();
  swift_bridgeObjectRetain();
  v26(v42, v1);
  if (v43 & 1) != 0 || (v61(v42, (uint64_t)v57, v1), char v44 = sub_23D005908(), v26(v42, v1), (v44))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v61(v42, v55, v1);
    char v45 = sub_23D005908();
    v26(v42, v1);
    swift_bridgeObjectRelease();
    if ((v45 & 1) == 0)
    {
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      unint64_t v65 = 0;
      unint64_t v66 = 0xE000000000000000;
      sub_23D005FC8();
      swift_bridgeObjectRelease();
      unint64_t v65 = 0xD00000000000003ALL;
      unint64_t v66 = 0x800000023D0106E0;
      sub_23CF25778(&qword_268BCD490, MEMORY[0x263F3C338]);
      sub_23D0061F8();
      sub_23D0059F8();
      swift_bridgeObjectRelease();
      unint64_t v46 = v65;
      uint64_t v28 = v66;
      sub_23CF25660();
      swift_allocError();
      *uint64_t v47 = v46;
      v47[1] = v28;
      swift_willThrow();
      return v28;
    }
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v27 = objc_msgSend(self, sel_mainBundle);
LABEL_6:
  uint64_t v28 = sub_23D003BA8();

  return v28;
}

uint64_t sub_23CF223F0()
{
  strcpy((char *)v1, "RemapError: ");
  swift_bridgeObjectRetain();
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_23CF22464(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_23CF22474(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_23CF224B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23CF22518(a1, a2, a3, a4, &qword_268BCD880, type metadata accessor for BatchInteraction, type metadata accessor for BatchInteraction);
}

uint64_t sub_23CF224E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23CF22518(a1, a2, a3, a4, &qword_268BCD928, type metadata accessor for CatchUpDonationDecoder.Result.Mail, type metadata accessor for CatchUpDonationDecoder.Result.Mail);
}

uint64_t sub_23CF22518(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_23D006098();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_23CF253BC(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_23CF22798(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23CF22518(a1, a2, a3, a4, &qword_268BCD930, type metadata accessor for CatchUpDonationDecoder.Result.Message, type metadata accessor for CatchUpDonationDecoder.Result.Message);
}

void *sub_23CF227CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD920);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23CF248FC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_23CF228DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCF970);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23CF249F0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_23CF229EC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD900);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23CF24EC4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23CF22AFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23CF22518(a1, a2, a3, a4, &qword_268BCD8D8, MEMORY[0x263F06EA8], MEMORY[0x263F06EA8]);
}

void *sub_23CF22B30(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD938);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_23CF250D8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23CF22C58(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23CF22518(a1, a2, a3, a4, &qword_268BCD8D0, (uint64_t (*)(void))type metadata accessor for URLError, (uint64_t (*)(void))type metadata accessor for URLError);
}

void *sub_23CF22C8C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD8C0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23CF24FE4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_23CF22D9C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD8B8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_23CF251D0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_23CF22EBC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCFDE0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23CF252C8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23CF22FCC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_23CF22518(a1, a2, a3, a4, &qword_268BCD8A8, MEMORY[0x263F06338], MEMORY[0x263F06338]);
}

void *sub_23CF23000(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCFD80);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_23CF25518(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23CF23110(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23CF23138(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_23CF231B0(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_23D005E48();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_23CF231B0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_23CF23284(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_23CF2571C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_23CF2571C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_23CF23284(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23D005E58();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_23CF23440(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_23D006028();
  if (!v8)
  {
    sub_23D006098();
    __break(1u);
LABEL_17:
    uint64_t result = sub_23D0060F8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_23CF23440(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_23CF234D8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_23CF23650(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_23CF23650(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23CF234D8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_23CFDD3D4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_23D005FD8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_23D006098();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_23D005A18();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_23D0060F8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_23D006098();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_23CF23650(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD910);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

unsigned char **sub_23CF237A0(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void *sub_23CF237B0(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_23D0060F8();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_23CF23854@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_23CF23884(uint64_t a1, uint64_t a2)
{
  sub_23D0062C8();
  sub_23D0059D8();
  uint64_t v4 = sub_23D0062F8();

  return sub_23CF23B48(a1, a2, v4);
}

unint64_t sub_23CF238FC(uint64_t a1, unint64_t a2)
{
  sub_23D0062C8();
  sub_23D0062D8();
  if (a2 > 2) {
    sub_23D0059D8();
  }
  uint64_t v4 = sub_23D0062F8();

  return sub_23CF23C2C(a1, a2, v4);
}

unint64_t sub_23CF239B0(unsigned __int8 a1)
{
  sub_23D0062C8();
  sub_23D0062D8();
  uint64_t v2 = sub_23D0062F8();

  return sub_23CF23DF8(a1, v2);
}

unint64_t sub_23CF23A1C(uint64_t a1)
{
  sub_23D005948();
  sub_23D0062C8();
  sub_23D0059D8();
  uint64_t v2 = sub_23D0062F8();
  swift_bridgeObjectRelease();

  return sub_23CF23E98(a1, v2);
}

unint64_t sub_23CF23AB0(uint64_t a1)
{
  sub_23D004268();
  sub_23CF25778(&qword_268BCD898, MEMORY[0x263F3C5D0]);
  uint64_t v2 = sub_23D0058D8();

  return sub_23CF24010(a1, v2);
}

unint64_t sub_23CF23B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_23D006218() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_23D006218() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_23CF23C2C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v5 = a3 & ~v4;
  if (((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
    return v5;
  }
  uint64_t v8 = ~v4;
  while (1)
  {
    uint64_t v9 = *(void *)(v3 + 48) + 16 * v5;
    uint64_t v10 = *(void *)v9;
    unint64_t v11 = *(void *)(v9 + 8);
    switch(v11)
    {
      case 0uLL:
        if (!a2)
        {
          uint64_t v14 = *(void *)v9;
          unint64_t v15 = 0;
          goto LABEL_24;
        }
        goto LABEL_13;
      case 1uLL:
        if (a2 == 1)
        {
          uint64_t v14 = *(void *)v9;
          unint64_t v15 = 1;
          goto LABEL_24;
        }
        goto LABEL_13;
      case 2uLL:
        if (a2 == 2)
        {
          uint64_t v14 = *(void *)v9;
          unint64_t v15 = 2;
          goto LABEL_24;
        }
LABEL_13:
        sub_23CF24FD0(*(void *)v9, *(void *)(v9 + 8));
        sub_23CF24FD0(a1, a2);
        sub_23CF24D10(v10, v11);
        sub_23CF24D10(a1, a2);
        goto LABEL_14;
    }
    if (a2 < 3) {
      goto LABEL_13;
    }
    if (v10 == a1 && v11 == a2) {
      break;
    }
    char v13 = sub_23D006218();
    sub_23CF24FD0(v10, v11);
    sub_23CF24FD0(a1, a2);
    sub_23CF24D10(v10, v11);
    sub_23CF24D10(a1, a2);
    if (v13) {
      return v5;
    }
LABEL_14:
    unint64_t v5 = (v5 + 1) & v8;
    if (((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      return v5;
    }
  }
  sub_23CF24FD0(a1, a2);
  sub_23CF24FD0(a1, a2);
  uint64_t v14 = a1;
  unint64_t v15 = a2;
LABEL_24:
  sub_23CF24D10(v14, v15);
  sub_23CF24D10(a1, a2);
  return v5;
}

unint64_t sub_23CF23DF8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_23CF23E98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_23D005948();
    uint64_t v8 = v7;
    if (v6 == sub_23D005948() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_23D006218();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_23D005948();
          uint64_t v15 = v14;
          if (v13 == sub_23D005948() && v15 == v16) {
            break;
          }
          char v18 = sub_23D006218();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_23CF24010(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_23D004268();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    char v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_23CF25778(&qword_268BCD8A0, MEMORY[0x263F3C5D0]);
      char v15 = sub_23D005908();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_23CF241D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_23CF23884(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23CF69358();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 16 * v6);
  sub_23D001FE4(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23CF242B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_23CF23884(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_23CF69358();
    goto LABEL_7;
  }
  sub_23CF67A14(v17, a5 & 1);
  unint64_t v23 = sub_23CF23884(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_23D006268();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_23CF69220(v14, a3, a4, a1, a2, v20);

  return swift_bridgeObjectRetain();
}

unint64_t sub_23CF2440C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_23CF239B0(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (uint64_t *)(v18[7] + 16 * v12);
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23CF69514();
    goto LABEL_7;
  }
  sub_23CF67D3C(v15, a4 & 1);
  unint64_t v21 = sub_23CF239B0(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    unint64_t result = sub_23D006268();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_23CF69270(v12, a3, a1, a2, v18);
}

uint64_t sub_23CF24544(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_23CF238FC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23CF696D4();
    goto LABEL_7;
  }
  sub_23CF68020(v15, a4 & 1);
  unint64_t v21 = sub_23CF238FC(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_23D006268();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_23CF692B8(v12, a2, a3, a1, v18);

  return sub_23CF24FD0(a2, a3);
}

uint64_t sub_23CF24688(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_23CF23884(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_23CF69D08();
      goto LABEL_7;
    }
    sub_23CF68A5C(v15, a4 & 1);
    unint64_t v21 = sub_23CF23884(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_23D006268();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + (v12 << 6);
    return sub_23CF25604((uint64_t)a1, v19);
  }
LABEL_13:
  sub_23CF69300(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

unint64_t sub_23CF247D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD908);
  uint64_t v3 = (void *)sub_23D0060E8();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  long long v14 = *(_OWORD *)(a1 + 40);
  unint64_t result = sub_23CF239B0(v4);
  long long v6 = v14;
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v6;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    unint64_t v12 = (_OWORD *)((char *)v8 + 24);
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    long long v15 = *v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_23CF239B0(v4);
    uint64_t v8 = v12;
    long long v6 = v15;
    if (v13) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23CF248FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

uint64_t sub_23CF249F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

uint64_t sub_23CF24AE4()
{
  uint64_t v0 = sub_23D003F38();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!MEMORY[0x23ECF5E10](v2)) {
    return 0xD000000000000013;
  }
  uint64_t v5 = 0x632D74726F706572;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, *MEMORY[0x263F3C1E8], v0);
  sub_23CF25778(&qword_268BCD918, MEMORY[0x263F3C208]);
  sub_23D005AB8();
  sub_23D005AB8();
  if (v8[2] == v8[0] && v8[3] == v8[1])
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  }
  else
  {
    char v6 = sub_23D006218();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    if ((v6 & 1) == 0) {
      return 0x6C6176652D736F69;
    }
  }
  return v5;
}

uint64_t sub_23CF24D10(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23CF24D24()
{
  if (sub_23CF20F64())
  {
    id v0 = objc_msgSend(self, sel_mainBundle);
    uint64_t v1 = sub_23D003BA8();
  }
  else
  {
    sub_23D005FC8();
    swift_bridgeObjectRelease();
    sub_23D004028();
    sub_23CF25778(&qword_268BCD490, MEMORY[0x263F3C338]);
    sub_23D0061F8();
    sub_23D0059F8();
    swift_bridgeObjectRelease();
    uint64_t v1 = 0xD00000000000003ALL;
    sub_23CF25660();
    swift_allocError();
    *uint64_t v2 = 0xD00000000000003ALL;
    v2[1] = 0x800000023D010AA0;
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_23CF24EC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

uint64_t sub_23CF24FD0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23CF24FE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

uint64_t sub_23CF250D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

uint64_t sub_23CF251D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

uint64_t sub_23CF252C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

uint64_t sub_23CF253BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

char *sub_23CF25518(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    char v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_23D0060F8();
  __break(1u);
  return result;
}

uint64_t sub_23CF25604(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_23CF25660()
{
  unint64_t result = qword_268BCD8E0;
  if (!qword_268BCD8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD8E0);
  }
  return result;
}

uint64_t sub_23CF256B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD4A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF2571C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_23CF25778(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *_s10RemapErrorVMa()
{
  return &_s10RemapErrorVN;
}

uint64_t sub_23CF257D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v71 = a2;
  uint64_t v70 = type metadata accessor for AnalyticsEvent();
  MEMORY[0x270FA5388](v70);
  uint64_t v69 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCE600);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_23D003CE8();
  uint64_t v73 = *(void *)(v9 - 8);
  uint64_t v74 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v72 = (char *)v63 - v13;
  uint64_t v14 = sub_23D003DB8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD998);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  MEMORY[0x270FA5388](v21);
  unint64_t v23 = (UIImage **)((char *)v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23CF27EA0(a1, (uint64_t)v23);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_23CF2800C((uint64_t)v23, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
    uint64_t v45 = type metadata accessor for FullScreenPreviewController.Content(0);
    sub_23CF27EA0(a1, (uint64_t)&v20[*(int *)(v45 + 20)]);
    sub_23D003DA8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v20, 0, 1, v45);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    v63[-2] = v3;
    v63[-1] = v20;
    v76[0] = v3;
    sub_23CF27F64(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
    sub_23D003DC8();
    swift_release();
    sub_23CEE8BB4((uint64_t)v20, &qword_268BCD998);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v8, 1, 1, v74);
    uint64_t v47 = swift_getKeyPath();
    MEMORY[0x270FA5388](v47);
    v63[-2] = v3;
    v63[-1] = v8;
    v76[0] = v3;
    sub_23D003DC8();
    swift_release();
    sub_23CEE8BB4((uint64_t)v8, (uint64_t *)&unk_268BCE600);
LABEL_7:
    uint64_t v48 = sub_23D004028();
    uint64_t v49 = (uint64_t)v69;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v69, v71, v48);
    swift_storeEnumTagMultiPayload();
    sub_23CFDE698();
    return sub_23CF2800C(v49, (uint64_t (*)(void))type metadata accessor for AnalyticsEvent);
  }
  unint64_t v66 = v12;
  uint64_t v67 = v8;
  uint64_t v68 = *v23;
  uint64_t v24 = type metadata accessor for FullScreenPreviewController.Content(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v20, 1, 1, v24);
  uint64_t v25 = swift_getKeyPath();
  MEMORY[0x270FA5388](v25);
  v63[-2] = v3;
  v63[-1] = v20;
  uint64_t v26 = v3 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController___observationRegistrar;
  uint64_t v64 = v3;
  v76[0] = v3;
  v63[2] = sub_23CF27F64(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
  v63[3] = v26;
  sub_23D003DC8();
  swift_release();
  sub_23CEE8BB4((uint64_t)v20, &qword_268BCD998);
  id v27 = NSTemporaryDirectory();
  uint64_t v28 = sub_23D005948();
  uint64_t v30 = v29;

  sub_23D003DA8();
  sub_23D003D88();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v76[0] = v28;
  v76[1] = v30;
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  sub_23D0059F8();
  char v31 = v72;
  sub_23D003C28();
  swift_bridgeObjectRelease();
  if (qword_268BCCCB0 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_23D004498();
  uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_268BDAD70);
  uint64_t v34 = v73;
  uint64_t v35 = v74;
  os_log_type_t v36 = v66;
  v63[0] = *(void *)(v73 + 16);
  v63[1] = v73 + 16;
  ((void (*)(char *, char *, uint64_t))v63[0])(v66, v31, v74);
  uint64_t v65 = v33;
  uint64_t v37 = sub_23D004478();
  os_log_type_t v38 = sub_23D005C88();
  if (os_log_type_enabled(v37, v38))
  {
    char v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    v76[0] = v40;
    *(_DWORD *)char v39 = 136315138;
    uint64_t v41 = sub_23D003C18();
    uint64_t v75 = sub_23CF231B0(v41, v42, v76);
    uint64_t v34 = v73;
    sub_23D005E48();
    swift_bridgeObjectRelease();
    char v43 = *(char **)(v34 + 8);
    ((void (*)(char *, uint64_t))v43)(v36, v74);
    _os_log_impl(&dword_23CEE3000, v37, v38, "Will store quicklook item in temp location: %s", v39, 0xCu);
    swift_arrayDestroy();
    uint64_t v44 = v40;
    uint64_t v35 = v74;
    MEMORY[0x23ECF6610](v44, -1, -1);
    MEMORY[0x23ECF6610](v39, -1, -1);
  }
  else
  {
    char v43 = *(char **)(v34 + 8);
    ((void (*)(char *, uint64_t))v43)(v36, v35);
  }

  uint64_t v52 = (uint64_t)v67;
  uint64_t v51 = v68;
  uint64_t v53 = UIImagePNGRepresentation(v68);
  if (v53)
  {
    uint64_t v54 = v53;
    uint64_t v67 = v43;
    uint64_t v55 = sub_23D003D08();
    unint64_t v57 = v56;

    sub_23D003D18();
    ((void (*)(uint64_t, char *, uint64_t))v63[0])(v52, v31, v35);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v52, 0, 1, v35);
    uint64_t v61 = swift_getKeyPath();
    MEMORY[0x270FA5388](v61);
    uint64_t v62 = v64;
    v63[-2] = v64;
    v63[-1] = v52;
    v76[0] = v62;
    sub_23D003DC8();
    swift_release();
    sub_23CEE8BB4(v52, (uint64_t *)&unk_268BCE600);
    sub_23CF05F80(v55, v57);

    ((void (*)(char *, uint64_t))v67)(v72, v35);
    goto LABEL_7;
  }
  unsigned int v58 = sub_23D004478();
  os_log_type_t v59 = sub_23D005C98();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v60 = 0;
    _os_log_impl(&dword_23CEE3000, v58, v59, "Failed to generate PNG data", v60, 2u);
    MEMORY[0x23ECF6610](v60, -1, -1);
  }

  return ((uint64_t (*)(char *, uint64_t))v43)(v31, v35);
}

uint64_t sub_23CF263A0@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF26534(&OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__content, &qword_268BCD998, a1);
}

uint64_t sub_23CF263BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23CF26624(a1, &OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__content, &qword_268BCD998, a2);
}

uint64_t sub_23CF263D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD998);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23CEE82CC(a1, (uint64_t)v6, &qword_268BCD998);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_23CF27F64(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
  sub_23D003DC8();
  swift_release();
  return sub_23CEE8BB4((uint64_t)v6, &qword_268BCD998);
}

uint64_t sub_23CF26518@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF26534(&OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__quickLookPreviewURL, (uint64_t *)&unk_268BCE600, a1);
}

uint64_t sub_23CF26534@<X0>(void *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  swift_getKeyPath();
  sub_23CF27F64(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
  sub_23D003DD8();
  swift_release();
  uint64_t v7 = v3 + *a1;
  swift_beginAccess();
  return sub_23CEE82CC(v7, a3, a2);
}

uint64_t sub_23CF26608@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23CF26624(a1, &OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__quickLookPreviewURL, (uint64_t *)&unk_268BCE600, a2);
}

uint64_t sub_23CF26624@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t *a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a1;
  swift_getKeyPath();
  sub_23CF27F64(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
  sub_23D003DD8();
  swift_release();
  uint64_t v8 = v7 + *a2;
  swift_beginAccess();
  return sub_23CEE82CC(v8, a4, a3);
}

uint64_t sub_23CF266FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCE600);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23CEE82CC(a1, (uint64_t)v6, (uint64_t *)&unk_268BCE600);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_23CF27F64(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
  sub_23D003DC8();
  swift_release();
  return sub_23CEE8BB4((uint64_t)v6, (uint64_t *)&unk_268BCE600);
}

uint64_t sub_23CF2683C(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  uint64_t v6 = a1 + *a3;
  swift_beginAccess();
  sub_23CF2806C(a2, v6, a4);
  return swift_endAccess();
}

uint64_t sub_23CF268AC()
{
  sub_23CEE8BB4(v0 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__content, &qword_268BCD998);
  sub_23CEE8BB4(v0 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__quickLookPreviewURL, (uint64_t *)&unk_268BCE600);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Feedback27FullScreenPreviewController___observationRegistrar;
  uint64_t v2 = sub_23D003E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_23CF2697C()
{
  return type metadata accessor for FullScreenPreviewController(0);
}

uint64_t type metadata accessor for FullScreenPreviewController(uint64_t a1)
{
  return sub_23CF05EF0(a1, (uint64_t *)&unk_268BCD958);
}

void sub_23CF269A4()
{
  sub_23CF26B00(319, &qword_268BCD968, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController.Content);
  if (v0 <= 0x3F)
  {
    sub_23CF26B00(319, &qword_268BCD970, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F)
    {
      sub_23D003E18();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t type metadata accessor for FullScreenPreviewController.Content(uint64_t a1)
{
  return sub_23CF05EF0(a1, (uint64_t *)&unk_268BCD978);
}

void sub_23CF26B00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_23D005DF8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_23CF26B54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_23D003DB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = sub_23D003B88();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
        break;
      case 2u:
        uint64_t v14 = *(void **)v10;
        *uint64_t v9 = *(void *)v10;
        id v15 = v14;
        break;
      case 3u:
      case 4u:
        *uint64_t v9 = *(void *)v10;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v11 = *((void *)v10 + 1);
        *uint64_t v9 = *(void *)v10;
        v9[1] = v11;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for FullScreenPreviewController.Content.PreviewType(uint64_t a1)
{
  return sub_23CF05EF0(a1, (uint64_t *)&unk_268BCD988);
}

void sub_23CF26D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (void **)(a1 + *(int *)(a2 + 20));
  type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 4u:
      swift_bridgeObjectRelease();
      break;
    case 1u:
      uint64_t v6 = sub_23D003B88();
      uint64_t v7 = *(void (**)(void **, uint64_t))(*(void *)(v6 - 8) + 8);
      v7(v5, v6);
      break;
    case 2u:
      uint64_t v8 = *v5;

      break;
    default:
      return;
  }
}

uint64_t sub_23CF26E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v11 = sub_23D003B88();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
      break;
    case 2u:
      uint64_t v12 = *(void **)v9;
      *uint64_t v8 = *(void *)v9;
      id v13 = v12;
      break;
    case 3u:
    case 4u:
      *uint64_t v8 = *(void *)v9;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v10 = *(void *)(v9 + 8);
      *uint64_t v8 = *(void *)v9;
      v8[1] = v10;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23CF27024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = a2 + v7;
    sub_23CF2800C(a1 + v7, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
    type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = sub_23D003B88();
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        break;
      case 2u:
        uint64_t v11 = *(void **)v9;
        *uint64_t v8 = *(void *)v9;
        id v12 = v11;
        break;
      case 3u:
      case 4u:
        *uint64_t v8 = *(void *)v9;
        swift_bridgeObjectRetain();
        break;
      default:
        *uint64_t v8 = *(void *)v9;
        v8[1] = *(void *)(v9 + 8);
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23CF271D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_23D003B88();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_23CF272E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_23CF2800C(a1 + v7, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
    uint64_t v10 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_23D003B88();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23CF27414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF27428);
}

uint64_t sub_23CF27428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23D003DB8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_23CF27520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF27534);
}

uint64_t sub_23CF27534(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_23D003DB8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_23CF27638()
{
  uint64_t result = sub_23D003DB8();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FullScreenPreviewController.Content.PreviewType(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_23CF27700(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = sub_23D003B88();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 2u:
        uint64_t v9 = *a2;
        *(void *)a1 = *a2;
        uint64_t v10 = v9;
        break;
      case 3u:
      case 4u:
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v6;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23CF27884(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 3u:
    case 4u:
      swift_bridgeObjectRelease();
      break;
    case 1u:
      uint64_t v2 = sub_23D003B88();
      uint64_t v3 = *(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8);
      v3(a1, v2);
      break;
    case 2u:
      uint64_t v4 = *a1;

      break;
    default:
      return;
  }
}

void *sub_23CF27980(void *a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = sub_23D003B88();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      break;
    case 2u:
      uint64_t v6 = *(void **)a2;
      *a1 = *(void *)a2;
      id v7 = v6;
      break;
    case 3u:
    case 4u:
      *a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v4;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_23CF27AB4(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_23CF2800C((uint64_t)a1, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v4 = sub_23D003B88();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
      case 2u:
        uint64_t v5 = *a2;
        *a1 = *a2;
        id v6 = v5;
        break;
      case 3u:
      case 4u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23CF27C14(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_23D003B88();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_23CF27CCC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_23CF2800C((uint64_t)a1, type metadata accessor for FullScreenPreviewController.Content.PreviewType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_23D003B88();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23CF27DA8()
{
  uint64_t result = sub_23D003B88();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23CF27E58()
{
  return sub_23CF27F64((unint64_t *)&qword_268BCD440, MEMORY[0x263F07508]);
}

uint64_t sub_23CF27EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF27F04@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23CF26624(a1, &OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__content, &qword_268BCD998, a2);
}

uint64_t sub_23CF27F38()
{
  return sub_23CF2683C(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__content, &qword_268BCD998);
}

uint64_t sub_23CF27F64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF27FAC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23CF26624(a1, &OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__quickLookPreviewURL, (uint64_t *)&unk_268BCE600, a2);
}

uint64_t sub_23CF27FE0()
{
  return sub_23CF2683C(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC8Feedback27FullScreenPreviewController__quickLookPreviewURL, (uint64_t *)&unk_268BCE600);
}

uint64_t sub_23CF2800C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23CF2806C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

void sub_23CF280D0(uint64_t a1)
{
  v28[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_23D003CE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08850]), sel_init);
  id v7 = (void *)sub_23D003C48();
  v28[0] = 0;
  unsigned int v8 = objc_msgSend(v6, sel_removeItemAtURL_error_, v7, v28);

  id v9 = v28[0];
  if (v8)
  {
    id v10 = v9;
  }
  else
  {
    id v26 = v28[0];
    id v11 = v28[0];
    uint64_t v12 = (void *)sub_23D003BC8();

    swift_willThrow();
    if (qword_268BCCCB0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_23D004498();
    __swift_project_value_buffer(v13, (uint64_t)qword_268BDAD70);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    id v14 = v12;
    id v15 = v12;
    uint64_t v16 = sub_23D004478();
    os_log_type_t v17 = sub_23D005C98();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      id v26 = (id)swift_slowAlloc();
      v28[0] = v26;
      *(_DWORD *)uint64_t v18 = 136315394;
      sub_23CF27F64((unint64_t *)&qword_268BCD5D0, MEMORY[0x263F06EA8]);
      uint64_t v19 = sub_23D0061F8();
      uint64_t v27 = sub_23CF231B0(v19, v20, (uint64_t *)v28);
      sub_23D005E48();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      *(_WORD *)(v18 + 12) = 2114;
      id v21 = v12;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v27 = v22;
      sub_23D005E48();
      unint64_t v23 = v25;
      *uint64_t v25 = v22;

      _os_log_impl(&dword_23CEE3000, v16, v17, "Failed to delete file at: %s - %{public}@", (uint8_t *)v18, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDC00);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v23, -1, -1);
      id v24 = v26;
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v24, -1, -1);
      MEMORY[0x23ECF6610](v18, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
}

uint64_t sub_23CF2850C()
{
  return sub_23CF27F38();
}

uint64_t sub_23CF28524()
{
  return sub_23CF27FE0();
}

uint64_t sub_23CF2853C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23CF28564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v33 = a4;
  uint64_t v9 = sub_23D005828();
  uint64_t v32 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_23D005858();
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_23D005878();
  uint64_t v15 = *(void *)(v34 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v34);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v27 - v19;
  sub_23D005798();
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  sub_23D004798();
  uint64_t result = swift_release();
  if (a3)
  {
    sub_23CF28970();
    uint64_t v22 = a3;
    uint64_t v28 = a3;
    uint64_t v23 = v33;
    swift_retain();
    id v24 = (void *)sub_23D005D28();
    sub_23D005868();
    MEMORY[0x23ECF5310](v18, a5);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v15 + 8);
    v29(v18, v34);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v22;
    *(void *)(v25 + 24) = v23;
    aBlock[4] = sub_23CF289E8;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23CF6021C;
    aBlock[3] = &block_descriptor_0;
    id v26 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_23D005848();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_23CF28A28();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
    sub_23CF28A80();
    sub_23D005ED8();
    MEMORY[0x23ECF5770](v20, v14, v11, v26);
    _Block_release(v26);

    sub_23CEE93B4(v28);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v31);
    return ((uint64_t (*)(char *, uint64_t))v29)(v20, v34);
  }
  return result;
}

uint64_t sub_23CF28948()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_23CF28970()
{
  unint64_t result = qword_268BCDC10;
  if (!qword_268BCDC10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_268BCDC10);
  }
  return result;
}

uint64_t sub_23CF289B0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23CF289E8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_23CF28A28()
{
  unint64_t result = qword_268BCD9A0;
  if (!qword_268BCD9A0)
  {
    sub_23D005828();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD9A0);
  }
  return result;
}

unint64_t sub_23CF28A80()
{
  unint64_t result = qword_268BCD9A8;
  if (!qword_268BCD9A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_268BCDC20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD9A8);
  }
  return result;
}

uint64_t destroy for BatchButton()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for BatchButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BatchButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BatchButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchButton()
{
  return &type metadata for BatchButton;
}

uint64_t sub_23CF28CF0()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_23CF28D0C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1[1];
  *(void *)&v17[0] = *a1;
  *((void *)&v17[0] + 1) = v3;
  sub_23CEE8D00();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_23D005228();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  uint64_t v11 = sub_23D005778();
  sub_23CF58A68(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v17, 0.0, 1, 0.0, 1, v11, v12, v4, v6, v10, v8);
  sub_23CEE7DE0(v4, v6, v10);
  swift_bridgeObjectRelease();
  long long v13 = v17[7];
  *(_OWORD *)(a2 + 96) = v17[6];
  *(_OWORD *)(a2 + 112) = v13;
  *(_OWORD *)(a2 + 128) = v17[8];
  long long v14 = v17[3];
  *(_OWORD *)(a2 + 32) = v17[2];
  *(_OWORD *)(a2 + 48) = v14;
  long long v15 = v17[5];
  *(_OWORD *)(a2 + 64) = v17[4];
  *(_OWORD *)(a2 + 80) = v15;
  __n128 result = (__n128)v17[1];
  *(_OWORD *)a2 = v17[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_23CF28E10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v90 = a1;
  uint64_t v88 = sub_23D004C48();
  uint64_t v73 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v72 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD9B0);
  uint64_t v75 = *(void *)(v89 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v89);
  uint64_t v71 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v74 = (char *)&v59 - v5;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD9B8);
  MEMORY[0x270FA5388](v86);
  uint64_t v87 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_23D004EF8();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v68 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_23D0045F8();
  uint64_t v8 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  unint64_t v79 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD9C0);
  uint64_t v10 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD9C8);
  MEMORY[0x270FA5388](v78);
  long long v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD9D0);
  MEMORY[0x270FA5388](v85);
  uint64_t v82 = (uint64_t)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD9D8);
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v62 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD9E0);
  uint64_t v63 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v61 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD9E8);
  uint64_t v18 = MEMORY[0x270FA5388](v84);
  uint64_t v60 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v67 = (uint64_t)&v59 - v20;
  char v21 = *(unsigned char *)(v1 + 40);
  uint64_t v83 = v1;
  uint64_t v91 = v1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD9F0);
  sub_23CF29AF8();
  uint64_t v76 = v8 + 16;
  uint64_t v77 = v10 + 16;
  sub_23D0055F8();
  uint64_t v22 = v79;
  uint64_t v23 = v81;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v79, *MEMORY[0x263F18558], v81);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = (uint64_t *)&v14[*(int *)(v78 + 36)];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDA00);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v25 + *(int *)(v26 + 28), v22, v23);
  *uint64_t v25 = KeyPath;
  uint64_t v27 = v80;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v80);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v22, v23);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);
  LOBYTE(v12) = *(unsigned char *)(v83 + 16);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = swift_allocObject();
  *(unsigned char *)(v29 + 16) = (_BYTE)v12;
  if (v21)
  {
    uint64_t v30 = v82;
    sub_23CEE82CC((uint64_t)v14, v82, &qword_268BCD9C8);
    uint64_t v31 = v85;
    uint64_t v32 = (uint64_t *)(v30 + *(int *)(v85 + 36));
    *uint64_t v32 = v28;
    v32[1] = (uint64_t)sub_23CEED608;
    v32[2] = v29;
    sub_23CEE8BB4((uint64_t)v14, &qword_268BCD9C8);
    uint64_t v33 = v72;
    sub_23D004C38();
    unint64_t v34 = sub_23CF29B8C();
    uint64_t v35 = sub_23CF29E50(&qword_268BCDA38, MEMORY[0x263F19958]);
    uint64_t v36 = v71;
    uint64_t v37 = v88;
    sub_23D0052A8();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v33, v37);
    sub_23CEE8BB4(v30, &qword_268BCD9D0);
    uint64_t v38 = v75;
    char v39 = v74;
    uint64_t v40 = v89;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v74, v36, v89);
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v87, v39, v40);
    swift_storeEnumTagMultiPayload();
    sub_23CF29CF0();
    uint64_t v92 = v31;
    uint64_t v93 = v37;
    unint64_t v94 = v34;
    uint64_t v95 = v35;
    swift_getOpaqueTypeConformance2();
    sub_23D004D88();
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  }
  else
  {
    uint64_t v42 = v82;
    sub_23CEE82CC((uint64_t)v14, v82, &qword_268BCD9C8);
    uint64_t v43 = v85;
    uint64_t v44 = (uint64_t *)(v42 + *(int *)(v85 + 36));
    *uint64_t v44 = v28;
    v44[1] = (uint64_t)sub_23CEED8AC;
    v44[2] = v29;
    sub_23CEE8BB4((uint64_t)v14, &qword_268BCD9C8);
    uint64_t v45 = v68;
    sub_23D004EE8();
    unint64_t v46 = sub_23CF29B8C();
    uint64_t v47 = sub_23CF29E50(&qword_268BCD168, MEMORY[0x263F1A3B8]);
    uint64_t v48 = v62;
    uint64_t v49 = v70;
    sub_23D0052A8();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v49);
    sub_23CEE8BB4(v42, &qword_268BCD9D0);
    uint64_t v92 = v43;
    uint64_t v93 = v49;
    unint64_t v94 = v46;
    uint64_t v95 = v47;
    swift_getOpaqueTypeConformance2();
    uint64_t v50 = v61;
    uint64_t v51 = v66;
    sub_23D005448();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v48, v51);
    uint64_t v52 = sub_23D005538();
    uint64_t v53 = v63;
    uint64_t v54 = v60;
    uint64_t v55 = v65;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v50, v65);
    *(void *)&v54[*(int *)(v84 + 36)] = v52;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v55);
    uint64_t v56 = (uint64_t)v54;
    uint64_t v57 = v67;
    sub_23CF29EA8(v56, v67);
    sub_23CEE82CC(v57, v87, &qword_268BCD9E8);
    swift_storeEnumTagMultiPayload();
    sub_23CF29CF0();
    uint64_t v58 = sub_23CF29E50(&qword_268BCDA38, MEMORY[0x263F19958]);
    uint64_t v92 = v43;
    uint64_t v93 = v88;
    unint64_t v94 = v46;
    uint64_t v95 = v58;
    swift_getOpaqueTypeConformance2();
    sub_23D004D88();
    return sub_23CEE8BB4(v57, &qword_268BCD9E8);
  }
}

uint64_t sub_23CF29AB4@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF28E10(a1);
}

double sub_23CF29AF0@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_23CF28D0C((void *)*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_23CF29AF8()
{
  unint64_t result = qword_268BCD9F8;
  if (!qword_268BCD9F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD9F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD9F8);
  }
  return result;
}

uint64_t sub_23CF29B7C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unint64_t sub_23CF29B8C()
{
  unint64_t result = qword_268BCDA08;
  if (!qword_268BCDA08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD9D0);
    sub_23CF29C2C();
    sub_23CEE8D90(&qword_268BCDA28, &qword_268BCDA30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDA08);
  }
  return result;
}

unint64_t sub_23CF29C2C()
{
  unint64_t result = qword_268BCDA10;
  if (!qword_268BCDA10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD9C8);
    sub_23CEE8D90(&qword_268BCDA18, &qword_268BCD9C0);
    sub_23CEE8D90(&qword_268BCDA20, &qword_268BCDA00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDA10);
  }
  return result;
}

unint64_t sub_23CF29CF0()
{
  unint64_t result = qword_268BCDA40;
  if (!qword_268BCDA40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD9E8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD9D8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD9D0);
    sub_23D004EF8();
    sub_23CF29B8C();
    sub_23CF29E50(&qword_268BCD168, MEMORY[0x263F1A3B8]);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_23CEE8D90(&qword_268BCDA48, (uint64_t *)&unk_268BCDCA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDA40);
  }
  return result;
}

uint64_t sub_23CF29E50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF29E98()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_23CF29EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD9E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for BatchButton.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CF29FDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchButton.Style()
{
  return &type metadata for BatchButton.Style;
}

unint64_t sub_23CF2A018()
{
  unint64_t result = qword_268BCDA50;
  if (!qword_268BCDA50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDA58);
    sub_23CF29CF0();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD9D0);
    sub_23D004C48();
    sub_23CF29B8C();
    sub_23CF29E50(&qword_268BCDA38, MEMORY[0x263F19958]);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDA50);
  }
  return result;
}

unint64_t sub_23CF2A124()
{
  unint64_t result = qword_268BCDA60;
  if (!qword_268BCDA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDA60);
  }
  return result;
}

void **sub_23CF2A17C(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_23D004028();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)v7 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)v16;
    LOBYTE(v16) = v16[8];
    *(void *)uint64_t v15 = v17;
    v15[8] = (char)v16;
  }
  swift_retain();
  return v7;
}

uint64_t sub_23CF2A288(id *a1, uint64_t a2)
{
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_23D004028();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_release();
}

void **sub_23CF2A314(void **a1, void **a2, uint64_t a3)
{
  unsigned int v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_23D004028();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  swift_retain();
  return a1;
}

void **sub_23CF2A3D8(void **a1, void **a2, uint64_t a3)
{
  unsigned int v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_23D004028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_23CF2A49C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23D004028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  return a1;
}

void **sub_23CF2A544(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_23D004028();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v13;
  swift_release();
  return a1;
}

uint64_t sub_23CF2A5FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF2A610);
}

uint64_t sub_23CF2A610(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_23D004028();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_23CF2A6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF2A6D4);
}

void *sub_23CF2A6D4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_23D004028();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ImageWithPreview()
{
  uint64_t result = qword_268BCDA68;
  if (!qword_268BCDA68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF2A7C8()
{
  uint64_t result = sub_23D004028();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23CF2A86C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF2A888(void **a1)
{
  uint64_t v2 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (void **)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for ImageWithPreview();
  char v6 = *((unsigned char *)a1 + *(int *)(v5 + 24) + 8);
  uint64_t v7 = swift_retain();
  sub_23CF39C80(v7, v6);
  swift_release();
  uint64_t v8 = *a1;
  *uint64_t v4 = *a1;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (uint64_t)a1 + *(int *)(v5 + 20);
  id v10 = v8;
  sub_23CF257D0((uint64_t)v4, v9);
  swift_release();
  return sub_23CF2AD74((uint64_t)v4);
}

uint64_t sub_23CF2A984(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  sub_23CF2AAB8(v1, (uint64_t)&v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  sub_23CF2AC1C((uint64_t)&v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)], v5 + v4);
  uint64_t v8 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDA78);
  sub_23CF2ACF8();
  return sub_23D0055F8();
}

uint64_t sub_23CF2AAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageWithPreview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF2AB1C()
{
  uint64_t v1 = (int *)(type metadata accessor for ImageWithPreview() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;

  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = sub_23D004028();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_23CF2AC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImageWithPreview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF2AC80()
{
  uint64_t v1 = *(void *)(type metadata accessor for ImageWithPreview() - 8);
  uint64_t v2 = (void **)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return sub_23CF2A888(v2);
}

id sub_23CF2ACE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = **(void ***)(v1 + 16);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  return v2;
}

unint64_t sub_23CF2ACF8()
{
  unint64_t result = qword_268BCDA80;
  if (!qword_268BCDA80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDA78);
    sub_23CEF927C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDA80);
  }
  return result;
}

uint64_t sub_23CF2AD74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FullScreenPreviewController.Content.PreviewType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23CF2ADD4()
{
  unint64_t result = qword_268BCDA88;
  if (!qword_268BCDA88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDA90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDA88);
  }
  return result;
}

uint64_t sub_23CF2AE30@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + qword_268BCDA98);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_23CF289E8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_23CEE935C(v4);
}

uint64_t sub_23CF2AED0(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_23CF2B864;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + qword_268BCDA98);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_23CEE935C(v3);
  return sub_23CEE93B4(v8);
}

uint64_t sub_23CF2AF98()
{
  uint64_t v1 = (uint64_t *)(v0 + qword_268BCDA98);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_23CEE935C(*v1);
  return v2;
}

uint64_t sub_23CF2AFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + qword_268BCDA98);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_23CEE93B4(v6);
}

uint64_t (*sub_23CF2B054())()
{
  return j__swift_endAccess;
}

char *BatchEvaluationViewController.__allocating_init(scoreController:useNavigationStack:showsCloseButton:onDismiss:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  return BatchEvaluationViewController.init(scoreController:useNavigationStack:showsCloseButton:onDismiss:)(a1, a2, a3, a4, a5);
}

char *BatchEvaluationViewController.init(scoreController:useNavigationStack:showsCloseButton:onDismiss:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)(v5 + qword_268BCDA98);
  type metadata accessor for BatchController();
  *uint64_t v8 = 0;
  v8[1] = 0;
  swift_allocObject();
  uint64_t v9 = swift_retain();
  BatchController.init(scoreController:)(v9);
  sub_23D0055B8();
  id v10 = (char *)sub_23D004CA8();
  id v11 = (uint64_t *)&v10[qword_268BCDA98];
  swift_beginAccess();
  uint64_t v12 = *v11;
  *id v11 = a4;
  v11[1] = a5;
  uint64_t v13 = v10;
  swift_retain();
  sub_23CEE93B4(v12);
  uint64_t v14 = v13;
  objc_msgSend(v14, sel_setModalInPresentation_, 1);

  swift_release();
  swift_release();
  return v14;
}

void sub_23CF2B254(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_23CF2B580();
}

uint64_t sub_23CF2B280(int a1, int a2, void *aBlock)
{
  id v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  _s8Feedback29BatchEvaluationViewControllerC010shouldShowB2UI10completionyySbc_tFZ_0((void (*)(uint64_t))sub_23CF2B814, v4);

  return swift_release();
}

id sub_23CF2B2F4(char a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for BatchEvaluationViewController();
  objc_msgSendSuper2(&v7, sel_viewWillDisappear_, a1 & 1);
  id result = objc_msgSend(v1, sel_isBeingDismissed);
  if (result)
  {
    uint64_t v4 = &v1[qword_268BCDA98];
    id result = (id)swift_beginAccess();
    uint64_t v5 = *(void (**)(uint64_t))v4;
    if (*(void *)v4)
    {
      uint64_t v6 = swift_retain();
      v5(v6);
      return (id)sub_23CEE93B4((uint64_t)v5);
    }
  }
  return result;
}

void sub_23CF2B3A0(void *a1, uint64_t a2, uint64_t a3)
{
  v8.receiver = a1;
  v8.super_class = (Class)type metadata accessor for BatchEvaluationViewController();
  uint64_t v4 = (char *)v8.receiver;
  objc_msgSendSuper2(&v8, sel_viewWillDisappear_, a3);
  if (objc_msgSend(v4, sel_isBeingDismissed))
  {
    uint64_t v5 = &v4[qword_268BCDA98];
    swift_beginAccess();
    uint64_t v6 = *(void (**)(uint64_t))v5;
    if (*(void *)v5)
    {
      uint64_t v7 = swift_retain();
      v6(v7);
      sub_23CEE93B4((uint64_t)v6);
    }
  }
}

void BatchEvaluationViewController.__allocating_init(rootView:)()
{
}

void BatchEvaluationViewController.init(rootView:)()
{
}

void BatchEvaluationViewController.__allocating_init(coder:rootView:)()
{
}

void BatchEvaluationViewController.init(coder:rootView:)()
{
}

uint64_t sub_23CF2B520()
{
  return sub_23CEE93B4(*(void *)(v0 + qword_268BCDA98));
}

id BatchEvaluationViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BatchEvaluationViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23CF2B56C(uint64_t a1)
{
  return sub_23CEE93B4(*(void *)(a1 + qword_268BCDA98));
}

void sub_23CF2B580()
{
  uint64_t v1 = &v0[qword_268BCDA98];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;

  sub_23D005FC8();
  swift_bridgeObjectRelease();
  sub_23D0060A8();
  __break(1u);
}

uint64_t type metadata accessor for BatchEvaluationViewController()
{
  uint64_t result = qword_268BCDAA0;
  if (!qword_268BCDAA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF2B664()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for BatchEvaluationViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BatchEvaluationViewController);
}

uint64_t dispatch thunk of BatchEvaluationViewController.onDismiss.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for BatchEvaluationViewController
                              + (*MEMORY[0x263F8EED0] & *v0)
                              + 8))();
}

uint64_t dispatch thunk of BatchEvaluationViewController.onDismiss.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for BatchEvaluationViewController
                              + (*MEMORY[0x263F8EED0] & *v0)
                              + 16))();
}

uint64_t dispatch thunk of BatchEvaluationViewController.onDismiss.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for BatchEvaluationViewController
                              + (*MEMORY[0x263F8EED0] & *v0)
                              + 24))();
}

uint64_t dispatch thunk of BatchEvaluationViewController.__allocating_init(scoreController:useNavigationStack:showsCloseButton:onDismiss:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for BatchEvaluationViewController + v0 + 32))();
}

uint64_t sub_23CF2B7D4()
{
  return type metadata accessor for BatchEvaluationViewController();
}

uint64_t sub_23CF2B7DC()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_23CF2B814(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_23CF2B82C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23CF2B864()
{
  return sub_23CF7908C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t *sub_23CF2B870(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    objc_super v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_23D003DB8();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    id v11 = (int *)type metadata accessor for BatchInteraction(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = *(void **)&v9[v12];
    *(void *)&v8[v12] = v13;
    *(void *)&v8[v11[6]] = *(void *)&v9[v11[6]];
    uint64_t v14 = v11[7];
    uint64_t v15 = &v8[v14];
    uint64_t v16 = (void **)&v9[v14];
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    id v17 = v13;
    swift_retain();
    LODWORD(v13) = swift_getEnumCaseMultiPayload();
    uint64_t v18 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v95 = *(void *)(v18 - 8);
    uint64_t v19 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v95 + 48);
    int v20 = v19(v16, 1, v18);
    if (v13 == 1)
    {
      if (v20)
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v26 = *v16;
            *uint64_t v15 = *v16;
            id v27 = v26;
            break;
          case 3u:
            uint64_t v28 = *v16;
            uint64_t v29 = v16[1];
            *uint64_t v15 = *v16;
            v15[1] = v29;
            v15[2] = v16[2];
            id v30 = v28;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v31 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v31 - 8) + 16))(v15, v16, v31);
            break;
          case 5u:
            uint64_t v32 = *v16;
            uint64_t v83 = v16[2];
            uint64_t v86 = v16[1];
            uint64_t v77 = (uint64_t)v16[4];
            uint64_t v80 = (uint64_t)v16[3];
            uint64_t v74 = (uint64_t)v16[6];
            uint64_t v75 = (uint64_t)v16[5];
            uint64_t v73 = v16[7];
            uint64_t v89 = (uint64_t)v16[8];
            char v92 = *((unsigned char *)v16 + 72);
            sub_23CEF00B0((uint64_t)*v16, v86, v83, v80, v77, v75, v74, v73, v89, v92);
            *uint64_t v15 = v32;
            v15[1] = v86;
            v15[2] = v83;
            v15[3] = v80;
            v15[4] = v77;
            v15[5] = v75;
            v15[6] = v74;
            v15[7] = v73;
            v15[8] = v89;
            *((unsigned char *)v15 + 72) = v92;
            break;
          default:
            id v24 = v16[1];
            *uint64_t v15 = *v16;
            v15[1] = v24;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v15, 0, 1, v18);
      }
      uint64_t v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      unint64_t v34 = (void *)((char *)v15 + v33);
      uint64_t v35 = (void **)((char *)v16 + v33);
      if (v19((void **)((char *)v16 + v33), 1, v18))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v51 = *v35;
            *unint64_t v34 = *v35;
            id v52 = v51;
            break;
          case 3u:
            uint64_t v53 = *v35;
            uint64_t v54 = v35[1];
            *unint64_t v34 = *v35;
            v34[1] = v54;
            v34[2] = v35[2];
            id v55 = v53;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v56 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v56 - 8) + 16))(v34, v35, v56);
            break;
          case 5u:
            uint64_t v57 = (uint64_t)*v35;
            uint64_t v58 = v35[2];
            uint64_t v91 = v58;
            unint64_t v94 = v35[1];
            uint64_t v59 = (uint64_t)v35[4];
            uint64_t v85 = v59;
            uint64_t v88 = (uint64_t)v35[3];
            uint64_t v60 = (uint64_t)v35[6];
            uint64_t v79 = v60;
            uint64_t v82 = (uint64_t)v35[5];
            uint64_t v76 = v35[7];
            uint64_t v61 = (uint64_t)v35[8];
            char v62 = *((unsigned char *)v35 + 72);
            sub_23CEF00B0(v57, v94, v58, v88, v59, v82, v60, v76, v61, v62);
            *unint64_t v34 = v57;
            v34[1] = v94;
            v34[2] = v91;
            v34[3] = v88;
            v34[4] = v85;
            v34[5] = v82;
            v34[6] = v79;
            unsigned char v34[7] = v76;
            v34[8] = v61;
            *((unsigned char *)v34 + 72) = v62;
            break;
          default:
            uint64_t v37 = v35[1];
            *unint64_t v34 = *v35;
            v34[1] = v37;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v34, 0, 1, v18);
      }
    }
    else if (v20)
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v15, v16, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v38 = *v16;
          *uint64_t v15 = *v16;
          id v39 = v38;
          break;
        case 3u:
          uint64_t v40 = *v16;
          uint64_t v41 = v16[1];
          *uint64_t v15 = *v16;
          v15[1] = v41;
          v15[2] = v16[2];
          id v42 = v40;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v43 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v43 - 8) + 16))(v15, v16, v43);
          break;
        case 5u:
          uint64_t v44 = (uint64_t)*v16;
          uint64_t v45 = v16[1];
          uint64_t v46 = (uint64_t)v16[3];
          uint64_t v90 = v46;
          uint64_t v93 = v16[2];
          uint64_t v47 = (uint64_t)v16[5];
          uint64_t v84 = v47;
          uint64_t v87 = (uint64_t)v16[4];
          uint64_t v48 = v16[7];
          uint64_t v78 = v48;
          uint64_t v81 = (uint64_t)v16[6];
          uint64_t v49 = (uint64_t)v16[8];
          char v50 = *((unsigned char *)v16 + 72);
          sub_23CEF00B0(v44, v45, v93, v46, v87, v47, v81, v48, v49, v50);
          *uint64_t v15 = v44;
          v15[1] = v45;
          v15[2] = v93;
          v15[3] = v90;
          v15[4] = v87;
          v15[5] = v84;
          v15[6] = v81;
          v15[7] = v78;
          v15[8] = v49;
          *((unsigned char *)v15 + 72) = v50;
          break;
        default:
          uint64_t v25 = v16[1];
          *uint64_t v15 = *v16;
          v15[1] = v25;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v15, 0, 1, v18);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v63 = a3[6];
    uint64_t v64 = a3[7];
    uint64_t v65 = (char *)v4 + v63;
    uint64_t v66 = (char *)a2 + v63;
    uint64_t v67 = *(void *)v66;
    LOBYTE(v66) = v66[8];
    *(void *)uint64_t v65 = v67;
    v65[8] = (char)v66;
    uint64_t v68 = (char *)v4 + v64;
    uint64_t v69 = (char *)a2 + v64;
    uint64_t v70 = *(void **)((char *)a2 + v64);
    char v71 = v69[8];
    swift_retain();
    sub_23CEF00A4(v70, v71);
    *(void *)uint64_t v68 = v70;
    v68[8] = v71;
  }
  return v4;
}

void sub_23CF2BFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v7 = v4 + *(int *)(v6 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v9 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  int v11 = v10(v7, 1, v9);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v11)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v16 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v7, v16);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v7, *(void **)(v7 + 8), *(void **)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
          break;
        default:
          break;
      }
    }
    v7 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v10(v7, 1, v9))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else if (!v11)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
LABEL_7:
        swift_bridgeObjectRelease();
        break;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_12:
        uint64_t v12 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v7, v12);
        break;
      case 5u:
LABEL_13:
        sub_23CEF05F8(*(void **)v7, *(void **)(v7 + 8), *(void **)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
        break;
      default:
        break;
    }
  }
  swift_release();
  uint64_t v13 = a1 + *(int *)(a2 + 28);
  uint64_t v14 = *(void **)v13;
  char v15 = *(unsigned char *)(v13 + 8);

  sub_23CEF05EC(v14, v15);
}

unsigned char *sub_23CF2C328(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  objc_super v8 = &a2[v6];
  uint64_t v9 = sub_23D003DB8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = *(void **)&v8[v11];
  *(void *)&v7[v11] = v12;
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  uint64_t v13 = v10[7];
  uint64_t v14 = &v7[v13];
  char v15 = (void **)&v8[v13];
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  id v16 = v12;
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v18 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v19 = *(void *)(v18 - 8);
  int v20 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v15, 1, v18);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v95 = v3;
    if (v21)
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v14, v15, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v26 = *v15;
          *uint64_t v14 = *v15;
          id v27 = v26;
          break;
        case 3u:
          uint64_t v28 = *v15;
          uint64_t v29 = v15[1];
          *uint64_t v14 = *v15;
          v14[1] = v29;
          v14[2] = v15[2];
          id v30 = v28;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v31 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v31 - 8) + 16))(v14, v15, v31);
          break;
        case 5u:
          uint64_t v32 = *v15;
          uint64_t v83 = v15[2];
          uint64_t v86 = v15[1];
          uint64_t v77 = (uint64_t)v15[4];
          uint64_t v80 = (uint64_t)v15[3];
          uint64_t v74 = (uint64_t)v15[6];
          uint64_t v75 = (uint64_t)v15[5];
          uint64_t v73 = v15[7];
          uint64_t v89 = (uint64_t)v15[8];
          char v92 = *((unsigned char *)v15 + 72);
          sub_23CEF00B0((uint64_t)*v15, v86, v83, v80, v77, v75, v74, v73, v89, v92);
          *uint64_t v14 = v32;
          v14[1] = v86;
          v14[2] = v83;
          v14[3] = v80;
          v14[4] = v77;
          v14[5] = v75;
          v14[6] = v74;
          v14[7] = v73;
          v14[8] = v89;
          *((unsigned char *)v14 + 72) = v92;
          break;
        default:
          id v24 = v15[1];
          *uint64_t v14 = *v15;
          v14[1] = v24;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
    }
    uint64_t v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    unint64_t v34 = (void *)((char *)v14 + v33);
    uint64_t v35 = (void **)((char *)v15 + v33);
    if (v20((void **)((char *)v15 + v33), 1, v18))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v51 = *v35;
          *unint64_t v34 = *v35;
          id v52 = v51;
          break;
        case 3u:
          uint64_t v53 = *v35;
          uint64_t v54 = v35[1];
          *unint64_t v34 = *v35;
          v34[1] = v54;
          v34[2] = v35[2];
          id v55 = v53;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v56 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v56 - 8) + 16))(v34, v35, v56);
          break;
        case 5u:
          uint64_t v57 = (uint64_t)*v35;
          uint64_t v58 = v35[2];
          uint64_t v91 = v58;
          unint64_t v94 = v35[1];
          uint64_t v59 = (uint64_t)v35[4];
          uint64_t v85 = v59;
          uint64_t v88 = (uint64_t)v35[3];
          uint64_t v60 = (uint64_t)v35[6];
          uint64_t v79 = v60;
          uint64_t v82 = (uint64_t)v35[5];
          uint64_t v76 = v35[7];
          uint64_t v61 = (uint64_t)v35[8];
          char v62 = *((unsigned char *)v35 + 72);
          sub_23CEF00B0(v57, v94, v58, v88, v59, v82, v60, v76, v61, v62);
          *unint64_t v34 = v57;
          v34[1] = v94;
          v34[2] = v91;
          v34[3] = v88;
          v34[4] = v85;
          v34[5] = v82;
          v34[6] = v79;
          unsigned char v34[7] = v76;
          v34[8] = v61;
          *((unsigned char *)v34 + 72) = v62;
          break;
        default:
          uint64_t v37 = v35[1];
          *unint64_t v34 = *v35;
          v34[1] = v37;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v34, 0, 1, v18);
    }
    uint64_t v3 = v95;
  }
  else if (v21)
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v14, v15, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v38 = *v15;
        *uint64_t v14 = *v15;
        id v39 = v38;
        break;
      case 3u:
        uint64_t v40 = *v15;
        uint64_t v41 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v41;
        v14[2] = v15[2];
        id v42 = v40;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v43 = sub_23D003B88();
        (*(void (**)(void *, void **, uint64_t))(*(void *)(v43 - 8) + 16))(v14, v15, v43);
        break;
      case 5u:
        uint64_t v96 = v3;
        uint64_t v44 = (uint64_t)*v15;
        uint64_t v45 = v15[1];
        uint64_t v46 = (uint64_t)v15[3];
        uint64_t v90 = v46;
        uint64_t v93 = v15[2];
        uint64_t v47 = (uint64_t)v15[5];
        uint64_t v84 = v47;
        uint64_t v87 = (uint64_t)v15[4];
        uint64_t v48 = v15[7];
        uint64_t v78 = v48;
        uint64_t v81 = (uint64_t)v15[6];
        uint64_t v49 = (uint64_t)v15[8];
        char v50 = *((unsigned char *)v15 + 72);
        sub_23CEF00B0(v44, v45, v93, v46, v87, v47, v81, v48, v49, v50);
        *uint64_t v14 = v44;
        v14[1] = v45;
        uint64_t v3 = v96;
        v14[2] = v93;
        v14[3] = v90;
        v14[4] = v87;
        v14[5] = v84;
        v14[6] = v81;
        v14[7] = v78;
        v14[8] = v49;
        *((unsigned char *)v14 + 72) = v50;
        break;
      default:
        uint64_t v25 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v25;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v63 = *(int *)(v3 + 24);
  uint64_t v64 = *(int *)(v3 + 28);
  uint64_t v65 = &a1[v63];
  uint64_t v66 = &a2[v63];
  uint64_t v67 = *(void *)v66;
  LOBYTE(v66) = v66[8];
  *(void *)uint64_t v65 = v67;
  v65[8] = (_BYTE)v66;
  uint64_t v68 = &a1[v64];
  uint64_t v69 = &a2[v64];
  uint64_t v70 = *(void **)&a2[v64];
  char v71 = v69[8];
  swift_retain();
  sub_23CEF00A4(v70, v71);
  *(void *)uint64_t v68 = v70;
  v68[8] = v71;
  return a1;
}

unsigned char *sub_23CF2CA0C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  objc_super v8 = &a2[v6];
  uint64_t v9 = sub_23D003DB8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = *(void **)&v8[v11];
  uint64_t v13 = *(void **)&v7[v11];
  *(void *)&v7[v11] = v12;
  id v14 = v12;

  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v15 = v10[7];
    id v16 = &v7[v15];
    id v17 = (void **)&v8[v15];
    sub_23CEF155C((uint64_t)v16);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v19 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v91 = *(void *)(v19 - 8);
    int v20 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v91 + 48);
    int v21 = v20(v17, 1, v19);
    if (EnumCaseMultiPayload == 1)
    {
      if (v21)
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            id v24 = *v17;
            *id v16 = *v17;
            id v25 = v24;
            break;
          case 3u:
            uint64_t v26 = *v17;
            *id v16 = *v17;
            v16[1] = v17[1];
            v16[2] = v17[2];
            id v27 = v26;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v28 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v28 - 8) + 16))(v16, v17, v28);
            break;
          case 5u:
            uint64_t v29 = *v17;
            uint64_t v79 = v17[2];
            uint64_t v82 = v17[1];
            uint64_t v73 = (uint64_t)v17[4];
            uint64_t v76 = (uint64_t)v17[3];
            uint64_t v70 = (uint64_t)v17[6];
            uint64_t v71 = (uint64_t)v17[5];
            uint64_t v69 = v17[7];
            uint64_t v85 = (uint64_t)v17[8];
            char v88 = *((unsigned char *)v17 + 72);
            sub_23CEF00B0((uint64_t)*v17, v82, v79, v76, v73, v71, v70, v69, v85, v88);
            *id v16 = v29;
            v16[1] = v82;
            v16[2] = v79;
            v16[3] = v76;
            v16[4] = v73;
            v16[5] = v71;
            v16[6] = v70;
            v16[7] = v69;
            v16[8] = v85;
            *((unsigned char *)v16 + 72) = v88;
            break;
          default:
            *id v16 = *v17;
            v16[1] = v17[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v16, 0, 1, v19);
      }
      uint64_t v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v31 = (void *)((char *)v16 + v30);
      uint64_t v32 = (void **)((char *)v17 + v30);
      if (v20((void **)((char *)v17 + v30), 1, v19))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v46 = *v32;
            *uint64_t v31 = *v32;
            id v47 = v46;
            break;
          case 3u:
            uint64_t v48 = *v32;
            *uint64_t v31 = *v32;
            v31[1] = v32[1];
            void v31[2] = v32[2];
            id v49 = v48;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v50 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v50 - 8) + 16))(v31, v32, v50);
            break;
          case 5u:
            uint64_t v51 = (uint64_t)*v32;
            id v52 = v32[2];
            uint64_t v87 = v52;
            uint64_t v90 = v32[1];
            uint64_t v53 = (uint64_t)v32[4];
            uint64_t v81 = v53;
            uint64_t v84 = (uint64_t)v32[3];
            uint64_t v54 = (uint64_t)v32[6];
            uint64_t v75 = v54;
            uint64_t v78 = (uint64_t)v32[5];
            uint64_t v72 = v32[7];
            uint64_t v55 = (uint64_t)v32[8];
            char v56 = *((unsigned char *)v32 + 72);
            sub_23CEF00B0(v51, v90, v52, v84, v53, v78, v54, v72, v55, v56);
            *uint64_t v31 = v51;
            v31[1] = v90;
            void v31[2] = v87;
            v31[3] = v84;
            v31[4] = v81;
            v31[5] = v78;
            v31[6] = v75;
            v31[7] = v72;
            v31[8] = v55;
            *((unsigned char *)v31 + 72) = v56;
            break;
          default:
            *uint64_t v31 = *v32;
            v31[1] = v32[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v31, 0, 1, v19);
      }
    }
    else if (v21)
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          unint64_t v34 = *v17;
          *id v16 = *v17;
          id v35 = v34;
          break;
        case 3u:
          uint64_t v36 = *v17;
          *id v16 = *v17;
          v16[1] = v17[1];
          v16[2] = v17[2];
          id v37 = v36;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v38 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v38 - 8) + 16))(v16, v17, v38);
          break;
        case 5u:
          uint64_t v39 = (uint64_t)*v17;
          uint64_t v40 = v17[1];
          uint64_t v41 = (uint64_t)v17[3];
          uint64_t v86 = v41;
          uint64_t v89 = v17[2];
          uint64_t v42 = (uint64_t)v17[5];
          uint64_t v80 = v42;
          uint64_t v83 = (uint64_t)v17[4];
          uint64_t v43 = v17[7];
          uint64_t v74 = v43;
          uint64_t v77 = (uint64_t)v17[6];
          uint64_t v44 = (uint64_t)v17[8];
          char v45 = *((unsigned char *)v17 + 72);
          sub_23CEF00B0(v39, v40, v89, v41, v83, v42, v77, v43, v44, v45);
          *id v16 = v39;
          v16[1] = v40;
          v16[2] = v89;
          v16[3] = v86;
          v16[4] = v83;
          v16[5] = v80;
          v16[6] = v77;
          v16[7] = v74;
          v16[8] = v44;
          *((unsigned char *)v16 + 72) = v45;
          break;
        default:
          *id v16 = *v17;
          v16[1] = v17[1];
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v16, 0, 1, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v57 = a3[6];
  uint64_t v58 = &a1[v57];
  uint64_t v59 = &a2[v57];
  uint64_t v60 = *(void *)v59;
  LOBYTE(v59) = v59[8];
  *(void *)uint64_t v58 = v60;
  v58[8] = (_BYTE)v59;
  swift_retain();
  swift_release();
  uint64_t v61 = a3[7];
  char v62 = &a1[v61];
  uint64_t v63 = &a2[v61];
  id v64 = *(id *)v63;
  char v65 = v63[8];
  sub_23CEF00A4(*(id *)v63, v65);
  uint64_t v66 = *(void **)v62;
  char v67 = v62[8];
  *(void *)char v62 = v64;
  v62[8] = v65;
  sub_23CEF05EC(v66, v67);
  return a1;
}

unsigned char *sub_23CF2D164(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  objc_super v8 = &a2[v6];
  uint64_t v9 = sub_23D003DB8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for BatchInteraction(0);
  *(void *)&v7[v10[5]] = *(void *)&v8[v10[5]];
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  uint64_t v11 = v10[7];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v15 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v16 = *(void *)(v15 - 8);
  id v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  if (EnumCaseMultiPayload == 1)
  {
    if (v18)
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v21 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v12, v13, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v12, v13, *(void *)(v16 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    }
    uint64_t v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    id v24 = &v12[v23];
    id v25 = &v13[v23];
    if (v17(v25, 1, v15))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v27 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v24, v25, *(void *)(v16 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v24, 0, 1, v15);
    }
  }
  else if (v18)
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v22 = sub_23D003B88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v12, v13, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(v16 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = a3[6];
  uint64_t v29 = a3[7];
  uint64_t v30 = &a1[v28];
  uint64_t v31 = &a2[v28];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  uint64_t v32 = &a1[v29];
  uint64_t v33 = &a2[v29];
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  return a1;
}

unsigned char *sub_23CF2D594(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  objc_super v8 = &a2[v6];
  uint64_t v9 = sub_23D003DB8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = *(void **)&v7[v11];
  *(void *)&v7[v11] = *(void *)&v8[v11];

  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v13 = v10[7];
    id v14 = &v7[v13];
    uint64_t v15 = &v8[v13];
    sub_23CEF155C((uint64_t)v14);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v17 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
    int v20 = v19(v15, 1, v17);
    if (EnumCaseMultiPayload == 1)
    {
      if (v20)
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v23 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v14, v15, v23);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v14, v15, *(void *)(v18 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
      }
      uint64_t v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v26 = &v14[v25];
      uint64_t v27 = &v15[v25];
      if (v19(v27, 1, v17))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v29 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v26, v27, *(void *)(v18 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v26, 0, 1, v17);
      }
    }
    else if (v20)
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v14, v15, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v24 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v14, v15, v24);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v14, v15, *(void *)(v18 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v30 = a3[6];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = *(void *)v32;
  LOBYTE(v32) = v32[8];
  *(void *)uint64_t v31 = v33;
  v31[8] = (_BYTE)v32;
  swift_release();
  uint64_t v34 = a3[7];
  id v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = *(void *)v36;
  LOBYTE(v36) = v36[8];
  uint64_t v38 = *(void **)v35;
  char v39 = v35[8];
  *(void *)id v35 = v37;
  v35[8] = (_BYTE)v36;
  sub_23CEF05EC(v38, v39);
  return a1;
}

uint64_t sub_23CF2DA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF2DA20);
}

uint64_t sub_23CF2DA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BatchInteraction(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 > 1) {
      return (v12 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_23CF2DAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF2DAF8);
}

uint64_t sub_23CF2DAF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for BatchInteraction(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
  }
  return result;
}

uint64_t type metadata accessor for ActionButton()
{
  uint64_t result = qword_268BCDAB0;
  if (!qword_268BCDAB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF2DC08()
{
  uint64_t result = type metadata accessor for BatchInteraction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23CF2DCAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF2DCC8()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  uint64_t v1 = sub_23D003BA8();

  return v1;
}

uint64_t sub_23CF2DE34()
{
  if (*v0 > 1u) {
    return 0x7078652070696B53;
  }
  sub_23D005FC8();
  swift_bridgeObjectRelease();
  sub_23CF2DCC8();
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

uint64_t sub_23CF2DEE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v2 = sub_23D004768();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v42 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_23D004888();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  uint64_t v35 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ActionButton();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDAC0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDAC8);
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDAD0);
  uint64_t v40 = *(void *)(v17 - 8);
  uint64_t v41 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v38 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDAD8);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v36 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF2EF3C((uint64_t)v1, (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v22 = swift_allocObject();
  sub_23CF2F3A0((uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21);
  uint64_t v46 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDAE0);
  sub_23CEE8D90(&qword_268BCDAE8, &qword_268BCDAE0);
  uint64_t v23 = v34;
  sub_23D0055F8();
  sub_23D004878();
  uint64_t v24 = sub_23CEE8D90(&qword_268BCDAF0, &qword_268BCDAC0);
  uint64_t v25 = sub_23CF2F620((unint64_t *)&qword_268BCDAF8, MEMORY[0x263F18FD0]);
  sub_23D0052A8();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (*v1)
  {
    uint64_t v26 = v42;
    if (*v1 == 1) {
      sub_23D004738();
    }
    else {
      sub_23D004748();
    }
  }
  else
  {
    uint64_t v26 = v42;
    sub_23D004758();
  }
  sub_23D0047A8();
  uint64_t v49 = v11;
  uint64_t v50 = v23;
  uint64_t v51 = v24;
  uint64_t v52 = v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = v38;
  uint64_t v28 = v39;
  sub_23D005338();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v44);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v28);
  uint64_t v49 = sub_23CF2DE34();
  uint64_t v50 = v30;
  uint64_t v47 = v28;
  uint64_t v48 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_23CEE8D00();
  uint64_t v31 = (uint64_t)v36;
  uint64_t v32 = v41;
  sub_23D005388();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v29, v32);
  return sub_23CEE83D8(v31, v45, &qword_268BCDAD8);
}

void sub_23CF2E530(unsigned __int8 *a1)
{
  uint64_t v2 = (int *)type metadata accessor for ActionButton();
  char v3 = a1[v2[6] + 8];
  uint64_t v4 = swift_retain();
  sub_23CF396E8(v4, v3);
  swift_release();
  uint64_t v5 = (uint64_t)&a1[v2[5]];
  uint64_t v6 = &a1[v2[7]];
  id v7 = *(id *)v6;
  char v8 = v6[8];
  LODWORD(a1) = *a1;
  sub_23CEF00A4(*(id *)v6, v8);
  id v9 = sub_23CF39A44(v7, v8);
  sub_23CEF05EC(v7, v8);
  sub_23CF121BC((int)a1, v5, (uint64_t)v9);
  swift_release();
}

uint64_t sub_23CF2E614@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_23D004B08();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDB00);
  return sub_23CF2E664(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_23CF2E664@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDB08);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDB10);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = sub_23D004C58();
  *((void *)v6 + 1) = 0x4020000000000000;
  v6[16] = 0;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDB18);
  sub_23CF2E838(a1, (uint64_t)&v6[*(int *)(v11 + 44)]);
  uint64_t v12 = sub_23D0054E8();
  uint64_t KeyPath = swift_getKeyPath();
  v19[1] = v12;
  swift_retain();
  uint64_t v14 = sub_23D0046D8();
  sub_23CEE82CC((uint64_t)v6, (uint64_t)v10, &qword_268BCDB08);
  swift_release();
  uint64_t v15 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  *uint64_t v15 = KeyPath;
  v15[1] = v14;
  sub_23CEE8BB4((uint64_t)v6, &qword_268BCDB08);
  char v16 = sub_23D005078();
  sub_23CEE82CC((uint64_t)v10, a2, &qword_268BCDB10);
  uint64_t v17 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCDB20) + 36);
  *(unsigned char *)uint64_t v17 = v16;
  *(_OWORD *)(v17 + 8) = 0u;
  *(_OWORD *)(v17 + 24) = 0u;
  *(unsigned char *)(v17 + 40) = 1;
  return sub_23CEE8BB4((uint64_t)v10, &qword_268BCDB10);
}

uint64_t sub_23CF2E838@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v67 = a2;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDB28) - 8;
  MEMORY[0x270FA5388](v66);
  char v65 = (uint64_t *)((char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_23D005808();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  uint64_t v64 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_23D0057E8();
  uint64_t v61 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_23D0048F8();
  uint64_t v11 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCF88);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (uint64_t)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDB30);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (uint64_t *)((char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDB38) - 8;
  uint64_t v21 = MEMORY[0x270FA5388](v60);
  uint64_t v68 = (uint64_t)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v55 = (uint64_t)&v54 - v23;
  sub_23CFE2E34(0, *a1);
  uint64_t v54 = sub_23D005578();
  uint64_t v57 = sub_23D005128();
  uint64_t v24 = *(void *)(v57 - 8);
  char v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v58 = v24 + 56;
  v56(v16, 1, 1, v57);
  uint64_t v25 = sub_23D005158();
  sub_23CEE8BB4(v16, &qword_268BCCF88);
  uint64_t KeyPath = swift_getKeyPath();
  sub_23D0057D8();
  sub_23D0057F8();
  sub_23CF2F620(&qword_268BCDB40, MEMORY[0x263F1BBC8]);
  sub_23D0048E8();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v7, v63);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v8);
  uint64_t v27 = swift_getKeyPath();
  uint64_t v28 = v65;
  uint64_t v29 = v13;
  uint64_t v30 = v13;
  uint64_t v31 = v62;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v65 + *(int *)(v66 + 36), v29, v62);
  *uint64_t v28 = v27;
  sub_23CEE82CC((uint64_t)v28, (uint64_t)v20 + *(int *)(v18 + 44), &qword_268BCDB28);
  *uint64_t v20 = v54;
  v20[1] = KeyPath;
  v20[2] = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23CEE8BB4((uint64_t)v28, &qword_268BCDB28);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v31);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v32 = sub_23D0054E8();
  uint64_t v33 = v68;
  sub_23CEE82CC((uint64_t)v20, v68, &qword_268BCDB30);
  *(void *)(v33 + *(int *)(v60 + 44)) = v32;
  sub_23CEE8BB4((uint64_t)v20, &qword_268BCDB30);
  uint64_t v34 = v55;
  sub_23CEE83D8(v33, v55, &qword_268BCDB38);
  uint64_t v69 = sub_23CF2DCC8();
  uint64_t v70 = v35;
  sub_23CEE8D00();
  uint64_t v36 = sub_23D005228();
  uint64_t v38 = v37;
  LOBYTE(v30) = v39 & 1;
  v56(v16, 1, 1, v57);
  sub_23D005158();
  sub_23CEE8BB4(v16, &qword_268BCCF88);
  uint64_t v40 = sub_23D0051F8();
  uint64_t v42 = v41;
  LOBYTE(v16) = v43;
  uint64_t v45 = v44;
  swift_release();
  LOBYTE(v18) = v16 & 1;
  sub_23CEE7DE0(v36, v38, (char)v30);
  swift_bridgeObjectRelease();
  uint64_t v46 = swift_getKeyPath();
  uint64_t v47 = sub_23D0054E8();
  uint64_t v48 = v34;
  uint64_t v49 = v34;
  uint64_t v50 = v68;
  sub_23CEE82CC(v49, v68, &qword_268BCDB38);
  uint64_t v51 = v67;
  sub_23CEE82CC(v50, v67, &qword_268BCDB38);
  uint64_t v52 = v51 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCDB48) + 48);
  *(void *)uint64_t v52 = v40;
  *(void *)(v52 + 8) = v42;
  *(unsigned char *)(v52 + 16) = v18;
  *(void *)(v52 + 24) = v45;
  *(void *)(v52 + 32) = v46;
  *(void *)(v52 + 40) = 1;
  *(unsigned char *)(v52 + 48) = 0;
  *(void *)(v52 + 56) = v47;
  *(_WORD *)(v52 + 64) = 1;
  sub_23CEE8444(v40, v42, v18);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23CEE8BB4(v48, &qword_268BCDB38);
  sub_23CEE7DE0(v40, v42, v18);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_23CEE8BB4(v50, &qword_268BCDB38);
}

uint64_t sub_23CF2EF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF2EFA0()
{
  uint64_t v1 = type metadata accessor for ActionButton();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v15 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v5 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v7 = v4 + *(int *)(v6 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v9 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  int v11 = v10(v7, 1, v9);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v11)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v13 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v7, v13);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v7, *(void **)(v7 + 8), *(void **)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
          break;
        default:
          break;
      }
    }
    v7 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v10(v7, 1, v9))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else if (!v11)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
LABEL_7:
        swift_bridgeObjectRelease();
        break;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_12:
        uint64_t v12 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v7, v12);
        break;
      case 5u:
LABEL_13:
        sub_23CEF05F8(*(void **)v7, *(void **)(v7 + 8), *(void **)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
        break;
      default:
        break;
    }
  }
  swift_release();
  sub_23CEF05EC(*(id *)(v0 + v3 + *(int *)(v1 + 28)), *(unsigned char *)(v0 + v3 + *(int *)(v1 + 28) + 8));

  return MEMORY[0x270FA0238](v0, v3 + v15, v2 | 7);
}

uint64_t sub_23CF2F3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23CF2F404()
{
  uint64_t v1 = *(void *)(type metadata accessor for ActionButton() - 8);
  uint64_t v2 = (unsigned __int8 *)(v0
                         + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  sub_23CF2E530(v2);
}

uint64_t sub_23CF2F464@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF2E614(*(char **)(v1 + 16), a1);
}

unint64_t sub_23CF2F490()
{
  unint64_t result = qword_268BCDB50;
  if (!qword_268BCDB50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDAD8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDAC8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDAC0);
    sub_23D004888();
    sub_23CEE8D90(&qword_268BCDAF0, &qword_268BCDAC0);
    sub_23CF2F620((unint64_t *)&qword_268BCDAF8, MEMORY[0x263F18FD0]);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_23CF2F620((unint64_t *)&qword_268BCD1E0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDB50);
  }
  return result;
}

uint64_t sub_23CF2F620(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF2F668()
{
  swift_getKeyPath();
  sub_23CF2F8E0();
  sub_23D003DD8();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_23CF2F6D8()
{
  swift_getKeyPath();
  sub_23CF2F8E0();
  sub_23D003DD8();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_23CF2F748()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Feedback15DebugController___observationRegistrar;
  uint64_t v2 = sub_23D003E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_23CF2F7E8()
{
  return type metadata accessor for DebugController();
}

uint64_t type metadata accessor for DebugController()
{
  uint64_t result = qword_268BCDB60;
  if (!qword_268BCDB60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF2F83C()
{
  uint64_t result = sub_23D003E18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_23CF2F8E0()
{
  unint64_t result = qword_268BCDB70;
  if (!qword_268BCDB70)
  {
    type metadata accessor for DebugController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDB70);
  }
  return result;
}

void sub_23CF2FA7C(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  sub_23CF31A54(0, &qword_268BCDC30);
  sub_23CF31A90();
  sub_23D005C08();
  id v8 = a1;
  id v12 = a4;
  id v9 = objc_msgSend(v8, sel_nextResponder);
  if (v9)
  {
    uint64_t v10 = v9;
    int v11 = (void *)sub_23D005BE8();
    objc_msgSend(v10, *a5, v11, v12);

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

id sub_23CF2FBA0()
{
  return sub_23CF30B58((uint64_t (*)(void))type metadata accessor for UnScrollableWebView);
}

uint64_t type metadata accessor for UnScrollableWebView()
{
  return self;
}

void sub_23CF2FBDC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v81 = a4;
  uint64_t v89 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_23D005828();
  uint64_t v80 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_23D005858();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v78 = v10;
  uint64_t v79 = v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_23D005878();
  uint64_t v82 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v62 - v18;
  sub_23CF31730(a1, (uint64_t)&aBlock);
  if (v86)
  {
    if (swift_dynamicCast())
    {
      uint64_t v20 = (uint64_t *)(a3
                      + OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent);
      uint64_t v21 = *(void *)(a3
                      + OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                      + 8);
      if (v21)
      {
        uint64_t v77 = v14;
        uint64_t v22 = v20[7];
        uint64_t v76 = (void *)v20[8];
        uint64_t v23 = v76;
        uint64_t v68 = v22;
        uint64_t v24 = v20[6];
        uint64_t v25 = v20[4];
        uint64_t v74 = v20[5];
        uint64_t v75 = v24;
        uint64_t v69 = v25;
        uint64_t v26 = (uint64_t (*)(uint64_t))v20[2];
        uint64_t v73 = v20[3];
        uint64_t v70 = (uint64_t)v26;
        uint64_t aBlock = *v20;
        uint64_t v27 = aBlock;
        uint64_t v84 = v21;
        uint64_t v85 = v26;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        id v66 = v23;
        uint64_t v28 = v27;
        swift_retain();
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDC08);
        sub_23D005678();
        sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
        uint64_t v71 = sub_23D005D28();
        sub_23D005868();
        MEMORY[0x23ECF5310](v17, 0.125);
        uint64_t v29 = *(void (**)(char *, uint64_t))(v82 + 8);
        v82 += 8;
        uint64_t v72 = v29;
        v29(v17, v77);
        uint64_t v30 = (void *)swift_allocObject();
        v30[2] = v81;
        v30[3] = v27;
        uint64_t v63 = v27;
        uint64_t v62 = v13;
        uint64_t v31 = v21;
        uint64_t v64 = v21;
        uint64_t v32 = v70;
        v30[4] = v21;
        v30[5] = v32;
        uint64_t v67 = v7;
        uint64_t v33 = v73;
        uint64_t v34 = v74;
        uint64_t v35 = v69;
        v30[6] = v73;
        unsigned char v30[7] = v35;
        uint64_t v36 = v75;
        v30[8] = v34;
        v30[9] = v36;
        char v65 = v9;
        uint64_t v37 = v68;
        id v38 = v66;
        v30[10] = v68;
        v30[11] = v38;
        uint64_t v87 = sub_23CF31800;
        char v88 = v30;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v84 = 1107296256;
        uint64_t v85 = sub_23CF6021C;
        uint64_t v86 = &block_descriptor_13;
        id v66 = _Block_copy(&aBlock);
        uint64_t v39 = v33;
        uint64_t v40 = v35;
        uint64_t v41 = v35;
        uint64_t v42 = v37;
        sub_23CF3180C(v28, v31, v32, v39, v40, v34, v36, v37, v76);
        id v43 = v81;
        swift_release();
        uint64_t v44 = v62;
        sub_23D005848();
        uint64_t aBlock = MEMORY[0x263F8EE78];
        sub_23CF28A28();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
        sub_23CEE8D90((unint64_t *)&qword_268BCD9A8, (uint64_t *)&unk_268BCDC20);
        uint64_t v45 = v65;
        uint64_t v46 = v67;
        sub_23D005ED8();
        uint64_t v47 = v66;
        uint64_t v48 = (void *)v71;
        MEMORY[0x23ECF5770](v19, v44, v45, v66);
        _Block_release(v47);

        sub_23CF3188C(v63, v64, v32, v73, v41, v74, v75, v42, v76);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v45, v46);
        (*(void (**)(char *, uint64_t))(v79 + 8))(v44, v78);
        v72(v19, v77);
        return;
      }
      if (qword_268BCCCB0 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_23D004498();
      __swift_project_value_buffer(v59, (uint64_t)qword_268BDAD70);
      uint64_t v52 = sub_23D004478();
      os_log_type_t v60 = sub_23D005C98();
      if (os_log_type_enabled(v52, v60))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v61 = 0;
        _os_log_impl(&dword_23CEE3000, v52, v60, "parent webview is nil", v61, 2u);
        uint64_t v58 = v61;
LABEL_14:
        MEMORY[0x23ECF6610](v58, -1, -1);
        goto LABEL_15;
      }
      goto LABEL_15;
    }
  }
  else
  {
    sub_23CF312D0((uint64_t)&aBlock);
  }
  if (qword_268BCCCB0 != -1) {
    swift_once();
  }
  uint64_t v49 = sub_23D004498();
  __swift_project_value_buffer(v49, (uint64_t)qword_268BDAD70);
  id v50 = a2;
  id v51 = a2;
  uint64_t v52 = sub_23D004478();
  os_log_type_t v53 = sub_23D005C98();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v54 = 138412290;
    if (a2)
    {
      id v56 = a2;
      uint64_t v57 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t aBlock = v57;
      sub_23D005E48();
    }
    else
    {
      uint64_t aBlock = 0;
      sub_23D005E48();
      uint64_t v57 = 0;
    }
    *uint64_t v55 = v57;

    _os_log_impl(&dword_23CEE3000, v52, v53, "Failed to evaluate webview height: %@", v54, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDC00);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v55, -1, -1);
    uint64_t v58 = v54;
    goto LABEL_14;
  }

LABEL_15:
}

void sub_23CF303D4(void *a1, uint64_t a2)
{
  uint64_t v4 = (void *)sub_23D005918();
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v5 + 64) = v6;
  *(void *)(v5 + 80) = *(void *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 32) = v7;
  v9[4] = sub_23CF31910;
  v9[5] = v5;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  long long v9[2] = sub_23CF30910;
  v9[3] = &block_descriptor_19;
  uint64_t v8 = _Block_copy(v9);
  sub_23CF31918(a2);
  swift_release();
  objc_msgSend(a1, sel_evaluateJavaScript_completionHandler_, v4, v8);
  _Block_release(v8);
}

uint64_t sub_23CF304F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_23D005828();
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_23D005858();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_23D005878();
  uint64_t v25 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v23 - v15;
  sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
  uint64_t v17 = (void *)sub_23D005D28();
  sub_23D005868();
  MEMORY[0x23ECF5310](v14, 0.125);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v14, v10);
  uint64_t v18 = swift_allocObject();
  long long v19 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v18 + 64) = v19;
  *(void *)(v18 + 80) = *(void *)(a3 + 64);
  long long v20 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v18 + 32) = v20;
  aBlock[4] = sub_23CF319E8;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23CF6021C;
  aBlock[3] = &block_descriptor_25;
  uint64_t v21 = _Block_copy(aBlock);
  sub_23CF31918(a3);
  swift_release();
  sub_23D005848();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_23CF28A28();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
  sub_23CEE8D90((unint64_t *)&qword_268BCD9A8, (uint64_t *)&unk_268BCDC20);
  sub_23D005ED8();
  MEMORY[0x23ECF5770](v16, v9, v6, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
  return ((uint64_t (*)(char *, uint64_t))v24)(v16, v25);
}

uint64_t sub_23CF308A4()
{
  return swift_release();
}

uint64_t sub_23CF30910(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(long long *, void *))(a1 + 32);
  if (a2)
  {
    *((void *)&v9 + 1) = swift_getObjectType();
    *(void *)&long long v8 = a2;
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_23CF312D0((uint64_t)&v8);
}

id sub_23CF30B40()
{
  return sub_23CF30B58((uint64_t (*)(void))type metadata accessor for BaseWebView.Controller);
}

id sub_23CF30B58(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for BaseWebView.Controller()
{
  return self;
}

void destroy for BaseWebView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 64);
}

uint64_t initializeWithCopy for BaseWebView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for BaseWebView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[8];
  uint64_t v5 = (void *)a1[8];
  a1[8] = v4;
  id v6 = v4;

  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for BaseWebView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for BaseWebView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BaseWebView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BaseWebView()
{
  return &type metadata for BaseWebView;
}

uint64_t sub_23CF30F08()
{
  return MEMORY[0x263F1BB58];
}

id sub_23CF30F14()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F1FA60]), sel_init);
  objc_msgSend(v1, sel__setColorFilterEnabled_, 1);
  objc_msgSend(v1, sel__setDrawsBackground_, 1);
  id v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UnScrollableWebView()), sel_initWithFrame_configuration_, v1, 0.0, 0.0, 0.0, 0.0);

  long long v3 = (void *)sub_23D005918();
  long long v4 = (void *)sub_23D005918();

  objc_msgSend(v2, sel_setNavigationDelegate_, *(void *)(v0 + 64));
  return v2;
}

id sub_23CF3103C()
{
  return sub_23CF30F14();
}

uint64_t sub_23CF31090()
{
  return sub_23D004CD8();
}

uint64_t sub_23CF310D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_23CF3121C();

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_23CF31138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_23CF3121C();

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_23CF3119C()
{
}

unint64_t sub_23CF311C8()
{
  unint64_t result = qword_268BCDBE8;
  if (!qword_268BCDBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDBE8);
  }
  return result;
}

unint64_t sub_23CF3121C()
{
  unint64_t result = qword_268BCDBF0;
  if (!qword_268BCDBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDBF0);
  }
  return result;
}

uint64_t sub_23CF31270()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_23CF312B0(uint64_t a1, void *a2)
{
  sub_23CF2FBDC(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_23CF312D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCF190);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23CF31330(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

double sub_23CF31360@<D0>(uint64_t a1@<X8>)
{
  long long v32 = *(_OWORD *)(v1 + 32);
  long long v33 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDC40);
  sub_23D0055E8();
  long long v32 = *(_OWORD *)(v1 + 48);
  sub_23D0055E8();
  sub_23D005FC8();
  swift_bridgeObjectRelease();
  uint64_t v22 = v1;
  swift_bridgeObjectRetain();
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  sub_23D0059F8();
  id v3 = objc_allocWithZone((Class)type metadata accessor for BaseWebView.Controller());
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v23 = v25;
  swift_retain();
  unsigned int v4 = (char *)objc_msgSend(v3, sel_init);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = &v4[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent];
  uint64_t v6 = *(void *)&v4[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent + 8];
  uint64_t v7 = *(void *)&v4[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                    + 16];
  uint64_t v17 = *(void *)&v4[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                     + 24];
  uint64_t v18 = *(void *)&v4[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent];
  uint64_t v15 = *(void *)&v4[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                     + 40];
  uint64_t v16 = *(void *)&v4[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                     + 32];
  long long v8 = *(void **)&v4[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent + 64];
  uint64_t v13 = *(void *)&v4[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                     + 56];
  uint64_t v14 = *(void *)&v4[OBJC_IVAR____TtCV8FeedbackP33_A8ABDB21747C1062E707FA1890A6718D11BaseWebView10Controller_parent
                     + 48];
  *(_OWORD *)uint64_t v5 = v25;
  uint64_t v20 = *((void *)&v25 + 1);
  *((void *)v5 + 2) = v27;
  *(_OWORD *)(v5 + 24) = v25;
  long long v19 = v25;
  *((void *)v5 + 5) = v27;
  *((void *)v5 + 6) = 0xD000000000000021;
  *((void *)v5 + 7) = 0x800000023D011140;
  *((void *)v5 + 8) = v4;
  uint64_t v21 = v4;
  sub_23CF3188C(v18, v6, v7, v17, v16, v15, v14, v13, v8);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23CF31D94((uint64_t *)(v22 + 16), (uint64_t)v31);
  long long v26 = v33;
  sub_23D0055C8();
  sub_23CF31D94(v31, (uint64_t)&v34);
  sub_23D005778();
  sub_23D0046C8();
  uint64_t v9 = sub_23D005538();
  char v10 = sub_23D005078();
  uint64_t v11 = sub_23D005528();
  sub_23D0055C8();
  double result = v24;
  *(void *)a1 = v23;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v27;
  *(_OWORD *)(a1 + 24) = v19;
  *(void *)(a1 + 40) = v27;
  *(void *)(a1 + 48) = 0xD000000000000021;
  *(void *)(a1 + 56) = 0x800000023D011140;
  *(void *)(a1 + 64) = v21;
  *(void *)(a1 + 72) = v26;
  *(unsigned char *)(a1 + 80) = BYTE8(v26);
  *(void *)(a1 + 88) = v27;
  *(unsigned char *)(a1 + 96) = v28;
  *(void *)(a1 + 104) = v29;
  *(void *)(a1 + 112) = v30;
  *(void *)(a1 + 120) = v9;
  *(unsigned char *)(a1 + 128) = v10;
  *(void *)(a1 + 136) = v11;
  *(double *)(a1 + 144) = v24;
  return result;
}

double sub_23CF316F4@<D0>(uint64_t a1@<X8>)
{
  return sub_23CF31360(a1);
}

uint64_t sub_23CF31730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCF190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF31798()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 96, 7);
}

void sub_23CF31800()
{
  sub_23CF303D4(*(void **)(v0 + 16), v0 + 24);
}

uint64_t sub_23CF3180C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a2)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    id v9 = a9;
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23CF3188C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a2)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_23CF31910(uint64_t a1, uint64_t a2)
{
  return sub_23CF304F8(a1, a2, v2 + 16);
}

uint64_t sub_23CF31918(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t objectdestroy_15Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_23CF319E8()
{
  return sub_23CF308A4();
}

uint64_t sub_23CF319F0()
{
  return sub_23D005678();
}

uint64_t sub_23CF31A54(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_23CF31A90()
{
  unint64_t result = qword_268BCDC38;
  if (!qword_268BCDC38)
  {
    sub_23CF31A54(255, &qword_268BCDC30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDC38);
  }
  return result;
}

uint64_t destroy for BatchWebView()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for BatchWebView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BatchWebView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BatchWebView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchWebView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchWebView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchWebView()
{
  return &type metadata for BatchWebView;
}

uint64_t sub_23CF31D78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF31D94(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for BatchWebView.SizeMode(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BatchWebView.SizeMode(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_23CF31E10(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_23CF31E2C(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchWebView.SizeMode()
{
  return &type metadata for BatchWebView.SizeMode;
}

uint64_t sub_23CF31E5C()
{
  return sub_23CF3200C(&qword_268BCDC48, &qword_268BCDC50, (void (*)(void))sub_23CF31EA0);
}

unint64_t sub_23CF31EA0()
{
  unint64_t result = qword_268BCDC58;
  if (!qword_268BCDC58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDC60);
    sub_23CF31F40();
    sub_23CEE8D90(&qword_268BCDA48, (uint64_t *)&unk_268BCDCA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDC58);
  }
  return result;
}

unint64_t sub_23CF31F40()
{
  unint64_t result = qword_268BCDC68;
  if (!qword_268BCDC68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDC70);
    sub_23CF3200C(&qword_268BCDC78, &qword_268BCDC80, (void (*)(void))sub_23CF311C8);
    sub_23CEE8D90(&qword_268BCDC88, (uint64_t *)&unk_268BCDC90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDC68);
  }
  return result;
}

uint64_t sub_23CF3200C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF320A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_23D004028();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_23CF32DAC(&qword_268BCDCB0),
        uint64_t v7 = sub_23D0058D8(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_23CF32DAC(&qword_268BCD840);
      char v15 = sub_23D005908();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_23CF3228C()
{
  uint64_t v1 = type metadata accessor for BatchInteraction(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  MEMORY[0x270FA5388](v55);
  uint64_t v56 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v53 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v51 - v8;
  uint64_t v10 = sub_23D004028();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t v57 = v1;
  uint64_t v58 = v0;
  sub_23D004038();
  uint64_t v17 = *MEMORY[0x263F3C2B8];
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v54(v14, v17, v10);
  char v18 = MEMORY[0x23ECF3A90](v16, v14);
  long long v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  v19(v16, v10);
  if ((v18 & 1) == 0)
  {
    id v51 = v3;
    uint64_t v52 = v9;
    if (qword_268BCCC88 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_268BDAD30;
    uint64_t v21 = v58;
    sub_23D004038();
    char v22 = sub_23CF320A0((uint64_t)v16, v20);
    v19(v16, v10);
    if (v22)
    {
      uint64_t v23 = v21 + *(int *)(v57 + 28);
      uint64_t v24 = v56;
      sub_23CF32C1C(v23, v56, type metadata accessor for BatchInteraction.ContentPolarity);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        long long v25 = type metadata accessor for BatchInteraction.ContentPolarity;
        uint64_t v26 = v24;
LABEL_23:
        sub_23CF32D4C(v26, v25);
        goto LABEL_24;
      }
      uint64_t v31 = (uint64_t)v52;
      sub_23CF05C70(v24, (uint64_t)v52);
      uint64_t v32 = v53;
      sub_23CF32C84(v31, v53);
      uint64_t v33 = type metadata accessor for BatchInteraction.ContentPreview(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33) == 1)
      {
        sub_23CF32CEC(v31);
        uint64_t v34 = v32;
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() != 5)
        {
          sub_23CF32CEC((uint64_t)v52);
          long long v25 = type metadata accessor for BatchInteraction.ContentPreview;
          uint64_t v26 = v32;
          goto LABEL_23;
        }
        uint64_t v36 = *(void **)v32;
        uint64_t v37 = *(void **)(v32 + 8);
        id v38 = *(void **)(v32 + 16);
        uint64_t v39 = *(void *)(v32 + 24);
        uint64_t v40 = *(void *)(v32 + 32);
        uint64_t v41 = *(void *)(v32 + 40);
        uint64_t v42 = *(void *)(v32 + 48);
        uint64_t v43 = *(void *)(v32 + 56);
        uint64_t v44 = *(void *)(v32 + 64);
        uint64_t v45 = (uint64_t)v52;
        if (!*(unsigned char *)(v32 + 72))
        {
          sub_23CEF05F8(v36, v37, v38, v39, v40, v41, v42, v43, v44, 0);
          sub_23CF32CEC((uint64_t)v52);
          goto LABEL_24;
        }
        sub_23CEF05F8(v36, v37, v38, v39, v40, v41, v42, v43, v44, *(unsigned char *)(v32 + 72));
        uint64_t v34 = v45;
      }
      sub_23CF32CEC(v34);
LABEL_24:
      unint64_t v59 = 0;
      unint64_t v60 = 0xE000000000000000;
      sub_23D005FC8();
      swift_bridgeObjectRelease();
      unint64_t v59 = 0xD00000000000001ELL;
      unint64_t v60 = 0x800000023D011350;
      sub_23D0059F8();
      swift_bridgeObjectRelease();
      sub_23D0059F8();
      id v29 = objc_msgSend(self, sel_mainBundle);
      uint64_t v30 = sub_23D003BA8();
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    if (qword_268BCCC80 != -1) {
      swift_once();
    }
    uint64_t v27 = qword_268BDAD28;
    uint64_t v28 = v58;
    sub_23D004038();
    LOBYTE(v27) = sub_23CF320A0((uint64_t)v16, v27);
    v19(v16, v10);
    if ((v27 & 1) == 0)
    {
      sub_23D004038();
      v54(v14, *MEMORY[0x263F3C2C0], v10);
      char v35 = MEMORY[0x23ECF3A90](v16, v14);
      v19(v14, v10);
      v19(v16, v10);
      if ((v35 & 1) == 0)
      {
        sub_23D004038();
        uint64_t v46 = v54;
        v54(v14, *MEMORY[0x263F3C2C8], v10);
        char v47 = MEMORY[0x23ECF3A90](v16, v14);
        v19(v14, v10);
        v19(v16, v10);
        uint64_t v48 = v28;
        uint64_t v49 = (uint64_t)v51;
        sub_23CF32C1C(v48, (uint64_t)v51, type metadata accessor for BatchInteraction);
        if ((v47 & 1) == 0)
        {
          sub_23D004038();
          v46(v14, *MEMORY[0x263F3C268], v10);
          MEMORY[0x23ECF3A90](v16, v14);
          v19(v14, v10);
          v19(v16, v10);
        }
        sub_23CF32D4C(v49, type metadata accessor for BatchInteraction);
      }
    }
  }
  id v29 = objc_msgSend(self, sel_mainBundle);
  uint64_t v30 = sub_23D003BA8();
LABEL_25:

  return v30;
}

uint64_t sub_23CF32C1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23CF32C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF32CEC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23CF32D4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23CF32DAC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23D004028();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF32DF0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  *a2 = *(void *)(v3 + 16);
  return swift_retain();
}

uint64_t sub_23CF32E9C()
{
  return swift_release();
}

uint64_t sub_23CF32F7C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  *a2 = *(void *)(v3 + 24);
  return swift_retain();
}

uint64_t sub_23CF33028()
{
  return swift_release();
}

uint64_t sub_23CF33108@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  *a2 = *(void *)(v3 + 32);
  return swift_retain();
}

uint64_t sub_23CF331B4()
{
  return swift_release();
}

uint64_t sub_23CF33294@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  *a2 = *(void *)(v3 + 40);
  return swift_retain();
}

uint64_t sub_23CF33340()
{
  return swift_release();
}

uint64_t sub_23CF33420@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  *a2 = *(void *)(v3 + 48);
  return swift_retain();
}

uint64_t sub_23CF334CC()
{
  return swift_release();
}

uint64_t sub_23CF335AC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  *a2 = *(void *)(v3 + 56);
  return swift_retain();
}

uint64_t sub_23CF33658()
{
  return swift_release();
}

uint64_t sub_23CF33738@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF3C4DC((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_23CF337E0()
{
  return swift_release();
}

uint64_t sub_23CF338B0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF3C4DC((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_23CF33958()
{
  return swift_release();
}

uint64_t BatchEvaluationView.init(scoreController:useNavigationStack:showsCloseButton:)@<X0>(char a1@<W1>, char a2@<W2>, uint64_t a3@<X8>)
{
  type metadata accessor for BatchController();
  swift_allocObject();
  uint64_t v6 = swift_retain();
  BatchController.init(scoreController:)(v6);
  sub_23D0055B8();
  uint64_t result = swift_release();
  *(void *)a3 = v8;
  *(void *)(a3 + 8) = v9;
  *(unsigned char *)(a3 + 16) = a1;
  *(unsigned char *)(a3 + 17) = a2;
  return result;
}

uint64_t sub_23CF33AC0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF3C4DC((unint64_t *)&qword_268BCDB70, (void (*)(uint64_t))type metadata accessor for DebugController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_23CF33B68()
{
  return swift_release();
}

uint64_t sub_23CF33C38(uint64_t a1)
{
  return sub_23CF33C98(a1, qword_268BCDCB8, MEMORY[0x263F19C18]);
}

uint64_t sub_23CF33C58(uint64_t a1)
{
  return sub_23CF33C98(a1, qword_268BCDCD0, MEMORY[0x263F19C08]);
}

uint64_t sub_23CF33C78(uint64_t a1)
{
  return sub_23CF33C98(a1, qword_268BCDCE8, MEMORY[0x263F19C10]);
}

uint64_t sub_23CF33C98(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5 = sub_23D004DC8();
  __swift_allocate_value_buffer(v5, a2);
  __swift_project_value_buffer(v5, (uint64_t)a2);
  return a3();
}

uint64_t BatchEvaluationView.useNavigationStack.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t BatchEvaluationView.useNavigationStack.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*BatchEvaluationView.useNavigationStack.modify())()
{
  return nullsub_1;
}

uint64_t BatchEvaluationView.showsCloseButton.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t BatchEvaluationView.showsCloseButton.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*BatchEvaluationView.showsCloseButton.modify())()
{
  return nullsub_1;
}

uint64_t BatchEvaluationView.init(controller:useNavigationStack:showsCloseButton:)@<X0>(char a1@<W1>, char a2@<W2>, uint64_t a3@<X8>)
{
  type metadata accessor for BatchController();
  uint64_t result = sub_23D0055B8();
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = a1;
  *(unsigned char *)(a3 + 17) = a2;
  return result;
}

uint64_t BatchEvaluationView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD00);
  MEMORY[0x270FA5388](v45);
  uint64_t v3 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for BatchEvaluationViewContent();
  MEMORY[0x270FA5388](v44);
  uint64_t v40 = (void *)((char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD08);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD10);
  uint64_t v41 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD18);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)v1;
  uint64_t v42 = *(void *)(v1 + 8);
  uint64_t v43 = v14;
  int v15 = *(unsigned __int8 *)(v1 + 16);
  char v16 = *(unsigned char *)(v1 + 17);
  uint64_t v17 = sub_23D003E88();
  uint64_t v50 = v17;
  uint64_t v51 = sub_23CF3C4DC(&qword_268BCEB90, MEMORY[0x263F3C1B0]);
  char v18 = __swift_allocate_boxed_opaque_existential_1(&v48);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, *MEMORY[0x263F3C1A0], v17);
  LOBYTE(v17) = sub_23D003E28();
  uint64_t v19 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  if (v17)
  {
    uint64_t v20 = v10;
    v38[1] = v5;
    uint64_t v39 = v7;
    v38[0] = v11;
    uint64_t v21 = (int *)v44;
    if (v15)
    {
      MEMORY[0x270FA5388](v19);
      v38[-4] = v23;
      v38[-3] = v22;
      LOBYTE(v38[-2]) = 1;
      BYTE1(v38[-2]) = v16;
      sub_23CF3C4DC(&qword_268BCDD38, (void (*)(uint64_t))type metadata accessor for BatchEvaluationViewContent);
      sub_23D004848();
      uint64_t v24 = v41;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v39, v20, v8);
      swift_storeEnumTagMultiPayload();
      sub_23CEE8D90(&qword_268BCDD30, &qword_268BCDD10);
      sub_23D004D88();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v8);
    }
    else
    {
      uint64_t v48 = v43;
      *(void *)&long long v49 = v42;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD48);
      sub_23D0055C8();
      uint64_t v31 = v47;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v33 = (uint64_t)v40;
      *uint64_t v40 = KeyPath;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD50);
      swift_storeEnumTagMultiPayload();
      uint64_t v34 = (uint64_t *)(v33 + v21[5]);
      *uint64_t v34 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
      swift_storeEnumTagMultiPayload();
      *(unsigned char *)(v33 + v21[7]) = 1;
      uint64_t v35 = v21[8];
      uint64_t v36 = (void *)(v33 + v21[6]);
      uint64_t v47 = v31;
      type metadata accessor for BatchController();
      sub_23D0055B8();
      uint64_t v37 = v49;
      *uint64_t v36 = v48;
      v36[1] = v37;
      *(unsigned char *)(v33 + v35) = v16;
      sub_23CF3C8B4(v33, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for BatchEvaluationViewContent);
      swift_storeEnumTagMultiPayload();
      sub_23CEE8D90(&qword_268BCDD30, &qword_268BCDD10);
      sub_23CF3C4DC(&qword_268BCDD38, (void (*)(uint64_t))type metadata accessor for BatchEvaluationViewContent);
      sub_23D004D88();
      sub_23CF3C91C(v33, (uint64_t (*)(void))type metadata accessor for BatchEvaluationViewContent);
    }
    sub_23CEE82CC((uint64_t)v13, (uint64_t)v3, &qword_268BCDD18);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD20);
    sub_23CF34830();
    sub_23CEE8D90(&qword_268BCDD40, &qword_268BCDD20);
    sub_23D004D88();
    return sub_23CEE8BB4((uint64_t)v13, &qword_268BCDD18);
  }
  else
  {
    uint64_t v25 = sub_23D004C58();
    sub_23CF346D4((uint64_t)&v48);
    uint64_t v26 = v48;
    char v27 = v50;
    uint64_t v28 = v51;
    long long v29 = v49;
    *(void *)uint64_t v3 = v25;
    *((void *)v3 + 1) = 0x4020000000000000;
    v3[16] = 0;
    *((void *)v3 + 3) = v26;
    *((_OWORD *)v3 + 2) = v29;
    v3[48] = v27;
    *((void *)v3 + 7) = v28;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD20);
    sub_23CF34830();
    sub_23CEE8D90(&qword_268BCDD40, &qword_268BCDD20);
    return sub_23D004D88();
  }
}

uint64_t type metadata accessor for BatchEvaluationViewContent()
{
  uint64_t result = qword_268BCDE68;
  if (!qword_268BCDE68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF344DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t *a4@<X8>)
{
  char v4 = HIBYTE(a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD48);
  sub_23D0055C8();
  *a4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD50);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (int *)type metadata accessor for BatchEvaluationViewContent();
  uint64_t v7 = (uint64_t *)((char *)a4 + v6[5]);
  *uint64_t v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a4 + v6[7]) = 1;
  uint64_t v8 = v6[8];
  uint64_t v9 = (uint64_t *)((char *)a4 + v6[6]);
  type metadata accessor for BatchController();
  uint64_t result = sub_23D0055B8();
  *uint64_t v9 = a1;
  v9[1] = a2;
  *((unsigned char *)a4 + v8) = v4 & 1;
  return result;
}

uint64_t BatchEvaluationViewContent.init(controller:showsCloseButton:)@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  *a2 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD50);
  swift_storeEnumTagMultiPayload();
  char v4 = (int *)type metadata accessor for BatchEvaluationViewContent();
  uint64_t v5 = (uint64_t *)((char *)a2 + v4[5]);
  *uint64_t v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a2 + v4[7]) = 1;
  uint64_t v6 = v4[8];
  uint64_t v7 = (uint64_t *)((char *)a2 + v4[6]);
  type metadata accessor for BatchController();
  uint64_t result = sub_23D0055B8();
  *uint64_t v7 = v9;
  v7[1] = v10;
  *((unsigned char *)a2 + v6) = a1;
  return result;
}

uint64_t sub_23CF346D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_23D005578();
  sub_23D004BC8();
  uint64_t v3 = sub_23D005208();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  sub_23D005138();
  uint64_t v8 = sub_23D0051B8();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_23CEE7DE0(v3, v5, v7);
  swift_bridgeObjectRelease();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = v12;
  swift_retain();
  sub_23CEE8444(v8, v10, v14);
  swift_bridgeObjectRetain();
  sub_23CEE7DE0(v8, v10, v14);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_23CF34830()
{
  unint64_t result = qword_268BCDD28;
  if (!qword_268BCDD28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDD18);
    sub_23CEE8D90(&qword_268BCDD30, &qword_268BCDD10);
    sub_23CF3C4DC(&qword_268BCDD38, (void (*)(uint64_t))type metadata accessor for BatchEvaluationViewContent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDD28);
  }
  return result;
}

uint64_t BatchEvaluationViewContent.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v174 = a1;
  uint64_t v173 = sub_23D0045A8();
  uint64_t v175 = *(void *)(v173 - 8);
  MEMORY[0x270FA5388](v173);
  uint64_t v172 = (uint64_t)&v131 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for BatchEvaluationViewContent();
  uint64_t v4 = v3 - 8;
  uint64_t v169 = *(void *)(v3 - 8);
  uint64_t v168 = *(void *)(v169 + 64);
  MEMORY[0x270FA5388](v3);
  uint64_t v167 = (uint64_t)&v131 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_23D005BC8();
  uint64_t v170 = *(void *)(v171 - 8);
  MEMORY[0x270FA5388](v171);
  uint64_t v166 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD58);
  MEMORY[0x270FA5388](v134);
  uint64_t v8 = (uint64_t *)((char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD60);
  uint64_t v136 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v132 = (char *)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD68);
  uint64_t v138 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137);
  uint64_t v177 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD70);
  uint64_t v142 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388](v140);
  uint64_t v182 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD78);
  uint64_t v144 = *(void *)(v143 - 8);
  MEMORY[0x270FA5388](v143);
  unint64_t v139 = (char *)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD80);
  uint64_t v146 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  unint64_t v141 = (char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD88);
  uint64_t v148 = *(void *)(v147 - 8);
  MEMORY[0x270FA5388](v147);
  uint64_t v178 = (char *)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD90);
  uint64_t v150 = *(void *)(v149 - 8);
  MEMORY[0x270FA5388](v149);
  uint64_t v179 = (char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD98);
  uint64_t v152 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151);
  uint64_t v180 = (char *)&v131 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDDA0);
  uint64_t v156 = *(void *)(v154 - 8);
  MEMORY[0x270FA5388](v154);
  uint64_t v181 = (char *)&v131 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDDA8);
  uint64_t v161 = *(void *)(v159 - 8);
  MEMORY[0x270FA5388](v159);
  uint64_t v153 = (char *)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDDB0);
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163);
  unsigned int v157 = (char *)&v131 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDDB8) - 8;
  MEMORY[0x270FA5388](v160);
  uint64_t v158 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDDC0);
  MEMORY[0x270FA5388](v165);
  uint64_t v164 = (char *)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v8 = sub_23D005778();
  v8[1] = v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDDC8);
  sub_23CF36280(v1, (uint64_t)v8 + *(int *)(v23 + 44));
  uint64_t v185 = v1;
  uint64_t v155 = v1;
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDDD0);
  uint64_t v24 = sub_23CEE8D90(&qword_268BCDDD8, &qword_268BCDD58);
  uint64_t v25 = sub_23CEE8D90(&qword_268BCDDE0, &qword_268BCDDD0);
  uint64_t v26 = v134;
  sub_23D0054A8();
  sub_23CEE8BB4((uint64_t)v8, &qword_268BCDD58);
  char v27 = (uint64_t *)(v1 + *(int *)(v4 + 32));
  uint64_t v28 = (ValueMetadata *)v27[1];
  uint64_t v190 = *v27;
  long long v191 = v28;
  uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD48);
  sub_23D0055E8();
  uint64_t v29 = v186;
  uint64_t v30 = v187;
  uint64_t v31 = v188;
  swift_getKeyPath();
  uint64_t v186 = v29;
  long long v187 = v30;
  uint64_t v188 = v31;
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDDE8);
  sub_23D005688();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v32 = v190;
  uint64_t v33 = v191;
  uint64_t v34 = v192;
  swift_getKeyPath();
  uint64_t v186 = v32;
  long long v187 = v33;
  uint64_t v188 = v34;
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDDF0);
  sub_23D005688();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v186 = v26;
  long long v187 = (ValueMetadata *)v131;
  uint64_t v188 = v24;
  unint64_t v189 = v25;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v36 = sub_23CF3A2A0();
  uint64_t v37 = v135;
  id v38 = v132;
  sub_23D005458();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v38, v37);
  uint64_t v39 = (ValueMetadata *)v27[1];
  uint64_t v190 = *v27;
  long long v191 = v39;
  sub_23D0055E8();
  uint64_t v40 = v186;
  uint64_t v41 = v187;
  uint64_t v42 = v188;
  swift_getKeyPath();
  uint64_t v186 = v40;
  long long v187 = v41;
  uint64_t v188 = v42;
  sub_23D005688();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v43 = v190;
  uint64_t v44 = v191;
  uint64_t v45 = v192;
  swift_getKeyPath();
  uint64_t v186 = v43;
  long long v187 = v44;
  uint64_t v188 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE00);
  sub_23D005688();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v46 = type metadata accessor for DebugSheet();
  uint64_t v186 = v37;
  long long v187 = &type metadata for ScoreDetail;
  uint64_t v188 = OpaqueTypeConformance2;
  unint64_t v189 = v36;
  uint64_t v136 = MEMORY[0x263F1B188];
  uint64_t v47 = swift_getOpaqueTypeConformance2();
  uint64_t v48 = sub_23CF3C4DC(&qword_268BCDE08, (void (*)(uint64_t))type metadata accessor for DebugSheet);
  uint64_t v49 = v137;
  uint64_t v50 = v177;
  sub_23D005458();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v50, v49);
  long long v184 = v27;
  uint64_t v51 = (ValueMetadata *)v27[1];
  uint64_t v190 = *v27;
  long long v191 = v51;
  sub_23D0055E8();
  uint64_t v52 = v186;
  uint64_t v53 = v187;
  uint64_t v54 = v188;
  swift_getKeyPath();
  uint64_t v186 = v52;
  long long v187 = v53;
  uint64_t v188 = v54;
  sub_23D005688();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v55 = v190;
  uint64_t v56 = v191;
  uint64_t v57 = v192;
  swift_getKeyPath();
  uint64_t v186 = v55;
  long long v187 = v56;
  uint64_t v188 = v57;
  sub_23D005688();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v186 = v49;
  long long v187 = (ValueMetadata *)v46;
  uint64_t v188 = v47;
  unint64_t v189 = v48;
  uint64_t v58 = swift_getOpaqueTypeConformance2();
  unint64_t v130 = sub_23CF3A30C();
  unint64_t v59 = v139;
  uint64_t v60 = v140;
  uint64_t v61 = v182;
  sub_23D005458();
  swift_release();
  swift_release();
  uint64_t v62 = v60;
  (*(void (**)(char *, uint64_t))(v142 + 8))(v61, v60);
  uint64_t v63 = (ValueMetadata *)v184[1];
  uint64_t v186 = *v184;
  long long v187 = v63;
  sub_23D0055C8();
  uint64_t v64 = type metadata accessor for BatchController();
  uint64_t v186 = v62;
  long long v187 = &type metadata for ScoreLevelUp;
  uint64_t v188 = v58;
  unint64_t v189 = v130;
  uint64_t v65 = swift_getOpaqueTypeConformance2();
  uint64_t v66 = sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  uint64_t v67 = v141;
  uint64_t v68 = v143;
  sub_23D0052B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v59, v68);
  uint64_t v69 = (ValueMetadata *)v184[1];
  uint64_t v186 = *v184;
  long long v187 = v69;
  sub_23D0055C8();
  uint64_t v70 = v190;
  swift_getKeyPath();
  uint64_t v186 = v70;
  sub_23D003DD8();
  swift_release();
  swift_retain();
  swift_release();
  uint64_t v71 = type metadata accessor for DonationController();
  uint64_t v186 = v68;
  long long v187 = (ValueMetadata *)v64;
  uint64_t v188 = v65;
  unint64_t v189 = v66;
  uint64_t v182 = (char *)v66;
  uint64_t v72 = (char *)MEMORY[0x263F1A970];
  uint64_t v73 = swift_getOpaqueTypeConformance2();
  uint64_t v74 = sub_23CF3C4DC((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
  uint64_t v75 = v145;
  sub_23D0052B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v146 + 8))(v67, v75);
  uint64_t v76 = (ValueMetadata *)v184[1];
  uint64_t v186 = *v184;
  long long v187 = v76;
  sub_23D0055C8();
  uint64_t v77 = v190;
  swift_getKeyPath();
  uint64_t v186 = v77;
  sub_23D003DD8();
  swift_release();
  swift_retain();
  swift_release();
  uint64_t v78 = type metadata accessor for ScoreController();
  uint64_t v186 = v75;
  long long v187 = (ValueMetadata *)v71;
  uint64_t v188 = v73;
  unint64_t v189 = v74;
  uint64_t v177 = v72;
  uint64_t v79 = swift_getOpaqueTypeConformance2();
  uint64_t v80 = sub_23CF3C4DC((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  id v81 = v178;
  uint64_t v82 = v147;
  sub_23D0052B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v148 + 8))(v81, v82);
  uint64_t v83 = (ValueMetadata *)v184[1];
  uint64_t v186 = *v184;
  long long v187 = v83;
  sub_23D0055C8();
  uint64_t v84 = v190;
  swift_getKeyPath();
  uint64_t v186 = v84;
  sub_23D003DD8();
  swift_release();
  swift_retain();
  swift_release();
  uint64_t v85 = type metadata accessor for StateController();
  uint64_t v186 = v82;
  long long v187 = (ValueMetadata *)v78;
  uint64_t v188 = v79;
  unint64_t v189 = v80;
  uint64_t v86 = swift_getOpaqueTypeConformance2();
  uint64_t v87 = sub_23CF3C4DC(&qword_268BCDE18, (void (*)(uint64_t))type metadata accessor for StateController);
  char v88 = v179;
  uint64_t v89 = v149;
  sub_23D0052B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v150 + 8))(v88, v89);
  uint64_t v90 = v184;
  uint64_t v91 = (ValueMetadata *)v184[1];
  uint64_t v186 = *v184;
  long long v187 = v91;
  sub_23D0055C8();
  uint64_t v92 = v190;
  swift_getKeyPath();
  uint64_t v186 = v92;
  sub_23D003DD8();
  swift_release();
  swift_retain();
  swift_release();
  uint64_t v93 = type metadata accessor for OnboardingController();
  uint64_t v186 = v89;
  long long v187 = (ValueMetadata *)v85;
  uint64_t v188 = v86;
  unint64_t v189 = v87;
  uint64_t v94 = swift_getOpaqueTypeConformance2();
  uint64_t v95 = sub_23CF3C4DC(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  uint64_t v96 = v180;
  uint64_t v97 = v151;
  sub_23D0052B8();
  swift_release();
  uint64_t v98 = v97;
  (*(void (**)(char *, uint64_t))(v152 + 8))(v96, v97);
  uint64_t v99 = (ValueMetadata *)v90[1];
  uint64_t v186 = *v90;
  long long v187 = v99;
  sub_23D0055C8();
  uint64_t v100 = v190;
  swift_getKeyPath();
  uint64_t v186 = v100;
  sub_23D003DD8();
  swift_release();
  swift_retain();
  swift_release();
  uint64_t v101 = type metadata accessor for DebugController();
  uint64_t v186 = v98;
  long long v187 = (ValueMetadata *)v93;
  uint64_t v188 = v94;
  unint64_t v189 = v95;
  uint64_t v102 = swift_getOpaqueTypeConformance2();
  uint64_t v103 = sub_23CF3C4DC((unint64_t *)&qword_268BCDB70, (void (*)(uint64_t))type metadata accessor for DebugController);
  uint64_t v104 = v153;
  uint64_t v105 = v154;
  uint64_t v106 = v181;
  sub_23D0052B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v156 + 8))(v106, v105);
  uint64_t v107 = (ValueMetadata *)v90[1];
  uint64_t v186 = *v90;
  long long v187 = v107;
  sub_23D0055C8();
  uint64_t v108 = v190;
  swift_getKeyPath();
  uint64_t v186 = v108;
  sub_23D003DD8();
  swift_release();
  swift_retain();
  swift_release();
  type metadata accessor for FullScreenPreviewController(0);
  uint64_t v186 = v105;
  long long v187 = (ValueMetadata *)v101;
  uint64_t v188 = v102;
  unint64_t v189 = v103;
  swift_getOpaqueTypeConformance2();
  sub_23CF3C4DC(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
  uint64_t v109 = v157;
  uint64_t v110 = v159;
  sub_23D0052B8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v161 + 8))(v104, v110);
  uint64_t v111 = sub_23D0054E8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v186 = v111;
  swift_retain();
  uint64_t v113 = sub_23D0046D8();
  uint64_t v114 = v162;
  uint64_t v115 = (uint64_t)v158;
  uint64_t v116 = v163;
  (*(void (**)(char *, char *, uint64_t))(v162 + 16))(v158, v109, v163);
  swift_release();
  uint64_t v117 = (uint64_t *)(v115 + *(int *)(v160 + 44));
  *uint64_t v117 = KeyPath;
  v117[1] = v113;
  (*(void (**)(char *, uint64_t))(v114 + 8))(v109, v116);
  uint64_t v118 = v166;
  sub_23D005BA8();
  uint64_t v119 = v167;
  sub_23CF3C8B4(v155, v167, (uint64_t (*)(void))type metadata accessor for BatchEvaluationViewContent);
  unint64_t v120 = (*(unsigned __int8 *)(v169 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v169 + 80);
  uint64_t v121 = swift_allocObject();
  sub_23CF3C84C(v119, v121 + v120, (uint64_t (*)(void))type metadata accessor for BatchEvaluationViewContent);
  uint64_t v122 = (uint64_t)v164;
  uint64_t v123 = &v164[*(int *)(v165 + 36)];
  uint64_t v124 = sub_23D004778();
  uint64_t v125 = v170;
  uint64_t v126 = v171;
  (*(void (**)(char *, char *, uint64_t))(v170 + 16))(&v123[*(int *)(v124 + 20)], v118, v171);
  *(void *)uint64_t v123 = &unk_268BCDE28;
  *((void *)v123 + 1) = v121;
  sub_23CEE82CC(v115, v122, &qword_268BCDDB8);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v118, v126);
  sub_23CEE8BB4(v115, &qword_268BCDDB8);
  uint64_t v127 = v172;
  sub_23CF3978C(&qword_268BCDD50, MEMORY[0x263F18460], 0x616850656E656353, 0xEA00000000006573, v172);
  sub_23CF3A714();
  sub_23CF3C4DC(&qword_268BCDE58, MEMORY[0x263F18460]);
  uint64_t v128 = v173;
  sub_23D0054C8();
  (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v127, v128);
  return sub_23CEE8BB4(v122, &qword_268BCDDC0);
}

uint64_t sub_23CF36280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v104 = a2;
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF50);
  MEMORY[0x270FA5388](v105);
  uint64_t v98 = (uint64_t)v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF58);
  MEMORY[0x270FA5388](v99);
  uint64_t v101 = (void *)((char *)v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF60);
  MEMORY[0x270FA5388](v90);
  uint64_t v92 = (_OWORD *)((char *)v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF68);
  MEMORY[0x270FA5388](v86);
  char v88 = (char *)v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF70);
  MEMORY[0x270FA5388](v91);
  uint64_t v89 = (char *)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF78);
  MEMORY[0x270FA5388](v100);
  uint64_t v93 = (char *)v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for CardStack();
  uint64_t v9 = MEMORY[0x270FA5388](v87);
  uint64_t v84 = (void *)((char *)v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v85 = (uint64_t)v83 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF80);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v97 = (uint64_t)v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v102 = (uint64_t)v83 - v15;
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF88);
  MEMORY[0x270FA5388](v103);
  uint64_t v17 = (char *)v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF90);
  uint64_t v95 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v94 = (char *)v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)(a1 + *(int *)(type metadata accessor for BatchEvaluationViewContent() + 24));
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  uint64_t v96 = v20;
  *(void *)&long long v110 = v21;
  *((void *)&v110 + 1) = v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD48);
  sub_23D0055C8();
  uint64_t v24 = v106;
  swift_getKeyPath();
  *(void *)&long long v110 = v24;
  uint64_t v25 = sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  uint64_t v26 = *(void *)(v24 + 32);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v110 = v26;
  sub_23CF3C4DC(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DD8();
  swift_release();
  LODWORD(a1) = *(unsigned __int8 *)(v26 + 17);
  swift_release();
  if (a1 == 1)
  {
    type metadata accessor for OnboardingController();
    uint64_t v27 = sub_23D004618();
    char v29 = v28;
    type metadata accessor for BatchController();
    uint64_t v30 = sub_23D004618();
    *(void *)&long long v110 = v27;
    BYTE8(v110) = v29 & 1;
    *(void *)&long long v111 = v30;
    BYTE8(v111) = v31 & 1;
    unint64_t v32 = sub_23CF3C794();
    uint64_t v33 = v94;
    sub_23D005428();
    swift_release();
    swift_release();
    uint64_t v34 = v95;
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v17, v33, v18);
    swift_storeEnumTagMultiPayload();
    *(void *)&long long v110 = &type metadata for BatchOnboardingView;
    *((void *)&v110 + 1) = v32;
    swift_getOpaqueTypeConformance2();
    sub_23CEE8D90(&qword_268BCE028, &qword_268BCDF50);
    sub_23D004D88();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v33, v18);
  }
  else
  {
    v83[0] = v17;
    v83[1] = v18;
    *(void *)&long long v110 = v21;
    *((void *)&v110 + 1) = v22;
    uint64_t v94 = (char *)v23;
    sub_23D0055C8();
    uint64_t v36 = v106;
    swift_getKeyPath();
    *(void *)&long long v110 = v36;
    uint64_t v95 = v25;
    sub_23D003DD8();
    swift_release();
    uint64_t v37 = *(void **)(v36 + 40);
    swift_retain();
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v110 = v37;
    sub_23CF3C4DC(&qword_268BCDE18, (void (*)(uint64_t))type metadata accessor for StateController);
    sub_23D003DD8();
    swift_release();
    uint64_t v38 = v37[2];
    unint64_t v39 = v37[3];
    uint64_t v41 = v37[4];
    uint64_t v40 = v37[5];
    uint64_t v42 = v37[6];
    uint64_t v43 = v37[7];
    uint64_t v44 = v37[8];
    sub_23CF3C33C(v38, v39);
    swift_release();
    switch(v39)
    {
      case 0uLL:
        LOBYTE(v106) = sub_23D005078();
        uint64_t v106 = v106;
        long long v107 = 0u;
        long long v108 = 0u;
        __int16 v45 = 257;
        goto LABEL_9;
      case 1uLL:
        type metadata accessor for BatchController();
        uint64_t v53 = sub_23D004618();
        uint64_t v54 = (uint64_t)v84;
        *uint64_t v84 = v53;
        *(unsigned char *)(v54 + 8) = v55 & 1;
        type metadata accessor for StateController();
        *(void *)(v54 + 16) = sub_23D004618();
        *(unsigned char *)(v54 + 24) = v56 & 1;
        type metadata accessor for DonationController();
        sub_23CF3C4DC((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
        *(void *)(v54 + 32) = sub_23D004618();
        *(unsigned char *)(v54 + 40) = v57 & 1;
        uint64_t v58 = (uint64_t *)(v54 + *(int *)(v87 + 28));
        *uint64_t v58 = swift_getKeyPath();
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD6E0);
        swift_storeEnumTagMultiPayload();
        uint64_t v59 = v85;
        sub_23CF3C84C(v54, v85, (uint64_t (*)(void))type metadata accessor for CardStack);
        sub_23CF3C8B4(v59, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for CardStack);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDFC0);
        sub_23CF3C4DC(&qword_268BCDFB0, (void (*)(uint64_t))type metadata accessor for CardStack);
        sub_23CF3C6E4(&qword_268BCDFB8, &qword_268BCDFC0, (void (*)(void))sub_23CF3C524);
        uint64_t v60 = (uint64_t)v89;
        sub_23D004D88();
        sub_23CEE82CC(v60, (uint64_t)v92, &qword_268BCDF70);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDFD8);
        sub_23CF3C40C();
        sub_23CF3C578();
        uint64_t v61 = (uint64_t)v93;
        sub_23D004D88();
        sub_23CEE8BB4(v60, &qword_268BCDF70);
        sub_23CEE82CC(v61, (uint64_t)v101, &qword_268BCDF78);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF98);
        sub_23CF3C390();
        sub_23CF3C6E4(&qword_268BCE010, &qword_268BCDF98, (void (*)(void))sub_23CEEDBC8);
        sub_23D004D88();
        sub_23CEE8BB4(v61, &qword_268BCDF78);
        sub_23CF3C91C(v59, (uint64_t (*)(void))type metadata accessor for CardStack);
        break;
      case 2uLL:
        char v62 = sub_23D005078();
        uint64_t v63 = v88;
        *char v88 = v62;
        *(_OWORD *)(v63 + 8) = 0u;
        *(_OWORD *)(v63 + 24) = 0u;
        v63[40] = 1;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDFC0);
        sub_23CF3C4DC(&qword_268BCDFB0, (void (*)(uint64_t))type metadata accessor for CardStack);
        sub_23CF3C6E4(&qword_268BCDFB8, &qword_268BCDFC0, (void (*)(void))sub_23CF3C524);
        uint64_t v64 = (uint64_t)v89;
        sub_23D004D88();
        sub_23CEE82CC(v64, (uint64_t)v92, &qword_268BCDF70);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDFD8);
        sub_23CF3C40C();
        sub_23CF3C578();
        uint64_t v65 = (uint64_t)v93;
        sub_23D004D88();
        sub_23CEE8BB4(v64, &qword_268BCDF70);
        goto LABEL_10;
      case 3uLL:
        LOBYTE(v106) = sub_23D005078();
        uint64_t v106 = v106;
        long long v107 = 0u;
        long long v108 = 0u;
        __int16 v45 = 1;
LABEL_9:
        __int16 v109 = v45;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDFE8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE000);
        sub_23CF3C6E4(&qword_268BCDFE0, &qword_268BCDFE8, (void (*)(void))sub_23CF3C63C);
        sub_23CF3C6E4(&qword_268BCDFF8, &qword_268BCE000, (void (*)(void))sub_23CF3C690);
        sub_23D004D88();
        uint64_t v66 = v112;
        char v67 = v113;
        char v68 = v114;
        long long v69 = v111;
        uint64_t v70 = v92;
        *uint64_t v92 = v110;
        v70[1] = v69;
        *((void *)v70 + 4) = v66;
        *((unsigned char *)v70 + 40) = v67;
        *((unsigned char *)v70 + 41) = v68;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDFD8);
        sub_23CF3C40C();
        sub_23CF3C578();
        uint64_t v65 = (uint64_t)v93;
        sub_23D004D88();
LABEL_10:
        sub_23CEE82CC(v65, (uint64_t)v101, &qword_268BCDF78);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF98);
        sub_23CF3C390();
        sub_23CF3C6E4(&qword_268BCE010, &qword_268BCDF98, (void (*)(void))sub_23CEEDBC8);
        sub_23D004D88();
        sub_23CEE8BB4(v65, &qword_268BCDF78);
        break;
      default:
        type metadata accessor for DonationController();
        sub_23CF3C4DC((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
        uint64_t v93 = (char *)sub_23D004618();
        char v47 = v46;
        LOBYTE(v106) = 0;
        sub_23D0055B8();
        char v48 = v110;
        uint64_t v49 = *((void *)&v110 + 1);
        char v50 = sub_23D005078();
        char v118 = v47 & 1;
        char v115 = 1;
        uint64_t v51 = v101;
        *uint64_t v101 = v38;
        v51[1] = v39;
        v51[2] = v41;
        v51[3] = v40;
        *((unsigned char *)v51 + 32) = v42;
        *(_DWORD *)((char *)v51 + 33) = v110;
        *((_DWORD *)v51 + 9) = *(_DWORD *)((char *)&v110 + 3);
        v51[5] = v43;
        v51[6] = v44;
        *((unsigned char *)v51 + 56) = v48;
        *(_DWORD *)((char *)v51 + 57) = v106;
        *((_DWORD *)v51 + 15) = *(_DWORD *)((char *)&v106 + 3);
        uint64_t v52 = v93;
        v51[8] = v49;
        v51[9] = (uint64_t)v52;
        *((unsigned char *)v51 + 80) = v118;
        *(_DWORD *)((char *)v51 + 81) = *(_DWORD *)v117;
        *((_DWORD *)v51 + 21) = *(_DWORD *)&v117[3];
        *((unsigned char *)v51 + 88) = v50;
        *(_DWORD *)((char *)v51 + 89) = *(_DWORD *)v116;
        *((_DWORD *)v51 + 23) = *(_DWORD *)&v116[3];
        *((_OWORD *)v51 + 6) = 0u;
        *((_OWORD *)v51 + 7) = 0u;
        *((unsigned char *)v51 + 128) = v115;
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF98);
        sub_23CF3C390();
        sub_23CF3C6E4(&qword_268BCE010, &qword_268BCDF98, (void (*)(void))sub_23CEEDBC8);
        sub_23D004D88();
        break;
    }
    uint64_t v71 = v96[1];
    *(void *)&long long v110 = *v96;
    *((void *)&v110 + 1) = v71;
    sub_23D0055C8();
    uint64_t v72 = v106;
    swift_getKeyPath();
    *(void *)&long long v110 = v72;
    sub_23D003DD8();
    swift_release();
    uint64_t v73 = *(void *)(v72 + 48);
    swift_retain();
    swift_release();
    swift_getKeyPath();
    *(void *)&long long v110 = v73;
    sub_23CF3C4DC((unint64_t *)&qword_268BCDB70, (void (*)(uint64_t))type metadata accessor for DebugController);
    sub_23D003DD8();
    swift_release();
    LODWORD(v72) = *(unsigned __int8 *)(v73 + 17);
    swift_release();
    uint64_t v74 = v83[0];
    if (v72 == 1)
    {
      type metadata accessor for BatchController();
      uint64_t v75 = sub_23D004618();
      char v77 = v76 & 1;
    }
    else
    {
      uint64_t v75 = 0;
      char v77 = -1;
    }
    uint64_t v78 = v102;
    uint64_t v79 = v97;
    sub_23CEE82CC(v102, v97, &qword_268BCDF80);
    uint64_t v80 = v98;
    sub_23CEE82CC(v79, v98, &qword_268BCDF80);
    uint64_t v81 = v80 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE018) + 48);
    *(void *)uint64_t v81 = v75;
    *(unsigned char *)(v81 + 8) = v77;
    sub_23CF3C76C(v75, v77);
    sub_23CF3C76C(v75, v77);
    sub_23CF3C780(v75, v77);
    sub_23CEE8BB4(v79, &qword_268BCDF80);
    sub_23CEE82CC(v80, v74, &qword_268BCDF50);
    swift_storeEnumTagMultiPayload();
    unint64_t v82 = sub_23CF3C794();
    *(void *)&long long v110 = &type metadata for BatchOnboardingView;
    *((void *)&v110 + 1) = v82;
    swift_getOpaqueTypeConformance2();
    sub_23CEE8D90(&qword_268BCE028, &qword_268BCDF50);
    sub_23D004D88();
    sub_23CF3C780(v75, v77);
    sub_23CEE8BB4(v80, &qword_268BCDF50);
    return sub_23CEE8BB4(v78, &qword_268BCDF80);
  }
}

uint64_t sub_23CF37504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDEA8);
  MEMORY[0x270FA5388](v83);
  uint64_t v82 = (uint64_t)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDEB0);
  uint64_t v80 = *(void *)(v5 - 8);
  uint64_t v81 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v79 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDEB8);
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v74 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDEC0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  char v76 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v78 = (char *)&v73 - v11;
  uint64_t v12 = sub_23D004DC8();
  uint64_t v85 = *(void *)(v12 - 8);
  uint64_t v86 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDEC8);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDED0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v88 = (uint64_t)&v73 - v23;
  uint64_t v24 = type metadata accessor for BatchEvaluationViewContent();
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v87 = a1;
  uint64_t v26 = (uint64_t *)(a1 + v25);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  uint64_t v89 = v28;
  uint64_t v90 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD48);
  sub_23D0055C8();
  uint64_t v29 = v93;
  swift_getKeyPath();
  uint64_t v89 = v29;
  sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  swift_retain();
  uint64_t v30 = swift_release();
  int v31 = MEMORY[0x23ECF5E10](v30);
  uint64_t v84 = a2;
  if (!v31)
  {
    swift_release();
LABEL_9:
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDED8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v22, 1, 1, v41);
    uint64_t v42 = sub_23CEE8D90(&qword_268BCDEE0, &qword_268BCDEC8);
    uint64_t v89 = v15;
    uint64_t v90 = v42;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    MEMORY[0x23ECF48B0](v22, v41, OpaqueTypeConformance2);
    sub_23CEE8BB4((uint64_t)v22, &qword_268BCDED0);
    goto LABEL_10;
  }
  unint64_t v32 = v14;
  if (qword_268BCCC78 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_268BDAD20;
  swift_getKeyPath();
  uint64_t v89 = v33;
  sub_23CF3C4DC((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DD8();
  swift_release();
  char v34 = *(unsigned char *)(v33 + 18);
  swift_release();
  uint64_t v14 = v32;
  if ((v34 & 1) == 0) {
    goto LABEL_9;
  }
  if (qword_268BCCC18 != -1) {
    swift_once();
  }
  uint64_t v35 = v86;
  uint64_t v36 = __swift_project_value_buffer(v86, (uint64_t)qword_268BCDCB8);
  uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 16))(v32, v36, v35);
  MEMORY[0x270FA5388](v37);
  *(&v73 - 2) = v87;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF18);
  sub_23CEE8D90(&qword_268BCDF20, &qword_268BCDF18);
  sub_23D004638();
  uint64_t v14 = v32;
  uint64_t v38 = sub_23CEE8D90(&qword_268BCDEE0, &qword_268BCDEC8);
  MEMORY[0x23ECF48A0](v18, v15, v38);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDED8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v22, 0, 1, v39);
  uint64_t v89 = v15;
  uint64_t v90 = v38;
  uint64_t v40 = swift_getOpaqueTypeConformance2();
  MEMORY[0x23ECF48B0](v22, v39, v40);
  sub_23CEE8BB4((uint64_t)v22, &qword_268BCDED0);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
LABEL_10:
  uint64_t v44 = v86;
  uint64_t v45 = v87;
  uint64_t v46 = (uint64_t)v78;
  if (*(unsigned char *)(v87 + *(int *)(v24 + 32)) == 1)
  {
    uint64_t v47 = v85;
    if (qword_268BCCC28 != -1) {
      swift_once();
    }
    uint64_t v48 = __swift_project_value_buffer(v44, (uint64_t)qword_268BCDCE8);
    uint64_t v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 16))(v14, v48, v44);
    MEMORY[0x270FA5388](v49);
    *(&v73 - 2) = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0D0);
    sub_23CEE8D90(&qword_268BCDF10, &qword_268BCD0D0);
    char v50 = v74;
    sub_23D004638();
    uint64_t v51 = sub_23CEE8D90(&qword_268BCDEF0, &qword_268BCDEB8);
    uint64_t v53 = (uint64_t)v76;
    uint64_t v52 = v77;
    MEMORY[0x23ECF48A0](v50, v77, v51);
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDEE8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
    uint64_t v89 = v52;
    uint64_t v90 = v51;
    uint64_t v55 = swift_getOpaqueTypeConformance2();
    MEMORY[0x23ECF48B0](v53, v54, v55);
    sub_23CEE8BB4(v53, &qword_268BCDEC0);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v50, v52);
  }
  else
  {
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDEE8);
    uint64_t v57 = (uint64_t)v76;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v76, 1, 1, v56);
    uint64_t v58 = sub_23CEE8D90(&qword_268BCDEF0, &qword_268BCDEB8);
    uint64_t v89 = v77;
    uint64_t v90 = v58;
    uint64_t v59 = swift_getOpaqueTypeConformance2();
    MEMORY[0x23ECF48B0](v57, v56, v59);
    sub_23CEE8BB4(v57, &qword_268BCDEC0);
    uint64_t v47 = v85;
  }
  if (qword_268BCCC20 != -1) {
    swift_once();
  }
  uint64_t v60 = __swift_project_value_buffer(v44, (uint64_t)qword_268BCDCD0);
  uint64_t v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 16))(v14, v60, v44);
  MEMORY[0x270FA5388](v61);
  *(&v73 - 2) = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDEF8);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDF00);
  uint64_t v63 = sub_23D004888();
  uint64_t v64 = sub_23CEE8D90(&qword_268BCDF08, &qword_268BCDF00);
  uint64_t v65 = sub_23CF3C4DC((unint64_t *)&qword_268BCDAF8, MEMORY[0x263F18FD0]);
  uint64_t v89 = v62;
  uint64_t v90 = v63;
  uint64_t v91 = v64;
  uint64_t v92 = v65;
  swift_getOpaqueTypeConformance2();
  uint64_t v66 = v79;
  sub_23D004638();
  uint64_t v67 = v82 + *(int *)(v83 + 48);
  uint64_t v68 = v82 + *(int *)(v83 + 64);
  uint64_t v69 = v88;
  sub_23CEE82CC(v88, v82, &qword_268BCDED0);
  sub_23CEE82CC(v46, v67, &qword_268BCDEC0);
  uint64_t v71 = v80;
  uint64_t v70 = v81;
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 16))(v68, v66, v81);
  sub_23D004C98();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v66, v70);
  sub_23CEE8BB4(v46, &qword_268BCDEC0);
  return sub_23CEE8BB4(v69, &qword_268BCDED0);
}

uint64_t sub_23CF38178(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BatchEvaluationViewContent();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  sub_23CF3C8B4(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for BatchEvaluationViewContent);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_23CF3C84C((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(void))type metadata accessor for BatchEvaluationViewContent);
  return sub_23D0055F8();
}

uint64_t sub_23CF382C0()
{
  return swift_release();
}

uint64_t sub_23CF3844C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_23D005578();
  *a1 = result;
  return result;
}

uint64_t sub_23CF38480(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BatchEvaluationViewContent();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  sub_23CF3C8B4(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for BatchEvaluationViewContent);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_23CF3C84C((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(void))type metadata accessor for BatchEvaluationViewContent);
  return sub_23D0055F8();
}

uint64_t sub_23CF385C8()
{
  uint64_t v0 = sub_23D004708();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BatchEvaluationViewContent();
  sub_23CF3978C(&qword_268BCD020, MEMORY[0x263F188C0], 0x417373696D736944, 0xED00006E6F697463, (uint64_t)v3);
  sub_23D0046F8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_23CF386E8@<X0>(uint64_t a1@<X8>)
{
  sub_23D004BC8();
  uint64_t result = sub_23D005208();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_23CF38754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_23D004888();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v19 = v3;
  uint64_t v20 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BatchEvaluationViewContent();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF00);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF3C8B4(a1, (uint64_t)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for BatchEvaluationViewContent);
  unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = swift_allocObject();
  sub_23CF3C84C((uint64_t)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, (uint64_t (*)(void))type metadata accessor for BatchEvaluationViewContent);
  uint64_t v22 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDF28);
  sub_23CF3C238();
  sub_23D0055F8();
  sub_23D004878();
  sub_23CEE8D90(&qword_268BCDF08, &qword_268BCDF00);
  sub_23CF3C4DC((unint64_t *)&qword_268BCDAF8, MEMORY[0x263F18FD0]);
  uint64_t v16 = v19;
  sub_23D0052A8();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_23CF38A70()
{
  return swift_release();
}

double sub_23CF38BFC@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for BatchEvaluationViewContent();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD48);
  sub_23D0055C8();
  swift_getKeyPath();
  sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  uint64_t v2 = *(void *)(v4 + 24);
  swift_retain();
  swift_release();
  *(void *)a1 = v2;
  double result = 32.0;
  *(_OWORD *)(a1 + 8) = xmmword_23D009470;
  *(void *)(a1 + 24) = 0x4062C00000000000;
  *(unsigned char *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_23CF38D08@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for BatchController();
  sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  *(void *)a1 = sub_23D004618();
  *(unsigned char *)(a1 + 8) = v2 & 1;
  uint64_t v3 = type metadata accessor for DebugSheet();
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(v3 + 20));
  *uint64_t v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = a1 + *(int *)(v3 + 24);
  uint64_t result = sub_23D0055B8();
  *(unsigned char *)uint64_t v5 = v7;
  *(void *)(v5 + 8) = v8;
  return result;
}

uint64_t sub_23CF38E04@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ScoreController();
  sub_23CF3C4DC((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  uint64_t result = sub_23D004618();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23CF38E80(uint64_t a1)
{
  v1[10] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCD88);
  v1[11] = swift_task_alloc();
  sub_23D005B88();
  v1[12] = sub_23D005B78();
  uint64_t v3 = sub_23D005B48();
  v1[13] = v3;
  v1[14] = v2;
  return MEMORY[0x270FA2498](sub_23CF38F48, v3, v2);
}

uint64_t sub_23CF38F48()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = type metadata accessor for BatchEvaluationViewContent();
  v0[15] = v2;
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(v2 + 24));
  uint64_t v4 = *v3;
  v0[16] = *v3;
  uint64_t v5 = v3[1];
  v0[17] = v5;
  v0[2] = v4;
  v0[3] = v5;
  v0[18] = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD48);
  sub_23D0055C8();
  uint64_t v6 = v0[6];
  swift_getKeyPath();
  v0[7] = v6;
  v0[19] = sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  v0[20] = *(void *)(v6 + 16);
  swift_retain();
  swift_release();
  char v7 = (void *)swift_task_alloc();
  v0[21] = v7;
  *char v7 = v0;
  v7[1] = sub_23CF390BC;
  return sub_23CF9C524();
}

uint64_t sub_23CF390BC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return MEMORY[0x270FA2498](sub_23CF39200, v3, v2);
}

uint64_t sub_23CF39200()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[11];
  swift_release();
  v0[4] = v2;
  v0[5] = v1;
  sub_23D0055C8();
  uint64_t v4 = v0[8];
  sub_23CF3978C(&qword_268BCD020, MEMORY[0x263F188C0], 0x417373696D736944, 0xED00006E6F697463, v3);
  uint64_t v5 = sub_23D004708();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 0, 1, v5);
  swift_getKeyPath();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  v0[9] = v4;
  sub_23D003DC8();
  swift_release();
  swift_task_dealloc();
  sub_23CEE8BB4(v3, &qword_268BCCD88);
  swift_release();
  swift_task_dealloc();
  char v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_23CF393D4()
{
  uint64_t v0 = type metadata accessor for AnalyticsEvent();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_23D0045A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F18450], v3);
  char v7 = sub_23D004598();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    swift_storeEnumTagMultiPayload();
    sub_23CFDE698();
    return sub_23CF3C91C((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for AnalyticsEvent);
  }
  return result;
}

uint64_t sub_23CF39554@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF3C4DC((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 18);
  return result;
}

uint64_t sub_23CF395FC()
{
  return swift_release();
}

uint64_t sub_23CF396CC(uint64_t a1, char a2)
{
  return sub_23CF39D18(a1, a2, 0xD000000000000014, 0x800000023D0114A0);
}

uint64_t sub_23CF396E8(uint64_t a1, char a2)
{
  return sub_23CF39D18(a1, a2, 0x6E6F436863746142, 0xEF72656C6C6F7274);
}

uint64_t sub_23CF3970C@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF3978C(&qword_268BCD020, MEMORY[0x263F188C0], 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_23CF3974C@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF3978C(&qword_268BCD028, MEMORY[0x263F18D80], 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_23CF3978C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_23D004AE8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CEE82CC(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_23D005CA8();
    uint64_t v21 = sub_23D005028();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v26 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v27 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v29 = sub_23CF231B0(v28, v26, &v30);
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v24, -1, -1);
      MEMORY[0x23ECF6610](v23, -1, -1);
    }

    sub_23D004AD8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

id sub_23CF39A44(void *a1, char a2)
{
  id v15 = a1;
  uint64_t v3 = sub_23D004AE8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v13 = v15;
    return v13;
  }
  else
  {
    swift_retain();
    os_log_type_t v7 = sub_23D005CA8();
    uint64_t v8 = sub_23D005028();
    os_log_type_t v9 = v7;
    if (os_log_type_enabled(v8, v7))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v17 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v16 = sub_23CF231B0(0xD000000000000017, 0x800000023D011500, &v17);
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v8, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v11, -1, -1);
      MEMORY[0x23ECF6610](v10, -1, -1);
    }

    sub_23D004AD8();
    swift_getAtKeyPath();
    sub_23CEF05EC(v15, 0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (id)v17;
  }
}

uint64_t sub_23CF39C80(uint64_t a1, char a2)
{
  return sub_23CF39D18(a1, a2, 0xD00000000000001BLL, 0x800000023D0114E0);
}

uint64_t sub_23CF39C9C(uint64_t a1, char a2)
{
  return sub_23CF39D18(a1, a2, 0xD000000000000012, 0x800000023D011480);
}

uint64_t sub_23CF39CB8@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF3978C(&qword_268BCD6E0, MEMORY[0x263F18520], 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_23CF39CF4(uint64_t a1, char a2)
{
  return sub_23CF39D18(a1, a2, 0x6E6F4365726F6353, 0xEF72656C6C6F7274);
}

uint64_t sub_23CF39D18(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_23D004AE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v12 = sub_23D005CA8();
    id v13 = sub_23D005028();
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      unint64_t v21 = a4;
      id v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = a3;
      uint64_t v18 = v16;
      uint64_t v23 = v16;
      *(_DWORD *)id v15 = 136315138;
      uint64_t v22 = sub_23CF231B0(v17, v21, &v23);
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v18, -1, -1);
      MEMORY[0x23ECF6610](v15, -1, -1);
    }

    sub_23D004AD8();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v23;
  }
  return a1;
}

uint64_t sub_23CF39F20@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF39F78(&qword_268BCD618, &qword_268BCDE90, 0xD000000000000019, 0x800000023D011430, a1);
}

uint64_t sub_23CF39F4C@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF39F78(&qword_268BCDE98, &qword_268BCDEA0, 0xD000000000000020, 0x800000023D011450, a1);
}

uint64_t sub_23CF39F78@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_23D004AE8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  os_log_type_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CEE82CC(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_23CEE83D8((uint64_t)v17, a5, a2);
  }
  os_log_type_t v19 = sub_23D005CA8();
  uint64_t v20 = sub_23D005028();
  if (os_log_type_enabled(v20, v19))
  {
    unint64_t v25 = a4;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = a5;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v29 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v28 = sub_23CF231B0(v27, v25, &v29);
    sub_23D005E48();
    _os_log_impl(&dword_23CEE3000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v23, -1, -1);
    MEMORY[0x23ECF6610](v22, -1, -1);
  }

  sub_23D004AD8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_23CF3A200()
{
  return sub_23D004918();
}

uint64_t sub_23CF3A224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23CF3A3D0(a1, a2, a3, a4, MEMORY[0x263F18460], MEMORY[0x263F19208]);
}

uint64_t sub_23CF3A268@<X0>(uint64_t *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 33)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  return sub_23CF344DC(*(void *)(v1 + 16), *(void *)(v1 + 24), v2 | *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_23CF3A288@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF37504(*(void *)(v1 + 16), a1);
}

unint64_t sub_23CF3A2A0()
{
  unint64_t result = qword_268BCDDF8;
  if (!qword_268BCDDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDDF8);
  }
  return result;
}

unint64_t sub_23CF3A30C()
{
  unint64_t result = qword_268BCDE10;
  if (!qword_268BCDE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDE10);
  }
  return result;
}

uint64_t sub_23CF3A380()
{
  return sub_23D004928();
}

uint64_t sub_23CF3A3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23CF3A3D0(a1, a2, a3, a4, MEMORY[0x263F18520], MEMORY[0x263F19230]);
}

uint64_t sub_23CF3A3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_23CF3A4A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_23D004A48();
  *a1 = result;
  return result;
}

uint64_t sub_23CF3A4CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_23D004A48();
  *a1 = result;
  return result;
}

uint64_t sub_23CF3A4F8()
{
  return sub_23D004A58();
}

uint64_t sub_23CF3A524()
{
  return sub_23D004A58();
}

uint64_t sub_23CF3A554()
{
  uint64_t v2 = *(void *)(type metadata accessor for BatchEvaluationViewContent() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_23CF3A620;
  return sub_23CF38E80(v3);
}

uint64_t sub_23CF3A620()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_23CF3A714()
{
  unint64_t result = qword_268BCDE30;
  if (!qword_268BCDE30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDDC0);
    sub_23CF3A7C0();
    sub_23CF3C4DC(&qword_268BCDE50, MEMORY[0x263F189F8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDE30);
  }
  return result;
}

unint64_t sub_23CF3A7C0()
{
  unint64_t result = qword_268BCDE38;
  if (!qword_268BCDE38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDDB8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDDA8);
    type metadata accessor for FullScreenPreviewController(255);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDDA0);
    type metadata accessor for DebugController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDD98);
    type metadata accessor for OnboardingController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDD90);
    type metadata accessor for StateController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDD88);
    type metadata accessor for ScoreController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDD80);
    type metadata accessor for DonationController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDD78);
    type metadata accessor for BatchController();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDD70);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDD68);
    type metadata accessor for DebugSheet();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDD60);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDD58);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDDD0);
    sub_23CEE8D90(&qword_268BCDDD8, &qword_268BCDD58);
    sub_23CEE8D90(&qword_268BCDDE0, &qword_268BCDDD0);
    swift_getOpaqueTypeConformance2();
    sub_23CF3A2A0();
    swift_getOpaqueTypeConformance2();
    sub_23CF3C4DC(&qword_268BCDE08, (void (*)(uint64_t))type metadata accessor for DebugSheet);
    swift_getOpaqueTypeConformance2();
    sub_23CF3A30C();
    swift_getOpaqueTypeConformance2();
    sub_23CF3C4DC(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
    swift_getOpaqueTypeConformance2();
    sub_23CF3C4DC((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
    swift_getOpaqueTypeConformance2();
    sub_23CF3C4DC((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
    swift_getOpaqueTypeConformance2();
    sub_23CF3C4DC(&qword_268BCDE18, (void (*)(uint64_t))type metadata accessor for StateController);
    swift_getOpaqueTypeConformance2();
    sub_23CF3C4DC(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
    swift_getOpaqueTypeConformance2();
    sub_23CF3C4DC((unint64_t *)&qword_268BCDB70, (void (*)(uint64_t))type metadata accessor for DebugController);
    swift_getOpaqueTypeConformance2();
    sub_23CF3C4DC(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
    swift_getOpaqueTypeConformance2();
    sub_23CEE8D90(&qword_268BCDE40, &qword_268BCDE48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDE38);
  }
  return result;
}

uint64_t sub_23CF3AD40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF3AD5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for BatchEvaluationView()
{
  swift_release();

  return swift_release();
}

uint64_t _s8Feedback19BatchEvaluationViewVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BatchEvaluationView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for BatchEvaluationView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchEvaluationView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchEvaluationView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchEvaluationView()
{
  return &type metadata for BatchEvaluationView;
}

void *initializeBufferWithCopyOfBuffer for BatchEvaluationViewContent(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_23D0045A8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)v4 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_23D004708();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for BatchEvaluationViewContent(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_23D0045A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_23D004708();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_release();
}

void *initializeWithCopy for BatchEvaluationViewContent(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_23D0045A8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_23D004708();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for BatchEvaluationViewContent(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_23CEE8BB4((uint64_t)a1, &qword_268BCDD50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_23D0045A8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_23CEE8BB4((uint64_t)a1 + v7, &qword_268BCD020);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_23D004708();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  swift_retain();
  swift_release();
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

char *initializeWithTake for BatchEvaluationViewContent(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_23D0045A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_23D004708();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  a1[v13] = a2[v13];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *assignWithTake for BatchEvaluationViewContent(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_23CEE8BB4((uint64_t)a1, &qword_268BCDD50);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_23D0045A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_23CEE8BB4((uint64_t)&a1[v8], &qword_268BCD020);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_23D004708();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  swift_release();
  *((void *)v14 + 1) = *((void *)v15 + 1);
  swift_release();
  uint64_t v16 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v16] = a2[v16];
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchEvaluationViewContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF3B950);
}

uint64_t sub_23CF3B950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE60);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD060);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchEvaluationViewContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF3BA80);
}

uint64_t sub_23CF3BA80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE60);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD060);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_23CF3BB98()
{
  sub_23CF3BCAC(319, &qword_268BCDE78, MEMORY[0x263F18460]);
  if (v0 <= 0x3F)
  {
    sub_23CF3BCAC(319, &qword_268BCD080, MEMORY[0x263F188C0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_23CF3BCAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_23D004608();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_23CF3BD04()
{
  unint64_t result = qword_268BCDE80;
  if (!qword_268BCDE80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDE88);
    sub_23CF34830();
    sub_23CEE8D90(&qword_268BCDD40, &qword_268BCDD20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDE80);
  }
  return result;
}

uint64_t sub_23CF3BDA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF3BE58()
{
  return sub_23CF131E4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_23CF3BE74()
{
  return sub_23CF12F44(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_23CF3BE90()
{
  return sub_23CF13024(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_23CF3BEAC()
{
  return sub_23CF12D84(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_23CF3BECC()
{
  return sub_23CF148BC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_23CF3BEEC()
{
  return sub_23CF13104(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_23CF3BF08()
{
  return sub_23CF12E64(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_23CF3BF24@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF38754(*(void *)(v1 + 16), a1);
}

uint64_t sub_23CF3BF2C()
{
  return sub_23CF38480(*(void *)(v0 + 16));
}

uint64_t sub_23CF3BF3C()
{
  return sub_23CF38178(*(void *)(v0 + 16));
}

uint64_t sub_23CF3BF48()
{
  return sub_23CF3C1BC((uint64_t (*)(uint64_t))sub_23CF382C0);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_23CF3BFC4()
{
  sub_23CF9BA8C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_23CF3BFE8()
{
  return sub_23CF3C1BC((uint64_t (*)(uint64_t))sub_23CF385C8);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = type metadata accessor for BatchEvaluationViewContent();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDD50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_23D0045A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD020);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_23D004708();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_23CF3C1A4()
{
  return sub_23CF3C1BC((uint64_t (*)(uint64_t))sub_23CF38A70);
}

uint64_t sub_23CF3C1BC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for BatchEvaluationViewContent() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

double sub_23CF3C230@<D0>(uint64_t a1@<X8>)
{
  return sub_23CF38BFC(a1);
}

unint64_t sub_23CF3C238()
{
  unint64_t result = qword_268BCDF30;
  if (!qword_268BCDF30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDF28);
    sub_23CF3C2D8();
    sub_23CEE8D90(&qword_268BCDF40, &qword_268BCDF48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDF30);
  }
  return result;
}

unint64_t sub_23CF3C2D8()
{
  unint64_t result = qword_268BCDF38;
  if (!qword_268BCDF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDF38);
  }
  return result;
}

uint64_t sub_23CF3C33C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_23CF3C390()
{
  unint64_t result = qword_268BCDFA0;
  if (!qword_268BCDFA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDF78);
    sub_23CF3C40C();
    sub_23CF3C578();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDFA0);
  }
  return result;
}

unint64_t sub_23CF3C40C()
{
  unint64_t result = qword_268BCDFA8;
  if (!qword_268BCDFA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDF70);
    sub_23CF3C4DC(&qword_268BCDFB0, (void (*)(uint64_t))type metadata accessor for CardStack);
    sub_23CF3C6E4(&qword_268BCDFB8, &qword_268BCDFC0, (void (*)(void))sub_23CF3C524);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDFA8);
  }
  return result;
}

uint64_t sub_23CF3C4DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23CF3C524()
{
  unint64_t result = qword_268BCDFC8;
  if (!qword_268BCDFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDFC8);
  }
  return result;
}

unint64_t sub_23CF3C578()
{
  unint64_t result = qword_268BCDFD0;
  if (!qword_268BCDFD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDFD8);
    sub_23CF3C6E4(&qword_268BCDFE0, &qword_268BCDFE8, (void (*)(void))sub_23CF3C63C);
    sub_23CF3C6E4(&qword_268BCDFF8, &qword_268BCE000, (void (*)(void))sub_23CF3C690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDFD0);
  }
  return result;
}

unint64_t sub_23CF3C63C()
{
  unint64_t result = qword_268BCDFF0;
  if (!qword_268BCDFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDFF0);
  }
  return result;
}

unint64_t sub_23CF3C690()
{
  unint64_t result = qword_268BCE008;
  if (!qword_268BCE008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE008);
  }
  return result;
}

uint64_t sub_23CF3C6E4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF3C76C(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_23CF3C780(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return swift_release();
  }
  return result;
}

unint64_t sub_23CF3C794()
{
  unint64_t result = qword_268BCE020;
  if (!qword_268BCE020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE020);
  }
  return result;
}

uint64_t sub_23CF3C7E8()
{
  return sub_23D004928();
}

uint64_t sub_23CF3C80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23CF3A3D0(a1, a2, a3, a4, MEMORY[0x263F18520], MEMORY[0x263F19230]);
}

uint64_t sub_23CF3C84C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_23CF3C8B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23CF3C91C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23CF3C97C()
{
  return sub_23CF3BECC();
}

uint64_t *sub_23CF3C994(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_23D003DB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for BatchInteraction(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + v9) = (uint64_t)v10;
    *(uint64_t *)((char *)v4 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
    uint64_t v11 = v8[7];
    uint64_t v12 = (uint64_t *)((char *)v4 + v11);
    uint64_t v13 = (void **)((char *)a2 + v11);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    id v14 = v10;
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v16 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v17 + 48);
    int v19 = v18(v13, 1, v16);
    if (EnumCaseMultiPayload == 1)
    {
      if (v19)
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            unint64_t v25 = *v13;
            *uint64_t v12 = *v13;
            id v26 = v25;
            break;
          case 3u:
            uint64_t v27 = *v13;
            uint64_t v28 = v13[1];
            *uint64_t v12 = *v13;
            v12[1] = v28;
            void v12[2] = v13[2];
            id v29 = v27;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v30 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v30 - 8) + 16))(v12, v13, v30);
            break;
          case 5u:
            uint64_t v83 = v13[1];
            uint64_t v86 = *v13;
            uint64_t v77 = (uint64_t)v13[3];
            uint64_t v80 = v13[2];
            uint64_t v73 = (uint64_t)v13[5];
            uint64_t v74 = (uint64_t)v13[4];
            uint64_t v71 = v13[7];
            uint64_t v72 = (uint64_t)v13[6];
            uint64_t v89 = (uint64_t)v13[8];
            char v92 = *((unsigned char *)v13 + 72);
            sub_23CEF00B0((uint64_t)*v13, v83, v80, v77, v74, v73, v72, v71, v89, v92);
            *uint64_t v12 = v86;
            v12[1] = v83;
            void v12[2] = v80;
            uint64_t v12[3] = v77;
            v12[4] = v74;
            v12[5] = v73;
            v12[6] = v72;
            v12[7] = v71;
            v12[8] = v89;
            *((unsigned char *)v12 + 72) = v92;
            break;
          default:
            uint64_t v23 = v13[1];
            *uint64_t v12 = *v13;
            v12[1] = v23;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
      }
      uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      unint64_t v32 = (void *)((char *)v12 + v31);
      uint64_t v33 = (void **)((char *)v13 + v31);
      if (v18(v33, 1, v16))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v48 = *v33;
            *unint64_t v32 = *v33;
            id v49 = v48;
            break;
          case 3u:
            char v50 = *v33;
            uint64_t v51 = v33[1];
            *unint64_t v32 = *v33;
            v32[1] = v51;
            v32[2] = v33[2];
            id v52 = v50;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v53 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v53 - 8) + 16))(v32, v33, v53);
            break;
          case 5u:
            uint64_t v54 = (uint64_t)*v33;
            uint64_t v55 = v33[2];
            uint64_t v91 = v55;
            uint64_t v94 = v33[1];
            uint64_t v56 = (uint64_t)v33[4];
            uint64_t v85 = v56;
            uint64_t v88 = (uint64_t)v33[3];
            uint64_t v57 = (uint64_t)v33[6];
            uint64_t v79 = v57;
            uint64_t v82 = (uint64_t)v33[5];
            char v76 = v33[7];
            uint64_t v58 = (uint64_t)v33[8];
            char v59 = *((unsigned char *)v33 + 72);
            sub_23CEF00B0(v54, v94, v55, v88, v56, v82, v57, v76, v58, v59);
            *unint64_t v32 = v54;
            v32[1] = v94;
            v32[2] = v91;
            v32[3] = v88;
            v32[4] = v85;
            v32[5] = v82;
            v32[6] = v79;
            unsigned char v32[7] = v76;
            v32[8] = v58;
            *((unsigned char *)v32 + 72) = v59;
            break;
          default:
            uint64_t v35 = v33[1];
            *unint64_t v32 = *v33;
            v32[1] = v35;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v32, 0, 1, v16);
      }
    }
    else if (v19)
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v12, v13, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v36 = *v13;
          *uint64_t v12 = *v13;
          id v37 = v36;
          break;
        case 3u:
          uint64_t v38 = *v13;
          uint64_t v39 = v13[1];
          *uint64_t v12 = *v13;
          v12[1] = v39;
          void v12[2] = v13[2];
          id v40 = v38;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v41 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v41 - 8) + 16))(v12, v13, v41);
          break;
        case 5u:
          uint64_t v42 = (uint64_t)*v13;
          uint64_t v43 = v13[2];
          uint64_t v90 = v43;
          uint64_t v93 = v13[1];
          uint64_t v44 = (uint64_t)v13[4];
          uint64_t v84 = v44;
          uint64_t v87 = (uint64_t)v13[3];
          uint64_t v45 = (uint64_t)v13[6];
          uint64_t v78 = v45;
          uint64_t v81 = (uint64_t)v13[5];
          uint64_t v75 = v13[7];
          uint64_t v46 = (uint64_t)v13[8];
          char v47 = *((unsigned char *)v13 + 72);
          sub_23CEF00B0(v42, v93, v43, v87, v44, v81, v45, v75, v46, v47);
          *uint64_t v12 = v42;
          v12[1] = v93;
          void v12[2] = v90;
          uint64_t v12[3] = v87;
          v12[4] = v84;
          v12[5] = v81;
          v12[6] = v78;
          v12[7] = v75;
          v12[8] = v46;
          *((unsigned char *)v12 + 72) = v47;
          break;
        default:
          uint64_t v24 = v13[1];
          *uint64_t v12 = *v13;
          v12[1] = v24;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = *(int *)(a3 + 20);
    uint64_t v61 = *(int *)(a3 + 24);
    uint64_t v62 = (char *)v4 + v60;
    uint64_t v63 = (char *)a2 + v60;
    uint64_t v64 = *(void *)v63;
    LOBYTE(v63) = v63[8];
    *(void *)uint64_t v62 = v64;
    v62[8] = (char)v63;
    uint64_t v65 = (uint64_t *)((char *)v4 + v61);
    uint64_t v66 = (char *)a2 + v61;
    uint64_t v68 = *(void **)v66;
    uint64_t v67 = *((void *)v66 + 1);
    *uint64_t v65 = *(void *)v66;
    v65[1] = v67;
    swift_retain();
    id v69 = v68;
  }
  swift_retain();
  return v4;
}

uint64_t sub_23CF3D0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v6 = a1 + *(int *)(v5 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  int v10 = v9(v6, 1, v8);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v13 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v6, v13);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
          break;
        default:
          break;
      }
    }
    v6 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v9(v6, 1, v8))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else if (!v10)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
LABEL_7:
        swift_bridgeObjectRelease();
        break;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_12:
        uint64_t v11 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
        break;
      case 5u:
LABEL_13:
        sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
        break;
      default:
        break;
    }
  }
  swift_release();

  return swift_release();
}

uint64_t sub_23CF3D468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  *(void *)(a1 + v6[6]) = *(void *)(a2 + v6[6]);
  uint64_t v9 = v6[7];
  int v10 = (void *)(a1 + v9);
  uint64_t v11 = (void **)(a2 + v9);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  id v12 = v8;
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v14 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v11, 1, v14);
  if (EnumCaseMultiPayload == 1)
  {
    if (v17)
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v10, v11, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v22 = *v11;
          *int v10 = *v11;
          id v23 = v22;
          break;
        case 3u:
          uint64_t v24 = *v11;
          unint64_t v25 = v11[1];
          *int v10 = *v11;
          v10[1] = v25;
          v10[2] = v11[2];
          id v26 = v24;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v27 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v27 - 8) + 16))(v10, v11, v27);
          break;
        case 5u:
          uint64_t v80 = v11[1];
          uint64_t v83 = *v11;
          uint64_t v74 = (uint64_t)v11[3];
          uint64_t v77 = v11[2];
          uint64_t v70 = (uint64_t)v11[5];
          uint64_t v71 = (uint64_t)v11[4];
          uint64_t v68 = v11[7];
          uint64_t v69 = (uint64_t)v11[6];
          uint64_t v86 = (uint64_t)v11[8];
          char v89 = *((unsigned char *)v11 + 72);
          sub_23CEF00B0((uint64_t)*v11, v80, v77, v74, v71, v70, v69, v68, v86, v89);
          *int v10 = v83;
          v10[1] = v80;
          v10[2] = v77;
          v10[3] = v74;
          v10[4] = v71;
          v10[5] = v70;
          v10[6] = v69;
          v10[7] = v68;
          v10[8] = v86;
          *((unsigned char *)v10 + 72) = v89;
          break;
        default:
          uint64_t v20 = v11[1];
          *int v10 = *v11;
          v10[1] = v20;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    uint64_t v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    id v29 = (void *)((char *)v10 + v28);
    uint64_t v30 = (void **)((char *)v11 + v28);
    if (v16(v30, 1, v14))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v45 = *v30;
          *id v29 = *v30;
          id v46 = v45;
          break;
        case 3u:
          char v47 = *v30;
          uint64_t v48 = v30[1];
          *id v29 = *v30;
          v29[1] = v48;
          v29[2] = v30[2];
          id v49 = v47;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v50 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v50 - 8) + 16))(v29, v30, v50);
          break;
        case 5u:
          uint64_t v51 = (uint64_t)*v30;
          id v52 = v30[2];
          uint64_t v88 = v52;
          uint64_t v91 = v30[1];
          uint64_t v53 = (uint64_t)v30[4];
          uint64_t v82 = v53;
          uint64_t v85 = (uint64_t)v30[3];
          uint64_t v54 = (uint64_t)v30[6];
          uint64_t v76 = v54;
          uint64_t v79 = (uint64_t)v30[5];
          uint64_t v73 = v30[7];
          uint64_t v55 = (uint64_t)v30[8];
          char v56 = *((unsigned char *)v30 + 72);
          sub_23CEF00B0(v51, v91, v52, v85, v53, v79, v54, v73, v55, v56);
          *id v29 = v51;
          v29[1] = v91;
          v29[2] = v88;
          v29[3] = v85;
          v29[4] = v82;
          v29[5] = v79;
          v29[6] = v76;
          v29[7] = v73;
          v29[8] = v55;
          *((unsigned char *)v29 + 72) = v56;
          break;
        default:
          unint64_t v32 = v30[1];
          *id v29 = *v30;
          v29[1] = v32;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v29, 0, 1, v14);
    }
  }
  else if (v17)
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v10, v11, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v33 = *v11;
        *int v10 = *v11;
        id v34 = v33;
        break;
      case 3u:
        uint64_t v35 = *v11;
        uint64_t v36 = v11[1];
        *int v10 = *v11;
        v10[1] = v36;
        v10[2] = v11[2];
        id v37 = v35;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v38 = sub_23D003B88();
        (*(void (**)(void *, void **, uint64_t))(*(void *)(v38 - 8) + 16))(v10, v11, v38);
        break;
      case 5u:
        uint64_t v39 = (uint64_t)*v11;
        id v40 = v11[2];
        uint64_t v87 = v40;
        uint64_t v90 = v11[1];
        uint64_t v41 = (uint64_t)v11[4];
        uint64_t v81 = v41;
        uint64_t v84 = (uint64_t)v11[3];
        uint64_t v42 = (uint64_t)v11[6];
        uint64_t v75 = v42;
        uint64_t v78 = (uint64_t)v11[5];
        uint64_t v72 = v11[7];
        uint64_t v43 = (uint64_t)v11[8];
        char v44 = *((unsigned char *)v11 + 72);
        sub_23CEF00B0(v39, v90, v40, v84, v41, v78, v42, v72, v43, v44);
        *int v10 = v39;
        v10[1] = v90;
        v10[2] = v87;
        v10[3] = v84;
        v10[4] = v81;
        v10[5] = v78;
        v10[6] = v75;
        v10[7] = v72;
        v10[8] = v43;
        *((unsigned char *)v10 + 72) = v44;
        break;
      default:
        uint64_t v21 = v11[1];
        *int v10 = *v11;
        v10[1] = v21;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v57 = *(int *)(a3 + 20);
  uint64_t v58 = *(int *)(a3 + 24);
  uint64_t v59 = a1 + v57;
  uint64_t v60 = (uint64_t *)(a2 + v57);
  uint64_t v61 = *v60;
  LOBYTE(v60) = *((unsigned char *)v60 + 8);
  *(void *)uint64_t v59 = v61;
  *(unsigned char *)(v59 + 8) = (_BYTE)v60;
  uint64_t v62 = (void *)(a1 + v58);
  uint64_t v63 = a2 + v58;
  uint64_t v65 = *(void **)v63;
  uint64_t v64 = *(void *)(v63 + 8);
  void *v62 = *(void *)v63;
  v62[1] = v64;
  swift_retain();
  id v66 = v65;
  swift_retain();
  return a1;
}

uint64_t sub_23CF3DB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = *(void **)(a2 + v8);
  int v10 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = v9;
  id v11 = v9;

  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v12 = v7[7];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void **)(a2 + v12);
    sub_23CF421A8(a1 + v12, type metadata accessor for BatchInteraction.ContentPolarity);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v16 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v17 + 48);
    int v19 = v18(v14, 1, v16);
    if (EnumCaseMultiPayload == 1)
    {
      if (v19)
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v22 = *v14;
            *uint64_t v13 = *v14;
            id v23 = v22;
            break;
          case 3u:
            uint64_t v24 = *v14;
            *uint64_t v13 = *v14;
            v13[1] = v14[1];
            void v13[2] = v14[2];
            id v25 = v24;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v26 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v26 - 8) + 16))(v13, v14, v26);
            break;
          case 5u:
            uint64_t v76 = v14[1];
            uint64_t v79 = *v14;
            uint64_t v70 = (uint64_t)v14[3];
            uint64_t v73 = v14[2];
            uint64_t v66 = (uint64_t)v14[5];
            uint64_t v67 = (uint64_t)v14[4];
            uint64_t v64 = v14[7];
            uint64_t v65 = (uint64_t)v14[6];
            uint64_t v82 = (uint64_t)v14[8];
            char v85 = *((unsigned char *)v14 + 72);
            sub_23CEF00B0((uint64_t)*v14, v76, v73, v70, v67, v66, v65, v64, v82, v85);
            *uint64_t v13 = v79;
            v13[1] = v76;
            void v13[2] = v73;
            v13[3] = v70;
            v13[4] = v67;
            v13[5] = v66;
            v13[6] = v65;
            v13[7] = v64;
            char v13[8] = v82;
            *((unsigned char *)v13 + 72) = v85;
            break;
          default:
            *uint64_t v13 = *v14;
            v13[1] = v14[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
      uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v28 = (void *)((char *)v13 + v27);
      id v29 = (void **)((char *)v14 + v27);
      if (v18(v29, 1, v16))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v42 = *v29;
            *uint64_t v28 = *v29;
            id v43 = v42;
            break;
          case 3u:
            char v44 = *v29;
            *uint64_t v28 = *v29;
            v28[1] = v29[1];
            id v28[2] = v29[2];
            id v45 = v44;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v46 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v46 - 8) + 16))(v28, v29, v46);
            break;
          case 5u:
            uint64_t v47 = (uint64_t)*v29;
            uint64_t v48 = v29[2];
            uint64_t v84 = v48;
            uint64_t v87 = v29[1];
            uint64_t v49 = (uint64_t)v29[4];
            uint64_t v78 = v49;
            uint64_t v81 = (uint64_t)v29[3];
            uint64_t v50 = (uint64_t)v29[6];
            uint64_t v72 = v50;
            uint64_t v75 = (uint64_t)v29[5];
            uint64_t v69 = v29[7];
            uint64_t v51 = (uint64_t)v29[8];
            char v52 = *((unsigned char *)v29 + 72);
            sub_23CEF00B0(v47, v87, v48, v81, v49, v75, v50, v69, v51, v52);
            *uint64_t v28 = v47;
            v28[1] = v87;
            id v28[2] = v84;
            v28[3] = v81;
            v28[4] = v78;
            v28[5] = v75;
            v28[6] = v72;
            v28[7] = v69;
            v28[8] = v51;
            *((unsigned char *)v28 + 72) = v52;
            break;
          default:
            *uint64_t v28 = *v29;
            v28[1] = v29[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v28, 0, 1, v16);
      }
    }
    else if (v19)
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v31 = *v14;
          *uint64_t v13 = *v14;
          id v32 = v31;
          break;
        case 3u:
          uint64_t v33 = *v14;
          *uint64_t v13 = *v14;
          v13[1] = v14[1];
          void v13[2] = v14[2];
          id v34 = v33;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v35 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v35 - 8) + 16))(v13, v14, v35);
          break;
        case 5u:
          uint64_t v36 = (uint64_t)*v14;
          id v37 = v14[2];
          uint64_t v83 = v37;
          uint64_t v86 = v14[1];
          uint64_t v38 = (uint64_t)v14[4];
          uint64_t v77 = v38;
          uint64_t v80 = (uint64_t)v14[3];
          uint64_t v39 = (uint64_t)v14[6];
          uint64_t v71 = v39;
          uint64_t v74 = (uint64_t)v14[5];
          uint64_t v68 = v14[7];
          uint64_t v40 = (uint64_t)v14[8];
          char v41 = *((unsigned char *)v14 + 72);
          sub_23CEF00B0(v36, v86, v37, v80, v38, v74, v39, v68, v40, v41);
          *uint64_t v13 = v36;
          v13[1] = v86;
          void v13[2] = v83;
          v13[3] = v80;
          v13[4] = v77;
          v13[5] = v74;
          v13[6] = v71;
          v13[7] = v68;
          char v13[8] = v40;
          *((unsigned char *)v13 + 72) = v41;
          break;
        default:
          *uint64_t v13 = *v14;
          v13[1] = v14[1];
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v53 = *(int *)(a3 + 20);
  uint64_t v54 = a1 + v53;
  uint64_t v55 = (uint64_t *)(a2 + v53);
  uint64_t v56 = *v55;
  LOBYTE(v55) = *((unsigned char *)v55 + 8);
  *(void *)uint64_t v54 = v56;
  *(unsigned char *)(v54 + 8) = (_BYTE)v55;
  swift_retain();
  swift_release();
  uint64_t v57 = *(int *)(a3 + 24);
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  uint64_t v60 = *(void **)(a2 + v57);
  uint64_t v61 = *(void **)v58;
  *(void *)uint64_t v58 = v60;
  id v62 = v60;

  *(void *)(v58 + 8) = *(void *)(v59 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23CF3E314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for BatchInteraction(0);
  *(void *)(a1 + v6[5]) = *(void *)(a2 + v6[5]);
  *(void *)(a1 + v6[6]) = *(void *)(a2 + v6[6]);
  uint64_t v7 = v6[7];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v11 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  if (EnumCaseMultiPayload == 1)
  {
    if (v14)
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v17 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v8, v9, v17);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(void *)(v12 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
    uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    uint64_t v21 = &v8[v20];
    uint64_t v22 = &v9[v20];
    if (v13(v22, 1, v11))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      goto LABEL_14;
    }
    uint64_t v18 = a3;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v24 = sub_23D003B88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(v12 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
  }
  else
  {
    if (v14)
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_14:
      uint64_t v18 = a3;
      goto LABEL_21;
    }
    uint64_t v18 = a3;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v19 = sub_23D003B88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v8, v9, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(v12 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  }
LABEL_21:
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = *(int *)(v18 + 20);
  uint64_t v26 = *(int *)(v18 + 24);
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  return a1;
}

uint64_t sub_23CF3E72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = *(void **)(a1 + v8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);

  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v10 = v7[7];
    uint64_t v11 = (char *)(a1 + v10);
    uint64_t v12 = (char *)(a2 + v10);
    sub_23CF421A8(a1 + v10, type metadata accessor for BatchInteraction.ContentPolarity);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v14 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
    int v17 = v16(v12, 1, v14);
    if (EnumCaseMultiPayload == 1)
    {
      if (v17)
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v20 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v11, v12, v20);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v11, v12, *(void *)(v15 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v23 = &v11[v22];
      uint64_t v24 = &v12[v22];
      if (v16(v24, 1, v14))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v26 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v23, v24, *(void *)(v15 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
      }
    }
    else if (v17)
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v21 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v11, v12, v21);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(void *)(v15 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = a1 + v27;
  id v29 = (uint64_t *)(a2 + v27);
  uint64_t v30 = *v29;
  LOBYTE(v29) = *((unsigned char *)v29 + 8);
  *(void *)uint64_t v28 = v30;
  *(unsigned char *)(v28 + 8) = (_BYTE)v29;
  swift_release();
  uint64_t v31 = *(int *)(a3 + 24);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = (void *)(a2 + v31);
  id v34 = *(void **)(a1 + v31);
  *(void *)(a1 + v31) = *v33;

  *(void *)(v32 + 8) = v33[1];
  swift_release();
  return a1;
}

uint64_t sub_23CF3EBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF3EBBC);
}

uint64_t sub_23CF3EBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BatchInteraction(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_23CF3EC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF3EC90);
}

uint64_t sub_23CF3EC90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for BatchInteraction(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for EvaluationCard()
{
  uint64_t result = qword_268BCE030;
  if (!qword_268BCE030) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF3ED98()
{
  uint64_t result = type metadata accessor for BatchInteraction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23CF3EE38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF3EE54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v77 = a1;
  uint64_t v78 = sub_23D005BC8();
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v75 = (char *)v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_23D004B48();
  uint64_t v73 = *(void *)(v74 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v74);
  uint64_t v72 = (char *)v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v69 = (char *)v63 - v5;
  uint64_t v6 = type metadata accessor for EvaluationCard();
  uint64_t v7 = v6 - 8;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE040);
  uint64_t v64 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v12 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE048);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE050) - 8;
  MEMORY[0x270FA5388](v67);
  uint64_t v65 = (uint64_t)v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE058);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v81 = (uint64_t)v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE060) - 8;
  MEMORY[0x270FA5388](v71);
  uint64_t v70 = (char *)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v85 = type metadata accessor for EvaluationCard;
  uint64_t v79 = v10;
  uint64_t v80 = v1;
  sub_23CF42140(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for EvaluationCard);
  uint64_t v21 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v83 = ((v21 + 16) & ~v21) + v9;
  uint64_t v84 = (v21 + 16) & ~v21;
  uint64_t v22 = v84;
  uint64_t v82 = v21 | 7;
  uint64_t v23 = swift_allocObject();
  sub_23CF41910((uint64_t)v10, v23 + v22);
  uint64_t v92 = 0x4030000000000000;
  uint64_t v93 = sub_23CF41974;
  uint64_t v94 = (void *)v23;
  uint64_t v24 = (void **)(v1 + *(int *)(v7 + 32));
  uint64_t v25 = v24[1];
  char v89 = *v24;
  uint64_t v90 = v25;
  v63[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE068);
  sub_23D0055C8();
  uint64_t v26 = v91;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE070);
  type metadata accessor for FBKEvaluationController(0);
  sub_23CEE8D90(&qword_268BCE078, &qword_268BCE070);
  uint64_t v68 = sub_23CF425C8((unint64_t *)&qword_268BCE080, (void (*)(uint64_t))type metadata accessor for FBKEvaluationController);
  sub_23D0052B8();
  swift_release();

  uint64_t v27 = sub_23D0054E8();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = v64;
  uint64_t v30 = v66;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v16, v12, v66);
  uint64_t v31 = (uint64_t *)&v16[*(int *)(v14 + 44)];
  *uint64_t v31 = KeyPath;
  v31[1] = v27;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v30);
  uint64_t v32 = v69;
  sub_23D004B38();
  uint64_t v33 = v73;
  uint64_t v34 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v72, v32, v74);
  sub_23CF425C8(&qword_268BCE088, MEMORY[0x263F197F0]);
  uint64_t v35 = v34;
  uint64_t v36 = sub_23D0046E8();
  uint64_t v37 = v65;
  sub_23CEE82CC((uint64_t)v16, v65, &qword_268BCE048);
  *(void *)(v37 + *(int *)(v67 + 44)) = v36;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v35);
  sub_23CEE8BB4((uint64_t)v16, &qword_268BCE048);
  uint64_t v38 = sub_23D005778();
  sub_23CF58C5C(0.0, 1, 0.0, 1, 640.0, 0, 0.0, 1, v81, 0.0, 1, 720.0, 0, v38, v39);
  sub_23CEE8BB4(v37, &qword_268BCE050);
  uint64_t v40 = v24[1];
  char v89 = *v24;
  uint64_t v90 = v40;
  sub_23D0055E8();
  uint64_t v41 = v92;
  uint64_t v42 = v93;
  id v43 = v94;
  uint64_t v44 = (uint64_t)v79;
  sub_23CF42140(v80, (uint64_t)v79, (uint64_t (*)(void))v85);
  uint64_t v45 = swift_allocObject();
  sub_23CF41910(v44, v45 + v84);
  uint64_t v46 = (uint64_t)v70;
  uint64_t v47 = &v70[*(int *)(v71 + 44)];
  uint64_t v48 = (uint64_t *)&v47[*(int *)(type metadata accessor for FBKEvaluationViewModifier() + 20)];
  uint64_t *v48 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE98);
  swift_storeEnumTagMultiPayload();
  uint64_t v92 = v41;
  uint64_t v93 = v42;
  uint64_t v94 = v43;
  swift_retain();
  swift_retain();
  id v49 = v43;
  swift_retain();
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
  MEMORY[0x23ECF50E0](&v89, v50);
  uint64_t v51 = v89;
  swift_getKeyPath();
  uint64_t v86 = v51;
  uint64_t v87 = sub_23CF41A54;
  uint64_t v88 = v45;
  uint64_t v92 = (uint64_t)v51;
  swift_retain();
  sub_23D003DC8();

  swift_release_n();
  swift_release();
  *(void *)uint64_t v47 = v41;
  *((void *)v47 + 1) = v42;
  *((void *)v47 + 2) = v49;
  uint64_t v52 = v81;
  sub_23CEE82CC(v81, v46, &qword_268BCE058);

  swift_release();
  swift_release();
  swift_release();
  sub_23CEE8BB4(v52, &qword_268BCE058);
  uint64_t v53 = v75;
  sub_23D005B98();
  uint64_t v54 = (uint64_t)v79;
  sub_23CF42140(v80, (uint64_t)v79, (uint64_t (*)(void))v85);
  uint64_t v55 = swift_allocObject();
  sub_23CF41910(v54, v55 + v84);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE0A8);
  uint64_t v57 = v77;
  uint64_t v58 = (char *)(v77 + *(int *)(v56 + 36));
  uint64_t v59 = sub_23D004778();
  uint64_t v60 = v76;
  uint64_t v61 = v78;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(&v58[*(int *)(v59 + 20)], v53, v78);
  *(void *)uint64_t v58 = &unk_268BCE0A0;
  *((void *)v58 + 1) = v55;
  sub_23CEE82CC(v46, v57, &qword_268BCE060);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v53, v61);
  return sub_23CEE8BB4(v46, &qword_268BCE060);
}

uint64_t sub_23CF3F7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_23D004C58();
  *(void *)(a2 + 8) = 0x4030000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE0B0);
  return sub_23CF3F840(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_23CF3F840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v113 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE0B8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v119 = (uint64_t)v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v114 = (void *)((char *)v88 - v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE0C0);
  MEMORY[0x270FA5388](v7);
  uint64_t v96 = (uint64_t)v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_23D0056D8();
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v97);
  uint64_t v94 = (char *)v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v104 = (char *)v88 - v11;
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE0C8);
  MEMORY[0x270FA5388](v105);
  uint64_t v106 = (uint64_t)v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for Previewer();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v92 = (uint64_t)v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v93 = (uint64_t)v88 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v98 = (uint64_t)v88 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v88 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v115 = (uint64_t)v88 - v26;
  uint64_t v27 = type metadata accessor for BatchInteraction.ContentPolarity(0);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE0D0);
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  uint64_t v118 = (uint64_t)v88 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v120 = (uint64_t)v88 - v33;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE0D8);
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  uint64_t v117 = (uint64_t)v88 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)v88 - v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)v88 - v40;
  *(void *)uint64_t v39 = sub_23D004AF8();
  *((void *)v39 + 1) = 0x4020000000000000;
  v39[16] = 0;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE0E0);
  sub_23CF405D4(a1, (uint64_t)&v39[*(int *)(v42 + 44)]);
  uint64_t v116 = v41;
  sub_23CEE83D8((uint64_t)v39, (uint64_t)v41, &qword_268BCE0D8);
  uint64_t v103 = sub_23D004B08();
  sub_23CF40944((uint64_t)v121);
  uint64_t v110 = v121[0];
  uint64_t v109 = v121[1];
  int v107 = v122;
  uint64_t v112 = v123;
  uint64_t v111 = v124;
  uint64_t v102 = v125;
  int v101 = v126;
  uint64_t v108 = v127;
  uint64_t v43 = v128;
  uint64_t v100 = v129;
  int v99 = v130;
  uint64_t v44 = type metadata accessor for BatchInteraction(0);
  uint64_t v45 = a1;
  sub_23CF42140(a1 + *(int *)(v44 + 28), (uint64_t)v29, type metadata accessor for BatchInteraction.ContentPolarity);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v46 = (uint64_t)&v29[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48)];
    uint64_t v47 = v115;
    sub_23CEE83D8((uint64_t)v29, v115, &qword_268BCD218);
    uint64_t v90 = v25;
    sub_23CEE83D8(v46, (uint64_t)v25, &qword_268BCD218);
    v88[0] = a1;
    sub_23CF42140(a1, (uint64_t)v21, type metadata accessor for BatchInteraction);
    sub_23CEE82CC(v47, (uint64_t)&v21[v13[5]], &qword_268BCD218);
    type metadata accessor for FullScreenPreviewController(0);
    sub_23CF425C8(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
    uint64_t v91 = v7;
    uint64_t v48 = sub_23D004618();
    v21[v13[6]] = 1;
    id v49 = &v21[v13[7]];
    char v89 = v21;
    *(void *)id v49 = v48;
    v49[8] = v50 & 1;
    uint64_t v51 = v104;
    sub_23D0056C8();
    uint64_t v52 = v45;
    uint64_t v53 = v98;
    sub_23CF42140(v52, v98, type metadata accessor for BatchInteraction);
    sub_23CEE82CC((uint64_t)v25, v53 + v13[5], &qword_268BCD218);
    uint64_t v54 = sub_23D004618();
    v88[1] = v13;
    *(unsigned char *)(v53 + v13[6]) = 0;
    uint64_t v55 = v53 + v13[7];
    uint64_t v56 = v53;
    *(void *)uint64_t v55 = v54;
    *(unsigned char *)(v55 + 8) = v57 & 1;
    uint64_t v58 = v93;
    sub_23CF42140((uint64_t)v21, v93, (uint64_t (*)(void))type metadata accessor for Previewer);
    uint64_t v59 = v95;
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
    uint64_t v61 = v94;
    uint64_t v62 = v97;
    v60(v94, v51, v97);
    uint64_t v63 = v56;
    uint64_t v64 = v92;
    sub_23CF42140(v63, v92, (uint64_t (*)(void))type metadata accessor for Previewer);
    uint64_t v65 = v96;
    sub_23CF42140(v58, v96, (uint64_t (*)(void))type metadata accessor for Previewer);
    uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE0E8);
    v60((char *)(v65 + *(int *)(v66 + 48)), v61, v62);
    sub_23CF42140(v64, v65 + *(int *)(v66 + 64), (uint64_t (*)(void))type metadata accessor for Previewer);
    sub_23CF421A8(v64, (uint64_t (*)(void))type metadata accessor for Previewer);
    uint64_t v67 = *(void (**)(char *, uint64_t))(v59 + 8);
    v67(v61, v62);
    sub_23CF421A8(v58, (uint64_t (*)(void))type metadata accessor for Previewer);
    sub_23CEE82CC(v65, v106, &qword_268BCE0C0);
    swift_storeEnumTagMultiPayload();
    sub_23CF425C8(&qword_268BCE0F0, (void (*)(uint64_t))type metadata accessor for Previewer);
    sub_23CEE8D90(&qword_268BCE0F8, &qword_268BCE0C0);
    uint64_t v45 = v88[0];
    sub_23D004D88();
    sub_23CEE8BB4(v65, &qword_268BCE0C0);
    sub_23CF421A8(v98, (uint64_t (*)(void))type metadata accessor for Previewer);
    v67(v104, v62);
    sub_23CF421A8((uint64_t)v89, (uint64_t (*)(void))type metadata accessor for Previewer);
    sub_23CEE8BB4((uint64_t)v90, &qword_268BCD218);
  }
  else
  {
    uint64_t v68 = v115;
    sub_23CEE83D8((uint64_t)v29, v115, &qword_268BCD218);
    sub_23CF42140(a1, (uint64_t)v21, type metadata accessor for BatchInteraction);
    sub_23CEE82CC(v68, (uint64_t)&v21[v13[5]], &qword_268BCD218);
    type metadata accessor for FullScreenPreviewController(0);
    sub_23CF425C8(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
    uint64_t v69 = sub_23D004618();
    v21[v13[6]] = 2;
    uint64_t v70 = &v21[v13[7]];
    *(void *)uint64_t v70 = v69;
    v70[8] = v71 & 1;
    sub_23CF42140((uint64_t)v21, v106, (uint64_t (*)(void))type metadata accessor for Previewer);
    swift_storeEnumTagMultiPayload();
    sub_23CF425C8(&qword_268BCE0F0, (void (*)(uint64_t))type metadata accessor for Previewer);
    sub_23CEE8D90(&qword_268BCE0F8, &qword_268BCE0C0);
    sub_23D004D88();
    sub_23CF421A8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Previewer);
  }
  sub_23CEE8BB4(v115, &qword_268BCD218);
  uint64_t v72 = sub_23D004B08();
  uint64_t v73 = (uint64_t)v114;
  *char v114 = v72;
  *(void *)(v73 + 8) = 0x4020000000000000;
  *(unsigned char *)(v73 + 16) = 0;
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE100);
  sub_23CF40AA8(v45, v73 + *(int *)(v74 + 44));
  uint64_t v75 = v117;
  sub_23CEE82CC((uint64_t)v116, v117, &qword_268BCE0D8);
  uint64_t v76 = v118;
  sub_23CEE82CC(v120, v118, &qword_268BCE0D0);
  sub_23CEE82CC(v73, v119, &qword_268BCE0B8);
  uint64_t v77 = v113;
  sub_23CEE82CC(v75, v113, &qword_268BCE0D8);
  uint64_t v78 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE108);
  uint64_t v79 = v77 + v78[12];
  *(void *)uint64_t v79 = v103;
  *(void *)(v79 + 8) = 0;
  *(unsigned char *)(v79 + 16) = 1;
  uint64_t v80 = v110;
  uint64_t v81 = v109;
  *(void *)(v79 + 24) = v110;
  *(void *)(v79 + 32) = v81;
  char v82 = v107;
  *(unsigned char *)(v79 + 40) = v107;
  uint64_t v83 = v111;
  *(void *)(v79 + 48) = v112;
  *(void *)(v79 + 56) = v83;
  *(void *)(v79 + 64) = v102;
  *(unsigned char *)(v79 + 72) = v101;
  *(void *)(v79 + 80) = v108;
  *(void *)(v79 + 88) = v43;
  *(void *)(v79 + 96) = v100;
  *(_WORD *)(v79 + 104) = v99;
  sub_23CEE82CC(v76, v77 + v78[16], &qword_268BCE0D0);
  uint64_t v84 = v77 + v78[20];
  *(void *)uint64_t v84 = 0;
  *(unsigned char *)(v84 + 8) = 1;
  uint64_t v85 = v77 + v78[24];
  uint64_t v86 = v119;
  sub_23CEE82CC(v119, v85, &qword_268BCE0B8);
  sub_23CEE8444(v80, v81, v82);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23CEE8444(v80, v81, v82);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23CEE8BB4(v73, &qword_268BCE0B8);
  sub_23CEE8BB4(v120, &qword_268BCE0D0);
  sub_23CEE7DE0(v80, v81, v82);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23CEE8BB4((uint64_t)v116, &qword_268BCE0D8);
  sub_23CEE8BB4(v86, &qword_268BCE0B8);
  sub_23CEE8BB4(v118, &qword_268BCE0D0);
  sub_23CEE7DE0(v80, v81, v82);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_23CEE8BB4(v117, &qword_268BCE0D8);
}

uint64_t sub_23CF405D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SkipButton();
  uint64_t v5 = v4 - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = type metadata accessor for AppMetaView();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE130);
  uint64_t v15 = v14 - 8;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v28 - v19;
  sub_23CF42140(a1, (uint64_t)v13, type metadata accessor for BatchInteraction);
  sub_23CF42140((uint64_t)v13, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AppMetaView);
  v18[*(int *)(v15 + 44)] = 0;
  sub_23CF421A8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AppMetaView);
  sub_23CEE83D8((uint64_t)v18, (uint64_t)v20, &qword_268BCE130);
  sub_23CF42140(a1, (uint64_t)&v10[*(int *)(v5 + 32)], type metadata accessor for BatchInteraction);
  type metadata accessor for BatchController();
  sub_23CF425C8(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  uint64_t v21 = sub_23D004618();
  LOBYTE(a1) = v22;
  type metadata accessor for FBKEvaluationController(0);
  sub_23CF425C8((unint64_t *)&qword_268BCE080, (void (*)(uint64_t))type metadata accessor for FBKEvaluationController);
  uint64_t v23 = sub_23D004618();
  *(void *)uint64_t v10 = v21;
  v10[8] = a1 & 1;
  *((void *)v10 + 2) = v23;
  v10[24] = v24 & 1;
  sub_23CEE82CC((uint64_t)v20, (uint64_t)v18, &qword_268BCE130);
  sub_23CF42140((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SkipButton);
  sub_23CEE82CC((uint64_t)v18, a2, &qword_268BCE130);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE138);
  uint64_t v26 = a2 + *(int *)(v25 + 48);
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  sub_23CF42140((uint64_t)v8, a2 + *(int *)(v25 + 64), (uint64_t (*)(void))type metadata accessor for SkipButton);
  sub_23CF421A8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SkipButton);
  sub_23CEE8BB4((uint64_t)v20, &qword_268BCE130);
  sub_23CF421A8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for SkipButton);
  return sub_23CEE8BB4((uint64_t)v18, &qword_268BCE130);
}

uint64_t sub_23CF40944@<X0>(uint64_t a1@<X8>)
{
  sub_23CF3228C();
  sub_23CEE8D00();
  uint64_t v2 = sub_23D005228();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_23D005188();
  uint64_t v7 = sub_23D0051F8();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_23CEE7DE0(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = swift_getKeyPath();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = KeyPath;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 1;
  *(void *)(a1 + 56) = v15;
  *(void *)(a1 + 64) = 0x3FE0000000000000;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 1;
  sub_23CEE8444(v7, v9, v11 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23CEE7DE0(v7, v9, v11 & 1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF40AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE110);
  MEMORY[0x270FA5388](v49);
  uint64_t v51 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE118);
  MEMORY[0x270FA5388](v50);
  uint64_t v48 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v5 = (int *)type metadata accessor for ActionButton();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v45 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v44 = (uint64_t)&v42 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v47 = (char *)&v42 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v46 = (char *)&v42 - v12;
  uint64_t v13 = *(int *)(type metadata accessor for EvaluationCard() + 20);
  uint64_t v43 = a1;
  char v14 = *(unsigned char *)(a1 + v13 + 8);
  uint64_t v15 = swift_retain();
  uint64_t v16 = sub_23CF396E8(v15, v14);
  swift_release();
  swift_getKeyPath();
  uint64_t v53 = v16;
  sub_23CF425C8(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  uint64_t v17 = *(void *)(v16 + 40);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v53 = v17;
  sub_23CF425C8(&qword_268BCDE18, (void (*)(uint64_t))type metadata accessor for StateController);
  sub_23D003DD8();
  swift_release();
  uint64_t v18 = *(void *)(v17 + 16);
  unint64_t v19 = *(void *)(v17 + 24);
  sub_23CF3C33C(v18, v19);
  swift_release();
  if (v19 == 1)
  {
    uint64_t v20 = v46;
    uint64_t v21 = v43;
    sub_23CF42140(v43, (uint64_t)&v46[v5[5]], type metadata accessor for BatchInteraction);
    type metadata accessor for BatchController();
    uint64_t v22 = sub_23D004618();
    char v24 = v23;
    type metadata accessor for FBKEvaluationController(0);
    sub_23CF425C8((unint64_t *)&qword_268BCE080, (void (*)(uint64_t))type metadata accessor for FBKEvaluationController);
    uint64_t v25 = sub_23D004618();
    *uint64_t v20 = 0;
    uint64_t v26 = &v20[v5[6]];
    *(void *)uint64_t v26 = v22;
    v26[8] = v24 & 1;
    uint64_t v27 = &v20[v5[7]];
    *(void *)uint64_t v27 = v25;
    v27[8] = v28 & 1;
    uint64_t v29 = v47;
    sub_23CF42140(v21, (uint64_t)&v47[v5[5]], type metadata accessor for BatchInteraction);
    uint64_t v30 = sub_23D004618();
    char v32 = v31;
    uint64_t v33 = sub_23D004618();
    *uint64_t v29 = 1;
    uint64_t v34 = &v29[v5[6]];
    *(void *)uint64_t v34 = v30;
    v34[8] = v32 & 1;
    uint64_t v35 = &v29[v5[7]];
    *(void *)uint64_t v35 = v33;
    v35[8] = v36 & 1;
    uint64_t v37 = v44;
    sub_23CF42140((uint64_t)v20, v44, (uint64_t (*)(void))type metadata accessor for ActionButton);
    uint64_t v38 = v45;
    sub_23CF42140((uint64_t)v29, v45, (uint64_t (*)(void))type metadata accessor for ActionButton);
    uint64_t v39 = v48;
    sub_23CF42140(v37, v48, (uint64_t (*)(void))type metadata accessor for ActionButton);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE128);
    sub_23CF42140(v38, v39 + *(int *)(v40 + 48), (uint64_t (*)(void))type metadata accessor for ActionButton);
    sub_23CF421A8(v38, (uint64_t (*)(void))type metadata accessor for ActionButton);
    sub_23CF421A8(v37, (uint64_t (*)(void))type metadata accessor for ActionButton);
    sub_23CEE82CC(v39, v51, &qword_268BCE118);
    swift_storeEnumTagMultiPayload();
    sub_23CEE8D90(&qword_268BCE120, &qword_268BCE118);
    sub_23D004D88();
    sub_23CEE8BB4(v39, &qword_268BCE118);
    sub_23CF421A8((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for ActionButton);
    return sub_23CF421A8((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ActionButton);
  }
  else
  {
    sub_23CF42034(v18, v19);
    swift_storeEnumTagMultiPayload();
    sub_23CEE8D90(&qword_268BCE120, &qword_268BCE118);
    return sub_23D004D88();
  }
}

void sub_23CF410B8(void *a1, char a2, uint64_t a3)
{
  char v4 = a2 & 1;
  char v5 = *(unsigned char *)(a3 + *(int *)(type metadata accessor for EvaluationCard() + 20) + 8);
  uint64_t v6 = swift_retain();
  sub_23CF396E8(v6, v5);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE068);
  sub_23D0055C8();
  sub_23CF13D0C(a1, v4);
  swift_release();
}

uint64_t sub_23CF41178(uint64_t a1)
{
  v1[4] = a1;
  type metadata accessor for EvaluationCard();
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  sub_23D005B88();
  v1[7] = sub_23D005B78();
  uint64_t v3 = sub_23D005B48();
  v1[8] = v3;
  v1[9] = v2;
  return MEMORY[0x270FA2498](sub_23CF4124C, v3, v2);
}

uint64_t sub_23CF4124C()
{
  uint64_t v16 = v0;
  if (qword_268BCCCB0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[6];
  uint64_t v3 = sub_23D004498();
  v0[10] = __swift_project_value_buffer(v3, (uint64_t)qword_268BDAD70);
  sub_23CF42140(v1, v2, (uint64_t (*)(void))type metadata accessor for EvaluationCard);
  char v4 = sub_23D004478();
  os_log_type_t v5 = sub_23D005C88();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[6];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v15 = v9;
    sub_23D003DB8();
    sub_23CF425C8(&qword_268BCD470, MEMORY[0x263F07508]);
    uint64_t v10 = sub_23D0061F8();
    v0[3] = sub_23CF231B0(v10, v11, &v15);
    sub_23D005E48();
    swift_bridgeObjectRelease();
    sub_23CF421A8(v7, (uint64_t (*)(void))type metadata accessor for EvaluationCard);
    _os_log_impl(&dword_23CEE3000, v4, v5, "Will mark interaction %s as presented", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v9, -1, -1);
    MEMORY[0x23ECF6610](v8, -1, -1);
  }
  else
  {
    sub_23CF421A8(v0[6], (uint64_t (*)(void))type metadata accessor for EvaluationCard);
  }

  type metadata accessor for BatchInteraction(0);
  char v14 = (uint64_t (*)(void))((int)*MEMORY[0x263F3C598] + MEMORY[0x263F3C598]);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[11] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_23CF41514;
  return v14();
}

uint64_t sub_23CF41514()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    os_log_type_t v5 = sub_23CF416C0;
  }
  else {
    os_log_type_t v5 = sub_23CF41650;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_23CF41650()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23CF416C0()
{
  uint64_t v15 = v0;
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  swift_release();
  sub_23CF42140(v2, v1, (uint64_t (*)(void))type metadata accessor for EvaluationCard);
  uint64_t v3 = sub_23D004478();
  os_log_type_t v4 = sub_23D005C98();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = *(void **)(v0 + 96);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_23D003DB8();
    sub_23CF425C8(&qword_268BCD470, MEMORY[0x263F07508]);
    uint64_t v9 = sub_23D0061F8();
    *(void *)(v0 + 16) = sub_23CF231B0(v9, v10, &v14);
    sub_23D005E48();
    swift_bridgeObjectRelease();
    sub_23CF421A8(v6, (uint64_t (*)(void))type metadata accessor for EvaluationCard);
    _os_log_impl(&dword_23CEE3000, v3, v4, "Failed to mark interaction %s as presented", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v8, -1, -1);
    MEMORY[0x23ECF6610](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 40);

    sub_23CF421A8(v11, (uint64_t (*)(void))type metadata accessor for EvaluationCard);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_23CF41910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EvaluationCard();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF41974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for EvaluationCard() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_23CF3F7F0(v4, a1);
}

uint64_t sub_23CF419E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_23D004A98();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23CF41A18()
{
  return sub_23D004AA8();
}

void sub_23CF41A54(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for EvaluationCard() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_23CF410B8(a1, v4, v6);
}

uint64_t sub_23CF41AE4()
{
  return sub_23CFC6214(v0[2], v0[3], v0[4]);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = type metadata accessor for EvaluationCard();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v14 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v3, v4);
  uint64_t v5 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v5 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  int v10 = v9(v6, 1, v8);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v12 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v6, v12);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
          break;
        default:
          break;
      }
    }
    v6 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v9(v6, 1, v8))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_7;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_11;
        case 4u:
          goto LABEL_12;
        case 5u:
          goto LABEL_13;
        default:
          break;
      }
    }
  }
  else if (!v10)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
LABEL_7:
        swift_bridgeObjectRelease();
        break;
      case 2u:
LABEL_10:

        break;
      case 3u:
LABEL_11:

        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_12:
        uint64_t v11 = sub_23D003B88();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
        break;
      case 5u:
LABEL_13:
        sub_23CEF05F8(*(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
        break;
      default:
        break;
    }
  }
  swift_release();

  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v14, v2 | 7);
}

uint64_t sub_23CF41F04()
{
  uint64_t v2 = *(void *)(type metadata accessor for EvaluationCard() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_23CF3A620;
  return sub_23CF41178(v3);
}

uint64_t sub_23CF41FD0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_23D0049A8();
  *a1 = v3;
  return result;
}

uint64_t sub_23CF41FFC()
{
  return sub_23D0049B8();
}

uint64_t sub_23CF42034(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23CF42088@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_23D004A98();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_23CF420BC()
{
  return sub_23D004AA8();
}

uint64_t sub_23CF420EC@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_23D0049A8();
  *a1 = v3;
  return result;
}

uint64_t sub_23CF42118()
{
  return sub_23D0049B8();
}

uint64_t sub_23CF42140(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23CF421A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_23CF4220C()
{
  unint64_t result = qword_268BCE140;
  if (!qword_268BCE140)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE0A8);
    sub_23CF422B8();
    sub_23CF425C8(&qword_268BCDE50, MEMORY[0x263F189F8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE140);
  }
  return result;
}

unint64_t sub_23CF422B8()
{
  unint64_t result = qword_268BCE148;
  if (!qword_268BCE148)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE060);
    sub_23CF42364();
    sub_23CF425C8(&qword_268BCE188, (void (*)(uint64_t))type metadata accessor for FBKEvaluationViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE148);
  }
  return result;
}

unint64_t sub_23CF42364()
{
  unint64_t result = qword_268BCE150;
  if (!qword_268BCE150)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE058);
    sub_23CF423E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE150);
  }
  return result;
}

unint64_t sub_23CF423E0()
{
  unint64_t result = qword_268BCE158;
  if (!qword_268BCE158)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE050);
    sub_23CF42480();
    sub_23CEE8D90(&qword_268BCE178, &qword_268BCE180);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE158);
  }
  return result;
}

unint64_t sub_23CF42480()
{
  unint64_t result = qword_268BCE160;
  if (!qword_268BCE160)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE048);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE070);
    type metadata accessor for FBKEvaluationController(255);
    sub_23CEE8D90(&qword_268BCE078, &qword_268BCE070);
    sub_23CF425C8((unint64_t *)&qword_268BCE080, (void (*)(uint64_t))type metadata accessor for FBKEvaluationController);
    swift_getOpaqueTypeConformance2();
    sub_23CEE8D90(&qword_268BCE168, &qword_268BCE170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE160);
  }
  return result;
}

uint64_t sub_23CF425C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for ImagePlaygroundDonationDecoder.Result(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ImagePlaygroundDonationDecoder.Result(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = a2 + 16;
  uint64_t v7 = *(void **)(a2 + 16);
  id v8 = v4;
  id v9 = v5;
  if (v7)
  {
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    a1[2] = v7;
    a1[3] = v10;
    a1[4] = v11;
    id v12 = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
    a1[4] = *(void *)(v6 + 16);
  }
  uint64_t v13 = *(void *)(a2 + 48);
  a1[5] = *(void *)(a2 + 40);
  a1[6] = v13;
  uint64_t v14 = *(void *)(a2 + 56);
  uint64_t v15 = *(void *)(a2 + 64);
  a1[7] = v14;
  a1[8] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImagePlaygroundDonationDecoder.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  uint64_t v10 = (_OWORD *)(a1 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  uint64_t v13 = (_OWORD *)(a2 + 16);
  id v12 = *(void **)(a2 + 16);
  if (v11)
  {
    if (v12)
    {
      *(void *)(a1 + 16) = v12;
      id v14 = v12;

      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23CF4286C(a1 + 16);
      uint64_t v16 = *(void *)(a2 + 32);
      *uint64_t v10 = *v13;
      *(void *)(a1 + 32) = v16;
    }
  }
  else if (v12)
  {
    *(void *)(a1 + 16) = v12;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    id v15 = v12;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *v13;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *uint64_t v10 = v17;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23CF4286C(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for ImagePlaygroundDonationDecoder.Result(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  id v6 = *(void **)(a1 + 16);
  uint64_t v7 = a2[2];
  if (!v6) {
    goto LABEL_5;
  }
  if (!v7)
  {
    sub_23CF4286C(a1 + 16);
LABEL_5:
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    goto LABEL_6;
  }
  *(void *)(a1 + 16) = v7;

  uint64_t v8 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[8];
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImagePlaygroundDonationDecoder.Result(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImagePlaygroundDonationDecoder.Result(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImagePlaygroundPreviewController()
{
  return &type metadata for ImagePlaygroundPreviewController;
}

uint64_t sub_23CF42A34()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_23CF42A50@<X0>(void *a1@<X8>)
{
  id v80 = *(id *)v1;
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v78 = *(void *)(v1 + 24);
  uint64_t v79 = *(void **)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v84 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v77 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v86 = v3;
  int64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v8 = &off_264E85000;
  uint64_t v82 = v5;
  uint64_t v83 = v2;
  if (v6)
  {
    id v9 = objc_msgSend(self, sel_mainBundle);
    uint64_t v10 = sub_23D003BA8();
    uint64_t v75 = v11;

    uint64_t v85 = v7;
    swift_bridgeObjectRetain();
    sub_23CFF008C(0, v6, 0);
    uint64_t v12 = v7;
    uint64_t v13 = (uint64_t *)(v3 + 40);
    do
    {
      uint64_t v14 = *(v13 - 1);
      uint64_t v15 = *v13;
      uint64_t v85 = v12;
      unint64_t v17 = *(void *)(v12 + 16);
      unint64_t v16 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      if (v17 >= v16 >> 1)
      {
        sub_23CFF008C(v16 > 1, v17 + 1, 1);
        uint64_t v12 = v85;
      }
      v13 += 2;
      *(void *)(v12 + 16) = v17 + 1;
      uint64_t v18 = v12 + 32 * v17;
      *(void *)(v18 + 32) = v14;
      *(void *)(v18 + 40) = v15;
      *(void *)(v18 + 48) = 0;
      *(unsigned char *)(v18 + 56) = 0;
      --v6;
    }
    while (v6);
    sub_23CF43340((uint64_t)&v86);
    unint64_t v19 = sub_23CF22B30(0, 1, 1, MEMORY[0x263F8EE78]);
    uint64_t v20 = v19;
    unint64_t v22 = v19[2];
    unint64_t v21 = v19[3];
    if (v22 >= v21 >> 1) {
      uint64_t v20 = sub_23CF22B30((void *)(v21 > 1), v22 + 1, 1, v19);
    }
    v20[2] = v22 + 1;
    char v23 = &v20[3 * v22];
    v23[4] = v10;
    v23[5] = v75;
    v23[6] = v12;
    uint64_t v5 = v82;
    uint64_t v2 = v83;
    uint64_t v8 = &off_264E85000;
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v20 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v85 = v4;
  int64_t v24 = *(void *)(v4 + 16);
  if (v24)
  {
    id v25 = [self (SEL)v8[325]];
    uint64_t v26 = sub_23D003BA8();
    uint64_t v76 = v27;

    swift_bridgeObjectRetain();
    sub_23CFF008C(0, v24, 0);
    uint64_t v28 = v7;
    uint64_t v29 = (uint64_t *)(v4 + 40);
    do
    {
      uint64_t v30 = *(v29 - 1);
      uint64_t v31 = *v29;
      unint64_t v33 = *(void *)(v28 + 16);
      unint64_t v32 = *(void *)(v28 + 24);
      swift_bridgeObjectRetain();
      if (v33 >= v32 >> 1) {
        sub_23CFF008C(v32 > 1, v33 + 1, 1);
      }
      v29 += 2;
      *(void *)(v28 + 16) = v33 + 1;
      uint64_t v34 = v28 + 32 * v33;
      *(void *)(v34 + 32) = v30;
      *(void *)(v34 + 40) = v31;
      *(void *)(v34 + 48) = 0;
      *(unsigned char *)(v34 + 56) = 0;
      --v24;
    }
    while (v24);
    sub_23CF43340((uint64_t)&v85);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v20 = sub_23CF22B30(0, v20[2] + 1, 1, v20);
    }
    unint64_t v36 = v20[2];
    unint64_t v35 = v20[3];
    if (v36 >= v35 >> 1) {
      uint64_t v20 = sub_23CF22B30((void *)(v35 > 1), v36 + 1, 1, v20);
    }
    v20[2] = v36 + 1;
    uint64_t v37 = &v20[3 * v36];
    v37[4] = v26;
    v37[5] = v76;
    v37[6] = v28;
    uint64_t v5 = v82;
    uint64_t v2 = v83;
    uint64_t v8 = &off_264E85000;
  }
  if (v5)
  {
    uint64_t v38 = self;
    swift_bridgeObjectRetain();
    id v39 = [v38 (SEL)v8[325]];
    uint64_t v40 = sub_23D003BA8();
    uint64_t v42 = v41;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCFDE0);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_23D008C80;
    *(void *)(v43 + 32) = v77;
    *(void *)(v43 + 40) = v5;
    *(void *)(v43 + 48) = 0;
    *(unsigned char *)(v43 + 56) = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v20 = sub_23CF22B30(0, v20[2] + 1, 1, v20);
    }
    unint64_t v45 = v20[2];
    unint64_t v44 = v20[3];
    if (v45 >= v44 >> 1) {
      uint64_t v20 = sub_23CF22B30((void *)(v44 > 1), v45 + 1, 1, v20);
    }
    v20[2] = v45 + 1;
    uint64_t v46 = &v20[3 * v45];
    v46[4] = v40;
    v46[5] = v42;
    v46[6] = v43;
  }
  if (v79)
  {
    uint64_t v47 = self;
    id v48 = v79;
    id v49 = [v47 (SEL)v8[325]];
    uint64_t v50 = sub_23D003BA8();
    uint64_t v52 = v51;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCFDE0);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_23D008C80;
    *(void *)(v53 + 40) = 0;
    *(void *)(v53 + 48) = 0;
    *(void *)(v53 + 32) = v79;
    *(unsigned char *)(v53 + 56) = 2;
    id v54 = v48;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v20 = sub_23CF22B30(0, v20[2] + 1, 1, v20);
    }
    unint64_t v56 = v20[2];
    unint64_t v55 = v20[3];
    if (v56 >= v55 >> 1) {
      uint64_t v20 = sub_23CF22B30((void *)(v55 > 1), v56 + 1, 1, v20);
    }
    v20[2] = v56 + 1;
    char v57 = &v20[3 * v56];
    v57[4] = v50;
    v57[5] = v52;
    v57[6] = v53;

    uint64_t v8 = &off_264E85000;
  }
  if (v2)
  {
    uint64_t v58 = self;
    swift_bridgeObjectRetain();
    uint64_t v59 = (const char *)v8[325];
    id v60 = v2;
    id v61 = [v58 v59];
    uint64_t v62 = sub_23D003BA8();
    uint64_t v64 = v63;

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCFDE0);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_23D008C80;
    *(void *)(v65 + 32) = v2;
    *(void *)(v65 + 40) = v78;
    *(void *)(v65 + 48) = v84;
    *(unsigned char *)(v65 + 56) = 2;
    id v66 = v60;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v20 = sub_23CF22B30(0, v20[2] + 1, 1, v20);
    }
    unint64_t v68 = v20[2];
    unint64_t v67 = v20[3];
    if (v68 >= v67 >> 1) {
      uint64_t v20 = sub_23CF22B30((void *)(v67 > 1), v68 + 1, 1, v20);
    }
    v20[2] = v68 + 1;
    uint64_t v69 = &v20[3 * v68];
    v69[4] = v62;
    v69[5] = v64;
    v69[6] = v65;
    swift_bridgeObjectRelease();
  }
  uint64_t v70 = type metadata accessor for ListPreviewer.Content(0);
  char v71 = (char *)a1 + *(int *)(v70 + 20);
  uint64_t v72 = *MEMORY[0x263F3C2C8];
  uint64_t v73 = sub_23D004028();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v73 - 8) + 104))(v71, v72, v73);
  *a1 = v80;
  *(void *)((char *)a1 + *(int *)(v70 + 24)) = v20;

  return v80;
}

uint64_t sub_23CF4324C@<X0>(void *a1@<X8>)
{
  sub_23CF42A50(a1);
  uint64_t v2 = type metadata accessor for ListPreviewer(0);
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 20);
  type metadata accessor for FullScreenPreviewController(0);
  sub_23CF433B4(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
  *(void *)uint64_t v3 = sub_23D004618();
  v3[8] = v4 & 1;
  uint64_t v5 = (char *)a1 + *(int *)(v2 + 24);
  uint64_t result = sub_23D0055B8();
  *uint64_t v5 = v7;
  *((void *)v5 + 1) = v8;
  return result;
}

uint64_t sub_23CF43340(uint64_t a1)
{
  return a1;
}

uint64_t sub_23CF4336C()
{
  return sub_23CF433B4(&qword_268BCE190, (void (*)(uint64_t))type metadata accessor for ListPreviewer);
}

uint64_t sub_23CF433B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FBKSInteraction.Content.AttachmentResult.append(error:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = (void *)v2[1];
  id v6 = a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_23CF229EC(0, v5[2] + 1, 1, v5);
  }
  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1) {
    uint64_t v5 = sub_23CF229EC((void *)(v7 > 1), v8 + 1, 1, v5);
  }
  _OWORD v5[2] = v8 + 1;
  v5[v8 + 4] = a1;
  v2[1] = v5;
  *a2 = *v2;
  a2[1] = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_23CF434C4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5)
{
  *(void *)(v6 + 256) = a5;
  *(void *)(v6 + 264) = v5;
  *(void *)(v6 + 240) = a2;
  *(void *)(v6 + 248) = a3;
  *(void *)(v6 + 232) = a1;
  uint64_t v8 = sub_23D003CE8();
  *(void *)(v6 + 272) = v8;
  *(void *)(v6 + 280) = *(void *)(v8 - 8);
  *(void *)(v6 + 288) = swift_task_alloc();
  *(void *)(v6 + 296) = swift_task_alloc();
  *(void *)(v6 + 304) = swift_task_alloc();
  uint64_t v9 = sub_23D004058();
  *(void *)(v6 + 312) = v9;
  *(void *)(v6 + 320) = *(void *)(v9 - 8);
  *(void *)(v6 + 328) = swift_task_alloc();
  *(void *)(v6 + 336) = swift_task_alloc();
  uint64_t v10 = sub_23D0041B8();
  *(void *)(v6 + 344) = v10;
  *(void *)(v6 + 352) = *(void *)(v10 - 8);
  *(void *)(v6 + 360) = swift_task_alloc();
  *(void *)(v6 + 368) = swift_task_alloc();
  *(void *)(v6 + 376) = swift_task_alloc();
  *(void *)(v6 + 384) = swift_task_alloc();
  *(void *)(v6 + 392) = swift_task_alloc();
  *(void *)(v6 + 400) = swift_task_alloc();
  *(void *)(v6 + 408) = swift_task_alloc();
  *(void *)(v6 + 416) = swift_task_alloc();
  *(void *)(v6 + 424) = swift_task_alloc();
  *(unsigned char *)(v6 + 728) = *a4;
  return MEMORY[0x270FA2498](sub_23CF436E0, 0, 0);
}

uint64_t sub_23CF436E0()
{
  uint64_t v107 = v0;
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 16) = MEMORY[0x263F8EE78];
  *(void *)(v0 + 24) = v1;
  id v2 = objc_msgSend(self, sel_defaultManager);
  sub_23D003CB8();
  uint64_t v3 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  unsigned int v4 = objc_msgSend(v2, sel_fileExistsAtPath_, v3);

  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 424);
    uint64_t v6 = *(void *)(v0 + 344);
    uint64_t v7 = *(void *)(v0 + 352);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v5, *(void *)(v0 + 264), v6);
    int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v5, v6);
    if (v8 == *MEMORY[0x263F3C590])
    {
      uint64_t v9 = v0 + 723;
      uint64_t v10 = v0 + 64;
      char v11 = *(unsigned char *)(v0 + 728);
      uint64_t v13 = *(uint64_t **)(v0 + 416);
      uint64_t v12 = *(uint64_t **)(v0 + 424);
      uint64_t v14 = *(void *)(v0 + 344);
      uint64_t v15 = *(void *)(v0 + 352);
      (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v12, v14);
      uint64_t v16 = *v12;
      *(void *)(v0 + 432) = *v12;
      unint64_t v17 = v12[1];
      *(void *)(v0 + 440) = v17;
      *(void *)(v0 + 448) = v12[2];
      *(void *)(v0 + 456) = v12[3];
      *uint64_t v13 = v16;
      v13[1] = v17;
      uint64_t v18 = *MEMORY[0x263F3C578];
      unint64_t v19 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 104);
      *(void *)(v0 + 464) = v19;
      *(void *)(v0 + 472) = (v15 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
      v19(v13, v18, v14);
      *(unsigned char *)(v0 + 723) = v11;
      sub_23CF05F28(v16, v17);
      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 480) = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_23CF44154;
LABEL_10:
      uint64_t v45 = *(void *)(v0 + 248);
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v47 = *(void *)(v0 + 240);
      uint64_t v48 = v10;
      uint64_t v49 = v9;
LABEL_25:
      return sub_23CF434C4(v48, v47, v45, v49, v46);
    }
    if (v8 == *MEMORY[0x263F3C500])
    {
      uint64_t v9 = v0 + 724;
      uint64_t v10 = v0 + 112;
      char v35 = *(unsigned char *)(v0 + 728);
      unint64_t v36 = *(uint64_t **)(v0 + 424);
      uint64_t v37 = *(uint64_t **)(v0 + 400);
      uint64_t v38 = *(void *)(v0 + 344);
      uint64_t v39 = *(void *)(v0 + 352);
      (*(void (**)(uint64_t *, uint64_t))(v39 + 96))(v36, v38);
      uint64_t v40 = *v36;
      *(void *)(v0 + 512) = *v36;
      unint64_t v41 = v36[1];
      *(void *)(v0 + 520) = v41;
      *(void *)(v0 + 528) = v36[2];
      *(void *)(v0 + 536) = v36[3];
      *uint64_t v37 = v40;
      v37[1] = v41;
      uint64_t v42 = *MEMORY[0x263F3C588];
      uint64_t v43 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v39 + 104);
      *(void *)(v0 + 544) = v43;
      *(void *)(v0 + 552) = (v39 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
      v43(v37, v42, v38);
      *(unsigned char *)(v0 + 724) = v35;
      sub_23CF05F28(v40, v41);
      unint64_t v44 = (void *)swift_task_alloc();
      *(void *)(v0 + 560) = v44;
      *unint64_t v44 = v0;
      v44[1] = sub_23CF44A28;
      goto LABEL_10;
    }
    if (v8 == *MEMORY[0x263F3C530])
    {
      uint64_t v103 = v0 + 144;
      uint64_t v105 = v0 + 726;
      char v101 = *(unsigned char *)(v0 + 728);
      uint64_t v59 = *(uint64_t **)(v0 + 424);
      id v60 = *(uint64_t **)(v0 + 384);
      uint64_t v62 = *(void *)(v0 + 344);
      uint64_t v61 = *(void *)(v0 + 352);
      uint64_t v63 = *(void *)(v0 + 336);
      uint64_t v65 = *(void *)(v0 + 312);
      uint64_t v64 = *(void *)(v0 + 320);
      (*(void (**)(uint64_t *, uint64_t))(v61 + 96))(v59, v62);
      uint64_t v66 = *v59;
      *(void *)(v0 + 592) = *v59;
      unint64_t v67 = v59[1];
      *(void *)(v0 + 600) = v67;
      uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE1A8);
      (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v63, (char *)v59 + *(int *)(v68 + 48), v65);
      *id v60 = v66;
      v60[1] = v67;
      uint64_t v69 = *MEMORY[0x263F3C578];
      uint64_t v70 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v61 + 104);
      *(void *)(v0 + 608) = v70;
      *(void *)(v0 + 616) = (v61 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
      v70(v60, v69, v62);
      *(unsigned char *)(v0 + 726) = v101;
      sub_23CF05F28(v66, v67);
      char v71 = (void *)swift_task_alloc();
      *(void *)(v0 + 624) = v71;
      *char v71 = v0;
      v71[1] = sub_23CF45310;
LABEL_24:
      uint64_t v45 = *(void *)(v0 + 248);
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v47 = *(void *)(v0 + 240);
      uint64_t v48 = v103;
      uint64_t v49 = v105;
      goto LABEL_25;
    }
    if (v8 == *MEMORY[0x263F3C538])
    {
      uint64_t v103 = v0 + 48;
      uint64_t v105 = v0 + 722;
      char v102 = *(unsigned char *)(v0 + 728);
      uint64_t v72 = *(uint64_t **)(v0 + 424);
      uint64_t v73 = *(uint64_t **)(v0 + 368);
      uint64_t v75 = *(void *)(v0 + 344);
      uint64_t v74 = *(void *)(v0 + 352);
      uint64_t v76 = *(void *)(v0 + 320);
      uint64_t v77 = *(void *)(v0 + 328);
      uint64_t v78 = *(void *)(v0 + 312);
      (*(void (**)(uint64_t *, uint64_t))(v74 + 96))(v72, v75);
      uint64_t v79 = *v72;
      *(void *)(v0 + 656) = *v72;
      unint64_t v80 = v72[1];
      *(void *)(v0 + 664) = v80;
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE1A0);
      (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v77, (char *)v72 + *(int *)(v81 + 48), v78);
      uint64_t *v73 = v79;
      v73[1] = v80;
      uint64_t v82 = *MEMORY[0x263F3C588];
      uint64_t v83 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v74 + 104);
      *(void *)(v0 + 672) = v83;
      *(void *)(v0 + 680) = (v74 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
      v83(v73, v82, v75);
      *(unsigned char *)(v0 + 722) = v102;
      sub_23CF05F28(v79, v80);
      uint64_t v84 = (void *)swift_task_alloc();
      *(void *)(v0 + 688) = v84;
      *uint64_t v84 = v0;
      v84[1] = sub_23CF45C30;
      goto LABEL_24;
    }
    uint64_t v85 = *(void *)(v0 + 304);
    uint64_t v86 = *(void *)(v0 + 256);
    uint64_t v87 = *(uint8_t **)(v0 + 240);
    uint64_t v88 = *(void *)(v0 + 248);
    LOBYTE(v106[0]) = *(unsigned char *)(v0 + 728);
    sub_23CF46AF0(v87, v88, (unsigned __int8 *)v106, v86, v85);
    sub_23CF49BA8(*(void *)(v0 + 304), *(void *)(v0 + 256));
    (*(void (**)(void, void, void))(*(void *)(v0 + 280) + 16))(*(void *)(v0 + 296), *(void *)(v0 + 304), *(void *)(v0 + 272));
    unint64_t v93 = sub_23CF22AFC(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v95 = *(void *)(v93 + 16);
    unint64_t v94 = *(void *)(v93 + 24);
    if (v95 >= v94 >> 1) {
      unint64_t v93 = sub_23CF22AFC(v94 > 1, v95 + 1, 1, v93);
    }
    uint64_t v96 = *(void *)(v0 + 296);
    uint64_t v97 = *(void *)(v0 + 304);
    uint64_t v98 = *(void *)(v0 + 272);
    uint64_t v99 = *(void *)(v0 + 280);
    *(void *)(v93 + 16) = v95 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v99 + 32))(v93+ ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80))+ *(void *)(v99 + 72) * v95, v96, v98);
    *(void *)(v0 + 16) = v93;
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v97, v98);
    unint64_t v100 = MEMORY[0x263F8EE78];
    uint64_t v89 = *(void *)(v0 + 424);
    uint64_t v90 = *(void *)(v0 + 344);
    uint64_t v91 = *(void *)(v0 + 352);
    uint64_t v92 = *(unint64_t **)(v0 + 232);
    *uint64_t v92 = v93;
    v92[1] = v100;
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v90);
  }
  else
  {
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v22 = *(void *)(v0 + 280);
    uint64_t v21 = *(void *)(v0 + 288);
    uint64_t v23 = *(void *)(v0 + 272);
    uint64_t v24 = *(void *)(v0 + 240);
    uint64_t v25 = sub_23D004498();
    __swift_project_value_buffer(v25, (uint64_t)qword_268BDAD40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v21, v24, v23);
    uint64_t v26 = sub_23D004478();
    os_log_type_t v27 = sub_23D005C98();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v30 = *(void *)(v0 + 280);
    uint64_t v29 = *(void *)(v0 + 288);
    if (v28)
    {
      uint64_t v104 = *(void *)(v0 + 272);
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      v106[0] = v32;
      *(_DWORD *)uint64_t v31 = 136380675;
      uint64_t v33 = sub_23D003CB8();
      *(void *)(v0 + 208) = sub_23CF231B0(v33, v34, v106);
      sub_23D005E48();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v104);
      _os_log_impl(&dword_23CEE3000, v26, v27, "Attachments directory does not exist: %{private}s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v32, -1, -1);
      MEMORY[0x23ECF6610](v31, -1, -1);
    }
    else
    {
      (*(void (**)(void, void))(v30 + 8))(*(void *)(v0 + 288), *(void *)(v0 + 272));
    }

    sub_23CF4B594();
    uint64_t v50 = (void *)swift_allocError();
    void *v51 = 1;
    uint64_t v52 = *(void **)(v0 + 24);
    id v53 = v50;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v52 = sub_23CF229EC(0, v52[2] + 1, 1, v52);
    }
    unint64_t v55 = v52[2];
    unint64_t v54 = v52[3];
    if (v55 >= v54 >> 1) {
      uint64_t v52 = sub_23CF229EC((void *)(v54 > 1), v55 + 1, 1, v52);
    }
    unint64_t v56 = *(void **)(v0 + 232);
    v52[2] = v55 + 1;
    v52[v55 + 4] = v50;

    *unint64_t v56 = *(void *)(v0 + 16);
    v56[1] = v52;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v57 = *(uint64_t (**)(void))(v0 + 8);
  return v57();
}

uint64_t sub_23CF44154()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_23CF44250, 0, 0);
}

uint64_t sub_23CF44250()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 72);
  *(void *)(v0 + 488) = *(void *)(v0 + 64);
  *(void *)(v0 + 496) = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v29 = (void *)(v0 + 176);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v28 = v1;
    do
    {
      unsigned int v4 = *(void **)(v1 + 8 * v3 + 32);
      id v5 = v4;
      if (qword_268BCCCA0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_23D004498();
      __swift_project_value_buffer(v6, (uint64_t)qword_268BDAD40);
      id v7 = v4;
      id v8 = v4;
      uint64_t v9 = sub_23D004478();
      os_log_type_t v10 = sub_23D005C98();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = v2;
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        uint64_t v30 = v13;
        *(_DWORD *)uint64_t v12 = 136380675;
        *uint64_t v29 = v4;
        id v14 = v4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
        uint64_t v15 = sub_23D005998();
        *(void *)(v12 + 4) = sub_23CF231B0(v15, v16, &v30);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23CEE3000, v9, v10, "Failed to write image attachment.  %{private}s", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v13, -1, -1);
        uint64_t v17 = v12;
        uint64_t v2 = v11;
        uint64_t v1 = v28;
        MEMORY[0x23ECF6610](v17, -1, -1);
      }
      else
      {
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    uint64_t v0 = v27;
  }
  uint64_t v18 = *(void (**)(void))(v0 + 464);
  uint64_t v19 = *(void *)(v0 + 456);
  char v20 = *(unsigned char *)(v0 + 728);
  uint64_t v21 = *(void **)(v0 + 408);
  *uint64_t v21 = *(void *)(v0 + 448);
  v21[1] = v19;
  v18();
  *(unsigned char *)(v0 + 725) = v20;
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 504) = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_23CF44548;
  uint64_t v23 = *(void *)(v0 + 248);
  uint64_t v24 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 240);
  return sub_23CF434C4(v0 + 32, v25, v23, v0 + 725, v24);
}

uint64_t sub_23CF44548()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_23CF44644, 0, 0);
}

uint64_t sub_23CF44644()
{
  uint64_t v36 = v0;
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v33 = (void *)(v0 + 192);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v29 = v2;
    uint64_t v4 = v1;
    do
    {
      id v5 = *(void **)(v4 + 8 * v3 + 32);
      id v6 = v5;
      if (qword_268BCCCA0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_23D004498();
      __swift_project_value_buffer(v7, (uint64_t)qword_268BDAD40);
      id v8 = v5;
      id v9 = v5;
      os_log_type_t v10 = sub_23D004478();
      os_log_type_t v11 = sub_23D005C98();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        uint64_t v35 = v13;
        *(_DWORD *)uint64_t v12 = 136380675;
        *uint64_t v33 = v5;
        id v14 = v5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
        uint64_t v15 = sub_23D005998();
        *(void *)(v12 + 4) = sub_23CF231B0(v15, v16, &v35);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23CEE3000, v10, v11, "Failed to write text attachment.  %{private}s", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v13, -1, -1);
        uint64_t v17 = v12;
        uint64_t v2 = v29;
        MEMORY[0x23ECF6610](v17, -1, -1);
      }
      else
      {
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    uint64_t v0 = v28;
  }
  uint64_t v18 = *(void *)(v0 + 432);
  uint64_t v32 = *(void *)(v0 + 416);
  unint64_t v30 = *(void *)(v0 + 440);
  uint64_t v31 = *(void *)(v0 + 408);
  uint64_t v20 = *(void *)(v0 + 344);
  uint64_t v19 = *(void *)(v0 + 352);
  unint64_t v34 = *(_OWORD **)(v0 + 232);
  uint64_t v21 = swift_bridgeObjectRetain();
  sub_23CF1CB50(v21);
  uint64_t v22 = swift_bridgeObjectRetain();
  sub_23CF1CD30(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_bridgeObjectRetain();
  sub_23CF1CB50(v23);
  uint64_t v24 = swift_bridgeObjectRetain();
  sub_23CF1CD30(v24);
  sub_23CF05F80(v18, v30);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v25(v31, v20);
  v25(v32, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *unint64_t v34 = *(_OWORD *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_23CF44A28()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_23CF44B24, 0, 0);
}

uint64_t sub_23CF44B24()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  *(void *)(v0 + 568) = *(void *)(v0 + 112);
  *(void *)(v0 + 576) = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v29 = (void *)(v0 + 216);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v28 = v1;
    do
    {
      uint64_t v4 = *(void **)(v1 + 8 * v3 + 32);
      id v5 = v4;
      if (qword_268BCCCA0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_23D004498();
      __swift_project_value_buffer(v6, (uint64_t)qword_268BDAD40);
      id v7 = v4;
      id v8 = v4;
      id v9 = sub_23D004478();
      os_log_type_t v10 = sub_23D005C98();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = v2;
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        uint64_t v30 = v13;
        *(_DWORD *)uint64_t v12 = 136380675;
        *uint64_t v29 = v4;
        id v14 = v4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
        uint64_t v15 = sub_23D005998();
        *(void *)(v12 + 4) = sub_23CF231B0(v15, v16, &v30);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23CEE3000, v9, v10, "Failed to write sketch attachment.  %{private}s", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v13, -1, -1);
        uint64_t v17 = v12;
        uint64_t v2 = v11;
        uint64_t v1 = v28;
        MEMORY[0x23ECF6610](v17, -1, -1);
      }
      else
      {
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    uint64_t v0 = v27;
  }
  uint64_t v18 = *(void (**)(void))(v0 + 544);
  uint64_t v19 = *(void *)(v0 + 536);
  char v20 = *(unsigned char *)(v0 + 728);
  uint64_t v21 = *(void **)(v0 + 392);
  *uint64_t v21 = *(void *)(v0 + 528);
  v21[1] = v19;
  v18();
  *(unsigned char *)(v0 + 720) = v20;
  uint64_t v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 584) = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_23CF44E28;
  uint64_t v23 = *(void *)(v0 + 248);
  uint64_t v24 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 240);
  return sub_23CF434C4(v0 + 96, v25, v23, v0 + 720, v24);
}

uint64_t sub_23CF44E28()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_23CF44F24, 0, 0);
}

uint64_t sub_23CF44F24()
{
  uint64_t v36 = v0;
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v33 = (void *)(v0 + 224);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v29 = v2;
    uint64_t v4 = v1;
    do
    {
      id v5 = *(void **)(v4 + 8 * v3 + 32);
      id v6 = v5;
      if (qword_268BCCCA0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_23D004498();
      __swift_project_value_buffer(v7, (uint64_t)qword_268BDAD40);
      id v8 = v5;
      id v9 = v5;
      os_log_type_t v10 = sub_23D004478();
      os_log_type_t v11 = sub_23D005C98();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        uint64_t v35 = v13;
        *(_DWORD *)uint64_t v12 = 136380675;
        *uint64_t v33 = v5;
        id v14 = v5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
        uint64_t v15 = sub_23D005998();
        *(void *)(v12 + 4) = sub_23CF231B0(v15, v16, &v35);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23CEE3000, v10, v11, "Failed to write text attachment.  %{private}s", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v13, -1, -1);
        uint64_t v17 = v12;
        uint64_t v2 = v29;
        MEMORY[0x23ECF6610](v17, -1, -1);
      }
      else
      {
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    uint64_t v0 = v28;
  }
  uint64_t v18 = *(void *)(v0 + 512);
  uint64_t v32 = *(void *)(v0 + 400);
  unint64_t v30 = *(void *)(v0 + 520);
  uint64_t v31 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 344);
  uint64_t v19 = *(void *)(v0 + 352);
  unint64_t v34 = *(_OWORD **)(v0 + 232);
  uint64_t v21 = swift_bridgeObjectRetain();
  sub_23CF1CB50(v21);
  uint64_t v22 = swift_bridgeObjectRetain();
  sub_23CF1CD30(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_bridgeObjectRetain();
  sub_23CF1CB50(v23);
  uint64_t v24 = swift_bridgeObjectRetain();
  sub_23CF1CD30(v24);
  sub_23CF05F80(v18, v30);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v25(v31, v20);
  v25(v32, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *unint64_t v34 = *(_OWORD *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_23CF45310()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_23CF4540C, 0, 0);
}

uint64_t sub_23CF4540C()
{
  uint64_t v32 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[19];
  v0[79] = v0[18];
  v0[80] = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v28 = v0;
    unint64_t v30 = v0 + 20;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v29 = v2;
    do
    {
      id v5 = *(void **)(v2 + 8 * v4 + 32);
      id v6 = v5;
      if (qword_268BCCCA0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_23D004498();
      __swift_project_value_buffer(v7, (uint64_t)qword_268BDAD40);
      id v8 = v5;
      id v9 = v5;
      os_log_type_t v10 = sub_23D004478();
      os_log_type_t v11 = sub_23D005C98();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = v3;
        uint64_t v13 = swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        uint64_t v31 = v14;
        *(_DWORD *)uint64_t v13 = 136380675;
        *unint64_t v30 = v5;
        id v15 = v5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
        uint64_t v16 = sub_23D005998();
        *(void *)(v13 + 4) = sub_23CF231B0(v16, v17, &v31);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23CEE3000, v10, v11, "Failed to write image attachment.  %{private}s", (uint8_t *)v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v14, -1, -1);
        uint64_t v18 = v13;
        uint64_t v3 = v12;
        uint64_t v2 = v29;
        MEMORY[0x23ECF6610](v18, -1, -1);
      }
      else
      {
      }
      ++v4;
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
    uint64_t v1 = v28;
  }
  uint64_t v19 = (void (*)(uint64_t, void, uint64_t))v1[76];
  char v20 = *((unsigned char *)v1 + 728);
  uint64_t v21 = v1[47];
  uint64_t v22 = v1[43];
  (*(void (**)(uint64_t, void, void))(v1[40] + 16))(v21, v1[42], v1[39]);
  v19(v21, *MEMORY[0x263F3C510], v22);
  *((unsigned char *)v1 + 727) = v20;
  uint64_t v23 = (void *)swift_task_alloc();
  v1[81] = v23;
  *uint64_t v23 = v1;
  v23[1] = sub_23CF45728;
  uint64_t v24 = v1[31];
  uint64_t v25 = v1[32];
  uint64_t v26 = v1[30];
  return sub_23CF434C4(v1 + 16, v26, v24, (char *)v1 + 727, v25);
}

uint64_t sub_23CF45728()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_23CF45824, 0, 0);
}

uint64_t sub_23CF45824()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v33 = v2;
    do
    {
      uint64_t v4 = *(void **)(v1 + 8 * v3 + 32);
      id v5 = v4;
      if (qword_268BCCCA0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_23D004498();
      __swift_project_value_buffer(v6, (uint64_t)qword_268BDAD40);
      id v7 = v4;
      id v8 = v4;
      id v9 = sub_23D004478();
      os_log_type_t v10 = sub_23D005C98();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        uint64_t v36 = v12;
        *(_DWORD *)uint64_t v11 = 136380675;
        *(void *)(v0 + 184) = v4;
        id v13 = v4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
        uint64_t v14 = sub_23D005998();
        *(void *)(v11 + 4) = sub_23CF231B0(v14, v15, &v36);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23CEE3000, v9, v10, "Failed to write structured attachment.  %{private}s", (uint8_t *)v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v12, -1, -1);
        uint64_t v16 = v11;
        uint64_t v2 = v33;
        MEMORY[0x23ECF6610](v16, -1, -1);
      }
      else
      {
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    uint64_t v0 = v29;
  }
  uint64_t v27 = *(void *)(v0 + 592);
  unint64_t v28 = *(void *)(v0 + 600);
  uint64_t v30 = *(void *)(v0 + 376);
  uint64_t v18 = *(void *)(v0 + 344);
  uint64_t v17 = *(void *)(v0 + 352);
  uint64_t v19 = *(void *)(v0 + 320);
  uint64_t v31 = *(void *)(v0 + 384);
  uint64_t v32 = *(void *)(v0 + 312);
  uint64_t v34 = *(void *)(v0 + 336);
  uint64_t v35 = *(_OWORD **)(v0 + 232);
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_23CF1CB50(v20);
  uint64_t v21 = swift_bridgeObjectRetain();
  sub_23CF1CD30(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_bridgeObjectRetain();
  sub_23CF1CB50(v22);
  uint64_t v23 = swift_bridgeObjectRetain();
  sub_23CF1CD30(v23);
  sub_23CF05F80(v27, v28);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v24(v30, v18);
  v24(v31, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v34, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v35 = *(_OWORD *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_23CF45C30()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_23CF45D2C, 0, 0);
}

uint64_t sub_23CF45D2C()
{
  uint64_t v32 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[7];
  v0[87] = v0[6];
  v0[88] = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    unint64_t v28 = v0;
    uint64_t v30 = v0 + 21;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v29 = v2;
    do
    {
      id v5 = *(void **)(v2 + 8 * v4 + 32);
      id v6 = v5;
      if (qword_268BCCCA0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_23D004498();
      __swift_project_value_buffer(v7, (uint64_t)qword_268BDAD40);
      id v8 = v5;
      id v9 = v5;
      os_log_type_t v10 = sub_23D004478();
      os_log_type_t v11 = sub_23D005C98();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = v3;
        uint64_t v13 = swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        uint64_t v31 = v14;
        *(_DWORD *)uint64_t v13 = 136380675;
        *uint64_t v30 = v5;
        id v15 = v5;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
        uint64_t v16 = sub_23D005998();
        *(void *)(v13 + 4) = sub_23CF231B0(v16, v17, &v31);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23CEE3000, v10, v11, "Failed to write sketch attachment.  %{private}s", (uint8_t *)v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v14, -1, -1);
        uint64_t v18 = v13;
        uint64_t v3 = v12;
        uint64_t v2 = v29;
        MEMORY[0x23ECF6610](v18, -1, -1);
      }
      else
      {
      }
      ++v4;
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
    uint64_t v1 = v28;
  }
  uint64_t v19 = (void (*)(uint64_t, void, uint64_t))v1[84];
  char v20 = *((unsigned char *)v1 + 728);
  uint64_t v21 = v1[45];
  uint64_t v22 = v1[43];
  (*(void (**)(uint64_t, void, void))(v1[40] + 16))(v21, v1[41], v1[39]);
  v19(v21, *MEMORY[0x263F3C510], v22);
  *((unsigned char *)v1 + 721) = v20;
  uint64_t v23 = (void *)swift_task_alloc();
  v1[89] = v23;
  *uint64_t v23 = v1;
  v23[1] = sub_23CF4604C;
  uint64_t v24 = v1[31];
  uint64_t v25 = v1[32];
  uint64_t v26 = v1[30];
  return sub_23CF434C4(v1 + 10, v26, v24, (char *)v1 + 721, v25);
}

uint64_t sub_23CF4604C()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_23CF46148, 0, 0);
}

uint64_t sub_23CF46148()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v33 = v2;
    do
    {
      uint64_t v4 = *(void **)(v1 + 8 * v3 + 32);
      id v5 = v4;
      if (qword_268BCCCA0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_23D004498();
      __swift_project_value_buffer(v6, (uint64_t)qword_268BDAD40);
      id v7 = v4;
      id v8 = v4;
      id v9 = sub_23D004478();
      os_log_type_t v10 = sub_23D005C98();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        uint64_t v36 = v12;
        *(_DWORD *)uint64_t v11 = 136380675;
        *(void *)(v0 + 200) = v4;
        id v13 = v4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
        uint64_t v14 = sub_23D005998();
        *(void *)(v11 + 4) = sub_23CF231B0(v14, v15, &v36);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23CEE3000, v9, v10, "Failed to write structured attachment.  %{private}s", (uint8_t *)v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v12, -1, -1);
        uint64_t v16 = v11;
        uint64_t v2 = v33;
        MEMORY[0x23ECF6610](v16, -1, -1);
      }
      else
      {
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    uint64_t v0 = v29;
  }
  uint64_t v27 = *(void *)(v0 + 656);
  unint64_t v28 = *(void *)(v0 + 664);
  uint64_t v17 = *(void *)(v0 + 352);
  uint64_t v30 = *(void *)(v0 + 360);
  uint64_t v18 = *(void *)(v0 + 344);
  uint64_t v19 = *(void *)(v0 + 320);
  uint64_t v31 = *(void *)(v0 + 368);
  uint64_t v32 = *(void *)(v0 + 312);
  uint64_t v34 = *(void *)(v0 + 328);
  uint64_t v35 = *(_OWORD **)(v0 + 232);
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_23CF1CB50(v20);
  uint64_t v21 = swift_bridgeObjectRetain();
  sub_23CF1CD30(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_bridgeObjectRetain();
  sub_23CF1CB50(v22);
  uint64_t v23 = swift_bridgeObjectRetain();
  sub_23CF1CD30(v23);
  sub_23CF05F80(v27, v28);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v24(v30, v18);
  v24(v31, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v34, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v35 = *(_OWORD *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

Swift::Bool __swiftcall FBKSInteraction.Content.AttachmentResult.failed()()
{
  return *(void *)(*(void *)(v0 + 8) + 16) != 0;
}

uint64_t FBKSInteraction.Content.Kind.description.getter()
{
  uint64_t v1 = 0x65746172656E6547;
  if (*v0 != 1) {
    uint64_t v1 = 0x6172747845;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C616E696769724FLL;
  }
}

BOOL static FBKSInteraction.Content.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FBKSInteraction.Content.Kind.hash(into:)()
{
  return sub_23D0062D8();
}

void *static FBKSInteraction.Content.Kind.allCases.getter()
{
  return &unk_26F0CA9B0;
}

uint64_t FBKSInteraction.Content.Kind.hashValue.getter()
{
  return sub_23D0062F8();
}

void sub_23CF46658(void *a1@<X8>)
{
  *a1 = &unk_26F0CA9D8;
}

uint64_t sub_23CF46668()
{
  uint64_t v1 = 0x65746172656E6547;
  if (*v0 != 1) {
    uint64_t v1 = 0x6172747845;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C616E696769724FLL;
  }
}

uint64_t FBKSInteraction.Content.AnotherKind.description.getter()
{
  uint64_t result = 0x6C616E696769724FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65746172656E6547;
      break;
    case 2:
    case 3:
      uint64_t result = 0x6172747845;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23CF4673C()
{
  if (*v0) {
    uint64_t v1 = 0x65746172656E6547;
  }
  else {
    uint64_t v1 = 0x6C616E696769724FLL;
  }
  if (*v0 - 2 >= 2) {
    return v1;
  }
  else {
    return 0x6172747845;
  }
}

uint64_t FBKSInteraction.Content.AttachmentResult.urls.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FBKSInteraction.Content.AttachmentResult.urls.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*FBKSInteraction.Content.AttachmentResult.urls.modify())()
{
  return nullsub_1;
}

uint64_t FBKSInteraction.Content.AttachmentResult.errors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FBKSInteraction.Content.AttachmentResult.errors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FBKSInteraction.Content.AttachmentResult.errors.modify())()
{
  return nullsub_1;
}

Swift::Bool __swiftcall FBKSInteraction.Content.AttachmentResult.success()()
{
  return *(void *)(*(void *)(v0 + 8) + 16) == 0;
}

uint64_t FBKSInteraction.Content.AttachmentResult.append(url:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = sub_23D003CE8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v9 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v9 = sub_23CF22AFC(0, *(void *)(v9 + 16) + 1, 1, v9);
  }
  unint64_t v11 = *(void *)(v9 + 16);
  unint64_t v10 = *(void *)(v9 + 24);
  if (v11 >= v10 >> 1) {
    unint64_t v9 = sub_23CF22AFC(v10 > 1, v11 + 1, 1, v9);
  }
  *(void *)(v9 + 16) = v11 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v11, v8, v5);
  *uint64_t v2 = v9;
  unint64_t v12 = v2[1];
  *a2 = v9;
  a2[1] = v12;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FBKSInteraction.Content.AttachmentResult.append(contentsOf:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_23CF1CB50(v3);
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t vars8;

  uint64_t v3 = swift_bridgeObjectRetain();
  sub_23CF1CD30(v3);
  uint64_t v4 = v1[1];
  *a1 = *v1;
  a1[1] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t vars8;

  uint64_t v3 = swift_bridgeObjectRetain();
  sub_23CF1CB50(v3);
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_23CF1CD30(v4);
  uint64_t v5 = v1[1];
  *a1 = *v1;
  a1[1] = v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_23CF46AF0@<X0>(uint8_t *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v62 = a4;
  uint64_t v56 = a2;
  uint64_t v61 = a5;
  uint64_t v7 = sub_23D0041B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = &v54[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_23D003CE8();
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v64 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v54[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = &v54[-v15];
  uint64_t v17 = sub_23D003BF8();
  uint64_t v59 = *(void *)(v17 - 8);
  uint64_t v60 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v58 = &v54[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD4A8);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = &v54[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v55 = *a3;
  id v22 = objc_msgSend(self, sel_defaultManager);
  uint64_t v65 = a1;
  sub_23D003CB8();
  uint64_t v23 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  LODWORD(a3) = objc_msgSend(v22, sel_fileExistsAtPath_, v23);

  if (a3)
  {
    sub_23CF256B4(v62, (uint64_t)v21);
    uint64_t v24 = sub_23D004138();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48))(v21, 1, v24) == 1)
    {
      sub_23CF097B0((uint64_t)v21);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, v57, v7);
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v8 + 88))(v10, v7) == *MEMORY[0x263F3C540])
      {
        (*(void (**)(unsigned char *, uint64_t))(v8 + 96))(v10, v7);
        uint64_t v27 = v63;
        uint64_t v26 = v64;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v63 + 32))(v16, v10, v64);
        uint64_t v66 = sub_23D003C38();
        uint64_t v67 = v28;
        uint64_t v30 = v58;
        uint64_t v29 = v59;
        uint64_t v31 = v60;
        (*(void (**)(unsigned char *, void, uint64_t))(v59 + 104))(v58, *MEMORY[0x263F06E50], v60);
        sub_23CEE8D00();
        sub_23D003CD8();
        (*(void (**)(unsigned char *, uint64_t))(v29 + 8))(v30, v31);
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v27 + 8))(v16, v26);
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
        uint64_t result = FBKSInteraction.Content.fileExtension()()._countAndFlagsBits;
        if (!v49)
        {
          LOBYTE(v66) = v55;
          uint64_t v66 = sub_23CF47BD8(v56, (unsigned __int8 *)&v66);
          uint64_t v67 = v50;
          sub_23D0059F8();
          sub_23D0059F8();
          swift_bridgeObjectRelease();
          uint64_t v52 = v58;
          uint64_t v51 = v59;
          uint64_t v53 = v60;
          (*(void (**)(unsigned char *, void, uint64_t))(v59 + 104))(v58, *MEMORY[0x263F06E50], v60);
          sub_23CEE8D00();
          sub_23D003CD8();
          (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v52, v53);
          return swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      uint64_t v42 = sub_23D004108();
      uint64_t v44 = v43;
      (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v21, v24);
      uint64_t v66 = v42;
      uint64_t v67 = v44;
      uint64_t v46 = v58;
      uint64_t v45 = v59;
      uint64_t v47 = v60;
      (*(void (**)(unsigned char *, void, uint64_t))(v59 + 104))(v58, *MEMORY[0x263F06E50], v60);
      sub_23CEE8D00();
      sub_23D003CD8();
      (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v46, v47);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_23D004498();
    __swift_project_value_buffer(v33, (uint64_t)qword_268BDAD40);
    uint64_t v34 = v63;
    uint64_t v35 = v64;
    (*(void (**)(unsigned char *, uint8_t *, uint64_t))(v63 + 16))(v14, v65, v64);
    uint64_t v36 = sub_23D004478();
    os_log_type_t v37 = sub_23D005C98();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136380675;
      uint64_t v65 = v38 + 4;
      uint64_t v66 = v39;
      uint64_t v40 = sub_23D003CB8();
      uint64_t v68 = sub_23CF231B0(v40, v41, &v66);
      sub_23D005E48();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v14, v35);
      _os_log_impl(&dword_23CEE3000, v36, v37, "Attachments directory does not exist: %{private}s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v39, -1, -1);
      MEMORY[0x23ECF6610](v38, -1, -1);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v14, v35);
    }

    sub_23CF4B594();
    swift_allocError();
    void *v48 = 1;
    return swift_willThrow();
  }
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FBKSInteraction.Content.fileExtension()()
{
  uint64_t v1 = sub_23D003CE8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_23D0041B8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v8, v5);
  if (v9 == *MEMORY[0x263F3C540])
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 96))(v8, v5);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v8, v1);
    uint64_t v10 = sub_23D003C08();
    uint64_t v8 = v11;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    goto LABEL_14;
  }
  if (v9 == *MEMORY[0x263F3C560])
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 96))(v8, v5);
    uint64_t v12 = *(void *)(v8 + 16);
    unint64_t v13 = *(void *)(v8 + 24);
    swift_bridgeObjectRelease();
    sub_23CF05F80(v12, v13);
    uint64_t v8 = sub_23D004148();
    sub_23CF4AFE4();
    swift_allocError();
    uint64_t v15 = v14;
    v34[0] = 0;
    v34[1] = 0xE000000000000000;
    uint64_t v10 = (uint64_t)v34;
    sub_23D005FC8();
    swift_bridgeObjectRelease();
    *uint64_t v15 = 0xD000000000000036;
    v15[1] = 0x800000023D0115C0;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v8 - 8) + 104))(v15, *MEMORY[0x263F3C4F0], v8);
LABEL_5:
    swift_willThrow();
    goto LABEL_14;
  }
  if (v9 == *MEMORY[0x263F3C558])
  {
LABEL_7:
    uint64_t v10 = 7633012;
    (*(void (**)(uint64_t, uint64_t))(v6 + 96))(v8, v5);
    swift_bridgeObjectRelease();
    uint64_t v8 = 0xE300000000000000;
    goto LABEL_14;
  }
  if (v9 == *MEMORY[0x263F3C578])
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 96))(v8, v5);
    sub_23CF05F80(*(void *)v8, *(void *)(v8 + 8));
    uint64_t v8 = 0xE300000000000000;
    uint64_t v10 = 6778480;
    goto LABEL_14;
  }
  if (v9 == *MEMORY[0x263F3C568] || v9 == *MEMORY[0x263F3C518] || v9 == *MEMORY[0x263F3C588])
  {
LABEL_13:
    uint64_t v10 = 1635017060;
    (*(void (**)(uint64_t, uint64_t))(v6 + 96))(v8, v5);
    sub_23CF05F80(*(void *)v8, *(void *)(v8 + 8));
    uint64_t v8 = 0xE400000000000000;
    goto LABEL_14;
  }
  if (v9 == *MEMORY[0x263F3C590] || v9 == *MEMORY[0x263F3C500])
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 96))(v8, v5);
    sub_23CF05F80(*(void *)v8, *(void *)(v8 + 8));
    swift_bridgeObjectRelease();
LABEL_18:
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_23D004498();
    __swift_project_value_buffer(v18, (uint64_t)qword_268BDAD40);
    uint64_t v19 = sub_23D004478();
    os_log_type_t v20 = sub_23D005C98();
    uint64_t v8 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v34[0] = v22;
      *(_DWORD *)uint64_t v21 = 136446210;
      uint64_t v35 = sub_23CF231B0(0x65747845656C6966, 0xEF29286E6F69736ELL, v34);
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v19, (os_log_type_t)v8, "%{public}s cannot be used with complex types", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v22, -1, -1);
      MEMORY[0x23ECF6610](v21, -1, -1);
    }

    uint64_t v10 = sub_23D004148();
    sub_23CF4AFE4();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v23, *MEMORY[0x263F3C4E8], v10);
    goto LABEL_5;
  }
  if (v9 == *MEMORY[0x263F3C580]) {
    goto LABEL_13;
  }
  if (v9 == *MEMORY[0x263F3C508]) {
    goto LABEL_7;
  }
  if (v9 == *MEMORY[0x263F3C510])
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v8 = 0xE400000000000000;
    uint64_t v10 = 1852797802;
    goto LABEL_14;
  }
  if (v9 == *MEMORY[0x263F3C530])
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 96))(v8, v5);
    sub_23CF05F80(*(void *)v8, *(void *)(v8 + 8));
    uint64_t v24 = (uint64_t *)&unk_268BCE1A8;
LABEL_31:
    uint64_t v25 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v24) + 48);
    uint64_t v26 = sub_23D004058();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
    goto LABEL_18;
  }
  if (v9 == *MEMORY[0x263F3C538])
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 96))(v8, v5);
    sub_23CF05F80(*(void *)v8, *(void *)(v8 + 8));
    uint64_t v24 = (uint64_t *)&unk_268BCE1A0;
    goto LABEL_31;
  }
  if (v9 == *MEMORY[0x263F3C528] || v9 == *MEMORY[0x263F3C520]) {
    goto LABEL_7;
  }
  if (v9 == *MEMORY[0x263F3C570]) {
    goto LABEL_13;
  }
  if (v9 == *MEMORY[0x263F3C548])
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 96))(v8, v5);
    swift_bridgeObjectRelease();
    uint64_t v8 = 0xE400000000000000;
    uint64_t v10 = 1819112552;
  }
  else
  {
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_23D004498();
    __swift_project_value_buffer(v27, (uint64_t)qword_268BDAD40);
    uint64_t v28 = sub_23D004478();
    os_log_type_t v29 = sub_23D005C98();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      v34[0] = v31;
      *(_DWORD *)uint64_t v30 = 136446210;
      uint64_t v35 = sub_23CF231B0(0x65747845656C6966, 0xEF29286E6F69736ELL, v34);
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v28, v29, "%{public}s unknown Content type", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v31, -1, -1);
      MEMORY[0x23ECF6610](v30, -1, -1);
    }

    uint64_t v10 = sub_23D004148();
    sub_23CF4AFE4();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v32, *MEMORY[0x263F3C4E8], v10);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
LABEL_14:
  uint64_t v16 = v10;
  uint64_t v17 = (void *)v8;
  result._object = v17;
  result._countAndFlagsBits = v16;
  return result;
}

uint64_t sub_23CF47BD8(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v48 = a1;
  uint64_t v3 = v2;
  uint64_t v5 = sub_23D004028();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_23D0041B8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v45 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v39 - v13;
  unsigned int v15 = *a2;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v46 = v3;
  uint64_t v43 = v16;
  uint64_t v44 = v10 + 16;
  v16((char *)&v39 - v13, v3, v9);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t))(v10 + 88);
  if (v17(v14, v9) == *MEMORY[0x263F3C540])
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v14, v9);
    uint64_t v18 = sub_23D003CE8();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v14, v18);
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_23D004498();
    __swift_project_value_buffer(v19, (uint64_t)qword_268BDAD40);
    os_log_type_t v20 = sub_23D004478();
    os_log_type_t v21 = sub_23D005C98();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v49 = v23;
      *(_DWORD *)uint64_t v22 = 136446210;
      uint64_t v51 = sub_23CF231B0(0xD00000000000001DLL, 0x800000023D011890, &v49);
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v20, v21, "%{public}s cannot be used with file(url:) type", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v23, -1, -1);
      MEMORY[0x23ECF6610](v22, -1, -1);
    }

    uint64_t v24 = (uint64_t *)sub_23D004148();
    sub_23CF4AFE4();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t *))(*(v24 - 1) + 104))(v25, *MEMORY[0x263F3C4E8], v24);
    goto LABEL_7;
  }
  unsigned int v42 = v15;
  uint64_t v40 = v10;
  uint64_t v41 = v9;
  uint64_t v24 = *(uint64_t **)(v10 + 8);
  ((void (*)(char *, uint64_t))v24)(v14, v9);
  uint64_t v26 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v48, v5);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v27 == *MEMORY[0x263F3C330])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v27 == *MEMORY[0x263F3C2C8])
  {
    if (v42 <= 1) {
      goto LABEL_18;
    }
LABEL_60:
    uint64_t v36 = sub_23D004148();
    sub_23CF4AFE4();
    swift_allocError();
    uint64_t v38 = v37;
    uint64_t v49 = 0;
    unint64_t v50 = 0xE000000000000000;
    uint64_t v24 = &v49;
    sub_23D005FC8();
    swift_bridgeObjectRelease();
    *uint64_t v38 = 0xD000000000000039;
    v38[1] = 0x800000023D011660;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v38, *MEMORY[0x263F3C4F0], v36);
LABEL_7:
    swift_willThrow();
    return (uint64_t)v24;
  }
  if (v27 == *MEMORY[0x263F3C2B8])
  {
    if (v42 > 1) {
      goto LABEL_60;
    }
    goto LABEL_18;
  }
  if (v27 != *MEMORY[0x263F3C270])
  {
    if (v27 == *MEMORY[0x263F3C2D8] || v27 == *MEMORY[0x263F3C280])
    {
      if (v42 <= 1) {
        goto LABEL_18;
      }
      goto LABEL_60;
    }
    if (v27 == *MEMORY[0x263F3C298])
    {
      if (v42 <= 1) {
        goto LABEL_18;
      }
      goto LABEL_60;
    }
    if (v27 == *MEMORY[0x263F3C288])
    {
      if (v42 <= 1) {
        goto LABEL_18;
      }
      goto LABEL_60;
    }
    if (v27 == *MEMORY[0x263F3C2C0])
    {
      if (v42 <= 1) {
        goto LABEL_18;
      }
      goto LABEL_60;
    }
    if (v27 == *MEMORY[0x263F3C2E0] || v27 == *MEMORY[0x263F3C2B0])
    {
      if (v42 <= 1) {
        goto LABEL_18;
      }
      goto LABEL_60;
    }
    if (v27 == *MEMORY[0x263F3C300])
    {
      if (v42 <= 1) {
        goto LABEL_18;
      }
      goto LABEL_60;
    }
    if (v27 == *MEMORY[0x263F3C318] || v27 == *MEMORY[0x263F3C308] || v27 == *MEMORY[0x263F3C310])
    {
      if (v42 <= 1) {
        goto LABEL_18;
      }
      goto LABEL_60;
    }
    if (v27 == *MEMORY[0x263F3C268])
    {
      if (v42 <= 1) {
        goto LABEL_18;
      }
      goto LABEL_60;
    }
    if (v27 != *MEMORY[0x263F3C278])
    {
      if (v27 != *MEMORY[0x263F3C2A8])
      {
        if (v27 != *MEMORY[0x263F3C2E8])
        {
          if (v27 != *MEMORY[0x263F3C2D0]
            && v27 != *MEMORY[0x263F3C2F8]
            && v27 != *MEMORY[0x263F3C328]
            && v27 != *MEMORY[0x263F3C2F0]
            && v27 != *MEMORY[0x263F3C320])
          {
            (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          }
          goto LABEL_10;
        }
        if (v42 <= 1) {
          goto LABEL_18;
        }
        goto LABEL_60;
      }
      uint64_t v33 = v24;
      uint64_t v34 = v45;
      uint64_t v35 = v41;
      v43(v45, v46, v41);
      if (v17(v34, v35) == *MEMORY[0x263F3C558])
      {
        (*(void (**)(char *, uint64_t))(v40 + 96))(v45, v41);
        swift_bridgeObjectRelease();
        id v30 = objc_msgSend(self, sel_mainBundle);
        goto LABEL_19;
      }
      ((void (*)(char *, uint64_t))v33)(v45, v41);
      if (v42 >= 2) {
        goto LABEL_60;
      }
LABEL_18:
      id v30 = objc_msgSend(self, sel_mainBundle);
LABEL_19:
      uint64_t v24 = (uint64_t *)sub_23D003BA8();

      return (uint64_t)v24;
    }
  }
LABEL_10:
  uint64_t v28 = v47;
  sub_23CF48E9C(v46, v26);
  if (!v28)
  {
    uint64_t v49 = sub_23CF48CC4(v42);
    unint64_t v50 = v31;
    swift_bridgeObjectRetain();
    sub_23D0059F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v49;
  }
  return (uint64_t)v24;
}

uint64_t sub_23CF48CC4(char a1)
{
  if (!a1) {
    return 0x2D7475706E69;
  }
  if (a1 == 1) {
    return 0x65746172656E6567;
  }
  if (qword_268BCCCA0 != -1) {
    swift_once();
  }
  uint64_t v1 = 0x2D6172747865;
  uint64_t v2 = sub_23D004498();
  __swift_project_value_buffer(v2, (uint64_t)qword_268BDAD40);
  uint64_t v3 = sub_23D004478();
  os_log_type_t v4 = sub_23D005C98();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v8 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_23CF231B0(0x786966657270, 0xE600000000000000, &v8);
    sub_23D005E48();
    _os_log_impl(&dword_23CEE3000, v3, v4, "Extra kind not supported in %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v6, -1, -1);
    MEMORY[0x23ECF6610](v5, -1, -1);
  }
  else
  {
  }
  return v1;
}

uint64_t sub_23CF48E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D004028();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_23D0041B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x263F3C540])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_23D004498();
    __swift_project_value_buffer(v13, (uint64_t)qword_268BDAD40);
    uint64_t v14 = sub_23D004478();
    os_log_type_t v15 = sub_23D005C98();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v42[0] = v17;
      *(_DWORD *)uint64_t v16 = 136446210;
      uint64_t v43 = sub_23CF231B0(0x4E636972656E6567, 0xEB00000000656D61, v42);
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v14, v15, "%{public}s cannot be used with file(ur:) type", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v17, -1, -1);
      MEMORY[0x23ECF6610](v16, -1, -1);
    }

    uint64_t v18 = sub_23D004148();
    sub_23CF4AFE4();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, *MEMORY[0x263F3C4E8], v18);
    swift_willThrow();
    uint64_t v20 = sub_23D003CE8();
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v20 - 8) + 8))(v11, v20);
    return v18;
  }
  if (v12 == *MEMORY[0x263F3C560])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    uint64_t v21 = v11[2];
    unint64_t v22 = v11[3];
    swift_bridgeObjectRelease();
    sub_23CF05F80(v21, v22);
    uint64_t v23 = sub_23D004148();
    sub_23CF4AFE4();
    swift_allocError();
    uint64_t v25 = v24;
    v42[0] = 0;
    v42[1] = 0xE000000000000000;
    uint64_t v18 = (uint64_t)v42;
    sub_23D005FC8();
    swift_bridgeObjectRelease();
    *uint64_t v25 = 0xD000000000000031;
    v25[1] = 0x800000023D0118B0;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x263F3C4F0], v23);
LABEL_9:
    swift_willThrow();
    return v18;
  }
  if (v12 == *MEMORY[0x263F3C558])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    swift_bridgeObjectRelease();
    return 1954047348;
  }
  if (v12 == *MEMORY[0x263F3C578])
  {
    uint64_t v18 = 0x6567616D69;
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    sub_23CF05F80(*v11, v11[1]);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) != *MEMORY[0x263F3C2C8]) {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    return v18;
  }
  if (v12 == *MEMORY[0x263F3C568])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    sub_23CF05F80(*v11, v11[1]);
    return 0x6F69647561;
  }
  if (v12 == *MEMORY[0x263F3C518])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    sub_23CF05F80(*v11, v11[1]);
    return 0x74697277646E6168;
  }
  if (v12 == *MEMORY[0x263F3C588])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    sub_23CF05F80(*v11, v11[1]);
    return 0x686374656B73;
  }
  if (v12 == *MEMORY[0x263F3C590] || v12 == *MEMORY[0x263F3C500])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    sub_23CF05F80(*v11, v11[1]);
    swift_bridgeObjectRelease();
LABEL_26:
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_23D004498();
    uint64_t v18 = __swift_project_value_buffer(v27, (uint64_t)qword_268BDAD40);
    uint64_t v28 = sub_23D004478();
    os_log_type_t v29 = sub_23D005C98();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v42[0] = v30;
      *(_DWORD *)uint64_t v18 = 136446210;
      uint64_t v43 = sub_23CF231B0(0x4E636972656E6567, 0xEB00000000656D61, v42);
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v28, v29, "%{public}s cannot be used with complex types", (uint8_t *)v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v30, -1, -1);
      MEMORY[0x23ECF6610](v18, -1, -1);
    }

    uint64_t v31 = sub_23D004148();
    sub_23CF4AFE4();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104))(v32, *MEMORY[0x263F3C4E8], v31);
    goto LABEL_9;
  }
  if (v12 == *MEMORY[0x263F3C580])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    sub_23CF05F80(*v11, v11[1]);
    return 0x6F65646976;
  }
  if (v12 == *MEMORY[0x263F3C508])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    swift_bridgeObjectRelease();
    return 0x6F43656372756F73;
  }
  if (v12 == *MEMORY[0x263F3C510])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
    return 0x7275746375727473;
  }
  if (v12 == *MEMORY[0x263F3C530])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    sub_23CF05F80(*v11, v11[1]);
    uint64_t v33 = (uint64_t *)&unk_268BCE1A8;
LABEL_41:
    uint64_t v34 = (char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v33) + 48);
    uint64_t v35 = sub_23D004058();
    (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
    goto LABEL_26;
  }
  if (v12 == *MEMORY[0x263F3C538])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    sub_23CF05F80(*v11, v11[1]);
    uint64_t v33 = (uint64_t *)&unk_268BCE1A0;
    goto LABEL_41;
  }
  if (v12 == *MEMORY[0x263F3C528])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    swift_bridgeObjectRelease();
    return 0x6163696669746F6ELL;
  }
  else if (v12 == *MEMORY[0x263F3C520])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    swift_bridgeObjectRelease();
    return 0x7373654D6C69616DLL;
  }
  else if (v12 == *MEMORY[0x263F3C570])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    sub_23CF05F80(*v11, v11[1]);
    return 0x696A6F6D65;
  }
  else if (v12 == *MEMORY[0x263F3C548])
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    swift_bridgeObjectRelease();
    return 0x746E65746E6F63;
  }
  else
  {
    if (qword_268BCCCA0 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_23D004498();
    __swift_project_value_buffer(v36, (uint64_t)qword_268BDAD40);
    os_log_type_t v37 = sub_23D004478();
    os_log_type_t v38 = sub_23D005C98();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      v42[0] = v40;
      *(_DWORD *)uint64_t v39 = 136446210;
      uint64_t v43 = sub_23CF231B0(0x4E636972656E6567, 0xEB00000000656D61, v42);
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v37, v38, "%{public}s unknown Content type", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v40, -1, -1);
      MEMORY[0x23ECF6610](v39, -1, -1);
    }

    uint64_t v18 = sub_23D004148();
    sub_23CF4AFE4();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v41, *MEMORY[0x263F3C4E8], v18);
    swift_willThrow();
    (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v18;
}

uint64_t sub_23CF49BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v142 = a2;
  uint64_t v161 = *MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD4A8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v140 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v141 = (uint64_t)&v127 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v130 = (uint64_t)&v127 - v8;
  uint64_t v144 = sub_23D004138();
  uint64_t v9 = *(void *)(v144 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v144);
  uint64_t v135 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v136 = (char *)&v127 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v129 = (char *)&v127 - v14;
  uint64_t v15 = sub_23D004058();
  uint64_t v134 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_23D005988();
  uint64_t v138 = *(void *)(v139 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v139);
  uint64_t v131 = (char *)&v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v137 = (char *)&v127 - v20;
  uint64_t v152 = sub_23D0041B8();
  uint64_t v150 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  unint64_t v22 = (char *)&v127 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_23D003CE8();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v148 = (char *)&v127 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v145 = (char *)&v127 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v127 - v29;
  if (qword_268BCCCA0 != -1) {
    swift_once();
  }
  uint64_t v151 = (uint64_t *)v22;
  uint64_t v31 = sub_23D004498();
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_268BDAD40);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v156 = a1;
  uint64_t v146 = v33;
  uint64_t v147 = v24 + 16;
  v33(v30, a1, v23);
  uint64_t v153 = v32;
  uint64_t v34 = sub_23D004478();
  os_log_type_t v35 = sub_23D005C88();
  BOOL v36 = os_log_type_enabled(v34, v35);
  uint64_t v143 = v9;
  uint64_t v133 = v15;
  uint64_t v132 = v17;
  uint64_t v155 = v24;
  if (v36)
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v128 = (void *)swift_slowAlloc();
    id v159 = v128;
    *(_DWORD *)uint64_t v37 = 136315394;
    uint64_t v158 = sub_23CF231B0(0xD000000000000016, 0x800000023D011600, (uint64_t *)&v159);
    sub_23D005E48();
    *(_WORD *)(v37 + 12) = 2080;
    uint64_t v38 = sub_23D003CB8();
    uint64_t v158 = sub_23CF231B0(v38, v39, (uint64_t *)&v159);
    sub_23D005E48();
    swift_bridgeObjectRelease();
    uint64_t v154 = *(void (**)(char *, uint64_t))(v24 + 8);
    v154(v30, v23);
    _os_log_impl(&dword_23CEE3000, v34, v35, "%s %s", (uint8_t *)v37, 0x16u);
    uint64_t v40 = v128;
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v40, -1, -1);
    MEMORY[0x23ECF6610](v37, -1, -1);
  }
  else
  {
    uint64_t v154 = *(void (**)(char *, uint64_t))(v24 + 8);
    v154(v30, v23);
  }

  uint64_t v41 = v23;
  unsigned int v42 = self;
  id v43 = objc_msgSend(v42, sel_defaultManager);
  uint64_t v44 = v156;
  sub_23D003CB8();
  uint64_t v45 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  unsigned __int8 v46 = objc_msgSend(v43, sel_fileExistsAtPath_, v45);

  if (v46)
  {
    uint64_t v47 = v148;
    v146(v148, v44, v23);
    uint64_t v48 = sub_23D004478();
    os_log_type_t v49 = sub_23D005C98();
    if (os_log_type_enabled(v48, v49))
    {
      unint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = v41;
      uint64_t v52 = (void *)swift_slowAlloc();
      id v159 = v52;
      *(_DWORD *)unint64_t v50 = 136380675;
      uint64_t v53 = sub_23D003CB8();
      uint64_t v158 = sub_23CF231B0(v53, v54, (uint64_t *)&v159);
      sub_23D005E48();
      swift_bridgeObjectRelease();
      v154(v47, v51);
      _os_log_impl(&dword_23CEE3000, v48, v49, "Attachment URL already exists: %{private}s", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v52, -1, -1);
      MEMORY[0x23ECF6610](v50, -1, -1);
    }
    else
    {
      v154(v47, v23);
    }

LABEL_15:
    sub_23CF4B594();
    uint64_t v71 = swift_allocError();
    *uint64_t v72 = 5;
    uint64_t v157 = v71;
    return swift_willThrow();
  }
  uint64_t v55 = v150;
  uint64_t v56 = v151;
  uint64_t v57 = v152;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v150 + 16))(v151, v149, v152);
  int v58 = (*(uint64_t (**)(uint64_t *, uint64_t))(v55 + 88))(v56, v57);
  if (v58 != *MEMORY[0x263F3C540])
  {
    if (v58 == *MEMORY[0x263F3C560])
    {
      (*(void (**)(uint64_t *, uint64_t))(v55 + 96))(v56, v57);
      uint64_t v73 = v56[2];
      unint64_t v74 = v56[3];
      swift_bridgeObjectRelease();
      sub_23CF05F80(v73, v74);
      uint64_t v75 = sub_23D004148();
      sub_23CF4AFE4();
      uint64_t v76 = swift_allocError();
      uint64_t v78 = v77;
      id v159 = 0;
      unint64_t v160 = 0xE000000000000000;
      sub_23D005FC8();
      swift_bridgeObjectRelease();
      void *v78 = 0xD00000000000003DLL;
      v78[1] = 0x800000023D011620;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v75 - 8) + 104))(v78, *MEMORY[0x263F3C4F0], v75);
      uint64_t v157 = v76;
      return swift_willThrow();
    }
    uint64_t v82 = v144;
    if (v58 == *MEMORY[0x263F3C558]) {
      goto LABEL_21;
    }
    uint64_t v93 = (uint64_t)v140;
    if (v58 == *MEMORY[0x263F3C578]
      || v58 == *MEMORY[0x263F3C568]
      || v58 == *MEMORY[0x263F3C518]
      || v58 == *MEMORY[0x263F3C588])
    {
      goto LABEL_39;
    }
    if (v58 == *MEMORY[0x263F3C590] || v58 == *MEMORY[0x263F3C500])
    {
      (*(void (**)(uint64_t *, uint64_t))(v55 + 96))(v56, v57);
      sub_23CF05F80(*v56, v56[1]);
      swift_bridgeObjectRelease();
LABEL_34:
      unint64_t v94 = sub_23D004478();
      os_log_type_t v95 = sub_23D005C98();
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v96 = (uint8_t *)swift_slowAlloc();
        uint64_t v97 = (void *)swift_slowAlloc();
        id v159 = v97;
        *(_DWORD *)uint64_t v96 = 136446210;
        uint64_t v158 = sub_23CF231B0(0xD000000000000016, 0x800000023D011600, (uint64_t *)&v159);
        sub_23D005E48();
        _os_log_impl(&dword_23CEE3000, v94, v95, "%{public}s cannot be used with complex types", v96, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v97, -1, -1);
        MEMORY[0x23ECF6610](v96, -1, -1);
      }

      uint64_t v98 = sub_23D004148();
      sub_23CF4AFE4();
      uint64_t v99 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v98 - 8) + 104))(v100, *MEMORY[0x263F3C4E8], v98);
      uint64_t v157 = v99;
      return swift_willThrow();
    }
    if (v58 == *MEMORY[0x263F3C580])
    {
LABEL_39:
      (*(void (**)(uint64_t *, uint64_t))(v55 + 96))(v56, v57);
      uint64_t v84 = *v56;
      unint64_t v86 = v56[1];
      goto LABEL_40;
    }
    if (v58 != *MEMORY[0x263F3C508])
    {
      if (v58 == *MEMORY[0x263F3C510])
      {
        (*(void (**)(uint64_t *, uint64_t))(v55 + 96))(v56, v57);
        uint64_t v105 = v134;
        uint64_t v106 = v132;
        uint64_t v107 = v56;
        uint64_t v108 = v133;
        (*(void (**)(char *, uint64_t *, uint64_t))(v134 + 32))(v132, v107, v133);
        uint64_t v109 = v157;
        uint64_t v110 = (void *)sub_23D004048();
        uint64_t v157 = v109;
        if (!v109)
        {
          id v159 = v110;
          unint64_t v160 = v111;
          uint64_t v115 = v131;
          sub_23D005978();
          sub_23CEE8D00();
          uint64_t v116 = v157;
          sub_23D005EA8();
          uint64_t v157 = v116;
          if (v116)
          {
            (*(void (**)(char *, uint64_t))(v138 + 8))(v115, v139);
            (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v108);
            return swift_bridgeObjectRelease();
          }
          (*(void (**)(char *, uint64_t))(v138 + 8))(v115, v139);
          swift_bridgeObjectRelease();
          uint64_t v93 = v130;
          sub_23CF256B4(v142, v130);
          uint64_t v124 = v143;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48))(v93, 1, v82) == 1)
          {
            (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v108);
            return sub_23CF097B0(v93);
          }
          uint64_t v125 = v129;
          (*(void (**)(char *, uint64_t, uint64_t))(v124 + 32))(v129, v93, v82);
          uint64_t v126 = v157;
          sub_23D0040C8();
          uint64_t v157 = v126;
          (*(void (**)(char *, uint64_t))(v124 + 8))(v125, v82);
        }
        return (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v106, v108);
      }
      uint64_t v112 = v134;
      if (v58 == *MEMORY[0x263F3C530])
      {
        (*(void (**)(uint64_t *, uint64_t))(v55 + 96))(v56, v152);
        sub_23CF05F80(*v56, v56[1]);
        uint64_t v113 = (uint64_t *)&unk_268BCE1A8;
LABEL_54:
        uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(v113);
        (*(void (**)(char *, uint64_t))(v112 + 8))((char *)v56 + *(int *)(v114 + 48), v133);
        goto LABEL_34;
      }
      if (v58 == *MEMORY[0x263F3C538])
      {
        (*(void (**)(uint64_t *, uint64_t))(v55 + 96))(v56, v152);
        sub_23CF05F80(*v56, v56[1]);
        uint64_t v113 = (uint64_t *)&unk_268BCE1A0;
        goto LABEL_54;
      }
      uint64_t v57 = v152;
      if (v58 != *MEMORY[0x263F3C528] && v58 != *MEMORY[0x263F3C520])
      {
        uint64_t v93 = (uint64_t)v140;
        if (v58 != *MEMORY[0x263F3C570])
        {
          if (v58 != *MEMORY[0x263F3C548])
          {
            uint64_t v117 = sub_23D004478();
            os_log_type_t v118 = sub_23D005C98();
            if (os_log_type_enabled(v117, v118))
            {
              uint64_t v119 = (uint8_t *)swift_slowAlloc();
              uint64_t v120 = (void *)swift_slowAlloc();
              id v159 = v120;
              *(_DWORD *)uint64_t v119 = 136446210;
              uint64_t v158 = sub_23CF231B0(0xD000000000000016, 0x800000023D011600, (uint64_t *)&v159);
              sub_23D005E48();
              _os_log_impl(&dword_23CEE3000, v117, v118, "%{public}s unknown Content type", v119, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x23ECF6610](v120, -1, -1);
              MEMORY[0x23ECF6610](v119, -1, -1);
            }

            uint64_t v121 = sub_23D004148();
            sub_23CF4AFE4();
            uint64_t v122 = swift_allocError();
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v121 - 8) + 104))(v123, *MEMORY[0x263F3C4E8], v121);
            uint64_t v157 = v122;
            swift_willThrow();
            return (*(uint64_t (**)(uint64_t *, uint64_t))(v150 + 8))(v151, v152);
          }
          goto LABEL_21;
        }
        goto LABEL_39;
      }
    }
LABEL_21:
    (*(void (**)(uint64_t *, uint64_t))(v55 + 96))(v56, v57);
    uint64_t v83 = v137;
    sub_23D005978();
    uint64_t v84 = sub_23D005958();
    unint64_t v86 = v85;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v83, v139);
    if (v86 >> 60 == 15)
    {
      uint64_t v87 = sub_23D004478();
      os_log_type_t v88 = sub_23D005C98();
      if (os_log_type_enabled(v87, v88))
      {
        uint64_t v89 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v89 = 0;
        _os_log_impl(&dword_23CEE3000, v87, v88, "Cannot convert .text to data using UTF8", v89, 2u);
        MEMORY[0x23ECF6610](v89, -1, -1);
      }

      goto LABEL_15;
    }
    uint64_t v93 = (uint64_t)v140;
LABEL_40:
    uint64_t v101 = v157;
    sub_23D003D18();
    uint64_t v157 = v101;
    if (!v101)
    {
      sub_23CF256B4(v142, v93);
      uint64_t v102 = v143;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48))(v93, 1, v82) == 1)
      {
        sub_23CF05F80(v84, v86);
        return sub_23CF097B0(v93);
      }
      uint64_t v103 = v135;
      (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v135, v93, v82);
      uint64_t v104 = v157;
      sub_23D0040C8();
      uint64_t v157 = v104;
      (*(void (**)(char *, uint64_t))(v102 + 8))(v103, v82);
    }
    return sub_23CF05F80(v84, v86);
  }
  (*(void (**)(uint64_t *, uint64_t))(v55 + 96))(v56, v57);
  uint64_t v59 = v145;
  (*(void (**)(char *, uint64_t *, uint64_t))(v155 + 32))(v145, v56, v23);
  uint64_t v60 = v59;
  id v61 = objc_msgSend(v42, sel_defaultManager);
  uint64_t v62 = (void *)sub_23D003C48();
  uint64_t v63 = (void *)sub_23D003C48();
  id v159 = 0;
  unsigned int v64 = objc_msgSend(v61, sel_copyItemAtURL_toURL_error_, v62, v63, &v159);

  id v65 = v159;
  if (v64)
  {
    uint64_t v66 = v141;
    sub_23CF256B4(v142, v141);
    uint64_t v67 = v143;
    uint64_t v68 = v144;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48))(v66, 1, v144) == 1)
    {
      id v69 = v65;
      v154(v60, v41);
      return sub_23CF097B0(v66);
    }
    uint64_t v90 = v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v136, v66, v68);
    id v91 = v65;
    uint64_t v92 = v157;
    sub_23D0040C8();
    uint64_t v157 = v92;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v90, v68);
    uint64_t v81 = v145;
  }
  else
  {
    id v79 = v159;
    uint64_t v80 = sub_23D003BC8();

    uint64_t v157 = v80;
    swift_willThrow();
    uint64_t v81 = v60;
  }
  return ((uint64_t (*)(char *, uint64_t))v154)(v81, v41);
}

unint64_t sub_23CF4AFE4()
{
  unint64_t result = qword_268BCE198;
  if (!qword_268BCE198)
  {
    sub_23D004148();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE198);
  }
  return result;
}

unint64_t sub_23CF4B040()
{
  unint64_t result = qword_268BCE1B0;
  if (!qword_268BCE1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE1B0);
  }
  return result;
}

unint64_t sub_23CF4B098()
{
  unint64_t result = qword_268BCE1B8;
  if (!qword_268BCE1B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE1C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE1B8);
  }
  return result;
}

unsigned char *_s4KindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CF4B1C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FBKSInteraction.Content.Kind()
{
  return &type metadata for FBKSInteraction.Content.Kind;
}

uint64_t _s11AnotherKindOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x23CF4B2A4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 3;
  unsigned int v9 = v7 - 3;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *_s11AnotherKindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x23CF4B38CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_23CF4B3B4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_23CF4B3C8(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FBKSInteraction.Content.AnotherKind()
{
  return &type metadata for FBKSInteraction.Content.AnotherKind;
}

uint64_t _s16AttachmentResultVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s16AttachmentResultVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s16AttachmentResultVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s16AttachmentResultVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16AttachmentResultVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s16AttachmentResultVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FBKSInteraction.Content.AttachmentResult()
{
  return &type metadata for FBKSInteraction.Content.AttachmentResult;
}

unint64_t sub_23CF4B594()
{
  unint64_t result = qword_268BCE5F0;
  if (!qword_268BCE5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE5F0);
  }
  return result;
}

uint64_t *sub_23CF4B5E8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for BatchInteraction(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_23D003DB8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    unsigned int v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
    uint64_t v10 = v6[7];
    uint64_t v11 = (uint64_t *)((char *)a1 + v10);
    uint64_t v12 = (void **)((char *)a2 + v10);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    id v13 = v9;
    swift_retain();
    LODWORD(v9) = swift_getEnumCaseMultiPayload();
    uint64_t v14 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v15 + 48);
    int v17 = v16(v12, 1, v14);
    if (v9 == 1)
    {
      if (v17)
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v23 = *v12;
            *uint64_t v11 = *v12;
            id v24 = v23;
            break;
          case 3u:
            uint64_t v25 = *v12;
            uint64_t v26 = v12[1];
            *uint64_t v11 = *v12;
            v11[1] = v26;
            v11[2] = v12[2];
            id v27 = v25;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v28 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v28 - 8) + 16))(v11, v12, v28);
            break;
          case 5u:
            uint64_t v29 = *v12;
            id v69 = v12[2];
            uint64_t v72 = v12[1];
            uint64_t v63 = (uint64_t)v12[4];
            uint64_t v66 = (uint64_t)v12[3];
            uint64_t v61 = (uint64_t)v12[6];
            uint64_t v62 = (uint64_t)v12[5];
            uint64_t v60 = v12[7];
            uint64_t v75 = (uint64_t)v12[8];
            char v78 = *((unsigned char *)v12 + 72);
            sub_23CEF00B0((uint64_t)*v12, v72, v69, v66, v63, v62, v61, v60, v75, v78);
            *uint64_t v11 = v29;
            v11[1] = v72;
            v11[2] = v69;
            void v11[3] = v66;
            v11[4] = v63;
            v11[5] = v62;
            v11[6] = v61;
            v11[7] = v60;
            v11[8] = v75;
            *((unsigned char *)v11 + 72) = v78;
            break;
          default:
            uint64_t v21 = v12[1];
            *uint64_t v11 = *v12;
            v11[1] = v21;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      uint64_t v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v31 = (void *)((char *)v11 + v30);
      uint64_t v32 = (void **)((char *)v12 + v30);
      if (v16(v32, 1, v14))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v47 = *v32;
            *uint64_t v31 = *v32;
            id v48 = v47;
            break;
          case 3u:
            os_log_type_t v49 = *v32;
            unint64_t v50 = v32[1];
            *uint64_t v31 = *v32;
            v31[1] = v50;
            uint64_t v31[2] = v32[2];
            id v51 = v49;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v52 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v52 - 8) + 16))(v31, v32, v52);
            break;
          case 5u:
            uint64_t v53 = (uint64_t)*v32;
            unint64_t v54 = v32[2];
            uint64_t v55 = (uint64_t)v32[3];
            uint64_t v56 = (uint64_t)v32[4];
            uint64_t v74 = v56;
            uint64_t v77 = v32[1];
            uint64_t v57 = (uint64_t)v32[6];
            uint64_t v68 = v57;
            uint64_t v71 = (uint64_t)v32[5];
            id v65 = v32[7];
            uint64_t v80 = (uint64_t)v32[8];
            char v58 = *((unsigned char *)v32 + 72);
            sub_23CEF00B0(v53, v77, v54, v55, v56, v71, v57, v65, v80, v58);
            *uint64_t v31 = v53;
            v31[1] = v77;
            uint64_t v31[2] = v54;
            v31[3] = v55;
            v31[4] = v74;
            v31[5] = v71;
            v31[6] = v68;
            v31[7] = v65;
            v31[8] = v80;
            *((unsigned char *)v31 + 72) = v58;
            break;
          default:
            uint64_t v34 = v32[1];
            *uint64_t v31 = *v32;
            v31[1] = v34;
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v31, 0, 1, v14);
      }
    }
    else if (v17)
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v11, v12, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          os_log_type_t v35 = *v12;
          *uint64_t v11 = *v12;
          id v36 = v35;
          break;
        case 3u:
          uint64_t v37 = *v12;
          uint64_t v38 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v38;
          v11[2] = v12[2];
          id v39 = v37;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v40 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v40 - 8) + 16))(v11, v12, v40);
          break;
        case 5u:
          uint64_t v41 = (uint64_t)*v12;
          unsigned int v42 = v12[2];
          uint64_t v43 = (uint64_t)v12[3];
          uint64_t v44 = (uint64_t)v12[4];
          uint64_t v73 = v44;
          uint64_t v76 = v12[1];
          uint64_t v45 = (uint64_t)v12[6];
          uint64_t v67 = v45;
          uint64_t v70 = (uint64_t)v12[5];
          unsigned int v64 = v12[7];
          uint64_t v79 = (uint64_t)v12[8];
          char v46 = *((unsigned char *)v12 + 72);
          sub_23CEF00B0(v41, v76, v42, v43, v44, v70, v45, v64, v79, v46);
          *uint64_t v11 = v41;
          v11[1] = v76;
          v11[2] = v42;
          void v11[3] = v43;
          v11[4] = v73;
          v11[5] = v70;
          v11[6] = v67;
          v11[7] = v64;
          v11[8] = v79;
          *((unsigned char *)v11 + 72) = v46;
          break;
        default:
          unint64_t v22 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v22;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_23CF4BD04(uint64_t a1)
{
  uint64_t v2 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = type metadata accessor for BatchInteraction(0);

  swift_release();
  uint64_t v4 = a1 + *(int *)(v3 + 28);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v6 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  int v8 = v7(v4, 1, v6);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          swift_bridgeObjectRelease();
          break;
        case 2u:

          break;
        case 3u:

          swift_bridgeObjectRelease();
          break;
        case 4u:
          uint64_t v12 = sub_23D003B88();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v4, v12);
          break;
        case 5u:
          sub_23CEF05F8(*(void **)v4, *(void **)(v4 + 8), *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(unsigned char *)(v4 + 72));
          break;
        default:
          break;
      }
    }
    v4 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    if (!v7(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
          goto LABEL_14;
        case 2u:
          goto LABEL_10;
        case 3u:
          goto LABEL_13;
        case 4u:
          goto LABEL_17;
        case 5u:
          goto LABEL_20;
        default:
          return;
      }
    }
  }
  else if (!v8)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        goto LABEL_14;
      case 2u:
LABEL_10:
        id v9 = *(id *)v4;

        break;
      case 3u:
LABEL_13:

LABEL_14:
        swift_bridgeObjectRelease();
        break;
      case 4u:
LABEL_17:
        uint64_t v10 = sub_23D003B88();
        uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
        v11(v4, v10);
        break;
      case 5u:
LABEL_20:
        sub_23CEF05F8(*(void **)v4, *(void **)(v4 + 8), *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(unsigned char *)(v4 + 72));
        break;
      default:
        return;
    }
  }
}

uint64_t sub_23CF4C0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = *(void **)(a2 + v6);
  *(void *)(a1 + v6) = v7;
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  uint64_t v8 = v5[7];
  id v9 = (void *)(a1 + v8);
  uint64_t v10 = (void **)(a2 + v8);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  id v11 = v7;
  swift_retain();
  LODWORD(v7) = swift_getEnumCaseMultiPayload();
  uint64_t v12 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  if (v7 == 1)
  {
    if (v15)
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v20 = *v10;
          *id v9 = *v10;
          id v21 = v20;
          break;
        case 3u:
          unint64_t v22 = *v10;
          uint64_t v23 = v10[1];
          *id v9 = *v10;
          v9[1] = v23;
          long long v9[2] = v10[2];
          id v24 = v22;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v25 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v25 - 8) + 16))(v9, v10, v25);
          break;
        case 5u:
          uint64_t v26 = *v10;
          uint64_t v66 = v10[2];
          id v69 = v10[1];
          uint64_t v60 = (uint64_t)v10[4];
          uint64_t v63 = (uint64_t)v10[3];
          uint64_t v58 = (uint64_t)v10[6];
          uint64_t v59 = (uint64_t)v10[5];
          uint64_t v57 = v10[7];
          uint64_t v72 = (uint64_t)v10[8];
          char v75 = *((unsigned char *)v10 + 72);
          sub_23CEF00B0((uint64_t)*v10, v69, v66, v63, v60, v59, v58, v57, v72, v75);
          *id v9 = v26;
          v9[1] = v69;
          long long v9[2] = v66;
          v9[3] = v63;
          v9[4] = v60;
          v9[5] = v59;
          void v9[6] = v58;
          v9[7] = v57;
          v9[8] = v72;
          *((unsigned char *)v9 + 72) = v75;
          break;
        default:
          uint64_t v18 = v10[1];
          *id v9 = *v10;
          v9[1] = v18;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    uint64_t v28 = (void *)((char *)v9 + v27);
    uint64_t v29 = (void **)((char *)v10 + v27);
    if (v14(v29, 1, v12))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v44 = *v29;
          *uint64_t v28 = *v29;
          id v45 = v44;
          break;
        case 3u:
          char v46 = *v29;
          uint64_t v47 = v29[1];
          *uint64_t v28 = *v29;
          v28[1] = v47;
          id v28[2] = v29[2];
          id v48 = v46;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v49 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v49 - 8) + 16))(v28, v29, v49);
          break;
        case 5u:
          uint64_t v50 = (uint64_t)*v29;
          id v51 = v29[2];
          uint64_t v52 = (uint64_t)v29[3];
          uint64_t v53 = (uint64_t)v29[4];
          uint64_t v71 = v53;
          uint64_t v74 = v29[1];
          uint64_t v54 = (uint64_t)v29[6];
          uint64_t v65 = v54;
          uint64_t v68 = (uint64_t)v29[5];
          uint64_t v62 = v29[7];
          uint64_t v77 = (uint64_t)v29[8];
          char v55 = *((unsigned char *)v29 + 72);
          sub_23CEF00B0(v50, v74, v51, v52, v53, v68, v54, v62, v77, v55);
          *uint64_t v28 = v50;
          v28[1] = v74;
          id v28[2] = v51;
          v28[3] = v52;
          v28[4] = v71;
          v28[5] = v68;
          v28[6] = v65;
          v28[7] = v62;
          v28[8] = v77;
          *((unsigned char *)v28 + 72) = v55;
          break;
        default:
          uint64_t v31 = v29[1];
          *uint64_t v28 = *v29;
          v28[1] = v31;
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v28, 0, 1, v12);
    }
  }
  else if (v15)
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v32 = *v10;
        *id v9 = *v10;
        id v33 = v32;
        break;
      case 3u:
        uint64_t v34 = *v10;
        os_log_type_t v35 = v10[1];
        *id v9 = *v10;
        v9[1] = v35;
        long long v9[2] = v10[2];
        id v36 = v34;
        swift_bridgeObjectRetain();
        break;
      case 4u:
        uint64_t v37 = sub_23D003B88();
        (*(void (**)(void *, void **, uint64_t))(*(void *)(v37 - 8) + 16))(v9, v10, v37);
        break;
      case 5u:
        uint64_t v38 = (uint64_t)*v10;
        id v39 = v10[2];
        uint64_t v40 = (uint64_t)v10[3];
        uint64_t v41 = (uint64_t)v10[4];
        uint64_t v70 = v41;
        uint64_t v73 = v10[1];
        uint64_t v42 = (uint64_t)v10[6];
        uint64_t v64 = v42;
        uint64_t v67 = (uint64_t)v10[5];
        uint64_t v61 = v10[7];
        uint64_t v76 = (uint64_t)v10[8];
        char v43 = *((unsigned char *)v10 + 72);
        sub_23CEF00B0(v38, v73, v39, v40, v41, v67, v42, v61, v76, v43);
        *id v9 = v38;
        v9[1] = v73;
        long long v9[2] = v39;
        v9[3] = v40;
        v9[4] = v70;
        v9[5] = v67;
        void v9[6] = v64;
        v9[7] = v61;
        v9[8] = v76;
        *((unsigned char *)v9 + 72) = v43;
        break;
      default:
        uint64_t v19 = v10[1];
        *id v9 = *v10;
        v9[1] = v19;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23CF4C770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = *(void **)(a2 + v6);
  uint64_t v8 = *(void **)(a1 + v6);
  *(void *)(a1 + v6) = v7;
  id v9 = v7;

  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v10 = v5[7];
    id v11 = (void *)(a1 + v10);
    uint64_t v12 = (void **)(a2 + v10);
    sub_23CEF155C(a1 + v10);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v14 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v15 + 48);
    int v17 = v16(v12, 1, v14);
    if (EnumCaseMultiPayload == 1)
    {
      if (v17)
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v20 = *v12;
            *id v11 = *v12;
            id v21 = v20;
            break;
          case 3u:
            unint64_t v22 = *v12;
            *id v11 = *v12;
            v11[1] = v12[1];
            v11[2] = v12[2];
            id v23 = v22;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v24 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v24 - 8) + 16))(v11, v12, v24);
            break;
          case 5u:
            uint64_t v25 = *v12;
            uint64_t v62 = v12[2];
            uint64_t v65 = v12[1];
            uint64_t v56 = (uint64_t)v12[4];
            uint64_t v59 = (uint64_t)v12[3];
            uint64_t v54 = (uint64_t)v12[6];
            uint64_t v55 = (uint64_t)v12[5];
            uint64_t v53 = v12[7];
            uint64_t v68 = (uint64_t)v12[8];
            char v71 = *((unsigned char *)v12 + 72);
            sub_23CEF00B0((uint64_t)*v12, v65, v62, v59, v56, v55, v54, v53, v68, v71);
            *id v11 = v25;
            v11[1] = v65;
            v11[2] = v62;
            void v11[3] = v59;
            v11[4] = v56;
            v11[5] = v55;
            v11[6] = v54;
            v11[7] = v53;
            v11[8] = v68;
            *((unsigned char *)v11 + 72) = v71;
            break;
          default:
            *id v11 = *v12;
            v11[1] = v12[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      uint64_t v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v27 = (void *)((char *)v11 + v26);
      uint64_t v28 = (void **)((char *)v12 + v26);
      if (v16(v28, 1, v14))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v41 = *v28;
            *uint64_t v27 = *v28;
            id v42 = v41;
            break;
          case 3u:
            char v43 = *v28;
            *uint64_t v27 = *v28;
            v27[1] = v28[1];
            void v27[2] = v28[2];
            id v44 = v43;
            swift_bridgeObjectRetain();
            break;
          case 4u:
            uint64_t v45 = sub_23D003B88();
            (*(void (**)(void *, void **, uint64_t))(*(void *)(v45 - 8) + 16))(v27, v28, v45);
            break;
          case 5u:
            uint64_t v46 = (uint64_t)*v28;
            uint64_t v47 = v28[2];
            uint64_t v48 = (uint64_t)v28[3];
            uint64_t v49 = (uint64_t)v28[4];
            uint64_t v67 = v49;
            uint64_t v70 = v28[1];
            uint64_t v50 = (uint64_t)v28[6];
            uint64_t v61 = v50;
            uint64_t v64 = (uint64_t)v28[5];
            uint64_t v58 = v28[7];
            uint64_t v73 = (uint64_t)v28[8];
            char v51 = *((unsigned char *)v28 + 72);
            sub_23CEF00B0(v46, v70, v47, v48, v49, v64, v50, v58, v73, v51);
            *uint64_t v27 = v46;
            v27[1] = v70;
            void v27[2] = v47;
            v27[3] = v48;
            v27[4] = v67;
            v27[5] = v64;
            v27[6] = v61;
            v27[7] = v58;
            v27[8] = v73;
            *((unsigned char *)v27 + 72) = v51;
            break;
          default:
            *uint64_t v27 = *v28;
            v27[1] = v28[1];
            swift_bridgeObjectRetain();
            break;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
      }
    }
    else if (v17)
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v30 = *v12;
          *id v11 = *v12;
          id v31 = v30;
          break;
        case 3u:
          uint64_t v32 = *v12;
          *id v11 = *v12;
          v11[1] = v12[1];
          v11[2] = v12[2];
          id v33 = v32;
          swift_bridgeObjectRetain();
          break;
        case 4u:
          uint64_t v34 = sub_23D003B88();
          (*(void (**)(void *, void **, uint64_t))(*(void *)(v34 - 8) + 16))(v11, v12, v34);
          break;
        case 5u:
          uint64_t v35 = (uint64_t)*v12;
          id v36 = v12[2];
          uint64_t v37 = (uint64_t)v12[3];
          uint64_t v38 = (uint64_t)v12[4];
          uint64_t v66 = v38;
          id v69 = v12[1];
          uint64_t v39 = (uint64_t)v12[6];
          uint64_t v60 = v39;
          uint64_t v63 = (uint64_t)v12[5];
          uint64_t v57 = v12[7];
          uint64_t v72 = (uint64_t)v12[8];
          char v40 = *((unsigned char *)v12 + 72);
          sub_23CEF00B0(v35, v69, v36, v37, v38, v63, v39, v57, v72, v40);
          *id v11 = v35;
          v11[1] = v69;
          v11[2] = v36;
          void v11[3] = v37;
          v11[4] = v66;
          v11[5] = v63;
          v11[6] = v60;
          v11[7] = v57;
          v11[8] = v72;
          *((unsigned char *)v11 + 72) = v40;
          break;
        default:
          *id v11 = *v12;
          v11[1] = v12[1];
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23CF4CE98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for BatchInteraction(0);
  *(void *)(a1 + v5[5]) = *(void *)(a2 + v5[5]);
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  uint64_t v6 = v5[7];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  type metadata accessor for BatchInteraction.ContentPolarity(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v10 = type metadata accessor for BatchInteraction.ContentPreview(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  if (EnumCaseMultiPayload == 1)
  {
    if (v13)
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v16 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v7, v8, v16);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v7, v8, *(void *)(v11 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    uint64_t v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
    uint64_t v19 = &v7[v18];
    uint64_t v20 = &v8[v18];
    if (v12(v20, 1, v10))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v22 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v19, v20, *(void *)(v11 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
    }
  }
  else if (v13)
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v17 = sub_23D003B88();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v7, v8, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(v11 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23CF4D274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for BatchInteraction(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = *(void **)(a1 + v6);
  *(void *)(a1 + v6) = *(void *)(a2 + v6);

  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v8 = v5[7];
    id v9 = (char *)(a1 + v8);
    uint64_t v10 = (char *)(a2 + v8);
    sub_23CEF155C(a1 + v8);
    type metadata accessor for BatchInteraction.ContentPolarity(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v12 = type metadata accessor for BatchInteraction.ContentPreview(0);
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
    int v15 = v14(v10, 1, v12);
    if (EnumCaseMultiPayload == 1)
    {
      if (v15)
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v18 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v9, v10, v18);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(void *)(v13 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCD220) + 48);
      uint64_t v21 = &v9[v20];
      uint64_t v22 = &v10[v20];
      if (v14(v22, 1, v12))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 4)
        {
          uint64_t v24 = sub_23D003B88();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v21, v22, *(void *)(v13 + 64));
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
      }
    }
    else if (v15)
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD218);
      memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v19 = sub_23D003B88();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v9, v10, v19);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(v13 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23CF4D674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF4D688);
}

uint64_t sub_23CF4D688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BatchInteraction(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_23CF4D6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF4D708);
}

uint64_t sub_23CF4D708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BatchInteraction(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AppMetaView()
{
  uint64_t result = qword_268BCE1D0;
  if (!qword_268BCE1D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF4D7C4()
{
  uint64_t result = type metadata accessor for BatchInteraction(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23CF4D850()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF4D86C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_23D004BB8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_23D004EB8();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE1E0);
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  MEMORY[0x270FA5388](v7);
  id v31 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE1E8);
  uint64_t v9 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v30 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(v1 + *(int *)(type metadata accessor for BatchInteraction(0) + 24));
  if (!v11) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, 1, 1, v34);
  }
  swift_getKeyPath();
  *(void *)&v41[0] = v11;
  sub_23CF4E654(&qword_268BCE1F0, (void (*)(uint64_t))type metadata accessor for AppInfoController);
  sub_23D003DD8();
  swift_release();
  uint64_t v12 = v11[3];
  if (!v12) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, 1, 1, v34);
  }
  uint64_t v27 = a1;
  uint64_t v13 = v11[2];
  uint64_t v14 = (void *)v11[4];
  swift_bridgeObjectRetain();
  id v15 = v14;
  uint64_t v16 = sub_23D004B08();
  if (qword_268BCCC90 != -1) {
    swift_once();
  }
  double v17 = *(double *)&qword_268BDAD38 * 0.25;
  id v25 = v15;
  uint64_t v26 = v13;
  sub_23CF4DE2C(v12, v15, (uint64_t)v37);
  *(_OWORD *)&v39[119] = v37[7];
  *(_OWORD *)&v39[103] = v37[6];
  *(_OWORD *)&v39[55] = v37[3];
  *(_OWORD *)&v39[39] = v37[2];
  *(_OWORD *)&v39[135] = v37[8];
  *(_OWORD *)&v39[71] = v37[4];
  *(_OWORD *)&v39[87] = v37[5];
  *(_OWORD *)&v39[7] = v37[0];
  char v40 = 0;
  v39[151] = v38;
  *(_OWORD *)&v39[23] = v37[1];
  *(void *)&long long v35 = v16;
  *((double *)&v35 + 1) = v17;
  LOBYTE(v36[0]) = 0;
  *(_OWORD *)((char *)&v36[6] + 1) = *(_OWORD *)&v39[96];
  *(_OWORD *)((char *)&v36[7] + 1) = *(_OWORD *)&v39[112];
  *(_OWORD *)((char *)&v36[8] + 1) = *(_OWORD *)&v39[128];
  *(void *)((char *)&v36[9] + 1) = *(void *)&v39[144];
  *(_OWORD *)((char *)&v36[2] + 1) = *(_OWORD *)&v39[32];
  *(_OWORD *)((char *)&v36[3] + 1) = *(_OWORD *)&v39[48];
  *(_OWORD *)((char *)&v36[4] + 1) = *(_OWORD *)&v39[64];
  *(_OWORD *)((char *)&v36[5] + 1) = *(_OWORD *)&v39[80];
  *(_OWORD *)((char *)v36 + 1) = *(_OWORD *)v39;
  *(_OWORD *)((char *)&v36[1] + 1) = *(_OWORD *)&v39[16];
  BYTE9(v36[9]) = 0;
  sub_23D004EA8();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE1F8);
  unint64_t v24 = sub_23CF4E2E4();
  uint64_t v19 = v31;
  sub_23D0053C8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  v41[7] = v36[6];
  v41[8] = v36[7];
  v42[0] = v36[8];
  *(_OWORD *)((char *)v42 + 10) = *(_OWORD *)((char *)&v36[8] + 10);
  v41[4] = v36[3];
  v41[5] = v36[4];
  v41[6] = v36[5];
  v41[0] = v35;
  v41[1] = v36[0];
  v41[2] = v36[1];
  void v41[3] = v36[2];
  sub_23CF4E410((uint64_t)v41);
  sub_23D004BA8();
  sub_23D004B98();
  sub_23D004B88();
  sub_23D004B98();
  sub_23D004BD8();
  *(void *)&long long v35 = v18;
  *((void *)&v35 + 1) = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v20 = (uint64_t)v30;
  uint64_t v21 = v33;
  sub_23D005378();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v21);
  uint64_t v22 = v27;
  sub_23CF4E48C(v20, v27);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v22, 0, 1, v34);
}

uint64_t sub_23CF4DE2C@<X0>(uint64_t a1@<X2>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v5 = sub_23D004288();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_23D005588();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = a2;
  sub_23D005568();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F1B4B8], v9);
  uint64_t v47 = sub_23D005598();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (qword_268BCCC90 != -1) {
    swift_once();
  }
  sub_23D005778();
  sub_23D0046C8();
  uint64_t v45 = v50;
  int v44 = v51;
  uint64_t v43 = v52;
  int v42 = v53;
  uint64_t v40 = v55;
  uint64_t v41 = v54;
  if (qword_268BCCCF8 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v5, (uint64_t)qword_268BDAE18);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, v5);
  uint64_t v39 = sub_23D005558();
  id v15 = objc_msgSend(self, sel_mainBundle);
  uint64_t v16 = sub_23D003BA8();
  uint64_t v18 = v17;

  uint64_t v48 = v16;
  uint64_t v49 = v18;
  sub_23CEE8D00();
  uint64_t v19 = sub_23D005228();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_23D005188();
  uint64_t v24 = sub_23D0051F8();
  uint64_t v26 = v25;
  char v28 = v27;
  uint64_t v30 = v29;
  swift_release();
  sub_23CEE7DE0(v19, v21, v23);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  char v32 = v44;
  char v61 = v44;
  char v33 = v42;
  char v60 = v42;
  char v58 = v28 & 1;
  char v56 = 1;
  *(_DWORD *)(a3 + 17) = v48;
  *(_DWORD *)(a3 + 20) = *(_DWORD *)((char *)&v48 + 3);
  *(_DWORD *)(a3 + 33) = *(_DWORD *)v59;
  *(_DWORD *)(a3 + 36) = *(_DWORD *)&v59[3];
  *(_DWORD *)(a3 + 105) = *(_DWORD *)v57;
  *(_DWORD *)(a3 + 108) = *(_DWORD *)&v57[3];
  char v34 = v56;
  uint64_t v35 = v45;
  *(void *)a3 = v47;
  *(void *)(a3 + 8) = v35;
  *(unsigned char *)(a3 + 16) = v32;
  *(void *)(a3 + 24) = v43;
  *(unsigned char *)(a3 + 32) = v33;
  uint64_t v36 = v40;
  *(void *)(a3 + 40) = v41;
  *(void *)(a3 + 48) = v36;
  *(void *)(a3 + 56) = v39;
  *(void *)(a3 + 64) = 0x4000000000000000;
  *(void *)(a3 + 72) = 0;
  *(void *)(a3 + 80) = 0;
  *(void *)(a3 + 88) = v24;
  *(void *)(a3 + 96) = v26;
  *(unsigned char *)(a3 + 104) = v28 & 1;
  *(void *)(a3 + 112) = v30;
  *(void *)(a3 + 120) = KeyPath;
  *(void *)(a3 + 128) = 0x3FE0000000000000;
  *(void *)(a3 + 136) = 0;
  *(unsigned char *)(a3 + 144) = v34;
  swift_retain();
  swift_retain();
  sub_23CEE8444(v24, v26, v28 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23CEE7DE0(v24, v26, v28 & 1);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_23CF4E2E4()
{
  unint64_t result = qword_268BCE200;
  if (!qword_268BCE200)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE1F8);
    sub_23CF4E360();
    sub_23CF4E3BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE200);
  }
  return result;
}

unint64_t sub_23CF4E360()
{
  unint64_t result = qword_268BCE208;
  if (!qword_268BCE208)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE210);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE208);
  }
  return result;
}

unint64_t sub_23CF4E3BC()
{
  unint64_t result = qword_268BCE218;
  if (!qword_268BCE218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE218);
  }
  return result;
}

uint64_t sub_23CF4E410(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  char v4 = *(unsigned char *)(a1 + 128);
  swift_release();
  swift_release();
  sub_23CEE7DE0(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23CF4E48C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE1E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23CF4E500()
{
  unint64_t result = qword_268BCE220;
  if (!qword_268BCE220)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE228);
    sub_23CF4E574();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE220);
  }
  return result;
}

unint64_t sub_23CF4E574()
{
  unint64_t result = qword_268BCE230;
  if (!qword_268BCE230)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE1E8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE1F8);
    sub_23CF4E2E4();
    swift_getOpaqueTypeConformance2();
    sub_23CF4E654((unint64_t *)&qword_268BCD1E0, MEMORY[0x263F1A470]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE230);
  }
  return result;
}

uint64_t sub_23CF4E654(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ScoreDetail(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ScoreDetail(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ScoreDetail(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CatchUpDonationDecoder.Result(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CatchUpDonationDecoder.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoreDetail()
{
  return &type metadata for ScoreDetail;
}

uint64_t sub_23CF4E7F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF4E80C(uint64_t a1, char a2)
{
  char v2 = a2 & 1;
  uint64_t v3 = swift_retain();
  sub_23CF39CF4(v3, v2);
  swift_release();
  swift_getKeyPath();
  sub_23CF4FE8C((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  swift_release();
  swift_release();
  sub_23D0061F8();
  sub_23D0059F8();
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(self, sel_mainBundle);
  uint64_t v5 = sub_23D003BA8();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_23CF4E9C0(uint64_t a1, char a2)
{
  char v2 = a2 & 1;
  uint64_t v3 = swift_retain();
  sub_23CF39CF4(v3, v2);
  swift_release();
  uint64_t v4 = sub_23CF15048();
  swift_release();
  uint64_t v5 = swift_retain();
  uint64_t v6 = sub_23CF39CF4(v5, v2);
  swift_release();
  swift_getKeyPath();
  sub_23CF4FE8C((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  swift_release();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t result = swift_release();
  if (__OFSUB__(v4, v7))
  {
    __break(1u);
  }
  else
  {
    sub_23D005FC8();
    sub_23D0061F8();
    swift_bridgeObjectRelease();
    sub_23D0059F8();
    sub_23D0059F8();
    swift_bridgeObjectRelease();
    sub_23D0059F8();
    id v9 = objc_msgSend(self, sel_mainBundle);
    uint64_t v10 = sub_23D003BA8();
    swift_bridgeObjectRelease();

    return v10;
  }
  return result;
}

uint64_t sub_23CF4EBF0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a3;
  int v4 = a2 & 1;
  uint64_t v5 = sub_23D004288();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE238);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v39 = (uint64_t)&v38 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE240);
  uint64_t v41 = *(void *)(v14 - 8);
  uint64_t v42 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v40 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1;
  uint64_t v17 = sub_23CF4E80C(a1, v4);
  uint64_t v19 = v18;
  if (qword_268BCCCD8 != -1) {
    swift_once();
  }
  BOOL v20 = v4 != 0;
  uint64_t v21 = __swift_project_value_buffer(v5, (uint64_t)qword_268BDADB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, v5);
  uint64_t v22 = sub_23D005558();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v16;
  *(unsigned char *)(v23 + 24) = v20;
  uint64_t v24 = (uint64_t *)&v12[*(int *)(v9 + 40)];
  *uint64_t v24 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
  swift_storeEnumTagMultiPayload();
  *((void *)v12 + 6) = sub_23CF4F7C8;
  *((void *)v12 + 7) = v23;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)uint64_t v12 = _Q0;
  *((void *)v12 + 2) = v17;
  *((void *)v12 + 3) = v19;
  *((void *)v12 + 4) = v22;
  v12[40] = 1;
  uint64_t v30 = v39;
  sub_23CEE83D8((uint64_t)v12, v39, &qword_268BCE238);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE248);
  sub_23D004C18();
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_23D008C80;
  swift_retain();
  sub_23D004C08();
  sub_23CF4FB10(v31);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_23CF4FE28();
  char v32 = v40;
  sub_23D0053B8();
  swift_bridgeObjectRelease();
  sub_23CEE8BB4(v30, &qword_268BCE238);
  uint64_t v34 = v41;
  uint64_t v33 = v42;
  uint64_t v35 = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v43, v32, v42);
  uint64_t v36 = (uint64_t (**)())(v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE258) + 36));
  *uint64_t v36 = sub_23CF4F6DC;
  v36[1] = 0;
  v36[2] = 0;
  v36[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v32, v33);
}

uint64_t sub_23CF4F04C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5 = a2 & 1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE278);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v18 - v10;
  *(void *)a3 = sub_23D004C58();
  *(void *)(a3 + 8) = 0x4040000000000000;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v12 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE280) + 44);
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_23CF39CF4(v13, v5);
  swift_release();
  *(void *)uint64_t v11 = sub_23D004C58();
  *((void *)v11 + 1) = 0x4010000000000000;
  v11[16] = 0;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE288);
  sub_23CF4F1E0(a1, v5, (uint64_t)&v11[*(int *)(v15 + 44)]);
  sub_23CEE82CC((uint64_t)v11, (uint64_t)v9, &qword_268BCE278);
  *(void *)uint64_t v12 = v14;
  *(_OWORD *)(v12 + 8) = xmmword_23D009D40;
  *(void *)(v12 + 24) = 0x4062C00000000000;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE290);
  sub_23CEE82CC((uint64_t)v9, v12 + *(int *)(v16 + 48), &qword_268BCE278);
  swift_retain();
  sub_23CEE8BB4((uint64_t)v11, &qword_268BCE278);
  sub_23CEE8BB4((uint64_t)v9, &qword_268BCE278);
  return swift_release();
}

uint64_t sub_23CF4F1E0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5 = a2 & 1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD718);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE298);
  uint64_t v11 = v10 - 8;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v32 = sub_23D004B08();
  sub_23CF4F4CC(a1, v5, (uint64_t)&v34);
  uint64_t v31 = v34;
  int v30 = v35;
  uint64_t v27 = v37;
  uint64_t v28 = v36;
  char v17 = v38;
  uint64_t v29 = v39;
  uint64_t v18 = swift_retain();
  sub_23CF39CF4(v18, v5);
  swift_release();
  sub_23CF14668();
  uint64_t v20 = v19;
  swift_release();
  uint64_t v34 = v20;
  unsigned __int8 v35 = 0;
  uint64_t v33 = 0x3FF0000000000000;
  sub_23CF18028();
  sub_23D004648();
  uint64_t v21 = sub_23D0054E8();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v14, v9, v6);
  *(void *)&v14[*(int *)(v11 + 44)] = v21;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_23CEE83D8((uint64_t)v14, (uint64_t)v16, &qword_268BCE298);
  sub_23CEE82CC((uint64_t)v16, (uint64_t)v14, &qword_268BCE298);
  *(void *)a3 = v32;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  *(void *)(a3 + 24) = v31;
  *(unsigned char *)(a3 + 32) = v30;
  uint64_t v23 = v27;
  uint64_t v22 = v28;
  *(void *)(a3 + 40) = v28;
  *(void *)(a3 + 48) = v23;
  *(unsigned char *)(a3 + 56) = v17;
  *(void *)(a3 + 64) = v29;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE2A0);
  sub_23CEE82CC((uint64_t)v14, a3 + *(int *)(v24 + 48), &qword_268BCE298);
  sub_23CEE8444(v22, v23, v17);
  swift_bridgeObjectRetain();
  sub_23CEE8BB4((uint64_t)v16, &qword_268BCE298);
  sub_23CEE8BB4((uint64_t)v14, &qword_268BCE298);
  sub_23CEE7DE0(v22, v23, v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF4F4CC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5 = a2 & 1;
  uint64_t v6 = sub_23D004288();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_23CF4E9C0(a1, v5);
  uint64_t v27 = v10;
  sub_23CEE8D00();
  uint64_t v11 = sub_23D005228();
  uint64_t v13 = v12;
  char v15 = v14;
  if (qword_268BCCCF0 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v6, (uint64_t)qword_268BDAE00);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v16, v6);
  uint64_t v26 = sub_23D005558();
  uint64_t v17 = sub_23D0051D8();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_23CEE7DE0(v11, v13, v15 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)a3 = 0;
  *(unsigned char *)(a3 + 8) = 1;
  *(void *)(a3 + 16) = v17;
  *(void *)(a3 + 24) = v19;
  *(unsigned char *)(a3 + 32) = v23;
  *(void *)(a3 + 40) = v21;
  sub_23CEE8444(v17, v19, v23);
  swift_bridgeObjectRetain();
  sub_23CEE7DE0(v17, v19, v23);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF4F6DC()
{
  uint64_t v0 = type metadata accessor for AnalyticsEvent();
  MEMORY[0x270FA5388](v0);
  char v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_23CFDE698();
  return sub_23CF15708((uint64_t)v2);
}

uint64_t sub_23CF4F760@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF4EBF0(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_23CF4F76C()
{
  return sub_23D004978();
}

uint64_t sub_23CF4F790()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_23CF4F7C8@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF4F04C(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_23CF4F7D4()
{
  return sub_23D004978();
}

uint64_t sub_23CF4F7F8(uint64_t a1)
{
  uint64_t v2 = sub_23D004028();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE2A8);
    uint64_t v9 = sub_23D005FA8();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unsigned __int8 v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    char v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_23CF4FE8C(&qword_268BCDCB0, MEMORY[0x263F3C338]);
      uint64_t v16 = sub_23D0058D8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_23CF4FE8C(&qword_268BCD840, MEMORY[0x263F3C338]);
          char v23 = sub_23D005908();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_23CF4FB10(uint64_t a1)
{
  uint64_t v2 = sub_23D004C18();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE260);
    uint64_t v9 = sub_23D005FA8();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unsigned __int8 v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    char v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_23CF4FE8C(&qword_268BCE268, MEMORY[0x263F19830]);
      uint64_t v16 = sub_23D0058D8();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_23CF4FE8C(&qword_268BCE270, MEMORY[0x263F19830]);
          char v23 = sub_23D005908();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unint64_t sub_23CF4FE28()
{
  unint64_t result = qword_268BCE250;
  if (!qword_268BCE250)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE238);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE250);
  }
  return result;
}

uint64_t sub_23CF4FE8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23CF4FED8()
{
  unint64_t result = qword_268BCE2B0[0];
  if (!qword_268BCE2B0[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE258);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE238);
    sub_23CF4FE28();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_268BCE2B0);
  }
  return result;
}

uint64_t sub_23CF4FF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_23CF4FF98()
{
  return swift_release();
}

void *sub_23CF4FFA0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain();
  return a1;
}

void *sub_23CF4FFD8(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_23CF50030(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppInfoController.AppInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppInfoController.AppInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for Card()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_23CF5010C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF50150@<X0>(uint64_t a1@<X0>, void (*a2)(void, void, void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v67 = a4;
  uint64_t v87 = a2;
  uint64_t v68 = a1;
  uint64_t v86 = a5;
  uint64_t v75 = sub_23D0048C8();
  MEMORY[0x270FA5388](v75);
  uint64_t v83 = (double *)((char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE338);
  MEMORY[0x270FA5388](v85);
  uint64_t v84 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_23D004288();
  uint64_t v88 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_23D005618();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v15 = (char *)&v67 - v14;
  uint64_t v16 = sub_23D004838();
  uint64_t v70 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)&v67 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_268BCDC90);
  uint64_t v19 = sub_23D004838();
  uint64_t v73 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v69 = (char *)&v67 - v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_268BCDCA0);
  uint64_t v21 = sub_23D004838();
  uint64_t v74 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  char v71 = (char *)&v67 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCD3B0);
  uint64_t v23 = sub_23D004838();
  uint64_t v79 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v76 = (char *)&v67 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE340);
  uint64_t v80 = v23;
  uint64_t v82 = sub_23D004838();
  uint64_t v81 = *(void *)(v82 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v82);
  uint64_t v77 = (char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  char v78 = (char *)&v67 - v27;
  uint64_t v89 = a3;
  uint64_t v90 = v67;
  double v91 = a6;
  uint64_t v92 = v68;
  uint64_t v93 = v87;
  sub_23D004B08();
  sub_23D005608();
  sub_23D005078();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_23D005498();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (qword_268BCCCD8 != -1) {
    swift_once();
  }
  uint64_t v29 = v72;
  uint64_t v30 = __swift_project_value_buffer(v72, (uint64_t)qword_268BDADB8);
  uint64_t v31 = *(void (**)(void, void, void))(v88 + 16);
  v88 += 16;
  uint64_t v87 = v31;
  v31(v11, v30, v29);
  *(void *)&long long v104 = sub_23D005558();
  sub_23D005078();
  uint64_t v102 = WitnessTable;
  uint64_t v103 = MEMORY[0x263F18C10];
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v69;
  sub_23D005278();
  swift_release();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v18, v16);
  if (qword_268BCCCE0 != -1) {
    swift_once();
  }
  uint64_t v34 = __swift_project_value_buffer(v29, (uint64_t)qword_268BDADD0);
  v87(v11, v34, v29);
  *(void *)&long long v104 = sub_23D005558();
  uint64_t v35 = sub_23CEE8D90(&qword_268BCDC88, (uint64_t *)&unk_268BCDC90);
  uint64_t v100 = v32;
  uint64_t v101 = v35;
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = v71;
  sub_23D005318();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v33, v19);
  uint64_t v38 = sub_23CEE8D90(&qword_268BCDA48, (uint64_t *)&unk_268BCDCA0);
  uint64_t v98 = v36;
  uint64_t v99 = v38;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = v76;
  sub_23D0052C8();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v37, v21);
  uint64_t v41 = v83;
  uint64_t v42 = (char *)v83 + *(int *)(v75 + 20);
  uint64_t v43 = *MEMORY[0x263F19860];
  uint64_t v44 = sub_23D004C28();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 104))(v42, v43, v44);
  *uint64_t v41 = a6;
  v41[1] = a6;
  if (qword_268BCCCF8 != -1) {
    swift_once();
  }
  uint64_t v45 = __swift_project_value_buffer(v29, (uint64_t)qword_268BDAE18);
  v87(v11, v45, v29);
  uint64_t v46 = sub_23D005558();
  sub_23D004628();
  uint64_t v47 = v84;
  sub_23CF50EB8((uint64_t)v41, v84);
  double v48 = *(double *)&v104 * 0.5;
  uint64_t v49 = v47 + *(int *)(v85 + 68);
  sub_23CF50EB8((uint64_t)v41, v49);
  *(double *)(v49 + *(int *)(sub_23D0048B8() + 20)) = v48;
  uint64_t v50 = v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE348) + 36);
  long long v51 = v105;
  *(_OWORD *)uint64_t v50 = v104;
  *(_OWORD *)(v50 + 16) = v51;
  *(void *)(v50 + 32) = v106;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE350);
  *(void *)(v49 + *(int *)(v52 + 52)) = v46;
  *(_WORD *)(v49 + *(int *)(v52 + 56)) = 256;
  uint64_t v53 = sub_23D005778();
  uint64_t v55 = v54;
  char v56 = (uint64_t *)(v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE358) + 36));
  *char v56 = v53;
  v56[1] = v55;
  sub_23CF50F1C((uint64_t)v41);
  sub_23D005778();
  uint64_t v57 = sub_23CEE8D90(&qword_268BCD3D8, &qword_268BCD3B0);
  uint64_t v96 = v39;
  uint64_t v97 = v57;
  uint64_t v58 = v80;
  uint64_t v59 = swift_getWitnessTable();
  sub_23CEE8D90(&qword_268BCE360, &qword_268BCE338);
  char v60 = v77;
  sub_23D005478();
  sub_23CF50F78(v47);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v40, v58);
  uint64_t v61 = sub_23CEE8D90(&qword_268BCE368, &qword_268BCE340);
  uint64_t v94 = v59;
  uint64_t v95 = v61;
  uint64_t v62 = v82;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v64 = v78;
  sub_23CFBE07C(v60, v62, v63);
  uint64_t v65 = *(void (**)(char *, uint64_t))(v81 + 8);
  v65(v60, v62);
  sub_23CFBE07C(v64, v62, v63);
  return ((uint64_t (*)(char *, uint64_t))v65)(v64, v62);
}

uint64_t sub_23CF50D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void (*)(void))MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v15 - v11;
  v10();
  sub_23CFBE07C(v9, a3, a4);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, a3);
  sub_23CFBE07C(v12, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, a3);
}

uint64_t sub_23CF50E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23CF50150(*(void *)(v2 + 8), *(void (**)(void, void, void))(v2 + 16), *(void *)(a1 + 16), *(void *)(a1 + 24), a2, *(double *)v2);
}

uint64_t sub_23CF50EA8()
{
  return sub_23CF50D60(v0[5], v0[6], v0[2], v0[3]);
}

uint64_t sub_23CF50EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D0048C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF50F1C(uint64_t a1)
{
  uint64_t v2 = sub_23D0048C8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23CF50F78(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE338);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23CF50FD8()
{
  return swift_getWitnessTable();
}

uint64_t sub_23CF51210()
{
  swift_getKeyPath();
  sub_23CF524F8(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DD8();
  swift_release();
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_23CF512B0()
{
  swift_getKeyPath();
  sub_23CF524F8(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DD8();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_23CF51350()
{
  swift_getKeyPath();
  sub_23CF524F8(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DD8();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_23CF513F0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF524F8(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_23CF51498()
{
  return swift_release();
}

uint64_t sub_23CF51568(uint64_t a1, char a2)
{
  *(unsigned char *)(a1 + 16) = a2;
  if (qword_268BCCC78 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  sub_23CF524F8(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DD8();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  sub_23CF524F8((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DC8();
  return swift_release();
}

uint64_t sub_23CF51718@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF524F8(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_23CF517C0()
{
  return swift_release();
}

uint64_t sub_23CF51890@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF524F8(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 18);
  return result;
}

uint64_t sub_23CF51938()
{
  return swift_release();
}

uint64_t sub_23CF51A08(uint64_t result, char a2)
{
  *(unsigned char *)(result + 18) = a2 & 1;
  return result;
}

unsigned char *sub_23CF51A14()
{
  sub_23D003E08();
  if (qword_268BCCC78 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_268BDAD20;
  swift_getKeyPath();
  sub_23CF524F8((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DD8();
  swift_release();
  if (*(unsigned char *)(v1 + 16))
  {
    char v2 = 1;
  }
  else
  {
    uint64_t v3 = qword_268BDAD20;
    swift_getKeyPath();
    sub_23D003DD8();
    swift_release();
    char v2 = *(unsigned char *)(v3 + 17) ^ 1;
  }
  v0[18] = 0;
  char v4 = v2 & 1;
  v0[16] = v4;
  v0[17] = v4;
  return v0;
}

uint64_t sub_23CF51B70()
{
  return swift_release();
}

uint64_t sub_23CF51CF8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Feedback20OnboardingController___observationRegistrar;
  uint64_t v2 = sub_23D003E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_23CF51D98()
{
  return type metadata accessor for OnboardingController();
}

uint64_t type metadata accessor for OnboardingController()
{
  uint64_t result = qword_268BCE378;
  if (!qword_268BCE378) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF51DEC()
{
  uint64_t result = sub_23D003E18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OnboardingController.Step(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CF51F58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingController.Step()
{
  return &type metadata for OnboardingController.Step;
}

unint64_t sub_23CF51F94()
{
  unint64_t result = qword_268BCE388;
  if (!qword_268BCE388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE388);
  }
  return result;
}

uint64_t sub_23CF51FE8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF524F8((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_23CF52090()
{
  return swift_release();
}

uint64_t sub_23CF52160@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF524F8((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_23CF52208()
{
  return swift_release();
}

uint64_t sub_23CF522D8()
{
  if (qword_268BCCC78 != -1) {
    swift_once();
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  sub_23CF524F8((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DC8();
  swift_release();
  uint64_t v1 = swift_getKeyPath();
  MEMORY[0x270FA5388](v1);
  sub_23D003DC8();
  return swift_release();
}

void sub_23CF52498()
{
  sub_23CF9B98C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_23CF524C0()
{
  sub_23CF9B88C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_23CF524E8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 18) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_23CF524F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_23CF52550()
{
}

void sub_23CF52568()
{
}

void sub_23CF52580()
{
}

void sub_23CF52598()
{
}

uint64_t sub_23CF525B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_23CF525C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_23CF525D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_23CF525EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_23CF3A620;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_23CF526FC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return MEMORY[0x270FA2498](sub_23CF5271C, 0, 0);
}

uint64_t sub_23CF5271C()
{
  sub_23CF52CF8(*(void *)(v0 + 184), v0 + 136);
  if (*(void *)(v0 + 160))
  {
    sub_23CF115F8((long long *)(v0 + 136), v0 + 96);
    uint64_t v1 = *(void *)(v0 + 120);
    uint64_t v2 = *(void *)(v0 + 128);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), v1);
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 32) + **(int **)(v2 + 32));
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_23CF528C4;
    uint64_t v4 = *(void *)(v0 + 184);
    return v7(v0 + 16, v4, v1, v2);
  }
  else
  {
    sub_23CF52E14(v0 + 136);
    sub_23CF52E74();
    swift_allocError();
    swift_willThrow();
    unsigned int v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_23CF528C4()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_23CF52A50;
  }
  else {
    uint64_t v2 = sub_23CF529D8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23CF529D8()
{
  uint64_t v1 = *(_OWORD **)(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  sub_23CF05EA8((_OWORD *)(v0 + 16), v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_23CF52A50()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23CF52AB4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE3B0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23D008CE0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD838);
  uint64_t v1 = sub_23D004028();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v10 = *(void *)(v2 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23D008C80;
  uint64_t v5 = *(void (**)(unint64_t, void, uint64_t))(v2 + 104);
  v5(v4 + v3, *MEMORY[0x263F3C2C0], v1);
  uint64_t v6 = sub_23CF4F7F8(v4);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v0 + 56) = &type metadata for GenmojiDonationDecoder;
  *(void *)(v0 + 64) = &off_26F0CB388;
  *(void *)(v0 + 32) = v6;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23D008CD0;
  v5(v7 + v3, *MEMORY[0x263F3C2C8], v1);
  v5(v7 + v3 + v10, *MEMORY[0x263F3C268], v1);
  uint64_t v8 = sub_23CF4F7F8(v7);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  *(void *)(v0 + 96) = &type metadata for ImagePlaygroundDonationDecoder;
  *(void *)(v0 + 104) = &off_26F0CFCE0;
  *(void *)(v0 + 72) = v8;
  *(void *)(v0 + 136) = &type metadata for CatchUpDonationDecoder;
  *(void *)(v0 + 144) = &off_26F0CF2E8;
  off_268BCE390 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_23CF52CF8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result;
  if (qword_268BCCC30 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v4 = *((void *)off_268BCE390 + 2);
  if (v4)
  {
    uint64_t v5 = (char *)off_268BCE390 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_23CF11708((uint64_t)v5, (uint64_t)v8);
      uint64_t v6 = v9;
      uint64_t v7 = v10;
      __swift_project_boxed_opaque_existential_1(v8, v9);
      if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v2, v6, v7)) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      v5 += 40;
      if (!--v4)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    sub_23CF11708((uint64_t)v8, a2);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
LABEL_8:
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_23CF52E14(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD480);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23CF52E74()
{
  unint64_t result = qword_268BCE3A8;
  if (!qword_268BCE3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE3A8);
  }
  return result;
}

uint64_t sub_23CF52EC8()
{
  return 1;
}

uint64_t sub_23CF52ED0()
{
  return sub_23D0062F8();
}

uint64_t sub_23CF52F14()
{
  return sub_23D0062D8();
}

uint64_t sub_23CF52F3C()
{
  return sub_23D0062F8();
}

uint64_t getEnumTagSinglePayload for DonationDecoders.Err(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for DonationDecoders.Err(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x23CF5306CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23CF53094()
{
  return 0;
}

ValueMetadata *type metadata accessor for DonationDecoders.Err()
{
  return &type metadata for DonationDecoders.Err;
}

unint64_t sub_23CF530B0()
{
  unint64_t result = qword_268BCE3B8;
  if (!qword_268BCE3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE3B8);
  }
  return result;
}

void *sub_23CF53104(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v9 = *v10;
    if (EnumCaseMultiPayload == 1)
    {
      v9[1] = v10[1];
      swift_retain();
      swift_retain();
      uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE90) + 32);
      uint64_t v13 = (char *)v9 + v12;
      uint64_t v14 = (char *)v10 + v12;
      uint64_t v15 = sub_23D0048A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(int *)(a3 + 24);
    unint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *unint64_t v18 = *v19;
    *((void *)v18 + 1) = *((void *)v19 + 1);
  }
  swift_retain();
  return v4;
}

uint64_t sub_23CF53288(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v6 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE90) + 32);
    uint64_t v7 = sub_23D0048A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }

  return swift_release();
}

uint64_t sub_23CF53360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *uint64_t v8 = *v9;
  if (EnumCaseMultiPayload == 1)
  {
    v8[1] = v9[1];
    swift_retain();
    swift_retain();
    uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE90) + 32);
    uint64_t v12 = (char *)v8 + v11;
    uint64_t v13 = (char *)v9 + v11;
    uint64_t v14 = sub_23D0048A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_23CF53498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_23CEE8BB4(a1 + v7, &qword_268BCD618);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v8 = *v9;
    if (EnumCaseMultiPayload == 1)
    {
      v8[1] = v9[1];
      swift_retain();
      swift_retain();
      uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE90) + 32);
      uint64_t v12 = (char *)v8 + v11;
      uint64_t v13 = (char *)v9 + v11;
      uint64_t v14 = sub_23D0048A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23CF53600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v10;
    uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE90) + 32);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = sub_23D0048A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23CF53720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_23CEE8BB4(a1 + v7, &qword_268BCD618);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v11;
      uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE90) + 32);
      uint64_t v13 = (char *)v8 + v12;
      uint64_t v14 = (char *)v9 + v12;
      uint64_t v15 = sub_23D0048A8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_release();
  return a1;
}

uint64_t sub_23CF53878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF5388C);
}

uint64_t sub_23CF5388C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE3C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_23CF53964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF53978);
}

uint64_t sub_23CF53978(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE3C0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  return result;
}

uint64_t type metadata accessor for DebugSheet()
{
  uint64_t result = qword_268BCE3C8;
  if (!qword_268BCE3C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_23CF53A8C()
{
  sub_23CF53B2C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_23CF53B2C()
{
  if (!qword_268BCE3D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCDE90);
    unint64_t v0 = sub_23D004608();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268BCE3D8);
    }
  }
}

uint64_t sub_23CF53B88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF53BA4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF55F1C((unint64_t *)&qword_268BCDB70, (void (*)(uint64_t))type metadata accessor for DebugController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_23CF53C4C()
{
  return swift_release();
}

uint64_t sub_23CF53D1C@<X0>(char *a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE3E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE3E8);
  MEMORY[0x270FA5388](v28);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE3F0);
  uint64_t v8 = *(void *)(v31 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v31);
  uint64_t v29 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v27 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE3F8);
  uint64_t v12 = swift_allocBox();
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v14 = swift_retain();
  sub_23CF396E8(v14, v13);
  swift_release();
  type metadata accessor for BatchController();
  sub_23CF55F1C(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D005758();
  uint64_t v33 = v1;
  uint64_t v34 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE400);
  sub_23CEE8D90(&qword_268BCE408, &qword_268BCE400);
  sub_23D0051A8();
  sub_23D005778();
  sub_23D0048D8();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v7, v5, v2);
  uint64_t v15 = &v7[*(int *)(v28 + 36)];
  long long v16 = v42;
  *((_OWORD *)v15 + 4) = v41;
  *((_OWORD *)v15 + 5) = v16;
  *((_OWORD *)v15 + 6) = v43;
  long long v17 = v38;
  *(_OWORD *)uint64_t v15 = v37;
  *((_OWORD *)v15 + 1) = v17;
  long long v18 = v40;
  *((_OWORD *)v15 + 2) = v39;
  *((_OWORD *)v15 + 3) = v18;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v19 = (char *)(v1 + *(int *)(type metadata accessor for DebugSheet() + 24));
  char v20 = *v19;
  uint64_t v21 = *((void *)v19 + 1);
  char v35 = v20;
  uint64_t v36 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD170);
  sub_23D0055E8();
  sub_23CF55950();
  sub_23CF559F0();
  uint64_t v22 = v29;
  sub_23D005458();
  swift_release();
  swift_release();
  sub_23CEE8BB4((uint64_t)v7, &qword_268BCE3E8);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v24 = v30;
  uint64_t v25 = v31;
  v23(v30, v22, v31);
  v23(v32, v24, v25);
  return swift_release();
}

uint64_t sub_23CF541B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v62 = a3;
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE430);
  uint64_t v74 = *(void *)(v61 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v61);
  uint64_t v73 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v76 = (char *)&v57 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v72 = (char *)&v57 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  char v71 = (char *)&v57 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v65 = (char *)&v57 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v64 = (char *)&v57 - v15;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE438);
  uint64_t v67 = *(void *)(v70 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v70);
  uint64_t v75 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v57 - v18;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE440);
  uint64_t v66 = *(void *)(v69 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v69);
  uint64_t v68 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v63 = (char *)&v57 - v22;
  sub_23D004BC8();
  uint64_t v80 = sub_23D005208();
  uint64_t v81 = v23;
  char v82 = v24 & 1;
  uint64_t v83 = v25;
  uint64_t v79 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0D0);
  sub_23CEE8D90(&qword_268BCDF10, &qword_268BCD0D0);
  sub_23D005728();
  sub_23D004BC8();
  uint64_t v80 = sub_23D005208();
  uint64_t v81 = v26;
  char v82 = v27 & 1;
  uint64_t v83 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE448);
  sub_23CEE8D90(&qword_268BCE450, &qword_268BCE448);
  char v60 = v19;
  sub_23D005728();
  sub_23D004BC8();
  uint64_t v80 = sub_23D005208();
  uint64_t v81 = v29;
  char v82 = v30 & 1;
  uint64_t v83 = v31;
  uint64_t v77 = a2;
  uint64_t v78 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE458);
  sub_23CF55A5C();
  uint64_t v32 = v64;
  sub_23D005728();
  sub_23D004BC8();
  uint64_t v80 = sub_23D005208();
  uint64_t v81 = v33;
  char v82 = v34 & 1;
  uint64_t v83 = v35;
  uint64_t v36 = v65;
  sub_23D005728();
  sub_23D004BC8();
  uint64_t v80 = sub_23D005208();
  uint64_t v81 = v37;
  char v82 = v38 & 1;
  uint64_t v83 = v39;
  long long v40 = v71;
  sub_23D005728();
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  long long v41 = v68;
  uint64_t v42 = v69;
  v58(v68, v63, v69);
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  v59(v75, v19, v70);
  long long v43 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v44 = v72;
  uint64_t v45 = v32;
  uint64_t v46 = v61;
  v43(v72, v45, v61);
  v43(v76, v36, v46);
  v43(v73, v40, v46);
  uint64_t v47 = v62;
  v58(v62, v41, v42);
  double v48 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE468);
  uint64_t v49 = v70;
  v59(&v47[v48[12]], v75, v70);
  v43(&v47[v48[16]], v44, v46);
  v43(&v47[v48[20]], v76, v46);
  uint64_t v50 = v73;
  v43(&v47[v48[24]], v73, v46);
  long long v51 = *(void (**)(char *, uint64_t))(v74 + 8);
  v51(v71, v46);
  v51(v65, v46);
  v51(v64, v46);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v67 + 8);
  uint64_t v53 = v49;
  v52(v60, v49);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v66 + 8);
  uint64_t v55 = v69;
  v54(v63, v69);
  v51(v50, v46);
  v51(v76, v46);
  v51(v72, v46);
  v52(v75, v53);
  return ((uint64_t (*)(char *, uint64_t))v54)(v68, v55);
}

uint64_t sub_23CF54A9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugSheet();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  sub_23CF55C80(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_23CF55E44((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  return sub_23D0055F8();
}

uint64_t sub_23CF54BC8()
{
  return sub_23D0055D8();
}

uint64_t sub_23CF54C34@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF55894(a1);
}

uint64_t sub_23CF54C50()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE3F8);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v13 - v5;
  uint64_t v7 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v4, v7, v0);
  sub_23D005748();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  swift_getKeyPath();
  sub_23D005768();
  swift_release();
  v8(v6, v0);
  uint64_t v9 = v13[7];
  uint64_t v10 = v13[8];
  uint64_t v11 = v13[9];
  swift_getKeyPath();
  v13[1] = v9;
  void v13[2] = v10;
  v13[3] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE00);
  sub_23D005688();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_23D005628();
}

uint64_t sub_23CF54E54@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF55894(a1);
}

uint64_t sub_23CF54E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for DebugSheet();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0D0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF55C80(a2, (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_23CF55E44((uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  swift_retain();
  sub_23D0055F8();
  uint64_t v15 = sub_23D005508();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(a3, v12, v9);
  uint64_t v17 = (uint64_t *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE458) + 36));
  *uint64_t v17 = KeyPath;
  v17[1] = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_23CF550A8()
{
  uint64_t v0 = sub_23D0048A8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE90);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE3F8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_23D005738();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v9 = v12;
  swift_getKeyPath();
  uint64_t v12 = v9;
  sub_23CF55F1C(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  swift_retain();
  swift_release();
  sub_23CF51B70();
  swift_release();
  type metadata accessor for DebugSheet();
  sub_23CF39F20((uint64_t)v3);
  MEMORY[0x23ECF50E0](v1);
  sub_23D004898();
  sub_23D005678();
  return sub_23CEE8BB4((uint64_t)v3, &qword_268BCDE90);
}

uint64_t sub_23CF55334@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF55894(a1);
}

uint64_t sub_23CF55358()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE3F8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  sub_23D005738();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v5 = v8;
  swift_getKeyPath();
  uint64_t v8 = v5;
  sub_23CF55F1C(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  swift_retain();
  swift_release();
  sub_23CF522D8();
  return swift_release();
}

uint64_t sub_23CF554E0@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF55894(a1);
}

uint64_t sub_23CF554FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD0D0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_23D0055F8();
  uint64_t v6 = sub_23D0054F8();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE458) + 36));
  *uint64_t v8 = KeyPath;
  v8[1] = v6;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_23CF55658()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE3F8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = swift_projectBox();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  sub_23D005738();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v5 = v11;
  swift_getKeyPath();
  uint64_t v11 = v5;
  sub_23CF55F1C(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  uint64_t v6 = *(void *)(v5 + 24);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v9 = v6;
  uint64_t v10 = 0;
  uint64_t v11 = v6;
  sub_23CF55F1C((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DC8();
  swift_release();
  return swift_release();
}

uint64_t sub_23CF55874@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF55894(a1);
}

uint64_t sub_23CF55894@<X0>(uint64_t a1@<X8>)
{
  sub_23D004BC8();
  uint64_t result = sub_23D005208();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

double sub_23CF558F4@<D0>(_OWORD *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE428);
  sub_23D0055B8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_23CF55948@<X0>(char *a1@<X8>)
{
  return sub_23CF541B4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_23CF55950()
{
  unint64_t result = qword_268BCE410;
  if (!qword_268BCE410)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE3E8);
    sub_23CEE8D90(&qword_268BCE418, &qword_268BCE3E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE410);
  }
  return result;
}

unint64_t sub_23CF559F0()
{
  unint64_t result = qword_268BCE420;
  if (!qword_268BCE420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE420);
  }
  return result;
}

uint64_t sub_23CF55A44()
{
  return sub_23CF54A9C(*(void *)(v0 + 16));
}

uint64_t sub_23CF55A4C()
{
  return sub_23CF54C50();
}

uint64_t sub_23CF55A54@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF54E78(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_23CF55A5C()
{
  unint64_t result = qword_268BCE460;
  if (!qword_268BCE460)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE458);
    sub_23CEE8D90(&qword_268BCDF10, &qword_268BCD0D0);
    sub_23CEE8D90(&qword_268BCE168, &qword_268BCE170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE460);
  }
  return result;
}

uint64_t sub_23CF55B20@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF554FC(a1);
}

uint64_t sub_23CF55B64@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF554FC(a1);
}

uint64_t sub_23CF55BA8()
{
  return sub_23CF55658();
}

uint64_t sub_23CF55BB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_23D004AB8();
  *a1 = result;
  return result;
}

uint64_t sub_23CF55BDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_23D004AB8();
  *a1 = result;
  return result;
}

uint64_t sub_23CF55C08()
{
  return sub_23D004AC8();
}

uint64_t sub_23CF55C34()
{
  return sub_23D004AC8();
}

uint64_t sub_23CF55C70()
{
  return sub_23CF55358();
}

uint64_t sub_23CF55C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugSheet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF55CE4()
{
  uint64_t v1 = type metadata accessor for DebugSheet();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v7 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE90) + 32);
    uint64_t v8 = sub_23D0048A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_23CF55E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugSheet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF55EA8()
{
  type metadata accessor for DebugSheet();

  return sub_23CF550A8();
}

uint64_t sub_23CF55F1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF55F64()
{
  uint64_t v1 = type metadata accessor for DebugSheet();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v7 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCDE90) + 32);
    uint64_t v8 = sub_23D0048A8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_23CF560BC()
{
  type metadata accessor for DebugSheet();

  return sub_23CF54BC8();
}

uint64_t sub_23CF5611C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t FBKInlineThumbsDown.feedbackController.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
  MEMORY[0x23ECF50E0](&v2, v0);
  return v2;
}

void *sub_23CF561DC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
  uint64_t result = MEMORY[0x23ECF50E0](&v4, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_23CF56234(id *a1)
{
  id v1 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
  return sub_23D005678();
}

uint64_t FBKInlineThumbsDown.feedbackController.setter()
{
  return sub_23D005678();
}

void (*FBKInlineThumbsDown.feedbackController.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  v3[5] = *v1;
  v3[6] = v5;
  uint64_t v6 = (void *)v1[2];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  swift_retain();
  swift_retain();
  id v7 = v6;
  v3[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
  MEMORY[0x23ECF50E0]();
  return sub_23CF56380;
}

void sub_23CF56380(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  *(void *)(*(void *)a1 + 32) = v3;
  uint64_t v4 = (void *)*((void *)v2 + 7);
  uint64_t v5 = *((void *)v2 + 6);
  *(void *)uint64_t v2 = *((void *)v2 + 5);
  *((void *)v2 + 1) = v5;
  *((void *)v2 + 2) = v4;
  if (a2)
  {
    id v6 = v3;
    sub_23D005678();
    swift_release();
    swift_release();
  }
  else
  {
    sub_23D005678();
    swift_release();
    swift_release();
  }

  free(v2);
}

uint64_t FBKInlineThumbsDown.$feedbackController.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
  sub_23D005698();
  return v1;
}

uint64_t FBKInlineThumbsDown.subject.getter()
{
  return sub_23CF56A28(MEMORY[0x263F1B730]);
}

uint64_t type metadata accessor for FBKInlineThumbsDown()
{
  uint64_t result = qword_268BCE480;
  if (!qword_268BCE480) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF564F0(uint64_t a1)
{
  uint64_t v2 = sub_23D003F98();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  type metadata accessor for FBKInlineThumbsDown();
  v9(v6, (uint64_t)v8, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  sub_23D005678();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t FBKInlineThumbsDown.subject.setter(uint64_t a1)
{
  uint64_t v2 = sub_23D003F98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FBKInlineThumbsDown();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  sub_23D005678();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*FBKInlineThumbsDown.subject.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = sub_23D003F98();
  *uint64_t v3 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[1] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  v3[4] = v7;
  uint64_t v8 = malloc(*(void *)(*(void *)(v7 - 8) + 64));
  v3[5] = v8;
  uint64_t v9 = type metadata accessor for FBKInlineThumbsDown();
  sub_23CF56948(v1 + *(int *)(v9 + 20), (uint64_t)v8);
  MEMORY[0x23ECF50E0](v7);
  return sub_23CF56870;
}

void sub_23CF56870(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 40);
  uint64_t v4 = *(void **)(*(void *)a1 + 16);
  uint64_t v5 = *(void **)(*(void *)a1 + 24);
  if (a2)
  {
    uint64_t v6 = *v2;
    uint64_t v7 = v2[1];
    (*(void (**)(void, void *, void))(v7 + 16))(*(void *)(*(void *)a1 + 16), v5, *v2);
    sub_23D005678();
    sub_23CF569B0((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    sub_23D005678();
    sub_23CF569B0((uint64_t)v3);
  }
  free(v3);
  free(v5);
  free(v4);

  free(v2);
}

uint64_t sub_23CF56948(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF569B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FBKInlineThumbsDown.$subject.getter()
{
  return sub_23CF56A28(MEMORY[0x263F1B740]);
}

uint64_t sub_23CF56A28(uint64_t (*a1)(uint64_t))
{
  type metadata accessor for FBKInlineThumbsDown();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  return a1(v2);
}

uint64_t FBKInlineThumbsDown.disabled.getter()
{
  type metadata accessor for FBKInlineThumbsDown();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE478);
  MEMORY[0x23ECF50E0](&v2, v0);
  return v2;
}

void *sub_23CF56ADC@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for FBKInlineThumbsDown();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE478);
  uint64_t result = MEMORY[0x23ECF50E0](&v4, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_23CF56B50()
{
  return sub_23D005678();
}

uint64_t FBKInlineThumbsDown.disabled.setter()
{
  return sub_23D005678();
}

void (*FBKInlineThumbsDown.disabled.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FBKInlineThumbsDown() + 24));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  v3[3] = *v4;
  v3[4] = v6;
  LOBYTE(v4) = *((unsigned char *)v4 + 16);
  *((unsigned char *)v3 + 19) = (_BYTE)v4;
  *uint64_t v3 = v5;
  v3[1] = v6;
  *((unsigned char *)v3 + 16) = (_BYTE)v4;
  swift_retain();
  swift_retain();
  v3[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE478);
  MEMORY[0x23ECF50E0]();
  return sub_23CF56CCC;
}

void sub_23CF56CCC(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 17);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 19);
  *uint64_t v1 = *(void *)(*(void *)a1 + 24);
  v1[1] = v3;
  *((unsigned char *)v1 + 16) = v4;
  *((unsigned char *)v1 + 18) = v2;
  sub_23D005678();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t FBKInlineThumbsDown.$disabled.getter()
{
  type metadata accessor for FBKInlineThumbsDown();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE478);
  sub_23D005698();
  return v1;
}

uint64_t sub_23CF56DA0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FBKInlineThumbsDown() + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_23CF57E44;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;

  return sub_23CEE935C(v4);
}

uint64_t sub_23CF56E34(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_23CF57E3C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for FBKInlineThumbsDown() + 28));
  uint64_t v8 = *v7;
  sub_23CEE935C(v3);
  uint64_t result = sub_23CEE93B4(v8);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t FBKInlineThumbsDown.onFormComplete.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FBKInlineThumbsDown() + 28));
  sub_23CEE935C(v1);
  return v1;
}

uint64_t FBKInlineThumbsDown.onFormComplete.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for FBKInlineThumbsDown() + 28));
  uint64_t result = sub_23CEE93B4(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FBKInlineThumbsDown.onFormComplete.modify())()
{
  return nullsub_1;
}

uint64_t FBKInlineThumbsDown.init(feedbackController:subject:disabled:onFormComplete:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  uint64_t v17 = (int *)type metadata accessor for FBKInlineThumbsDown();
  uint64_t v18 = (void *)((char *)a9 + v17[7]);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  uint64_t result = sub_23CF57068(a4, (uint64_t)a9 + v17[5]);
  uint64_t v20 = (char *)a9 + v17[6];
  *(void *)uint64_t v20 = a5;
  *((void *)v20 + 1) = a6;
  v20[16] = a7;
  *uint64_t v18 = a8;
  v18[1] = a10;
  return result;
}

uint64_t sub_23CF57068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FBKInlineThumbsDown.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_23D003F38();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void))(v8 + 104))(v7, *MEMORY[0x263F3C1D8]);
  uint64_t v9 = type metadata accessor for FBKInlineThumbsDown();
  sub_23D005698();
  uint64_t v10 = (uint64_t *)((char *)v1 + *(int *)(v9 + 28));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v22 = *v1;
  long long v23 = *(_OWORD *)(v1 + 1);
  sub_23CEE935C(v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
  sub_23D005698();
  uint64_t v13 = v24;
  uint64_t v14 = v25;
  uint64_t v15 = v26;
  uint64_t v16 = (uint64_t *)((char *)v1 + *(int *)(v9 + 24));
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  LOBYTE(v16) = *((unsigned char *)v16 + 16);
  uint64_t v22 = v17;
  *(void *)&long long v23 = v18;
  BYTE8(v23) = (_BYTE)v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE478);
  sub_23D005698();
  return sub_23CF72744((uint64_t)v7, (uint64_t)v4, v11, v12, v13, v14, v15, v21, v24, v25, v26);
}

uint64_t sub_23CF572D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF57300()
{
  type metadata accessor for FBKInlineThumbsDown();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  return MEMORY[0x23ECF50E0](v0);
}

uint64_t *initializeBufferWithCopyOfBuffer for FBKInlineThumbsDown(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = (void *)a2[2];
    a1[1] = a2[1];
    a1[2] = (uint64_t)v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    swift_retain();
    swift_retain();
    id v13 = v8;
    swift_retain();
    swift_retain();
    uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
    uint64_t v15 = (char *)v10 + v14;
    uint64_t v16 = &v11[v14];
    uint64_t v17 = sub_23D003F98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[6];
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v18;
    uint64_t v21 = (char *)a2 + v18;
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    v20[16] = v21[16];
    long long v23 = (uint64_t *)((char *)a1 + v19);
    uint64_t v24 = (uint64_t *)((char *)a2 + v19);
    uint64_t v25 = *v24;
    swift_retain();
    swift_retain();
    if (v25)
    {
      uint64_t v26 = v24[1];
      *long long v23 = v25;
      v23[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)long long v23 = *(_OWORD *)v24;
    }
  }
  return a1;
}

uint64_t destroy for FBKInlineThumbsDown(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();

  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
  uint64_t v6 = sub_23D003F98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  uint64_t result = swift_release();
  if (*(void *)(a1 + *(int *)(a2 + 28)))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for FBKInlineThumbsDown(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (void *)a2[2];
  a1[2] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
  *uint64_t v9 = *(void *)((char *)a2 + v8);
  v9[1] = v11;
  swift_retain();
  swift_retain();
  id v12 = v7;
  swift_retain();
  swift_retain();
  uint64_t v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
  uint64_t v14 = (char *)v9 + v13;
  uint64_t v15 = &v10[v13];
  uint64_t v16 = sub_23D003F98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[6];
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  v19[16] = v20[16];
  uint64_t v22 = (void *)((char *)a1 + v18);
  long long v23 = (void *)((char *)a2 + v18);
  uint64_t v24 = *v23;
  swift_retain();
  swift_retain();
  if (v24)
  {
    uint64_t v25 = v23[1];
    *uint64_t v22 = v24;
    v22[1] = v25;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  }
  return a1;
}

void *assignWithCopy for FBKInlineThumbsDown(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)a2[2];
  uint64_t v7 = (void *)a1[2];
  a1[2] = v6;
  id v8 = v6;

  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
  swift_retain();
  swift_release();
  *((void *)v10 + 1) = *((void *)v11 + 1);
  swift_retain();
  swift_release();
  uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
  uint64_t v13 = &v10[v12];
  uint64_t v14 = &v11[v12];
  uint64_t v15 = sub_23D003F98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  swift_retain();
  swift_release();
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_retain();
  swift_release();
  v17[16] = v18[16];
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = *(void *)((char *)a1 + v19);
  uint64_t v23 = *v21;
  if (!v22)
  {
    if (v23)
    {
      uint64_t v25 = v21[1];
      *uint64_t v20 = v23;
      v20[1] = v25;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    return a1;
  }
  if (!v23)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v24 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v24;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for FBKInlineThumbsDown(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  uint64_t v9 = *(void *)(a2 + v6 + 8);
  *uint64_t v7 = *(void *)(a2 + v6);
  v7[1] = v9;
  uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = sub_23D003F98();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  uint64_t v18 = (void *)(a1 + v15);
  uint64_t v19 = (uint64_t *)(a2 + v15);
  uint64_t v20 = *v19;
  if (*v19)
  {
    uint64_t v21 = v19[1];
    *uint64_t v18 = v20;
    v18[1] = v21;
  }
  else
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  }
  return a1;
}

void *assignWithTake for FBKInlineThumbsDown(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = (void *)a1[2];
  a1[2] = a2[2];

  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_release();
  uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
  uint64_t v11 = &v8[v10];
  uint64_t v12 = &v9[v10];
  uint64_t v13 = sub_23D003F98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  swift_release();
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_release();
  v15[16] = v16[16];
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = *(void *)((char *)a1 + v17);
  uint64_t v21 = *v19;
  if (!v20)
  {
    if (v21)
    {
      uint64_t v23 = v19[1];
      *uint64_t v18 = v21;
      v18[1] = v23;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    return a1;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v22 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v22;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FBKInlineThumbsDown(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF57B30);
}

uint64_t sub_23CF57B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FBKInlineThumbsDown(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF57BF8);
}

uint64_t sub_23CF57BF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_23CF57CA4()
{
  sub_23CF57D50();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_23CF57D50()
{
  if (!qword_268BCE490)
  {
    sub_23D003F98();
    unint64_t v0 = sub_23D0056B8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_268BCE490);
    }
  }
}

unint64_t sub_23CF57DAC()
{
  unint64_t result = qword_268BCE498;
  if (!qword_268BCE498)
  {
    type metadata accessor for FBKInlineViewButton();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE498);
  }
  return result;
}

uint64_t sub_23CF57E04()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23CF57E3C(uint64_t a1)
{
  return sub_23CFF58C0(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_23CF57E44(void *a1)
{
  return sub_23CFF5894(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_23CF57E50(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_23D005828();
  uint64_t v19 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_23D005858();
  uint64_t v11 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF28970();
  uint64_t v14 = (void *)sub_23D005D28();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(unsigned char *)(v15 + 24) = a2 & 1;
  *(void *)(v15 + 32) = a3;
  *(void *)(v15 + 40) = a4;
  aBlock[4] = sub_23CF585C0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23CF6021C;
  aBlock[3] = &block_descriptor_2;
  uint64_t v16 = _Block_copy(aBlock);
  sub_23CF585E8(a1, a2 & 1);
  swift_retain();
  swift_release();
  sub_23D005848();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_23CF585F4((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
  sub_23CF28A80();
  sub_23D005ED8();
  MEMORY[0x23ECF57B0](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v18);
}

uint64_t sub_23CF58128(unint64_t a1, char a2, uint64_t (*a3)(BOOL))
{
  if (a2)
  {
    BOOL v5 = 0;
  }
  else
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_23D0060B8();
      sub_23CF585B4((id)a1, 0);
    }
    else
    {
      uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    BOOL v5 = v4 > 0;
  }
  return a3(v5);
}

uint64_t sub_23CF581B0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BatchVisibilityController()
{
  return self;
}

uint64_t sub_23CF581E4(void (*a1)(uint64_t), uint64_t a2)
{
  type metadata accessor for ScoreController();
  uint64_t v4 = swift_allocObject();
  *(_WORD *)(v4 + 16) = 0;
  sub_23D003E08();
  if (qword_268BCCC78 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_268BDAD20;
  swift_getKeyPath();
  sub_23CF585F4((unint64_t *)&qword_268BCD1A0, (void (*)(uint64_t))type metadata accessor for UserDefaultsController);
  sub_23D003DD8();
  swift_release();
  *(void *)(v4 + 24) = *(void *)(v5 + 24);
  swift_getKeyPath();
  sub_23CF585F4((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  swift_release();
  if (*(uint64_t *)(v4 + 24) < 1)
  {
    sub_23D003ED8();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = a2;
    swift_retain();
    MEMORY[0x23ECF3910](1, 1, sub_23CF58564, v6);
    swift_release();
  }
  else
  {
    a1(1);
  }
  return swift_release();
}

uint64_t _s8Feedback29BatchEvaluationViewControllerC010shouldShowB2UI10completionyySbc_tFZ_0(void (*a1)(uint64_t), uint64_t a2)
{
  if (MEMORY[0x23ECF5E10]())
  {
    return sub_23CF581E4(a1, a2);
  }
  else
  {
    if (qword_268BCCCA8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_23D004498();
    __swift_project_value_buffer(v5, (uint64_t)qword_268BDAD58);
    uint64_t v6 = sub_23D004478();
    os_log_type_t v7 = sub_23D005C78();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_23CEE3000, v6, v7, "BatchUI disabled", v8, 2u);
      MEMORY[0x23ECF6610](v8, -1, -1);
    }

    return ((uint64_t (*)(void))a1)(0);
  }
}

uint64_t sub_23CF5852C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23CF58564(void *a1, char a2)
{
  return sub_23CF57E50(a1, a2 & 1, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_23CF58570()
{
  sub_23CF585B4(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_23CF585B4(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23CF585C0()
{
  return sub_23CF58128(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(uint64_t (**)(BOOL))(v0 + 32));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

id sub_23CF585E8(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_23CF585F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF5863C(uint64_t result)
{
  if (result)
  {
    id v1 = (id)result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
    if (swift_dynamicCast())
    {
      uint64_t v2 = 3;
      if (v3 == 4) {
        uint64_t v2 = 6;
      }
      if (v3) {
        return v2;
      }
      else {
        return 5;
      }
    }
    else
    {
      return 3;
    }
  }
  return result;
}

uint64_t destroy for BatchStatusView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for BatchStatusView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  char v7 = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BatchStatusView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  char v4 = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for BatchStatusView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  char v7 = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchStatusView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchStatusView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchStatusView()
{
  return &type metadata for BatchStatusView;
}

uint64_t sub_23CF589F0()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_23CF58A0C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_23CF58CB8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_268BCCD20, &qword_268BCCF08).n128_u64[0];
  return result;
}

uint64_t sub_23CF58A68@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23D005CA8();
    uint64_t v31 = (void *)sub_23D005028();
    sub_23D004468();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  sub_23D0048D8();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_23CEE8444(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

double sub_23CF58C5C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_23CF58CB8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_268BCE050, &qword_268BCE058).n128_u64[0];
  return result;
}

__n128 sub_23CF58CB8@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23D005CA8();
    uint64_t v28 = (void *)sub_23D005028();
    sub_23D004468();

    uint64_t v19 = a17;
  }
  sub_23D0048D8();
  sub_23CEE82CC(v17, a9, a16);
  uint64_t v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *uint64_t v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_23CF58E88@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23D005CA8();
    uint64_t v23 = (void *)sub_23D005028();
    sub_23D004468();
  }
  sub_23D0048D8();
  long long v24 = *(_OWORD *)(v13 + 208);
  *(_OWORD *)(a9 + 192) = *(_OWORD *)(v13 + 192);
  *(_OWORD *)(a9 + 208) = v24;
  *(_OWORD *)(a9 + 224) = *(_OWORD *)(v13 + 224);
  long long v25 = *(_OWORD *)(v13 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v13 + 128);
  *(_OWORD *)(a9 + 144) = v25;
  long long v26 = *(_OWORD *)(v13 + 176);
  *(_OWORD *)(a9 + 160) = *(_OWORD *)(v13 + 160);
  *(_OWORD *)(a9 + 176) = v26;
  long long v27 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v27;
  long long v28 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v28;
  long long v29 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v29;
  long long v30 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v30;
  *(_OWORD *)(a9 + 296) = v35;
  *(_OWORD *)(a9 + 312) = v36;
  *(_OWORD *)(a9 + 328) = v37;
  *(_OWORD *)(a9 + 344) = v38;
  *(_OWORD *)(a9 + 248) = v32;
  *(unsigned char *)(a9 + 240) = *(unsigned char *)(v13 + 240);
  *(_OWORD *)(a9 + 264) = v33;
  *(_OWORD *)(a9 + 280) = v34;

  return sub_23CF5A280(v13);
}

uint64_t sub_23CF5907C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_23D005CA8();
    uint64_t v23 = (void *)sub_23D005028();
    sub_23D004468();
  }
  sub_23D0048D8();
  long long v24 = v13[1];
  long long v37 = *v13;
  long long v38 = v24;
  sub_23CF5AE14((uint64_t)&v37, (uint64_t)v40);
  long long v26 = v13[1];
  long long v35 = v13[2];
  long long v25 = v35;
  *(_OWORD *)a9 = *v13;
  *(_OWORD *)(a9 + 16) = v26;
  *(_OWORD *)(a9 + 32) = v25;
  *(_OWORD *)(a9 + 152) = v34;
  *(_OWORD *)(a9 + 136) = v33;
  *(_OWORD *)(a9 + 120) = v32;
  *(_OWORD *)(a9 + 104) = v31;
  *(_OWORD *)(a9 + 56) = v28;
  uint64_t v39 = *((void *)&v38 + 1);
  char v36 = *((unsigned char *)v13 + 48);
  *(unsigned char *)(a9 + 48) = v36;
  *(_OWORD *)(a9 + 72) = v29;
  *(_OWORD *)(a9 + 88) = v30;
  sub_23CF5AE70((uint64_t)v40);
  sub_23CF5AEA4((uint64_t)&v39);
  return sub_23CF5AED0((uint64_t)&v35);
}

uint64_t sub_23CF59264(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  _OWORD v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_23CF5AD30((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_23CF592C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a4;
  sub_23D005B88();
  v4[7] = sub_23D005B78();
  uint64_t v6 = sub_23D005B48();
  v4[8] = v6;
  v4[9] = v5;
  return MEMORY[0x270FA2498](sub_23CF59358, v6, v5);
}

uint64_t sub_23CF59358()
{
  uint64_t v1 = *(void *)(v0 + 48);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 56);
  *(unsigned char *)(v0 + 104) = 1;
  *(void *)(v0 + 80) = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD170);
  sub_23D0055D8();
  char v2 = *(unsigned char *)(v1 + 80);
  uint64_t v3 = swift_retain();
  *(void *)(v0 + 88) = sub_23CF39C9C(v3, v2);
  swift_release();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_23CF59450;
  return sub_23CF9C524();
}

uint64_t sub_23CF59450()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return MEMORY[0x270FA2498](sub_23CF59594, v3, v2);
}

uint64_t sub_23CF59594()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 56);
  *(unsigned char *)(v0 + 105) = 0;
  sub_23D0055D8();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_23CF5961C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23D005BC8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23D005BB8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_23CEE8BB4(a1, &qword_268BCE4A0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23D005B48();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_23CF597C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCF88);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 24);
  int v10 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v67 = *(void *)(a1 + 16);
  if (!v11)
  {
    if (v10)
    {
      if (v10 == 2)
      {
        uint64_t v71 = sub_23D005578();
LABEL_8:
        uint64_t v12 = sub_23D0054E8();
        goto LABEL_13;
      }
      uint64_t v71 = sub_23D005578();
      goto LABEL_12;
    }
    uint64_t v71 = sub_23D005578();
LABEL_10:
    uint64_t v12 = sub_23D005548();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v71 = sub_23D005578();
  if (!v10) {
    goto LABEL_10;
  }
  if (v10 != 1) {
    goto LABEL_8;
  }
LABEL_12:
  uint64_t v12 = sub_23D0054F8();
LABEL_13:
  uint64_t v66 = v12;
  uint64_t v13 = sub_23D005128();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  uint64_t v65 = sub_23D005158();
  sub_23CEE8BB4((uint64_t)v6, &qword_268BCCF88);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&long long v75 = v8;
  *((void *)&v75 + 1) = v7;
  sub_23CEE8D00();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_23D005228();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_23D005188();
  uint64_t v69 = sub_23D0051F8();
  uint64_t v63 = v19;
  uint64_t v64 = v20;
  char v22 = v21;
  swift_release();
  sub_23CEE7DE0(v14, v16, v18);
  swift_bridgeObjectRelease();
  uint64_t v68 = swift_getKeyPath();
  if (v9)
  {
    *(void *)&long long v75 = v67;
    *((void *)&v75 + 1) = v9;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_23D005228();
    uint64_t v25 = v24;
    char v27 = v26 & 1;
    *(void *)&long long v75 = sub_23D005518();
    uint64_t v67 = sub_23D0051D8();
    uint64_t v61 = v29;
    uint64_t v62 = v28;
    uint64_t v60 = v30 & 1;
    sub_23CEE7DE0(v23, v25, v27);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v59 = swift_getKeyPath();
    uint64_t v57 = sub_23D0050F8();
    uint64_t v58 = swift_getKeyPath();
    uint64_t v31 = 1;
  }
  else
  {
    uint64_t v67 = 0;
    uint64_t v61 = 0;
    uint64_t v62 = 0;
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    uint64_t v31 = 0;
    uint64_t v58 = 0;
    uint64_t v57 = 0;
  }
  char v32 = v22 & 1;
  id v33 = objc_msgSend(self, sel_mainBundle);
  uint64_t v56 = sub_23D003BA8();
  uint64_t v55 = v34;

  long long v75 = *(_OWORD *)(a1 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD170);
  sub_23D0055C8();
  int v53 = v74;
  uint64_t v35 = swift_allocObject();
  long long v36 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v35 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v35 + 64) = v36;
  *(_OWORD *)(v35 + 80) = *(_OWORD *)(a1 + 64);
  *(unsigned char *)(v35 + 96) = *(unsigned char *)(a1 + 80);
  long long v37 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v35 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v35 + 32) = v37;
  char v72 = v32;
  LOBYTE(v75) = 1;
  unsigned __int8 v74 = v32;
  char v73 = 1;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v39 = v65;
  uint64_t v38 = v66;
  *(void *)(a2 + 16) = v71;
  *(void *)(a2 + 24) = v38;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = v39;
  uint64_t v40 = v63;
  uint64_t v41 = v64;
  *(void *)(a2 + 48) = v69;
  *(void *)(a2 + 56) = v40;
  *(unsigned char *)(a2 + 64) = v32;
  uint64_t v43 = v67;
  uint64_t v42 = v68;
  *(void *)(a2 + 72) = v41;
  *(void *)(a2 + 80) = v42;
  *(unsigned char *)(a2 + 88) = 1;
  uint64_t v66 = v38;
  uint64_t v67 = v43;
  uint64_t v54 = a1;
  uint64_t v44 = v62;
  *(void *)(a2 + 96) = v43;
  *(void *)(a2 + 104) = v44;
  uint64_t v45 = v61;
  *(void *)(a2 + 112) = v60;
  *(void *)(a2 + 120) = v45;
  *(void *)(a2 + 128) = v59;
  *(void *)(a2 + 136) = v31;
  v52[1] = v31;
  uint64_t v46 = v57;
  *(void *)(a2 + 144) = v58;
  *(void *)(a2 + 152) = v46;
  *(void *)(a2 + 160) = 0;
  *(unsigned char *)(a2 + 168) = 1;
  uint64_t v47 = v55;
  *(void *)(a2 + 176) = v56;
  *(void *)(a2 + 184) = v47;
  *(unsigned char *)(a2 + 192) = v53;
  *(void *)(a2 + 200) = sub_23CF5A628;
  *(void *)(a2 + 208) = v35;
  *(unsigned char *)(a2 + 216) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23CEE8444(v69, v40, v32);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v48 = v61;
  uint64_t v49 = v62;
  char v50 = v60;
  sub_23CF5A37C(v43, v62, v60, v61);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23CF5A630(v54);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23CF5A210(v67, v49, v50, v48);
  sub_23CEE7DE0(v69, v63, v72);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF59DF8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE4A0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23D005BA8();
  uint64_t v5 = sub_23D005BC8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_23D005B88();
  sub_23CF5A630(a1);
  uint64_t v6 = sub_23D005B78();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x263F8F500];
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v8;
  long long v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v7 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v7 + 80) = v9;
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(a1 + 64);
  *(unsigned char *)(v7 + 112) = *(unsigned char *)(a1 + 80);
  long long v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 48) = v10;
  sub_23CF5961C((uint64_t)v4, (uint64_t)&unk_268BCE4B0, v7);
  return swift_release();
}

void *sub_23CF59F34@<X0>(void *a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 48);
  _OWORD v7[2] = *(_OWORD *)(v1 + 32);
  _OWORD v7[3] = v3;
  v7[4] = *(_OWORD *)(v1 + 64);
  char v8 = *(unsigned char *)(v1 + 80);
  long long v4 = *(_OWORD *)(v1 + 16);
  v7[0] = *(_OWORD *)v1;
  v7[1] = v4;
  sub_23D004C58();
  sub_23CF597C8((uint64_t)v7, (uint64_t)v9);
  *(_OWORD *)&v10[199] = v9[10];
  *(_OWORD *)&v10[215] = v9[11];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v10;
  *(_OWORD *)&v11[9] = *(_OWORD *)&v10[9];
  *(_OWORD *)&v10[135] = v9[6];
  *(_OWORD *)&v10[151] = v9[7];
  *(_OWORD *)&unsigned char v10[167] = v9[8];
  *(_OWORD *)&v10[183] = v9[9];
  *(_OWORD *)&v10[71] = v9[2];
  *(_OWORD *)&v10[87] = v9[3];
  *(_OWORD *)&v10[103] = v9[4];
  *(_OWORD *)&v10[119] = v9[5];
  *(_OWORD *)&v10[39] = v9[0];
  *(_OWORD *)&v10[55] = v9[1];
  char v12 = 0;
  if (qword_268BCCC10 != -1) {
    swift_once();
  }
  double v5 = *(double *)&qword_268BDACE8;
  sub_23D005778();
  sub_23CF58E88(0.0, 1, 0.0, 1, v5, 0, 0.0, 1, (uint64_t)__src, 0.0, 1, 0.0, 1);
  sub_23CF5A110((uint64_t)v9);
  return memcpy(a1, __src, 0x168uLL);
}

uint64_t sub_23CF5A110(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  char v4 = *(unsigned char *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v8 = *(void *)(a1 + 112);
  uint64_t v9 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 120);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23CEE7DE0(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23CF5A210(v5, v9, v8, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23CF5A210(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23CEE7DE0(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_23CF5A280(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  char v4 = *(unsigned char *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v8 = *(void *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 128);
  uint64_t v7 = *(void *)(a1 + 144);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23CEE8444(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23CF5A37C(v5, v9, v8, v7);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_23CF5A37C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23CEE8444(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23CF5A3EC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *char v4 = v2;
  v4[1] = sub_23CF5A4C8;
  return v6(a1);
}

uint64_t sub_23CF5A4C8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_23CF5A5D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 97, 7);
}

uint64_t sub_23CF5A628()
{
  return sub_23CF59DF8(v0 + 16);
}

uint64_t sub_23CF5A630(uint64_t a1)
{
  return a1;
}

uint64_t sub_23CF5A698()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 113, 7);
}

uint64_t sub_23CF5A6F8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_23CF3A620;
  return sub_23CF592C0(a1, v4, v5, v1 + 32);
}

uint64_t sub_23CF5A7AC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23CF5A7E4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_23CF3A620;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_268BCE4B8 + dword_268BCE4B8);
  return v6(a1, v4);
}

unsigned char *storeEnumTagSinglePayload for BatchStatusView.Config.StatusType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CF5A968);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchStatusView.Config.StatusType()
{
  return &type metadata for BatchStatusView.Config.StatusType;
}

uint64_t destroy for BatchStatusView.Config()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BatchStatusView.Config(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BatchStatusView.Config(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BatchStatusView.Config(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchStatusView.Config(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchStatusView.Config(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchStatusView.Config()
{
  return &type metadata for BatchStatusView.Config;
}

unint64_t sub_23CF5AC00()
{
  unint64_t result = qword_268BCE4C8;
  if (!qword_268BCE4C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE4D0);
    sub_23CF5AC7C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE4C8);
  }
  return result;
}

unint64_t sub_23CF5AC7C()
{
  unint64_t result = qword_268BCE4D8;
  if (!qword_268BCE4D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE4E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE4D8);
  }
  return result;
}

unint64_t sub_23CF5ACDC()
{
  unint64_t result = qword_268BCE4E8;
  if (!qword_268BCE4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE4E8);
  }
  return result;
}

uint64_t sub_23CF5AD30(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v5 = sub_23D006218();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a2 + 24);
  if (!v7)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && v7 == v8;
  if (v9 || (v10 = sub_23D006218(), uint64_t result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    if (*(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32))
    {
      uint64_t v11 = *(void *)(a1 + 48);
      uint64_t v12 = *(void *)(a2 + 48);
      if (v11)
      {
        if (v12 && (*(void *)(a1 + 40) == *(void *)(a2 + 40) && v11 == v12 || (sub_23D006218() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v12)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_23CF5AE14(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23CF5AE70(uint64_t a1)
{
  return a1;
}

uint64_t sub_23CF5AEA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_23CF5AED0(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for TextChip()
{
  return &type metadata for TextChip;
}

uint64_t sub_23CF5AF0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF5AF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD3B0);
  MEMORY[0x270FA5388](v63);
  uint64_t v65 = &v58[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v62 = sub_23D0048C8();
  MEMORY[0x270FA5388](v62);
  uint64_t v64 = &v58[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_23D004288();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  uint64_t v61 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v58[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&long long v100 = a1;
  *((void *)&v100 + 1) = a2;
  sub_23CEE8D00();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_23D005228();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v66 = v12;
  uint64_t v67 = v14;
  char v68 = v18;
  uint64_t v69 = v16;
  uint64_t v70 = KeyPath;
  uint64_t v71 = 0;
  char v72 = 1;
  sub_23D005778();
  sub_23CF5907C(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)&v100, 0.0, 1, INFINITY, 0);
  sub_23CEE7DE0(v12, v14, v18);
  swift_release();
  swift_bridgeObjectRelease();
  long long v83 = v108;
  long long v84 = v109;
  uint64_t v85 = v110;
  long long v79 = v104;
  long long v80 = v105;
  long long v81 = v106;
  long long v82 = v107;
  long long v75 = v100;
  long long v76 = v101;
  long long v77 = v102;
  long long v78 = v103;
  int v59 = sub_23D005078();
  sub_23D004578();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  char v73 = 0;
  if (qword_268BCCD00 != -1) {
    swift_once();
  }
  uint64_t v28 = v60;
  uint64_t v29 = __swift_project_value_buffer(v60, (uint64_t)qword_268BDAE30);
  char v30 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v61 + 16);
  v30(v11, v29, v28);
  uint64_t v31 = sub_23D005558();
  char v32 = sub_23D005078();
  long long v96 = v83;
  long long v97 = v84;
  uint64_t v98 = v85;
  long long v92 = v79;
  long long v93 = v80;
  long long v94 = v81;
  long long v95 = v82;
  long long v88 = v75;
  long long v89 = v76;
  long long v90 = v77;
  long long v91 = v78;
  v87[0] = *(_DWORD *)v74;
  *(_DWORD *)((char *)v87 + 3) = *(_DWORD *)&v74[3];
  char v33 = v73;
  if (qword_268BCCCE0 != -1) {
    swift_once();
  }
  uint64_t v34 = __swift_project_value_buffer(v28, (uint64_t)qword_268BDADD0);
  v30(v11, v34, v28);
  uint64_t v35 = sub_23D005558();
  uint64_t v36 = sub_23D005108();
  uint64_t v37 = swift_getKeyPath();
  long long v108 = v96;
  long long v109 = v97;
  *(void *)&long long v110 = v98;
  long long v104 = v92;
  long long v105 = v93;
  long long v106 = v94;
  long long v107 = v95;
  long long v100 = v88;
  long long v101 = v89;
  long long v102 = v90;
  long long v103 = v91;
  BYTE8(v110) = v59;
  *(_DWORD *)((char *)&v110 + 9) = v87[0];
  HIDWORD(v110) = *(_DWORD *)((char *)v87 + 3);
  *(void *)&long long v111 = v21;
  *((void *)&v111 + 1) = v23;
  *(void *)&long long v112 = v25;
  *((void *)&v112 + 1) = v27;
  LOBYTE(v113) = v33;
  *(_DWORD *)((char *)&v113 + 1) = *(_DWORD *)v86;
  DWORD1(v113) = *(_DWORD *)&v86[3];
  *((void *)&v113 + 1) = v31;
  LOBYTE(v114) = v32;
  DWORD1(v114) = *(_DWORD *)&v99[3];
  *(_DWORD *)((char *)&v114 + 1) = *(_DWORD *)v99;
  *((void *)&v114 + 1) = v35;
  *(void *)&long long v115 = v37;
  *((void *)&v115 + 1) = v36;
  uint64_t v38 = v64;
  uint64_t v39 = &v64[*(int *)(v62 + 20)];
  uint64_t v40 = *MEMORY[0x263F19860];
  uint64_t v41 = sub_23D004C28();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v39, v40, v41);
  __asm { FMOV            V0.2D, #12.0 }
  *uint64_t v38 = _Q0;
  uint64_t v47 = v65;
  sub_23CF50EB8((uint64_t)v38, (uint64_t)v65);
  *(_WORD *)&v47[*(int *)(v63 + 36)] = 256;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE4F0);
  sub_23CF5B4B0((uint64_t)v47, (uint64_t)a3 + *(int *)(v48 + 36));
  long long v49 = v113;
  a3[12] = v112;
  a3[13] = v49;
  long long v50 = v115;
  a3[14] = v114;
  a3[15] = v50;
  long long v51 = v109;
  a3[8] = v108;
  a3[9] = v51;
  long long v52 = v111;
  a3[10] = v110;
  a3[11] = v52;
  long long v53 = v105;
  a3[4] = v104;
  a3[5] = v53;
  long long v54 = v107;
  a3[6] = v106;
  a3[7] = v54;
  long long v55 = v101;
  *a3 = v100;
  a3[1] = v55;
  long long v56 = v103;
  a3[2] = v102;
  a3[3] = v56;
  sub_23CF5B518((uint64_t)&v100);
  sub_23CF5B5A4((uint64_t)v47);
  sub_23CF50F1C((uint64_t)v38);
  return sub_23CF5B604((uint64_t)&v100);
}

uint64_t sub_23CF5B498@<X0>(_OWORD *a1@<X8>)
{
  return sub_23CF5AF28(*v1, v1[1], a1);
}

uint64_t sub_23CF5B4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD3B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF5B518(uint64_t a1)
{
  return a1;
}

uint64_t sub_23CF5B5A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD3B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23CF5B604(uint64_t a1)
{
  return a1;
}

unint64_t sub_23CF5B694()
{
  unint64_t result = qword_268BCE4F8;
  if (!qword_268BCE4F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE4F0);
    sub_23CF5B734();
    sub_23CEE8D90(&qword_268BCD3D8, &qword_268BCD3B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE4F8);
  }
  return result;
}

unint64_t sub_23CF5B734()
{
  unint64_t result = qword_268BCE500;
  if (!qword_268BCE500)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE508);
    sub_23CF5B7D4();
    sub_23CEE8D90(&qword_268BCE570, &qword_268BCE578);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE500);
  }
  return result;
}

unint64_t sub_23CF5B7D4()
{
  unint64_t result = qword_268BCE510;
  if (!qword_268BCE510)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE518);
    sub_23CF5B874();
    sub_23CEE8D90(&qword_268BCDA48, (uint64_t *)&unk_268BCDCA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE510);
  }
  return result;
}

unint64_t sub_23CF5B874()
{
  unint64_t result = qword_268BCE520;
  if (!qword_268BCE520)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE528);
    sub_23CF5B970(&qword_268BCE530, &qword_268BCE538, (void (*)(void))sub_23CF5B940);
    sub_23CEE8D90(&qword_268BCDC88, (uint64_t *)&unk_268BCDC90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE520);
  }
  return result;
}

uint64_t sub_23CF5B940()
{
  return sub_23CF5B970(&qword_268BCE540, &qword_268BCE548, (void (*)(void))sub_23CF5B9EC);
}

uint64_t sub_23CF5B970(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23CF5B9EC()
{
  unint64_t result = qword_268BCE550;
  if (!qword_268BCE550)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE558);
    sub_23CEE8D90(&qword_268BCE560, &qword_268BCE568);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE550);
  }
  return result;
}

uint64_t sub_23CF5BA8C(uint64_t a1, unint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  uint64_t v5 = sub_23D003CE8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v22 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCE600);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x263F8EE78];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v12 = v6 + 16;
    uint64_t v28 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v15 = *(void *)(v12 + 56);
    uint64_t v25 = (void (**)(uint64_t, char *, uint64_t))(v12 + 16);
    uint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v23 = v15;
    uint64_t v24 = (void (**)(uint64_t, uint64_t))(v12 - 8);
    v21[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v27 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
    v21[0] = (v12 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v16 = (uint64_t)v22;
    while (1)
    {
      v28(v10, v14, v5);
      char v17 = *v27;
      (*v27)(v10, 0, 1, v5);
      if ((*v26)(v10, 1, v5) == 1) {
        break;
      }
      (*v25)(v16, v10, v5);
      sub_23CF5BEC8(v16, v29, &v31);
      if (v3)
      {
        (*v24)(v16, v5);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v18 = ((uint64_t (*)(uint64_t, uint64_t))*v24)(v16, v5);
      if (v31)
      {
        uint64_t v30 = 0;
        MEMORY[0x23ECF5540](v18);
        if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_23D005B18();
        }
        sub_23D005B38();
        sub_23D005B08();
        uint64_t v3 = v30;
        uint64_t v16 = (uint64_t)v22;
      }
      v14 += v23;
      if (!--v11)
      {
        v17(v10, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v19(v10, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_23CF5BDAC()
{
  uint64_t v0 = sub_23D004498();
  __swift_allocate_value_buffer(v0, qword_268BCE580);
  __swift_project_value_buffer(v0, (uint64_t)qword_268BCE580);
  return sub_23D004488();
}

unint64_t FBKFeedbackForm.addSandboxExtensionToURLs()()
{
  unint64_t v4 = MEMORY[0x263F8EE78];
  swift_beginAccess();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_23CF5BA8C(v1, &v4);
  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_sandboxExtensionAttachments) = v2;
  swift_bridgeObjectRelease();
  return v4;
}

void sub_23CF5BEC8(uint64_t a1@<X0>, unint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v38 = a3;
  uint64_t v35 = type metadata accessor for URLError();
  uint64_t v37 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v34 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_23D003CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v32 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v33 = a1;
  v12((char *)&v32 - v10, a1, v6);
  uint64_t v13 = (objc_class *)type metadata accessor for SandboxExtensionURL();
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  uint64_t v15 = &v14[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state];
  *(void *)uint64_t v15 = 0;
  v15[8] = 1;
  uint64_t v16 = &v14[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  v12(&v14[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_url], (uint64_t)v11, v6);
  v40.receiver = v14;
  v40.super_class = v13;
  char v17 = (char *)objc_msgSendSuper2(&v40, sel_init);
  uint64_t v18 = sub_23CF5C2A4();
  if (v3)
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    uint64_t v20 = v32;
    v12(v32, v33, v6);
    uint64_t v41 = v3;
    id v21 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
    swift_dynamicCast();
    uint64_t v22 = v39;
    uint64_t v23 = (uint64_t)v34;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v34, v20, v6);
    uint64_t v24 = v36;
    *(void *)(v23 + *(int *)(v35 + 20)) = v22;
    unint64_t v25 = *v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v24 = v25;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v25 = sub_23CF22C58(0, *(void *)(v25 + 16) + 1, 1, v25);
      *uint64_t v24 = v25;
    }
    unint64_t v28 = *(void *)(v25 + 16);
    unint64_t v27 = *(void *)(v25 + 24);
    if (v28 >= v27 >> 1)
    {
      unint64_t v25 = sub_23CF22C58(v27 > 1, v28 + 1, 1, v25);
      *uint64_t v24 = v25;
    }
    *(void *)(v25 + 16) = v28 + 1;
    sub_23CF5E164(v23, v25+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v28);

    char v17 = 0;
  }
  else
  {
    uint64_t v29 = v18;
    uint64_t v30 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);

    uint64_t v31 = (uint64_t *)&v17[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken];
    *uint64_t v31 = v29;
    v31[1] = v30;
    swift_bridgeObjectRelease();
  }
  *uint64_t v38 = v17;
}

uint64_t sub_23CF5C270(void *a1, uint64_t a2, unint64_t *a3)
{
  return swift_release();
}

uint64_t sub_23CF5C2A4()
{
  char v2 = sub_23D003C68();
  if (v1)
  {
  }
  else if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE5F8);
    sub_23D003C98();
    return v13[0];
  }
  if (qword_268BCCC38 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_23D004498();
  __swift_project_value_buffer(v4, (uint64_t)qword_268BCE580);
  id v5 = v0;
  uint64_t v6 = sub_23D004478();
  os_log_type_t v7 = sub_23D005C98();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v13[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = sub_23D003CB8();
    v13[3] = sub_23CF231B0(v10, v11, v13);
    sub_23D005E48();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23CEE3000, v6, v7, "Cannot generate sandbox extension. URL is not reachable at path: [%s]", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v9, -1, -1);
    MEMORY[0x23ECF6610](v8, -1, -1);
  }
  else
  {
  }
  sub_23CF4B594();
  swift_allocError();
  *uint64_t v12 = 0;
  return swift_willThrow();
}

uint64_t sub_23CF5C4F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = *MEMORY[0x263EF8000];
  if (*MEMORY[0x263EF8000])
  {
    sub_23D005A08();
    sub_23D0059A8();
    swift_bridgeObjectRelease();
    uint64_t v3 = sandbox_extension_issue_file();
    swift_release();
    if (v3)
    {
      uint64_t v4 = sub_23D005A08();
      uint64_t v6 = v5;
      uint64_t result = MEMORY[0x23ECF6610](v3, -1, -1);
      *a1 = v4;
      a1[1] = v6;
    }
    else
    {
      sub_23CF4B594();
      swift_allocError();
      *os_log_type_t v7 = 3;
      return swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23CF5C5DC()
{
  if (v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state + 8] == 1)
  {
    uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken + 8];
    if (v1)
    {
      uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken];
      uint64_t v3 = qword_268BCCC38;
      swift_bridgeObjectRetain();
      if (v3 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_23D004498();
      __swift_project_value_buffer(v4, (uint64_t)qword_268BCE580);
      uint64_t v5 = v0;
      uint64_t v6 = sub_23D004478();
      os_log_type_t v7 = sub_23D005C88();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v14 = v2;
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        uint64_t v9 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 136315138;
        uint64_t v15 = v9;
        uint64_t v10 = sub_23D003CB8();
        sub_23CF231B0(v10, v11, &v15);
        sub_23D005E48();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23CEE3000, v6, v7, "Consuming Sandbox Extension for url %s", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v9, -1, -1);
        uint64_t v12 = v8;
        uint64_t v2 = v14;
        MEMORY[0x23ECF6610](v12, -1, -1);
      }
      else
      {
      }
      sub_23CF5C8C0(v2, v1, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23CF5DA78();
      swift_allocError();
      *(_DWORD *)uint64_t v13 = 0;
      *(unsigned char *)(v13 + 4) = 1;
      swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23CF5C83C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sandbox_extension_consume();
  if (result == -1)
  {
    int v5 = MEMORY[0x23ECF3F20]();
    sub_23CF5DA78();
    swift_allocError();
    *(_DWORD *)uint64_t v6 = v5;
    *(unsigned char *)(v6 + 4) = 0;
    return swift_willThrow();
  }
  else
  {
    uint64_t v4 = a2 + OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state;
    *(void *)uint64_t v4 = result;
    *(unsigned char *)(v4 + 8) = 0;
  }
  return result;
}

void sub_23CF5C8C0(uint64_t a1, uint64_t a2, char *a3)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_23D005FB8();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    uint64_t v5 = sandbox_extension_consume();
    if (v5 == -1)
    {
      int v7 = MEMORY[0x23ECF3F20]();
      sub_23CF5DA78();
      swift_allocError();
      *(_DWORD *)uint64_t v8 = v7;
      *(unsigned char *)(v8 + 4) = 0;
      swift_willThrow();
    }
    else
    {
      uint64_t v6 = &a3[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state];
      *(void *)uint64_t v6 = v5;
      v6[8] = 0;
    }
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    }
    else {
      uint64_t v4 = sub_23D006028();
    }
    sub_23CF5DACC(v4);
  }
}

void sub_23CF5CA10()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state];
  if (v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state + 8])
  {
    __break(1u);
  }
  else
  {
    if (qword_268BCCC38 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_23D004498();
    __swift_project_value_buffer(v2, (uint64_t)qword_268BCE580);
    uint64_t v3 = v0;
    uint64_t v4 = sub_23D004478();
    os_log_type_t v5 = sub_23D005C88();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v13 = v7;
      uint64_t v8 = sub_23D003CB8();
      sub_23CF231B0(v8, v9, &v13);
      sub_23D005E48();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23CEE3000, v4, v5, "Releasing Sandbox Extension for url %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v7, -1, -1);
      MEMORY[0x23ECF6610](v6, -1, -1);
    }
    else
    {
    }
    int v10 = sandbox_extension_release();
    if (v10 == sub_23D0044B8())
    {
      *(void *)uint64_t v1 = 0;
      v1[8] = 1;
    }
    else
    {
      int v11 = MEMORY[0x23ECF3F20]();
      sub_23CF5DA78();
      swift_allocError();
      *(_DWORD *)uint64_t v12 = v11;
      *(unsigned char *)(v12 + 4) = 0;
      swift_willThrow();
    }
  }
}

void sub_23CF5CC64(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)sub_23D003C48();
  os_log_type_t v5 = (void *)sub_23D005918();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  if (*(void *)(v2 + OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_23D005918();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = (id)sub_23D005918();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);
  swift_unknownObjectRelease();
}

uint64_t sub_23CF5CE1C(char *a1, char *a2)
{
  return sub_23CF074A8(*a1, *a2);
}

uint64_t sub_23CF5CE28()
{
  return sub_23D0062F8();
}

uint64_t sub_23CF5CEAC()
{
  sub_23D0059D8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF5CF1C()
{
  return sub_23D0062F8();
}

uint64_t sub_23CF5CF9C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_23D006118();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_23CF5CFFC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7107189;
  if (!*v1) {
    uint64_t v2 = 0x54786F62646E6173;
  }
  unint64_t v3 = 0xEC0000006E656B6FLL;
  if (*v1) {
    unint64_t v3 = 0xE300000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23CF5D03C()
{
  if (*v0) {
    return 7107189;
  }
  else {
    return 0x54786F62646E6173;
  }
}

uint64_t sub_23CF5D078@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_23D006118();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_23CF5D0DC()
{
  return 0;
}

void sub_23CF5D0E8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23CF5D0F4(uint64_t a1)
{
  unint64_t v2 = sub_23CF5D9E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_23CF5D130(uint64_t a1)
{
  unint64_t v2 = sub_23CF5D9E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

id sub_23CF5D19C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SandboxExtensionURL();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23CF5D258(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE5D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23CF5D9E0();
  sub_23D006318();
  v8[15] = 0;
  swift_bridgeObjectRetain();
  sub_23D0061A8();
  if (v1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v8[14] = 1;
    sub_23D003CE8();
    sub_23CF5DA34(&qword_268BCE5E0);
    sub_23D0061D8();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void *sub_23CF5D440(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = sub_23D003CE8();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE5C0);
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = &v2[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state];
  *(void *)unint64_t v9 = 0;
  v9[8] = 1;
  int v10 = (uint64_t *)&v2[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken];
  *int v10 = 0;
  v10[1] = 0;
  uint64_t v11 = a1[3];
  uint64_t v26 = a1;
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_23CF5D9E0();
  uint64_t v13 = v2;
  unint64_t v25 = v8;
  uint64_t v14 = v27;
  sub_23D006308();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);

    swift_bridgeObjectRelease();
    type metadata accessor for SandboxExtensionURL();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v15 = v6;
    uint64_t v17 = v22;
    uint64_t v16 = v23;
    char v29 = 0;
    uint64_t v18 = v24;
    *int v10 = sub_23D006148();
    v10[1] = v19;
    swift_bridgeObjectRelease();
    char v29 = 1;
    sub_23CF5DA34(&qword_268BCE5D0);
    sub_23D006178();
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v13[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_url], v15, v4);

    id v21 = (objc_class *)type metadata accessor for SandboxExtensionURL();
    v28.receiver = v13;
    v28.super_class = v21;
    uint64_t v12 = objc_msgSendSuper2(&v28, sel_init);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v25, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  return v12;
}

void *sub_23CF5D784@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for SandboxExtensionURL());
  uint64_t result = sub_23CF5D440(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_23CF5D7DC(void *a1)
{
  return sub_23CF5D258(a1);
}

unint64_t sub_23CF5D800(uint64_t a1)
{
  if ((a1 & 0x100000000) != 0) {
    return 0xD00000000000001ALL;
  }
  sub_23D005FC8();
  swift_bridgeObjectRelease();
  sub_23D0061F8();
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

unint64_t sub_23CF5D8B8()
{
  return sub_23CF5D800(*v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32));
}

uint64_t sub_23CF5D8D8()
{
  return type metadata accessor for SandboxExtensionURL();
}

uint64_t type metadata accessor for SandboxExtensionURL()
{
  uint64_t result = qword_268BCE5B0;
  if (!qword_268BCE5B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF5D92C()
{
  uint64_t result = sub_23D003CE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SandboxExtensionURL.State()
{
  return &type metadata for SandboxExtensionURL.State;
}

unint64_t sub_23CF5D9E0()
{
  unint64_t result = qword_268BCE5C8;
  if (!qword_268BCE5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE5C8);
  }
  return result;
}

uint64_t sub_23CF5DA34(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_23D003CE8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23CF5DA78()
{
  unint64_t result = qword_268BCE5E8;
  if (!qword_268BCE5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE5E8);
  }
  return result;
}

uint64_t sub_23CF5DACC(uint64_t a1)
{
  return sub_23CF5C83C(a1, *(void *)(v1 + 16));
}

void sub_23CF5DAE8(void *a1, uint64_t a2, unint64_t *a3)
{
  if (*((unsigned char *)a1 + OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state + 8) == 1)
  {
    if (qword_268BCCC38 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_23D004498();
    __swift_project_value_buffer(v7, (uint64_t)qword_268BCE580);
    id v8 = a1;
    unint64_t v9 = sub_23D004478();
    os_log_type_t v10 = sub_23D005C88();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v26 = a3;
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v27 = v12;
      uint64_t v13 = sub_23D003CB8();
      sub_23CF231B0(v13, v14, &v27);
      sub_23D005E48();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23CEE3000, v9, v10, "Will consume Sandbox Extension for url %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v12, -1, -1);
      uint64_t v15 = v11;
      a3 = v26;
      MEMORY[0x23ECF6610](v15, -1, -1);
    }
    else
    {
    }
    sub_23CF5C5DC();
    if (v3)
    {
      id v16 = v3;
      id v17 = v3;
      uint64_t v18 = sub_23D004478();
      os_log_type_t v19 = sub_23D005C98();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        uint64_t v27 = v21;
        *(_DWORD *)uint64_t v20 = 136315138;
        id v22 = v3;
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
        uint64_t v23 = sub_23D005998();
        sub_23CF231B0(v23, v24, &v27);
        sub_23D005E48();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_23CEE3000, v18, v19, "Failed to access sandbox extension: %s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v21, -1, -1);
        MEMORY[0x23ECF6610](v20, -1, -1);
      }
      else
      {
      }
      sub_23CF4B594();
      swift_allocError();
      *unint64_t v25 = 4;
      swift_willThrow();
    }
    else
    {
      sub_23D001524((uint64_t)v8 + OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_url, a2, a3);
      sub_23CF5CA10();
    }
  }
}

id sub_23CF5DEA8()
{
  uint64_t v1 = sub_23D003CE8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCE600);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = &v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_state];
  *(void *)id v8 = 0;
  v8[8] = 1;
  unint64_t v9 = (uint64_t *)&v0[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_sandboxToken];
  sub_23CF31A54(0, (unint64_t *)&unk_268BCF180);
  *unint64_t v9 = 0;
  v9[1] = 0;
  os_log_type_t v10 = v0;
  uint64_t v11 = sub_23D005D98();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    uint64_t v13 = sub_23D005948();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  *unint64_t v9 = v13;
  v9[1] = v15;
  swift_bridgeObjectRelease();
  sub_23CF31A54(0, (unint64_t *)&unk_268BCE610);
  uint64_t v16 = sub_23D005D98();
  if (v16)
  {
    id v17 = (void *)v16;
    sub_23D003CA8();

    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
    v18(v7, v4, v1);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v1);
    id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1);
    if (result != 1)
    {
      v18(&v10[OBJC_IVAR____TtC8Feedback19SandboxExtensionURL_url], v7, v1);

      uint64_t v20 = (objc_class *)type metadata accessor for SandboxExtensionURL();
      v21.receiver = v10;
      v21.super_class = v20;
      return objc_msgSendSuper2(&v21, sel_init);
    }
  }
  else
  {
    id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v7, 1, 1, v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_23CF5E164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URLError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)id result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SandboxExtensionError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SandboxExtensionError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)id result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_23CF5E228(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_23CF5E244(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)id result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SandboxExtensionError()
{
  return &type metadata for SandboxExtensionError;
}

unsigned char *storeEnumTagSinglePayload for SandboxExtensionURL.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CF5E340);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SandboxExtensionURL.CodingKeys()
{
  return &type metadata for SandboxExtensionURL.CodingKeys;
}

unint64_t sub_23CF5E37C()
{
  unint64_t result = qword_268BCE620;
  if (!qword_268BCE620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE620);
  }
  return result;
}

unint64_t sub_23CF5E3D4()
{
  unint64_t result = qword_268BCE628;
  if (!qword_268BCE628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE628);
  }
  return result;
}

unint64_t sub_23CF5E42C()
{
  unint64_t result = qword_268BCE630;
  if (!qword_268BCE630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE630);
  }
  return result;
}

uint64_t sub_23CF5E480()
{
  objc_msgSend(self, sel_interfaceWithProtocol_, &unk_26F0E95F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE640);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23D008CE0;
  uint64_t v1 = sub_23CF31A54(0, (unint64_t *)&unk_268BCF9B0);
  *(void *)(v0 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE658);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = type metadata accessor for FBKFeedbackForm();
  *(void *)(v0 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE660);
  *(void *)(v0 + 64) = v2;
  uint64_t v3 = type metadata accessor for SandboxExtensionURL();
  *(void *)(v0 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE668);
  *(void *)(v0 + 96) = v3;
  id v4 = objc_allocWithZone(MEMORY[0x263EFFA08]);
  uint64_t v5 = (void *)sub_23D005AD8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_initWithArray_, v5);

  uint64_t result = sub_23D005BF8();
  __break(1u);
  return result;
}

uint64_t sub_23CF5E640()
{
  objc_msgSend(self, sel_interfaceWithProtocol_, &unk_26F0EC160);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE640);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23D008CD0;
  uint64_t v1 = type metadata accessor for FBKSubmissionError();
  *(void *)(v0 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE648);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = sub_23CF31A54(0, &qword_268BCEBB0);
  *(void *)(v0 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE650);
  *(void *)(v0 + 64) = v2;
  id v3 = objc_allocWithZone(MEMORY[0x263EFFA08]);
  id v4 = (void *)sub_23D005AD8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_initWithArray_, v4);

  uint64_t result = sub_23D005BF8();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for BatchLoadMoreView()
{
  return &type metadata for BatchLoadMoreView;
}

uint64_t sub_23CF5E7F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF5E80C@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_mainBundle);
  uint64_t v3 = sub_23D003BA8();
  uint64_t v5 = v4;

  type metadata accessor for DonationController();
  sub_23CEEDB6C();
  uint64_t v6 = sub_23D004618();
  char v8 = v7;
  uint64_t result = sub_23D0055B8();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 2;
  *(void *)(a1 + 40) = 0xD000000000000012;
  *(void *)(a1 + 48) = 0x800000023D00FB00;
  *(unsigned char *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v6;
  *(unsigned char *)(a1 + 80) = v8 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ScoreLevelUp()
{
  return &type metadata for ScoreLevelUp;
}

uint64_t sub_23CF5E958()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF5E974(uint64_t a1, char a2)
{
  uint64_t v4 = sub_23D004288();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE670);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v25 - v12;
  if (qword_268BCCCD8 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v4, (uint64_t)qword_268BDADB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v14, v4);
  uint64_t v15 = sub_23D005558();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(unsigned char *)(v16 + 24) = a2 & 1;
  id v17 = (uint64_t *)&v11[*(int *)(v8 + 40)];
  *id v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD618);
  swift_storeEnumTagMultiPayload();
  *((void *)v11 + 6) = sub_23CF5F6D4;
  *((void *)v11 + 7) = v16;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)uint64_t v11 = _Q0;
  *((void *)v11 + 2) = 0;
  *((void *)v11 + 3) = 0;
  *((void *)v11 + 4) = v15;
  v11[40] = 1;
  sub_23CF5F6E4((uint64_t)v11, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE248);
  sub_23D004C18();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_23D008C80;
  swift_retain();
  sub_23D004C08();
  sub_23CF4FB10(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_23CF5F74C();
  sub_23D0053B8();
  swift_bridgeObjectRelease();
  return sub_23CEE8BB4((uint64_t)v13, &qword_268BCE670);
}

uint64_t sub_23CF5ECB4@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  char v3 = a1 & 1;
  uint64_t v4 = sub_23D004BB8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v44 = sub_23D005778();
  uint64_t v43 = v5;
  sub_23CF5F168(v3, (uint64_t)v48);
  uint64_t v6 = v48[0];
  uint64_t v42 = v48[1];
  char v41 = v49;
  uint64_t v40 = v50;
  char v39 = v51;
  uint64_t v38 = v52;
  uint64_t v7 = v54;
  uint64_t v37 = v53;
  uint64_t v8 = v55;
  char v9 = v56;
  uint64_t v10 = v57;
  sub_23D004BA8();
  sub_23D004B98();
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_23CF39CF4(v11, v3);
  swift_release();
  swift_getKeyPath();
  v48[0] = v12;
  sub_23CF5F7B0();
  sub_23D003DD8();
  swift_release();
  uint64_t v13 = *(void *)(v12 + 24);
  uint64_t result = swift_release();
  double v15 = floor(sqrt((double)v13 * 0.5));
  if ((~*(void *)&v15 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v15 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v16 = (uint64_t)v15;
  if ((uint64_t)v15 >= 99) {
    uint64_t v16 = 99;
  }
  v48[0] = v16;
  sub_23D004B58();
  sub_23D004B98();
  sub_23D004BD8();
  uint64_t v17 = sub_23D005208();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_23D005118();
  uint64_t v36 = v10;
  uint64_t v22 = sub_23D0051F8();
  uint64_t v35 = v7;
  uint64_t v24 = v23;
  uint64_t v34 = v8;
  char v26 = v25;
  swift_release();
  sub_23CEE7DE0(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_23D005138();
  uint64_t v27 = sub_23D0051B8();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  char v33 = v32 & 1;
  sub_23CEE7DE0(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a2 + 33) = v48[0];
  *(_DWORD *)(a2 + 36) = *(_DWORD *)((char *)v48 + 3);
  *(_DWORD *)(a2 + 49) = *(_DWORD *)v47;
  *(_DWORD *)(a2 + 52) = *(_DWORD *)&v47[3];
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v46[3];
  *(_DWORD *)(a2 + 89) = *(_DWORD *)v46;
  *(_DWORD *)(a2 + 121) = *(_DWORD *)v45;
  *(_DWORD *)(a2 + 124) = *(_DWORD *)&v45[3];
  *(void *)a2 = v44;
  *(void *)(a2 + 8) = v43;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v42;
  *(unsigned char *)(a2 + 32) = v41;
  *(void *)(a2 + 40) = v40;
  *(unsigned char *)(a2 + 48) = v39;
  *(void *)(a2 + 56) = v38;
  *(void *)(a2 + 64) = v37;
  *(void *)(a2 + 72) = v35;
  *(void *)(a2 + 80) = v34;
  *(unsigned char *)(a2 + 88) = v9;
  *(void *)(a2 + 96) = v36;
  *(void *)(a2 + 104) = v27;
  *(void *)(a2 + 112) = v29;
  *(unsigned char *)(a2 + 120) = v33;
  *(void *)(a2 + 128) = v31;
  swift_retain();
  sub_23CEE8444(v35, v34, v9);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v27, v29, v33);
  swift_bridgeObjectRetain();
  sub_23CEE7DE0(v27, v29, v33);
  swift_bridgeObjectRelease();
  swift_release();
  sub_23CEE7DE0(v35, v34, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF5F168@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  char v3 = a1 & 1;
  uint64_t v4 = sub_23D004288();
  uint64_t v49 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v48 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCF88);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_23D004BB8();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_23D0054E8();
  sub_23D005778();
  sub_23D0046C8();
  uint64_t v47 = v51;
  int v46 = v52;
  uint64_t v45 = v53;
  int v44 = v54;
  uint64_t v42 = v56;
  uint64_t v43 = v55;
  sub_23D004BA8();
  sub_23D004B98();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_23CF39CF4(v13, v3);
  swift_release();
  char KeyPath = swift_getKeyPath();
  uint64_t v50 = v14;
  sub_23CF5F7B0();
  sub_23D003DD8();
  swift_release();
  uint64_t v16 = *(void *)(v14 + 24);
  swift_release();
  double v17 = floor(sqrt((double)v16 * 0.5));
  if ((~*(void *)&v17 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v17 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v40 = v4;
  uint64_t v41 = v12;
  uint64_t v18 = (uint64_t)v17;
  if ((uint64_t)v17 >= 99) {
    uint64_t v18 = 99;
  }
  uint64_t v50 = v18;
  sub_23D004B58();
  sub_23D004B98();
  sub_23D004BD8();
  uint64_t v19 = sub_23D005208();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_23D005138();
  uint64_t v24 = sub_23D005128();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
  sub_23D005158();
  sub_23CEE8BB4((uint64_t)v8, &qword_268BCCF88);
  uint64_t v8 = (char *)sub_23D0051F8();
  uint64_t v11 = v25;
  char KeyPath = v26;
  swift_release();
  sub_23CEE7DE0(v19, v21, v23);
  swift_bridgeObjectRelease();
  if (qword_268BCCCD8 != -1) {
    goto LABEL_11;
  }
LABEL_7:
  char v27 = KeyPath & 1;
  uint64_t v28 = v40;
  uint64_t v29 = __swift_project_value_buffer(v40, (uint64_t)qword_268BDADB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v29, v28);
  uint64_t v50 = sub_23D005558();
  uint64_t v30 = sub_23D0051D8();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  sub_23CEE7DE0((uint64_t)v8, (uint64_t)v11, v27);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v37 = v47;
  *(void *)a2 = v41;
  *(void *)(a2 + 8) = v37;
  *(unsigned char *)(a2 + 16) = v46;
  *(void *)(a2 + 24) = v45;
  *(unsigned char *)(a2 + 32) = v44;
  uint64_t v38 = v42;
  *(void *)(a2 + 40) = v43;
  *(void *)(a2 + 48) = v38;
  *(void *)(a2 + 56) = v30;
  *(void *)(a2 + 64) = v32;
  *(unsigned char *)(a2 + 72) = v36;
  *(void *)(a2 + 80) = v34;
  swift_retain();
  sub_23CEE8444(v30, v32, v36);
  swift_bridgeObjectRetain();
  sub_23CEE7DE0(v30, v32, v36);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF5F690()
{
  return sub_23CF5E974(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_23CF5F69C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_23CF5F6D4@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF5ECB4(*(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_23CF5F6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23CF5F74C()
{
  unint64_t result = qword_268BCE678;
  if (!qword_268BCE678)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE678);
  }
  return result;
}

unint64_t sub_23CF5F7B0()
{
  unint64_t result = qword_268BCD1E8;
  if (!qword_268BCD1E8)
  {
    type metadata accessor for ScoreController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCD1E8);
  }
  return result;
}

uint64_t sub_23CF5F808()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t FBKDraftError.description.getter(uint64_t a1)
{
  unint64_t result = 0x206E776F6E6B6E55;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000022;
      break;
    case 4:
      unint64_t result = 0x2064696C61766E49;
      break;
    case 5:
      unint64_t result = 0x6F7774656E206F4ELL;
      break;
    case 6:
      unint64_t result = 0x6E61432072657355;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      sub_23D006238();
      __break(1u);
      JUMPOUT(0x23CF5F9CCLL);
  }
  return result;
}

unint64_t static FBKDraftError.withRawValue(_:)(unint64_t a1)
{
  unint64_t result = sub_23CF5FC80(a1);
  if (v2) {
    return 0;
  }
  return result;
}

unint64_t FBKDraftError.init(rawValue:)(unint64_t a1)
{
  return sub_23CF5FC80(a1);
}

unint64_t static FBKDraftError._nsErrorDomain.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_23CF5FA4C()
{
  return sub_23D0062F8();
}

uint64_t sub_23CF5FAB0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_23CF5FEB0();

  return MEMORY[0x270EEEA70](a1, a2, v4);
}

uint64_t sub_23CF5FAFC()
{
  return sub_23D0062F8();
}

unint64_t sub_23CF5FB5C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_23CF5FC80(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_23CF5FB90()
{
  return FBKDraftError.description.getter(*v0);
}

uint64_t sub_23CF5FB98(uint64_t a1)
{
  unint64_t v2 = sub_23CF5FEB0();

  return MEMORY[0x270EEEA80](a1, v2);
}

uint64_t sub_23CF5FBD4(uint64_t a1)
{
  unint64_t v2 = sub_23CF5FEB0();

  return MEMORY[0x270EEEA78](a1, v2);
}

unint64_t sub_23CF5FC10()
{
  return 0xD000000000000016;
}

uint64_t sub_23CF5FC2C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_23CF5FEB0();

  return MEMORY[0x270EEEA68](a1, a2, v4);
}

unint64_t sub_23CF5FC80(unint64_t result)
{
  if (result > 8) {
    return 0;
  }
  return result;
}

unint64_t sub_23CF5FC94()
{
  unint64_t result = qword_268BCE680;
  if (!qword_268BCE680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE680);
  }
  return result;
}

unint64_t sub_23CF5FCEC()
{
  unint64_t result = qword_268BCE688;
  if (!qword_268BCE688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE688);
  }
  return result;
}

unint64_t sub_23CF5FD44()
{
  unint64_t result = qword_268BCE690;
  if (!qword_268BCE690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE690);
  }
  return result;
}

unint64_t sub_23CF5FD9C()
{
  unint64_t result = qword_268BCE698;
  if (!qword_268BCE698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE698);
  }
  return result;
}

unint64_t sub_23CF5FDF4()
{
  unint64_t result = qword_268BCE6A0;
  if (!qword_268BCE6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE6A0);
  }
  return result;
}

unint64_t sub_23CF5FE4C()
{
  unint64_t result = qword_268BCE6A8;
  if (!qword_268BCE6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE6A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FBKDraftError()
{
  return &type metadata for FBKDraftError;
}

unint64_t sub_23CF5FEB0()
{
  unint64_t result = qword_268BCE6B0;
  if (!qword_268BCE6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE6B0);
  }
  return result;
}

uint64_t sub_23CF5FF04@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v4 = v3;
  char v35 = a1;
  uint64_t v7 = sub_23D003CE8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCE600);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 + 16);
  char v26 = a3;
  uint64_t v27 = a2;
  if (v14)
  {
    double v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v16 = v8 + 16;
    uint64_t v17 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v18 = *(void *)(v16 + 56);
    unint64_t v19 = v16 + 40;
    uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 32);
    uint64_t v31 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v32 = v15;
    uint64_t v33 = v16;
    uint64_t v28 = v18;
    uint64_t v29 = (void (**)(char *, uint64_t))(v16 - 8);
    swift_bridgeObjectRetain();
    uint64_t v34 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v19;
    unint64_t v25 = v19 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v32(v13, v17, v7);
      uint64_t v20 = *v34;
      (*v34)(v13, 0, 1, v7);
      if ((*v30)(v13, 1, v7) == 1) {
        break;
      }
      uint64_t v21 = *v31;
      (*v31)(v10, v13, v7);
      char v22 = v35(v10);
      if (v4)
      {
        (*v29)(v10, v7);
        return swift_bridgeObjectRelease();
      }
      if (v22)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = v26;
        v21(v26, v10, v7);
        return v20(v24, 0, 1, v7);
      }
      (*v29)(v10, v7);
      v17 += v28;
      if (!--v14) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
    unint64_t v25 = (v8 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
LABEL_9:
    v20(v13, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  return v20(v26, 1, 1, v7);
}

uint64_t sub_23CF6021C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_23CF60260()
{
  uint64_t v0 = sub_23D004498();
  __swift_allocate_value_buffer(v0, qword_268BCE6B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_268BCE6B8);
  return sub_23D004488();
}

uint64_t sub_23CF602E4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
  swift_beginAccess();
  return MEMORY[0x23ECF66F0](v1);
}

uint64_t sub_23CF60330()
{
  return swift_unknownObjectRelease();
}

void (*sub_23CF6038C(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x23ECF66F0](v5);
  return sub_23CF60410;
}

void sub_23CF60410(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

void sub_23CF60490(char a1)
{
  uint64_t v2 = v1;
  v30.receiver = v2;
  v30.super_class = (Class)type metadata accessor for DraftingExtensionViewController();
  objc_msgSendSuper2(&v30, sel_viewWillDisappear_, a1 & 1);
  if (qword_268BCCC40 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_23D004498();
  __swift_project_value_buffer(v4, (uint64_t)qword_268BCE6B8);
  uint64_t v5 = sub_23D004478();
  os_log_type_t v6 = sub_23D005CB8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    aBlock[0] = v8;
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v29 = sub_23CF231B0(0xD000000000000015, 0x800000023D011E60, aBlock);
    sub_23D005E48();
    _os_log_impl(&dword_23CEE3000, v5, v6, "%{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v8, -1, -1);
    MEMORY[0x23ECF6610](v7, -1, -1);
  }

  uint64_t v9 = *(void **)&v2[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController];
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = [v10 presentedViewController];
    id v12 = v11;
    if (v11) {

    }
    unsigned int v13 = [v10 isBeingDismissedBySelf];
    uint64_t v14 = sub_23D004478();
    os_log_type_t v15 = sub_23D005CB8();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 67109376;
      LODWORD(aBlock[0]) = v13;
      sub_23D005E48();
      *(_WORD *)(v16 + 8) = 1024;
      LODWORD(aBlock[0]) = v12 != 0;
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v14, v15, "DraftingExtensionViewController will disappear. Did BFTVC dismiss self? %{BOOL}d. Did BFTVC present another view? %{BOOL}d", (uint8_t *)v16, 0xEu);
      MEMORY[0x23ECF6610](v16, -1, -1);
    }

    if ((v13 & 1) == 0 && !v12)
    {
      uint64_t v17 = sub_23D004478();
      os_log_type_t v18 = sub_23D005CB8();
      if (os_log_type_enabled(v17, v18))
      {
        unint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v19 = 0;
        _os_log_impl(&dword_23CEE3000, v17, v18, "Controller is being dismissed by parent. Will delete draft", v19, 2u);
        MEMORY[0x23ECF6610](v19, -1, -1);
      }

      aBlock[4] = (uint64_t)sub_23CF609C8;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_23CF60BC0;
      aBlock[3] = (uint64_t)&block_descriptor_3;
      uint64_t v20 = _Block_copy(aBlock);
      [v10 _deleteCurrentDraftWithCompletion:v20];
      _Block_release(v20);
      uint64_t v21 = sub_23D004478();
      os_log_type_t v22 = sub_23D005CB8();
      if (os_log_type_enabled(v21, v22))
      {
        char v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v23 = 0;
        _os_log_impl(&dword_23CEE3000, v21, v22, "will delete all bug sessions", v23, 2u);
        MEMORY[0x23ECF6610](v23, -1, -1);
      }

      id v24 = [v10 devicesController];
      objc_msgSend(v24, sel_abortAllSessions);
    }
  }
  else
  {
    uint64_t v10 = sub_23D004478();
    os_log_type_t v25 = sub_23D005CB8();
    if (os_log_type_enabled(v10, v25))
    {
      char v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      aBlock[0] = v27;
      *(_DWORD *)char v26 = 136446210;
      uint64_t v29 = sub_23CF231B0(0xD000000000000015, 0x800000023D011E60, aBlock);
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v10, v25, "No BFTVC on %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v27, -1, -1);
      MEMORY[0x23ECF6610](v26, -1, -1);
    }
  }
}

void sub_23CF609C8(void *a1)
{
  if (qword_268BCCC40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_23D004498();
  __swift_project_value_buffer(v2, (uint64_t)qword_268BCE6B8);
  id v3 = a1;
  id v4 = a1;
  oslog = sub_23D004478();
  os_log_type_t v5 = sub_23D005CB8();
  if (os_log_type_enabled(oslog, v5))
  {
    os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)os_log_type_t v6 = 136315138;
    id v8 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE7D0);
    uint64_t v9 = sub_23D005998();
    sub_23CF231B0(v9, v10, &v12);
    sub_23D005E48();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23CEE3000, oslog, v5, "Deleted draft. Error? %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v7, -1, -1);
    MEMORY[0x23ECF6610](v6, -1, -1);
  }
  else
  {
  }
}

void sub_23CF60BC0(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_23CF60C80(char a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DraftingExtensionViewController();
  objc_msgSendSuper2(&v3, sel_viewDidAppear_, a1 & 1);
  sub_23D003E38();
  sub_23CF62614();
}

void sub_23CF60D34()
{
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for DraftingExtensionViewController();
  objc_msgSendSuper2(&v17, sel_viewDidLoad);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F823E8]), sel_init);
  objc_msgSend(v1, sel_setActivityIndicatorViewStyle_, 101);
  objc_msgSend(v1, sel_startAnimating);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_super v3 = v2;
  objc_msgSend(v2, sel_addSubview_, v1);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE6E0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23D00ABB0;
  id v5 = objc_msgSend(v1, sel_centerXAnchor);
  id v6 = objc_msgSend(v0, sel_view);
  if (!v6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = v6;
  id v8 = objc_msgSend(v6, sel_centerXAnchor);

  id v9 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v8);
  *(void *)(v4 + 32) = v9;
  id v10 = objc_msgSend(v1, sel_centerYAnchor);
  id v11 = objc_msgSend(v0, sel_view);
  if (v11)
  {
    uint64_t v12 = v11;
    unsigned int v13 = self;
    id v14 = objc_msgSend(v12, sel_centerYAnchor);

    id v15 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v14);
    *(void *)(v4 + 40) = v15;
    sub_23D005B08();
    sub_23CF31A54(0, &qword_268BCEF00);
    uint64_t v16 = (void *)sub_23D005AD8();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_activateConstraints_, v16);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_23CF60FF4()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session];
  if (v1)
  {
    uint64_t v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v3 = *(void *)(v1 + 80);
    *(void *)(v1 + 80) = sub_23CF6B654;
    *(void *)(v1 + 88) = v2;
    swift_retain();
    swift_retain_n();
    sub_23CEE93B4(v3);
    swift_unknownObjectWeakAssign();
    uint64_t v4 = self;
    id v5 = objc_msgSend(v4, sel_standardUserDefaults);
    unsigned __int8 v6 = sub_23CFB42DC();

    id v7 = objc_msgSend(v4, sel_standardUserDefaults);
    LOBYTE(v5) = sub_23CFB4400();

    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    sub_23CF960F8(v0, v6 & 1, v5 & 1, v1, v8);
    swift_release();
    swift_release_n();
    swift_release();
  }
}

void sub_23CF61174(void *a1, char a2, uint64_t a3)
{
  uint64_t v6 = sub_23D005828();
  char v39 = *(void (***)(char *, uint64_t))(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_23D005858();
  uint64_t v38 = *(uint8_t **)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_23D004498();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x23ECF66F0](a3 + 16);
  if (v16)
  {
    objc_super v17 = (char *)v16;
    if (a2)
    {
      if (a1 == (void *)6)
      {
        sub_23CF61870();
      }
      else if (a1 == (void *)5)
      {
        sub_23CF61E54();
      }
      else
      {
        if (qword_268BCCC40 != -1) {
          swift_once();
        }
        __swift_project_value_buffer(v12, (uint64_t)qword_268BCE6B8);
        objc_super v30 = sub_23D004478();
        os_log_type_t v31 = sub_23D005C98();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v32 = 0;
          _os_log_impl(&dword_23CEE3000, v30, v31, "Failed to authenticate", v32, 2u);
          MEMORY[0x23ECF6610](v32, -1, -1);
        }

        sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
        uint64_t v33 = (void *)sub_23D005D28();
        uint64_t v34 = swift_allocObject();
        *(void *)(v34 + 16) = v17;
        *(void *)(v34 + 24) = a1;
        aBlock[4] = sub_23CF6B6D0;
        aBlock[5] = v34;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_23CF6021C;
        aBlock[3] = &block_descriptor_92;
        char v35 = _Block_copy(aBlock);
        char v36 = v17;
        swift_release();
        sub_23D005848();
        aBlock[0] = MEMORY[0x263F8EE78];
        sub_23CF6B878((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
        sub_23CF28A80();
        sub_23D005ED8();
        MEMORY[0x23ECF57B0](0, v11, v8, v35);
        _Block_release(v35);

        v39[1](v8, v6);
        (*((void (**)(char *, uint64_t))v38 + 1))(v11, v9);
      }
    }
    else
    {
      uint64_t v18 = qword_268BCCC40;
      id v19 = a1;
      if (v18 != -1) {
        swift_once();
      }
      uint64_t v20 = __swift_project_value_buffer(v12, (uint64_t)qword_268BCE6B8);
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v20, v12);
      uint64_t v21 = (void (**)(char *, uint64_t))v19;
      os_log_type_t v22 = sub_23D004478();
      os_log_type_t v23 = sub_23D005CB8();
      if (!os_log_type_enabled(v22, v23))
      {
        sub_23CF6B6D8(a1, 0);
        sub_23CF6B6D8(a1, 0);
        goto LABEL_12;
      }
      id v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v24 = 134349056;
      char v39 = v21;
      id v25 = objc_msgSend(v21, sel_ID);
      if (v25)
      {
        char v26 = v25;
        uint64_t v38 = v24 + 4;
        id v27 = objc_msgSend(v25, sel_integerValue);

        sub_23CF6B6D8(a1, 0);
        aBlock[0] = v27;
        sub_23D005E48();
        sub_23CF6B6D8(a1, 0);
        _os_log_impl(&dword_23CEE3000, v22, v23, "Did start Feedback Session with Form [%{public}ld]", v24, 0xCu);
        MEMORY[0x23ECF6610](v24, -1, -1);
        uint64_t v21 = v39;
LABEL_12:

        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        uint64_t v28 = *(void **)&v17[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub];
        *(void *)&v17[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub] = a1;
        uint64_t v29 = v21;

        v17[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_shouldInitializeViews] = 1;
        sub_23CF62614();

        sub_23CF6B6D8(a1, 0);
        return;
      }
      sub_23CF6B6D8(a1, 0);
      __break(1u);
    }
  }
}

void sub_23CF617B4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(void))(a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
  if (v1)
  {
    sub_23CF31A54(0, &qword_268BCE788);
    swift_retain();
    id v2 = (id)sub_23D005DB8();
    v1();
    sub_23CEE93B4((uint64_t)v1);
  }
}

void sub_23CF61870()
{
  uint64_t v1 = v0;
  if (qword_268BCCC40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_23D004498();
  __swift_project_value_buffer(v2, (uint64_t)qword_268BCE6B8);
  uint64_t v3 = sub_23D004478();
  os_log_type_t v4 = sub_23D005C78();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_23CEE3000, v3, v4, "Showing user cancelled alert", v5, 2u);
    MEMORY[0x23ECF6610](v5, -1, -1);
  }

  type metadata accessor for FBKFeedbackForm();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23D003BA8();

  id v9 = objc_msgSend(v7, (SEL)&selRef_setShouldAllowAppleIDCreation_ + 5, ObjCClassFromMetadata, 0x800000023D0122E0);
  sub_23D003BA8();

  uint64_t v10 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  id v11 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v10, v11, 1, 0x800000023D0123B0);

  id v13 = objc_msgSend(v7, (SEL)&selRef_setShouldAllowAppleIDCreation_ + 5, ObjCClassFromMetadata);
  sub_23D003BA8();

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  id v15 = v1;
  uint64_t v16 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  objc_super v30 = sub_23CF6B5D0;
  uint64_t v31 = v14;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_23CF61DEC;
  uint64_t v29 = &block_descriptor_74;
  objc_super v17 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v18 = self;
  id v19 = objc_msgSend(v18, sel_actionWithTitle_style_handler_, v16, 0, v17, 0x800000023D012420);
  _Block_release(v17);

  objc_msgSend(v12, sel_addAction_, v19);
  id v20 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23D003BA8();

  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v15;
  id v22 = v15;
  os_log_type_t v23 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  objc_super v30 = sub_23CF6B5F8;
  uint64_t v31 = v21;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_23CF61DEC;
  uint64_t v29 = &block_descriptor_80;
  id v24 = _Block_copy(&aBlock);
  swift_release();
  id v25 = objc_msgSend(v18, sel_actionWithTitle_style_handler_, v23, 0, v24, 0x800000023D0124C0);
  _Block_release(v24);

  objc_msgSend(v12, sel_addAction_, v25);
  objc_msgSend(v22, sel_presentViewController_animated_completion_, v12, 1, 0);
}

void sub_23CF61DEC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_23CF61E54()
{
  uint64_t v1 = v0;
  if (qword_268BCCC40 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_23D004498();
  __swift_project_value_buffer(v2, (uint64_t)qword_268BCE6B8);
  uint64_t v3 = sub_23D004478();
  os_log_type_t v4 = sub_23D005C78();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_23CEE3000, v3, v4, "Showing no network alert", v5, 2u);
    MEMORY[0x23ECF6610](v5, -1, -1);
  }

  type metadata accessor for FBKFeedbackForm();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23D003BA8();

  id v9 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000023D012090);
  sub_23D003BA8();

  uint64_t v10 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  id v11 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v10, v11, 1, 0x800000023D012130);

  id v13 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23D003BA8();

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  id v15 = v1;
  uint64_t v16 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  objc_super v30 = sub_23CF6B584;
  uint64_t v31 = v14;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_23CF61DEC;
  uint64_t v29 = &block_descriptor_62;
  objc_super v17 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v18 = self;
  id v19 = objc_msgSend(v18, sel_actionWithTitle_style_handler_, v16, 0, v17, 0x800000023D0121A0);
  _Block_release(v17);

  objc_msgSend(v12, sel_addAction_, v19);
  id v20 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23D003BA8();

  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v15;
  id v22 = v15;
  os_log_type_t v23 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  objc_super v30 = sub_23CF6B5AC;
  uint64_t v31 = v21;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_23CF61DEC;
  uint64_t v29 = &block_descriptor_68;
  id v24 = _Block_copy(&aBlock);
  swift_release();
  id v25 = objc_msgSend(v18, sel_actionWithTitle_style_handler_, v23, 0, v24, 0x800000023D012250);
  _Block_release(v24);

  objc_msgSend(v12, sel_addAction_, v25);
  objc_msgSend(v22, sel_presentViewController_animated_completion_, v12, 1, 0);
}

void sub_23CF623AC(uint64_t a1, uint64_t a2, const char *a3)
{
  if (qword_268BCCC40 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_23D004498();
  __swift_project_value_buffer(v5, (uint64_t)qword_268BCE6B8);
  uint64_t v6 = sub_23D004478();
  os_log_type_t v7 = sub_23D005CB8();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v8 = 0;
    _os_log_impl(&dword_23CEE3000, v6, v7, a3, v8, 2u);
    MEMORY[0x23ECF6610](v8, -1, -1);
  }

  id v9 = *(void (**)(void))(a2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
  if (v9)
  {
    sub_23CF31A54(0, &qword_268BCE788);
    swift_retain();
    id v10 = (id)sub_23D005DB8();
    v9();
    sub_23CEE93B4((uint64_t)v9);
  }
}

uint64_t sub_23CF62528(uint64_t a1, uint64_t a2, const char *a3)
{
  if (qword_268BCCC40 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_23D004498();
  __swift_project_value_buffer(v4, (uint64_t)qword_268BCE6B8);
  uint64_t v5 = sub_23D004478();
  os_log_type_t v6 = sub_23D005CB8();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v7 = 0;
    _os_log_impl(&dword_23CEE3000, v5, v6, a3, v7, 2u);
    MEMORY[0x23ECF6610](v7, -1, -1);
  }

  return sub_23CF60FF4();
}

void sub_23CF62614()
{
  uint64_t v1 = v0;
  uint64_t v276 = type metadata accessor for URLError();
  uint64_t v2 = *(void *)(v276 - 8);
  MEMORY[0x270FA5388](v276);
  uint64_t v4 = (char *)&v264 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
    __break(1u);
LABEL_128:
    __break(1u);
    goto LABEL_129;
  }
  os_log_type_t v6 = v5;
  id v7 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  id v8 = *(void **)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub];
  if (!v8) {
    goto LABEL_17;
  }
  uint64_t v9 = OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_shouldInitializeViews;
  if (v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_shouldInitializeViews] != 1) {
    goto LABEL_17;
  }
  id v10 = v8;
  id v11 = objc_msgSend(v1, sel_view);
  if (!v11)
  {
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
  id v12 = v11;
  id v13 = objc_msgSend(v11, sel_window);

  if (!v13)
  {

LABEL_17:
    if (qword_268BCCC40 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_23D004498();
    __swift_project_value_buffer(v38, (uint64_t)qword_268BCE6B8);
    os_log_t v278 = (os_log_t)sub_23D004478();
    os_log_type_t v39 = sub_23D005C78();
    if (os_log_type_enabled(v278, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl(&dword_23CEE3000, v278, v39, "Not ready to initialize views", v40, 2u);
      MEMORY[0x23ECF6610](v40, -1, -1);
    }
    os_log_t v41 = v278;

    return;
  }
  v1[v9] = 0;
  uint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form];
  if (!v14) {
    goto LABEL_134;
  }
  uint64_t v267 = OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form;
  uint64_t v15 = qword_268BCCC40;
  uint64_t v16 = v14;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v273 = v2;
  uint64_t v271 = sub_23D004498();
  os_log_t v278 = (os_log_t)__swift_project_value_buffer(v271, (uint64_t)qword_268BCE6B8);
  objc_super v17 = sub_23D004478();
  os_log_type_t v18 = sub_23D005CB8();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v19 = 0;
    _os_log_impl(&dword_23CEE3000, v17, v18, "Initializing Views", v19, 2u);
    MEMORY[0x23ECF6610](v19, -1, -1);
  }

  sub_23CF31A54(0, &qword_268BCE7A8);
  id v20 = (void *)MEMORY[0x23ECF56E0]();
  self;
  uint64_t v21 = swift_dynamicCastObjCClass();
  if (!v21)
  {

LABEL_134:
    sub_23D0060A8();
    __break(1u);
    return;
  }
  id v22 = (id)v21;
  os_log_type_t v23 = *(void **)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController];
  *(void *)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController] = v21;
  id v24 = v20;

  objc_msgSend(v22, sel_setDelegate_, v1);
  objc_msgSend(v22, sel_setPendingStub_, v10);
  objc_msgSend(v22, sel_setCanShowTopicPicker_, 0);
  id v25 = &v16[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_localizedAttachmentLegalText];
  swift_beginAccess();
  if (*((void *)v25 + 1))
  {
    swift_bridgeObjectRetain();
    char v26 = (void *)sub_23D005918();
    swift_bridgeObjectRelease();
    objc_msgSend(v22, sel_setLocalizedAttachmentLegalText_, v26);
  }
  uint64_t v27 = (void (**)(uint64_t, void *))&v16[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_authenticationMethod];
  swift_beginAccess();
  v274 = v27;
  objc_msgSend(v22, sel_setShouldShowUserSwitcherInForm_, *(unsigned char *)v27 != 0);
  uint64_t v28 = v16;
  id v29 = v24;
  objc_super v30 = sub_23D004478();
  os_log_type_t v31 = sub_23D005CB8();
  BOOL v32 = os_log_type_enabled(v30, v31);
  v272 = v1;
  id v277 = v22;
  v275 = v4;
  id v268 = v10;
  if (v32)
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v280 = v34;
    *(_DWORD *)uint64_t v33 = 136446466;
    char v35 = (uint64_t *)&v28[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    uint64_t v36 = *v35;
    unint64_t v37 = v35[1];
    swift_bridgeObjectRetain();
    v279[0] = sub_23CF231B0(v36, v37, &v280);
    sub_23D005E48();

    id v22 = v277;
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 1026;
    LODWORD(v279[0]) = objc_msgSend(v22, sel_shouldShowUserSwitcherInForm);
    sub_23D005E48();

    _os_log_impl(&dword_23CEE3000, v30, v31, "Form [%{public}s]: shows user switcher: [%{BOOL,public}d]", (uint8_t *)v33, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v34, -1, -1);
    MEMORY[0x23ECF6610](v33, -1, -1);
  }
  else
  {
  }
  uint64_t v42 = (unsigned __int8 *)&v28[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_autoGathersDiagnosticExtensions];
  swift_beginAccess();
  objc_msgSend(v22, sel_setAutoGathersDiagnosticExtensions_, *v42);
  uint64_t v43 = v28;
  id v44 = v29;
  uint64_t v45 = sub_23D004478();
  os_log_type_t v46 = sub_23D005CB8();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t v280 = v48;
    *(_DWORD *)uint64_t v47 = 136446466;
    uint64_t v49 = (uint64_t *)&v43[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    uint64_t v51 = *v49;
    unint64_t v50 = v49[1];
    swift_bridgeObjectRetain();
    uint64_t v52 = v51;
    id v22 = v277;
    v279[0] = sub_23CF231B0(v52, v50, &v280);
    sub_23D005E48();

    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 1026;
    LODWORD(v279[0]) = objc_msgSend(v22, sel_autoGathersDiagnosticExtensions);
    sub_23D005E48();

    _os_log_impl(&dword_23CEE3000, v45, v46, "Form [%{public}s]: autoGathersDiagnosticExtensions: [%{BOOL,public}d]", (uint8_t *)v47, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v48, -1, -1);
    MEMORY[0x23ECF6610](v47, -1, -1);
  }
  else
  {
  }
  uint64_t v53 = (unsigned __int8 *)&v43[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_alwaysDeletesDrafts];
  swift_beginAccess();
  objc_msgSend(v22, sel_setAlwaysDeletesDrafts_, *v53);
  unsigned __int8 v54 = v43;
  uint64_t v55 = sub_23D004478();
  os_log_type_t v56 = sub_23D005CB8();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    uint64_t v280 = v58;
    *(_DWORD *)uint64_t v57 = 136446466;
    int v59 = (uint64_t *)&v54[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    uint64_t v270 = (uint64_t)v44;
    uint64_t v60 = *v59;
    unint64_t v61 = v59[1];
    swift_bridgeObjectRetain();
    v279[0] = sub_23CF231B0(v60, v61, &v280);
    sub_23D005E48();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 1026;
    LODWORD(v279[0]) = *v53;
    id v44 = (id)v270;
    sub_23D005E48();

    _os_log_impl(&dword_23CEE3000, v55, v56, "Form [%{public}s]: alwaysDeletesDrafts: [%{BOOL,public}d]", (uint8_t *)v57, 0x12u);
    swift_arrayDestroy();
    uint64_t v62 = v58;
    id v22 = v277;
    MEMORY[0x23ECF6610](v62, -1, -1);
    MEMORY[0x23ECF6610](v57, -1, -1);
  }
  else
  {
  }
  objc_msgSend(v22, sel_setShowInlineUserInfo_, v54[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__showInlineUserInfo]);
  uint64_t v63 = v54;
  id v64 = v44;
  uint64_t v65 = sub_23D004478();
  os_log_type_t v66 = sub_23D005CB8();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    uint64_t v280 = v68;
    *(_DWORD *)uint64_t v67 = 136446466;
    uint64_t v69 = (uint64_t *)&v63[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    uint64_t v71 = *v69;
    unint64_t v70 = v69[1];
    swift_bridgeObjectRetain();
    v279[0] = sub_23CF231B0(v71, v70, &v280);
    sub_23D005E48();

    swift_bridgeObjectRelease();
    *(_WORD *)(v67 + 12) = 1026;
    LODWORD(v279[0]) = objc_msgSend(v277, sel_showInlineUserInfo);
    id v22 = v277;
    sub_23D005E48();

    _os_log_impl(&dword_23CEE3000, v65, v66, "Form [%{public}s]: show inline user info: [%{BOOL,public}d]", (uint8_t *)v67, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v68, -1, -1);
    MEMORY[0x23ECF6610](v67, -1, -1);
  }
  else
  {
  }
  objc_msgSend(v22, sel_setShowUserSwitcherLast_, v63[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__showUserSwitcherLast]);
  char v72 = v63;
  id v73 = v64;
  unsigned __int8 v74 = sub_23D004478();
  os_log_type_t v75 = sub_23D005CB8();
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = swift_slowAlloc();
    uint64_t v270 = swift_slowAlloc();
    uint64_t v280 = v270;
    *(_DWORD *)uint64_t v76 = 136446466;
    long long v77 = (uint64_t *)&v72[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    uint64_t v79 = *v77;
    unint64_t v78 = v77[1];
    swift_bridgeObjectRetain();
    v279[0] = sub_23CF231B0(v79, v78, &v280);
    sub_23D005E48();

    swift_bridgeObjectRelease();
    *(_WORD *)(v76 + 12) = 1026;
    LODWORD(v279[0]) = objc_msgSend(v277, sel_showUserSwitcherLast);
    id v22 = v277;
    sub_23D005E48();

    _os_log_impl(&dword_23CEE3000, v74, v75, "Form [%{public}s]: show user switcher last: [%{BOOL,public}d]", (uint8_t *)v76, 0x12u);
    uint64_t v80 = v270;
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v80, -1, -1);
    MEMORY[0x23ECF6610](v76, -1, -1);
  }
  else
  {
  }
  if (objc_msgSend(v22, sel_showInlineUserInfo))
  {
    id v81 = objc_msgSend(self, sel_sharedInstance);
    id v82 = objc_msgSend(v81, sel_currentUser);

    if (v82)
    {
      id v83 = objc_msgSend(v82, sel_username);

      if (v83)
      {
        uint64_t v270 = sub_23D005948();

        id v84 = objc_allocWithZone(MEMORY[0x263F089B8]);
        uint64_t v85 = (void *)sub_23D005918();
        id v86 = objc_msgSend(v84, sel_initWithString_, v85);

        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE7C0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_23D008C80;
        long long v88 = (void *)*MEMORY[0x263F814F0];
        *(void *)(inited + 32) = *MEMORY[0x263F814F0];
        long long v89 = self;
        uint64_t v90 = *MEMORY[0x263F835B8];
        id v91 = v88;
        id v92 = objc_msgSend(v89, sel_preferredFontForTextStyle_, v90);
        uint64_t v93 = sub_23D003E68();

        *(void *)(inited + 40) = v93;
        unint64_t v94 = sub_23CF18A58(inited);
        sub_23CF790B4(v94);
        swift_bridgeObjectRelease();
        id v95 = objc_allocWithZone(MEMORY[0x263F089B8]);
        long long v96 = (void *)sub_23D005918();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_23CF6B878(&qword_268BCCF78, type metadata accessor for Key);
        long long v97 = (void *)sub_23D0058A8();
        swift_bridgeObjectRelease();
        id v98 = objc_msgSend(v95, sel_initWithString_attributes_, v96, v97);

        objc_msgSend(v86, sel_appendAttributedString_, v98);
        uint64_t v99 = (void **)&v72[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_localizedAttributedLegalString];
        swift_beginAccess();
        long long v100 = *v99;
        if (*v99)
        {
          id v101 = objc_allocWithZone(MEMORY[0x263F089B8]);
          id v102 = v100;
          id v103 = objc_msgSend(v101, sel_initWithAttributedString_, v102);
          objc_msgSend(v103, sel_appendAttributedString_, v86);
          id v104 = v103;
          id v22 = v277;
          objc_msgSend(v277, sel_setLocalizedAttributedLegalString_, v104);
        }
        else
        {
          id v104 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F089B8]), sel_initWithAttributedString_, v86);
          id v22 = v277;
          objc_msgSend(v277, sel_setLocalizedAttributedLegalString_, v104);
        }
      }
    }
  }
  if (!*(unsigned char *)v274)
  {
    long long v105 = (void **)&v72[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_localizedAttributedLegalString];
    swift_beginAccess();
    long long v106 = *v105;
    if (*v105)
    {
      id v107 = objc_allocWithZone(MEMORY[0x263F089B8]);
      id v108 = v106;
      id v109 = objc_msgSend(v107, sel_initWithAttributedString_, v108);
      objc_msgSend(v22, sel_setLocalizedAttributedLegalString_, v109);
    }
  }
  if (*(void *)&v72[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__largeTitleIcon + 8])
  {
    swift_bridgeObjectRetain();
    long long v110 = (void *)sub_23D005918();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v110 = 0;
  }
  objc_msgSend(v22, sel_setLargeTitleIcon_, v110);

  id v111 = v73;
  long long v112 = v72;
  long long v113 = (void (**)(uint64_t, void *))v111;
  long long v114 = sub_23D004478();
  os_log_type_t v115 = sub_23D005C88();
  BOOL v116 = os_log_type_enabled(v114, v115);
  v274 = v113;
  if (v116)
  {
    uint64_t v117 = swift_slowAlloc();
    uint64_t v118 = swift_slowAlloc();
    uint64_t v280 = v118;
    *(_DWORD *)uint64_t v117 = 136446466;
    uint64_t v119 = (uint64_t *)&v112[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    uint64_t v121 = *v119;
    unint64_t v120 = v119[1];
    swift_bridgeObjectRetain();
    v279[0] = sub_23CF231B0(v121, v120, &v280);
    sub_23D005E48();

    swift_bridgeObjectRelease();
    *(_WORD *)(v117 + 12) = 2082;
    id v122 = objc_msgSend(v22, sel_largeTitleIcon);
    if (v122)
    {
      uint64_t v123 = v122;
      uint64_t v124 = sub_23D005948();
      unint64_t v126 = v125;
    }
    else
    {
      uint64_t v124 = 0;
      unint64_t v126 = 0xE000000000000000;
    }
    v279[0] = sub_23CF231B0(v124, v126, &v280);
    sub_23D005E48();
    long long v113 = v274;

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23CEE3000, v114, v115, "Form [%{public}s]: large title icon: [%{public}s]", (uint8_t *)v117, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v118, -1, -1);
    MEMORY[0x23ECF6610](v117, -1, -1);

    id v22 = v277;
  }
  else
  {
  }
  objc_msgSend(v22, sel_setCanShowTeamPicker_, 0);
  sub_23CF64EA8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCF980);
  uint64_t v127 = (void *)sub_23D0058A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setPendingQandA_, v127);

  uint64_t v128 = v112;
  uint64_t v129 = sub_23D004478();
  os_log_type_t v130 = sub_23D005CB8();
  if (os_log_type_enabled(v129, v130))
  {
    uint64_t v131 = swift_slowAlloc();
    uint64_t v270 = swift_slowAlloc();
    uint64_t v280 = v270;
    *(_DWORD *)uint64_t v131 = 136446466;
    uint64_t v132 = (uint64_t *)&v128[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    uint64_t v134 = *v132;
    unint64_t v133 = v132[1];
    swift_bridgeObjectRetain();
    v279[0] = sub_23CF231B0(v134, v133, &v280);
    sub_23D005E48();
    swift_bridgeObjectRelease();
    *(_WORD *)(v131 + 12) = 2050;
    uint64_t v135 = *(void *)(sub_23CF64EA8() + 16);

    swift_bridgeObjectRelease();
    v279[0] = v135;
    long long v113 = v274;
    sub_23D005E48();

    _os_log_impl(&dword_23CEE3000, v129, v130, "Form [%{public}s]: prefilled Q&As count: [%{public}ld]", (uint8_t *)v131, 0x16u);
    uint64_t v136 = v270;
    swift_arrayDestroy();
    id v22 = v277;
    MEMORY[0x23ECF6610](v136, -1, -1);
    MEMORY[0x23ECF6610](v131, -1, -1);
  }
  else
  {
  }
  uint64_t v137 = v113;
  uint64_t v138 = sub_23D004478();
  os_log_type_t v139 = sub_23D005C88();
  if (os_log_type_enabled(v138, v139))
  {
    uint64_t v140 = (uint8_t *)swift_slowAlloc();
    uint64_t v141 = swift_slowAlloc();
    uint64_t v280 = v141;
    *(_DWORD *)uint64_t v140 = 136315138;
    id v142 = objc_msgSend(v22, sel_pendingQandA);
    if (v142)
    {
      uint64_t v143 = v142;
      uint64_t v144 = sub_23D0058B8();
    }
    else
    {
      uint64_t v144 = 0;
    }
    v279[0] = v144;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE7B8);
    uint64_t v146 = sub_23D005998();
    v279[0] = sub_23CF231B0(v146, v147, &v280);
    sub_23D005E48();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23CEE3000, v138, v139, "Pre-filling answers %s", v140, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v141, -1, -1);
    MEMORY[0x23ECF6610](v140, -1, -1);

    uint64_t v145 = v272;
    id v22 = v277;
  }
  else
  {

    uint64_t v145 = v272;
  }
  if (v145[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_showsCompletionPage] == 1)
  {
    uint64_t v148 = *(void *)&v145[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session];
    uint64_t v150 = 1;
    if (v148)
    {
      uint64_t v149 = *(void **)(v148 + 40);
      if (v149)
      {
        if (objc_msgSend(v149, sel_isUnauthenticatedUser)) {
          uint64_t v150 = 0;
        }
      }
    }
  }
  else
  {
    uint64_t v150 = 2;
  }
  objc_msgSend(v22, sel_setSubmissionStyle_, v150);
  id v151 = objc_msgSend(self, sel_predicateForAllStubs);
  objc_msgSend(v22, sel_setCandidateFormStubsPredicate_, v151);

  objc_msgSend(v22, sel_setShouldShowAttachmentButton_, (v128[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__hideAttachmentButton] & 1) == 0);
  uint64_t v152 = v128;
  uint64_t v153 = v137;
  uint64_t v154 = sub_23D004478();
  os_log_type_t v155 = sub_23D005CB8();
  BOOL v156 = os_log_type_enabled(v154, v155);
  v269 = v153;
  if (v156)
  {
    uint64_t v157 = swift_slowAlloc();
    uint64_t v158 = swift_slowAlloc();
    uint64_t v280 = v158;
    *(_DWORD *)uint64_t v157 = 136446466;
    id v159 = (uint64_t *)&v152[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    uint64_t v161 = *v159;
    unint64_t v160 = v159[1];
    swift_bridgeObjectRetain();
    v279[0] = sub_23CF231B0(v161, v160, &v280);
    sub_23D005E48();

    swift_bridgeObjectRelease();
    *(_WORD *)(v157 + 12) = 1026;
    LODWORD(v279[0]) = objc_msgSend(v22, sel_shouldShowAttachmentButton);
    sub_23D005E48();

    _os_log_impl(&dword_23CEE3000, v154, v155, "Form [%{public}s]: shows attachment button: [%{BOOL,public}d]", (uint8_t *)v157, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v158, -1, -1);
    MEMORY[0x23ECF6610](v157, -1, -1);
  }
  else
  {
  }
  unsigned __int8 v162 = sub_23CF651F8();
  uint64_t v163 = OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__disableAccountSwitching;
  objc_msgSend(v22, sel_setDisableAccountSwitching_, (v152[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__disableAccountSwitching] | v162) & 1);
  uint64_t v164 = v152;
  uint64_t v165 = sub_23D004478();
  os_log_type_t v166 = sub_23D005CB8();
  if (os_log_type_enabled(v165, v166))
  {
    uint64_t v167 = swift_slowAlloc();
    uint64_t v168 = swift_slowAlloc();
    uint64_t v280 = v168;
    *(_DWORD *)uint64_t v167 = 136446466;
    v274 = (void (**)(uint64_t, void *))v152;
    uint64_t v169 = (uint64_t *)&v164[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    uint64_t v171 = *v169;
    unint64_t v170 = v169[1];
    swift_bridgeObjectRetain();
    v279[0] = sub_23CF231B0(v171, v170, &v280);
    sub_23D005E48();
    swift_bridgeObjectRelease();
    *(_WORD *)(v167 + 12) = 1026;
    LODWORD(v279[0]) = *((unsigned __int8 *)v274 + v163);
    id v22 = v277;
    sub_23D005E48();

    _os_log_impl(&dword_23CEE3000, v165, v166, "Form [%{public}s]: disables account switching: [%{BOOL,public}d]", (uint8_t *)v167, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v168, -1, -1);
    MEMORY[0x23ECF6610](v167, -1, -1);
  }
  else
  {
  }
  uint64_t v172 = OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__alternateImagePreviewEnabled;
  objc_msgSend(v22, sel_setAlternateImagePreviewEnabled_, v164[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__alternateImagePreviewEnabled]);
  uint64_t v173 = v164;
  uint64_t v174 = sub_23D004478();
  os_log_type_t v175 = sub_23D005CB8();
  if (os_log_type_enabled(v174, v175))
  {
    uint64_t v176 = swift_slowAlloc();
    uint64_t v177 = swift_slowAlloc();
    uint64_t v280 = v177;
    *(_DWORD *)uint64_t v176 = 136446466;
    v274 = (void (**)(uint64_t, void *))(v176 + 4);
    uint64_t v178 = (uint64_t *)&v173[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    uint64_t v180 = *v178;
    unint64_t v179 = v178[1];
    swift_bridgeObjectRetain();
    v279[0] = sub_23CF231B0(v180, v179, &v280);
    sub_23D005E48();
    swift_bridgeObjectRelease();
    *(_WORD *)(v176 + 12) = 1026;
    LODWORD(v279[0]) = v164[v172];
    id v22 = v277;
    sub_23D005E48();

    _os_log_impl(&dword_23CEE3000, v174, v175, "Form [%{public}s]: uses alternate image preview: [%{BOOL,public}d]", (uint8_t *)v176, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v177, -1, -1);
    MEMORY[0x23ECF6610](v176, -1, -1);
  }
  else
  {
  }
  uint64_t v181 = OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__useInlineChoices;
  objc_msgSend(v22, sel_setUseInlineChoices_, v173[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__useInlineChoices]);
  uint64_t v182 = v173;
  uint64_t v183 = sub_23D004478();
  os_log_type_t v184 = sub_23D005CB8();
  if (os_log_type_enabled(v183, v184))
  {
    uint64_t v185 = swift_slowAlloc();
    uint64_t v186 = swift_slowAlloc();
    uint64_t v280 = v186;
    *(_DWORD *)uint64_t v185 = 136446466;
    v274 = (void (**)(uint64_t, void *))(v185 + 4);
    long long v187 = (uint64_t *)&v182[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    uint64_t v189 = *v187;
    unint64_t v188 = v187[1];
    swift_bridgeObjectRetain();
    v279[0] = sub_23CF231B0(v189, v188, &v280);
    sub_23D005E48();
    swift_bridgeObjectRelease();
    *(_WORD *)(v185 + 12) = 1026;
    LODWORD(v279[0]) = v173[v181];
    sub_23D005E48();

    _os_log_impl(&dword_23CEE3000, v183, v184, "Form [%{public}s]: uses inline choices: [%{BOOL,public}d]", (uint8_t *)v185, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v186, -1, -1);
    MEMORY[0x23ECF6610](v185, -1, -1);
  }
  else
  {
  }
  uint64_t v190 = v272;
  long long v191 = (unsigned __int8 *)&v182[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_allowsAttachmentDragAndDrop];
  swift_beginAccess();
  objc_msgSend(v277, sel_setAllowsAttachmentDragAndDrop_, *v191);
  uint64_t v192 = v182;
  long long v193 = sub_23D004478();
  os_log_type_t v194 = sub_23D005CB8();
  if (os_log_type_enabled(v193, v194))
  {
    uint64_t v195 = swift_slowAlloc();
    uint64_t v196 = swift_slowAlloc();
    uint64_t v280 = v196;
    *(_DWORD *)uint64_t v195 = 136446466;
    v197 = v192;
    char v198 = (uint64_t *)&v192[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
    swift_beginAccess();
    uint64_t v200 = *v198;
    unint64_t v199 = v198[1];
    swift_bridgeObjectRetain();
    v279[0] = sub_23CF231B0(v200, v199, &v280);
    sub_23D005E48();
    uint64_t v192 = v197;
    uint64_t v190 = v272;
    swift_bridgeObjectRelease();
    *(_WORD *)(v195 + 12) = 1026;
    LODWORD(v279[0]) = *v191;
    sub_23D005E48();

    _os_log_impl(&dword_23CEE3000, v193, v194, "Form [%{public}s]: allowsAttachmentDragAndDrop: [%{BOOL,public}d]", (uint8_t *)v195, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v196, -1, -1);
    MEMORY[0x23ECF6610](v195, -1, -1);
  }
  else
  {
  }
  uint64_t v201 = (uint64_t)v275;
  unsigned __int8 v202 = &v192[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm__onBoardingKitIdentifier];
  swift_beginAccess();
  unint64_t v203 = *((void *)v202 + 1);
  v266 = v192;
  if (v203)
  {
    v204 = *(NSObject **)v202;
    swift_bridgeObjectRetain();
    int v205 = (void *)sub_23D005918();
    objc_msgSend(v277, sel_setOnBoardingKitIdentifier_, v205);

    __int16 v206 = v192;
    swift_bridgeObjectRetain();
    uint64_t v207 = sub_23D004478();
    os_log_type_t v208 = sub_23D005CB8();
    if (os_log_type_enabled(v207, v208))
    {
      uint64_t v209 = swift_slowAlloc();
      uint64_t v210 = swift_slowAlloc();
      uint64_t v280 = v210;
      *(_DWORD *)uint64_t v209 = 136446466;
      uint64_t v211 = (uint64_t *)&v206[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_identifier];
      swift_beginAccess();
      os_log_t v278 = v204;
      uint64_t v212 = *v211;
      unint64_t v213 = v211[1];
      swift_bridgeObjectRetain();
      v279[0] = sub_23CF231B0(v212, v213, &v280);
      sub_23D005E48();

      uint64_t v190 = v272;
      swift_bridgeObjectRelease();
      *(_WORD *)(v209 + 12) = 2082;
      swift_bridgeObjectRetain();
      v279[0] = sub_23CF231B0((uint64_t)v278, v203, &v280);
      sub_23D005E48();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23CEE3000, v207, v208, "Form [%{public}s]: onBoardingKitIdentifier: [%{public}s]", (uint8_t *)v209, 0x16u);
      swift_arrayDestroy();
      uint64_t v214 = v210;
      uint64_t v201 = (uint64_t)v275;
      MEMORY[0x23ECF6610](v214, -1, -1);
      MEMORY[0x23ECF6610](v209, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v192 = v266;
  }
  id v215 = objc_allocWithZone(MEMORY[0x263F829B8]);
  id v216 = objc_msgSend(v215, sel_initWithRootViewController_, v277);
  long long v217 = *(void **)&v190[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_feedbackDraftNavigationController];
  *(void *)&v190[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_feedbackDraftNavigationController] = v216;
  id v218 = v216;

  id v219 = objc_msgSend(v190, sel_view);
  if (!v219)
  {
LABEL_130:
    __break(1u);
    goto LABEL_134;
  }
  unsigned int v220 = v219;
  objc_msgSend(v190, sel_embed_inView_, v218, v219);

  uint64_t v221 = &v192[OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_attachments];
  swift_beginAccess();
  uint64_t v222 = &unk_23D008000;
  if (*(void *)(*(void *)v221 + 16)) {
    goto LABEL_110;
  }
  unint64_t v223 = sub_23D00043C();
  uint64_t v224 = *(void *)(v223 + 16);
  if (v224)
  {
    unint64_t v264 = v223;
    id v265 = v218;
    unsigned __int8 v225 = &v190[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_xpcClient];
    uint64_t v226 = &v190[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient];
    uint64_t v227 = v273;
    uint64_t v228 = v223 + ((*(unsigned __int8 *)(v273 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v273 + 80));
    uint64_t v270 = (uint64_t)v226;
    swift_beginAccess();
    v274 = &v282;
    uint64_t v229 = *(void *)(v227 + 72);
    os_log_t v278 = (os_log_t)0x800000023D0125D0;
    uint64_t v273 = MEMORY[0x263F8EE58] + 8;
    while (1)
    {
      sub_23CF6B7B8(v228, v201);
      uint64_t v230 = MEMORY[0x23ECF66F0](v225);
      if (v230)
      {
        id v231 = (id)v230;
        v232 = *(void **)(v230 + OBJC_IVAR___ExtensionController_xpcConnection);
        if (!v232) {
          goto LABEL_128;
        }
        v284 = sub_23CF9A4BC;
        uint64_t v285 = 0;
        uint64_t v280 = MEMORY[0x263EF8330];
        uint64_t v281 = 1107296256;
        v282 = sub_23CF8A5A0;
        v283 = &block_descriptor_101;
        v233 = _Block_copy(&v280);
        id v234 = v232;
        id v235 = objc_msgSend(v234, sel_remoteObjectProxyWithErrorHandler_, v233);
        _Block_release(v233);

        sub_23D005EB8();
        swift_unknownObjectRelease();
        sub_23CF2571C((uint64_t)v279, (uint64_t)&v280);
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE7B0);
        if (!swift_dynamicCast())
        {
          if (qword_268BCCC70 != -1) {
            swift_once();
          }
          __swift_project_value_buffer(v271, (uint64_t)qword_268BCF028);
          v241 = sub_23D004478();
          os_log_type_t v242 = sub_23D005C98();
          if (os_log_type_enabled(v241, v242))
          {
            v243 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v243 = 0;
            _os_log_impl(&dword_23CEE3000, v241, v242, "Failed to get remote object proxy", v243, 2u);
            MEMORY[0x23ECF6610](v243, -1, -1);
          }

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v279);
          goto LABEL_97;
        }
        v236 = (void *)v279[7];
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v279);
      }
      else
      {
        v236 = (void *)MEMORY[0x23ECF66F0](v270);
        if (!v236) {
          goto LABEL_134;
        }
      }
      v237 = (void *)sub_23D003C48();
      uint64_t v238 = *(void *)(v201 + *(int *)(v276 + 20));
      id v239 = objc_allocWithZone(MEMORY[0x263F087E8]);
      v240 = (void *)sub_23D005918();
      id v231 = objc_msgSend(v239, sel_initWithDomain_code_userInfo_, v240, v238, 0);

      uint64_t v201 = (uint64_t)v275;
      objc_msgSend(v236, sel_feedbackDidFailToAttachURL_nsError_, v237, v231);
      swift_unknownObjectRelease();

LABEL_97:
      sub_23CF6B81C(v201);
      v228 += v229;
      if (!--v224)
      {
        swift_bridgeObjectRelease();
        uint64_t v190 = v272;
        id v218 = v265;
        uint64_t v192 = v266;
        uint64_t v222 = (void *)&unk_23D008000;
        goto LABEL_110;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_110:
  if (sub_23D0004E8())
  {
    sub_23D003CE8();
    v244 = (void *)sub_23D0058A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v244 = 0;
  }
  objc_msgSend(v277, sel_setPendingAttachments_, v244);

  uint64_t v245 = v267;
  uint64_t v246 = *(void *)&v190[v267];
  if (v246)
  {
    uint64_t v247 = v246 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_appToken;
    swift_beginAccess();
    if (*(void *)(v247 + 8))
    {
      v248 = *(NSObject **)v247;
      uint64_t v249 = swift_bridgeObjectRetain();
      if (MEMORY[0x23ECF5E10](v249))
      {
        uint64_t v250 = *(void *)&v190[v245];
        if (v250)
        {
          v251 = (void **)(v250 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_plugFormIds);
          swift_beginAccess();
          v252 = *v251;
          if (*v251)
          {
            uint64_t v253 = v252[2];
            if (v253)
            {
              os_log_t v278 = v248;
              id v265 = v218;
              uint64_t v280 = MEMORY[0x263F8EE78];
              swift_bridgeObjectRetain();
              sub_23D006058();
              uint64_t v254 = 0;
              do
              {
                uint64_t v255 = v254 + 1;
                objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, v252[v254 + 4]);
                sub_23D006038();
                sub_23D006068();
                sub_23D006078();
                sub_23D006048();
                uint64_t v254 = v255;
              }
              while (v253 != v255);
              swift_bridgeObjectRelease();
              uint64_t v190 = v272;
              id v218 = v265;
              uint64_t v192 = v266;
            }
            sub_23CF31A54(0, &qword_268BCE788);
            v252 = (void *)sub_23D005AD8();
            swift_bridgeObjectRelease();
            uint64_t v222 = (void *)&unk_23D008000;
          }
        }
        else
        {
          v252 = 0;
        }
        id v256 = v277;
        objc_msgSend(v277, sel_setRequestedPlugIns_, v252);

        v257 = (void *)sub_23D005918();
        swift_bridgeObjectRelease();
        objc_msgSend(v256, sel_setAppToken_, v257);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  id v258 = objc_msgSend(self, sel_sharedInstance);
  id v259 = objc_msgSend(v258, sel_defaultTeam);

  uint64_t v260 = swift_allocObject();
  *(void *)(v260 + 16) = v190;
  v284 = sub_23CF6B7B0;
  uint64_t v285 = v260;
  uint64_t v280 = MEMORY[0x263EF8330];
  uint64_t v281 = v222[466];
  v282 = sub_23CF60BC0;
  v283 = &block_descriptor_98;
  v261 = _Block_copy(&v280);
  v262 = v190;
  swift_release();
  v263 = v268;
  objc_msgSend(v277, sel_loadNewResponseForBugFormStub_forTeam_completion_, v268, v259, v261);
  _Block_release(v261);
}

uint64_t sub_23CF64EA8()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_answers);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v36 = v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v2 + 64);
  int64_t v37 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  id v7 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v6 << 6);
    }
    else
    {
      int64_t v11 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_48;
      }
      if (v11 >= v37)
      {
LABEL_45:
        swift_release();
        return (uint64_t)v7;
      }
      unint64_t v12 = *(void *)(v36 + 8 * v11);
      ++v6;
      if (!v12)
      {
        int64_t v6 = v11 + 1;
        if (v11 + 1 >= v37) {
          goto LABEL_45;
        }
        unint64_t v12 = *(void *)(v36 + 8 * v6);
        if (!v12)
        {
          int64_t v6 = v11 + 2;
          if (v11 + 2 >= v37) {
            goto LABEL_45;
          }
          unint64_t v12 = *(void *)(v36 + 8 * v6);
          if (!v12)
          {
            int64_t v13 = v11 + 3;
            if (v13 >= v37) {
              goto LABEL_45;
            }
            unint64_t v12 = *(void *)(v36 + 8 * v13);
            if (!v12)
            {
              while (1)
              {
                int64_t v6 = v13 + 1;
                if (__OFADD__(v13, 1)) {
                  goto LABEL_49;
                }
                if (v6 >= v37) {
                  goto LABEL_45;
                }
                unint64_t v12 = *(void *)(v36 + 8 * v6);
                ++v13;
                if (v12) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v6 = v13;
          }
        }
      }
LABEL_21:
      unint64_t v5 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v6 << 6);
    }
    uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    unint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v10);
    uint64_t v18 = 0x706972637365643ALL;
    if (v16 != 2) {
      uint64_t v18 = *v14;
    }
    unint64_t v19 = 0xEC0000006E6F6974;
    if (v16 != 2) {
      unint64_t v19 = v16;
    }
    if (v16 == 1)
    {
      uint64_t v18 = 0x616572613ALL;
      unint64_t v19 = 0xE500000000000000;
    }
    uint64_t v20 = v16 ? v18 : 0x656C7469743ALL;
    uint64_t v21 = v16 ? v19 : 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_23CF24FD0(v15, v16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = sub_23CF23884(v20, v21);
    uint64_t v25 = v7[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26)) {
      break;
    }
    char v28 = v23;
    if (v7[3] >= v27)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v23) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_23CF6988C();
        if (v28) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_23CF6835C(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_23CF23884(v20, v21);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_50;
      }
      unint64_t v24 = v29;
      if (v28)
      {
LABEL_4:
        uint64_t v8 = v7[7];
        swift_bridgeObjectRelease();
        *(void *)(v8 + 8 * v24) = v17;
        goto LABEL_5;
      }
    }
    v7[(v24 >> 6) + 8] |= 1 << v24;
    os_log_type_t v31 = (uint64_t *)(v7[6] + 16 * v24);
    *os_log_type_t v31 = v20;
    v31[1] = v21;
    *(void *)(v7[7] + 8 * v24) = v17;
    uint64_t v32 = v7[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_47;
    }
    _OWORD v7[2] = v34;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  uint64_t result = sub_23D006268();
  __break(1u);
  return result;
}

id sub_23CF651F8()
{
  id v0 = objc_msgSend(self, sel_sharedInstance);
  uint64_t v1 = objc_msgSend(v0, sel_currentUser);

  if (v1)
  {
    id v2 = [v1 isAppleConnectUser];
  }
  else
  {
    if (qword_268BCCC40 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_23D004498();
    __swift_project_value_buffer(v3, (uint64_t)qword_268BCE6B8);
    uint64_t v1 = sub_23D004478();
    os_log_type_t v4 = sub_23D005C98();
    if (os_log_type_enabled(v1, v4))
    {
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      _os_log_impl(&dword_23CEE3000, v1, v4, "No user in initializeViewIfNeeded()", v5, 2u);
      MEMORY[0x23ECF6610](v5, -1, -1);
    }
    id v2 = 0;
  }

  return v2;
}

void sub_23CF65334(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v4 = a1;
    if (qword_268BCCC40 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_23D004498();
    __swift_project_value_buffer(v5, (uint64_t)qword_268BCE6B8);
    id v6 = a1;
    id v7 = a1;
    uint64_t v8 = sub_23D004478();
    os_log_type_t v9 = sub_23D005C98();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v19 = v11;
      *(_DWORD *)unint64_t v10 = 136315138;
      id v12 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
      uint64_t v13 = sub_23D005998();
      sub_23CF231B0(v13, v14, &v19);
      sub_23D005E48();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23CEE3000, v8, v9, "Failed to load new response with error: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v11, -1, -1);
      MEMORY[0x23ECF6610](v10, -1, -1);
    }
    else
    {
    }
    unint64_t v16 = *(void (**)(void *, uint64_t))(a2
                                                 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
    if (v16)
    {
      sub_23CF31A54(0, &qword_268BCE788);
      swift_retain();
      uint64_t v17 = (void *)sub_23D005DB8();
      v16(v17, v18);

      sub_23CEE93B4((uint64_t)v16);
    }
    else
    {
    }
  }
  else
  {
    uint64_t v15 = *(void (**)(void))(a2
                                        + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
    if (v15)
    {
      swift_retain();
      v15(0);
      sub_23CEE93B4((uint64_t)v15);
    }
  }
}

id DraftingExtensionViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    id v6 = (void *)sub_23D005918();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id DraftingExtensionViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub] = 0;
  v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_shouldInitializeViews] = 0;
  id v6 = &v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply];
  *id v6 = 0;
  v6[1] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_feedbackDraftNavigationController] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_showsCompletionPage] = 1;
  *(void *)&v3[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController] = 0;
  if (a2)
  {
    id v7 = (void *)sub_23D005918();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for DraftingExtensionViewController();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithNibName_bundle_, v7, a3);

  return v8;
}

id DraftingExtensionViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id DraftingExtensionViewController.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub] = 0;
  v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_shouldInitializeViews] = 0;
  id v3 = &v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply];
  *id v3 = 0;
  v3[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_feedbackDraftNavigationController] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_showsCompletionPage] = 1;
  *(void *)&v1[OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DraftingExtensionViewController();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithCoder_, a1);

  return v4;
}

id DraftingExtensionViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DraftingExtensionViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23CF65A10(char a1)
{
  return sub_23CF65BA0(a1, (uint64_t)&unk_26F0CCC90, (uint64_t)sub_23CF6B578, (uint64_t)&block_descriptor_56);
}

void sub_23CF65A38(uint64_t a1, char a2)
{
  *(unsigned char *)(a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_showsCompletionPage) = a2;
  objc_super v2 = *(void **)(a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController);
  if (!v2) {
    return;
  }
  id v9 = *(id *)(a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController);
  if ((a2 & 1) == 0)
  {
    id v7 = v2;
    uint64_t v6 = 2;
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session);
  if (!v3 || (id v4 = *(void **)(v3 + 40)) == 0)
  {
    id v8 = v2;
    goto LABEL_10;
  }
  id v5 = v2;
  if (!objc_msgSend(v4, sel_isUnauthenticatedUser))
  {
LABEL_10:
    uint64_t v6 = 1;
    goto LABEL_11;
  }
  uint64_t v6 = 0;
LABEL_11:
  objc_msgSend(v9, sel_setSubmissionStyle_, v6);
}

uint64_t sub_23CF65B78(char a1)
{
  return sub_23CF65BA0(a1, (uint64_t)&unk_26F0CCC18, (uint64_t)sub_23CF6B56C, (uint64_t)&block_descriptor_47);
}

uint64_t sub_23CF65BA0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v6 = sub_23D005828();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_23D005858();
  uint64_t v10 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  id v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
  uint64_t v13 = (void *)sub_23D005D28();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v4;
  *(unsigned char *)(v14 + 24) = a1;
  aBlock[4] = v19;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23CF6021C;
  aBlock[3] = v20;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v4;
  swift_release();
  sub_23D005848();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_23CF6B878((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
  sub_23CF28A80();
  sub_23D005ED8();
  MEMORY[0x23ECF57B0](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v21);
}

void sub_23CF65E58(uint64_t a1, char a2)
{
  objc_super v2 = *(void **)(a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController);
  if (v2)
  {
    v6[4] = nullsub_1;
    v6[5] = 0;
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 1107296256;
    _OWORD v6[2] = sub_23CF60BC0;
    v6[3] = &block_descriptor_50;
    id v4 = _Block_copy(v6);
    id v5 = v2;
    objc_msgSend(v5, sel_saveDraftWithIsClosing_completion_, a2 & 1, v4);
    _Block_release(v4);
  }
}

uint64_t sub_23CF65F9C()
{
  uint64_t v1 = sub_23D005828();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_23D005858();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
  id v9 = (void *)sub_23D005D28();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v0;
  aBlock[4] = sub_23CF6B508;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23CF6021C;
  aBlock[3] = &block_descriptor_41;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = v0;
  swift_release();
  sub_23D005848();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_23CF6B878((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
  sub_23CF28A80();
  sub_23D005ED8();
  MEMORY[0x23ECF57B0](0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DraftingExtensionViewController.setFeedbackForm(_:reply:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_23D005828();
  uint64_t v20 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_23D005858();
  uint64_t v10 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
  uint64_t v13 = (void *)sub_23D005D28();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = v3;
  v14[4] = a2;
  v14[5] = a3;
  aBlock[4] = sub_23CF67A08;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23CF6021C;
  aBlock[3] = &block_descriptor_3;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a1;
  id v17 = v3;
  swift_retain();
  swift_release();
  sub_23D005848();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_23CF6B878((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
  sub_23CF28A80();
  sub_23D005ED8();
  MEMORY[0x23ECF57B0](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

uint64_t sub_23CF6657C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for FeedbackSession();
  swift_allocObject();
  id v8 = a1;
  *(void *)(a2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session) = sub_23CF90904(v8);
  swift_retain();
  swift_release();
  id v9 = (void *)(a2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
  uint64_t v10 = *(void *)(a2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
  *id v9 = a3;
  v9[1] = a4;
  swift_retain();
  sub_23CEE93B4(v10);
  uint64_t v11 = *(void **)(a2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form);
  *(void *)(a2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form) = v8;
  id v12 = v8;

  sub_23CF60FF4();

  return swift_release();
}

Swift::Void __swiftcall DraftingExtensionViewController.prepareUIForLogOut()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub);
  *(void *)(v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_formStub) = 0;

  uint64_t v2 = OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_feedbackDraftNavigationController;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_feedbackDraftNavigationController);
  if (v3)
  {
    id v4 = v3;
    objc_msgSend(v4, sel_willMoveToParentViewController_, 0);
    objc_msgSend(v4, sel_removeFromParentViewController);
    id v5 = objc_msgSend(v4, sel_view);
    if (v5)
    {
      uint64_t v6 = v5;
      objc_msgSend(v5, sel_removeFromSuperview);

      *(unsigned char *)(v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_shouldInitializeViews) = 1;
      id v7 = *(id *)(v0 + v2);
      *(void *)(v0 + v2) = 0;
    }
    else
    {
      __break(1u);
    }
  }
}

void DraftingExtensionViewController.controller(_:didClickSwitchAccountsWithCurrentUser:)(uint64_t a1, void *a2)
{
}

void DraftingExtensionViewController.controller(_:didFinishLoadingDraft:devicesController:draftingController:)(uint64_t a1, void *a2, void *a3, void *a4)
{
}

void DraftingExtensionViewController.controller(_:didAttachLocalFile:)(uint64_t a1, void (*a2)(char *, char *, uint64_t))
{
}

void DraftingExtensionViewController.controllerWillResignFirstActive(_:)()
{
  if (qword_268BCCC40 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_23D004498();
  __swift_project_value_buffer(v0, (uint64_t)qword_268BCE6B8);
  oslog = sub_23D004478();
  os_log_type_t v1 = sub_23D005CB8();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_23CEE3000, oslog, v1, "Will resign first active", v2, 2u);
    MEMORY[0x23ECF6610](v2, -1, -1);
  }
}

void DraftingExtensionViewController.controller(_:didFinishSubmissionWithError:)(void *a1, NSObject *a2)
{
  if (a2)
  {
    uint64_t v4 = MEMORY[0x23ECF66F0](v2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_xpcClient);
    if (v4)
    {
      id v5 = (void *)v4;
      uint64_t v6 = a2;
      sub_23CF9A2C4();
      id v8 = v7;

      if (!v8)
      {
        id v9 = a2;
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v80 = v2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
      swift_beginAccess();
      uint64_t v81 = MEMORY[0x23ECF66F0](v80);
      if (!v81) {
        goto LABEL_123;
      }
      id v8 = (void *)v81;
      id v82 = a2;
    }
    id v83 = (void *)sub_23D003BB8();
    id v84 = objc_allocWithZone((Class)type metadata accessor for FBKSubmissionError());
    uint64_t v85 = sub_23CFA9858(v83);
    objc_msgSend(v8, sel_didFailSubmissionWithError_, v85);

    swift_unknownObjectRelease();
    return;
  }
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form);
  if (!v10)
  {
    if (qword_268BCCC40 != -1) {
      goto LABEL_119;
    }
    goto LABEL_96;
  }
  uint64_t v103 = v2;
  id v12 = v10;
  id v13 = objc_msgSend(a1, sel_draftingController);
  uint64_t v14 = sub_23CF741D0(v12);

  id v105 = a1;
  id v15 = objc_msgSend(a1, sel_draftingController);
  uint64_t v16 = sub_23CF74AD4((uint64_t)v12);

  id v17 = (void *)((char *)v12 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_formResponses);
  swift_beginAccess();
  *id v17 = v16;
  swift_bridgeObjectRelease();
  id v104 = v12;
  uint64_t v18 = (void *)((char *)v12 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_answers);
  swift_beginAccess();
  *uint64_t v18 = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  int64_t v19 = 0;
  uint64_t v107 = v14 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(v14 + 64);
  int64_t v108 = (unint64_t)(v20 + 63) >> 6;
  long long v113 = v18;
  uint64_t v106 = v14;
  do
  {
LABEL_12:
    if (v22)
    {
      unint64_t v23 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v24 = v23 | (v19 << 6);
    }
    else
    {
      int64_t v25 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        goto LABEL_117;
      }
      if (v25 >= v108) {
        goto LABEL_101;
      }
      unint64_t v26 = *(void *)(v107 + 8 * v25);
      ++v19;
      if (!v26)
      {
        int64_t v19 = v25 + 1;
        if (v25 + 1 >= v108) {
          goto LABEL_101;
        }
        unint64_t v26 = *(void *)(v107 + 8 * v19);
        if (!v26)
        {
          int64_t v19 = v25 + 2;
          if (v25 + 2 >= v108) {
            goto LABEL_101;
          }
          unint64_t v26 = *(void *)(v107 + 8 * v19);
          if (!v26)
          {
            int64_t v27 = v25 + 3;
            if (v27 >= v108) {
              goto LABEL_101;
            }
            unint64_t v26 = *(void *)(v107 + 8 * v27);
            if (!v26)
            {
              while (1)
              {
                int64_t v19 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  goto LABEL_118;
                }
                if (v19 >= v108) {
                  break;
                }
                unint64_t v26 = *(void *)(v107 + 8 * v19);
                ++v27;
                if (v26) {
                  goto LABEL_27;
                }
              }
LABEL_101:
              swift_release();
              id v89 = objc_msgSend(v105, sel_draftingController);
              id v90 = objc_msgSend(v89, sel_formResponse);

              id v91 = objc_msgSend(v90, sel_contentItem);
              if (v91)
              {
                id v92 = objc_msgSend(v91, sel_ID);

                if (v92)
                {
                  id v93 = objc_msgSend(v92, sel_stringValue);

                  if (!v93)
                  {
                    sub_23D005948();
                    id v93 = (id)sub_23D005918();
                    swift_bridgeObjectRelease();
                  }
                  id v94 = objc_msgSend(v105, sel_bugForm);
                  if (v94)
                  {
                    id v95 = v94;
                    id v96 = objc_msgSend(v94, sel_role);

                    uint64_t v97 = sub_23CF8189C((uint64_t)v96);
                  }
                  else
                  {
                    uint64_t v97 = 0;
                  }
                  uint64_t v98 = MEMORY[0x23ECF66F0](v103 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_xpcClient);
                  if (v98)
                  {
                    uint64_t v99 = (void *)v98;
                    sub_23CF9A2C4();
                    id v101 = v100;

                    if (!v101)
                    {

                      return;
                    }
                    goto LABEL_112;
                  }
                  uint64_t v102 = v103 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
                  swift_beginAccess();
                  id v101 = (void *)MEMORY[0x23ECF66F0](v102);
                  if (v101)
                  {
LABEL_112:
                    objc_msgSend(v101, sel_feedbackDidCompleteWithResponseType_responseID_completedForm_, v97, v93, v104);

                    swift_unknownObjectRelease();
                    return;
                  }
LABEL_123:
                  sub_23D0060A8();
                  __break(1u);
                  return;
                }
              }
              else
              {
                __break(1u);
              }
              __break(1u);
LABEL_122:
              sub_23D006268();
              __break(1u);
              goto LABEL_123;
            }
            int64_t v19 = v27;
          }
        }
      }
LABEL_27:
      unint64_t v22 = (v26 - 1) & v26;
      unint64_t v24 = __clz(__rbit64(v26)) + (v19 << 6);
    }
    uint64_t v28 = *(void *)(*(void *)(v14 + 56) + 8 * v24);
    uint64_t v29 = *(void *)(v28 + 16);
  }
  while (!v29);
  unint64_t v109 = v22;
  int64_t v110 = v19;
  char v30 = (uint64_t *)(*(void *)(v14 + 48) + 16 * v24);
  uint64_t v32 = *v30;
  unint64_t v31 = v30[1];
  BOOL v34 = *v30 == 0x656C7469743ALL && v31 == 0xE600000000000000;
  BOOL oslog = v34;
  BOOL v36 = v32 == 0x616572613ALL && v31 == 0xE500000000000000;
  BOOL v38 = v32 == 0x706972637365643ALL && v31 == 0xEC0000006E6F6974;
  BOOL v111 = v38;
  BOOL v112 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log_type_t v39 = (uint64_t *)(v28 + 40);
  uint64_t v114 = v32;
  unint64_t v115 = v31;
  while (1)
  {
    uint64_t v42 = *(v39 - 1);
    uint64_t v41 = *v39;
    if (oslog)
    {
      uint64_t v32 = 0;
      unint64_t v43 = 0;
    }
    else
    {
      int v44 = sub_23D006218();
      if ((v44 | v112))
      {
        uint64_t v32 = 0;
        unint64_t v43 = ~v44 & 1;
      }
      else
      {
        unsigned __int8 v45 = sub_23D006218();
        if (v45) {
          unint64_t v43 = 1;
        }
        else {
          unint64_t v43 = 2;
        }
        if ((v45 | v111))
        {
          uint64_t v32 = 0;
        }
        else if (sub_23D006218())
        {
          uint64_t v32 = 0;
          unint64_t v43 = 2;
        }
        else
        {
          swift_bridgeObjectRetain();
          unint64_t v43 = v31;
        }
      }
    }
    uint64_t v46 = *v18;
    uint64_t v47 = *(void *)(*v18 + 16);
    swift_bridgeObjectRetain();
    if (v47)
    {
      sub_23CF24FD0(v32, v43);
      swift_bridgeObjectRetain();
      unint64_t v48 = sub_23CF238FC(v32, v43);
      if (v49)
      {
        unint64_t v50 = *(void **)(*(void *)(v46 + 56) + 8 * v48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_23CF24D10(v32, v43);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v50 = sub_23CF228DC(0, v50[2] + 1, 1, v50);
        }
        unint64_t v52 = v50[2];
        unint64_t v51 = v50[3];
        if (v52 >= v51 >> 1) {
          unint64_t v50 = sub_23CF228DC((void *)(v51 > 1), v52 + 1, 1, v50);
        }
        v50[2] = v52 + 1;
        uint64_t v53 = &v50[2 * v52];
        v53[4] = v42;
        v53[5] = v41;
        swift_beginAccess();
        sub_23CF24FD0(v32, v43);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v55 = *v18;
        uint64_t v118 = (void *)*v18;
        *uint64_t v18 = 0x8000000000000000;
        unint64_t v57 = sub_23CF238FC(v32, v43);
        uint64_t v58 = *(void *)(v55 + 16);
        BOOL v59 = (v56 & 1) == 0;
        uint64_t v60 = v58 + v59;
        if (__OFADD__(v58, v59)) {
          goto LABEL_115;
        }
        char v61 = v56;
        if (*(void *)(v55 + 24) >= v60)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            id v64 = v118;
            if ((v56 & 1) == 0) {
              goto LABEL_86;
            }
          }
          else
          {
            sub_23CF696D4();
            id v64 = v118;
            if ((v61 & 1) == 0) {
              goto LABEL_86;
            }
          }
        }
        else
        {
          sub_23CF68020(v60, isUniquelyReferenced_nonNull_native);
          unint64_t v62 = sub_23CF238FC(v32, v43);
          if ((v61 & 1) != (v63 & 1)) {
            goto LABEL_122;
          }
          unint64_t v57 = v62;
          id v64 = v118;
          if ((v61 & 1) == 0)
          {
LABEL_86:
            v64[(v57 >> 6) + 8] |= 1 << v57;
            unint64_t v78 = (uint64_t *)(v64[6] + 16 * v57);
            uint64_t *v78 = v32;
            v78[1] = v43;
            *(void *)(v64[7] + 8 * v57) = v50;
            uint64_t v79 = v64[2];
            BOOL v76 = __OFADD__(v79, 1);
            uint64_t v77 = v79 + 1;
            if (v76) {
              goto LABEL_116;
            }
LABEL_87:
            v64[2] = v77;
            sub_23CF24FD0(v32, v43);
            goto LABEL_49;
          }
        }
        goto LABEL_48;
      }
      swift_bridgeObjectRelease();
      sub_23CF24D10(v32, v43);
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCF970);
    unint64_t v50 = (void *)swift_allocObject();
    *((_OWORD *)v50 + 1) = xmmword_23D008C80;
    void v50[4] = v42;
    v50[5] = v41;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23CF24FD0(v32, v43);
    char v65 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = *v18;
    uint64_t v119 = (void *)*v18;
    *uint64_t v18 = 0x8000000000000000;
    unint64_t v57 = sub_23CF238FC(v32, v43);
    uint64_t v68 = *(void *)(v66 + 16);
    BOOL v69 = (v67 & 1) == 0;
    uint64_t v70 = v68 + v69;
    if (__OFADD__(v68, v69)) {
      break;
    }
    char v71 = v67;
    if (*(void *)(v66 + 24) >= v70)
    {
      if (v65)
      {
        id v64 = v119;
        if ((v67 & 1) == 0) {
          goto LABEL_81;
        }
      }
      else
      {
        sub_23CF696D4();
        id v64 = v119;
        if ((v71 & 1) == 0) {
          goto LABEL_81;
        }
      }
    }
    else
    {
      sub_23CF68020(v70, v65);
      unint64_t v72 = sub_23CF238FC(v32, v43);
      if ((v71 & 1) != (v73 & 1)) {
        goto LABEL_122;
      }
      unint64_t v57 = v72;
      id v64 = v119;
      if ((v71 & 1) == 0)
      {
LABEL_81:
        v64[(v57 >> 6) + 8] |= 1 << v57;
        unsigned __int8 v74 = (uint64_t *)(v64[6] + 16 * v57);
        *unsigned __int8 v74 = v32;
        v74[1] = v43;
        *(void *)(v64[7] + 8 * v57) = v50;
        uint64_t v75 = v64[2];
        BOOL v76 = __OFADD__(v75, 1);
        uint64_t v77 = v75 + 1;
        if (v76) {
          goto LABEL_114;
        }
        goto LABEL_87;
      }
    }
LABEL_48:
    uint64_t v40 = v64[7];
    swift_bridgeObjectRelease();
    *(void *)(v40 + 8 * v57) = v50;
LABEL_49:
    uint64_t v18 = v113;
    *long long v113 = v64;
    swift_bridgeObjectRelease();
    sub_23CF24D10(v32, v43);
    swift_endAccess();
    v39 += 2;
    swift_bridgeObjectRelease();
    sub_23CF24D10(v32, v43);
    --v29;
    uint64_t v32 = v114;
    unint64_t v31 = v115;
    if (!v29)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v106;
      unint64_t v22 = v109;
      int64_t v19 = v110;
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  swift_once();
LABEL_96:
  uint64_t v86 = sub_23D004498();
  __swift_project_value_buffer(v86, (uint64_t)qword_268BCE6B8);
  osloga = sub_23D004478();
  os_log_type_t v87 = sub_23D005CA8();
  if (os_log_type_enabled(osloga, v87))
  {
    long long v88 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v88 = 0;
    _os_log_impl(&dword_23CEE3000, osloga, v87, "Could not report successful feedback submission because FBKFeedbackForm is nil", v88, 2u);
    MEMORY[0x23ECF6610](v88, -1, -1);
  }
  id v9 = osloga;

LABEL_6:
}

void DraftingExtensionViewController.controller(_:didFailToLoadDraftWithError:)(uint64_t a1, void *a2)
{
}

void DraftingExtensionViewController.controller(_:didRequestDismissalWithSavedDraft:)(uint64_t a1, char a2)
{
}

uint64_t sub_23CF67900(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_23CF6792C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23CF67954@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for DraftingExtensionViewController()
{
  return self;
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_23CF679C0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_23CF67A08()
{
  return sub_23CF6657C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_23CF67A14(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD8B0);
  char v42 = a2;
  uint64_t v6 = sub_23D0060D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  os_log_type_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    char v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_23D0062C8();
    sub_23D0059D8();
    uint64_t result = sub_23D0062F8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    int64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *int64_t v19 = v34;
    v19[1] = v33;
    uint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *uint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_23CF67D3C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD908);
  uint64_t result = sub_23D0060D8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    BOOL v29 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v12) {
          goto LABEL_33;
        }
        unint64_t v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v21 = v29[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v29 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v21 = v29[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      long long v30 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_23D0062C8();
      sub_23D0062D8();
      uint64_t result = sub_23D0062F8();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v7 + 48) + v17) = v27;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v17) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_23CF68020(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD890);
  uint64_t v6 = sub_23D0060D8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v16 = v15 | (v13 << 6);
      }
      else
      {
        int64_t v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v30) {
          goto LABEL_35;
        }
        unint64_t v18 = v31[v17];
        ++v13;
        if (!v18)
        {
          int64_t v13 = v17 + 1;
          if (v17 + 1 >= v30) {
            goto LABEL_35;
          }
          unint64_t v18 = v31[v13];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v30)
            {
LABEL_35:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 >= 64) {
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v31 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_42;
                }
                if (v13 >= v30) {
                  goto LABEL_35;
                }
                unint64_t v18 = v31[v13];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v19;
          }
        }
LABEL_21:
        unint64_t v10 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      long long v32 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
      unint64_t v21 = *(void *)(*(void *)(v5 + 48) + 16 * v16 + 8);
      if ((a2 & 1) == 0)
      {
        sub_23CF24FD0(v32, v21);
        swift_bridgeObjectRetain();
      }
      sub_23D0062C8();
      sub_23D0062D8();
      if (v21 > 2) {
        sub_23D0059D8();
      }
      uint64_t result = sub_23D0062F8();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v32;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v20;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_23CF6835C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE790);
  char v36 = a2;
  uint64_t v6 = sub_23D0060D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_23D0062C8();
    sub_23D0059D8();
    uint64_t result = sub_23D0062F8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_23CF68674(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = sub_23D003CE8();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  unint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE7C8);
  int v47 = a2;
  uint64_t v8 = sub_23D0060D8();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  int v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  char v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  unsigned __int8 v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    unint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_23D0062C8();
    sub_23D0059D8();
    uint64_t result = sub_23D0062F8();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    *unint64_t v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_23CF68A5C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE7A0);
  char v45 = a2;
  uint64_t v6 = sub_23D0060D8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v43 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v41 = v3;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v44 = v5;
  while (1)
  {
    if (v10)
    {
      uint64_t v46 = (v10 - 1) & v10;
      int64_t v47 = v13;
      unint64_t v20 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42) {
      break;
    }
    int64_t v22 = v43;
    unint64_t v23 = v43[v21];
    int64_t v24 = v13 + 1;
    if (!v23)
    {
      int64_t v24 = v13 + 2;
      if (v13 + 2 >= v42) {
        goto LABEL_33;
      }
      unint64_t v23 = v43[v24];
      if (!v23)
      {
        uint64_t v25 = v13 + 3;
        if (v13 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v41;
          if ((v45 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            int64_t v24 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v24 >= v42) {
              goto LABEL_33;
            }
            unint64_t v23 = v43[v24];
            ++v25;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v24 = v13 + 3;
      }
    }
LABEL_30:
    uint64_t v46 = (v23 - 1) & v23;
    int64_t v47 = v24;
    unint64_t v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(v5 + 56);
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    unint64_t v34 = (uint64_t *)(v30 + (v20 << 6));
    uint64_t v35 = v34[1];
    uint64_t v48 = *v34;
    uint64_t v36 = v34[3];
    uint64_t v50 = v34[2];
    char v49 = *((unsigned char *)v34 + 32);
    uint64_t v37 = v34[5];
    unsigned __int8 v38 = *((unsigned char *)v34 + 48);
    uint64_t v39 = v34[7];
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23CF6B70C(v37, v38);
      swift_bridgeObjectRetain();
    }
    sub_23D0062C8();
    sub_23D0059D8();
    uint64_t result = sub_23D0062F8();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v32;
    v18[1] = v33;
    unint64_t v19 = *(void *)(v7 + 56) + (v17 << 6);
    int64_t v13 = v47;
    *(void *)unint64_t v19 = v48;
    *(void *)(v19 + 8) = v35;
    *(void *)(v19 + 16) = v50;
    *(void *)(v19 + 24) = v36;
    *(unsigned char *)(v19 + 32) = v49;
    *(void *)(v19 + 40) = v37;
    *(unsigned char *)(v19 + 48) = v38;
    *(void *)(v19 + 56) = v39;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v44;
    unint64_t v10 = v46;
  }
  swift_release();
  uint64_t v3 = v41;
  int64_t v22 = v43;
  if ((v45 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_23CF68DFC(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_23D004268();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE798);
  int v46 = a2;
  uint64_t v10 = sub_23D0060D8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  int64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_23CF6B878(&qword_268BCD898, MEMORY[0x263F3C5D0]);
    uint64_t result = sub_23D0058D8();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

unint64_t sub_23CF69220(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = (void *)(a6[7] + 16 * result);
  *uint64_t v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

unint64_t sub_23CF69270(unint64_t result, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a5[6] + result) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * result);
  *uint64_t v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_23CF692B8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_23CF69300(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  uint64_t v6 = (_OWORD *)(a5[7] + (result << 6));
  long long v7 = a4[1];
  *uint64_t v6 = *a4;
  v6[1] = v7;
  long long v8 = a4[3];
  _OWORD v6[2] = a4[2];
  v6[3] = v8;
  uint64_t v9 = a5[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a5[2] = v11;
  }
  return result;
}

void *sub_23CF69358()
{
  os_log_type_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD8B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23D0060C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *os_log_type_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    int64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23CF69514()
{
  os_log_type_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD908);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23D0060C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *os_log_type_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    long long v16 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_OWORD *)(*(void *)(v4 + 56) + 16 * v15) = v16;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23CF696D4()
{
  os_log_type_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD890);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23D0060C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *os_log_type_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    sub_23CF24FD0(v19, *((unint64_t *)&v19 + 1));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23CF6988C()
{
  os_log_type_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE790);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_23D0060C8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *os_log_type_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23CF69A44()
{
  uint64_t v35 = sub_23D003CE8();
  uint64_t v1 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE7C8);
  uint64_t v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_23D0060C8();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v28 = v36;
    int64_t v27 = v30;
LABEL_25:
    *int64_t v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  uint64_t result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    uint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    unint64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    *unint64_t v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    int64_t v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_23CF69D08()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE7A0);
  uint64_t v33 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_23D0060C8();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v33 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v34 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v11) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v34 + 8 * v30);
    ++v7;
    if (!v31)
    {
      int64_t v7 = v30 + 1;
      if (v30 + 1 >= v11) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v34 + 8 * v7);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v31 - 1) & v31;
    unint64_t v13 = __clz(__rbit64(v31)) + (v7 << 6);
LABEL_12:
    uint64_t v14 = 16 * v13;
    unint64_t v15 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v13);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    unint64_t v18 = v13 << 6;
    unint64_t v19 = *(void *)(v1 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    char v24 = *(unsigned char *)(v19 + 32);
    uint64_t v25 = *(void *)(v19 + 40);
    uint64_t v26 = *(void *)(v19 + 56);
    int64_t v27 = (void *)(*(void *)(v3 + 48) + v14);
    unsigned __int8 v28 = *(unsigned char *)(v19 + 48);
    *int64_t v27 = v17;
    v27[1] = v16;
    unint64_t v29 = *(void *)(v3 + 56) + v18;
    *(void *)unint64_t v29 = v20;
    *(void *)(v29 + 8) = v21;
    *(void *)(v29 + 16) = v22;
    *(void *)(v29 + 24) = v23;
    *(unsigned char *)(v29 + 32) = v24;
    *(void *)(v29 + 40) = v25;
    *(unsigned char *)(v29 + 48) = v28;
    *(void *)(v29 + 56) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23CF6B70C(v25, v28);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v11) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v34 + 8 * v32);
  if (v31)
  {
    int64_t v7 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v34 + 8 * v7);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23CF69F2C()
{
  uint64_t v1 = sub_23D004268();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE798);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_23D0060C8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_23CF6A1C4(void *a1)
{
  uint64_t v2 = v1;
  if (qword_268BCCC40 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_23D004498();
  __swift_project_value_buffer(v4, (uint64_t)qword_268BCE6B8);
  id v5 = a1;
  uint64_t v6 = sub_23D004478();
  os_log_type_t v7 = sub_23D005CB8();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    unint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138543362;
    id v10 = objc_msgSend(v5, sel_ID);
    sub_23D005E48();
    *unint64_t v9 = v10;

    _os_log_impl(&dword_23CEE3000, v6, v7, "User did tap switch user from user %{public}@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDC00);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v9, -1, -1);
    MEMORY[0x23ECF6610](v8, -1, -1);
  }
  else
  {
  }
  if (*(void *)(v2 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session))
  {
    swift_retain();
    sub_23CF924C0();
    swift_release();
  }
}

void sub_23CF6A3B8(void *a1, void *a2, void *a3)
{
  uint64_t v4 = OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session;
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_session);
  if (v5)
  {
    uint64_t v8 = *(void **)(v5 + 48);
    *(void *)(v5 + 48) = a1;
    id v9 = a1;

    uint64_t v10 = *(void *)(v3 + v4);
    if (v10)
    {
      uint64_t v11 = *(void **)(v10 + 56);
      *(void *)(v10 + 56) = a2;
      id v12 = a2;

      uint64_t v13 = *(void *)(v3 + v4);
      if (v13)
      {
        id v15 = *(id *)(v13 + 64);
        *(void *)(v13 + 64) = a3;
        id v14 = a3;
      }
    }
  }
}

void sub_23CF6A470(void (*a1)(char *, char *, uint64_t))
{
  v80[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCE600);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v73 - v7;
  uint64_t v9 = sub_23D003CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  unint64_t v16 = (char *)v73 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  int64_t v19 = (char *)v73 - v18;
  MEMORY[0x270FA5388](v17);
  int64_t v21 = (char *)v73 - v20;
  unint64_t v78 = a1;
  id v22 = objc_msgSend(a1, sel_originalLocalFileURL);
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_10;
  }
  uint64_t v23 = v22;
  unsigned __int8 v74 = v13;
  uint64_t v75 = v16;
  uint64_t v77 = v21;
  sub_23D003CA8();

  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v24(v8, v19, v9);
  uint64_t v25 = v10;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v26(v8, 0, 1, v9);
  uint64_t v76 = v25;
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v27(v8, 1, v9) == 1)
  {
LABEL_10:
    sub_23CF6B720((uint64_t)v8);
    goto LABEL_13;
  }
  v24(v77, v8, v9);
  uint64_t v28 = *(void *)(v1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_form);
  if (v28)
  {
    unint64_t v29 = (uint64_t *)(v28 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_attachments);
    uint64_t v30 = swift_beginAccess();
    uint64_t v31 = *v29;
    MEMORY[0x270FA5388](v30);
    int64_t v32 = v77;
    v73[-2] = v77;
    swift_bridgeObjectRetain();
    sub_23CF5FF04((uint64_t (*)(char *))sub_23CF6B780, v31, v6);
    swift_bridgeObjectRelease();
    uint64_t v33 = v9;
    if (v27(v6, 1, v9) != 1)
    {
      sub_23CF6B720((uint64_t)v6);
      uint64_t v34 = v76;
      if (qword_268BCCC40 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_23D004498();
      uint64_t v36 = __swift_project_value_buffer(v35, (uint64_t)qword_268BCE6B8);
      uint64_t v37 = v75;
      unint64_t v78 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      v78(v75, v32, v9);
      uint64_t v38 = sub_23D004478();
      os_log_type_t v39 = sub_23D005CB8();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        v73[3] = v36;
        int64_t v41 = (uint8_t *)v40;
        int64_t v42 = (void *)swift_slowAlloc();
        v73[2] = v34 + 16;
        int64_t v43 = v42;
        v80[0] = v42;
        *(_DWORD *)int64_t v41 = 136446210;
        v73[1] = v41 + 4;
        sub_23CF6B878((unint64_t *)&qword_268BCD5D0, MEMORY[0x263F06EA8]);
        uint64_t v44 = sub_23D0061F8();
        uint64_t v79 = sub_23CF231B0(v44, v45, (uint64_t *)v80);
        sub_23D005E48();
        swift_bridgeObjectRelease();
        int v46 = *(void (**)(char *, uint64_t))(v34 + 8);
        v46(v37, v33);
        _os_log_impl(&dword_23CEE3000, v38, v39, "Deleting attached file from temp directory %{public}s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23ECF6610](v43, -1, -1);
        MEMORY[0x23ECF6610](v41, -1, -1);
      }
      else
      {
        int v46 = *(void (**)(char *, uint64_t))(v34 + 8);
        v46(v37, v33);
      }

      id v55 = objc_msgSend(self, sel_defaultManager);
      char v56 = (void *)sub_23D003C48();
      v80[0] = 0;
      unsigned int v57 = objc_msgSend(v55, sel_removeItemAtURL_error_, v56, v80);

      if (v57)
      {
        id v58 = v80[0];
        v46(v32, v33);
      }
      else
      {
        id v59 = v80[0];
        uint64_t v60 = (void *)sub_23D003BC8();

        swift_willThrow();
        char v61 = v74;
        v78(v74, v32, v33);
        id v62 = v60;
        id v63 = v60;
        id v64 = sub_23D004478();
        os_log_type_t v65 = sub_23D005C98();
        if (os_log_type_enabled(v64, v65))
        {
          uint64_t v66 = swift_slowAlloc();
          unint64_t v78 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
          v80[0] = v78;
          *(_DWORD *)uint64_t v66 = 136446466;
          sub_23CF6B878((unint64_t *)&qword_268BCD5D0, MEMORY[0x263F06EA8]);
          uint64_t v67 = sub_23D0061F8();
          uint64_t v79 = sub_23CF231B0(v67, v68, (uint64_t *)v80);
          sub_23D005E48();
          swift_bridgeObjectRelease();
          v46(v61, v33);
          *(_WORD *)(v66 + 12) = 2080;
          uint64_t v79 = (uint64_t)v60;
          id v69 = v60;
          __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
          uint64_t v70 = sub_23D005998();
          uint64_t v79 = sub_23CF231B0(v70, v71, (uint64_t *)v80);
          sub_23D005E48();
          int64_t v32 = v77;
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_23CEE3000, v64, v65, "Failed to delete file %{public}s error %s", (uint8_t *)v66, 0x16u);
          unint64_t v72 = v78;
          swift_arrayDestroy();
          MEMORY[0x23ECF6610](v72, -1, -1);
          MEMORY[0x23ECF6610](v66, -1, -1);
        }
        else
        {

          v46(v61, v33);
        }
        v46(v32, v33);
      }
      return;
    }
  }
  else
  {
    v26(v6, 1, 1, v9);
    uint64_t v33 = v9;
    int64_t v32 = v77;
  }
  sub_23CF6B720((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v32, v33);
LABEL_13:
  if (qword_268BCCC40 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_23D004498();
  __swift_project_value_buffer(v47, (uint64_t)qword_268BCE6B8);
  uint64_t v48 = v78;
  char v49 = sub_23D004478();
  os_log_type_t v50 = sub_23D005C98();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    unint64_t v52 = (void *)swift_slowAlloc();
    uint64_t v53 = (void *)swift_slowAlloc();
    v80[0] = v53;
    *(_DWORD *)uint64_t v51 = 136315394;
    uint64_t v79 = sub_23CF231B0(0xD000000000000021, 0x800000023D012520, (uint64_t *)v80);
    sub_23D005E48();
    *(_WORD *)(v51 + 12) = 2112;
    uint64_t v79 = (uint64_t)v48;
    unsigned __int8 v54 = v48;
    sub_23D005E48();
    *unint64_t v52 = v48;

    _os_log_impl(&dword_23CEE3000, v49, v50, "%s encountered attachment that it cannot not delete %@", (uint8_t *)v51, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDC00);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v52, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v53, -1, -1);
    MEMORY[0x23ECF6610](v51, -1, -1);
  }
  else
  {
  }
}

void sub_23CF6AEE8(void *a1)
{
  uint64_t v2 = v1;
  if (qword_268BCCC40 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_23D004498();
  __swift_project_value_buffer(v4, (uint64_t)qword_268BCE6B8);
  id v5 = a1;
  id v6 = a1;
  uint64_t v7 = sub_23D004478();
  os_log_type_t v8 = sub_23D005C98();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    id v11 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
    uint64_t v12 = sub_23D005998();
    sub_23CF231B0(v12, v13, &v17);
    sub_23D005E48();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23CEE3000, v7, v8, "Failed to load new response with error: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v10, -1, -1);
    MEMORY[0x23ECF6610](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = *(void (**)(void *, uint64_t))(v2
                                               + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_setFeedbackFormReply);
  if (v14)
  {
    sub_23CF31A54(0, &qword_268BCE788);
    swift_retain();
    uint64_t v15 = (void *)sub_23D005DB8();
    v14(v15, v16);
    sub_23CEE93B4((uint64_t)v14);
  }
}

void sub_23CF6B120(char a1)
{
  uint64_t v3 = MEMORY[0x23ECF66F0](v1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_xpcClient);
  if (!v3)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
    swift_beginAccess();
    id v6 = (void *)MEMORY[0x23ECF66F0](v7);
    if (!v6)
    {
      sub_23D0060A8();
      __break(1u);
      return;
    }
LABEL_5:
    objc_msgSend(v6, sel_didRequestViewDismissalWithSaved_, a1 & 1);
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v4 = (void *)v3;
  sub_23CF9A2C4();
  id v6 = v5;

  if (v6) {
    goto LABEL_5;
  }
}

void _s8Feedback31DraftingExtensionViewControllerC30controllerDidRequestFullScreen4withySo015FBKBugFormTabledE0C_tF_0()
{
  uint64_t v1 = MEMORY[0x23ECF66F0](v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_xpcClient);
  if (!v1)
  {
    uint64_t v5 = v0 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
    swift_beginAccess();
    uint64_t v4 = (void *)MEMORY[0x23ECF66F0](v5);
    if (!v4)
    {
      sub_23D0060A8();
      __break(1u);
      return;
    }
LABEL_5:
    objc_msgSend(v4, sel_didRequestViewFullScreen);
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v2 = (void *)v1;
  sub_23CF9A2C4();
  uint64_t v4 = v3;

  if (v4) {
    goto LABEL_5;
  }
}

uint64_t sub_23CF6B308@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_localClient;
  swift_beginAccess();
  uint64_t result = MEMORY[0x23ECF66F0](v3);
  *a2 = result;
  return result;
}

uint64_t sub_23CF6B360()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for DraftingExtensionViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DraftingExtensionViewController);
}

uint64_t dispatch thunk of DraftingExtensionViewController.localClient.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of DraftingExtensionViewController.localClient.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of DraftingExtensionViewController.localClient.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x158))();
}

uint64_t sub_23CF6B484()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_23CF6B4BC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_23CF6B4D0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_23CF6B508()
{
  id result = *(id *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtC8Feedback31DraftingExtensionViewController_bugFormTableViewController);
  if (result) {
    return objc_msgSend(result, sel_closeDraftAndDelete_completion_, 1, 0);
  }
  return result;
}

uint64_t sub_23CF6B534()
{
  return MEMORY[0x270FA0238](v0, 25, 7);
}

void sub_23CF6B56C()
{
  sub_23CF65E58(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_23CF6B578()
{
  sub_23CF65A38(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_23CF6B584(uint64_t a1)
{
  sub_23CF623AC(a1, *(void *)(v1 + 16), "User gave up");
}

uint64_t sub_23CF6B5AC(uint64_t a1)
{
  return sub_23CF62528(a1, *(void *)(v1 + 16), "User wants to retry");
}

void sub_23CF6B5D0(uint64_t a1)
{
  sub_23CF623AC(a1, *(void *)(v1 + 16), "User cancelled authentication");
}

uint64_t sub_23CF6B5F8(uint64_t a1)
{
  return sub_23CF62528(a1, *(void *)(v1 + 16), "User wants to retry authentication");
}

uint64_t sub_23CF6B61C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_23CF6B654(void *a1, char a2)
{
  sub_23CF61174(a1, a2 & 1, v2);
}

uint64_t sub_23CF6B660()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_23CF6B698()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_23CF6B6D0()
{
  sub_23CF617B4(*(void *)(v0 + 16));
}

void sub_23CF6B6D8(id a1, char a2)
{
  if ((a2 & 1) == 0) {
}
  }

uint64_t sub_23CF6B6E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_23CF6B70C(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23CF6B720(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCE600);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23CF6B780(uint64_t a1)
{
  return MEMORY[0x23ECF3700](a1, *(void *)(v1 + 16)) & 1;
}

void sub_23CF6B7B0(void *a1)
{
  sub_23CF65334(a1, *(void *)(v1 + 16));
}

uint64_t sub_23CF6B7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URLError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF6B81C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URLError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23CF6B878(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FBKInlineThumbsUp.feedbackController.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
  MEMORY[0x23ECF50E0](&v2, v0);
  return v2;
}

uint64_t FBKInlineThumbsUp.feedbackController.setter()
{
  return sub_23D005678();
}

void (*FBKInlineThumbsUp.feedbackController.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  v3[5] = *v1;
  v3[6] = v5;
  id v6 = (void *)v1[2];
  v3[7] = v6;
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  swift_retain();
  swift_retain();
  id v7 = v6;
  v3[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
  MEMORY[0x23ECF50E0]();
  return sub_23CF56380;
}

uint64_t FBKInlineThumbsUp.$feedbackController.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
  sub_23D005698();
  return v1;
}

uint64_t FBKInlineThumbsUp.subject.getter()
{
  return sub_23CF6BECC(MEMORY[0x263F1B730]);
}

uint64_t type metadata accessor for FBKInlineThumbsUp()
{
  uint64_t result = qword_268BCE7D8;
  if (!qword_268BCE7D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF6BB34(uint64_t a1)
{
  uint64_t v2 = sub_23D003F98();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  os_log_type_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  type metadata accessor for FBKInlineThumbsUp();
  v9(v6, (uint64_t)v8, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  sub_23D005678();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t FBKInlineThumbsUp.subject.setter(uint64_t a1)
{
  uint64_t v2 = sub_23D003F98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FBKInlineThumbsUp();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  sub_23D005678();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*FBKInlineThumbsUp.subject.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = sub_23D003F98();
  *uint64_t v3 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[1] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  v3[4] = v7;
  os_log_type_t v8 = malloc(*(void *)(*(void *)(v7 - 8) + 64));
  v3[5] = v8;
  uint64_t v9 = type metadata accessor for FBKInlineThumbsUp();
  sub_23CF56948(v1 + *(int *)(v9 + 20), (uint64_t)v8);
  MEMORY[0x23ECF50E0](v7);
  return sub_23CF56870;
}

uint64_t FBKInlineThumbsUp.$subject.getter()
{
  return sub_23CF6BECC(MEMORY[0x263F1B740]);
}

uint64_t sub_23CF6BECC(uint64_t (*a1)(uint64_t))
{
  type metadata accessor for FBKInlineThumbsUp();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  return a1(v2);
}

uint64_t FBKInlineThumbsUp.disabled.getter()
{
  type metadata accessor for FBKInlineThumbsUp();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE478);
  MEMORY[0x23ECF50E0](&v2, v0);
  return v2;
}

void *sub_23CF6BF80@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for FBKInlineThumbsUp();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE478);
  uint64_t result = MEMORY[0x23ECF50E0](&v4, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_23CF6BFF4()
{
  return sub_23D005678();
}

uint64_t FBKInlineThumbsUp.disabled.setter()
{
  return sub_23D005678();
}

void (*FBKInlineThumbsUp.disabled.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FBKInlineThumbsUp() + 24));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  v3[3] = *v4;
  v3[4] = v6;
  LOBYTE(v4) = *((unsigned char *)v4 + 16);
  *((unsigned char *)v3 + 19) = (_BYTE)v4;
  *uint64_t v3 = v5;
  v3[1] = v6;
  *((unsigned char *)v3 + 16) = (_BYTE)v4;
  swift_retain();
  swift_retain();
  v3[5] = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE478);
  MEMORY[0x23ECF50E0]();
  return sub_23CF56CCC;
}

uint64_t FBKInlineThumbsUp.$disabled.getter()
{
  type metadata accessor for FBKInlineThumbsUp();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE478);
  sub_23D005698();
  return v1;
}

uint64_t sub_23CF6C1D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FBKInlineThumbsUp() + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_23CF57E44;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;

  return sub_23CEE935C(v4);
}

uint64_t sub_23CF6C268(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_23CF57E3C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for FBKInlineThumbsUp() + 28));
  uint64_t v8 = *v7;
  sub_23CEE935C(v3);
  uint64_t result = sub_23CEE93B4(v8);
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t FBKInlineThumbsUp.onFormComplete.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FBKInlineThumbsUp() + 28));
  sub_23CEE935C(v1);
  return v1;
}

uint64_t FBKInlineThumbsUp.onFormComplete.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for FBKInlineThumbsUp() + 28));
  uint64_t result = sub_23CEE93B4(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FBKInlineThumbsUp.onFormComplete.modify())()
{
  return nullsub_1;
}

uint64_t FBKInlineThumbsUp.init(feedbackController:subject:disabled:onFormComplete:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  uint64_t v17 = (int *)type metadata accessor for FBKInlineThumbsUp();
  uint64_t v18 = (void *)((char *)a9 + v17[7]);
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  uint64_t result = sub_23CF57068(a4, (uint64_t)a9 + v17[5]);
  uint64_t v20 = (char *)a9 + v17[6];
  *(void *)uint64_t v20 = a5;
  *((void *)v20 + 1) = a6;
  v20[16] = a7;
  *uint64_t v18 = a8;
  v18[1] = a10;
  return result;
}

uint64_t FBKInlineThumbsUp.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_23D003F38();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void))(v8 + 104))(v7, *MEMORY[0x263F3C200]);
  uint64_t v9 = type metadata accessor for FBKInlineThumbsUp();
  sub_23D005698();
  uint64_t v10 = (uint64_t *)((char *)v1 + *(int *)(v9 + 28));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v22 = *v1;
  long long v23 = *(_OWORD *)(v1 + 1);
  sub_23CEE935C(v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
  sub_23D005698();
  uint64_t v13 = v24;
  uint64_t v14 = v25;
  uint64_t v15 = v26;
  uint64_t v16 = (uint64_t *)((char *)v1 + *(int *)(v9 + 24));
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  LOBYTE(v16) = *((unsigned char *)v16 + 16);
  uint64_t v22 = v17;
  *(void *)&long long v23 = v18;
  BYTE8(v23) = (_BYTE)v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE478);
  sub_23D005698();
  return sub_23CF72744((uint64_t)v7, (uint64_t)v4, v11, v12, v13, v14, v15, v21, v24, v25, v26);
}

uint64_t sub_23CF6C6A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF6C6CC()
{
  type metadata accessor for FBKInlineThumbsUp();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  return MEMORY[0x23ECF50E0](v0);
}

uint64_t getEnumTagSinglePayload for FBKInlineThumbsUp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF6C744);
}

uint64_t sub_23CF6C744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FBKInlineThumbsUp(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF6C80C);
}

uint64_t sub_23CF6C80C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_23CF6C8B8()
{
  sub_23CF57D50();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_23CF6C968()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void *sub_23CF6C9A8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DonationControllerDebugger(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for DonationControllerDebugger(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DonationControllerDebugger(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DonationControllerDebugger(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DonationControllerDebugger()
{
  return &type metadata for DonationControllerDebugger;
}

uint64_t sub_23CF6CB3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF6CB58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCF88);
  MEMORY[0x270FA5388](v2 - 8);
  int v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[2] = sub_23D003D88();
  v20[3] = v5;
  sub_23CEE8D00();
  uint64_t v6 = sub_23D005228();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  uint64_t v11 = sub_23D005128();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  sub_23D005158();
  sub_23CEE8BB4((uint64_t)v4, &qword_268BCCF88);
  sub_23D0050E8();
  swift_release();
  uint64_t v12 = sub_23D0051F8();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  swift_release();
  sub_23CEE7DE0(v6, v8, v10);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v14;
  *(unsigned char *)(a1 + 16) = v16 & 1;
  *(void *)(a1 + 24) = v18;
  return result;
}

uint64_t sub_23CF6CCF0@<X0>(uint64_t a1@<X8>)
{
  sub_23CEE8D00();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_23D005228();
  uint64_t v20 = v3;
  uint64_t v21 = v2;
  uint64_t v22 = v4;
  char v6 = v5 & 1;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_23D005228();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  uint64_t v12 = sub_23D0051C8();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  sub_23CEE7DE0(v7, v9, v11);
  swift_bridgeObjectRelease();
  *(void *)a1 = v21;
  *(void *)(a1 + 8) = v20;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v14;
  *(unsigned char *)(a1 + 64) = v18;
  *(void *)(a1 + 72) = v16;
  sub_23CEE8444(v21, v20, v6);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v12, v14, v18);
  swift_bridgeObjectRetain();
  sub_23CEE7DE0(v12, v14, v18);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v21, v20, v6);
  return swift_bridgeObjectRelease();
}

__n128 sub_23CF6CE74@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_23D004B08();
  sub_23CF6CCF0((uint64_t)&v11);
  char v3 = v12;
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  char v6 = v15;
  char v7 = v17;
  uint64_t v8 = v18;
  __n128 result = v11;
  long long v10 = v16;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  return result;
}

uint64_t sub_23CF6CF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  LODWORD(v48) = a3;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE970);
  MEMORY[0x270FA5388](v51);
  unsigned __int8 v54 = (uint64_t *)((char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_23D004E68();
  uint64_t v46 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD718);
  uint64_t v45 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE978);
  uint64_t v47 = *(void *)(v53 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v53);
  long long v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE980);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v50 = (uint64_t)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  long long v23 = (char *)&v43 - v22;
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  sub_23CEE8D00();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_23D005228();
  uint64_t v52 = v25;
  int v49 = v26;
  uint64_t v28 = v27;
  if (v48)
  {
    sub_23D004658();
    sub_23D004E58();
    uint64_t v29 = sub_23CEE8D90(&qword_268BCE988, &qword_268BCD718);
    uint64_t v44 = v24;
    uint64_t v30 = v29;
    uint64_t v31 = sub_23CF70F14(&qword_268BCE990, MEMORY[0x263F1A1D8]);
    uint64_t v48 = v28;
    uint64_t v32 = v31;
    sub_23D005268();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v11);
    uint64_t v33 = v47;
    uint64_t v34 = v16;
    uint64_t v35 = v53;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v18, v34, v53);
    (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 16))(v54, v18, v35);
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = v11;
    uint64_t v56 = v8;
    uint64_t v57 = v30;
    uint64_t v58 = v32;
    uint64_t v24 = v44;
    uint64_t v28 = v48;
    swift_getOpaqueTypeConformance2();
    sub_23D004D88();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v18, v35);
  }
  else
  {
    uint64_t *v54 = sub_23D005578();
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = sub_23CEE8D90(&qword_268BCE988, &qword_268BCD718);
    uint64_t v37 = sub_23CF70F14(&qword_268BCE990, MEMORY[0x263F1A1D8]);
    uint64_t v55 = v11;
    uint64_t v56 = v8;
    uint64_t v57 = v36;
    uint64_t v58 = v37;
    swift_getOpaqueTypeConformance2();
    sub_23D004D88();
  }
  char v38 = v49 & 1;
  uint64_t v39 = v50;
  sub_23CF70F5C((uint64_t)v23, v50);
  uint64_t v40 = v52;
  *(void *)a4 = v24;
  *(void *)(a4 + 8) = v40;
  *(unsigned char *)(a4 + 16) = v38;
  *(void *)(a4 + 24) = v28;
  *(void *)(a4 + 32) = 0;
  *(unsigned char *)(a4 + 40) = 1;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE998);
  sub_23CF70F5C(v39, a4 + *(int *)(v41 + 64));
  sub_23CEE8444(v24, v40, v38);
  swift_bridgeObjectRetain();
  sub_23CEE8BB4((uint64_t)v23, &qword_268BCE980);
  sub_23CEE8BB4(v39, &qword_268BCE980);
  sub_23CEE7DE0(v24, v40, v38);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF6D514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  int v5 = *(unsigned __int8 *)(v1 + 16);
  *(void *)a1 = sub_23D004B08();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v6 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE960) + 44);
  *(void *)uint64_t v6 = sub_23D004B08();
  *(void *)(v6 + 8) = 0;
  *(unsigned char *)(v6 + 16) = 1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE968);
  return sub_23CF6CF18(v3, v4, v5, v6 + *(int *)(v7 + 44));
}

uint64_t sub_23CF6D5A0@<X0>(char *a1@<X8>)
{
  os_log_type_t v65 = a1;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE868);
  uint64_t v74 = *(void *)(v64 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v64);
  id v63 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  unint64_t v72 = (char *)&v58 - v3;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE870);
  uint64_t v69 = *(void *)(v73 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v73);
  uint64_t v75 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v71 = (char *)&v58 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  long long v10 = (char *)&v58 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v58 - v11;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE878);
  uint64_t v67 = *(void *)(v70 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v70);
  unint64_t v68 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v66 = (char *)&v58 - v15;
  sub_23D004BC8();
  uint64_t v80 = sub_23D005208();
  uint64_t v81 = v16;
  char v82 = v17 & 1;
  uint64_t v83 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE880);
  sub_23CEE8D90(&qword_268BCE888, &qword_268BCE880);
  sub_23D005708();
  sub_23D004BC8();
  uint64_t v80 = sub_23D005208();
  uint64_t v81 = v19;
  char v82 = v20 & 1;
  uint64_t v83 = v21;
  sub_23D004BC8();
  uint64_t v76 = sub_23D005208();
  uint64_t v77 = v22;
  char v78 = v23 & 1;
  uint64_t v79 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE890);
  sub_23CF70440(&qword_268BCE898, &qword_268BCE890, (void (*)(void))sub_23CF70398);
  id v62 = v12;
  sub_23D005718();
  sub_23D004BC8();
  uint64_t v80 = sub_23D005208();
  uint64_t v81 = v25;
  char v82 = v26 & 1;
  uint64_t v83 = v27;
  sub_23D004BC8();
  uint64_t v76 = sub_23D005208();
  uint64_t v77 = v28;
  char v78 = v29 & 1;
  uint64_t v79 = v30;
  uint64_t v31 = v10;
  char v61 = v10;
  sub_23D005718();
  sub_23D004BC8();
  uint64_t v80 = sub_23D005208();
  uint64_t v81 = v32;
  char v82 = v33 & 1;
  uint64_t v83 = v34;
  sub_23D004BC8();
  uint64_t v76 = sub_23D005208();
  uint64_t v77 = v35;
  char v78 = v36 & 1;
  uint64_t v79 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE8C0);
  sub_23CF70440(&qword_268BCE8C8, &qword_268BCE8C0, (void (*)(void))sub_23CF704C0);
  char v38 = v72;
  sub_23D005718();
  id v59 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  uint64_t v39 = v68;
  uint64_t v40 = v70;
  v59(v68, v66, v70);
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  int64_t v42 = v71;
  uint64_t v43 = v12;
  uint64_t v44 = v73;
  v41(v71, v43, v73);
  v41(v75, v31, v44);
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v45 = v63;
  uint64_t v46 = v38;
  uint64_t v47 = v64;
  v60(v63, v46, v64);
  uint64_t v48 = v65;
  v59(v65, v39, v40);
  int v49 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE8E8);
  uint64_t v50 = v42;
  uint64_t v51 = v73;
  v41(&v48[v49[12]], v50, v73);
  v41(&v48[v49[16]], v75, v51);
  v60(&v48[v49[20]], v45, v47);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v74 + 8);
  uint64_t v53 = v47;
  v52(v72, v47);
  unsigned __int8 v54 = *(void (**)(char *, uint64_t))(v69 + 8);
  v54(v61, v51);
  v54(v62, v51);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v67 + 8);
  uint64_t v56 = v70;
  v55(v66, v70);
  v52(v45, v53);
  v54(v75, v51);
  v54(v71, v51);
  return ((uint64_t (*)(char *, uint64_t))v55)(v68, v56);
}

uint64_t sub_23CF6DE40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getKeyPath();
  sub_23CF70F14((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
  sub_23D003DD8();
  swift_release();
  char v15 = *(unsigned char *)(a1 + 64);
  swift_getKeyPath();
  sub_23D003DD8();
  swift_release();
  swift_beginAccess();
  uint64_t v13 = sub_23D0061F8();
  uint64_t v16 = v4;
  swift_getKeyPath();
  sub_23D003DD8();
  swift_release();
  swift_beginAccess();
  uint64_t v12 = sub_23D0061F8();
  uint64_t v14 = v5;
  swift_getKeyPath();
  sub_23D003DD8();
  swift_release();
  swift_beginAccess();
  if (*(void *)(a1 + 16) >> 62)
  {
    swift_bridgeObjectRetain();
    sub_23D0060B8();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = sub_23D0061F8();
  uint64_t v8 = v7;
  swift_getKeyPath();
  sub_23D003DD8();
  swift_release();
  uint64_t v9 = sub_23D0061F8();
  *(void *)a2 = 0x676E69636E7953;
  *(void *)(a2 + 8) = 0xE700000000000000;
  *(unsigned char *)(a2 + 16) = v15;
  *(void *)(a2 + 24) = 0xD000000000000016;
  *(void *)(a2 + 32) = 0x800000023D012750;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = v16;
  strcpy((char *)(a2 + 56), "Interactions");
  *(unsigned char *)(a2 + 69) = 0;
  *(_WORD *)(a2 + 70) = -5120;
  *(void *)(a2 + 72) = v12;
  *(void *)(a2 + 80) = v14;
  *(void *)(a2 + 88) = 0xD000000000000015;
  *(void *)(a2 + 96) = 0x800000023D012880;
  *(void *)(a2 + 104) = v6;
  *(void *)(a2 + 112) = v8;
  *(void *)(a2 + 120) = 0xD000000000000016;
  *(void *)(a2 + 128) = 0x800000023D012930;
  *(void *)(a2 + 136) = v9;
  *(void *)(a2 + 144) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF6E1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE8A8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE910);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v17 = a1;
  sub_23CF70F14((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
  sub_23D003DD8();
  swift_release();
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 32) + 16))
  {
    swift_getKeyPath();
    uint64_t v16 = a1;
    sub_23D003DD8();
    swift_release();
    uint64_t v16 = *(void *)(a1 + 32);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE918);
    sub_23D003DB8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE8B8);
    v15[0] = a2;
    sub_23CEE8D90(&qword_268BCE920, &qword_268BCE918);
    sub_23CEE8D90(&qword_268BCE8B0, &qword_268BCE8B8);
    sub_23CF70F14(&qword_268BCE928, (void (*)(uint64_t))type metadata accessor for BatchInteraction);
    sub_23D0056F8();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
    swift_storeEnumTagMultiPayload();
    sub_23CF70398();
    sub_23D004D88();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    sub_23D004BC8();
    *(void *)uint64_t v10 = sub_23D005208();
    *((void *)v10 + 1) = v12;
    unsigned char v10[16] = v13 & 1;
    *((void *)v10 + 3) = v14;
    swift_storeEnumTagMultiPayload();
    sub_23CF70398();
    return sub_23D004D88();
  }
}

uint64_t sub_23CF6E5C0(uint64_t a1)
{
  return sub_23CF6E9A8(a1, (uint64_t)sub_23CF705C0);
}

uint64_t sub_23CF6E5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE8A8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE910);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v17 = a1;
  sub_23CF70F14((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
  sub_23D003DD8();
  swift_release();
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 24) + 16))
  {
    swift_getKeyPath();
    uint64_t v16 = a1;
    sub_23D003DD8();
    swift_release();
    uint64_t v16 = *(void *)(a1 + 24);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE918);
    sub_23D003DB8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE8B8);
    v15[0] = a2;
    sub_23CEE8D90(&qword_268BCE920, &qword_268BCE918);
    sub_23CEE8D90(&qword_268BCE8B0, &qword_268BCE8B8);
    sub_23CF70F14(&qword_268BCE928, (void (*)(uint64_t))type metadata accessor for BatchInteraction);
    sub_23D0056F8();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
    swift_storeEnumTagMultiPayload();
    sub_23CF70398();
    sub_23D004D88();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    sub_23D004BC8();
    *(void *)uint64_t v10 = sub_23D005208();
    *((void *)v10 + 1) = v12;
    unsigned char v10[16] = v13 & 1;
    *((void *)v10 + 3) = v14;
    swift_storeEnumTagMultiPayload();
    sub_23CF70398();
    return sub_23D004D88();
  }
}

uint64_t sub_23CF6E9A8(uint64_t a1, uint64_t a2)
{
  v23[1] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD7D0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EvaluationCard();
  uint64_t v7 = v6 - 8;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE930);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  char v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v15 = (char *)v23 - v14;
  v23[4] = a1;
  sub_23CF705C4(a1, (uint64_t)v9, type metadata accessor for BatchInteraction);
  uint64_t v16 = &v9[*(int *)(v7 + 28)];
  type metadata accessor for BatchController();
  sub_23CF70F14(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  *(void *)uint64_t v16 = sub_23D004618();
  v16[8] = v17 & 1;
  uint64_t v18 = &v9[*(int *)(v7 + 32)];
  uint64_t v19 = sub_23D003F98();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
  id v20 = objc_allocWithZone((Class)type metadata accessor for FBKEvaluationController(0));
  v23[5] = FBKEvaluationController.init(subject:)((uint64_t)v5);
  sub_23D0055B8();
  uint64_t v21 = v23[7];
  *(void *)uint64_t v18 = v23[6];
  *((void *)v18 + 1) = v21;
  sub_23CF705C4((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for EvaluationCard);
  v13[*(int *)(v10 + 36)] = 0;
  sub_23CF18714((uint64_t)v9);
  sub_23CEE83D8((uint64_t)v13, (uint64_t)v15, &qword_268BCE930);
  _s8Feedback3RowVMa_0();
  sub_23CF70F14(&qword_268BCE8E0, (void (*)(uint64_t))_s8Feedback3RowVMa_0);
  sub_23CF7062C();
  return sub_23D0047D8();
}

uint64_t sub_23CF6ECB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v16[0] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE8D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE8F0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v18 = a1;
  sub_23CF70F14((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
  sub_23D003DD8();
  swift_release();
  swift_beginAccess();
  unint64_t v10 = *(void *)(a1 + 16);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_23D0060B8();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_getKeyPath();
    uint64_t v17 = a1;
    sub_23D003DD8();
    swift_release();
    uint64_t v17 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE8F8);
    sub_23D003DB8();
    _s8Feedback3RowVMa_0();
    sub_23CEE8D90(&qword_268BCE900, &qword_268BCE8F8);
    sub_23CF70F14(&qword_268BCE8E0, (void (*)(uint64_t))_s8Feedback3RowVMa_0);
    sub_23CF70F14(&qword_268BCE908, (void (*)(uint64_t))type metadata accessor for NullableBatchInteraction);
    sub_23D0056F8();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v3);
    swift_storeEnumTagMultiPayload();
    sub_23CF704C0();
    sub_23D004D88();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_23D004BC8();
  *(void *)uint64_t v9 = sub_23D005208();
  *((void *)v9 + 1) = v13;
  unsigned char v9[16] = v14 & 1;
  *((void *)v9 + 3) = v15;
  swift_storeEnumTagMultiPayload();
  sub_23CF704C0();
  return sub_23D004D88();
}

uint64_t sub_23CF6F0C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC8Feedback24NullableBatchInteraction_id;
  uint64_t v4 = sub_23D003DB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, v3, v4);
}

uint64_t sub_23CF6F13C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE858);
  sub_23CEE8D90(&qword_268BCE860, &qword_268BCE858);

  return sub_23D0051A8();
}

uint64_t sub_23CF6F1D4(uint64_t a1, uint64_t a2)
{
  sub_23D004C58();
  sub_23CF6F460(a1, a2, v5);
  sub_23D005778();
  sub_23D0048D8();
  sub_23D004BC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE7F0);
  sub_23CF6FF98();
  sub_23D005328();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_23CF70038((uint64_t)v5);
}

double sub_23CF6F460@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  *(void *)&long long v82 = a1;
  *((void *)&v82 + 1) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE810);
  sub_23D0055C8();
  if (v49)
  {
    sub_23CF701F4((uint64_t)&v49);
    sub_23CEE83D8((uint64_t)&v49, (uint64_t)v23, &qword_268BCE818);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE820);
    sub_23CF701A0();
    sub_23CEE8D90(&qword_268BCE830, &qword_268BCE820);
    sub_23D004D88();
  }
  else
  {
    sub_23D004BC8();
    uint64_t v6 = sub_23D005208();
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    char v12 = v11 & 1;
    char v21 = sub_23D005078();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    *(void *)(v13 + 24) = a2;
    swift_retain();
    swift_retain();
    char v22 = sub_23D005078();
    char v39 = 1;
    char v37 = v12;
    char v34 = 1;
    char v32 = 1;
    char v27 = 1;
    char v25 = 1;
    v48[0] = *(_DWORD *)v38;
    *(_DWORD *)((char *)v48 + 3) = *(_DWORD *)&v38[3];
    v47[0] = *(_DWORD *)v36;
    *(_DWORD *)((char *)v47 + 3) = *(_DWORD *)&v36[3];
    *(_DWORD *)((char *)v46 + 3) = *(_DWORD *)&v35[3];
    v46[0] = *(_DWORD *)v35;
    v45[0] = *(_DWORD *)v33;
    *(_DWORD *)((char *)v45 + 3) = *(_DWORD *)&v33[3];
    v44[0] = *(_DWORD *)v31;
    *(_DWORD *)((char *)v44 + 3) = *(_DWORD *)&v31[3];
    v43[0] = *(_DWORD *)v30;
    *(_DWORD *)((char *)v43 + 3) = *(_DWORD *)&v30[3];
    *(_DWORD *)((char *)v42 + 3) = *(_DWORD *)&v29[3];
    v42[0] = *(_DWORD *)v29;
    *(_DWORD *)((char *)v41 + 3) = *(_DWORD *)&v28[3];
    v41[0] = *(_DWORD *)v28;
    *(_DWORD *)((char *)v40 + 3) = *(_DWORD *)&v26[3];
    v40[0] = *(_DWORD *)v26;
    sub_23CEE8444(v6, v8, v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23CEE8444(v6, v8, v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_23CEE7DE0(v6, v8, v12);
    swift_bridgeObjectRelease();
    uint64_t v49 = 0;
    char v50 = 1;
    *(_DWORD *)uint64_t v51 = v48[0];
    *(_DWORD *)&v51[3] = *(_DWORD *)&v38[3];
    uint64_t v52 = v6;
    uint64_t v53 = v8;
    char v54 = v12;
    *(_DWORD *)uint64_t v55 = v47[0];
    *(_DWORD *)&v55[3] = *(_DWORD *)&v36[3];
    uint64_t v56 = v10;
    char v57 = v21;
    *(_DWORD *)uint64_t v58 = *(_DWORD *)v35;
    *(_DWORD *)&v58[3] = *(_DWORD *)((char *)v46 + 3);
    long long v60 = 0u;
    long long v59 = 0u;
    char v61 = 1;
    *(_DWORD *)&v62[3] = *(_DWORD *)&v33[3];
    *(_DWORD *)id v62 = v45[0];
    uint64_t v63 = 0;
    char v64 = 1;
    *(_DWORD *)&v65[3] = *(_DWORD *)&v31[3];
    *(_DWORD *)os_log_type_t v65 = v44[0];
    uint64_t v66 = 0x6574616C756D6953;
    unint64_t v67 = 0xE800000000000000;
    char v68 = 0;
    *(_DWORD *)&v69[3] = *(_DWORD *)&v30[3];
    *(_DWORD *)uint64_t v69 = v43[0];
    uint64_t v70 = sub_23CF7018C;
    uint64_t v71 = v13;
    char v72 = 0;
    *(_DWORD *)uint64_t v73 = *(_DWORD *)v29;
    *(_DWORD *)&v73[3] = *(_DWORD *)((char *)v42 + 3);
    char v74 = v22;
    *(_DWORD *)uint64_t v75 = *(_DWORD *)v28;
    *(_DWORD *)&v75[3] = *(_DWORD *)((char *)v41 + 3);
    long long v76 = 0u;
    long long v77 = 0u;
    char v78 = 1;
    *(_DWORD *)&v79[3] = *(_DWORD *)((char *)v40 + 3);
    *(_DWORD *)uint64_t v79 = *(_DWORD *)v26;
    uint64_t v80 = 0;
    char v81 = 1;
    sub_23CF70194((uint64_t)&v49);
    sub_23CEE83D8((uint64_t)&v49, (uint64_t)&v82, &qword_268BCE818);
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE820);
    sub_23CF701A0();
    sub_23CEE8D90(&qword_268BCE830, &qword_268BCE820);
    sub_23D004D88();
    swift_release();
    sub_23CEE7DE0(v6, v8, v12);
    swift_bridgeObjectRelease();
    long long v92 = v23[10];
    long long v93 = v23[11];
    v94[0] = v24[0];
    *(_OWORD *)((char *)v94 + 10) = *(_OWORD *)((char *)v24 + 10);
    long long v88 = v23[6];
    long long v89 = v23[7];
    long long v90 = v23[8];
    long long v91 = v23[9];
    long long v84 = v23[2];
    long long v85 = v23[3];
    long long v86 = v23[4];
    long long v87 = v23[5];
    long long v82 = v23[0];
    long long v83 = v23[1];
  }
  long long v14 = v93;
  a3[10] = v92;
  a3[11] = v14;
  a3[12] = v94[0];
  *(_OWORD *)((char *)a3 + 202) = *(_OWORD *)((char *)v94 + 10);
  long long v15 = v89;
  a3[6] = v88;
  a3[7] = v15;
  long long v16 = v91;
  a3[8] = v90;
  a3[9] = v16;
  long long v17 = v85;
  a3[2] = v84;
  a3[3] = v17;
  long long v18 = v87;
  a3[4] = v86;
  a3[5] = v18;
  double result = *(double *)&v82;
  long long v20 = v83;
  *a3 = v82;
  a3[1] = v20;
  return result;
}

uint64_t sub_23CF6F980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D004ED8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for StateController();
  uint64_t v8 = (_OWORD *)swift_allocObject();
  sub_23D003E08();
  type metadata accessor for DonationController();
  v8[1] = 0u;
  _OWORD v8[2] = 0u;
  void v8[3] = 0u;
  *(_OWORD *)((char *)v8 + 57) = 0u;
  swift_allocObject();
  uint64_t v9 = sub_23CF9DC1C((uint64_t)v8);
  uint64_t v12 = a1;
  uint64_t v13 = a2;
  uint64_t v14 = v9;
  swift_retain();
  sub_23D005788();
  sub_23D004EC8();
  sub_23D004788();
  swift_release_n();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23CF6FB28()
{
  return sub_23D0055D8();
}

uint64_t sub_23CF6FB80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE4A0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23D005BA8();
  uint64_t v5 = sub_23D005BC8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_23D005B88();
  swift_retain();
  uint64_t v6 = sub_23D005B78();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = MEMORY[0x263F8F500];
  _OWORD v7[2] = v6;
  _OWORD v7[3] = v8;
  v7[4] = a1;
  sub_23CF5961C((uint64_t)v4, (uint64_t)&unk_268BCE840, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_23CF6FCA0()
{
  v0[2] = sub_23D005B88();
  v0[3] = sub_23D005B78();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_23CF6FD4C;
  return sub_23CF9C524();
}

uint64_t sub_23CF6FD4C()
{
  swift_task_dealloc();
  uint64_t v1 = sub_23D005B48();
  return MEMORY[0x270FA2498](sub_23CF6FE88, v1, v0);
}

uint64_t sub_23CF6FE88()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_23CF6FEE8()
{
  return sub_23D0047E8();
}

uint64_t sub_23CF6FF90()
{
  return sub_23CF6F1D4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_23CF6FF98()
{
  unint64_t result = qword_268BCE7F8;
  if (!qword_268BCE7F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE7F0);
    sub_23CEE8D90(&qword_268BCE800, &qword_268BCE808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE7F8);
  }
  return result;
}

uint64_t sub_23CF70038(uint64_t a1)
{
  sub_23CF700BC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(unsigned char *)(a1 + 216),
    *(unsigned char *)(a1 + 217));
  return a1;
}

uint64_t sub_23CF700BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,char a29)
{
  if (a29)
  {
    sub_23CEE7DE0(a3, a4, a5 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_23CF7014C()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23CF7018C()
{
  return sub_23CF6F980(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_23CF70194(uint64_t result)
{
  *(unsigned char *)(result + 217) = 1;
  return result;
}

unint64_t sub_23CF701A0()
{
  unint64_t result = qword_268BCE828;
  if (!qword_268BCE828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE828);
  }
  return result;
}

uint64_t sub_23CF701F4(uint64_t result)
{
  *(unsigned char *)(result + 217) = 0;
  return result;
}

uint64_t sub_23CF701FC()
{
  return sub_23CF6FB28();
}

uint64_t sub_23CF7021C()
{
  return sub_23CF6FB80(v0);
}

uint64_t sub_23CF70224()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_23CF70264()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_23CF3A620;
  return sub_23CF6FCA0();
}

ValueMetadata *type metadata accessor for Debugger()
{
  return &type metadata for Debugger;
}

uint64_t sub_23CF70328()
{
  return sub_23CEE8D90(&qword_268BCE848, &qword_268BCE850);
}

uint64_t sub_23CF70364()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF70380@<X0>(char *a1@<X8>)
{
  return sub_23CF6D5A0(a1);
}

uint64_t sub_23CF70388@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF6DE40(v1, a1);
}

uint64_t sub_23CF70390@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF6E1F0(v1, a1);
}

unint64_t sub_23CF70398()
{
  unint64_t result = qword_268BCE8A0;
  if (!qword_268BCE8A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE8A8);
    sub_23CEE8D90(&qword_268BCE8B0, &qword_268BCE8B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE8A0);
  }
  return result;
}

uint64_t sub_23CF70430@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF6E5D8(v1, a1);
}

uint64_t sub_23CF70438@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF6ECB4(v1, a1);
}

uint64_t sub_23CF70440(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23CF704C0()
{
  unint64_t result = qword_268BCE8D0;
  if (!qword_268BCE8D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE8D8);
    sub_23CF70F14(&qword_268BCE8E0, (void (*)(uint64_t))_s8Feedback3RowVMa_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE8D0);
  }
  return result;
}

uint64_t _s8Feedback3RowVMa_0()
{
  uint64_t result = qword_268BCE940;
  if (!qword_268BCE940) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF705C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_23CF7062C()
{
  unint64_t result = qword_268BCE938;
  if (!qword_268BCE938)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE930);
    sub_23CF70F14(&qword_268BCD7F8, (void (*)(uint64_t))type metadata accessor for EvaluationCard);
    sub_23CF4E3BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE938);
  }
  return result;
}

uint64_t sub_23CF706E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = sub_23D003DB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_23CF7075C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_23CF707C8(uint64_t a1)
{
  uint64_t v2 = sub_23D003DB8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_23CF7082C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23CF70890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23CF708F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23CF70958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23CF709BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF709D0);
}

uint64_t sub_23CF709D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_23CF70A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF70A50);
}

uint64_t sub_23CF70A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_23D003DB8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_23CF70AC0()
{
  uint64_t result = sub_23D003DB8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for FBKFeedbackForm.FormResponse.Question.Kind.Choice()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FBKFeedbackForm.FormResponse.Question.Kind.Choice(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FBKFeedbackForm.FormResponse.Question.Kind.Choice(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FBKFeedbackForm.FormResponse.Question.Kind.Choice(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FBKFeedbackForm.FormResponse.Question.Kind.Choice(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FBKFeedbackForm.FormResponse.Question.Kind.Choice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PropertyRow()
{
  return &type metadata for PropertyRow;
}

uint64_t sub_23CF70D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CloudRow(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for CloudRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudRow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudRow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudRow()
{
  return &type metadata for CloudRow;
}

uint64_t sub_23CF70E84()
{
  return sub_23CEE8D90(&qword_268BCE950, &qword_268BCE958);
}

uint64_t sub_23CF70EC0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF70EDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF70EF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF70F14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF70F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF70FC4()
{
  return MEMORY[0x263F1A820];
}

uint64_t sub_23CF70FD0()
{
  return sub_23CEE8D90(&qword_268BCE9A0, &qword_268BCE9A8);
}

uint64_t sub_23CF7100C()
{
  return sub_23CEE8D90(&qword_268BCE9B0, &qword_268BCE9B8);
}

void *initializeBufferWithCopyOfBuffer for CloseButton(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for CloseButton()
{
  return swift_release();
}

void *assignWithCopy for CloseButton(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CloseButton(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CloseButton()
{
  return &type metadata for CloseButton;
}

uint64_t sub_23CF71100()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF7111C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_23D004288();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_23D005578();
  if (qword_268BCCCE8 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_project_value_buffer(v2, (uint64_t)qword_268BDADE8);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v8(v5, v7, v2);
  uint64_t v9 = sub_23D005558();
  char v10 = sub_23D005078();
  sub_23D004578();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  if (qword_268BCCCF8 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v2, (uint64_t)qword_268BDAE18);
  v8(v5, v19, v2);
  uint64_t v20 = sub_23D005558();
  uint64_t result = sub_23D005078();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 40) = v16;
  *(void *)(a1 + 48) = v18;
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = v20;
  *(unsigned char *)(a1 + 72) = result;
  return result;
}

uint64_t sub_23CF71304@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_23D004888();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v21 = v2;
  uint64_t v22 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE9C0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE9C8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE9D0);
  sub_23CF71650();
  sub_23D0055F8();
  sub_23D004878();
  sub_23CEE8D90(&qword_268BCEA00, &qword_268BCE9C0);
  sub_23CF7180C();
  uint64_t v17 = v21;
  sub_23D0052A8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v18 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v23, v13, v10);
  *(_WORD *)(v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCEA08) + 36)) = 256;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_23CF71618()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_23CF71650()
{
  unint64_t result = qword_268BCE9D8;
  if (!qword_268BCE9D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE9D0);
    sub_23CF716F0();
    sub_23CEE8D90(&qword_268BCDC88, (uint64_t *)&unk_268BCDC90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE9D8);
  }
  return result;
}

unint64_t sub_23CF716F0()
{
  unint64_t result = qword_268BCE9E0;
  if (!qword_268BCE9E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE9E8);
    sub_23CF7176C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE9E0);
  }
  return result;
}

unint64_t sub_23CF7176C()
{
  unint64_t result = qword_268BCE9F0;
  if (!qword_268BCE9F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE9F8);
    sub_23CEE8D90(&qword_268BCDA48, (uint64_t *)&unk_268BCDCA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCE9F0);
  }
  return result;
}

unint64_t sub_23CF7180C()
{
  unint64_t result = qword_268BCDAF8;
  if (!qword_268BCDAF8)
  {
    sub_23D004888();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCDAF8);
  }
  return result;
}

unint64_t sub_23CF71868()
{
  unint64_t result = qword_268BCEA10;
  if (!qword_268BCEA10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCEA08);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCE9C0);
    sub_23D004888();
    sub_23CEE8D90(&qword_268BCEA00, &qword_268BCE9C0);
    sub_23CF7180C();
    swift_getOpaqueTypeConformance2();
    sub_23CEE8D90(&qword_268BCEA18, &qword_268BCEA20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEA10);
  }
  return result;
}

uint64_t *sub_23CF71984(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_23D003F38();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)v4 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *uint64_t v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    swift_retain();
    swift_retain();
    uint64_t v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
    uint64_t v13 = (char *)v9 + v12;
    uint64_t v14 = &v10[v12];
    uint64_t v15 = sub_23D003F98();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[6];
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    if (*v18)
    {
      uint64_t v19 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    }
    uint64_t v21 = a3[7];
    uint64_t v22 = a3[8];
    uint64_t v23 = (uint64_t *)((char *)v4 + v21);
    uint64_t v24 = (char *)a2 + v21;
    char v25 = *(void **)v24;
    uint64_t v26 = *((void *)v24 + 1);
    *uint64_t v23 = *(void *)v24;
    v23[1] = v26;
    char v27 = (uint64_t *)((char *)v4 + v22);
    uint64_t v28 = (uint64_t *)((char *)a2 + v22);
    uint64_t v29 = v28[1];
    *char v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = (void *)v28[2];
    void v27[2] = v30;
    uint64_t v31 = a3[9];
    char v32 = (char *)v4 + v31;
    char v33 = (char *)a2 + v31;
    uint64_t v34 = *((void *)v33 + 1);
    *(void *)char v32 = *(void *)v33;
    *((void *)v32 + 1) = v34;
    v32[16] = v33[16];
    id v35 = v25;
    swift_retain();
    swift_retain();
    swift_retain();
    id v36 = v30;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_23CF71B68(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_23D003F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  swift_release();
  swift_release();
  uint64_t v6 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
  uint64_t v7 = sub_23D003F98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  if (*(void *)(a1 + a2[6])) {
    swift_release();
  }

  swift_release();
  uint64_t v8 = a1 + a2[8];
  swift_release();
  swift_release();

  swift_release();

  return swift_release();
}

uint64_t sub_23CF71CA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_retain();
  swift_retain();
  uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = sub_23D003F98();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  if (*v17)
  {
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v19);
  uint64_t v22 = a2 + v19;
  uint64_t v23 = *(void **)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  *uint64_t v21 = *(void *)v22;
  v21[1] = v24;
  char v25 = (void *)(a1 + v20);
  uint64_t v26 = (void *)(a2 + v20);
  uint64_t v27 = v26[1];
  *char v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = (void *)v26[2];
  v25[2] = v28;
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)(v31 + 8);
  *(void *)uint64_t v30 = *(void *)v31;
  *(void *)(v30 + 8) = v32;
  *(unsigned char *)(v30 + 16) = *(unsigned char *)(v31 + 16);
  id v33 = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  id v34 = v28;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23CF71E3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_retain();
  swift_release();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_retain();
  swift_release();
  uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t v13 = sub_23D003F98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a1 + v14);
  uint64_t v18 = *(void *)(a2 + v14);
  if (!v17)
  {
    if (v18)
    {
      uint64_t v20 = *(void *)(v16 + 8);
      *uint64_t v15 = v18;
      v15[1] = v20;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    goto LABEL_8;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v19 = *(void *)(v16 + 8);
  *uint64_t v15 = v18;
  v15[1] = v19;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void **)(a1 + v21);
  char v25 = *(void **)(a2 + v21);
  *uint64_t v22 = v25;
  id v26 = v25;

  v22[1] = *(void *)(v23 + 8);
  swift_retain();
  swift_release();
  uint64_t v27 = a3[8];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  swift_retain();
  swift_release();
  *(void *)(v28 + 8) = *(void *)(v29 + 8);
  swift_retain();
  swift_release();
  uint64_t v30 = *(void **)(v29 + 16);
  uint64_t v31 = *(void **)(v28 + 16);
  *(void *)(v28 + 16) = v30;
  id v32 = v30;

  uint64_t v33 = a3[9];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  swift_retain();
  swift_release();
  *(void *)(v34 + 8) = *(void *)(v35 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v34 + 16) = *(unsigned char *)(v35 + 16);
  return a1;
}

uint64_t sub_23CF7206C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = v9 + v11;
  uint64_t v14 = sub_23D003F98();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  if (*v17)
  {
    uint64_t v19 = v17[1];
    *uint64_t v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  uint64_t v20 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  return a1;
}

uint64_t sub_23CF721B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_23D003F38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_release();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_release();
  uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t v13 = sub_23D003F98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a1 + v14);
  uint64_t v18 = *(void *)(a2 + v14);
  if (!v17)
  {
    if (v18)
    {
      uint64_t v20 = *(void *)(v16 + 8);
      *uint64_t v15 = v18;
      v15[1] = v20;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    goto LABEL_8;
  }
  if (!v18)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v19 = *(void *)(v16 + 8);
  *uint64_t v15 = v18;
  v15[1] = v19;
  swift_release();
LABEL_8:
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = *(void **)(a1 + v21);
  *uint64_t v22 = *v23;

  v22[1] = v23[1];
  swift_release();
  uint64_t v25 = a3[8];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  swift_release();
  *(void *)(v26 + 8) = *(void *)(v27 + 8);
  swift_release();
  uint64_t v28 = *(void **)(v26 + 16);
  *(void *)(v26 + 16) = *(void *)(v27 + 16);

  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)(a1 + v29) = *(void *)v31;
  swift_release();
  *(void *)(v30 + 8) = *(void *)(v31 + 8);
  swift_release();
  *(unsigned char *)(v30 + 16) = *(unsigned char *)(v31 + 16);
  return a1;
}

uint64_t sub_23CF72398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF723AC);
}

uint64_t sub_23CF723AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23D003F38();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_23CF724C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF724DC);
}

uint64_t sub_23CF724DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_23D003F38();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for FBKInlineViewButton()
{
  uint64_t result = qword_268BCEA28;
  if (!qword_268BCEA28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_23CF72640()
{
  sub_23D003F38();
  if (v0 <= 0x3F)
  {
    sub_23CF57D50();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_23CF72728()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF72744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v14 = (int *)type metadata accessor for FBKInlineViewButton();
  uint64_t v15 = (void *)(a8 + v14[6]);
  uint64_t v16 = (id *)(a8 + v14[7]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEA90);
  sub_23D0055B8();
  *(_OWORD *)uint64_t v16 = v27;
  uint64_t v17 = sub_23D003F38();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a8, a1, v17);
  sub_23CEE82CC(a2, a8 + v14[5], &qword_268BCE470);
  *uint64_t v15 = a3;
  v15[1] = a4;
  sub_23D0055B8();
  sub_23CEE8BB4(a2, &qword_268BCE470);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);

  uint64_t result = swift_release();
  *(_OWORD *)uint64_t v16 = v27;
  uint64_t v20 = (void *)(a8 + v14[8]);
  *uint64_t v20 = a5;
  v20[1] = a6;
  v20[2] = a7;
  uint64_t v21 = a8 + v14[9];
  *(void *)uint64_t v21 = a9;
  *(void *)(v21 + 8) = a10;
  *(unsigned char *)(v21 + 16) = a11;
  return result;
}

uint64_t sub_23CF7290C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v2 = sub_23D004B28();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v61 = v2;
  uint64_t v62 = v3;
  MEMORY[0x270FA5388](v2);
  long long v60 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_23D005808();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v53 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_23D0057E8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  uint64_t v55 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_23D0048F8();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v51 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FBKInlineViewButton();
  uint64_t v13 = v12 - 8;
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEA38);
  uint64_t v16 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEA40);
  uint64_t v20 = v19 - 8;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEA48);
  MEMORY[0x270FA5388](v50);
  uint64_t v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF734CC(v1, (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v25 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v26 = swift_allocObject();
  sub_23CF736EC((uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25);
  uint64_t v64 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEA50);
  sub_23CEE8D90(&qword_268BCEA58, &qword_268BCEA50);
  sub_23D0055F8();
  uint64_t v27 = v1 + *(int *)(v13 + 44);
  uint64_t v28 = *(void *)v27;
  uint64_t v29 = *(void *)(v27 + 8);
  LOBYTE(v27) = *(unsigned char *)(v27 + 16);
  uint64_t v65 = v28;
  uint64_t v66 = v29;
  char v67 = v27;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE478);
  MEMORY[0x23ECF50E0](&v68, v30);
  LOBYTE(v15) = v68;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32 + 16) = v15;
  uint64_t v33 = v49;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v22, v18, v49);
  uint64_t v34 = (uint64_t *)&v22[*(int *)(v20 + 44)];
  *uint64_t v34 = KeyPath;
  v34[1] = (uint64_t)sub_23CF73978;
  uint64_t v34[2] = v32;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v33);
  uint64_t v35 = v52;
  sub_23D0057D8();
  id v36 = v53;
  sub_23D0057F8();
  sub_23CF73B1C(&qword_268BCDB40, MEMORY[0x263F1BBC8]);
  char v37 = v51;
  char v38 = v36;
  uint64_t v39 = v54;
  sub_23D0048E8();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v59);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v39);
  uint64_t v40 = swift_getKeyPath();
  uint64_t v41 = (uint64_t *)&v24[*(int *)(v50 + 36)];
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDB28);
  uint64_t v44 = v56;
  uint64_t v43 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))((char *)v41 + *(int *)(v42 + 28), v37, v57);
  *uint64_t v41 = v40;
  sub_23CEE82CC((uint64_t)v22, (uint64_t)v24, &qword_268BCEA40);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v37, v43);
  sub_23CEE8BB4((uint64_t)v22, &qword_268BCEA40);
  uint64_t v45 = v60;
  sub_23D004B18();
  sub_23CF739B8();
  sub_23CF73B1C(&qword_268BCEA80, MEMORY[0x263F197E0]);
  uint64_t v46 = v61;
  sub_23D005298();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v46);
  return sub_23CEE8BB4((uint64_t)v24, &qword_268BCEA48);
}

void sub_23CF73010(uint64_t a1)
{
  uint64_t v2 = sub_23D003F98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_23D003F38();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = type metadata accessor for FBKInlineViewButton();
  *(_OWORD *)id v36 = *(_OWORD *)(a1 + *(int *)(v13 + 28));
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEA88);
  sub_23D0055C8();
  id v14 = v37;

  if (!v14)
  {
    uint64_t v35 = v3;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a1, v6);
    uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
    uint64_t v16 = v15;
    if (v15 == *MEMORY[0x263F3C200])
    {
      uint64_t v17 = a1 + *(int *)(v13 + 32);
      *(void *)id v36 = *(void *)v17;
      *(_OWORD *)&v36[8] = *(_OWORD *)(v17 + 8);
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
      MEMORY[0x23ECF50E0](&v37, v18);
      id v19 = v37;
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
      MEMORY[0x23ECF50E0](v20);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 104))(v10, v16, v6);
      uint64_t v21 = (uint64_t)v10;
      uint64_t v22 = (uint64_t)v5;
      int v23 = 0;
    }
    else
    {
      if (v15 == *MEMORY[0x263F3C1D8])
      {
        uint64_t v24 = a1 + *(int *)(v13 + 32);
        *(void *)id v36 = *(void *)v24;
        *(_OWORD *)&v36[8] = *(_OWORD *)(v24 + 8);
      }
      else
      {
        unint64_t v25 = (uint64_t *)(a1 + *(int *)(v13 + 32));
        uint64_t v27 = *v25;
        uint64_t v26 = v25[1];
        uint64_t v28 = v25[2];
        if (v15 != *MEMORY[0x263F3C1E8])
        {
          *(void *)id v36 = v27;
          *(void *)&v36[8] = v26;
          *(void *)&v36[16] = v28;
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
          MEMORY[0x23ECF50E0](&v37, v31);
          id v32 = v37;
          uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
          MEMORY[0x23ECF50E0](v33);
          sub_23CFC9758(a1, (uint64_t)v5, 1, 0);

          (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v2);
          (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
          return;
        }
        *(void *)id v36 = v27;
        *(void *)&v36[8] = v26;
        *(void *)&v36[16] = v28;
      }
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
      MEMORY[0x23ECF50E0](&v37, v29);
      id v19 = v37;
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470);
      MEMORY[0x23ECF50E0](v30);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 104))(v10, v16, v6);
      uint64_t v21 = (uint64_t)v10;
      uint64_t v22 = (uint64_t)v5;
      int v23 = 1;
    }
    sub_23CFC9758(v21, v22, v23, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v2);
  }
}

uint64_t sub_23CF73414(uint64_t a1)
{
  v6[1] = sub_23D003F28();
  _OWORD v6[2] = v2;
  type metadata accessor for FBKInlineViewButton();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE090);
  MEMORY[0x23ECF50E0](v6, v3);
  uint64_t v4 = (void *)v6[0];
  sub_23CFCE988(a1);

  sub_23CEE8D00();
  return sub_23D0055A8();
}

uint64_t sub_23CF734CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FBKInlineViewButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF73530()
{
  uint64_t v1 = (int *)type metadata accessor for FBKInlineViewButton();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_23D003F38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  uint64_t v7 = v0 + v3 + v1[5];
  swift_release();
  swift_release();
  uint64_t v8 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE470) + 32);
  uint64_t v9 = sub_23D003F98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  if (*(void *)(v0 + v3 + v1[6])) {
    swift_release();
  }
  uint64_t v10 = v2 | 7;
  uint64_t v11 = v3 + v4;

  swift_release();
  uint64_t v12 = v5 + v1[8];
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v11, v10);
}

uint64_t sub_23CF736EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FBKInlineViewButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23CF73750()
{
  uint64_t v1 = *(void *)(type metadata accessor for FBKInlineViewButton() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_23CF73010(v2);
}

uint64_t sub_23CF737B0()
{
  return sub_23CF73414(*(void *)(v0 + 16));
}

uint64_t sub_23CF737B8()
{
  return sub_23D004988();
}

uint64_t sub_23CF737DC(uint64_t a1)
{
  uint64_t v2 = sub_23D0048F8();
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_23D004998();
}

uint64_t sub_23CF738A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_23D004A78();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23CF738D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_23D004A78();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23CF73904()
{
  return sub_23D004A88();
}

uint64_t sub_23CF7392C()
{
  return sub_23D004A88();
}

unsigned char *sub_23CF73954(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_23CF73968()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char *sub_23CF73978(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_23CF73990()
{
  return sub_23D004988();
}

unint64_t sub_23CF739B8()
{
  unint64_t result = qword_268BCEA60;
  if (!qword_268BCEA60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCEA48);
    sub_23CF73A58();
    sub_23CEE8D90(&qword_268BCEA78, &qword_268BCDB28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEA60);
  }
  return result;
}

unint64_t sub_23CF73A58()
{
  unint64_t result = qword_268BCEA68;
  if (!qword_268BCEA68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCEA40);
    sub_23CEE8D90(&qword_268BCEA70, &qword_268BCEA38);
    sub_23CEE8D90(&qword_268BCDA28, &qword_268BCDA30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEA68);
  }
  return result;
}

uint64_t sub_23CF73B1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF73B64()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for GenmojiPreviewController()
{
  return &type metadata for GenmojiPreviewController;
}

uint64_t sub_23CF73C20()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_23CF73C3C@<X0>(void *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCFDE0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23D008C80;
  long long v32 = *v1;
  long long v33 = v1[1];
  v34[0] = v1[2];
  *(_OWORD *)((char *)v34 + 9) = *(long long *)((char *)v1 + 41);
  *(void *)(v3 + 32) = *((void *)&v32 + 1);
  *(void *)(v3 + 40) = v33;
  *(void *)(v3 + 48) = 0;
  *(unsigned char *)(v3 + 56) = 0;
  sub_23CEE83D8((uint64_t)&v33 + 8, (uint64_t)v36, &qword_268BCE5F8);
  sub_23CEE83D8((uint64_t)v36, (uint64_t)&v37, &qword_268BCE5F8);
  uint64_t v4 = v38;
  if (v38)
  {
    uint64_t v5 = v37;
    swift_bridgeObjectRetain();
    sub_23CF7415C((uint64_t)v36);
    unint64_t v7 = *(void *)(v3 + 16);
    unint64_t v6 = *(void *)(v3 + 24);
    if (v7 >= v6 >> 1) {
      uint64_t v3 = (uint64_t)sub_23CF22EBC((void *)(v6 > 1), v7 + 1, 1, (void *)v3);
    }
    *(void *)(v3 + 16) = v7 + 1;
    uint64_t v8 = v3 + 32 * v7;
    *(void *)(v8 + 32) = v5;
    *(void *)(v8 + 40) = v4;
    *(void *)(v8 + 48) = 0;
    *(unsigned char *)(v8 + 56) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = self;
  id v10 = objc_msgSend(v9, sel_mainBundle);
  uint64_t v11 = sub_23D003BA8();
  uint64_t v13 = v12;

  id v14 = sub_23CF22B30(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v16 = v14[2];
  unint64_t v15 = v14[3];
  if (v16 >= v15 >> 1) {
    id v14 = sub_23CF22B30((void *)(v15 > 1), v16 + 1, 1, v14);
  }
  v14[2] = v16 + 1;
  uint64_t v17 = &v14[3 * v16];
  v17[4] = v11;
  v17[5] = v13;
  v17[6] = v3;
  sub_23CEE83D8((uint64_t)v34 + 8, (uint64_t)v35, &qword_268BCEA98);
  sub_23CEE83D8((uint64_t)v35, (uint64_t)v39, &qword_268BCEA98);
  if (v39[16] != 255)
  {
    sub_23CF74100((uint64_t)v39, (uint64_t)v40);
    sub_23CF74100((uint64_t)v40, (uint64_t)v41);
    if ((v42 & 1) == 0)
    {
      id v18 = objc_msgSend(v9, sel_mainBundle, 0x800000023D012970);
      uint64_t v19 = sub_23D003BA8();
      uint64_t v21 = v20;

      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_23D008C80;
      *(void *)(v22 + 32) = sub_23CF07AA4();
      *(void *)(v22 + 40) = v23;
      *(void *)(v22 + 48) = 0;
      *(unsigned char *)(v22 + 56) = 1;
      unint64_t v25 = v14[2];
      unint64_t v24 = v14[3];
      if (v25 >= v24 >> 1) {
        id v14 = sub_23CF22B30((void *)(v24 > 1), v25 + 1, 1, v14);
      }
      v14[2] = v25 + 1;
      uint64_t v26 = &v14[3 * v25];
      v26[4] = v19;
      v26[5] = v21;
      v26[6] = v22;
    }
  }
  uint64_t v27 = type metadata accessor for ListPreviewer.Content(0);
  uint64_t v28 = (char *)a1 + *(int *)(v27 + 20);
  uint64_t v29 = *MEMORY[0x263F3C2C0];
  uint64_t v30 = sub_23D004028();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v28, v29, v30);
  *a1 = v32;
  *(void *)((char *)a1 + *(int *)(v27 + 24)) = v14;

  return (id)v32;
}

uint64_t sub_23CF74010@<X0>(void *a1@<X8>)
{
  sub_23CF73C3C(a1);
  uint64_t v2 = type metadata accessor for ListPreviewer(0);
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 20);
  type metadata accessor for FullScreenPreviewController(0);
  sub_23CF433B4(&qword_268BCD270, (void (*)(uint64_t))type metadata accessor for FullScreenPreviewController);
  *(void *)uint64_t v3 = sub_23D004618();
  v3[8] = v4 & 1;
  uint64_t v5 = (char *)a1 + *(int *)(v2 + 24);
  uint64_t result = sub_23D0055B8();
  *uint64_t v5 = v7;
  *((void *)v5 + 1) = v8;
  return result;
}

uint64_t sub_23CF74100(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23CF7415C(uint64_t a1)
{
  return a1;
}

uint64_t sub_23CF74188()
{
  return sub_23CF433B4(&qword_268BCE190, (void (*)(uint64_t))type metadata accessor for ListPreviewer);
}

uint64_t sub_23CF741D0(void *a1)
{
  id v3 = objc_msgSend(v1, sel_allVisibleAnswers);
  sub_23CF31A54(0, &qword_268BCEAB8);
  unint64_t v4 = sub_23D005AE8();

  v88[0] = MEMORY[0x263F8EE78];
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_23D0060B8();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      if (v5 < 1) {
        goto LABEL_120;
      }
      for (uint64_t i = 0; i != v5; ++i)
      {
        if ((v4 & 0xC000000000000001) != 0) {
          id v7 = (id)MEMORY[0x23ECF5A60](i, v4);
        }
        else {
          id v7 = *(id *)(v4 + 8 * i + 32);
        }
        uint64_t v8 = v7;
        if (objc_msgSend(v7, sel_isAnswered))
        {
          sub_23D006038();
          sub_23D006068();
          sub_23D006078();
          sub_23D006048();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v9 = v88[0];
      if ((v88[0] & 0x8000000000000000) != 0) {
        goto LABEL_56;
      }
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v9 = MEMORY[0x263F8EE78];
  if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
    goto LABEL_56;
  }
LABEL_16:
  if ((v9 & 0x4000000000000000) != 0) {
    goto LABEL_56;
  }
  uint64_t v10 = *(void *)(v9 + 16);
  char v78 = a1;
  if (!v10) {
    goto LABEL_57;
  }
  do
  {
    unint64_t v11 = 0;
    unint64_t v82 = v9 & 0xC000000000000001;
    unint64_t v79 = v9 + 32;
    a1 = (void *)MEMORY[0x263F8EE80];
    unint64_t v81 = v9;
    uint64_t v80 = v10;
    while (1)
    {
      if (v82)
      {
        id v12 = (id)MEMORY[0x23ECF5A60](v11, v9);
      }
      else
      {
        if (v11 >= *(void *)(v9 + 16)) {
          goto LABEL_54;
        }
        id v12 = *(id *)(v79 + 8 * v11);
      }
      uint64_t v13 = v12;
      BOOL v14 = __OFADD__(v11++, 1);
      if (v14) {
        break;
      }
      id v15 = objc_msgSend(v12, sel_values);
      if (v15)
      {
        unint64_t v16 = v15;
        unint64_t v9 = sub_23D005AE8();

        int64_t v17 = *(void *)(v9 + 16);
        uint64_t v89 = MEMORY[0x263F8EE78];
        sub_23CFF0030(0, v17, 0);
        uint64_t v18 = *(void *)(v9 + 16);
        long long v84 = v13;
        if (v18)
        {
          uint64_t v19 = v9 + 32;
          while (1)
          {
            sub_23CF2571C(v19, (uint64_t)v88);
            if (!swift_dynamicCast()) {
              break;
            }
            uint64_t v20 = v89;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23CFF0030(0, *(void *)(v20 + 16) + 1, 1);
              uint64_t v20 = v89;
            }
            unint64_t v9 = *(void *)(v20 + 16);
            unint64_t v21 = *(void *)(v20 + 24);
            if (v9 >= v21 >> 1)
            {
              sub_23CFF0030(v21 > 1, v9 + 1, 1);
              uint64_t v20 = v89;
            }
            *(void *)(v20 + 16) = v9 + 1;
            uint64_t v22 = v20 + 16 * v9;
            *(void *)(v22 + 32) = v86;
            *(void *)(v22 + 40) = v87;
            v19 += 32;
            if (!--v18)
            {
              swift_bridgeObjectRelease();
              goto LABEL_37;
            }
          }
          uint64_t v86 = 0;
          uint64_t v87 = 0;
          swift_release();

          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
        uint64_t v20 = v89;
        swift_bridgeObjectRelease();
LABEL_37:
        id v23 = objc_msgSend(v13, sel_question);
        id v24 = objc_msgSend(v23, sel_role);

        if (!v24) {
          goto LABEL_121;
        }
        uint64_t v25 = sub_23D005948();
        uint64_t v27 = v26;

        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v88[0] = (unint64_t)a1;
        unint64_t v30 = sub_23CF23884(v25, v27);
        uint64_t v31 = a1[2];
        BOOL v32 = (v29 & 1) == 0;
        uint64_t v33 = v31 + v32;
        if (__OFADD__(v31, v32)) {
          goto LABEL_53;
        }
        char v34 = v29;
        if (a1[3] >= v33)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            a1 = (void *)v88[0];
            if ((v29 & 1) == 0) {
              goto LABEL_47;
            }
          }
          else
          {
            sub_23CF6988C();
            a1 = (void *)v88[0];
            if ((v34 & 1) == 0) {
              goto LABEL_47;
            }
          }
        }
        else
        {
          sub_23CF6835C(v33, isUniquelyReferenced_nonNull_native);
          unint64_t v35 = sub_23CF23884(v25, v27);
          if ((v34 & 1) != (v36 & 1)) {
            goto LABEL_122;
          }
          unint64_t v30 = v35;
          a1 = (void *)v88[0];
          if ((v34 & 1) == 0)
          {
LABEL_47:
            a1[(v30 >> 6) + 8] |= 1 << v30;
            uint64_t v38 = (uint64_t *)(a1[6] + 16 * v30);
            *uint64_t v38 = v25;
            v38[1] = v27;
            *(void *)(a1[7] + 8 * v30) = v20;
            uint64_t v39 = a1[2];
            BOOL v14 = __OFADD__(v39, 1);
            uint64_t v40 = v39 + 1;
            if (v14) {
              goto LABEL_55;
            }
            a1[2] = v40;
            swift_bridgeObjectRetain();
            goto LABEL_49;
          }
        }
        uint64_t v37 = a1[7];
        swift_bridgeObjectRelease();
        *(void *)(v37 + 8 * v30) = v20;
LABEL_49:

        swift_bridgeObjectRelease();
LABEL_50:
        swift_bridgeObjectRelease();
        uint64_t v10 = v80;
        unint64_t v9 = v81;
        if (v11 == v80)
        {
LABEL_51:
          swift_release();
          goto LABEL_58;
        }
      }
      else
      {

        if (v11 == v10) {
          goto LABEL_51;
        }
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_23D0060B8();
    swift_release();
    char v78 = a1;
  }
  while (v10);
LABEL_57:
  swift_release();
  a1 = (void *)MEMORY[0x263F8EE80];
LABEL_58:
  uint64_t v41 = (char *)v78 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_answers;
  swift_beginAccess();
  uint64_t v42 = *(void *)v41;
  uint64_t v83 = *(void *)v41 + 64;
  uint64_t v43 = 1 << *(unsigned char *)(*(void *)v41 + 32);
  uint64_t v44 = -1;
  if (v43 < 64) {
    uint64_t v44 = ~(-1 << v43);
  }
  unint64_t v45 = v44 & *(void *)(*(void *)v41 + 64);
  int64_t v85 = (unint64_t)(v43 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v46 = 0;
  if (v45) {
    goto LABEL_93;
  }
  while (2)
  {
    int64_t v48 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_117;
    }
    if (v48 >= v85) {
      goto LABEL_115;
    }
    unint64_t v49 = *(void *)(v83 + 8 * v48);
    ++v46;
    if (v49) {
      goto LABEL_77;
    }
    int64_t v46 = v48 + 1;
    if (v48 + 1 >= v85) {
      goto LABEL_115;
    }
    unint64_t v49 = *(void *)(v83 + 8 * v46);
    if (v49) {
      goto LABEL_77;
    }
    int64_t v46 = v48 + 2;
    if (v48 + 2 >= v85) {
      goto LABEL_115;
    }
    unint64_t v49 = *(void *)(v83 + 8 * v46);
    if (v49) {
      goto LABEL_77;
    }
    int64_t v50 = v48 + 3;
    if (v50 >= v85)
    {
LABEL_115:
      swift_release();
      return (uint64_t)a1;
    }
    else
    {
      unint64_t v49 = *(void *)(v83 + 8 * v50);
      if (v49)
      {
        int64_t v46 = v50;
LABEL_77:
        unint64_t v45 = (v49 - 1) & v49;
        unint64_t v51 = __clz(__rbit64(v49)) + (v46 << 6);
LABEL_78:
        uint64_t v52 = (uint64_t *)(*(void *)(v42 + 48) + 16 * v51);
        uint64_t v54 = *v52;
        unint64_t v53 = v52[1];
        uint64_t v55 = *(void *)(*(void *)(v42 + 56) + 8 * v51);
        uint64_t v56 = 0x706972637365643ALL;
        if (v53 != 2) {
          uint64_t v56 = *v52;
        }
        unint64_t v57 = 0xEC0000006E6F6974;
        if (v53 != 2) {
          unint64_t v57 = v53;
        }
        if (v53 == 1)
        {
          uint64_t v56 = 0x616572613ALL;
          unint64_t v57 = 0xE500000000000000;
        }
        if (v53) {
          uint64_t v58 = v56;
        }
        else {
          uint64_t v58 = 0x656C7469743ALL;
        }
        if (v53) {
          uint64_t v59 = v57;
        }
        else {
          uint64_t v59 = 0xE600000000000000;
        }
        uint64_t v60 = a1[2];
        sub_23CF24FD0(v54, v53);
        sub_23CF24FD0(v54, v53);
        swift_bridgeObjectRetain();
        if (v60)
        {
          sub_23CF23884(v58, v59);
          if (v61)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23CF24D10(v54, v53);
            if (!v45) {
              continue;
            }
            goto LABEL_93;
          }
        }
        swift_bridgeObjectRelease();
        if (v53)
        {
          if (v53 == 1)
          {
            unint64_t v53 = 0xE500000000000000;
            uint64_t v63 = 0x616572613ALL;
          }
          else
          {
            if (v53 == 2) {
              uint64_t v63 = 0x706972637365643ALL;
            }
            else {
              uint64_t v63 = v54;
            }
            if (v53 == 2) {
              unint64_t v53 = 0xEC0000006E6F6974;
            }
          }
        }
        else
        {
          unint64_t v53 = 0xE600000000000000;
          uint64_t v63 = 0x656C7469743ALL;
        }
        uint64_t v64 = a1;
        char v65 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v67 = sub_23CF23884(v63, v53);
        uint64_t v68 = v64[2];
        BOOL v69 = (v66 & 1) == 0;
        uint64_t v70 = v68 + v69;
        if (__OFADD__(v68, v69)) {
          goto LABEL_118;
        }
        char v71 = v66;
        if (v64[3] >= v70)
        {
          if (v65)
          {
            a1 = v64;
            if ((v66 & 1) == 0) {
              goto LABEL_111;
            }
          }
          else
          {
            sub_23CF6988C();
            a1 = v64;
            if ((v71 & 1) == 0) {
              goto LABEL_111;
            }
          }
        }
        else
        {
          sub_23CF6835C(v70, v65);
          unint64_t v72 = sub_23CF23884(v63, v53);
          if ((v71 & 1) != (v73 & 1)) {
            goto LABEL_122;
          }
          unint64_t v67 = v72;
          a1 = v64;
          if ((v71 & 1) == 0)
          {
LABEL_111:
            a1[(v67 >> 6) + 8] |= 1 << v67;
            char v74 = (uint64_t *)(a1[6] + 16 * v67);
            *char v74 = v63;
            v74[1] = v53;
            *(void *)(a1[7] + 8 * v67) = v55;
            uint64_t v75 = a1[2];
            BOOL v14 = __OFADD__(v75, 1);
            uint64_t v76 = v75 + 1;
            if (v14) {
              goto LABEL_119;
            }
            a1[2] = v76;
            swift_bridgeObjectRetain();
            goto LABEL_63;
          }
        }
        uint64_t v47 = a1[7];
        swift_bridgeObjectRelease();
        *(void *)(v47 + 8 * v67) = v55;
LABEL_63:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v45) {
          continue;
        }
LABEL_93:
        unint64_t v62 = __clz(__rbit64(v45));
        v45 &= v45 - 1;
        unint64_t v51 = v62 | (v46 << 6);
        goto LABEL_78;
      }
      while (1)
      {
        int64_t v46 = v50 + 1;
        if (__OFADD__(v50, 1)) {
          break;
        }
        if (v46 >= v85) {
          goto LABEL_115;
        }
        unint64_t v49 = *(void *)(v83 + 8 * v46);
        ++v50;
        if (v49) {
          goto LABEL_77;
        }
      }
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      uint64_t result = sub_23D006268();
      __break(1u);
    }
    return result;
  }
}

uint64_t sub_23CF74AD4(uint64_t a1)
{
  if (qword_268BCCC48 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_23D004498();
  __swift_project_value_buffer(v1, (uint64_t)qword_268BCEAA0);
  uint64_t v2 = sub_23D004478();
  os_log_type_t v3 = sub_23D005C78();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(void *)&long long v93 = v5;
    *(_DWORD *)unint64_t v4 = 136446210;
    *(void *)&long long v89 = sub_23CF231B0(0xD000000000000022, 0x800000023D012A30, (uint64_t *)&v93);
    sub_23D005E48();
    _os_log_impl(&dword_23CEE3000, v2, v3, "%{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v5, -1, -1);
    MEMORY[0x23ECF6610](v4, -1, -1);
  }

  id v6 = objc_msgSend(v80, sel_allVisibleAnswers);
  sub_23CF31A54(0, &qword_268BCEAB8);
  unint64_t v7 = sub_23D005AE8();

  *(void *)&long long v93 = MEMORY[0x263F8EE78];
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_7;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    unint64_t v12 = MEMORY[0x263F8EE78];
LABEL_19:
    if ((v12 & 0x8000000000000000) != 0 || (v12 & 0x4000000000000000) != 0) {
      goto LABEL_82;
    }
    uint64_t v13 = *(void *)(v12 + 16);
    while (v13)
    {
      unint64_t v78 = v12 & 0xC000000000000001;
      uint64_t v14 = MEMORY[0x263F8EE80];
      uint64_t v15 = 4;
      unint64_t v74 = v12;
      uint64_t v76 = v13;
      while (1)
      {
        id v16 = v78 ? (id)MEMORY[0x23ECF5A60](v15 - 4, v12) : *(id *)(v12 + 8 * v15);
        int64_t v17 = v16;
        if (__OFADD__(v15 - 4, 1)) {
          break;
        }
        uint64_t v81 = v15 - 3;
        uint64_t v83 = v14;
        uint64_t v85 = v15;
        id v18 = objc_msgSend(v16, sel_question);
        id v19 = objc_msgSend(v18, sel_tat);
        uint64_t v20 = sub_23D005948();
        uint64_t v22 = v21;

        id v23 = objc_msgSend(v18, sel_text);
        if (!v23) {
          goto LABEL_84;
        }
        id v24 = v23;
        uint64_t v25 = sub_23D005948();
        uint64_t v27 = v26;

        LOBYTE(v24) = objc_msgSend(v18, sel_visible);
        sub_23CF760AC(v18, (uint64_t)&v89);
        char v28 = v24 ^ 1;
        uint64_t v29 = v89;
        unsigned __int8 v30 = BYTE8(v89);
        *(void *)&long long v89 = v20;
        *((void *)&v89 + 1) = v22;
        *(void *)&long long v90 = v25;
        *((void *)&v90 + 1) = v27;
        LOBYTE(v91) = v24 ^ 1;
        uint64_t v31 = v29;
        *((void *)&v91 + 1) = v29;
        unsigned __int8 v75 = v30;
        LOBYTE(v92) = v30;
        uint64_t v32 = sub_23CF771A0(v17, (uint64_t *)&v89);

        *(void *)&long long v93 = v20;
        *((void *)&v93 + 1) = v22;
        uint64_t v94 = v25;
        uint64_t v95 = v27;
        char v96 = v28;
        uint64_t v97 = v31;
        unsigned __int8 v98 = v75;
        uint64_t v99 = v32;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_23CF6B70C(v31, v75);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v89 = v83;
        sub_23CF24688(&v93, v20, v22, isUniquelyReferenced_nonNull_native);
        uint64_t v14 = v89;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_23CF76E40(v31, v75);
        swift_bridgeObjectRelease();
        unint64_t v12 = v74;
        uint64_t v15 = v85 + 1;
        if (v81 == v76) {
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_23D0060B8();
      swift_release();
    }
    uint64_t v14 = MEMORY[0x263F8EE80];
LABEL_32:
    swift_release();
    char v34 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Feedback15FBKFeedbackForm_answers);
    swift_beginAccess();
    uint64_t v35 = *v34;
    uint64_t v36 = *v34 + 64;
    uint64_t v37 = 1 << *(unsigned char *)(*v34 + 32);
    uint64_t v38 = -1;
    if (v37 < 64) {
      uint64_t v38 = ~(-1 << v37);
    }
    unint64_t v39 = v38 & *(void *)(*v34 + 64);
    int64_t v79 = (unint64_t)(v37 + 63) >> 6;
    uint64_t v82 = v35;
    swift_bridgeObjectRetain();
    int64_t v40 = 0;
    unint64_t v12 = 0xE600000000000000;
    uint64_t v77 = v36;
LABEL_35:
    uint64_t v84 = v14;
    while (1)
    {
      if (v39)
      {
        uint64_t v86 = (v39 - 1) & v39;
        unint64_t v41 = __clz(__rbit64(v39)) | (v40 << 6);
      }
      else
      {
        if (__OFADD__(v40++, 1)) {
          goto LABEL_80;
        }
        if (v40 >= v79)
        {
LABEL_78:
          swift_release();
          uint64_t v70 = swift_bridgeObjectRetain();
          char v71 = sub_23CFA7E30(v70);
          swift_bridgeObjectRelease_n();
          return (uint64_t)v71;
        }
        unint64_t v43 = *(void *)(v36 + 8 * v40);
        if (!v43)
        {
          int64_t v44 = v40 + 1;
          if (v40 + 1 >= v79) {
            goto LABEL_78;
          }
          unint64_t v43 = *(void *)(v36 + 8 * v44);
          if (!v43)
          {
            int64_t v44 = v40 + 2;
            if (v40 + 2 >= v79) {
              goto LABEL_78;
            }
            unint64_t v43 = *(void *)(v36 + 8 * v44);
            if (!v43)
            {
              int64_t v44 = v40 + 3;
              if (v40 + 3 >= v79) {
                goto LABEL_78;
              }
              unint64_t v43 = *(void *)(v36 + 8 * v44);
              if (!v43)
              {
                while (1)
                {
                  int64_t v40 = v44 + 1;
                  if (__OFADD__(v44, 1)) {
                    goto LABEL_81;
                  }
                  if (v40 >= v79) {
                    goto LABEL_78;
                  }
                  unint64_t v43 = *(void *)(v36 + 8 * v40);
                  ++v44;
                  if (v43) {
                    goto LABEL_49;
                  }
                }
              }
            }
          }
          int64_t v40 = v44;
        }
LABEL_49:
        uint64_t v86 = (v43 - 1) & v43;
        unint64_t v41 = __clz(__rbit64(v43)) + (v40 << 6);
      }
      unint64_t v45 = (uint64_t *)(*(void *)(v82 + 48) + 16 * v41);
      uint64_t v46 = *v45;
      unint64_t v47 = v45[1];
      uint64_t v48 = 0x706972637365643ALL;
      if (v47 != 2) {
        uint64_t v48 = v46;
      }
      unint64_t v49 = 0xEC0000006E6F6974;
      if (v47 != 2) {
        unint64_t v49 = v47;
      }
      if (v47 == 1)
      {
        uint64_t v48 = 0x616572613ALL;
        unint64_t v49 = 0xE500000000000000;
      }
      if (v47) {
        uint64_t v50 = v48;
      }
      else {
        uint64_t v50 = 0x656C7469743ALL;
      }
      if (v47) {
        unint64_t v51 = v49;
      }
      else {
        unint64_t v51 = 0xE600000000000000;
      }
      uint64_t v52 = *(void *)(v14 + 16);
      sub_23CF24FD0(v46, v47);
      sub_23CF24FD0(v46, v47);
      if (v52)
      {
        sub_23CF23884(v50, v51);
        char v54 = v53;
        swift_bridgeObjectRelease();
        if ((v54 & 1) == 0) {
          goto LABEL_66;
        }
        swift_bridgeObjectRelease();
        unint64_t v39 = v86;
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_66:
        id v55 = objc_msgSend(v80, sel_formResponse);
        id v56 = objc_msgSend(v55, sel_answers);

        if (!v56) {
          goto LABEL_85;
        }
        uint64_t v57 = sub_23D005C08();

        uint64_t v58 = sub_23CF75D6C(v57);
        swift_bridgeObjectRelease();
        if (!v58) {
          goto LABEL_85;
        }
        swift_bridgeObjectRetain();
        sub_23CF769DC(v58, v50, v51);
        uint64_t v60 = v59;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v60)
        {
          id v61 = v60;
          swift_bridgeObjectRelease();
          sub_23CF75BD4(v61, (uint64_t *)v87);
          long long v89 = v87[0];
          long long v90 = v87[1];
          long long v91 = v87[2];
          long long v92 = v87[3];
          uint64_t v68 = *((void *)&v87[0] + 1);
          uint64_t v67 = *(void *)&v87[0];
          swift_bridgeObjectRetain();
          sub_23CF76D70((uint64_t)&v89);
          char v69 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v87[0] = v14;
          sub_23CF24688(&v89, v67, v68, v69);
          uint64_t v14 = *(void *)&v87[0];

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23CF76DD8((uint64_t)&v89);
          unint64_t v39 = v86;
          goto LABEL_35;
        }
        swift_bridgeObjectRetain();
        unint64_t v62 = sub_23D004478();
        os_log_type_t v63 = sub_23D005CB8();
        if (os_log_type_enabled(v62, v63))
        {
          uint64_t v64 = (uint8_t *)swift_slowAlloc();
          uint64_t v65 = swift_slowAlloc();
          *(void *)&v87[0] = v65;
          *(_DWORD *)uint64_t v64 = 136446210;
          swift_bridgeObjectRetain();
          uint64_t v88 = sub_23CF231B0(v50, v51, (uint64_t *)v87);
          uint64_t v36 = v77;
          sub_23D005E48();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_23CEE3000, v62, v63, "Prefilled question %{public}s does not match a question tat in Form", v64, 0xCu);
          swift_arrayDestroy();
          uint64_t v66 = v65;
          uint64_t v14 = v84;
          MEMORY[0x23ECF6610](v66, -1, -1);
          MEMORY[0x23ECF6610](v64, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        unint64_t v12 = 0xE600000000000000;
        unint64_t v39 = v86;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_23D0060B8();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_18;
  }
LABEL_7:
  if (v8 >= 1)
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x23ECF5A60](i, v7);
      }
      else {
        id v10 = *(id *)(v7 + 8 * i + 32);
      }
      unint64_t v11 = v10;
      if (objc_msgSend(v10, sel_isAnswered))
      {
        sub_23D006038();
        sub_23D006068();
        sub_23D006078();
        sub_23D006048();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v12 = v93;
    goto LABEL_19;
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  uint64_t result = sub_23D0060A8();
  __break(1u);
  return result;
}

uint64_t sub_23CF75A10()
{
  uint64_t v0 = sub_23D004498();
  __swift_allocate_value_buffer(v0, qword_268BCEAA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_268BCEAA0);
  return sub_23D004488();
}

uint64_t sub_23CF75A8C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  sub_23CFF0030(0, v2, 0);
  uint64_t v3 = v12;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_23CF2571C(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23CFF0030(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_23CFF0030(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v6 + 1;
      uint64_t v7 = v3 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void sub_23CF75BD4(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v5 = objc_msgSend(a1, sel_question);
  id v6 = objc_msgSend(v5, sel_tat);
  uint64_t v7 = sub_23D005948();
  uint64_t v9 = v8;

  id v10 = objc_msgSend(v5, sel_text);
  if (v10)
  {
    unint64_t v11 = v10;
    uint64_t v12 = sub_23D005948();
    uint64_t v14 = v13;

    unsigned __int8 v15 = objc_msgSend(v5, sel_visible);
    sub_23CF760AC(v5, (uint64_t)&v22);
    if (v2)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = a2;
      char v16 = v15 ^ 1;
      uint64_t v17 = v22;
      char v18 = v23;
      uint64_t v22 = v7;
      uint64_t v23 = v9;
      uint64_t v24 = v12;
      uint64_t v25 = v14;
      char v21 = v16;
      char v26 = v16;
      uint64_t v27 = v17;
      char v28 = v18;
      uint64_t v19 = sub_23CF771A0(a1, &v22);

      uint64_t v20 = v29;
      *uint64_t v29 = v7;
      v20[1] = v9;
      v20[2] = v12;
      v20[3] = v14;
      *((unsigned char *)v20 + 32) = v21;
      v20[5] = v17;
      *((unsigned char *)v20 + 48) = v18;
      v20[7] = v19;
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_23CF75D6C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEAD8);
    uint64_t v2 = sub_23D005FA8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE88];
  }
  uint64_t v27 = a1 + 56;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v8 << 6);
      int64_t v12 = v8;
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v13 >= v26) {
      goto LABEL_39;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v12 = v8 + 1;
    if (!v14)
    {
      int64_t v12 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_39;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v12);
      if (!v14)
      {
        int64_t v12 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_39;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v12);
        if (!v14)
        {
          int64_t v12 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_39;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v12);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_28:
    sub_23CF77598(*(void *)(a1 + 48) + 40 * v11, (uint64_t)v28);
    char v16 = (void *)sub_23D005F78();
    sub_23CF775F4((uint64_t)v28);
    self;
    uint64_t v17 = swift_dynamicCastObjCClass();
    if (!v17)
    {
      swift_release_n();

      sub_23CF77590();
      return 0;
    }
    uint64_t v18 = v17;
    uint64_t result = sub_23D005DC8();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    *(void *)(*(void *)(v2 + 48) + 8 * v9) = v18;
    ++*(void *)(v2 + 16);
    int64_t v8 = v12;
    unint64_t v5 = v10;
  }
  int64_t v15 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_39:
    swift_release();
    sub_23CF77590();
    return v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v15);
  if (v14)
  {
    int64_t v12 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v12 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v12 >= v26) {
      goto LABEL_39;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v12);
    ++v15;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

id sub_23CF760AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id result = objc_msgSend(a1, sel_answerType);
  switch((unint64_t)result)
  {
    case 0uLL:
      *(void *)a2 = 0;
      goto LABEL_18;
    case 1uLL:
      uint64_t v10 = 1;
      goto LABEL_17;
    case 2uLL:
    case 3uLL:
      id result = (id)sub_23CF77028(a1);
      if (!v2)
      {
        *(void *)a2 = result;
        *(unsigned char *)(a2 + 8) = 0;
      }
      return result;
    case 4uLL:
      id result = (id)sub_23CF77028(a1);
      if (v2) {
        return result;
      }
      *(void *)a2 = result;
      char v11 = 1;
      goto LABEL_19;
    case 5uLL:
    case 6uLL:
    case 0xBuLL:
      id v6 = objc_msgSend(a1, sel_answerType);
      sub_23CF77648();
      swift_allocError();
      *(void *)uint64_t v7 = v6;
      *(unsigned char *)(v7 + 8) = 0;
      goto LABEL_4;
    case 7uLL:
      id result = (id)sub_23CF77028(a1);
      if (v2) {
        return result;
      }
      *(void *)a2 = result;
      char v11 = 2;
      goto LABEL_19;
    case 8uLL:
      uint64_t v10 = 2;
      goto LABEL_17;
    case 9uLL:
      *(void *)a2 = 3;
      *(unsigned char *)(a2 + 8) = 3;
      return result;
    case 0xAuLL:
      uint64_t v10 = 4;
      goto LABEL_17;
    case 0xCuLL:
      uint64_t v10 = 5;
LABEL_17:
      *(void *)a2 = v10;
LABEL_18:
      char v11 = 3;
LABEL_19:
      *(unsigned char *)(a2 + 8) = v11;
      break;
    default:
      id v8 = objc_msgSend(a1, sel_answerType);
      sub_23CF77648();
      swift_allocError();
      *(void *)uint64_t v9 = v8;
      *(unsigned char *)(v9 + 8) = 1;
LABEL_4:
      id result = (id)swift_willThrow();
      break;
  }
  return result;
}

uint64_t sub_23CF76274()
{
  sub_23D005FC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEB10);
  uint64_t v0 = sub_23D005998();
  swift_bridgeObjectRelease();
  sub_23D0059F8();
  swift_bridgeObjectRetain();
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23CF76344()
{
  return sub_23CF76274();
}

uint64_t sub_23CF7634C()
{
  sub_23D005FC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEB08);
  uint64_t v0 = sub_23D005998();
  swift_bridgeObjectRelease();
  sub_23D0059F8();
  swift_bridgeObjectRetain();
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23CF7641C()
{
  return sub_23CF7634C();
}

uint64_t sub_23CF76424(uint64_t a1)
{
  sub_23D005FC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEB00);
  uint64_t v2 = sub_23D005998();
  swift_bridgeObjectRelease();
  sub_23D0059F8();
  sub_23CF90538(a1);
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_23CF76560()
{
  return sub_23CF76424(*v0);
}

uint64_t sub_23CF7656C()
{
  sub_23D005FC8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEAF8);
  uint64_t v0 = sub_23D005998();
  swift_bridgeObjectRelease();
  sub_23D0059F8();
  sub_23D0059F8();
  sub_23D0059F8();
  return v0;
}

uint64_t sub_23CF766B0()
{
  return sub_23CF7656C();
}

void sub_23CF766BC(id *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  id v6 = *a1;
  id v7 = objc_msgSend(*a1, sel_value);
  sub_23D005EB8();
  swift_unknownObjectRelease();
  if (swift_dynamicCast())
  {
    uint64_t v8 = v31[0];
    uint64_t v9 = v31[1];
    id v10 = objc_msgSend(v6, sel_title);
    uint64_t v11 = sub_23D005948();
    uint64_t v13 = v12;

    *a3 = v11;
    a3[1] = v13;
    a3[2] = v8;
    a3[3] = v9;
  }
  else
  {
    if (qword_268BCCC48 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_23D004498();
    __swift_project_value_buffer(v14, (uint64_t)qword_268BCEAA0);
    id v15 = a2;
    id v16 = v6;
    id v17 = v15;
    id v18 = v16;
    uint64_t v19 = sub_23D004478();
    os_log_type_t v20 = sub_23D005C98();
    if (os_log_type_enabled(v19, v20))
    {
      os_log_type_t type = v20;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      v31[0] = v29;
      *(_DWORD *)uint64_t v21 = 136315394;
      id v22 = objc_msgSend(v17, sel_tat);
      uint64_t v33 = v3;
      uint64_t v23 = sub_23D005948();
      unint64_t v25 = v24;

      uint64_t v32 = sub_23CF231B0(v23, v25, v31);
      sub_23D005E48();

      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      id v26 = objc_msgSend(v18, sel_value);
      sub_23D005EB8();
      swift_unknownObjectRelease();
      uint64_t v27 = sub_23D005998();
      uint64_t v32 = sub_23CF231B0(v27, v28, v31);
      sub_23D005E48();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23CEE3000, v19, type, "Invalid question choice value type. Question: [%s] choice type: [%s]", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v29, -1, -1);
      MEMORY[0x23ECF6610](v21, -1, -1);
    }
    else
    {
    }
    *(_OWORD *)a3 = 0u;
    *((_OWORD *)a3 + 1) = 0u;
  }
}

void sub_23CF769DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23D005F08();
    sub_23CF31A54(0, &qword_268BCEAB8);
    sub_23CF77528();
    sub_23D005C28();
    uint64_t v5 = v31;
    uint64_t v28 = v32;
    uint64_t v6 = v33;
    int64_t v7 = v34;
    unint64_t v8 = v35;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v28 = a1 + 56;
    uint64_t v10 = ~v9;
    uint64_t v11 = -v9;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v8 = v12 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = v10;
    int64_t v7 = 0;
  }
  uint64_t v26 = v6;
  int64_t v27 = (unint64_t)(v6 + 64) >> 6;
  int64_t v29 = v7;
  unint64_t v30 = v8;
  if (v5 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v8)
  {
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v14 = v13 | (v7 << 6);
    goto LABEL_29;
  }
  int64_t v16 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v16 < v27)
    {
      unint64_t v17 = *(void *)(v28 + 8 * v16);
      ++v7;
      if (v17) {
        goto LABEL_28;
      }
      int64_t v7 = v16 + 1;
      if (v16 + 1 >= v27) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v28 + 8 * v7);
      if (v17) {
        goto LABEL_28;
      }
      int64_t v7 = v16 + 2;
      if (v16 + 2 >= v27) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v28 + 8 * v7);
      if (v17) {
        goto LABEL_28;
      }
      int64_t v7 = v16 + 3;
      if (v16 + 3 >= v27) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v28 + 8 * v7);
      if (v17)
      {
LABEL_28:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v14 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_29:
        id v15 = *(id *)(*(void *)(v5 + 48) + 8 * v14);
        if (v15)
        {
          while (1)
          {
            id v19 = objc_msgSend(v15, sel_question, v26);
            uint64_t v20 = a3;
            id v21 = objc_msgSend(v19, sel_tat);

            uint64_t v22 = sub_23D005948();
            uint64_t v24 = v23;

            a3 = v20;
            if (v22 == a2 && v24 == v20) {
              break;
            }
            char v25 = sub_23D006218();
            swift_bridgeObjectRelease();
            if (v25) {
              goto LABEL_36;
            }

            int64_t v29 = v7;
            unint64_t v30 = v8;
            if ((v5 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (sub_23D005F58())
            {
              sub_23CF31A54(0, &qword_268BCEAB8);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v15 = v36;
              swift_unknownObjectRelease();
              unint64_t v8 = v30;
              if (v36) {
                continue;
              }
            }
            goto LABEL_36;
          }
          swift_bridgeObjectRelease();
        }
        goto LABEL_36;
      }
      int64_t v7 = v16 + 4;
      if (v16 + 4 < v27)
      {
        unint64_t v17 = *(void *)(v28 + 8 * v7);
        if (!v17)
        {
          uint64_t v18 = v29 + 6;
          while (v27 != v18)
          {
            unint64_t v17 = *(void *)(v28 + 8 * v18++);
            if (v17)
            {
              int64_t v7 = v18 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_28;
      }
    }
LABEL_36:
    sub_23CF77590();
    return;
  }
  __break(1u);
}

uint64_t sub_23CF76D70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23CF6B70C(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23CF76DD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unsigned __int8 v3 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23CF76E40(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23CF76E40(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_23CF76E54(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_23D0060B8())
  {
    unint64_t v19 = v3 & 0xC000000000000001;
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    uint64_t v6 = 4;
    uint64_t v17 = v4;
    unint64_t v18 = v3;
    while (1)
    {
      id v8 = v19 ? (id)MEMORY[0x23ECF5A60](v6 - 4, v3) : *(id *)(v3 + 8 * v6);
      uint64_t v9 = v8;
      uint64_t v10 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v26 = v8;
      sub_23CF766BC(&v26, a2, &v22);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v5;
      }

      uint64_t v11 = v23;
      if (v23)
      {
        uint64_t v12 = v24;
        uint64_t v13 = v25;
        uint64_t v21 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_23CF22C8C(0, v5[2] + 1, 1, v5);
        }
        unint64_t v15 = v5[2];
        unint64_t v14 = v5[3];
        if (v15 >= v14 >> 1) {
          uint64_t v5 = sub_23CF22C8C((void *)(v14 > 1), v15 + 1, 1, v5);
        }
        _OWORD v5[2] = v15 + 1;
        int64_t v7 = &v5[4 * v15];
        v7[4] = v21;
        _OWORD v7[5] = v11;
        v7[6] = v12;
        v7[7] = v13;
        uint64_t v4 = v17;
        unint64_t v3 = v18;
      }
      ++v6;
      if (v10 == v4)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x263F8EE78];
}

uint64_t sub_23CF77028(void *a1)
{
  id v2 = objc_msgSend(a1, sel_allChoices);
  if (v2)
  {
    sub_23CF31A54(0, &qword_268BCEAF0);
    unint64_t v3 = sub_23D005AE8();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_23D0060B8();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      id v4 = a1;
      uint64_t v5 = sub_23CF76E54(v3, v4);
      swift_bridgeObjectRelease();

      return (uint64_t)v5;
    }
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(a1, sel_tat);
  }
  else
  {
    id v7 = objc_msgSend(a1, sel_tat);
  }
  id v9 = v7;
  uint64_t v10 = sub_23D005948();
  uint64_t v12 = v11;

  sub_23CF7769C();
  swift_allocError();
  *(void *)uint64_t v13 = v10;
  *(void *)(v13 + 8) = v12;
  *(unsigned char *)(v13 + 16) = v2 != 0;
  return swift_willThrow();
}

uint64_t sub_23CF771A0(void *a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v6 = a2[5];
  unsigned int v7 = *((unsigned __int8 *)a2 + 48);
  if ((objc_msgSend(a1, sel_isAnswered) & 1) == 0) {
    goto LABEL_26;
  }
  id v8 = objc_msgSend(a1, sel_values);
  if (!v8
    || (id v9 = v8,
        unsigned int v36 = v7,
        uint64_t v10 = sub_23D005AE8(),
        v9,
        uint64_t v11 = sub_23CF75A8C(v10),
        unsigned int v12 = v36,
        uint64_t result = swift_bridgeObjectRelease(),
        !v11))
  {
LABEL_26:
    sub_23CF77480();
    swift_allocError();
    *int64_t v29 = v5;
    v29[1] = v4;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return (uint64_t)v2;
  }
  uint64_t v33 = *(void *)(v11 + 16);
  if (!v33)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  unint64_t v14 = 0;
  uint64_t v34 = v11 + 32;
  uint64_t v31 = (void *)(v6 + 56);
  id v2 = (void *)MEMORY[0x263F8EE78];
  uint64_t v32 = v6;
  uint64_t v35 = v11;
  while (v14 < *(void *)(v11 + 16))
  {
    uint64_t v37 = v2;
    unint64_t v15 = (uint64_t *)(v34 + 16 * v14);
    uint64_t v16 = *v15;
    id v2 = (void *)v15[1];
    if (v12 > 2)
    {
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v20 = v15[1];
    }
    else
    {
      uint64_t v17 = *(void *)(v6 + 16);
      if (!v17)
      {
LABEL_28:
        sub_23CF774D4();
        swift_allocError();
        *unint64_t v30 = v16;
        v30[1] = v2;
        swift_bridgeObjectRetain();
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v2;
      }
      unint64_t v18 = v31;
      while (1)
      {
        uint64_t v19 = *(v18 - 3);
        uint64_t v20 = *(v18 - 2);
        uint64_t v21 = *(v18 - 1);
        uint64_t v22 = (void *)*v18;
        if (v21 == v16 && v22 == v2) {
          break;
        }
        if (sub_23D006218()) {
          goto LABEL_19;
        }
        v18 += 4;
        if (!--v17) {
          goto LABEL_28;
        }
      }
      uint64_t v21 = v16;
      uint64_t v22 = v2;
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v16 = v19;
      unsigned int v12 = v36;
    }
    swift_bridgeObjectRetain();
    uint64_t v24 = v37;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_23CF22D9C(0, v37[2] + 1, 1, v37);
      uint64_t v24 = (void *)result;
    }
    unint64_t v26 = v24[2];
    unint64_t v25 = v24[3];
    int64_t v27 = v24;
    if (v26 >= v25 >> 1)
    {
      uint64_t result = (uint64_t)sub_23CF22D9C((void *)(v25 > 1), v26 + 1, 1, v24);
      int64_t v27 = (void *)result;
    }
    ++v14;
    void v27[2] = v26 + 1;
    id v2 = v27;
    uint64_t v28 = &v27[5 * v26];
    v28[4] = v16;
    v28[5] = v20;
    v28[6] = v21;
    unsigned char v28[7] = v22;
    *((unsigned char *)v28 + 64) = v12 < 3;
    uint64_t v6 = v32;
    uint64_t v11 = v35;
    if (v14 == v33)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v2;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_23CF77480()
{
  unint64_t result = qword_268BCEAC0;
  if (!qword_268BCEAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEAC0);
  }
  return result;
}

unint64_t sub_23CF774D4()
{
  unint64_t result = qword_268BCEAC8;
  if (!qword_268BCEAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEAC8);
  }
  return result;
}

unint64_t sub_23CF77528()
{
  unint64_t result = qword_268BCEAD0;
  if (!qword_268BCEAD0)
  {
    sub_23CF31A54(255, &qword_268BCEAB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEAD0);
  }
  return result;
}

uint64_t sub_23CF77590()
{
  return swift_release();
}

uint64_t sub_23CF77598(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23CF775F4(uint64_t a1)
{
  return a1;
}

unint64_t sub_23CF77648()
{
  unint64_t result = qword_268BCEAE0;
  if (!qword_268BCEAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEAE0);
  }
  return result;
}

unint64_t sub_23CF7769C()
{
  unint64_t result = qword_268BCEAE8;
  if (!qword_268BCEAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEAE8);
  }
  return result;
}

uint64_t sub_23CF776F4()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s19QuestionChoiceErrorOwxx()
{
  return sub_23CF7770C();
}

uint64_t sub_23CF7770C()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19QuestionChoiceErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_23CF776F4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s19QuestionChoiceErrorOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_23CF776F4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_23CF7770C();
  return a1;
}

uint64_t _s19QuestionChoiceErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_23CF7770C();
  return a1;
}

ValueMetadata *_s19QuestionChoiceErrorOMa()
{
  return &_s19QuestionChoiceErrorON;
}

uint64_t sub_23CF77810(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_23CF77818(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *_s17QuestionKindErrorOMa()
{
  return &_s17QuestionKindErrorON;
}

ValueMetadata *_s16AnswerValueErrorVMa()
{
  return &_s16AnswerValueErrorVN;
}

ValueMetadata *_s11AnswerErrorVMa()
{
  return &_s11AnswerErrorVN;
}

uint64_t sub_23CF77868@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  uint64_t v11 = v1;
  sub_23CF78FFC(&qword_268BCDE18, (void (*)(uint64_t))type metadata accessor for StateController);
  sub_23D003DD8();
  swift_release();
  uint64_t v3 = v1[2];
  unint64_t v4 = v11[3];
  uint64_t v5 = v11[4];
  uint64_t v6 = v11[5];
  uint64_t v7 = v11[6];
  uint64_t v8 = v11[7];
  uint64_t v9 = v11[8];
  uint64_t result = sub_23CF3C33C(v3, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return result;
}

uint64_t sub_23CF77958()
{
  sub_23CF78CB0(v0, (uint64_t)v5);
  uint64_t result = 0x676E6964616F6CLL;
  switch(*((void *)&v5[0] + 1))
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 1702125938;
      break;
    case 2:
      uint64_t result = 0x64656873696E6966;
      break;
    case 3:
      uint64_t result = 0x7974706D65;
      break;
    default:
      long long v7 = v5[0];
      long long v8 = v5[1];
      long long v9 = v5[2];
      uint64_t v10 = v6;
      uint64_t v11 = 0;
      unint64_t v12 = 0xE000000000000000;
      sub_23D005FC8();
      uint64_t v3 = v11;
      unint64_t v4 = v12;
      sub_23D0059F8();
      LOBYTE(v11) = v9;
      sub_23D006088();
      sub_23D0059F8();
      swift_bridgeObjectRetain();
      sub_23D0059F8();
      swift_bridgeObjectRelease();
      sub_23D0059F8();
      sub_23CF78EC8((uint64_t)&v8, (uint64_t)&v11);
      sub_23CF78EC8((uint64_t)&v11, (uint64_t)v2);
      sub_23CF7415C((uint64_t)&v11);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE5F8);
      sub_23D005998();
      sub_23D0059F8();
      swift_bridgeObjectRelease();
      sub_23D0059F8();
      uint64_t result = v3;
      break;
  }
  return result;
}

uint64_t sub_23CF77B78(long long *a1, long long *a2)
{
  sub_23CF78CB0(a1, (uint64_t)v4);
  sub_23CF78CB0(a2, (uint64_t)v5);
  return sub_23CF78CD0(v4, v5) & 1;
}

uint64_t sub_23CF77BC4()
{
  sub_23CF78CB0(v0, (uint64_t)v2);
  return sub_23CF77958();
}

void sub_23CF77BFC(void *a1)
{
  uint64_t v2 = v1;
  if (qword_268BCCCB0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_23D004498();
  __swift_project_value_buffer(v4, (uint64_t)qword_268BDAD70);
  sub_23CF78F38(a1, (void (*)(void, void, void, void, void, void, void))sub_23CF3C33C);
  swift_retain();
  sub_23CF78F38(a1, (void (*)(void, void, void, void, void, void, void))sub_23CF3C33C);
  swift_retain();
  uint64_t v5 = sub_23D004478();
  os_log_type_t v6 = sub_23D005C88();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = v14;
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_23CF78F38(a1, (void (*)(void, void, void, void, void, void, void))sub_23CF3C33C);
    uint64_t v8 = sub_23CF77958();
    unint64_t v10 = v9;
    sub_23CF78F38(a1, (void (*)(void, void, void, void, void, void, void))sub_23CF42034);
    v16[0] = sub_23CF231B0(v8, v10, &v15);
    sub_23D005E48();
    swift_bridgeObjectRelease();
    sub_23CF78F38(a1, (void (*)(void, void, void, void, void, void, void))sub_23CF42034);
    sub_23CF78F38(a1, (void (*)(void, void, void, void, void, void, void))sub_23CF42034);
    *(_WORD *)(v7 + 12) = 2080;
    swift_getKeyPath();
    v16[0] = v2;
    sub_23CF78FFC(&qword_268BCDE18, (void (*)(uint64_t))type metadata accessor for StateController);
    sub_23D003DD8();
    swift_release();
    sub_23CF78CB0((long long *)(v2 + 16), (uint64_t)v16);
    sub_23CF78F38(v16, (void (*)(void, void, void, void, void, void, void))sub_23CF3C33C);
    uint64_t v11 = sub_23CF77958();
    unint64_t v13 = v12;
    sub_23CF78F38(v16, (void (*)(void, void, void, void, void, void, void))sub_23CF42034);
    sub_23CF231B0(v11, v13, &v15);
    sub_23D005E48();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v14, -1, -1);
    MEMORY[0x23ECF6610](v7, -1, -1);
  }
  else
  {
    sub_23CF78F38(a1, (void (*)(void, void, void, void, void, void, void))sub_23CF42034);
    sub_23CF78F38(a1, (void (*)(void, void, void, void, void, void, void))sub_23CF42034);

    swift_release_n();
  }
}

void *sub_23CF77F4C(uint64_t a1, long long *a2)
{
  uint64_t v4 = a1 + 16;
  sub_23CF78CB0((long long *)(a1 + 16), (uint64_t)v8);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  sub_23CF78CB0(a2, v4);
  sub_23CF78F38(a2, (void (*)(void, void, void, void, void, void, void))sub_23CF3C33C);
  sub_23CF78F38(v8, (void (*)(void, void, void, void, void, void, void))sub_23CF3C33C);
  sub_23CF42034(v5, v6);
  sub_23CF77BFC(v8);
  return sub_23CF78F38(v8, (void (*)(void, void, void, void, void, void, void))sub_23CF42034);
}

uint64_t sub_23CF7803C()
{
  swift_getKeyPath();
  sub_23CF78FFC(&qword_268BCDE18, (void (*)(uint64_t))type metadata accessor for StateController);
  sub_23D003DD8();
  swift_release();
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_23CF780DC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 72) = a2 & 1;
  return result;
}

uint64_t sub_23CF780E8(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_23D005828();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_23D005858();
  uint64_t v8 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF28970();
  uint64_t v11 = (void *)sub_23D005D28();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  sub_23CF78CB0(a1, v12 + 24);
  aBlock[4] = sub_23CF78FD8;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23CF6021C;
  aBlock[3] = &block_descriptor_4;
  unint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_23CF78F38(a1, (void (*)(void, void, void, void, void, void, void))sub_23CF3C33C);
  swift_release();
  sub_23D005848();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_23CF78FFC((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
  sub_23CF28A80();
  sub_23D005ED8();
  MEMORY[0x23ECF57B0](0, v10, v7, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

uint64_t sub_23CF783C8(uint64_t a1, long long *a2)
{
  sub_23CF78CB0(a2, (uint64_t)v3);
  sub_23D005788();
  sub_23D004798();
  return swift_release();
}

uint64_t sub_23CF78448(uint64_t a1, long long *a2)
{
  sub_23CF78CB0(a2, (uint64_t)v5);
  swift_getKeyPath();
  uint64_t v6 = a1;
  sub_23CF78F38(a2, (void (*)(void, void, void, void, void, void, void))sub_23CF3C33C);
  sub_23CF78FFC(&qword_268BCDE18, (void (*)(uint64_t))type metadata accessor for StateController);
  sub_23D003DC8();
  sub_23CF78F38(a2, (void (*)(void, void, void, void, void, void, void))sub_23CF42034);
  swift_release();
  swift_getKeyPath();
  uint64_t v6 = a1;
  sub_23D003DC8();
  return swift_release();
}

uint64_t sub_23CF785D4()
{
  sub_23CF42034(*(void *)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Feedback15StateController___observationRegistrar;
  uint64_t v2 = sub_23D003E18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_23CF78688()
{
  return type metadata accessor for StateController();
}

uint64_t type metadata accessor for StateController()
{
  uint64_t result = qword_268BCEB20;
  if (!qword_268BCEB20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF786DC()
{
  uint64_t result = sub_23D003E18();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StateController.StackState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CF7884CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateController.StackState()
{
  return &type metadata for StateController.StackState;
}

unint64_t destroy for StateController.State(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for StateController.State(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    uint64_t v5 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for StateController.State(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    long long v7 = a2[2];
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StateController.State(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateController.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StateController.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

double sub_23CF78C18(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StateController.State()
{
  return &type metadata for StateController.State;
}

unint64_t sub_23CF78C5C()
{
  unint64_t result = qword_268BCEB30;
  if (!qword_268BCEB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEB30);
  }
  return result;
}

uint64_t sub_23CF78CB0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(void *)(a2 + 48) = *((void *)a1 + 6);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_23CF78CD0(long long *a1, long long *a2)
{
  sub_23CF78CB0(a1, (uint64_t)&v26);
  uint64_t v3 = v27;
  switch(v27)
  {
    case 0:
      sub_23CF78CB0(a2, (uint64_t)&v19);
      return !v20;
    case 1:
      sub_23CF78CB0(a2, (uint64_t)&v19);
      return v20 == 1;
    case 2:
      sub_23CF78CB0(a2, (uint64_t)&v19);
      return v20 == 2;
    case 3:
      sub_23CF78CB0(a2, (uint64_t)&v19);
      return v20 == 3;
    default:
      uint64_t v4 = v26;
      uint64_t v6 = v28;
      uint64_t v5 = v29;
      int v7 = v30;
      uint64_t v9 = v31;
      uint64_t v8 = v32;
      sub_23CF78CB0(a2, (uint64_t)&v19);
      if (v20 < 4) {
        return 0;
      }
      uint64_t v11 = v21;
      uint64_t v10 = v22;
      int v12 = v23;
      uint64_t v18 = v24;
      uint64_t v13 = v25;
      if (v4 != v19 || v3 != v20)
      {
        uint64_t v14 = v25;
        char v15 = sub_23D006218();
        uint64_t v13 = v14;
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      if (v5)
      {
        if (!v10) {
          return 0;
        }
        if (v6 != v11 || v5 != v10)
        {
          uint64_t v16 = v13;
          if ((sub_23D006218() & 1) == 0) {
            return 0;
          }
          uint64_t v13 = v16;
        }
      }
      else if (v10)
      {
        return 0;
      }
      if (v7 == v12)
      {
        if (v8) {
          return v13 && (v9 == v18 && v8 == v13 || (sub_23D006218() & 1) != 0);
        }
        if (!v13) {
          return 1;
        }
      }
      return 0;
  }
}

uint64_t sub_23CF78EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE5F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_23CF78F38(void *a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_23CF78F80()
{
  swift_release();
  if (*(void *)(v0 + 32) >= 4uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_23CF78FD8()
{
  return sub_23CF783C8(*(void *)(v0 + 16), (long long *)(v0 + 24));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_23CF78FFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF79044()
{
  return sub_23CF78448(*(void *)(v0 + 16), *(long long **)(v0 + 24));
}

void *sub_23CF79060()
{
  return sub_23CF77F4C(*(void *)(v0 + 16), *(long long **)(v0 + 24));
}

void sub_23CF7907C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 72) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_23CF7908C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23CF790B4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBB8);
    uint64_t v2 = sub_23D0060E8();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v29 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v30 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v11);
    int64_t v13 = v30 + 1;
    if (!v12)
    {
      int64_t v13 = v30 + 2;
      if (v30 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v29 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v30 + 3;
        if (v30 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v29 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v30 + 4;
          if (v30 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v29 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v30 = v13;
LABEL_28:
    uint64_t v16 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v33[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    char v15 = *(void **)&v33[0];
    *(void *)&v32[0] = v16;
    sub_23CF31A54(0, &qword_268BCEBC0);
    id v17 = v15;
    id v18 = v16;
    swift_dynamicCast();
    uint64_t v19 = *(void *)&v33[0];
    sub_23CF80BA8((_OWORD *)((char *)v33 + 8), v31);
    sub_23CF80BA8(v31, v33);
    sub_23CF80BA8(v33, v32);
    sub_23D005948();
    sub_23D0062C8();
    sub_23D0059D8();
    uint64_t v20 = sub_23D0062F8();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v6 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v19;
    uint64_t result = (uint64_t)sub_23CF80BA8(v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v8));
    ++*(void *)(v2 + 16);
  }
  int64_t v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_23CF77590();
    return v2;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_23CF79468(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEB88);
    uint64_t v2 = (void *)sub_23D0060E8();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  unint64_t v8 = (uint64_t *)&unk_268BCEB70;
  uint64_t v9 = MEMORY[0x263F8EE50] + 8;
  uint64_t v30 = v1;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v17 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v17 >= v31) {
    goto LABEL_32;
  }
  unint64_t v18 = *(void *)(v32 + 8 * v17);
  int64_t v19 = i + 1;
  if (!v18)
  {
    int64_t v19 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v18 = *(void *)(v32 + 8 * v19);
    if (!v18)
    {
      int64_t v19 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v18 = *(void *)(v32 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v18 = *(void *)(v32 + 8 * v19);
        if (!v18)
        {
          int64_t v20 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v18 = *(void *)(v32 + 8 * v20);
            if (v18)
            {
              int64_t v19 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v19 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_36;
              }
              if (v19 >= v31) {
                break;
              }
              unint64_t v18 = *(void *)(v32 + 8 * v19);
              ++v20;
              if (v18) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_23CF77590();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v18 - 1) & v18;
  unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
  for (i = v19; ; unint64_t v16 = v15 | (i << 6))
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v16);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(v8);
    swift_dynamicCast();
    unint64_t result = sub_23CF23884(v23, v22);
    unint64_t v24 = result;
    if (v25)
    {
      int64_t v10 = i;
      uint64_t v11 = v9;
      unint64_t v12 = v8;
      int64_t v13 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int64_t v13 = v23;
      v13[1] = v22;
      uint64_t v14 = v2[7];
      unint64_t result = swift_unknownObjectRelease();
      *(void *)(v14 + 8 * v24) = v33;
      unint64_t v8 = v12;
      uint64_t v9 = v11;
      int64_t i = v10;
      uint64_t v1 = v30;
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v26 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v26 = v23;
    v26[1] = v22;
    *(void *)(v2[7] + 8 * result) = v33;
    uint64_t v27 = v2[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_34;
    }
    v2[2] = v29;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v15 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_23CF79770(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEB80);
    uint64_t v2 = (void *)sub_23D0060E8();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  int v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x263F8EE50] + 8;
  uint64_t v11 = MEMORY[0x263F8EE58] + 8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_23CF77590();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    unint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    sub_23CF80BA8(v6, v7);
    sub_23CF80BA8(v7, v40);
    sub_23CF80BA8(v40, &v38);
    unint64_t result = sub_23CF23884(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      unint64_t v12 = v7;
      int64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      int64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      int v7 = v12;
      int64_t i = v33;
      unint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      unint64_t result = (unint64_t)sub_23CF80BA8(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_23CF80BA8(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_23CF79AD8(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEB80);
    uint64_t v2 = (void *)sub_23D0060E8();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  int v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x263F8EE58] + 8;
  uint64_t v11 = MEMORY[0x263F8D310];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_23CF77590();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    unint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_23CF80BA8(v6, v7);
    sub_23CF80BA8(v7, v40);
    sub_23CF80BA8(v40, &v38);
    unint64_t result = sub_23CF23884(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      unint64_t v12 = v7;
      int64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      int64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      int v7 = v12;
      int64_t i = v33;
      unint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      unint64_t result = (unint64_t)sub_23CF80BA8(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_23CF80BA8(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23CF79E44()
{
  uint64_t v0 = sub_23D004498();
  __swift_allocate_value_buffer(v0, qword_268BCEB40);
  __swift_project_value_buffer(v0, (uint64_t)qword_268BCEB40);
  return sub_23D004488();
}

void sub_23CF79EB4(void *a1, void *a2, char *a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  char v11 = *a3;
  if (*a3)
  {
    if ((sub_23CF7FA04(a5 & 1) & 1) == 0)
    {
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = a6;
      *(void *)(v16 + 24) = a7;
      *(unsigned char *)(v16 + 32) = v11;
      *(void *)(v16 + 40) = v7;
      *(void *)(v16 + 48) = a2;
      *(void *)(v16 + 56) = a1;
      void v20[4] = sub_23CF810B4;
      v20[5] = v16;
      v20[0] = MEMORY[0x263EF8330];
      v20[1] = 1107296256;
      v20[2] = sub_23CF7D7D8;
      v20[3] = &block_descriptor_138;
      int64_t v17 = _Block_copy(v20);
      sub_23CEE935C(a6);
      id v18 = a1;
      id v19 = a2;
      swift_release();
      objc_msgSend(v19, sel_interactiveStartupUsingSystemAccount_completion_, a4 & 1, v17);
      _Block_release(v17);
      return;
    }
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a6;
    *(void *)(v14 + 24) = a7;
    sub_23CEE935C(a6);
    sub_23CF7A398(a2, (uint64_t)sub_23CF810CC, v14);
  }
  else
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a6;
    *(void *)(v15 + 24) = a7;
    sub_23CEE935C(a6);
    sub_23CF7F72C(a2, (uint64_t)sub_23CF810D8, v15);
  }

  swift_release();
}

void sub_23CF7A0AC(uint64_t a1, id a2, void (*a3)(uint64_t, id))
{
  if (a2)
  {
    id v5 = a2;
    if (qword_268BCCC50 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_23D004498();
    __swift_project_value_buffer(v6, (uint64_t)qword_268BCEB40);
    id v7 = a2;
    id v8 = a2;
    uint64_t v9 = sub_23D004478();
    os_log_type_t v10 = sub_23D005C98();
    if (os_log_type_enabled(v9, v10))
    {
      char v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v21 = v12;
      *(_DWORD *)char v11 = 136315138;
      swift_getErrorValue();
      uint64_t v13 = sub_23D006278();
      sub_23CF231B0(v13, v14, &v21);
      sub_23D005E48();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23CEE3000, v9, v10, "AppleConnect login failed. Error: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v12, -1, -1);
      MEMORY[0x23ECF6610](v11, -1, -1);

      if (!a3) {
        goto LABEL_15;
      }
    }
    else
    {

      if (!a3)
      {
LABEL_15:

        return;
      }
    }
    id v20 = a2;
    a3(0, a2);

    goto LABEL_15;
  }
  if (qword_268BCCC50 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_23D004498();
  __swift_project_value_buffer(v16, (uint64_t)qword_268BCEB40);
  int64_t v17 = sub_23D004478();
  os_log_type_t v18 = sub_23D005C88();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v19 = 0;
    _os_log_impl(&dword_23CEE3000, v17, v18, "AppleConnect login successful, resuming.", v19, 2u);
    MEMORY[0x23ECF6610](v19, -1, -1);
  }

  if (a3) {
    a3(a1, 0);
  }
}

void sub_23CF7A398(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_268BCCC50 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_23D004498();
  __swift_project_value_buffer(v8, (uint64_t)qword_268BCEB40);
  uint64_t v9 = sub_23D004478();
  os_log_type_t v10 = sub_23D005CB8();
  if (os_log_type_enabled(v9, v10))
  {
    char v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    aBlock[0] = v12;
    *(_DWORD *)char v11 = 136446210;
    sub_23CF231B0(0xD000000000000036, 0x800000023D012DD0, aBlock);
    sub_23D005E48();
    _os_log_impl(&dword_23CEE3000, v9, v10, "%{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v12, -1, -1);
    MEMORY[0x23ECF6610](v11, -1, -1);
  }

  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v4;
  v13[3] = a1;
  uint64_t v13[4] = a2;
  v13[5] = a3;
  aBlock[4] = (uint64_t)sub_23CF811B8;
  aBlock[5] = (uint64_t)v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23CF7E570;
  aBlock[3] = (uint64_t)&block_descriptor_162;
  unint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  sub_23CEE935C(a2);
  swift_release();
  FBKLoginWithAppleConnect();
  _Block_release(v14);
}

void sub_23CF7A5D8(void *a1, void (*a2)(id), uint64_t a3, void *a4)
{
  if (a1)
  {
    id v6 = a1;
    if (qword_268BCCC50 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_23D004498();
    __swift_project_value_buffer(v7, (uint64_t)qword_268BCEB40);
    id v8 = a1;
    id v9 = a1;
    os_log_type_t v10 = sub_23D004478();
    os_log_type_t v11 = sub_23D005C98();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v22 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_getErrorValue();
      uint64_t v14 = sub_23D006278();
      sub_23CF231B0(v14, v15, &v22);
      sub_23D005E48();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23CEE3000, v10, v11, "AppleConnect login failed. Error: %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v13, -1, -1);
      MEMORY[0x23ECF6610](v12, -1, -1);
    }
    else
    {
    }
    id v21 = (id)FBKErrorOfType();
    a2(v21);
  }
  else
  {
    if (qword_268BCCC50 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_23D004498();
    __swift_project_value_buffer(v17, (uint64_t)qword_268BCEB40);
    os_log_type_t v18 = sub_23D004478();
    os_log_type_t v19 = sub_23D005C88();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      _os_log_impl(&dword_23CEE3000, v18, v19, "AppleConnect login successful, resuming.", v20, 2u);
      MEMORY[0x23ECF6610](v20, -1, -1);
    }

    objc_msgSend(a4, sel_setIsAppleConnectUser_, 1);
    a2(0);
  }
}

void sub_23CF7A8C0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_268BCCC50 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_23D004498();
  __swift_project_value_buffer(v8, (uint64_t)qword_268BCEB40);
  id v9 = sub_23D004478();
  os_log_type_t v10 = sub_23D005CB8();
  if (os_log_type_enabled(v9, v10))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v11 = 0;
    _os_log_impl(&dword_23CEE3000, v9, v10, "FBK is running on an internal install, and AppleConnect is available, so we will use AppleConnect to recover.", v11, 2u);
    MEMORY[0x23ECF6610](v11, -1, -1);
  }

  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v4;
  uint64_t v12[3] = a1;
  v12[4] = a2;
  v12[5] = a3;
  v15[4] = sub_23CF7ED34;
  v15[5] = v12;
  v15[0] = MEMORY[0x263EF8330];
  v15[1] = 1107296256;
  void v15[2] = sub_23CF7E570;
  v15[3] = &block_descriptor_5;
  uint64_t v13 = _Block_copy(v15);
  id v14 = a1;
  swift_retain();
  swift_release();
  FBKLoginWithAppleConnect();
  _Block_release(v13);
}

uint64_t sub_23CF7AA68(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 80) = a6;
  *(void *)(v7 + 88) = v6;
  *(void *)(v7 + 64) = a2;
  *(void *)(v7 + 72) = a5;
  *(unsigned char *)(v7 + 177) = a4;
  *(unsigned char *)(v7 + 176) = a3;
  *(void *)(v7 + 56) = a1;
  sub_23D005B88();
  *(void *)(v7 + 96) = sub_23D005B78();
  uint64_t v9 = sub_23D005B48();
  *(void *)(v7 + 104) = v9;
  *(void *)(v7 + 112) = v8;
  return MEMORY[0x270FA2498](sub_23CF7AB10, v9, v8);
}

uint64_t sub_23CF7AB10()
{
  if (sub_23CF7FA04(*(unsigned char *)(v0 + 177)))
  {
    if (qword_268BCCC50 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_23D004498();
    *(void *)(v0 + 120) = __swift_project_value_buffer(v1, (uint64_t)qword_268BCEB40);
    uint64_t v2 = sub_23D004478();
    os_log_type_t v3 = sub_23D005CB8();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_23CEE3000, v2, v3, "Will use AppleConnect to authenticate.", v4, 2u);
      MEMORY[0x23ECF6610](v4, -1, -1);
    }

    id v5 = sub_23CF7AD58;
  }
  else
  {
    if (qword_268BCCC50 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_23D004498();
    __swift_project_value_buffer(v6, (uint64_t)qword_268BCEB40);
    uint64_t v7 = sub_23D004478();
    os_log_type_t v8 = sub_23D005CB8();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_23CEE3000, v7, v8, "Will use AuthKit to authenticate.", v9, 2u);
      MEMORY[0x23ECF6610](v9, -1, -1);
    }

    uint64_t v10 = swift_task_alloc();
    *(void *)(v0 + 152) = v10;
    *(void *)uint64_t v10 = v0;
    *(void *)(v10 + 8) = sub_23CF7AFE0;
    char v11 = *(unsigned char *)(v0 + 176);
    uint64_t v13 = *(void *)(v0 + 56);
    uint64_t v12 = *(void *)(v0 + 64);
    long long v14 = *(_OWORD *)(v0 + 72);
    *(void *)(v10 + 232) = *(void *)(v0 + 88);
    *(_OWORD *)(v10 + 216) = v14;
    *(unsigned char *)(v10 + 264) = v11;
    *(void *)(v10 + 200) = v13;
    *(void *)(v10 + 208) = v12;
    id v5 = sub_23CF7B3F8;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_23CF7AD58()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = swift_task_alloc();
  v0[16] = v2;
  *(void *)(v2 + 16) = v1;
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[17] = v3;
  *os_log_type_t v3 = v0;
  v3[1] = sub_23CF7AE44;
  return MEMORY[0x270FA2360]();
}

uint64_t sub_23CF7AE44()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_23CF7B16C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_23CF7AF60;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_23CF7AF60()
{
  return MEMORY[0x270FA2498](sub_23CF7AF78, *(void *)(v0 + 104), *(void *)(v0 + 112));
}

uint64_t sub_23CF7AF78()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t, void))(v0 + 8);
  return v1(1, 0);
}

uint64_t sub_23CF7AFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 160) = a1;
  *(void *)(v4 + 168) = a2;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 112);
  uint64_t v6 = *(void *)(v3 + 104);
  return MEMORY[0x270FA2498](sub_23CF7B108, v6, v5);
}

uint64_t sub_23CF7B108()
{
  swift_release();
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_23CF7B16C()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return MEMORY[0x270FA2498](sub_23CF7B1D0, v1, v2);
}

uint64_t sub_23CF7B1D0()
{
  uint64_t v17 = v0;
  uint64_t v1 = (void *)v0[18];
  swift_release();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_23D004478();
  os_log_type_t v5 = sub_23D005C98();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[18];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v9 = sub_23D006278();
    v0[6] = sub_23CF231B0(v9, v10, &v16);
    sub_23D005E48();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23CEE3000, v4, v5, "AppleConnect login failed. Error: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v8, -1, -1);
    MEMORY[0x23ECF6610](v7, -1, -1);
  }
  else
  {
    char v11 = (void *)v0[18];
  }
  uint64_t v12 = (void *)v0[18];
  id v13 = (id)FBKErrorOfType();

  long long v14 = (uint64_t (*)(uint64_t, id))v0[1];
  return v14(4, v13);
}

uint64_t sub_23CF7B3CC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 224) = a5;
  *(void *)(v6 + 232) = v5;
  *(void *)(v6 + 208) = a2;
  *(void *)(v6 + 216) = a4;
  *(unsigned char *)(v6 + 264) = a3;
  *(void *)(v6 + 200) = a1;
  return MEMORY[0x270FA2498](sub_23CF7B3F8, 0, 0);
}

uint64_t sub_23CF7B3F8()
{
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 224);
  if (v2)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    uint64_t v4 = sub_23CF815F8;
  }
  else
  {
    uint64_t v4 = 0;
  }
  sub_23CEE935C(v2);
  sub_23CEE93B4((uint64_t)v4);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 240) = v5;
  if (v2)
  {
    *(_OWORD *)(v5 + 16) = xmmword_23D00B550;
    return MEMORY[0x270FA2498](sub_23CF7B768, 0, 0);
  }
  else
  {
    uint64_t v6 = *(unsigned __int8 *)(v0 + 264);
    uint64_t v7 = *(void **)(v0 + 208);
    *(void *)(v0 + 80) = v0;
    *(void *)(v0 + 120) = v0 + 184;
    *(void *)(v0 + 88) = sub_23CF7B5BC;
    uint64_t v8 = swift_continuation_init();
    *(void *)(v0 + 144) = MEMORY[0x263EF8330];
    *(void *)(v0 + 152) = 0x40000000;
    *(void *)(v0 + 160) = sub_23CF7D528;
    *(void *)(v0 + 168) = &block_descriptor_128;
    *(void *)(v0 + 176) = v8;
    objc_msgSend(v7, sel_interactiveStartupUsingSystemAccount_completion_, v6, v0 + 144);
    return MEMORY[0x270FA23F0](v0 + 80);
  }
}

uint64_t sub_23CF7B5BC()
{
  return MEMORY[0x270FA2498](sub_23CF7B69C, 0, 0);
}

uint64_t sub_23CF7B69C()
{
  uint64_t v1 = *(void *)(v0 + 240);
  long long v2 = *(_OWORD *)(v0 + 184);
  *(_OWORD *)(v1 + 16) = v2;
  uint64_t v3 = sub_23CF7FCD0(v2);
  uint64_t v4 = *(void *)(v1 + 24);
  if (v3) {
    BOOL v5 = 1;
  }
  else {
    BOOL v5 = (v4 & 4) == 0;
  }
  if (v5)
  {
    uint64_t v6 = v3;
    swift_release();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v7(v4, v6);
  }
  else
  {
    return MEMORY[0x270FA2498](sub_23CF7B768, 0, 0);
  }
}

uint64_t sub_23CF7B768()
{
  uint64_t v1 = v0[30];
  uint64_t v3 = v0[27];
  uint64_t v2 = v0[28];
  uint64_t v5 = v0[25];
  uint64_t v4 = (void *)v0[26];
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_23CF7B894;
  uint64_t v6 = swift_continuation_init();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v1;
  swift_retain();
  sub_23CF7B9DC(v5, v4, 0, 0, 1, v3, v2, (uint64_t)sub_23CF8105C, v7);
  swift_release();
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_23CF7B894()
{
  *(_OWORD *)(*(void *)v0 + 248) = *(_OWORD *)(*(void *)v0 + 144);
  return MEMORY[0x270FA2498](sub_23CF7B978, 0, 0);
}

uint64_t sub_23CF7B978()
{
  swift_release();
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[32];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

void sub_23CF7B9DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a6)
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a6;
    *(void *)(v14 + 24) = a7;
    unint64_t v15 = sub_23CF80900;
  }
  else
  {
    unint64_t v15 = 0;
  }
  sub_23CEE935C(a6);
  sub_23CEE93B4((uint64_t)v15);
  id v16 = objc_msgSend(a2, sel_authenticationContextForUsername_, 0);
  objc_msgSend(v16, sel_setPresentingViewController_, a1);
  uint64_t v17 = self;
  id v18 = v16;
  id v19 = objc_msgSend(v17, sel_mainBundle);
  sub_23D003BA8();

  id v20 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setTitle_, v20, 0xE000000000000000);

  objc_msgSend(v18, sel_setShouldAllowAppleIDCreation_, 0);
  objc_msgSend(v18, sel_setIsUsernameEditable_, a5 & 1);
  id v43 = v18;
  id v21 = objc_msgSend(v17, sel_mainBundle);
  sub_23D003BA8();

  uint64_t v22 = (void *)sub_23D005918();
  swift_bridgeObjectRelease();
  objc_msgSend(v43, sel_setReason_, v22, 0xE000000000000000);

  if (a4)
  {
    id v23 = v43;
    swift_bridgeObjectRetain();
    unint64_t v24 = (void *)sub_23D005918();
    objc_msgSend(v23, sel_setUsername_, v24);

    if (a5)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      id v25 = v23;
      id v26 = objc_msgSend(v17, (SEL)&off_264E850B0 + 3);
      sub_23D003BA8();

      uint64_t v27 = (void *)sub_23D005918();
      swift_bridgeObjectRelease();
      objc_msgSend(v25, sel_setTitle_, v27, 0xE000000000000000);

      id v28 = v25;
      id v29 = objc_msgSend(v17, (SEL)&off_264E850B0 + 3);
      sub_23D003BA8();

      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEB60);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_23D008C80;
      *(void *)(v30 + 56) = MEMORY[0x263F8D310];
      *(void *)(v30 + 64) = sub_23CF808AC();
      *(void *)(v30 + 32) = a3;
      *(void *)(v30 + 40) = a4;
      sub_23D005968();
      swift_bridgeObjectRelease();
      int64_t v31 = (void *)sub_23D005918();
      swift_bridgeObjectRelease();
      objc_msgSend(v28, sel_setReason_, v31, 0x800000023D012D10);
    }
  }
  id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F29118]), sel_init);
  if (v32)
  {
    int64_t v33 = v32;
    uint64_t v34 = swift_allocObject();
    *(unsigned char *)(v34 + 16) = a6 != 0;
    *(void *)(v34 + 24) = a8;
    *(void *)(v34 + 32) = a9;
    *(void *)(v34 + 40) = a6;
    *(void *)(v34 + 48) = a7;
    *(void *)(v34 + 56) = v39;
    *(void *)(v34 + 64) = a2;
    aBlock[4] = sub_23CF80878;
    aBlock[5] = v34;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23CF7CE8C;
    aBlock[3] = &block_descriptor_47_0;
    uint64_t v35 = _Block_copy(aBlock);
    sub_23CEE935C(a6);
    id v36 = v43;
    id v37 = v33;
    sub_23CEE935C(a8);
    id v38 = a2;
    swift_release();
    objc_msgSend(v37, sel_authenticateWithContext_completion_, v36, v35);

    _Block_release(v35);
  }
  else
  {
  }
}

uint64_t sub_23CF7BFD8(uint64_t *a1, void (*a2)(uint64_t (*)(), uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  a2(sub_23CF80908, v5);

  return swift_release();
}

void sub_23CF7C068(uint64_t a1, NSObject *a2, char a3, uint64_t a4, NSObject *a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v88 = a4;
  long long v89 = a5;
  uint64_t v15 = sub_23D005828();
  uint64_t v86 = *(void *)(v15 - 8);
  uint64_t v87 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_23D005858();
  MEMORY[0x270FA5388](v18);
  id v21 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v84 = v19;
    uint64_t v22 = a2;
    id v23 = (void *)sub_23D003BB8();
    unint64_t v24 = &off_264E85000;
    id v25 = objc_msgSend(v23, sel_code);

    if (v25 == (id)-7003)
    {
      if (a3)
      {
        if (qword_268BCCC50 != -1) {
          swift_once();
        }
        uint64_t v26 = sub_23D004498();
        __swift_project_value_buffer(v26, (uint64_t)qword_268BCEB40);
        long long v89 = sub_23D004478();
        os_log_type_t v27 = sub_23D005C78();
        if (os_log_type_enabled(v89, v27))
        {
          id v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v28 = 0;
          _os_log_impl(&dword_23CEE3000, v89, v27, "User cancelled re-authentication", v28, 2u);
          MEMORY[0x23ECF6610](v28, -1, -1);

          id v29 = a2;
        }
        else
        {

          id v29 = v89;
        }
      }
      else
      {
        sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
        uint64_t v50 = (void *)sub_23D005D28();
        uint64_t v51 = swift_allocObject();
        uint64_t v53 = v88;
        uint64_t v52 = v89;
        *(void *)(v51 + 16) = v88;
        *(void *)(v51 + 24) = v52;
        uint64_t v95 = sub_23CF80A60;
        char v96 = (void *)v51;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v92 = 1107296256;
        long long v93 = sub_23CF6021C;
        uint64_t v94 = &block_descriptor_83;
        char v54 = _Block_copy(&aBlock);
        sub_23CEE935C(v53);
        swift_release();
        sub_23D005848();
        uint64_t aBlock = MEMORY[0x263F8EE78];
        sub_23CF80BB8((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
        sub_23CF28A80();
        uint64_t v55 = v87;
        sub_23D005ED8();
        MEMORY[0x23ECF57B0](0, v21, v17, v54);
        _Block_release(v54);

        (*(void (**)(char *, uint64_t))(v86 + 8))(v17, v55);
        (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v18);
      }
      return;
    }
    if (qword_268BCCC50 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_23D004498();
    __swift_project_value_buffer(v38, (uint64_t)qword_268BCEB40);
    uint64_t v39 = a2;
    int64_t v40 = a2;
    unint64_t v41 = sub_23D004478();
    os_log_type_t v42 = sub_23D005CB8();
    BOOL v43 = os_log_type_enabled(v41, v42);
    uint64_t v85 = v18;
    if (v43)
    {
      int64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v90 = (uint64_t)a2;
      uint64_t aBlock = v45;
      *(_DWORD *)int64_t v44 = 136446210;
      uint64_t v46 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860);
      uint64_t v47 = sub_23D005998();
      uint64_t v90 = sub_23CF231B0(v47, v48, &aBlock);
      sub_23D005E48();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23CEE3000, v41, v42, "AK Authentication error: %{public}s", v44, 0xCu);
      swift_arrayDestroy();
      uint64_t v49 = v45;
      unint64_t v24 = &off_264E85000;
      MEMORY[0x23ECF6610](v49, -1, -1);
      MEMORY[0x23ECF6610](v44, -1, -1);
    }
    else
    {
    }
    id v56 = (void *)sub_23D003BB8();
    id v57 = objc_msgSend(v56, sel_domain);

    uint64_t v58 = sub_23D005948();
    uint64_t v60 = v59;

    if (v58 == sub_23D005948() && v60 == v61)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v62 = sub_23D006218();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v62 & 1) == 0) {
        goto LABEL_25;
      }
    }
    os_log_type_t v63 = (void *)sub_23D003BB8();
    id v64 = [v63 (SEL)v24[489]];

    if (v64 == (id)-7005)
    {
      sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
      uint64_t v65 = (void *)sub_23D005D28();
      uint64_t v66 = swift_allocObject();
      uint64_t v68 = v88;
      uint64_t v67 = v89;
      *(void *)(v66 + 16) = v88;
      *(void *)(v66 + 24) = v67;
      uint64_t v95 = sub_23CF80A3C;
      char v96 = (void *)v66;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v92 = 1107296256;
      long long v93 = sub_23CF6021C;
      uint64_t v94 = &block_descriptor_77;
      char v69 = _Block_copy(&aBlock);
LABEL_26:
      sub_23CEE935C(v68);
      swift_release();
      sub_23D005848();
      uint64_t aBlock = MEMORY[0x263F8EE78];
      sub_23CF80BB8((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
      sub_23CF28A80();
      uint64_t v73 = v87;
      sub_23D005ED8();
      MEMORY[0x23ECF57B0](0, v21, v17, v69);
      _Block_release(v69);

      (*(void (**)(char *, uint64_t))(v86 + 8))(v17, v73);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v21, v85);
      return;
    }
LABEL_25:
    sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
    uint64_t v65 = (void *)sub_23D005D28();
    uint64_t v70 = (void *)swift_allocObject();
    uint64_t v68 = v88;
    char v71 = v89;
    v70[2] = v88;
    v70[3] = v71;
    v70[4] = a2;
    uint64_t v95 = sub_23CF80A08;
    char v96 = v70;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v92 = 1107296256;
    long long v93 = sub_23CF6021C;
    uint64_t v94 = &block_descriptor_71;
    char v69 = _Block_copy(&aBlock);
    unint64_t v72 = a2;
    goto LABEL_26;
  }
  uint64_t v85 = v18;
  if (a1)
  {
    if (a6)
    {
      uint64_t v30 = v19;
      sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
      swift_bridgeObjectRetain();
      sub_23CEE935C(a6);
      uint64_t v84 = sub_23D005D28();
      int64_t v31 = (void *)swift_allocObject();
      uint64_t v31[2] = a6;
      v31[3] = a7;
      _OWORD v31[4] = a8;
      v31[5] = a9;
      uint64_t v32 = v88;
      int64_t v33 = v89;
      v31[6] = a1;
      unsigned char v31[7] = v32;
      v31[8] = v33;
      uint64_t v95 = sub_23CF809AC;
      char v96 = v31;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v92 = 1107296256;
      long long v93 = sub_23CF6021C;
      uint64_t v94 = &block_descriptor_65;
      uint64_t v34 = _Block_copy(&aBlock);
      sub_23CEE935C(v32);
      sub_23CEE935C(a6);
      id v35 = a9;
      swift_release();
      sub_23D005848();
      uint64_t aBlock = MEMORY[0x263F8EE78];
      sub_23CF80BB8((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
      sub_23CF28A80();
      uint64_t v36 = v87;
      sub_23D005ED8();
      id v37 = (void *)v84;
      MEMORY[0x23ECF57B0](0, v21, v17, v34);
      _Block_release(v34);

      sub_23CEE93B4(a6);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v17, v36);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v85);
    }
    else
    {
      uint64_t v81 = swift_bridgeObjectRetain();
      unint64_t v82 = sub_23CF79468(v81);
      swift_bridgeObjectRelease();
      sub_23CF800B8(a9, v82, v88, (uint64_t)v89);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v74 = v19;
    sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
    unsigned __int8 v75 = (void *)sub_23D005D28();
    uint64_t v76 = swift_allocObject();
    uint64_t v78 = v88;
    uint64_t v77 = v89;
    *(void *)(v76 + 16) = v88;
    *(void *)(v76 + 24) = v77;
    uint64_t v95 = sub_23CF80934;
    char v96 = (void *)v76;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v92 = 1107296256;
    long long v93 = sub_23CF6021C;
    uint64_t v94 = &block_descriptor_59;
    int64_t v79 = _Block_copy(&aBlock);
    sub_23CEE935C(v78);
    swift_release();
    sub_23D005848();
    uint64_t aBlock = MEMORY[0x263F8EE78];
    sub_23CF80BB8((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
    sub_23CF28A80();
    uint64_t v80 = v87;
    sub_23D005ED8();
    MEMORY[0x23ECF57B0](0, v21, v17, v79);
    _Block_release(v79);

    (*(void (**)(char *, uint64_t))(v86 + 8))(v17, v80);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v21, v85);
  }
}

uint64_t sub_23CF7CD50(void (*a1)(uint64_t (*)(), void *), uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v13 = (void *)swift_allocObject();
  void v13[2] = a3;
  v13[3] = a4;
  uint64_t v13[4] = a5;
  v13[5] = a6;
  v13[6] = a7;
  id v14 = a4;
  swift_bridgeObjectRetain();
  sub_23CEE935C(a6);
  a1(sub_23CF80AD0, v13);

  return swift_release();
}

void sub_23CF7CE14(void (*a1)(void), uint64_t a2, char a3)
{
  if (a1)
  {
    sub_23CF806EC();
    uint64_t v5 = (void *)swift_allocError();
    *uint64_t v6 = a3;
    a1();
  }
}

uint64_t sub_23CF7CE8C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCEB70);
    uint64_t v4 = sub_23D0058B8();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_23CF7CF34(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_23D005948();
  if (*(void *)(a1 + 16) && (unint64_t v10 = sub_23CF23884(v8, v9), (v11 & 1) != 0))
  {
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    void aBlock[6] = v12;
    swift_dynamicCast();
    id v13 = (void *)sub_23D005918();
    swift_bridgeObjectRelease();
    sub_23CF79770(a1);
    id v14 = (void *)sub_23D0058A8();
    swift_bridgeObjectRelease();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a3;
    *(void *)(v15 + 24) = a4;
    aBlock[4] = sub_23CF80B8C;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23CF7D108;
    aBlock[3] = &block_descriptor_98_0;
    uint64_t v16 = _Block_copy(aBlock);
    sub_23CEE935C(a3);
    swift_release();
    objc_msgSend(a2, sel_loginWithUsername_authenticationResults_completion_, v13, v14, v16);
    _Block_release(v16);
  }
  else
  {
    swift_bridgeObjectRelease();
    __break(1u);
  }
}

uint64_t sub_23CF7D108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

void sub_23CF7D168(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = (void *)sub_23D005918();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a4;
  *(void *)(v9 + 24) = a5;
  v11[4] = sub_23CF815F4;
  v11[5] = v9;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_23CF7D108;
  void v11[3] = &block_descriptor_19_0;
  unint64_t v10 = _Block_copy(v11);
  sub_23CEE935C(a4);
  swift_release();
  objc_msgSend(a1, sel_loginWithAppleConnectToken_completion_, v8, v10);
  _Block_release(v10);
}

void sub_23CF7D270(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  if (a2)
  {
    char v4 = 0;
    goto LABEL_9;
  }
  if ((a2 & 2) != 0)
  {
    char v4 = 1;
    goto LABEL_9;
  }
  if ((a2 & 4) != 0)
  {
    char v4 = 2;
    goto LABEL_9;
  }
  if (a2)
  {
    char v4 = 3;
LABEL_9:
    sub_23CF806EC();
    uint64_t v5 = (void *)swift_allocError();
    id v6 = v5;
    *uint64_t v7 = v4;
    if (a3)
    {
      id v8 = v5;
      a3(v6);
    }

    return;
  }
  if (a3) {
    a3(0);
  }
}

void sub_23CF7D340(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  void v8[4] = sub_23CF81168;
  v8[5] = v6;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_23CF7D4B0;
  void v8[3] = &block_descriptor_156;
  uint64_t v7 = _Block_copy(v8);
  sub_23CEE935C(a2);
  swift_release();
  objc_msgSend(a1, sel_loginAsUnauthenticatedUserWithCompletion_, v7);
  _Block_release(v7);
}

void sub_23CF7D430(int a1, id a2, void (*a3)(id))
{
  if (a2)
  {
    if (a3)
    {
      id v5 = a2;
      a3(a2);
    }
  }
  else if (a3)
  {
    a3(0);
  }
}

void sub_23CF7D4B0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_23CF7D528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(*(void *)(*(void *)(a1 + 32) + 64) + 40);
  *uint64_t v3 = a2;
  v3[1] = a3;
  return swift_continuation_resume();
}

uint64_t sub_23CF7D54C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    swift_beginAccess();
    unint64_t v6 = *(void *)(a3 + 24);
    id v7 = a1;
    id v8 = *(unint64_t **)(*(void *)(a2 + 64) + 40);
    *id v8 = v6;
  }
  else
  {
    swift_beginAccess();
    id v8 = *(unint64_t **)(*(void *)(a2 + 64) + 40);
    *id v8 = *(void *)(a3 + 24) & 0xFFFFFFFFFFFFFFFBLL;
  }
  v8[1] = (unint64_t)a1;
  return swift_continuation_resume();
}

void sub_23CF7D5FC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void *), uint64_t a4, char a5, uint64_t a6, void *a7, uint64_t a8)
{
  if (a1)
  {
    char v11 = 0;
    goto LABEL_9;
  }
  if ((a1 & 2) != 0)
  {
    char v11 = 1;
    goto LABEL_9;
  }
  if ((a1 & 4) != 0)
  {
    char v11 = 2;
    goto LABEL_9;
  }
  if (a1)
  {
    char v11 = 3;
LABEL_9:
    sub_23CF806EC();
    uint64_t v12 = (void *)swift_allocError();
    id v13 = v12;
    *id v14 = v11;
    if (a3)
    {
      id v15 = v12;
      a3(a2, v13);
    }

    return;
  }
  if ((a2 & 4) != 0)
  {
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = a2;
    v19[3] = a3;
    v19[4] = a4;
    sub_23CEE935C((uint64_t)a3);
    if (a5 == 1) {
      sub_23CF7F72C(a7, (uint64_t)sub_23CF81300, (uint64_t)v19);
    }
    else {
      sub_23CF7B9DC(a8, a7, 0, 0, 1, 0, 0, (uint64_t)sub_23CF81300, (uint64_t)v19);
    }
    swift_release();
  }
  else if (a3)
  {
    a3(a2, 0);
  }
}

uint64_t sub_23CF7D7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

void sub_23CF7D838(char a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a1)
  {
    ((void (*)(void))a3)(0);
  }
  else
  {
    uint64_t v12 = a5 + 16;
    swift_beginAccess();
    uint64_t v13 = MEMORY[0x23ECF66F0](v12);
    if (v13)
    {
      id v14 = (void *)v13;
      if (qword_268BCCC50 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_23D004498();
      __swift_project_value_buffer(v15, (uint64_t)qword_268BCEB40);
      uint64_t v16 = sub_23D004478();
      os_log_type_t v17 = sub_23D005CB8();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl(&dword_23CEE3000, v16, v17, "Recovering from invalid session with system account failed. Will prompt for username and password", v18, 2u);
        MEMORY[0x23ECF6610](v18, -1, -1);
      }

      id v19 = objc_msgSend(a8, sel_username);
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v21 = sub_23D005948();
        uint64_t v23 = v22;
      }
      else
      {
        uint64_t v21 = 0;
        uint64_t v23 = 0;
      }
      sub_23CF7B9DC(a7, v14, v21, v23, 0, 0, 0, (uint64_t)a3, a4);

      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_268BCCC50 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_23D004498();
      __swift_project_value_buffer(v24, (uint64_t)qword_268BCEB40);
      id v25 = sub_23D004478();
      os_log_type_t v26 = sub_23D005CA8();
      if (os_log_type_enabled(v25, v26))
      {
        os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v27 = 0;
        _os_log_impl(&dword_23CEE3000, v25, v26, "Recovering from invalid session with system account failed and login manager is nil", v27, 2u);
        MEMORY[0x23ECF6610](v27, -1, -1);
      }

      id v28 = (id)FBKErrorOfType();
      a3();
    }
  }
}

void sub_23CF7DACC(char a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a1)
  {
    ((void (*)(void))a3)(0);
  }
  else
  {
    uint64_t v12 = a5 + 16;
    swift_beginAccess();
    uint64_t v13 = MEMORY[0x23ECF66F0](v12);
    if (v13)
    {
      id v14 = (void *)v13;
      id v15 = objc_msgSend(a8, sel_username);
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v17 = sub_23D005948();
        uint64_t v19 = v18;
      }
      else
      {
        uint64_t v17 = 0;
        uint64_t v19 = 0;
      }
      sub_23CF7B9DC(a7, v14, v17, v19, 0, 0, 0, (uint64_t)a3, a4);

      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_268BCCC50 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_23D004498();
      __swift_project_value_buffer(v20, (uint64_t)qword_268BCEB40);
      uint64_t v21 = sub_23D004478();
      os_log_type_t v22 = sub_23D005CA8();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_23CEE3000, v21, v22, "Recovering from invalid session with regular account failed and login manager is nil", v23, 2u);
        MEMORY[0x23ECF6610](v23, -1, -1);
      }

      id v24 = (id)FBKErrorOfType();
      a3();
    }
  }
}

uint64_t sub_23CF7DCA8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  void aBlock[6] = *MEMORY[0x263EF8340];
  uint64_t v13 = sub_23D005828();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_23D005858();
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a6;
    *(void *)(v22 + 24) = a7;
    sub_23CEE935C(a6);
    sub_23CF8039C(a5, a1, a2, (uint64_t)sub_23CF81264, v22);
    return swift_release();
  }
  else
  {
    uint64_t v44 = v19;
    uint64_t v45 = v18;
    uint64_t v46 = v14;
    if (qword_268BCCC50 != -1) {
      swift_once();
    }
    BOOL v43 = a5;
    uint64_t v24 = sub_23D004498();
    __swift_project_value_buffer(v24, (uint64_t)qword_268BCEB40);
    id v25 = a3;
    id v26 = a3;
    os_log_type_t v27 = sub_23D004478();
    os_log_type_t v28 = sub_23D005C98();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      unint64_t v41 = (void *)swift_slowAlloc();
      os_log_type_t v42 = v29;
      *(_DWORD *)id v29 = 138412290;
      if (a3)
      {
        id v30 = a3;
        uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
        aBlock[0] = v31;
        sub_23D005E48();
      }
      else
      {
        aBlock[0] = 0;
        sub_23D005E48();
        uint64_t v31 = 0;
      }
      uint64_t v32 = v41;
      *unint64_t v41 = v31;

      int64_t v33 = v42;
      _os_log_impl(&dword_23CEE3000, v27, v28, "Received error from AppleConnect: %@", v42, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDC00);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v32, -1, -1);
      MEMORY[0x23ECF6610](v33, -1, -1);
    }
    else
    {
    }
    sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
    uint64_t v34 = (void *)sub_23D005D28();
    id v35 = (void *)swift_allocObject();
    uint64_t v36 = v43;
    v35[2] = v43;
    v35[3] = a3;
    v35[4] = a6;
    v35[5] = a7;
    aBlock[4] = sub_23CF81214;
    aBlock[5] = v35;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23CF6021C;
    aBlock[3] = &block_descriptor_168;
    id v37 = _Block_copy(aBlock);
    id v38 = a3;
    sub_23CEE935C(a6);
    id v39 = v36;
    swift_release();
    sub_23D005848();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_23CF80BB8((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
    sub_23CF28A80();
    sub_23D005ED8();
    MEMORY[0x23ECF57B0](0, v21, v16, v37);
    _Block_release(v37);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v21, v45);
  }
}

void sub_23CF7E208(void *a1, void (*a2)(uint64_t, void *))
{
  if (a1)
  {
    if (a2)
    {
      id v4 = a1;
      a2(4, a1);
    }
  }
  else if (a2)
  {
    a2(1, 0);
  }
}

void sub_23CF7E28C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a2;
  void v8[3] = a3;
  void v8[4] = a4;
  v11[4] = sub_23CF812B4;
  v11[5] = v8;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  v11[2] = sub_23CF6021C;
  void v11[3] = &block_descriptor_177;
  uint64_t v9 = _Block_copy(v11);
  id v10 = a2;
  sub_23CEE935C(a3);
  swift_release();
  objc_msgSend(a1, sel_logOutIfNeededAndRun_, v9);
  _Block_release(v9);
}

void sub_23CF7E38C(void *a1, void (*a2)(uint64_t, id))
{
  if (!a1
    || (id v3 = a1,
        __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD860),
        sub_23CF31A54(0, &qword_268BCEBB0),
        (swift_dynamicCast() & 1) == 0))
  {
    if (!a2) {
      return;
    }
    id v4 = (id)FBKErrorOfType();
    a2(4, v4);
    goto LABEL_14;
  }
  id v4 = v13;
  id v5 = objc_msgSend(v13, sel_domain);
  uint64_t v6 = sub_23D005948();
  uint64_t v8 = v7;

  if (v6 == 0xD000000000000017 && v8 == 0x800000023D012E10)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = sub_23D006218();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_12;
    }
  }
  if (objc_msgSend(v13, sel_code) != (id)-100)
  {
LABEL_12:
    if (a2)
    {
      id v12 = (id)FBKErrorOfType();
      a2(4, v12);
    }
    goto LABEL_14;
  }
  if (a2)
  {
    sub_23CF806EC();
    id v10 = (void *)swift_allocError();
    *char v11 = 4;
    a2(4, v10);

    return;
  }
LABEL_14:
}

uint64_t sub_23CF7E570(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    uint64_t v5 = sub_23D005948();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  swift_retain();
  id v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF7E608(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  BOOL v43 = a5;
  void aBlock[6] = *MEMORY[0x263EF8340];
  uint64_t v12 = sub_23D005828();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_23D005858();
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v20 = v43;
    return sub_23CF8039C(v20, a1, a2, a6, a7);
  }
  else
  {
    uint64_t v40 = a7;
    uint64_t v41 = v17;
    if (qword_268BCCC50 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_23D004498();
    __swift_project_value_buffer(v22, (uint64_t)qword_268BCEB40);
    id v23 = a3;
    id v24 = a3;
    id v25 = sub_23D004478();
    os_log_type_t v26 = sub_23D005C98();
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v42 = v16;
    if (v27)
    {
      uint64_t v39 = v13;
      os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
      id v38 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v28 = 138412290;
      if (a3)
      {
        id v29 = a3;
        uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
        aBlock[0] = v30;
        sub_23D005E48();
      }
      else
      {
        aBlock[0] = 0;
        sub_23D005E48();
        uint64_t v30 = 0;
      }
      uint64_t v31 = v38;
      *id v38 = v30;

      _os_log_impl(&dword_23CEE3000, v25, v26, "Received error from AppleConnect: %@", v28, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_268BCDC00);
      swift_arrayDestroy();
      MEMORY[0x23ECF6610](v31, -1, -1);
      MEMORY[0x23ECF6610](v28, -1, -1);

      uint64_t v13 = v39;
    }
    else
    {
    }
    sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
    uint64_t v32 = (void *)sub_23D005D28();
    int64_t v33 = (void *)swift_allocObject();
    uint64_t v34 = v43;
    v33[2] = v43;
    _OWORD v33[3] = a6;
    v33[4] = v40;
    aBlock[4] = sub_23CF7F720;
    aBlock[5] = v33;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23CF6021C;
    aBlock[3] = &block_descriptor_7;
    id v35 = _Block_copy(aBlock);
    id v36 = v34;
    swift_retain();
    swift_release();
    sub_23D005848();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_23CF80BB8((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
    sub_23CF28A80();
    sub_23D005ED8();
    MEMORY[0x23ECF57B0](0, v19, v15, v35);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v19, v42);
  }
}

void sub_23CF7EB1C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  void v8[4] = sub_23CF80740;
  v8[5] = v6;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_23CF6021C;
  void v8[3] = &block_descriptor_25_0;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_logOutIfNeededAndRun_, v7);
  _Block_release(v7);
}

void sub_23CF7EC00(void (*a1)(void))
{
  id v2 = (id)FBKErrorOfType();
  a1();
}

id sub_23CF7EC9C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Authentication();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for Authentication()
{
  return self;
}

uint64_t sub_23CF7ECF4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_23CF7ED34(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_23CF7E608(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

void sub_23CF7ED58(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(void *)(v8 + ((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  aBlock[4] = sub_23CF80CB0;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23CF7E570;
  aBlock[3] = &block_descriptor_106;
  char v9 = _Block_copy(aBlock);
  id v10 = a2;
  swift_release();
  FBKLoginWithAppleConnect();
  _Block_release(v9);
}

uint64_t sub_23CF7EF0C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v50 = a2;
  uint64_t v51 = a5;
  uint64_t v49 = a1;
  uint64_t v7 = sub_23D005828();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_23D005858();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8);
  uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
  MEMORY[0x270FA5388](v15);
  if (a3)
  {
    aBlock[0] = a3;
    id v18 = a3;
    return sub_23D005B58();
  }
  else
  {
    uint64_t v47 = v8;
    uint64_t v48 = a4;
    uint64_t v44 = v14;
    uint64_t v45 = v12;
    uint64_t v46 = v10;
    uint64_t v20 = v50;
    if (v50)
    {
      uint64_t v21 = v17;
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v48, v15);
      unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      uint64_t v23 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v23 + v22, (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
      sub_23CF8039C(v51, v49, v20, (uint64_t)sub_23CF80EA4, v23);
    }
    else
    {
      uint64_t v49 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v24 = v17;
      id v25 = v51;
      if (qword_268BCCC50 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_23D004498();
      __swift_project_value_buffer(v26, (uint64_t)qword_268BCEB40);
      BOOL v27 = sub_23D004478();
      os_log_type_t v28 = sub_23D005C98();
      BOOL v29 = os_log_type_enabled(v27, v28);
      uint64_t v50 = v11;
      uint64_t v30 = v44;
      if (v29)
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_23CEE3000, v27, v28, "Something went wrong in AppleConnect login attempt.", v31, 2u);
        uint64_t v32 = v31;
        id v25 = v51;
        MEMORY[0x23ECF6610](v32, -1, -1);
      }

      sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
      int64_t v33 = (void *)sub_23D005D28();
      uint64_t v34 = v24;
      id v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
      uint64_t v36 = v49;
      v35(v49, v48, v15);
      unint64_t v37 = (*(unsigned __int8 *)(v34 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v25;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v34 + 32))(v38 + v37, v36, v15);
      aBlock[4] = sub_23CF80E38;
      aBlock[5] = v38;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23CF6021C;
      aBlock[3] = &block_descriptor_112;
      uint64_t v39 = _Block_copy(aBlock);
      id v40 = v25;
      sub_23D005848();
      uint64_t v52 = MEMORY[0x263F8EE78];
      sub_23CF80BB8((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
      sub_23CF28A80();
      uint64_t v41 = v30;
      uint64_t v42 = v46;
      sub_23D005ED8();
      MEMORY[0x23ECF57B0](0, v41, v42, v39);
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v7);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v50);
    }
    return swift_release();
  }
}

uint64_t sub_23CF7F448(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8);
    return sub_23D005B58();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8);
    return sub_23D005B68();
  }
}

void sub_23CF7F4AC(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_23CF80FB0;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23CF6021C;
  aBlock[3] = &block_descriptor_121;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a1, sel_logOutIfNeededAndRun_, v9);
  _Block_release(v9);
}

id sub_23CF7F654()
{
  id result = (id)FBKErrorOfType();
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8);
    return (id)sub_23D005B58();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23CF7F6B0(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result) {
    return _swift_stdlib_bridgeErrorToNSError();
  }
  return result;
}

uint64_t sub_23CF7F6E0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_23CF7F720()
{
  sub_23CF7EB1C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_23CF7F72C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_23D005828();
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_23D005858();
  uint64_t v9 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
  uint64_t v12 = (void *)sub_23D005D28();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a1;
  v13[3] = a2;
  uint64_t v13[4] = a3;
  aBlock[4] = sub_23CF81158;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23CF6021C;
  aBlock[3] = &block_descriptor_150;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  sub_23CEE935C(a2);
  swift_release();
  sub_23D005848();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_23CF80BB8((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
  sub_23CF28A80();
  sub_23D005ED8();
  MEMORY[0x23ECF57B0](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
}

uint64_t sub_23CF7FA04(char a1)
{
  if (a1)
  {
    if (qword_268BCCC50 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_23D004498();
    __swift_project_value_buffer(v1, (uint64_t)qword_268BCEB40);
    uint64_t v2 = sub_23D004478();
    os_log_type_t v3 = sub_23D005CB8();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_23CEE3000, v2, v3, "AC disabled via user default", v4, 2u);
      MEMORY[0x23ECF6610](v4, -1, -1);
    }

    return 0;
  }
  else
  {
    uint64_t v6 = sub_23D003E88();
    v16[3] = v6;
    v16[4] = sub_23CF80BB8(&qword_268BCEB90, MEMORY[0x263F3C1B0]);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v6 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x263F3C1A0], v6);
    int v8 = sub_23D003E28();
    uint64_t v9 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    int v10 = MEMORY[0x23ECF5E10](v9);
    unsigned int v11 = FBKIsAppleConnectAvailable();
    if (qword_268BCCC50 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_23D004498();
    __swift_project_value_buffer(v12, (uint64_t)qword_268BCEB40);
    uint64_t v13 = sub_23D004478();
    os_log_type_t v14 = sub_23D005CB8();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 67109632;
      LODWORD(v16[0]) = v8 & 1;
      sub_23D005E48();
      *(_WORD *)(v15 + 8) = 1024;
      LODWORD(v16[0]) = v10;
      sub_23D005E48();
      *(_WORD *)(v15 + 14) = 1024;
      LODWORD(v16[0]) = v11;
      sub_23D005E48();
      _os_log_impl(&dword_23CEE3000, v13, v14, "AC enabled? [true] CFB enabled? [%{BOOL}d], internal? [%{BOOL}d], AC available? [%{BOOL}d]", (uint8_t *)v15, 0x14u);
      MEMORY[0x23ECF6610](v15, -1, -1);
    }

    return v8 & v10 & v11;
  }
}

uint64_t sub_23CF7FCD0(uint64_t result)
{
  if (result)
  {
    char v1 = 0;
  }
  else if ((result & 2) != 0)
  {
    char v1 = 1;
  }
  else if ((result & 4) != 0)
  {
    char v1 = 2;
  }
  else
  {
    if (!result) {
      return result;
    }
    char v1 = 3;
  }
  sub_23CF806EC();
  uint64_t result = swift_allocError();
  *uint64_t v2 = v1;
  return result;
}

void sub_23CF7FD38(void *a1, void *a2, int a3, id a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  if (objc_msgSend(a4, sel_isSystemAccount))
  {
    if (qword_268BCCC50 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_23D004498();
    __swift_project_value_buffer(v13, (uint64_t)qword_268BCEB40);
    os_log_type_t v14 = sub_23D004478();
    os_log_type_t v15 = sub_23D005CB8();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_23CEE3000, v14, v15, "Recovering from invalid session with system account", v16, 2u);
      MEMORY[0x23ECF6610](v16, -1, -1);
    }

    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = a5;
    v18[3] = a6;
    v18[4] = v17;
    v18[5] = v7;
    v18[6] = a1;
    v18[7] = a4;
    id v35 = sub_23CF807F0;
    uint64_t v36 = v18;
    uint64_t v31 = MEMORY[0x263EF8330];
    uint64_t v32 = 1107296256;
    int64_t v33 = sub_23CF7D4B0;
    uint64_t v34 = &block_descriptor_41_0;
    uint64_t v19 = _Block_copy(&v31);
    id v20 = a1;
    id v21 = a4;
    swift_retain();
    swift_release();
    unint64_t v22 = &selRef_loginWithSystemAccountWithCompletion_;
  }
  else
  {
    if (qword_268BCCC50 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_23D004498();
    __swift_project_value_buffer(v23, (uint64_t)qword_268BCEB40);
    uint64_t v24 = sub_23D004478();
    os_log_type_t v25 = sub_23D005CB8();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_23CEE3000, v24, v25, "Recovering from invalid session with regular user account", v26, 2u);
      MEMORY[0x23ECF6610](v26, -1, -1);
    }

    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    os_log_type_t v28 = (void *)swift_allocObject();
    id v28[2] = a5;
    v28[3] = a6;
    v28[4] = v27;
    v28[5] = v7;
    v28[6] = a1;
    unsigned char v28[7] = a4;
    id v35 = sub_23CF80784;
    uint64_t v36 = v28;
    uint64_t v31 = MEMORY[0x263EF8330];
    uint64_t v32 = 1107296256;
    int64_t v33 = sub_23CF7D4B0;
    uint64_t v34 = &block_descriptor_34;
    uint64_t v19 = _Block_copy(&v31);
    id v29 = a1;
    id v30 = a4;
    swift_retain();
    swift_release();
    unint64_t v22 = &selRef_autoLoginWithCompletion_;
  }
  objc_msgSend(a2, *v22, v19);
  _Block_release(v19);
}

uint64_t sub_23CF800B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_23D005828();
  uint64_t v22 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_23D005858();
  uint64_t v11 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
  uint64_t v20 = sub_23D005D28();
  os_log_type_t v14 = (void *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a1;
  v14[4] = a3;
  v14[5] = a4;
  aBlock[4] = sub_23CF80B7C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23CF6021C;
  aBlock[3] = &block_descriptor_92_0;
  os_log_type_t v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v16 = a1;
  sub_23CEE935C(a3);
  swift_release();
  sub_23D005848();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_23CF80BB8((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
  sub_23CF28A80();
  sub_23D005ED8();
  uint64_t v17 = (void *)v20;
  MEMORY[0x23ECF57B0](0, v13, v10, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v21);
}

uint64_t sub_23CF8039C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_23D005828();
  uint64_t v24 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_23D005858();
  uint64_t v13 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  os_log_type_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23CF31A54(0, (unint64_t *)&qword_268BCDC10);
  uint64_t v22 = sub_23D005D28();
  id v16 = (void *)swift_allocObject();
  void v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  uint64_t v16[5] = a4;
  v16[6] = a5;
  aBlock[4] = sub_23CF806D8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23CF6021C;
  aBlock[3] = &block_descriptor_13_0;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = a1;
  swift_bridgeObjectRetain();
  sub_23CEE935C(a4);
  swift_release();
  sub_23D005848();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_23CF80BB8((unint64_t *)&qword_268BCD9A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_268BCDC20);
  sub_23CF28A80();
  sub_23D005ED8();
  uint64_t v19 = (void *)v22;
  MEMORY[0x23ECF57B0](0, v15, v12, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v23);
}

uint64_t sub_23CF80688()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_23CF806D8()
{
  sub_23CF7D168(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

unint64_t sub_23CF806EC()
{
  unint64_t result = qword_268BCEB58;
  if (!qword_268BCEB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEB58);
  }
  return result;
}

void sub_23CF80740()
{
  sub_23CF7EC00(*(void (**)(void))(v0 + 16));
}

uint64_t sub_23CF80748()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_23CF80784(uint64_t a1, uint64_t a2)
{
  return sub_23CF80808(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_23CF7DACC);
}

uint64_t objectdestroy_30Tm_0()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_23CF807F0(uint64_t a1, uint64_t a2)
{
  return sub_23CF80808(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_23CF7D838);
}

uint64_t sub_23CF80808(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_23CF80820()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 72, 7);
}

void sub_23CF80878(uint64_t a1, NSObject *a2)
{
  sub_23CF7C068(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void **)(v2 + 64));
}

unint64_t sub_23CF808AC()
{
  unint64_t result = qword_268BCEB68;
  if (!qword_268BCEB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEB68);
  }
  return result;
}

uint64_t sub_23CF80900(uint64_t *a1)
{
  return sub_23CF7BFD8(a1, *(void (**)(uint64_t (*)(), uint64_t))(v1 + 16));
}

uint64_t sub_23CF80908()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_23CF80934()
{
  sub_23CF7CE14(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), 3);
}

uint64_t sub_23CF80954()
{
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_23CF809AC()
{
  return sub_23CF7CD50(*(void (**)(uint64_t (*)(), void *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_23CF809C0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_23CF80A08()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1(*(void *)(v0 + 32));
  }
  return result;
}

void sub_23CF80A3C()
{
  sub_23CF7CE14(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), 0);
}

void sub_23CF80A60()
{
  sub_23CF7CE14(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), 4);
}

uint64_t sub_23CF80A80()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_23CF80AD0()
{
  uint64_t v2 = (void *)v0[3];
  uint64_t v1 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  unint64_t v5 = sub_23CF79468(v1);
  sub_23CF800B8(v2, v5, v4, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF80B2C()
{
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_23CF80B7C()
{
  sub_23CF7CF34(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_23CF80B8C(uint64_t a1, uint64_t a2)
{
  sub_23CF7D270(a1, a2, *(void (**)(void *))(v2 + 16));
}

_OWORD *sub_23CF80BA8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_23CF80BB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_23CF80C00(uint64_t a1)
{
  sub_23CF7ED58(a1, *(void **)(v1 + 16));
}

uint64_t sub_23CF80C08()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_23CF80CB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void **)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_23CF7EF0C(a1, a2, a3, v3 + v8, v9);
}

uint64_t sub_23CF80D68()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_23CF80E38()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8) - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_23CF7F4AC(v2, v3);
}

uint64_t sub_23CF80EA4(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8);

  return sub_23CF7F448(a1);
}

uint64_t objectdestroy_114Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

id sub_23CF80FB0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBA8);

  return sub_23CF7F654();
}

uint64_t sub_23CF81014()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23CF81024()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_23CF8105C(void *a1)
{
  return sub_23CF7D54C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_23CF81064()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_23CF810B4(uint64_t a1, uint64_t a2)
{
  sub_23CF7D5FC(a1, a2, *(void (**)(uint64_t, void *))(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void *)(v2 + 56));
}

void sub_23CF810CC(uint64_t a1, void *a2)
{
  sub_23CF7A0AC(a1, a2, *(void (**)(uint64_t, id))(v2 + 16));
}

uint64_t sub_23CF810D8(uint64_t result)
{
  uint64_t v2 = *(uint64_t (**)(void, uint64_t))(v1 + 16);
  if (v2) {
    return v2(0, result);
  }
  return result;
}

uint64_t sub_23CF81110()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_23CF81158()
{
  sub_23CF7D340(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_23CF81168(int a1, void *a2)
{
  sub_23CF7D430(a1, a2, *(void (**)(id))(v2 + 16));
}

uint64_t sub_23CF81170()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_23CF811B8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_23CF7DCA8(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_23CF811C4()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_23CF81214()
{
  sub_23CF7E28C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t objectdestroy_15Tm_0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_23CF81264(void *a1)
{
  sub_23CF7E208(a1, *(void (**)(uint64_t, void *))(v1 + 16));
}

uint64_t sub_23CF8126C()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_23CF812B4()
{
  sub_23CF7E38C(*(void **)(v0 + 16), *(void (**)(uint64_t, id))(v0 + 24));
}

uint64_t sub_23CF812C0()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_23CF81300(uint64_t result)
{
  uint64_t v2 = *(uint64_t (**)(unint64_t, uint64_t))(v1 + 24);
  if (v2) {
    return v2(*(void *)(v1 + 16) & 0xFFFFFFFFFFFFFFFBLL, result);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Authentication.AuthenticationError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Authentication.AuthenticationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CF8149CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Authentication.AuthenticationError()
{
  return &type metadata for Authentication.AuthenticationError;
}

unint64_t sub_23CF814D8()
{
  unint64_t result = qword_268BCEBC8;
  if (!qword_268BCEBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEBC8);
  }
  return result;
}

uint64_t FBKFeedbackDraftViewController.ResponseType.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x6E776F6E6B6E55;
    case 2:
      return 0x4620796576727553;
    case 1:
      return 0x6B63616264656546;
  }
  uint64_t result = sub_23D006238();
  __break(1u);
  return result;
}

unint64_t FBKFeedbackDraftViewController.ResponseType.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

unint64_t sub_23CF816B0()
{
  unint64_t result = qword_268BCEBD0;
  if (!qword_268BCEBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCEBD0);
  }
  return result;
}

uint64_t sub_23CF81704()
{
  return sub_23D0062F8();
}

uint64_t sub_23CF8174C()
{
  return sub_23D0062D8();
}

uint64_t sub_23CF81778()
{
  return sub_23D0062F8();
}

uint64_t *sub_23CF817BC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_23CF817D8()
{
  uint64_t v1 = *v0;
  if (!*v0) {
    return 0x6E776F6E6B6E55;
  }
  if (v1 == 2) {
    return 0x4620796576727553;
  }
  if (v1 == 1) {
    return 0x6B63616264656546;
  }
  uint64_t result = sub_23D006238();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for FBKFeedbackDraftViewController.ResponseType()
{
  return &type metadata for FBKFeedbackDraftViewController.ResponseType;
}

uint64_t dispatch thunk of FBKFeedbackDraftPresentationDelegate.controllerDidRequestDismissal(feedbackDraftViewController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_23CF8189C(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) < 3) {
    return a1 + 1;
  }
  sub_23D005FC8();
  swift_bridgeObjectRelease();
  type metadata accessor for FBKBugFormRole(0);
  sub_23D005998();
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_23D0060A8();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for CatchUpMessagePreviewController()
{
  return &type metadata for CatchUpMessagePreviewController;
}

uint64_t sub_23CF81974()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF81990@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v55 = a1;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCD3B0);
  MEMORY[0x270FA5388](v54);
  unsigned int v4 = &v38[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v53 = sub_23D0048C8();
  MEMORY[0x270FA5388](v53);
  unsigned int v6 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_23D004288();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v38[-v12];
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCECD8);
  MEMORY[0x270FA5388](v52);
  os_log_type_t v15 = &v38[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v51 = sub_23D004B08();
  sub_23CF81F58((uint64_t)&v60);
  uint64_t v42 = *((void *)&v60 + 1);
  uint64_t v43 = v60;
  int v41 = v61;
  uint64_t v49 = *((void *)&v61 + 1);
  int v48 = v62;
  uint64_t v47 = *((void *)&v62 + 1);
  uint64_t v45 = *((void *)&v63 + 1);
  uint64_t v46 = v63;
  uint64_t v44 = v64;
  int v40 = BYTE8(v64);
  uint64_t v50 = v65;
  int v39 = BYTE8(v65);
  uint64_t v16 = *(int *)(type metadata accessor for CatchUpDonationDecoder.Result.Message(0) + 32);
  if (*(unsigned char *)(v2 + v16) == 1)
  {
    uint64_t v17 = sub_23D005508();
  }
  else
  {
    if (qword_268BCCD00 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v7, (uint64_t)qword_268BDAE30);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v13, v18, v7);
    uint64_t v17 = sub_23D005558();
  }
  uint64_t v19 = v17;
  char v20 = sub_23D005078();
  if (*(unsigned char *)(v2 + v16) == 1)
  {
    if (qword_268BCCCD8 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_268BDADB8;
  }
  else
  {
    if (qword_268BCCCE0 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_268BDADD0;
  }
  uint64_t v22 = __swift_project_value_buffer(v7, (uint64_t)v21);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v11, v22, v7);
  char v59 = 1;
  char v58 = v41;
  char v57 = v40;
  char v56 = v39;
  uint64_t v23 = sub_23D005558();
  long long v60 = (unint64_t)v51;
  LOBYTE(v61) = v59;
  *((void *)&v61 + 1) = v43;
  *(void *)&long long v62 = v42;
  BYTE8(v62) = v58;
  *(void *)&long long v63 = v49;
  BYTE8(v63) = v48;
  *(void *)&long long v64 = v47;
  *((void *)&v64 + 1) = v46;
  *(void *)&long long v65 = v45;
  *((void *)&v65 + 1) = v44;
  LOBYTE(v66) = v57;
  *((void *)&v66 + 1) = v50;
  LOBYTE(v67) = v56;
  *((void *)&v67 + 1) = v19;
  LOBYTE(v68) = v20;
  *((void *)&v68 + 1) = v23;
  uint64_t v24 = (char *)v6 + *(int *)(v53 + 20);
  uint64_t v25 = *MEMORY[0x263F19860];
  uint64_t v26 = sub_23D004C28();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
  __asm { FMOV            V0.2D, #16.0 }
  *unsigned int v6 = _Q0;
  uint64_t v32 = (uint64_t (*)(void))MEMORY[0x263F19048];
  sub_23CF84F98((uint64_t)v6, (uint64_t)v4, MEMORY[0x263F19048]);
  *(_WORD *)&v4[*(int *)(v54 + 36)] = 256;
  sub_23CEE82CC((uint64_t)v4, (uint64_t)v15 + *(int *)(v52 + 36), &qword_268BCD3B0);
  long long v33 = v67;
  void v15[6] = v66;
  v15[7] = v33;
  v15[8] = v68;
  long long v34 = v63;
  void v15[2] = v62;
  v15[3] = v34;
  long long v35 = v65;
  v15[4] = v64;
  v15[5] = v35;
  long long v36 = v61;
  *os_log_type_t v15 = v60;
  v15[1] = v36;
  sub_23CF85CD0((uint64_t)&v60);
  sub_23CEE8BB4((uint64_t)v4, &qword_268BCD3B0);
  sub_23CF85000((uint64_t)v6, v32);
  sub_23CF85D30((uint64_t)&v60);
  return sub_23CEE83D8((uint64_t)v15, v55, &qword_268BCECD8);
}

uint64_t sub_23CF81F58@<X0>(uint64_t a1@<X8>)
{
  sub_23CEE8D00();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_23D005228();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_23D005108();
  uint64_t v7 = sub_23D0051F8();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_23CEE7DE0(v2, v4, v6);
  swift_bridgeObjectRelease();
  LOBYTE(v2) = sub_23D005078();
  sub_23D004578();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  *(unsigned char *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = v14;
  *(void *)(a1 + 48) = v15;
  *(void *)(a1 + 56) = v16;
  *(void *)(a1 + 64) = v17;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 88) = 1;
  sub_23CEE8444(v7, v9, v11 & 1);
  swift_bridgeObjectRetain();
  sub_23CEE7DE0(v7, v9, v11 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF82098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBE8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v22 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBF0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v22 - v16;
  *(void *)uint64_t v17 = sub_23D004C68();
  *((void *)v17 + 1) = 0x4030000000000000;
  v17[16] = 0;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBF8);
  sub_23CF82294(a1, a2, (uint64_t *)&v17[*(int *)(v18 + 44)]);
  *(void *)char v11 = sub_23D004C68();
  *((void *)v11 + 1) = 0x4030000000000000;
  unsigned char v11[16] = 0;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC00);
  sub_23CF83228(a2, (uint64_t *)&v11[*(int *)(v19 + 44)]);
  sub_23CEE82CC((uint64_t)v17, (uint64_t)v15, &qword_268BCEBF0);
  sub_23CEE82CC((uint64_t)v11, (uint64_t)v9, &qword_268BCEBE8);
  sub_23CEE82CC((uint64_t)v15, a3, &qword_268BCEBF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC08);
  sub_23CEE82CC((uint64_t)v9, a3 + *(int *)(v20 + 48), &qword_268BCEBE8);
  sub_23CEE8BB4((uint64_t)v11, &qword_268BCEBE8);
  sub_23CEE8BB4((uint64_t)v17, &qword_268BCEBF0);
  sub_23CEE8BB4((uint64_t)v9, &qword_268BCEBE8);
  return sub_23CEE8BB4((uint64_t)v15, &qword_268BCEBF0);
}

uint64_t sub_23CF82294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v78 = a1;
  long long v91 = a3;
  uint64_t v87 = sub_23D004288();
  uint64_t v85 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v83 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_23D0048C8() - 8;
  MEMORY[0x270FA5388](v79);
  uint64_t v76 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE338);
  MEMORY[0x270FA5388](v84);
  uint64_t v90 = (uint64_t)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC68);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC70) - 8;
  MEMORY[0x270FA5388](v77);
  uint64_t v92 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC78);
  uint64_t v10 = MEMORY[0x270FA5388](v86);
  long long v89 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v88 = (uint64_t)&v75 - v12;
  sub_23D004BC8();
  uint64_t v13 = sub_23D005208();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_23D005178();
  uint64_t v18 = sub_23D0051F8();
  uint64_t v20 = v19;
  char v22 = v21;
  swift_release();
  sub_23CEE7DE0(v13, v15, v17);
  uint64_t v23 = v76;
  swift_bridgeObjectRelease();
  *(void *)&long long v93 = sub_23D005518();
  uint64_t v24 = sub_23D0051D8();
  uint64_t v81 = v25;
  char v27 = v26;
  uint64_t v82 = v28;
  sub_23CEE7DE0(v18, v20, v22 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v8 = sub_23D004C68();
  *((void *)v8 + 1) = 0x4010000000000000;
  unsigned char v8[16] = 0;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC80);
  sub_23CF829F0(v78, v80, (uint64_t)&v8[*(int *)(v29 + 44)]);
  LOBYTE(v20) = sub_23D005078();
  sub_23D004578();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v38 = v92;
  sub_23CEE82CC((uint64_t)v8, v92, &qword_268BCEC68);
  uint64_t v39 = v38 + *(int *)(v77 + 44);
  *(unsigned char *)uint64_t v39 = v20;
  *(void *)(v39 + 8) = v31;
  *(void *)(v39 + 16) = v33;
  *(void *)(v39 + 24) = v35;
  *(void *)(v39 + 32) = v37;
  *(unsigned char *)(v39 + 40) = 0;
  sub_23CEE8BB4((uint64_t)v8, &qword_268BCEC68);
  int v40 = (char *)v23 + *(int *)(v79 + 28);
  uint64_t v41 = *MEMORY[0x263F19860];
  uint64_t v42 = sub_23D004C28();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v40, v41, v42);
  __asm { FMOV            V0.2D, #8.0 }
  *uint64_t v23 = _Q0;
  if (qword_268BCCCF8 != -1) {
    swift_once();
  }
  char v48 = v27 & 1;
  uint64_t v49 = v87;
  uint64_t v50 = __swift_project_value_buffer(v87, (uint64_t)qword_268BDAE18);
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v83, v50, v49);
  uint64_t v51 = sub_23D005558();
  sub_23D004628();
  uint64_t v52 = (uint64_t (*)(void))MEMORY[0x263F19048];
  uint64_t v53 = v90;
  sub_23CF84F98((uint64_t)v23, v90, MEMORY[0x263F19048]);
  double v54 = *(double *)&v93 * 0.5;
  uint64_t v55 = v53 + *(int *)(v84 + 68);
  sub_23CF84F98((uint64_t)v23, v55, v52);
  *(double *)(v55 + *(int *)(sub_23D0048B8() + 20)) = v54;
  uint64_t v56 = v55 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE348) + 36);
  long long v57 = v94;
  *(_OWORD *)uint64_t v56 = v93;
  *(_OWORD *)(v56 + 16) = v57;
  *(void *)(v56 + 32) = v95;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCE350);
  *(void *)(v55 + *(int *)(v58 + 52)) = v51;
  *(_WORD *)(v55 + *(int *)(v58 + 56)) = 256;
  uint64_t v59 = sub_23D005778();
  uint64_t v61 = v60;
  long long v62 = (uint64_t *)(v55 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE358) + 36));
  uint64_t *v62 = v59;
  v62[1] = v61;
  sub_23CF85000((uint64_t)v23, v52);
  uint64_t v63 = sub_23D005778();
  uint64_t v65 = v64;
  uint64_t v66 = (uint64_t)v89;
  uint64_t v67 = (uint64_t)&v89[*(int *)(v86 + 36)];
  sub_23CEE82CC(v53, v67, &qword_268BCE338);
  long long v68 = (uint64_t *)(v67 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCE340) + 36));
  *long long v68 = v63;
  v68[1] = v65;
  uint64_t v69 = v92;
  sub_23CEE82CC(v92, v66, &qword_268BCEC70);
  sub_23CEE8BB4(v53, &qword_268BCE338);
  sub_23CEE8BB4(v69, &qword_268BCEC70);
  uint64_t v70 = v88;
  sub_23CEE83D8(v66, v88, &qword_268BCEC78);
  sub_23CEE82CC(v70, v66, &qword_268BCEC78);
  char v71 = v91;
  uint64_t v72 = v81;
  *long long v91 = v24;
  v71[1] = v72;
  *((unsigned char *)v71 + 16) = v48;
  v71[3] = v82;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC88);
  sub_23CEE82CC(v66, (uint64_t)v71 + *(int *)(v73 + 48), &qword_268BCEC78);
  sub_23CEE8444(v24, v72, v48);
  swift_bridgeObjectRetain();
  sub_23CEE8BB4(v70, &qword_268BCEC78);
  sub_23CEE8BB4(v66, &qword_268BCEC78);
  sub_23CEE7DE0(v24, v72, v48);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF829F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v5 = sub_23D004DF8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC90);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC98);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  char v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCECA0);
  uint64_t v18 = v17 - 8;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v38 = (uint64_t)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v50 = (uint64_t)&v37 - v21;
  uint64_t v49 = sub_23D004B08();
  sub_23CF82E70((uint64_t)v52);
  uint64_t v41 = v52[0];
  uint64_t v39 = v52[1];
  int v40 = v53;
  uint64_t v42 = v54;
  uint64_t v48 = v55;
  int v47 = v56;
  uint64_t v44 = v58;
  uint64_t v45 = v57;
  int v43 = v59;
  uint64_t v46 = v60;
  sub_23D005518();
  uint64_t v51 = a1;
  sub_23D004DD8();
  uint64_t v22 = sub_23D005518();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
  *(void *)&v12[*(int *)(v10 + 44)] = v22;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v23 = sub_23D0050F8();
  uint64_t KeyPath = swift_getKeyPath();
  sub_23CEE82CC((uint64_t)v12, (uint64_t)v16, &qword_268BCEC90);
  uint64_t v25 = (uint64_t *)&v16[*(int *)(v14 + 44)];
  *uint64_t v25 = KeyPath;
  v25[1] = v23;
  sub_23CEE8BB4((uint64_t)v12, &qword_268BCEC90);
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = v38;
  sub_23CEE82CC((uint64_t)v16, v38, &qword_268BCEC98);
  uint64_t v28 = v27 + *(int *)(v18 + 44);
  *(void *)uint64_t v28 = v26;
  *(void *)(v28 + 8) = 4;
  *(unsigned char *)(v28 + 16) = 0;
  sub_23CEE8BB4((uint64_t)v16, &qword_268BCEC98);
  uint64_t v29 = v50;
  sub_23CEE83D8(v27, v50, &qword_268BCECA0);
  sub_23CEE82CC(v29, v27, &qword_268BCECA0);
  *(void *)a3 = v49;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  uint64_t v30 = v41;
  uint64_t v31 = v39;
  *(void *)(a3 + 24) = v41;
  *(void *)(a3 + 32) = v31;
  LOBYTE(v18) = v40;
  *(unsigned char *)(a3 + 40) = v40;
  uint64_t v32 = v48;
  *(void *)(a3 + 48) = v42;
  *(void *)(a3 + 56) = v32;
  *(unsigned char *)(a3 + 64) = v47;
  uint64_t v34 = v44;
  uint64_t v33 = v45;
  *(void *)(a3 + 72) = v45;
  *(void *)(a3 + 80) = v34;
  LOBYTE(v12) = v43;
  *(unsigned char *)(a3 + 88) = v43;
  *(void *)(a3 + 96) = v46;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCECA8);
  sub_23CEE82CC(v27, a3 + *(int *)(v35 + 48), &qword_268BCECA0);
  sub_23CEE8444(v30, v31, v18);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v33, v34, (char)v12);
  swift_bridgeObjectRetain();
  sub_23CEE8BB4(v50, &qword_268BCECA0);
  sub_23CEE8BB4(v27, &qword_268BCECA0);
  sub_23CEE7DE0(v30, v31, v18);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v33, v34, (char)v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF82E70@<X0>(uint64_t a1@<X8>)
{
  sub_23CEE8D00();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_23D005228();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_23D005188();
  uint64_t v7 = sub_23D0051F8();
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  char v10 = v9;
  uint64_t v33 = v11;
  swift_release();
  char v30 = v10 & 1;
  sub_23CEE7DE0(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_23CF85078();
  uint64_t v12 = sub_23D005228();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_23D005518();
  uint64_t v17 = sub_23D0051D8();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_23CEE7DE0(v12, v14, v16);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23D0050F8();
  uint64_t v22 = sub_23D0051F8();
  uint64_t v24 = v23;
  char v26 = v25;
  uint64_t v28 = v27;
  swift_release();
  sub_23CEE7DE0(v17, v19, v21);
  swift_bridgeObjectRelease();
  *(void *)a1 = v32;
  *(void *)(a1 + 8) = v31;
  *(unsigned char *)(a1 + 16) = v30;
  *(void *)(a1 + 24) = v33;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v22;
  *(void *)(a1 + 56) = v24;
  *(unsigned char *)(a1 + 64) = v26 & 1;
  *(void *)(a1 + 72) = v28;
  sub_23CEE8444(v32, v31, v30);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v22, v24, v26 & 1);
  swift_bridgeObjectRetain();
  sub_23CEE7DE0(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v32, v31, v30);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF830B8()
{
  uint64_t v0 = sub_23D004BB8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_23D004DE8();
  uint64_t v3 = v2;
  char v5 = v4 & 1;
  sub_23D004BA8();
  sub_23D004B98();
  sub_23D004B78();
  sub_23D004B98();
  type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  sub_23D004B68();
  sub_23D004B98();
  sub_23D004BD8();
  uint64_t v6 = sub_23D005208();
  sub_23CEE7DE0(v1, v3, v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_23CF83228@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC10);
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v36 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int v40 = (char *)&v35 - v6;
  uint64_t v7 = sub_23D004BB8();
  MEMORY[0x270FA5388](v7 - 8);
  sub_23D004BA8();
  sub_23D004B98();
  sub_23D004B88();
  swift_bridgeObjectRelease();
  sub_23D004B98();
  sub_23D004BD8();
  uint64_t v8 = sub_23D005208();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_23D005178();
  uint64_t v13 = sub_23D0051F8();
  uint64_t v15 = v14;
  char v17 = v16;
  swift_release();
  sub_23CEE7DE0(v8, v10, v12);
  swift_bridgeObjectRelease();
  uint64_t v42 = sub_23D005518();
  uint64_t v18 = sub_23D0051D8();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_23CEE7DE0(v13, v15, v17 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v41 = a1;
  sub_23D005058();
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC18);
  sub_23CEE8D90(&qword_268BCEC20, &qword_268BCEC18);
  char v25 = v40;
  sub_23D0045C8();
  uint64_t v27 = v36;
  uint64_t v26 = v37;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v29 = v38;
  v28(v36, v25, v38);
  char v30 = v39;
  *uint64_t v39 = v18;
  v30[1] = v20;
  *((unsigned char *)v30 + 16) = v24;
  v30[3] = v22;
  uint64_t v31 = v30;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC28);
  v28((char *)v31 + *(int *)(v32 + 48), v27, v29);
  sub_23CEE8444(v18, v20, v24);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v26 + 8);
  swift_bridgeObjectRetain();
  v33(v40, v29);
  v33(v27, v29);
  sub_23CEE7DE0(v18, v20, v24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF835F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC30);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v14 - v9;
  *(void *)a2 = sub_23D004C68();
  *(void *)(a2 + 8) = 0x4030000000000000;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v15 = a1;
  swift_bridgeObjectRetain_n();
  sub_23CF839D4(&v15);
  swift_bridgeObjectRelease();
  uint64_t v11 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC38) + 44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC40);
  sub_23D003DB8();
  type metadata accessor for CatchUpMessagePreviewer();
  sub_23CEE8D90(&qword_268BCEC48, &qword_268BCEC40);
  sub_23CF83AC8(&qword_268BCEC50, (void (*)(uint64_t))type metadata accessor for CatchUpMessagePreviewer);
  sub_23CF83AC8(&qword_268BCEC58, (void (*)(uint64_t))type metadata accessor for CatchUpDonationDecoder.Result.Message);
  sub_23D0056F8();
  char v12 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v12(v10, v8, v4);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v12)(v11, v10, v4);
}

uint64_t sub_23CF83874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23CF84F98(a1, a2, type metadata accessor for CatchUpDonationDecoder.Result.Message);
}

uint64_t sub_23CF838A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  if (*(void *)(v3 + 16))
  {
    uint64_t v4 = *(void *)(type metadata accessor for CatchUpDonationDecoder.Result.Message(0) - 8);
    uint64_t v5 = v3 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    *(void *)a1 = sub_23D004C58();
    *(void *)(a1 + 8) = 0x4040000000000000;
    *(unsigned char *)(a1 + 16) = 0;
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBD8);
    sub_23CF82098(v5, v3, a1 + *(int *)(v6 + 44));
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEBE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t sub_23CF839CC@<X0>(uint64_t a1@<X8>)
{
  return sub_23CF835F8(*(void **)(v1 + 16), a1);
}

uint64_t sub_23CF839D4(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for CatchUpDonationDecoder.Result.Message(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_23CF84F20(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_23CF83B10(v6);
  *a1 = v3;
  return result;
}

uint64_t type metadata accessor for CatchUpMessagePreviewer()
{
  uint64_t result = qword_268BCECB0;
  if (!qword_268BCECB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_23CF83AC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23CF83B10(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v135 = type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  uint64_t v128 = *(void *)(v135 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v135);
  uint64_t v125 = (uint64_t)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v136 = (uint64_t)&v119 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v132 = (uint64_t)&v119 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v131 = (uint64_t)&v119 - v10;
  uint64_t v11 = a1[1];
  uint64_t result = sub_23D0061E8();
  if (result >= v11)
  {
    if (v11 < 0) {
      goto LABEL_142;
    }
    if (v11) {
      return sub_23CF84554(0, v11, 1, a1);
    }
    return result;
  }
  if (v11 >= 0) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  if (v11 < -1) {
    goto LABEL_150;
  }
  uint64_t v121 = result;
  if (v11 < 2)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    unint64_t v127 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
    if (v11 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v19 = (char *)MEMORY[0x263F8EE78];
LABEL_107:
      uint64_t v120 = v17;
      if (v20 >= 2)
      {
        uint64_t v111 = *a1;
        do
        {
          unint64_t v112 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_137;
          }
          if (!v111) {
            goto LABEL_149;
          }
          long long v113 = v19;
          uint64_t v114 = v19 + 32;
          uint64_t v115 = *(void *)&v19[16 * v112 + 32];
          uint64_t v116 = *(void *)&v19[16 * v20 + 24];
          sub_23CF847DC(v111 + *(void *)(v128 + 72) * v115, v111 + *(void *)(v128 + 72) * *(void *)&v114[16 * v20 - 16], v111 + *(void *)(v128 + 72) * v116, v127);
          if (v2) {
            break;
          }
          if (v116 < v115) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v113 = sub_23CF84F0C((uint64_t)v113);
          }
          if (v112 >= *((void *)v113 + 2)) {
            goto LABEL_139;
          }
          uint64_t v117 = &v113[16 * v112 + 32];
          *(void *)uint64_t v117 = v115;
          *((void *)v117 + 1) = v116;
          unint64_t v118 = *((void *)v113 + 2);
          if (v20 > v118) {
            goto LABEL_140;
          }
          uint64_t v19 = v113;
          memmove(&v113[16 * v20 + 16], &v113[16 * v20 + 32], 16 * (v118 - v20));
          *((void *)v113 + 2) = v118 - 1;
          unint64_t v20 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(void *)(v120 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v120 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = sub_23D005B28();
    *(void *)(v15 + 16) = v14;
    uint64_t v16 = *(unsigned __int8 *)(v128 + 80);
    uint64_t v120 = v15;
    unint64_t v127 = v15 + ((v16 + 32) & ~v16);
  }
  uint64_t v18 = 0;
  uint64_t v19 = (char *)MEMORY[0x263F8EE78];
  uint64_t v134 = a1;
  while (1)
  {
    uint64_t v21 = v18;
    uint64_t v22 = v18 + 1;
    uint64_t v126 = v18;
    if (v18 + 1 >= v11)
    {
      uint64_t v35 = v18 + 1;
      goto LABEL_59;
    }
    uint64_t v123 = v2;
    uint64_t v23 = *a1;
    uint64_t v24 = *(void *)(v128 + 72);
    uint64_t v25 = v131;
    sub_23CF84F98(*a1 + v24 * v22, v131, type metadata accessor for CatchUpDonationDecoder.Result.Message);
    uint64_t v26 = v132;
    sub_23CF84F98(v23 + v24 * v21, v132, type metadata accessor for CatchUpDonationDecoder.Result.Message);
    LODWORD(v133) = sub_23D003D48();
    sub_23CF85000(v26, type metadata accessor for CatchUpDonationDecoder.Result.Message);
    sub_23CF85000(v25, type metadata accessor for CatchUpDonationDecoder.Result.Message);
    uint64_t v130 = v23;
    uint64_t v137 = v24;
    if (v21 + 2 >= v11)
    {
      uint64_t v29 = v21 + 2;
    }
    else
    {
      id v122 = v19;
      uint64_t v27 = v24 * v22;
      uint64_t v28 = v23;
      uint64_t v29 = v21 + 2;
      uint64_t v30 = v24 * (v21 + 2);
      while (1)
      {
        uint64_t v31 = v11;
        uint64_t v32 = v131;
        sub_23CF84F98(v28 + v30, v131, type metadata accessor for CatchUpDonationDecoder.Result.Message);
        uint64_t v33 = v132;
        sub_23CF84F98(v28 + v27, v132, type metadata accessor for CatchUpDonationDecoder.Result.Message);
        int v34 = sub_23D003D48();
        sub_23CF85000(v33, type metadata accessor for CatchUpDonationDecoder.Result.Message);
        sub_23CF85000(v32, type metadata accessor for CatchUpDonationDecoder.Result.Message);
        if ((v133 ^ v34)) {
          break;
        }
        v28 += v137;
        ++v29;
        uint64_t v11 = v31;
        if (v31 == v29)
        {
          uint64_t v29 = v31;
          uint64_t v19 = v122;
          uint64_t v21 = v126;
          goto LABEL_25;
        }
      }
      uint64_t v19 = v122;
      uint64_t v21 = v126;
      uint64_t v11 = v31;
    }
LABEL_25:
    a1 = v134;
    if ((v133 & 1) == 0)
    {
      uint64_t v35 = v29;
      goto LABEL_39;
    }
    if (v29 < v21) {
      goto LABEL_143;
    }
    uint64_t v35 = v29;
    if (v21 < v29) {
      break;
    }
LABEL_39:
    uint64_t v2 = v123;
    if (v35 < v11) {
      goto LABEL_42;
    }
LABEL_59:
    if (v35 < v21) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v133 = v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_23CF84CD0(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v60 = *((void *)v19 + 2);
    unint64_t v59 = *((void *)v19 + 3);
    unint64_t v20 = v60 + 1;
    if (v60 >= v59 >> 1) {
      uint64_t v19 = sub_23CF84CD0((char *)(v59 > 1), v60 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v20;
    uint64_t v61 = v19 + 32;
    long long v62 = &v19[16 * v60 + 32];
    uint64_t v63 = v133;
    *(void *)long long v62 = v21;
    *((void *)v62 + 1) = v63;
    if (v60)
    {
      while (1)
      {
        unint64_t v64 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v69 = &v61[16 * v20];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_125;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_126;
          }
          unint64_t v76 = v20 - 2;
          uint64_t v77 = &v61[16 * v20 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_128;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_131;
          }
          if (v81 >= v72)
          {
            uint64_t v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_135;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_96;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v93 = *((void *)v19 + 4);
            uint64_t v94 = *((void *)v19 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_90;
          }
          uint64_t v66 = *((void *)v19 + 4);
          uint64_t v65 = *((void *)v19 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_127;
        }
        unint64_t v76 = v20 - 2;
        uint64_t v82 = &v61[16 * v20 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_130;
        }
        uint64_t v88 = &v61[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_133;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_134;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_96:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_98;
        }
LABEL_90:
        if (v87) {
          goto LABEL_129;
        }
        uint64_t v95 = &v61[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_132;
        }
        if (v98 < v86) {
          goto LABEL_15;
        }
LABEL_98:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v20)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v104 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        id v105 = v19;
        uint64_t v106 = &v61[16 * v103];
        uint64_t v107 = *(void *)v106;
        int64_t v108 = &v61[16 * v64];
        uint64_t v109 = *((void *)v108 + 1);
        sub_23CF847DC(v104 + *(void *)(v128 + 72) * *(void *)v106, v104 + *(void *)(v128 + 72) * *(void *)v108, v104 + *(void *)(v128 + 72) * v109, v127);
        if (v2) {
          goto LABEL_118;
        }
        if (v109 < v107) {
          goto LABEL_122;
        }
        if (v64 > *((void *)v105 + 2)) {
          goto LABEL_123;
        }
        *(void *)uint64_t v106 = v107;
        *(void *)&v61[16 * v103 + 8] = v109;
        unint64_t v110 = *((void *)v105 + 2);
        if (v64 >= v110) {
          goto LABEL_124;
        }
        uint64_t v19 = v105;
        unint64_t v20 = v110 - 1;
        memmove(&v61[16 * v64], v108 + 16, 16 * (v110 - 1 - v64));
        *((void *)v105 + 2) = v110 - 1;
        a1 = v134;
        if (v110 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_15:
    uint64_t v11 = a1[1];
    uint64_t v18 = v133;
    if (v133 >= v11)
    {
      uint64_t v17 = v120;
      goto LABEL_107;
    }
  }
  uint64_t v133 = v11;
  id v122 = v19;
  uint64_t v36 = 0;
  uint64_t v37 = v137;
  uint64_t v38 = v137 * (v29 - 1);
  uint64_t v39 = v29 * v137;
  uint64_t v40 = v21;
  uint64_t v41 = v21 * v137;
  do
  {
    if (v40 != v35 + v36 - 1)
    {
      uint64_t v42 = v130;
      if (!v130) {
        goto LABEL_148;
      }
      unint64_t v43 = v130 + v41;
      sub_23CF84F34(v130 + v41, v125);
      if (v41 < v38 || v43 >= v42 + v39)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v41 != v38)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      sub_23CF84F34(v125, v42 + v38);
      a1 = v134;
      uint64_t v35 = v29;
      uint64_t v37 = v137;
    }
    ++v40;
    --v36;
    v38 -= v37;
    v39 -= v37;
    v41 += v37;
  }
  while (v40 < v35 + v36);
  uint64_t v19 = v122;
  uint64_t v2 = v123;
  uint64_t v21 = v126;
  uint64_t v11 = v133;
  if (v35 >= v133) {
    goto LABEL_59;
  }
LABEL_42:
  if (__OFSUB__(v35, v21)) {
    goto LABEL_141;
  }
  if (v35 - v21 >= v121) {
    goto LABEL_59;
  }
  if (__OFADD__(v21, v121)) {
    goto LABEL_144;
  }
  if (v21 + v121 >= v11) {
    uint64_t v44 = v11;
  }
  else {
    uint64_t v44 = v21 + v121;
  }
  if (v44 >= v21)
  {
    if (v35 != v44)
    {
      id v122 = v19;
      uint64_t v123 = v2;
      uint64_t v45 = *(void *)(v128 + 72);
      uint64_t v46 = v45 * (v35 - 1);
      uint64_t v129 = v45;
      uint64_t v47 = v35 * v45;
      uint64_t v124 = v44;
      do
      {
        uint64_t v49 = 0;
        uint64_t v133 = v35;
        uint64_t v130 = v47;
        while (1)
        {
          uint64_t v137 = v21;
          uint64_t v50 = *a1;
          uint64_t v51 = v131;
          sub_23CF84F98(v47 + v49 + *a1, v131, type metadata accessor for CatchUpDonationDecoder.Result.Message);
          uint64_t v52 = v46;
          uint64_t v53 = v46 + v49 + v50;
          uint64_t v54 = a1;
          uint64_t v55 = v132;
          sub_23CF84F98(v53, v132, type metadata accessor for CatchUpDonationDecoder.Result.Message);
          LOBYTE(v50) = sub_23D003D48();
          sub_23CF85000(v55, type metadata accessor for CatchUpDonationDecoder.Result.Message);
          sub_23CF85000(v51, type metadata accessor for CatchUpDonationDecoder.Result.Message);
          if ((v50 & 1) == 0) {
            break;
          }
          uint64_t v56 = *v54;
          if (!*v54) {
            goto LABEL_146;
          }
          uint64_t v47 = v130;
          uint64_t v46 = v52;
          uint64_t v57 = v56 + v52 + v49;
          sub_23CF84F34(v56 + v130 + v49, v136);
          swift_arrayInitWithTakeFrontToBack();
          sub_23CF84F34(v136, v57);
          v49 -= v129;
          uint64_t v21 = v137 + 1;
          uint64_t v48 = v133;
          a1 = v134;
          if (v133 == v137 + 1) {
            goto LABEL_52;
          }
        }
        uint64_t v48 = v133;
        a1 = v54;
        uint64_t v46 = v52;
        uint64_t v47 = v130;
LABEL_52:
        uint64_t v35 = v48 + 1;
        v46 += v129;
        v47 += v129;
        uint64_t v21 = v126;
      }
      while (v35 != v124);
      uint64_t v35 = v124;
      uint64_t v19 = v122;
      uint64_t v2 = v123;
    }
    goto LABEL_59;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_23D006098();
  __break(1u);
  return result;
}

uint64_t sub_23CF84554(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v25 = a1;
  uint64_t v28 = type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  uint64_t v7 = MEMORY[0x270FA5388](v28);
  uint64_t v29 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v27 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v31 = v16 * (v27 - 1);
    uint64_t v26 = v16;
    uint64_t v30 = v16 * v27;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v25;
    while (1)
    {
      uint64_t v19 = *a4;
      unint64_t v20 = a4;
      sub_23CF84F98(v30 + v17 + *a4, (uint64_t)v15, type metadata accessor for CatchUpDonationDecoder.Result.Message);
      sub_23CF84F98(v31 + v17 + v19, (uint64_t)v11, type metadata accessor for CatchUpDonationDecoder.Result.Message);
      LOBYTE(v19) = sub_23D003D48();
      sub_23CF85000((uint64_t)v11, type metadata accessor for CatchUpDonationDecoder.Result.Message);
      uint64_t result = sub_23CF85000((uint64_t)v15, type metadata accessor for CatchUpDonationDecoder.Result.Message);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v31 += v26;
        v30 += v26;
        if (++v27 == v24) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v21 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v22 = v21 + v31 + v17;
      sub_23CF84F34(v21 + v30 + v17, v29);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_23CF84F34(v29, v22);
      v17 -= v26;
      ++v18;
      a4 = v20;
      if (v27 == v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23CF847DC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v45 = type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  uint64_t v8 = MEMORY[0x270FA5388](v45);
  uint64_t v44 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v48 = a1;
  unint64_t v47 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v46 = a4 + v18;
      unint64_t v48 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v28 = -v13;
        unint64_t v42 = a4;
        unint64_t v43 = a1;
        do
        {
          unint64_t v29 = a3 + v28;
          sub_23CF84F98(v26 + v28, (uint64_t)v11, type metadata accessor for CatchUpDonationDecoder.Result.Message);
          unint64_t v30 = a2 + v28;
          unint64_t v31 = a3;
          uint64_t v32 = (uint64_t)v11;
          uint64_t v33 = v44;
          sub_23CF84F98(a2 + v28, v44, type metadata accessor for CatchUpDonationDecoder.Result.Message);
          char v34 = sub_23D003D48();
          uint64_t v35 = v33;
          uint64_t v11 = (char *)v32;
          sub_23CF85000(v35, type metadata accessor for CatchUpDonationDecoder.Result.Message);
          sub_23CF85000(v32, type metadata accessor for CatchUpDonationDecoder.Result.Message);
          if (v34)
          {
            if (v31 < a2 || v29 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              BOOL v36 = v31 == a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
              if (!v36) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v48 += v28;
          }
          else
          {
            unint64_t v39 = v46;
            v46 += v28;
            if (v31 < v39 || v29 >= v39)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v30 = a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              unint64_t v38 = v43;
              if (v31 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v30 = a2;
              unint64_t v37 = v42;
            }
          }
          unint64_t v26 = v46;
          if (v46 <= v37) {
            break;
          }
          a2 = v30;
          a3 = v29;
        }
        while (v30 > v38);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_23CF84F98(a2, (uint64_t)v11, type metadata accessor for CatchUpDonationDecoder.Result.Message);
        uint64_t v21 = v44;
        sub_23CF84F98(a4, v44, type metadata accessor for CatchUpDonationDecoder.Result.Message);
        char v22 = sub_23D003D48();
        sub_23CF85000(v21, type metadata accessor for CatchUpDonationDecoder.Result.Message);
        sub_23CF85000((uint64_t)v11, type metadata accessor for CatchUpDonationDecoder.Result.Message);
        unint64_t v23 = v48;
        if (v22)
        {
          unint64_t v24 = a2 + v13;
          if (v48 < a2 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v47 + v13;
          if (v48 < v47 || v48 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v47 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v48 = v23 + v13;
        a4 = v47;
        if (v47 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_59:
    sub_23CF84DCC(&v48, &v47, (uint64_t *)&v46);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_23D0060F8();
  __break(1u);
  return result;
}

char *sub_23CF84CD0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_268BCEC60);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23CF84DCC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_23D0060F8();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_23CF84F0C(uint64_t a1)
{
  return sub_23CF84CD0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23CF84F20(void *a1)
{
  return sub_23CFF03C0(0, a1[2], 0, a1);
}

uint64_t sub_23CF84F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23CF84F98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_23CF85000(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23CF85060()
{
  return sub_23CF830B8();
}

uint64_t sub_23CF85078()
{
  uint64_t v0 = sub_23D003D78();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23D003D68();
  type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  sub_23D003D28();
  if (v4 >= 86400.0)
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AF8]), sel_init);
    objc_msgSend(v5, sel_setUnitsStyle_, 2);
    objc_msgSend(v5, sel_setDateTimeStyle_, 1);
    uint64_t v8 = (void *)sub_23D003D38();
    unint64_t v6 = (void *)sub_23D003D38();
    id v7 = objc_msgSend(v5, sel_localizedStringForDate_relativeToDate_, v8, v6);
  }
  else
  {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    objc_msgSend(v5, sel_setDateStyle_, 0);
    objc_msgSend(v5, sel_setTimeStyle_, 1);
    unint64_t v6 = (void *)sub_23D003D38();
    id v7 = objc_msgSend(v5, sel_stringFromDate_, v6);
  }

  uint64_t v9 = sub_23D005948();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v9;
}

void *sub_23CF85290(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v6 = (int *)v4;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(v4 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_23D003D78();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = v6[7];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_23D003B88();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
    uint64_t v18 = v6[9];
    unint64_t v19 = (char *)a1 + v18;
    unint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_23D003DB8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return a1;
}

uint64_t sub_23CF8543C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  uint64_t v3 = a1 + v2[6];
  uint64_t v4 = sub_23D003D78();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = a1 + v2[7];
  uint64_t v6 = sub_23D003B88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + v2[9];
  uint64_t v8 = sub_23D003DB8();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

void *sub_23CF8554C(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = (int *)type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_23D003D78();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = v6[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_23D003B88();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  uint64_t v16 = v6[9];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_23D003DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

void *sub_23CF856A8(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  uint64_t v5 = v4[6];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_23D003D78();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  uint64_t v9 = v4[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_23D003B88();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *((unsigned char *)a1 + v4[8]) = *((unsigned char *)a2 + v4[8]);
  uint64_t v13 = v4[9];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_23D003DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

_OWORD *sub_23CF85810(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (int *)type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_23D003D78();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = v5[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_23D003B88();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *((unsigned char *)a1 + v5[8]) = *((unsigned char *)a2 + v5[8]);
  uint64_t v14 = v5[9];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_23D003DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

void *sub_23CF85940(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_23D003D78();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_23D003B88();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  uint64_t v15 = v6[9];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_23D003DB8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_23CF85A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_23CF85A9C);
}

uint64_t sub_23CF85A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_23CF85B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_23CF85B1C);
}

uint64_t sub_23CF85B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CatchUpDonationDecoder.Result.Message(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_23CF85B8C()
{
  uint64_t result = type metadata accessor for CatchUpDonationDecoder.Result.Message(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23CF85C1C()
{
  unint64_t result = qword_268BCECC0;
  if (!qword_268BCECC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCECC8);
    sub_23CEE8D90(&qword_268BCECD0, &qword_268BCEBE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCECC0);
  }
  return result;
}

uint64_t sub_23CF85CB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF85CD0(uint64_t a1)
{
  return a1;
}

uint64_t sub_23CF85D30(uint64_t a1)
{
  return a1;
}

unint64_t sub_23CF85D94()
{
  unint64_t result = qword_268BCECE0;
  if (!qword_268BCECE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCECD8);
    sub_23CF85E34();
    sub_23CEE8D90(&qword_268BCD3D8, &qword_268BCD3B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCECE0);
  }
  return result;
}

unint64_t sub_23CF85E34()
{
  unint64_t result = qword_268BCECE8;
  if (!qword_268BCECE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCECF0);
    sub_23CF85ED4();
    sub_23CEE8D90(&qword_268BCDA48, (uint64_t *)&unk_268BCDCA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCECE8);
  }
  return result;
}

unint64_t sub_23CF85ED4()
{
  unint64_t result = qword_268BCECF8;
  if (!qword_268BCECF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_268BCED00);
    sub_23CEE8D90(&qword_268BCED08, &qword_268BCED10);
    sub_23CEE8D90(&qword_268BCDC88, (uint64_t *)&unk_268BCDC90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCECF8);
  }
  return result;
}

uint64_t sub_23CF85F98()
{
  sub_23D0059D8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_23CF860B0()
{
  return sub_23D0062F8();
}

uint64_t sub_23CF861E4()
{
  uint64_t v0 = sub_23D004498();
  __swift_allocate_value_buffer(v0, qword_268BDAD08);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_268BDAD08);
  if (qword_268BCCCC0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_268BDADA0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_23CF862AC(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (qword_268BCCC58 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_23D004498();
  __swift_project_value_buffer(v6, (uint64_t)qword_268BDAD08);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_23D004478();
  os_log_type_t v8 = sub_23D005C98();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    swift_bridgeObjectRetain();
    sub_23CF231B0(a1, a2, &v11);
    sub_23D005E48();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23CEE3000, v7, v8, "Unexpected Error: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23ECF6610](v10, -1, -1);
    MEMORY[0x23ECF6610](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a3 = 0;
}

Feedback::FBKEvaluationError_optional __swiftcall FBKEvaluationError.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_23D006118();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t FBKEvaluationError.rawValue.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000043;
      break;
    case 4:
      unint64_t result = 0x6C75736572206F4ELL;
      break;
    case 5:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 7:
      unint64_t result = 0xD000000000000025;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23CF865A0(unsigned __int8 *a1, char *a2)
{
  return sub_23CF07550(*a1, *a2);
}

unint64_t sub_23CF865B0()
{
  unint64_t result = qword_268BCED18;
  if (!qword_268BCED18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_268BCED18);
  }
  return result;
}

uint64_t sub_23CF86604()
{
  return sub_23CF860B0();
}

uint64_t sub_23CF86610()
{
  return sub_23CF85F98();
}

uint64_t sub_23CF86618()
{
  return sub_23CF860B0();
}

Feedback::FBKEvaluationError_optional sub_23CF86620(Swift::String *a1)
{
  return FBKEvaluationError.init(rawValue:)(*a1);
}

unint64_t sub_23CF8662C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FBKEvaluationError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FBKEvaluationError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FBKEvaluationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23CF867B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FBKEvaluationError()
{
  return &type metadata for FBKEvaluationError;
}

ValueMetadata *type metadata accessor for DebugWindow()
{
  return &type metadata for DebugWindow;
}

uint64_t sub_23CF867F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23CF86814@<X0>(uint64_t **a1@<X0>, uint64_t a2@<X8>)
{
  int v2 = a1[1];
  uint64_t v36 = (*a1)[1];
  char v3 = *((unsigned char *)*a1 + 16);
  uint64_t v4 = (*a1)[3];
  uint64_t v28 = **a1;
  uint64_t v29 = *v2;
  uint64_t v5 = *v2;
  uint64_t v55 = v2[1];
  char v38 = *((unsigned char *)v2 + 16);
  uint64_t v58 = v2[3];
  unsigned int v6 = a1[2];
  BOOL v7 = a1[3];
  uint64_t v9 = v6[1];
  uint64_t v33 = *v6;
  uint64_t v8 = *v6;
  char v34 = *((unsigned char *)v6 + 16);
  uint64_t v10 = v6[3];
  uint64_t v39 = *v7;
  uint64_t v11 = *v7;
  uint64_t v40 = v7[1];
  char v37 = *((unsigned char *)v7 + 16);
  uint64_t v57 = v7[3];
  uint64_t v12 = a1[4];
  uint64_t v13 = a1[5];
  uint64_t v41 = *v12;
  uint64_t v14 = *v12;
  uint64_t v42 = v12[1];
  char v15 = *((unsigned char *)v12 + 16);
  uint64_t v16 = v12[3];
  uint64_t v43 = *v13;
  char v35 = *((unsigned char *)v13 + 16);
  uint64_t v44 = v13[1];
  uint64_t v45 = v13[3];
  uint64_t v17 = a1[6];
  uint64_t v18 = a1[7];
  uint64_t v46 = *v17;
  uint64_t v19 = *v17;
  uint64_t v47 = v17[1];
  char v31 = *((unsigned char *)v17 + 16);
  uint64_t v20 = v17[3];
  uint64_t v48 = *v18;
  char v32 = *((unsigned char *)v18 + 16);
  uint64_t v49 = v18[1];
  uint64_t v50 = v18[3];
  uint64_t v22 = a1[8];
  uint64_t v21 = a1[9];
  uint64_t v51 = *v22;
  uint64_t v23 = *v22;
  uint64_t v52 = v22[1];
  char v30 = *((unsigned char *)v22 + 16);
  uint64_t v24 = v22[3];
  uint64_t v53 = *v21;
  uint64_t v25 = *v21;
  uint64_t v54 = v21[1];
  char v56 = *((unsigned char *)v21 + 16);
  uint64_t v26 = v21[3];
  *(void *)a2 = v28;
  *(void *)(a2 + 8) = v36;
  *(unsigned char *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = v55;
  *(unsigned char *)(a2 + 48) = v38;
  *(void *)(a2 + 56) = v58;
  *(void *)(a2 + 64) = v8;
  *(void *)(a2 + 72) = v9;
  *(unsigned char *)(a2 + 80) = v34;
  *(void *)(a2 + 88) = v10;
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v40;
  *(unsigned char *)(a2 + 112) = v37;
  *(void *)(a2 + 120) = v57;
  *(void *)(a2 + 128) = v14;
  *(void *)(a2 + 136) = v42;
  LOBYTE(v11) = v15;
  *(unsigned char *)(a2 + 144) = v15;
  *(void *)(a2 + 152) = v16;
  *(void *)(a2 + 160) = v43;
  *(void *)(a2 + 168) = v44;
  *(unsigned char *)(a2 + 176) = v35;
  *(void *)(a2 + 184) = v45;
  *(void *)(a2 + 192) = v19;
  *(void *)(a2 + 200) = v47;
  *(unsigned char *)(a2 + 208) = v31;
  *(void *)(a2 + 216) = v20;
  *(void *)(a2 + 224) = v48;
  *(void *)(a2 + 232) = v49;
  *(unsigned char *)(a2 + 240) = v32;
  *(void *)(a2 + 248) = v50;
  *(void *)(a2 + 256) = v23;
  *(void *)(a2 + 264) = v52;
  *(unsigned char *)(a2 + 272) = v30;
  *(void *)(a2 + 280) = v24;
  *(void *)(a2 + 288) = v25;
  *(void *)(a2 + 296) = v54;
  *(unsigned char *)(a2 + 304) = v56;
  *(void *)(a2 + 312) = v26;
  sub_23CEE8444(v28, v36, v3);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v29, v55, v38);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v33, v9, v34);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v39, v40, v37);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v41, v42, v11);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v43, v44, v35);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v46, v47, v31);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v48, v49, v32);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v51, v52, v30);
  swift_bridgeObjectRetain();
  sub_23CEE8444(v53, v54, v56);

  return swift_bridgeObjectRetain();
}

uint64_t sub_23CF86B00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF88DB8((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
  sub_23D003DD8();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC8Feedback18DonationController__currentID;
  swift_beginAccess();
  return sub_23CF88D28(v4, a2);
}

uint64_t sub_23CF86BCC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCED20);
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23CF88D28(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_23CF88DB8((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
  sub_23D003DC8();
  swift_release();
  return sub_23CEE8BB4((uint64_t)v6, &qword_268BCED20);
}

uint64_t sub_23CF86D08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (void *)*a1;
  swift_getKeyPath();
  sub_23CF88DB8(&qword_268BCDE18, (void (*)(uint64_t))type metadata accessor for StateController);
  sub_23D003DD8();
  swift_release();
  uint64_t v4 = v3[2];
  unint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  uint64_t v7 = v3[5];
  uint64_t v8 = v3[6];
  uint64_t v9 = v3[7];
  uint64_t v10 = v3[8];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v9;
  a2[6] = v10;
  return sub_23CF3C33C(v4, v5);
}

uint64_t sub_23CF86DCC(long long *a1)
{
  sub_23CF78CB0(a1, (uint64_t)v2);
  swift_getKeyPath();
  sub_23CF78F38(v2, (void (*)(void, void, void, void, void, void, void))sub_23CF3C33C);
  sub_23CF88DB8(&qword_268BCDE18, (void (*)(uint64_t))type metadata accessor for StateController);
  sub_23D003DC8();
  sub_23CF78F38(v2, (void (*)(void, void, void, void, void, void, void))sub_23CF42034);
  return swift_release();
}

uint64_t sub_23CF86EDC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_23CF88DB8(&qword_268BCDE18, (void (*)(uint64_t))type metadata accessor for StateController);
  sub_23D003DD8();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 72);
  return result;
}

uint64_t sub_23CF86F84()
{
  return swift_release();
}

double sub_23CF87054@<D0>(char a1@<W1>, uint64_t a2@<X8>)
{
  int v3 = a1 & 1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCCF88);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_23D004288();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_23D004C68();
  int v44 = v3;
  sub_23CF8768C(v3, (uint64_t)v54);
  v55[328] = 1;
  memcpy(&v55[7], v54, 0x140uLL);
  int v46 = 1;
  memcpy(v58, v55, sizeof(v58));
  int v45 = sub_23D005078();
  unsigned __int8 v56 = 1;
  if (qword_268BCCCD8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v7, (uint64_t)qword_268BDADB8);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v12(v10, v11, v7);
  uint64_t v43 = sub_23D005558();
  int v42 = sub_23D005078();
  memcpy(v61, v58, sizeof(v61));
  v60[0] = *(_DWORD *)v57;
  *(_DWORD *)((char *)v60 + 3) = *(_DWORD *)&v57[3];
  int v41 = v56;
  if (qword_268BCCCE0 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v7, (uint64_t)qword_268BDADD0);
  v12(v10, v13, v7);
  uint64_t v40 = sub_23D005558();
  memcpy(v69, v61, sizeof(v69));
  v68[0] = v60[0];
  *(_DWORD *)((char *)v68 + 3) = *(_DWORD *)((char *)v60 + 3);
  v67[0] = *(_DWORD *)v59;
  *(_DWORD *)((char *)v67 + 3) = *(_DWORD *)&v59[3];
  uint64_t v39 = sub_23D0054F8();
  sub_23D004628();
  double v14 = v49;
  uint64_t v15 = v51;
  uint64_t v36 = v52;
  uint64_t v16 = v53;
  uint64_t v17 = sub_23D005778();
  uint64_t v37 = v18;
  uint64_t v38 = v17;
  v66[0] = *(_DWORD *)v62;
  *(_DWORD *)((char *)v66 + 3) = *(_DWORD *)&v62[3];
  uint64_t KeyPath = swift_getKeyPath();
  int v64 = *(_DWORD *)&v62[7];
  __int16 v65 = v63;
  uint64_t v19 = *MEMORY[0x263F1A5F8];
  uint64_t v20 = sub_23D005128();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 104);
  uint64_t v33 = (_DWORD *)(a2 + 385);
  char v34 = (_DWORD *)(a2 + 401);
  uint64_t v23 = v50;
  v22(v6, v19, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v6, 0, 1, v20);
  uint64_t v24 = sub_23D005158();
  sub_23CEE8BB4((uint64_t)v6, &qword_268BCCF88);
  uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = swift_retain();
  uint64_t v27 = sub_23CF396E8(v26, v44);
  swift_release();
  swift_getKeyPath();
  uint64_t v48 = v27;
  sub_23CF88DB8(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  uint64_t v28 = *(void *)(v27 + 48);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v48 = v28;
  sub_23CF88DB8((unint64_t *)&qword_268BCDB70, (void (*)(uint64_t))type metadata accessor for DebugController);
  sub_23D003DD8();
  swift_release();
  int v29 = *(unsigned __int8 *)(v28 + 17);
  swift_release();
  if (v29) {
    double v30 = 140.0;
  }
  else {
    double v30 = -200.0;
  }
  *(void *)a2 = v47;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = v46;
  memcpy((void *)(a2 + 17), v69, 0x147uLL);
  *(unsigned char *)(a2 + 344) = v45;
  *(_DWORD *)(a2 + 345) = v68[0];
  *(_DWORD *)(a2 + 348) = *(_DWORD *)((char *)v68 + 3);
  double result = 0.0;
  *(_OWORD *)(a2 + 352) = 0u;
  *(_OWORD *)(a2 + 368) = 0u;
  *(unsigned char *)(a2 + 384) = v41;
  *uint64_t v33 = v67[0];
  *(_DWORD *)(a2 + 388) = *(_DWORD *)((char *)v67 + 3);
  *(void *)(a2 + 392) = v43;
  *(unsigned char *)(a2 + 400) = v42;
  *char v34 = v66[0];
  *(_DWORD *)(a2 + 404) = *(_DWORD *)((char *)v66 + 3);
  *(void *)(a2 + 408) = v40;
  *(double *)(a2 + 416) = v14 * 0.5;
  *(double *)(a2 + 424) = v14;
  *(void *)(a2 + 432) = v23;
  *(void *)(a2 + 440) = v15;
  *(void *)(a2 + 448) = v36;
  *(void *)(a2 + 456) = v16;
  *(void *)(a2 + 464) = v39;
  *(_WORD *)(a2 + 472) = 256;
  *(_WORD *)(a2 + 478) = v65;
  *(_DWORD *)(a2 + 474) = v64;
  uint64_t v32 = v37;
  *(void *)(a2 + 480) = v38;
  *(void *)(a2 + 488) = v32;
  *(void *)(a2 + 496) = KeyPath;
  *(unsigned char *)(a2 + 504) = 0;
  *(void *)(a2 + 512) = v25;
  *(void *)(a2 + 520) = v24;
  *(double *)(a2 + 528) = v30;
  *(void *)(a2 + 536) = 0x403E000000000000;
  return result;
}

uint64_t sub_23CF8768C@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v124 = a2;
  int v2 = a1 & 1;
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_268BCED20);
  MEMORY[0x270FA5388](v129);
  uint64_t v128 = &v94[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_23D004BB8();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v131 = &v94[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v94[-v7];
  double v172 = 0.0;
  uint64_t v173 = (uint64_t *)0xE000000000000000;
  sub_23D005FC8();
  swift_bridgeObjectRelease();
  double v172 = -2.31584178e77;
  uint64_t v173 = (uint64_t *)0x800000023D012F40;
  uint64_t v9 = swift_retain();
  int v10 = v2;
  uint64_t v11 = sub_23CF396E8(v9, v2);
  swift_release();
  swift_getKeyPath();
  v182[0] = v11;
  uint64_t v12 = sub_23CF88DB8(&qword_268BCCD90, (void (*)(uint64_t))type metadata accessor for BatchController);
  sub_23D003DD8();
  swift_release();
  uint64_t v13 = *(void *)(v11 + 40);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  v182[0] = v13;
  sub_23CF88DB8(&qword_268BCDE18, (void (*)(uint64_t))type metadata accessor for StateController);
  sub_23D003DD8();
  swift_release();
  sub_23CF78CB0((long long *)(v13 + 16), (uint64_t)v182);
  sub_23CF78F38(v182, (void (*)(void, void, void, void, void, void, void))sub_23CF3C33C);
  swift_release();
  sub_23CF77958();
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  sub_23CF78F38(v182, (void (*)(void, void, void, void, void, void, void))sub_23CF42034);
  unint64_t v127 = sub_23CEE8D00();
  uint64_t v14 = sub_23D005228();
  uint64_t v121 = v15;
  uint64_t v122 = v14;
  int v123 = v16;
  uint64_t v120 = v17;
  double v172 = 0.0;
  uint64_t v173 = (uint64_t *)0xE000000000000000;
  sub_23D005FC8();
  uint64_t v126 = (uint64_t *)0xD00000000000001CLL;
  sub_23D0059F8();
  uint64_t v18 = swift_retain();
  LODWORD(v13) = v10;
  uint64_t v19 = sub_23CF396E8(v18, v10);
  swift_release();
  swift_getKeyPath();
  uint64_t v168 = v19;
  sub_23D003DD8();
  swift_release();
  uint64_t v20 = *(void *)(v19 + 40);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v168 = v20;
  sub_23D003DD8();
  swift_release();
  char v21 = *(unsigned char *)(v20 + 72);
  swift_release();
  LOBYTE(v168) = v21;
  sub_23D006088();
  uint64_t v22 = sub_23D005228();
  uint64_t v117 = v23;
  uint64_t v118 = v22;
  int v119 = v24;
  uint64_t v116 = v25;
  sub_23D004BA8();
  sub_23D004B98();
  uint64_t v26 = swift_retain();
  uint64_t v27 = (uint64_t *)sub_23CF396E8(v26, v13);
  swift_release();
  swift_getKeyPath();
  double v172 = *(double *)&v27;
  sub_23D003DD8();
  swift_release();
  uint64_t v28 = (uint64_t *)v27[2];
  swift_retain();
  swift_release();
  swift_getKeyPath();
  double v172 = *(double *)&v28;
  sub_23CF88DB8((unint64_t *)&qword_268BCD190, (void (*)(uint64_t))type metadata accessor for DonationController);
  sub_23D003DD8();
  swift_release();
  double v29 = (double)v28[5];
  swift_getKeyPath();
  double v172 = *(double *)&v28;
  sub_23D003DD8();
  swift_release();
  uint64_t v30 = v28[6];
  swift_release();
  double v172 = v29 / (double)v30;
  sub_23D004B58();
  sub_23D004B98();
  sub_23D004BD8();
  uint64_t v31 = sub_23D005208();
  uint64_t v113 = v32;
  uint64_t v114 = v31;
  int v115 = v33;
  uint64_t v112 = v34;
  sub_23D004BA8();
  unint64_t v130 = 0xD00000000000001ELL;
  sub_23D004B98();
  uint64_t v35 = swift_retain();
  uint64_t v36 = (uint64_t *)sub_23CF396E8(v35, v13);
  swift_release();
  swift_getKeyPath();
  double v172 = *(double *)&v36;
  sub_23D003DD8();
  swift_release();
  uint64_t v37 = (uint64_t *)v36[2];
  swift_retain();
  swift_release();
  swift_getKeyPath();
  double v172 = *(double *)&v37;
  sub_23D003DD8();
  swift_release();
  uint64_t v38 = (uint64_t)v37 + OBJC_IVAR____TtC8Feedback18DonationController__currentID;
  swift_beginAccess();
  sub_23CF88D28(v38, (uint64_t)v128);
  swift_release();
  sub_23D005998();
  uint64_t v125 = v8;
  sub_23D004B88();
  swift_bridgeObjectRelease();
  sub_23D004B98();
  sub_23D004BD8();
  uint64_t v39 = sub_23D005208();
  uint64_t v109 = v40;
  uint64_t v110 = v39;
  int v111 = v41;
  uint64_t v128 = v42;
  double v172 = 0.0;
  uint64_t v173 = (uint64_t *)0xE000000000000000;
  sub_23D005FC8();
  swift_bridgeObjectRelease();
  double v172 = *(double *)&v126;
  uint64_t v173 = (uint64_t *)0x800000023D012FC0;
  uint64_t v43 = swift_retain();
  uint64_t v44 = sub_23CF396E8(v43, v13);
  swift_release();
  swift_getKeyPath();
  uint64_t v168 = v44;
  sub_23D003DD8();
  swift_release();
  uint64_t v45 = *(void *)(v44 + 32);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v168 = v45;
  sub_23CF88DB8(&qword_268BCCD80, (void (*)(uint64_t))type metadata accessor for OnboardingController);
  sub_23D003DD8();
  swift_release();
  swift_release();
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  uint64_t v46 = sub_23D005228();
  uint64_t v107 = v47;
  uint64_t v108 = v46;
  int v106 = v48;
  uint64_t v126 = v49;
  double v172 = 0.0;
  uint64_t v173 = (uint64_t *)0xE000000000000000;
  sub_23D005FC8();
  swift_bridgeObjectRelease();
  double v172 = -2.31584178e77;
  uint64_t v173 = (uint64_t *)0x800000023D012FE0;
  uint64_t v50 = swift_retain();
  uint64_t v51 = sub_23CF396E8(v50, v13);
  swift_release();
  swift_getKeyPath();
  uint64_t v168 = v51;
  sub_23D003DD8();
  swift_release();
  uint64_t v52 = *(void *)(v51 + 32);
  swift_retain();
  swift_release();
  swift_getKeyPath();
  uint64_t v168 = v52;
  sub_23D003DD8();
  swift_release();
  swift_release();
  sub_23D0059F8();
  swift_bridgeObjectRelease();
  uint64_t v53 = sub_23D005228();
  uint64_t v104 = v54;
  uint64_t v105 = v53;
  int v103 = v55;
  unint64_t v127 = v56;
  sub_23D004BA8();
  sub_23D004B98();
  uint64_t v57 = swift_retain();
  uint64_t v58 = (uint64_t *)sub_23CF396E8(v57, v13);
  swift_release();
  swift_getKeyPath();
  double v172 = *(double *)&v58;
  sub_23D003DD8();
  swift_release();
  unint64_t v59 = (uint64_t *)v58[3];
  swift_retain();
  swift_release();
  swift_getKeyPath();
  double v172 = *(double *)&v59;
  sub_23CF88DB8((unint64_t *)&qword_268BCD1E8, (void (*)(uint64_t))type metadata accessor for ScoreController);
  sub_23D003DD8();
  swift_release();
  unint64_t v60 = (uint64_t *)v59[3];
  swift_release();
  double v172 = *(double *)&v60;
  sub_23D004B58();
  sub_23D004B98();
  sub_23D004BD8();
  uint64_t v61 = sub_23D005208();
  uint64_t v100 = v62;
  uint64_t v101 = v61;
  int v99 = v63;
  uint64_t v102 = v64;
  sub_23D004BA8();
  sub_23D004B98();
  uint64_t v65 = swift_retain();
  uint64_t v66 = (uint64_t *)sub_23CF396E8(v65, v13);
  swift_release();
  swift_getKeyPath();
  double v172 = *(double *)&v66;
  sub_23D003DD8();
  swift_release();
  swift_retain();
  swift_release();
  sub_23CF14668();
  char v68 = v67;
  swift_release();
  double v172 = *(double *)&v68;
  sub_23D004B58();
  sub_23D004B98();
  sub_23D004BD8();
  uint64_t v69 = sub_23D005208();
  uint64_t v96 = v70;
  uint64_t v97 = v69;
  int v95 = v71;
  uint64_t v98 = v72;
  sub_23D004BA8();
  sub_23D004B98();
  uint64_t v73 = swift_retain();
  LODWORD(v130) = v13;
  uint64_t v74 = (uint64_t *)sub_23CF396E8(v73, v13);
  swift_release();
  swift_getKeyPath();
  double v172 = *(double *)&v74;
  uint64_t v129 = v12;
  sub_23D003DD8();
  swift_release();
  BOOL v75 = (uint64_t *)v74[3];
  swift_retain();
  swift_release();
  swift_getKeyPath();
  double v172 = *(double *)&v75;
  sub_23D003DD8();
  swift_release();
  uint64_t v76 = v75[3];
  uint64_t result = swift_release();
  double v78 = floor(sqrt((double)v76 * 0.5));
  if ((~*(void *)&v78 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v78 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v78 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v79 = (uint64_t)v78;
  if ((uint64_t)v78 >= 99) {
    uint64_t v79 = 99;
  }
  double v172 = *(double *)&v79;
  sub_23D004B58();
  sub_23D004B98();
  sub_23D004BD8();
  uint64_t v80 = sub_23D005208();
  uint64_t v82 = v81;
  char v84 = v83;
  uint64_t v86 = v85;
  sub_23D004BA8();
  sub_23D004B98();
  uint64_t v87 = swift_retain();
  uint64_t v88 = (uint64_t *)sub_23CF396E8(v87, v130);
  swift_release();
  swift_getKeyPath();
  double v172 = *(double *)&v88;
  sub_23D003DD8();
  swift_release();
  swift_retain();
  swift_release();
  uint64_t v89 = (uint64_t *)sub_23CF15048();
  swift_release();
  double v172 = *(double *)&v89;
  sub_23D004B58();
  sub_23D004B98();
  sub_23D004BD8();
  uint64_t v90 = sub_23D005208();
  uint64_t v168 = v122;
  uint64_t v169 = v121;
  uint64_t v171 = v120;
  uint64_t v164 = v118;
  uint64_t v165 = v117;
  uint64_t v167 = v116;
  uint64_t v160 = v114;
  uint64_t v161 = v113;
  uint64_t v163 = v112;
  uint64_t v156 = v110;
  uint64_t v157 = v109;
  char v170 = v123 & 1;
  char v166 = v119 & 1;
  double v172 = COERCE_DOUBLE(&v168);
  uint64_t v173 = &v164;
  char v162 = v115 & 1;
  char v158 = v111 & 1;
  id v159 = v128;
  uint64_t v174 = &v160;
  os_log_type_t v175 = &v156;
  uint64_t v152 = v108;
  uint64_t v153 = v107;
  char v154 = v106 & 1;
  os_log_type_t v155 = v126;
  uint64_t v148 = v105;
  uint64_t v149 = v104;
  char v150 = v103 & 1;
  unint64_t v151 = v127;
  uint64_t v176 = &v152;
  uint64_t v177 = &v148;
  uint64_t v144 = v101;
  uint64_t v145 = v100;
  char v146 = v99 & 1;
  uint64_t v147 = v102;
  uint64_t v140 = v97;
  uint64_t v141 = v96;
  char v142 = v95 & 1;
  uint64_t v143 = v98;
  uint64_t v178 = &v144;
  unint64_t v179 = &v140;
  uint64_t v136 = v80;
  uint64_t v137 = v82;
  char v138 = v84 & 1;
  uint64_t v139 = v86;
  uint64_t v132 = v90;
  uint64_t v133 = v91;
  char v134 = v92 & 1;
  uint64_t v135 = v93;
  uint64_t v180 = &v136;
  uint64_t v181 = &v132;
  sub_23CF86814((uint64_t **)&v172, v124);
  sub_23CEE7DE0(v132, v133, v134);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v136, v137, v138);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v140, v141, v142);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v144, v145, v146);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v148, v149, v150);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v152, v153, v154);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v156, v157, v158);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v160, v161, v162);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v164, v165, v166);
  swift_bridgeObjectRelease();
  sub_23CEE7DE0(v168, v169, v170);
  return swift_bridgeObjectRelease();
}