id cryptoLog()
{
  void *v0;
  uint64_t vars8;

  if (cryptoLog_onceToken[0] != -1) {
    dispatch_once(cryptoLog_onceToken, &__block_literal_global);
  }
  v0 = (void *)cryptoLog_cryptoLog;
  return v0;
}

uint64_t __cryptoLog_block_invoke()
{
  cryptoLog_cryptoLog = (uint64_t)os_log_create("com.apple.cosmo", "Crypto");
  return MEMORY[0x270F9A758]();
}

SecKeyRef createKeyPair(void *a1, uint64_t a2)
{
  v11[2] = *MEMORY[0x263EF8340];
  uint64_t v3 = *MEMORY[0x263F16F98];
  v10[0] = *MEMORY[0x263F16FA8];
  v10[1] = v3;
  v11[0] = a1;
  v4 = NSNumber;
  id v5 = a1;
  v6 = [v4 numberWithUnsignedInteger:a2];
  v11[1] = v6;
  CFDictionaryRef v7 = [NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:2];

  SecKeyRef RandomKey = SecKeyCreateRandomKey(v7, 0);
  return RandomKey;
}

sec_identity_t secIdentityFromKeyPair(__SecKey *a1)
{
  sec_identity_t v1 = (sec_identity_t)a1;
  SecKeyRef v2 = SecKeyCopyPublicKey(a1);
  SelfSignedCertificate = (const void *)SecGenerateSelfSignedCertificate();
  if (v2) {
    CFRelease(v2);
  }
  if (SelfSignedCertificate)
  {
    v4 = (__SecIdentity *)SecIdentityCreate();
    CFRelease(SelfSignedCertificate);
    if (v4)
    {
      sec_identity_t v1 = sec_identity_create(v4);
      CFRelease(v4);
      if (!v1)
      {
        id v5 = cryptoLog();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
          secIdentityFromKeyPair_cold_3();
        }
      }
      goto LABEL_17;
    }
    CFDictionaryRef v7 = cryptoLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      secIdentityFromKeyPair_cold_2();
    }

LABEL_16:
    sec_identity_t v1 = 0;
    goto LABEL_17;
  }
  v6 = cryptoLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
    secIdentityFromKeyPair_cold_1();
  }

  if (v1)
  {
    CFRelease(v1);
    goto LABEL_16;
  }
LABEL_17:
  return v1;
}

__SecKey *secIdentity(void *a1, uint64_t a2)
{
  v17[2] = *MEMORY[0x263EF8340];
  uint64_t v3 = *MEMORY[0x263F16F98];
  v16[0] = *MEMORY[0x263F16FA8];
  v16[1] = v3;
  v17[0] = a1;
  v4 = NSNumber;
  id v5 = a1;
  v6 = [v4 numberWithUnsignedInteger:a2];
  v17[1] = v6;
  CFDictionaryRef v7 = [NSDictionary dictionaryWithObjects:v17 forKeys:v16 count:2];

  SecKeyRef RandomKey = SecKeyCreateRandomKey(v7, 0);
  SecKeyRef v9 = SecKeyCopyPublicKey(RandomKey);
  SelfSignedCertificate = (const void *)SecGenerateSelfSignedCertificate();
  if (v9) {
    CFRelease(v9);
  }
  if (SelfSignedCertificate)
  {
    v11 = (__SecIdentity *)SecIdentityCreate();
    CFRelease(SelfSignedCertificate);
    if (RandomKey) {
      CFRelease(RandomKey);
    }
    if (v11)
    {
      SecKeyRef RandomKey = (__SecKey *)sec_identity_create(v11);
      CFRelease(v11);
      if (!RandomKey)
      {
        v12 = cryptoLog();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          secIdentityFromKeyPair_cold_3();
        }
      }
      goto LABEL_19;
    }
    v14 = cryptoLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      secIdentityFromKeyPair_cold_2();
    }

LABEL_18:
    SecKeyRef RandomKey = 0;
    goto LABEL_19;
  }
  v13 = cryptoLog();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
    secIdentityFromKeyPair_cold_1();
  }

  if (RandomKey)
  {
    CFRelease(RandomKey);
    goto LABEL_18;
  }
LABEL_19:

  return RandomKey;
}

id publicKeyFromIdentity(void *a1)
{
  sec_identity_t v1 = a1;
  SecKeyRef v2 = v1;
  if (!v1) {
    goto LABEL_16;
  }
  uint64_t v3 = sec_identity_copy_ref(v1);
  v4 = v3;
  if (!v3) {
    goto LABEL_17;
  }
  SecKeyRef privateKeyRef = 0;
  OSStatus v5 = SecIdentityCopyPrivateKey(v3, &privateKeyRef);
  CFRelease(v4);
  if (v5)
  {
    if (privateKeyRef)
    {
      CFRelease(privateKeyRef);
      SecKeyRef privateKeyRef = 0;
    }
    v6 = cryptoLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      publicKeyFromIdentity_cold_1();
    }
  }
  if (!privateKeyRef) {
    goto LABEL_16;
  }
  SecKeyRef v7 = SecKeyCopyPublicKey(privateKeyRef);
  if (privateKeyRef)
  {
    CFRelease(privateKeyRef);
    SecKeyRef privateKeyRef = 0;
  }
  if (v7)
  {
    v4 = (void *)SecKeyCopySubjectPublicKeyInfo();
    CFRelease(v7);
    if (v4) {
      id v8 = v4;
    }
  }
  else
  {
LABEL_16:
    v4 = 0;
  }
LABEL_17:

  return v4;
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_24C7C05D0()
{
  if (qword_2697EE9E8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24C849590();
  __swift_project_value_buffer(v0, (uint64_t)qword_2697F70A0);
  oslog = sub_24C849570();
  os_log_type_t v1 = sub_24C84A110();
  if (os_log_type_enabled(oslog, v1))
  {
    SecKeyRef v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)SecKeyRef v2 = 0;
    _os_log_impl(&dword_24C7BE000, oslog, v1, "IGNORING: using PIN-less flow", v2, 2u);
    MEMORY[0x2532FCCC0](v2, -1, -1);
  }
}

void TransferHostDelegate.requestedPinCode(_:)()
{
  if (qword_2697EE9E8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24C849590();
  __swift_project_value_buffer(v0, (uint64_t)qword_2697F70A0);
  oslog = sub_24C849570();
  os_log_type_t v1 = sub_24C84A110();
  if (os_log_type_enabled(oslog, v1))
  {
    SecKeyRef v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)SecKeyRef v2 = 0;
    _os_log_impl(&dword_24C7BE000, oslog, v1, "IGNORING: using PIN-less flow", v2, 2u);
    MEMORY[0x2532FCCC0](v2, -1, -1);
  }
}

unint64_t TransferHost.State.description.getter()
{
  unint64_t result = 0x6C616974696E69;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0xD000000000000021;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0xA:
      unint64_t result = 0x676E6970706F7473;
      break;
    case 0xB:
      unint64_t result = 0x646570706F7473;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static TransferHost.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TransferHost.State.hash(into:)()
{
  return sub_24C84A4F0();
}

BOOL static TransferHost.State.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t TransferHost.State.hashValue.getter()
{
  return sub_24C84A510();
}

BOOL sub_24C7C09B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24C7C09CC()
{
  return sub_24C84A510();
}

uint64_t sub_24C7C0A14()
{
  return sub_24C84A4F0();
}

uint64_t sub_24C7C0A40()
{
  return sub_24C84A510();
}

BOOL sub_24C7C0A84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_24C7C0A98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_24C7C0AAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_24C7C0AC0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

double TransferHost.Configuration.gracefulStopWindowInterval.getter()
{
  return *(double *)v0;
}

Cosmo::TransferHost::Configuration __swiftcall TransferHost.Configuration.init(gracefulStopWindowInterval:)(Cosmo::TransferHost::Configuration gracefulStopWindowInterval)
{
  v1->gracefulStopWindowInterval = gracefulStopWindowInterval.gracefulStopWindowInterval;
  return gracefulStopWindowInterval;
}

id TransferHost.queue.getter()
{
  return *(id *)(v0 + 16);
}

double TransferHost.config.getter@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + 24);
  *a1 = result;
  return result;
}

uint64_t sub_24C7C0AFC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 32;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2532FCD70](v4);
  uint64_t v6 = *(void *)(v3 + 40);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_24C7C0B58(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 40) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_24C7C0BB4()
{
  swift_beginAccess();
  return MEMORY[0x2532FCD70](v0 + 32);
}

uint64_t TransferHost.__allocating_init(delegate:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = 0x3FF0000000000000;
  type metadata accessor for TransferHost();
  uint64_t v6 = swift_allocObject();
  TransferHost.init(delegate:config:queue:)(a1, a2, &v8, a3);
  return v6;
}

uint64_t TransferHost.__allocating_init(delegate:config:queue:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  TransferHost.init(delegate:config:queue:)(a1, a2, a3, a4);
  return v8;
}

uint64_t TransferHost.init(delegate:config:queue:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v24 = a2;
  uint64_t v7 = sub_24C84A150();
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  MEMORY[0x270FA5388](v7);
  v20 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24C84A120();
  MEMORY[0x270FA5388](v9);
  v19 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24C849BF0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v12 = *a3;
  *(void *)(v4 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v4 + 49) = 12;
  long long v23 = xmmword_24C84AFC0;
  *(_OWORD *)(v4 + 56) = xmmword_24C84AFC0;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 104) = 0u;
  *(void *)(v4 + 120) = 0;
  uint64_t v13 = v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationServiceUUID;
  uint64_t v14 = sub_24C849440();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationCount) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2Prover) = 0;
  *(_OWORD *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm) = v23;
  uint64_t v16 = v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferDescriptor;
  uint64_t v17 = type metadata accessor for NetworkDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost) = 0;
  v15(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferServiceUUID, 1, 1, v14);
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer) = MEMORY[0x263F8EE80];
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesRequestedCount) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesSentCount) = 0;
  swift_beginAccess();
  *(void *)(v4 + 40) = v24;
  swift_unknownObjectWeakAssign();
  *(void *)(v4 + 24) = v12;
  if (!a4)
  {
    sub_24C7D5EF8();
    sub_24C849BE0();
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_24C7D6128((unint64_t *)&unk_2697EEAE0, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF330);
    sub_24C7D6170(&qword_2697EEAF0, (uint64_t *)&unk_2697EF330);
    sub_24C84A1F0();
    (*(void (**)(char *, void, uint64_t))(v21 + 104))(v20, *MEMORY[0x263F8F130], v22);
    a4 = sub_24C84A170();
  }
  swift_unknownObjectRelease();
  *(void *)(v4 + 16) = a4;
  *(unsigned char *)(v4 + 48) = 0;
  return v4;
}

void sub_24C7C10E8(char *a1)
{
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v8 = *a1;
  uint64_t v9 = *(void **)(v1 + 16);
  *uint64_t v7 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v10 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v9)
  {
    char v2 = *(unsigned char *)(v1 + 48);
    *(unsigned char *)(v1 + 48) = v8;
    if (qword_2697EE9E8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v11 = sub_24C849590();
  __swift_project_value_buffer(v11, (uint64_t)qword_2697F70A0);
  uint64_t v12 = sub_24C849570();
  os_log_type_t v13 = sub_24C84A110();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v21 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    LOBYTE(v20) = v2;
    unint64_t v16 = TransferHost.State.description.getter();
    uint64_t v20 = sub_24C7DE68C(v16, v17, &v21);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    LOBYTE(v20) = v8;
    unint64_t v18 = TransferHost.State.description.getter();
    uint64_t v20 = sub_24C7DE68C(v18, v19, &v21);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v12, v13, "[State] Updated, old-state='%s' new-state='%s'", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v15, -1, -1);
    MEMORY[0x2532FCCC0](v14, -1, -1);
  }
}

uint64_t TransferHost.deinit()
{
  sub_24C7D5FC4(v0 + 32);
  sub_24C7D6044(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_release();
  sub_24C7D6F70(*(void *)(v0 + 80));
  sub_24C7D6F70(*(void *)(v0 + 96));
  sub_24C7D6F70(*(void *)(v0 + 112));
  sub_24C7D7C08(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationServiceUUID, &qword_2697EEAF8);
  swift_release();
  sub_24C7D6044(*(void *)(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm), *(void *)(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm + 8));
  sub_24C7D7C08(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferDescriptor, (uint64_t *)&unk_2697EEB00);
  swift_release();
  sub_24C7D7C08(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferServiceUUID, &qword_2697EEAF8);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TransferHost.__deallocating_deinit()
{
  TransferHost.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t TransferHost.start(onStart:)(uint64_t a1, uint64_t a2)
{
  static SharedSecret.accV2Compatible(protocolVersion:)(2, v7);
  uint64_t v4 = v7[0];
  unint64_t v5 = v7[1];
  TransferHost.start(secret:onStart:)(v7, a1, a2);
  return sub_24C7D5FEC(v4, v5);
}

uint64_t TransferHost.start(secret:onStart:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24C849BD0();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24C849BF0();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  os_log_type_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  unint64_t v15 = a1[1];
  unint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v4;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = v14;
  v16[6] = v15;
  aBlock[4] = sub_24C7D60A0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor;
  unint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24C7D60D0(v14, v15);
  sub_24C849BE0();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_24C7D6128((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v13, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  return swift_release();
}

void sub_24C7C1818(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = sub_24C849440();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  os_log_type_t v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEAF8);
  MEMORY[0x270FA5388](v14 - 8);
  unint64_t v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v17 = *(unsigned __int8 *)(a1 + 48);
  if (v17 == 11 || v17 == 0)
  {
    v56 = v13;
    uint64_t v19 = *(void *)(a1 + 56);
    unint64_t v20 = *(void *)(a1 + 64);
    *(void *)(a1 + 56) = a4;
    *(void *)(a1 + 64) = a5;
    sub_24C7D60D0(a4, a5);
    sub_24C7D6044(v19, v20);
    uint64_t v21 = *(void *)(a1 + 112);
    *(void *)(a1 + 112) = a2;
    *(void *)(a1 + 120) = a3;
    swift_retain();
    sub_24C7D6F70(v21);
    uint64_t v58 = a4;
    unint64_t v59 = a5;
    SharedSecret.advertisementIdentifer.getter((uint64_t)v16);
    uint64_t v57 = v11;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    uint64_t v22 = a1 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationServiceUUID;
    swift_beginAccess();
    sub_24C7D75BC((uint64_t)v16, v22, &qword_2697EEAF8);
    swift_endAccess();
    if (qword_2697EE9E8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_24C849590();
    uint64_t v24 = (uint8_t *)__swift_project_value_buffer(v23, (uint64_t)qword_2697F70A0);
    sub_24C7D60D0(a4, a5);
    sub_24C7D60D0(a4, a5);
    sub_24C7D60D0(a4, a5);
    sub_24C7D60D0(a4, a5);
    uint64_t v25 = sub_24C849570();
    os_log_type_t v26 = sub_24C84A110();
    if (os_log_type_enabled(v25, v26))
    {
      v54 = v24;
      uint64_t v55 = v10;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v61 = v28;
      *(_DWORD *)uint64_t v27 = 136315394;
      uint64_t v58 = a4;
      unint64_t v59 = a5;
      uint64_t v29 = SharedSecret.asACCV2CompatibileHex.getter();
      uint64_t v58 = sub_24C7DE68C(v29, v30, &v61);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D5FEC(a4, a5);
      sub_24C7D5FEC(a4, a5);
      *(_WORD *)(v27 + 12) = 2080;
      uint64_t v58 = a4;
      unint64_t v59 = a5;
      __int16 v31 = SharedSecret.protocolVersion.getter();
      if ((v31 & 0x100) != 0)
      {
        unint64_t v34 = 0xE300000000000000;
        uint64_t v32 = 7104878;
      }
      else
      {
        LOBYTE(v58) = v31;
        uint64_t v32 = sub_24C849ED0();
        unint64_t v34 = v33;
      }
      uint64_t v58 = sub_24C7DE68C(v32, v34, &v61);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D5FEC(a4, a5);
      sub_24C7D5FEC(a4, a5);
      _os_log_impl(&dword_24C7BE000, v25, v26, "[Start] Using shared-secret=%s, protocol-version=%s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v28, -1, -1);
      MEMORY[0x2532FCCC0](v27, -1, -1);

      uint64_t v10 = v55;
    }
    else
    {
      sub_24C7D5FEC(a4, a5);
      sub_24C7D5FEC(a4, a5);
      sub_24C7D5FEC(a4, a5);
      sub_24C7D5FEC(a4, a5);
    }
    sub_24C7D60D0(a4, a5);
    sub_24C7D60D0(a4, a5);
    v42 = sub_24C849570();
    os_log_type_t v43 = sub_24C84A110();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v61 = v55;
      *(_DWORD *)v44 = 136315138;
      v53[1] = v44 + 4;
      v54 = v44;
      uint64_t v58 = a4;
      unint64_t v59 = a5;
      uint64_t v45 = (uint64_t)v56;
      SharedSecret.advertisementIdentifer.getter((uint64_t)v56);
      sub_24C7D6128(&qword_2697EEC60, MEMORY[0x263F07508]);
      uint64_t v46 = sub_24C84A430();
      unint64_t v48 = v47;
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v45, v10);
      uint64_t v58 = sub_24C7DE68C(v46, v48, &v61);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D5FEC(a4, a5);
      sub_24C7D5FEC(a4, a5);
      v49 = v54;
      _os_log_impl(&dword_24C7BE000, v42, v43, "[Start] Starting attestation-host with Bonjour attestationServiceUUID=%s", v54, 0xCu);
      uint64_t v50 = v55;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v50, -1, -1);
      MEMORY[0x2532FCCC0](v49, -1, -1);
    }
    else
    {
      sub_24C7D5FEC(a4, a5);
      sub_24C7D5FEC(a4, a5);
    }

    sub_24C7C1FD0();
  }
  else
  {
    if (qword_2697EE9E8 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_24C849590();
    __swift_project_value_buffer(v35, (uint64_t)qword_2697F70A0);
    swift_retain_n();
    v36 = sub_24C849570();
    os_log_type_t v37 = sub_24C84A110();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v58 = v39;
      *(_DWORD *)v38 = 136315138;
      LOBYTE(v61) = *(unsigned char *)(a1 + 48);
      unint64_t v40 = TransferHost.State.description.getter();
      uint64_t v61 = sub_24C7DE68C(v40, v41, &v58);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v36, v37, "[Start] Must be invoked while in the initial or stopped, state=%s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v39, -1, -1);
      MEMORY[0x2532FCCC0](v38, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_24C7D6EEC();
    v51 = (void *)swift_allocError();
    _OWORD *v52 = xmmword_24C84AFD0;
    uint64_t v58 = (uint64_t)v51;
    unint64_t v59 = 0;
    char v60 = 1;
    a2(&v58);
  }
}

uint64_t sub_24C7C1FD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NetworkDescriptor();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  v36 = (uint64_t *)((char *)v34 - v6);
  uint64_t v7 = sub_24C849C80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (void *)v0[2];
  *uint64_t v10 = v11;
  uint64_t v12 = *(void (**)(void))(v8 + 104);
  unsigned int v35 = *MEMORY[0x263F8F0E0];
  v38 = (void (*)(void *, uint64_t, uint64_t))v12;
  v12(v10);
  id v13 = v11;
  char v14 = sub_24C849CA0();
  os_log_type_t v37 = *(uint64_t (**)(void *, uint64_t))(v8 + 8);
  uint64_t result = v37(v10, v7);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  v34[1] = v8 + 104;
  unint64_t v16 = v1[8];
  if (v16 >> 60 == 15) {
    return result;
  }
  uint64_t v17 = v1[7];
  unint64_t v18 = v36;
  uint64_t *v36 = v17;
  v18[1] = v16;
  *((unsigned char *)v18 + 16) = 0;
  swift_storeEnumTagMultiPayload();
  sub_24C7D7AC4((uint64_t)v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoSerialChannelHost();
  swift_allocObject();
  sub_24C7D7304(v17, v16);
  id v19 = v13;
  v34[0] = v17;
  sub_24C7D7304(v17, v16);
  unint64_t v20 = sub_24C833DE8(0xD000000000000010, 0x800000024C84F140, (uint64_t)v5, v13);

  v1[9] = v20;
  swift_release();
  uint64_t v21 = v1[9];
  if (v21)
  {
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    swift_beginAccess();
    uint64_t v23 = *(void *)(v21 + 16);
    *(void *)(v21 + 16) = sub_24C7D6F40;
    *(void *)(v21 + 24) = v22;
    sub_24C7D6F70(v23);
  }
  sub_24C7C2AC8();
  sub_24C7C2CB8();
  *uint64_t v10 = v19;
  uint64_t v24 = v35;
  v38(v10, v35, v7);
  id v25 = v19;
  char v26 = sub_24C849CA0();
  uint64_t result = v37(v10, v7);
  if ((v26 & 1) == 0) {
    goto LABEL_19;
  }
  if (v1[9])
  {
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_24C7CE5F8((uint64_t)sub_24C7D6F90, v27, (uint64_t)&unk_26FEF0FA8, (uint64_t)sub_24C7D6F9C, (uint64_t)&block_descriptor_100);
    swift_release();
    swift_release();
  }
  *uint64_t v10 = v25;
  v38(v10, v24, v7);
  id v28 = v25;
  char v29 = sub_24C849CA0();
  uint64_t result = v37(v10, v7);
  if ((v29 & 1) == 0) {
    goto LABEL_20;
  }
  if (v1[9])
  {
    uint64_t v30 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_24C7CE5F8((uint64_t)sub_24C7D6F88, v30, (uint64_t)&unk_26FEF1070, (uint64_t)sub_24C7D71BC, (uint64_t)&block_descriptor_115);
    swift_release();
    swift_release();
  }
  *uint64_t v10 = v28;
  v38(v10, v24, v7);
  id v31 = v28;
  char v32 = sub_24C849CA0();
  uint64_t result = v37(v10, v7);
  if ((v32 & 1) == 0) {
    goto LABEL_21;
  }
  if (v1[9])
  {
    uint64_t v33 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_24C7CE5F8((uint64_t)sub_24C7D6F80, v33, (uint64_t)&unk_26FEF1138, (uint64_t)sub_24C7D731C, (uint64_t)&block_descriptor_131);
    swift_release();
    swift_release();
  }
  char v39 = 1;
  sub_24C7C10E8(&v39);
  if (v1[9])
  {
    swift_retain();
    sub_24C8312CC();
    swift_release();
    sub_24C7D6044(v34[0], v16);
    return sub_24C7D7B2C((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  }
  else
  {
    sub_24C7D7B2C((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
    return sub_24C7D6044(v34[0], v16);
  }
}

uint64_t sub_24C7C25B4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_24C7C25F8(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v8 = *a1;
  uint64_t v9 = *(void **)(v2 + 16);
  *uint64_t v7 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v10 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_24:
    swift_once();
LABEL_8:
    uint64_t v12 = sub_24C849590();
    __swift_project_value_buffer(v12, (uint64_t)qword_2697F70A0);
    swift_retain_n();
    id v13 = sub_24C849570();
    os_log_type_t v14 = sub_24C84A110();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v30 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      LOBYTE(v33) = *(unsigned char *)(v2 + 48);
      unint64_t v17 = TransferHost.State.description.getter();
      uint64_t v33 = sub_24C7DE68C(v17, v18, &v30);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v13, v14, "Stopped, ignoring attestation-host state change, state=%s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v16, -1, -1);
      MEMORY[0x2532FCCC0](v15, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return;
  }
  if (!*(void *)(v2 + 72)) {
    return;
  }
  unsigned int v11 = *(unsigned __int8 *)(v2 + 48);
  if (v11 > 9)
  {
    if (qword_2697EE9E8 == -1) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
  if (v8)
  {
    if (v11 == 1)
    {
      LOBYTE(v30) = 2;
      sub_24C7C2EA8((unsigned __int8 *)&v30, 0xD00000000000001CLL, 0x800000024C84F540);
    }
  }
  else
  {
    unint64_t v19 = *(void *)(v2 + 64);
    if (v19 >> 60 == 15)
    {
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_24C849590();
      __swift_project_value_buffer(v20, (uint64_t)qword_2697F70A0);
      uint64_t v21 = sub_24C849570();
      os_log_type_t v22 = sub_24C84A0F0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_24C7BE000, v21, v22, "Unexpected, attestation-host ready, but no shared-secret found", v23, 2u);
        MEMORY[0x2532FCCC0](v23, -1, -1);
      }

      uint64_t v24 = *(void (**)(uint64_t *))(v2 + 112);
      if (v24)
      {
        sub_24C7D6EEC();
        id v25 = (void *)swift_allocError();
        *char v26 = 0xD000000000000014;
        v26[1] = 0x800000024C84F560;
        uint64_t v30 = (uint64_t)v25;
        unint64_t v31 = 0;
        char v32 = 1;
        swift_retain();
        v24(&v30);
        sub_24C7D6F70((uint64_t)v24);
      }
    }
    else
    {
      uint64_t v27 = *(void *)(v2 + 56);
      LOBYTE(v30) = 2;
      sub_24C7D60D0(v27, v19);
      sub_24C7C10E8((char *)&v30);
      id v28 = *(void (**)(uint64_t *))(v2 + 112);
      if (v28)
      {
        uint64_t v30 = v27;
        unint64_t v31 = v19;
        char v32 = 0;
        sub_24C7D7304(v27, v19);
        sub_24C7D6E3C((uint64_t)v28);
        v28(&v30);
        sub_24C7D6F70((uint64_t)v28);
        sub_24C7D6044(v27, v19);
        uint64_t v29 = *(void *)(v2 + 112);
      }
      else
      {
        uint64_t v29 = 0;
      }
      *(void *)(v2 + 112) = 0;
      *(void *)(v2 + 120) = 0;
      sub_24C7D6F70(v29);
      sub_24C7D6044(v27, v19);
    }
  }
}

uint64_t sub_24C7C2AC8()
{
  uint64_t v1 = sub_24C849C80();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + 16);
  void *v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F0E0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    if (*(void *)(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost))
    {
      uint64_t v8 = swift_allocObject();
      swift_weakInit();
      uint64_t v9 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_24C7D0FB8((uint64_t)sub_24C7D7DCC, v8, (uint64_t)sub_24C7D7DD4, v9, (uint64_t)&unk_26FEF1520, (uint64_t)sub_24C7D7E34, (uint64_t)&block_descriptor_216, (void (*)(uint64_t, uint64_t))sub_24C7D8114);
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24C7C2CB8()
{
  uint64_t v1 = sub_24C849C80();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + 16);
  void *v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F0E0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    if (*(void *)(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost))
    {
      uint64_t v8 = swift_allocObject();
      swift_weakInit();
      uint64_t v9 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_24C7D0FB8((uint64_t)sub_24C7D7C64, v8, (uint64_t)sub_24C7D7C6C, v9, (uint64_t)&unk_26FEF1458, (uint64_t)sub_24C7D7C7C, (uint64_t)&block_descriptor_199, (void (*)(uint64_t, uint64_t))sub_24C7D8114);
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24C7C2EA8(unsigned __int8 *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24C849C80();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unsigned int v11 = (void *)((char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  LODWORD(v12) = *a1;
  id v13 = *(void **)(v4 + 16);
  void *v11 = v13;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v14 = v13;
  LOBYTE(v13) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_4;
  }
  if (*(unsigned __int8 *)(v4 + 48) > 9u) {
    return result;
  }
  if (qword_2697EE9E8 != -1) {
    goto LABEL_17;
  }
LABEL_4:
  uint64_t v16 = sub_24C849590();
  __swift_project_value_buffer(v16, (uint64_t)qword_2697F70A0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  unint64_t v17 = sub_24C849570();
  os_log_type_t v18 = sub_24C84A110();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v40 = a2;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v42[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_24C7DE68C(a2, a3, v42);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2080;
    LOBYTE(v41) = *(unsigned char *)(v4 + 48);
    unint64_t v22 = TransferHost.State.description.getter();
    uint64_t v41 = sub_24C7DE68C(v22, v23, v42);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v17, v18, "[Close] Closing, reason='%s', state=%s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v21, -1, -1);
    MEMORY[0x2532FCCC0](v20, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  LOBYTE(v42[0]) = 10;
  sub_24C7C10E8((char *)v42);
  uint64_t v24 = *(void (**)(uint64_t *))(v4 + 80);
  if (v24 && *(void *)(v4 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost) && v12 != 4)
  {
    uint64_t v25 = *(void *)(v4 + 88);
    swift_retain_n();
    sub_24C7D6E3C((uint64_t)v24);
    char v26 = sub_24C849570();
    os_log_type_t v27 = sub_24C84A110();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      v38[2] = v25;
      uint64_t v29 = (uint8_t *)v28;
      uint64_t v30 = swift_slowAlloc();
      int v39 = v12;
      uint64_t v12 = v30;
      v42[0] = v30;
      *(_DWORD *)uint64_t v29 = 136315138;
      v38[1] = v29 + 4;
      LOBYTE(v41) = *(unsigned char *)(v4 + 48);
      unint64_t v31 = TransferHost.State.description.getter();
      uint64_t v41 = sub_24C7DE68C(v31, v32, v42);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v26, v27, "[Close] Completing lease, state=%s", v29, 0xCu);
      swift_arrayDestroy();
      uint64_t v33 = v12;
      LOBYTE(v12) = v39;
      MEMORY[0x2532FCCC0](v33, -1, -1);
      MEMORY[0x2532FCCC0](v29, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v34 = v40;
    uint64_t v35 = swift_allocObject();
    swift_weakInit();
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v35;
    *(unsigned char *)(v36 + 24) = v12;
    *(void *)(v36 + 32) = v34;
    *(void *)(v36 + 40) = a3;
    uint64_t v37 = *(void *)(v4 + 96);
    *(void *)(v4 + 96) = sub_24C7D6E88;
    *(void *)(v4 + 104) = v36;
    swift_bridgeObjectRetain();
    sub_24C7D6F70(v37);
    v42[0] = 200;
    v42[1] = v34;
    v42[2] = a3;
    char v43 = 0;
    swift_bridgeObjectRetain();
    v24(v42);
    sub_24C7D6F70((uint64_t)v24);
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v42[0]) = v12;
    return sub_24C7D6AEC((char *)v42);
  }
}

void sub_24C7C3418(unsigned __int8 *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v103 = a3;
  uint64_t v5 = sub_24C8494F0();
  uint64_t v102 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v8 = *a1;
  char v9 = a1[1];
  uint64_t v11 = *((void *)a1 + 1);
  unint64_t v10 = *((void *)a1 + 2);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong;
    if (*(unsigned char *)(Strong + 48) == 2)
    {
      if (v8 < 2) {
        char v14 = 1;
      }
      else {
        char v14 = v9;
      }
      if (v14)
      {
        if (qword_2697EE9E8 != -1) {
          swift_once();
        }
        uint64_t v15 = sub_24C849590();
        uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)qword_2697F70A0);
        sub_24C7D60D0(v11, v10);
        sub_24C7D60D0(v11, v10);
        sub_24C7D60D0(v11, v10);
        sub_24C7D60D0(v11, v10);
        uint64_t v102 = v16;
        unint64_t v17 = sub_24C849570();
        os_log_type_t v18 = sub_24C84A110();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v100 = v13;
          v101 = a2;
          uint64_t v19 = swift_slowAlloc();
          uint64_t v99 = swift_slowAlloc();
          unint64_t v107 = v99;
          *(_DWORD *)uint64_t v19 = 136315394;
          uint64_t v20 = sub_24C849340();
          v104[0] = sub_24C7DE68C(v20, v21, (uint64_t *)&v107);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          sub_24C7D5FEC(v11, v10);
          sub_24C7D5FEC(v11, v10);
          *(_WORD *)(v19 + 12) = 2080;
          if (v9)
          {
            unint64_t v22 = 0xE300000000000000;
            uint64_t v23 = 7104878;
          }
          else
          {
            LOBYTE(v104[0]) = v8;
            uint64_t v23 = sub_24C849ED0();
            unint64_t v22 = v57;
          }
          v104[0] = sub_24C7DE68C(v23, v22, (uint64_t *)&v107);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          sub_24C7D5FEC(v11, v10);
          sub_24C7D5FEC(v11, v10);
          _os_log_impl(&dword_24C7BE000, v17, v18, "[SPAKE2 Share] Received shareV=%s, protocol-version=%s", (uint8_t *)v19, 0x16u);
          uint64_t v58 = v99;
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v58, -1, -1);
          MEMORY[0x2532FCCC0](v19, -1, -1);

          a2 = v101;
        }
        else
        {
          sub_24C7D5FEC(v11, v10);
          sub_24C7D5FEC(v11, v10);
          sub_24C7D5FEC(v11, v10);
          sub_24C7D5FEC(v11, v10);
        }
        unint64_t v59 = sub_24C849570();
        os_log_type_t v60 = sub_24C84A0F0();
        if (os_log_type_enabled(v59, v60))
        {
          uint64_t v61 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v61 = 16777472;
          LOBYTE(v107) = 2;
          sub_24C84A1A0();
          _os_log_impl(&dword_24C7BE000, v59, v60, "[SPAKE2 Share] Version mismatch, expected protocol-version >= %hhu", v61, 5u);
          MEMORY[0x2532FCCC0](v61, -1, -1);
        }

        sub_24C7D6EEC();
        v62 = (void *)swift_allocError();
        _OWORD *v63 = xmmword_24C84AFE0;
        unint64_t v107 = (unint64_t)v62;
        uint64_t v108 = 0;
        char v109 = 1;
        a2(&v107);

        LOBYTE(v107) = 6;
        uint64_t v46 = 0xD000000000000040;
        unint64_t v47 = "Remote TransferClient must support protocol-version v2 or higher";
        goto LABEL_35;
      }
      v101 = a2;
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_24C849590();
      uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_2697F70A0);
      sub_24C7D60D0(v11, v10);
      sub_24C7D60D0(v11, v10);
      uint64_t v34 = sub_24C849570();
      os_log_type_t v35 = sub_24C84A110();
      BOOL v36 = os_log_type_enabled(v34, v35);
      uint64_t v99 = v33;
      if (v36)
      {
        uint64_t v37 = swift_slowAlloc();
        unint64_t v98 = swift_slowAlloc();
        unint64_t v107 = v98;
        *(_DWORD *)uint64_t v37 = 136315394;
        uint64_t v100 = v13;
        uint64_t v38 = sub_24C849340();
        v104[0] = sub_24C7DE68C(v38, v39, (uint64_t *)&v107);
        uint64_t v13 = v100;
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C7D5FEC(v11, v10);
        sub_24C7D5FEC(v11, v10);
        *(_WORD *)(v37 + 12) = 256;
        LOBYTE(v104[0]) = v8;
        sub_24C84A1A0();
        _os_log_impl(&dword_24C7BE000, v34, v35, "[SPAKE2 Share] Received shareV=%s, protocol-version=%hhu", (uint8_t *)v37, 0xFu);
        unint64_t v40 = v98;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v40, -1, -1);
        MEMORY[0x2532FCCC0](v37, -1, -1);
      }
      else
      {
        sub_24C7D5FEC(v11, v10);
        sub_24C7D5FEC(v11, v10);
      }

      uint64_t v43 = *(void *)(v13 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationCount);
      uint64_t v44 = v43 + 1;
      if (__OFADD__(v43, 1))
      {
        __break(1u);
        return;
      }
      *(void *)(v13 + OBJC_IVAR____TtC5Cosmo12TransferHost_attestationCount) = v44;
      unint64_t v45 = *(void *)(v13 + 64);
      if (v45 >> 60 == 15)
      {
        LOBYTE(v107) = 0;
        uint64_t v46 = 0xD000000000000037;
        unint64_t v47 = "Cannot instantiate Spake2Verifier, missing SharedSecret";
LABEL_35:
        sub_24C7C2EA8((unsigned __int8 *)&v107, v46, (unint64_t)(v47 - 32) | 0x8000000000000000);
        swift_release();
        return;
      }
      uint64_t v48 = *(void *)(v13 + 56);
      sub_24C7D60D0(v48, *(void *)(v13 + 64));
      uint64_t v49 = sub_24C837C3C(v48, v45);
      unint64_t v98 = v45;
      uint64_t v50 = v49;
      unint64_t v52 = v51;
      type metadata accessor for Spake2Prover(0);
      swift_allocObject();
      uint64_t v53 = sub_24C836BD4(v50, v52, v44);
      if (v53)
      {
        uint64_t v54 = v53;
        uint64_t v97 = v48;
        *(void *)(v13 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2Prover) = v53;
        swift_retain();
        swift_release();
        uint64_t v55 = v54 + OBJC_IVAR____TtC5Cosmo12Spake2Prover_prover;
        swift_beginAccess();
        uint64_t v56 = v102;
        (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v7, v55, v5);
        swift_retain_n();
        uint64_t v96 = v54;
        uint64_t v65 = sub_24C8494E0();
        unint64_t v67 = v66;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v5);
        swift_beginAccess();
        uint64_t v68 = v65;
        uint64_t v69 = v65;
        unint64_t v70 = v67;
        sub_24C7D60D0(v69, v67);
        uint64_t v71 = sub_24C8494C0();
        uint64_t v73 = v72;
        swift_endAccess();
        v74 = (uint64_t *)(v13 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm);
        uint64_t v75 = *(void *)(v13 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm);
        unint64_t v76 = *(void *)(v13 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm + 8);
        uint64_t *v74 = v71;
        v74[1] = v73;
        sub_24C7D6044(v75, v76);
        uint64_t v77 = v68;
        sub_24C7D60D0(v68, v70);
        sub_24C7D60D0(v68, v70);
        v78 = sub_24C849570();
        os_log_type_t v79 = sub_24C84A110();
        BOOL v80 = os_log_type_enabled(v78, v79);
        uint64_t v100 = v13;
        if (v80)
        {
          uint64_t v81 = swift_slowAlloc();
          uint64_t v102 = swift_slowAlloc();
          v104[0] = v102;
          *(_DWORD *)uint64_t v81 = 136315394;
          uint64_t v82 = sub_24C849340();
          uint64_t v106 = sub_24C7DE68C(v82, v83, v104);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          sub_24C7D5FEC(v68, v70);
          sub_24C7D5FEC(v68, v70);
          *(_WORD *)(v81 + 12) = 2080;
          uint64_t v84 = sub_24C7C5048();
          uint64_t v106 = sub_24C7DE68C(v84, v85, v104);
          sub_24C84A1A0();
          uint64_t v77 = v68;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24C7BE000, v78, v79, "[SPAKE2 Share] Computed confirmP=%s, %s", (uint8_t *)v81, 0x16u);
          uint64_t v86 = v102;
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v86, -1, -1);
          MEMORY[0x2532FCCC0](v81, -1, -1);
        }
        else
        {
          sub_24C7D5FEC(v68, v70);
          sub_24C7D5FEC(v68, v70);
        }

        sub_24C7D60D0(v77, v70);
        sub_24C7D60D0(v77, v70);
        v87 = sub_24C849570();
        os_log_type_t v88 = sub_24C84A110();
        if (os_log_type_enabled(v87, v88))
        {
          uint64_t v89 = swift_slowAlloc();
          uint64_t v90 = swift_slowAlloc();
          v104[0] = v90;
          *(_DWORD *)uint64_t v89 = 136315394;
          uint64_t v91 = sub_24C849340();
          uint64_t v106 = sub_24C7DE68C(v91, v92, v104);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          sub_24C7D5FEC(v68, v70);
          sub_24C7D5FEC(v68, v70);
          *(_WORD *)(v89 + 12) = 2080;
          uint64_t v93 = sub_24C7C5048();
          uint64_t v106 = sub_24C7DE68C(v93, v94, v104);
          sub_24C84A1A0();
          uint64_t v77 = v68;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24C7BE000, v87, v88, "[SPAKE2 Share] Sending shareP=%s %s", (uint8_t *)v89, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v90, -1, -1);
          MEMORY[0x2532FCCC0](v89, -1, -1);
        }
        else
        {
          sub_24C7D5FEC(v77, v70);
          sub_24C7D5FEC(v77, v70);
        }

        uint64_t v95 = v97;
        v104[0] = v77;
        v104[1] = v70;
        char v105 = 0;
        v101(v104);
        sub_24C7D5FEC(v77, v70);
        LOBYTE(v104[0]) = 4;
        sub_24C7C10E8((char *)v104);
        sub_24C7D5FEC(v77, v70);
        sub_24C7D6044(v95, v98);
        swift_release();
        swift_release_n();
        return;
      }
      sub_24C7D6EEC();
      uint64_t v41 = (void *)swift_allocError();
      void *v64 = 0xD00000000000001DLL;
      v64[1] = 0x800000024C84F230;
      unint64_t v107 = (unint64_t)v41;
      uint64_t v108 = 0;
      char v109 = 1;
      v101(&v107);
      sub_24C7D6044(v48, v98);
    }
    else
    {
      uint64_t v24 = (void (*)(unint64_t *))a2;
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_24C849590();
      __swift_project_value_buffer(v25, (uint64_t)qword_2697F70A0);
      swift_retain_n();
      char v26 = sub_24C849570();
      os_log_type_t v27 = sub_24C84A110();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        unint64_t v107 = v29;
        *(_DWORD *)uint64_t v28 = 136315138;
        LOBYTE(v104[0]) = *(unsigned char *)(v13 + 48);
        unint64_t v30 = TransferHost.State.description.getter();
        v104[0] = sub_24C7DE68C(v30, v31, (uint64_t *)&v107);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v26, v27, "[SPAKE2 Share] Ignoring request, state=%s", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v29, -1, -1);
        MEMORY[0x2532FCCC0](v28, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      sub_24C7D6EEC();
      uint64_t v41 = (void *)swift_allocError();
      void *v42 = 0xD000000000000035;
      v42[1] = 0x800000024C84F160;
      unint64_t v107 = (unint64_t)v41;
      uint64_t v108 = 0;
      char v109 = 1;
      v24(&v107);
    }
    swift_release();
  }
}

void sub_24C7C4508(uint64_t *a1, void (*a2)(uint64_t *))
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    if (*(unsigned char *)(Strong + 48) != 4)
    {
      uint64_t v17 = qword_2697EE9E8;
      swift_retain_n();
      if (v17 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_24C849590();
      __swift_project_value_buffer(v18, (uint64_t)qword_2697F70A0);
      uint64_t v19 = sub_24C849570();
      os_log_type_t v20 = sub_24C84A110();
      if (os_log_type_enabled(v19, v20))
      {
        unint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        uint64_t v52 = v22;
        *(_DWORD *)unint64_t v21 = 136315138;
        uint64_t v23 = sub_24C7C5048();
        uint64_t v55 = sub_24C7DE68C(v23, v24, &v52);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v19, v20, "[SPAKE2 Confirm] Ignoring request, %s", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v22, -1, -1);
        MEMORY[0x2532FCCC0](v21, -1, -1);
      }

      sub_24C7D6EEC();
      uint64_t v25 = swift_allocError();
      *char v26 = 0xD000000000000037;
      v26[1] = 0x800000024C84F280;
      uint64_t v52 = v25;
      unint64_t v53 = 0;
      char v54 = 1;
      a2(&v52);
      goto LABEL_17;
    }
    if (!*(void *)(Strong + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2Prover))
    {
      sub_24C7D6EEC();
      uint64_t v27 = swift_allocError();
      *uint64_t v28 = 0xD000000000000014;
      v28[1] = 0x800000024C84F2C0;
      uint64_t v52 = v27;
      unint64_t v53 = 0;
      char v54 = 1;
      swift_retain();
      a2(&v52);
      swift_release_n();
      uint64_t v29 = (void *)v27;
LABEL_18:

      return;
    }
    uint64_t v7 = qword_2697EE9E8;
    swift_retain_n();
    swift_retain();
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_24C849590();
    __swift_project_value_buffer(v8, (uint64_t)qword_2697F70A0);
    sub_24C7D60D0(v3, v4);
    sub_24C7D60D0(v3, v4);
    char v9 = sub_24C849570();
    os_log_type_t v10 = sub_24C84A110();
    unint64_t v51 = a2;
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v52 = v12;
      *(_DWORD *)uint64_t v11 = 136315394;
      uint64_t v13 = sub_24C849340();
      uint64_t v55 = sub_24C7DE68C(v13, v14, &v52);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D5FEC(v3, v4);
      sub_24C7D5FEC(v3, v4);
      *(_WORD *)(v11 + 12) = 2080;
      uint64_t v15 = sub_24C7C5048();
      uint64_t v55 = sub_24C7DE68C(v15, v16, &v52);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v9, v10, "[SPAKE2 Confirm] Received confirmV=%s, %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v12, -1, -1);
      MEMORY[0x2532FCCC0](v11, -1, -1);
    }
    else
    {
      sub_24C7D5FEC(v3, v4);
      sub_24C7D5FEC(v3, v4);
    }

    unint64_t v30 = (uint64_t *)(v6 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm);
    unint64_t v31 = *(void *)(v6 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm + 8);
    if (v31 >> 60 == 15)
    {
      sub_24C7D6EEC();
      uint64_t v25 = swift_allocError();
      *uint64_t v32 = 0xD00000000000001CLL;
      v32[1] = 0x800000024C84F2E0;
      uint64_t v52 = v25;
      unint64_t v53 = 0;
      char v54 = 1;
      a2(&v52);
      swift_release();
LABEL_17:
      swift_release_n();
      uint64_t v29 = (void *)v25;
      goto LABEL_18;
    }
    uint64_t v33 = *v30;
    sub_24C7D7304(*v30, *(void *)(v6 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2ProverConfirm + 8));
    sub_24C7D7304(v33, v31);
    sub_24C7D60D0(v33, v31);
    uint64_t v34 = sub_24C849570();
    os_log_type_t v35 = sub_24C84A110();
    uint64_t v50 = v33;
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v52 = v49;
      *(_DWORD *)uint64_t v36 = 136315394;
      uint64_t v37 = sub_24C849340();
      uint64_t v55 = sub_24C7DE68C(v37, v38, &v52);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D6044(v33, v31);
      sub_24C7D6044(v33, v31);
      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v39 = sub_24C7C5048();
      uint64_t v55 = sub_24C7DE68C(v39, v40, &v52);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v34, v35, "[SPAKE2 Confirm] Sending confirmP=%s %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v49, -1, -1);
      MEMORY[0x2532FCCC0](v36, -1, -1);
    }
    else
    {
      sub_24C7D6044(v33, v31);
      sub_24C7D6044(v33, v31);
    }

    uint64_t v52 = v33;
    unint64_t v53 = v31;
    char v54 = 0;
    sub_24C7D60D0(v33, v31);
    v51(&v52);
    sub_24C7D6044(v33, v31);
    sub_24C8371EC(v3, v4);
    uint64_t v41 = sub_24C849570();
    os_log_type_t v42 = sub_24C84A110();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v52 = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      uint64_t v45 = sub_24C7C5048();
      uint64_t v55 = sub_24C7DE68C(v45, v46, &v52);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v41, v42, "[SPAKE2 Confirm] Seed validated, %s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v44, -1, -1);
      MEMORY[0x2532FCCC0](v43, -1, -1);
    }

    LOBYTE(v52) = 5;
    sub_24C7C10E8((char *)&v52);
    swift_beginAccess();
    if (MEMORY[0x2532FCD70](v6 + 32))
    {
      uint64_t v47 = *(void *)(v6 + 40);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 8))(v6, ObjectType, v47);
      swift_release_n();
      sub_24C7D6044(v50, v31);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release_n();
      sub_24C7D6044(v50, v31);
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_24C7C5048()
{
  return 0x612D747365747461;
}

void sub_24C7C5138(uint64_t *a1, void (*a2)(unsigned char **), uint64_t a3)
{
  uint64_t v223 = *MEMORY[0x263EF8340];
  uint64_t v216 = sub_24C849590();
  uint64_t v212 = *(void *)(v216 - 8);
  MEMORY[0x270FA5388](v216);
  v211 = (char *)&v189 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB00);
  MEMORY[0x270FA5388](v7 - 8);
  v214 = (char *)&v189 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEAF8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v210 = (uint64_t)&v189 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v213 = (uint64_t)&v189 - v12;
  uint64_t v13 = sub_24C849440();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v209 = (char *)&v189 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v215 = (char *)&v189 - v18;
  MEMORY[0x270FA5388](v17);
  os_log_type_t v20 = (char *)&v189 - v19;
  uint64_t v22 = *a1;
  unint64_t v21 = a1[1];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v24 = Strong;
    if (*(unsigned char *)(Strong + 48) == 5)
    {
      v205 = v20;
      uint64_t v25 = *(void *)(Strong + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2Prover);
      if (v25)
      {
        uint64_t v204 = v14;
        uint64_t v203 = v13;
        uint64_t v26 = qword_2697EE9E8;
        swift_retain();
        if (v26 != -1) {
          swift_once();
        }
        uint64_t v27 = __swift_project_value_buffer(v216, (uint64_t)qword_2697F70A0);
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        uint64_t v208 = v27;
        uint64_t v28 = sub_24C849570();
        os_log_type_t v29 = sub_24C84A110();
        BOOL v30 = os_log_type_enabled(v28, v29);
        uint64_t v206 = v25;
        if (v30)
        {
          uint64_t v31 = swift_slowAlloc();
          v202 = (unsigned char *)swift_slowAlloc();
          v218 = v202;
          *(_DWORD *)uint64_t v31 = 136315394;
          swift_bridgeObjectRetain();
          uint64_t v217 = sub_24C7DE68C(v22, v21, (uint64_t *)&v218);
          sub_24C84A1A0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v31 + 12) = 2080;
          LOBYTE(v217) = *(unsigned char *)(v24 + 48);
          unint64_t v32 = TransferHost.State.description.getter();
          uint64_t v217 = sub_24C7DE68C(v32, v33, (uint64_t *)&v218);
          sub_24C84A1A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24C7BE000, v28, v29, "[FileTransferSetup] Received encryptedRemotePublicKey=%s, state=%s", (uint8_t *)v31, 0x16u);
          uint64_t v34 = (uint64_t)v202;
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v34, -1, -1);
          MEMORY[0x2532FCCC0](v31, -1, -1);
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        uint64_t v48 = sub_24C8492F0();
        if (v49 >> 60 == 15)
        {
          uint64_t v50 = sub_24C849570();
          os_log_type_t v51 = sub_24C84A0F0();
          if (os_log_type_enabled(v50, v51))
          {
            uint64_t v52 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v52 = 0;
            _os_log_impl(&dword_24C7BE000, v50, v51, "[FileTransferSetup] Failed to deserialize encryptedRemotePublicKey from base64", v52, 2u);
            MEMORY[0x2532FCCC0](v52, -1, -1);
          }

          sub_24C7D6EEC();
          uint64_t v45 = (unsigned char *)swift_allocError();
          *unint64_t v53 = 0xD00000000000002DLL;
          v53[1] = 0x800000024C84F340;
          v218 = v45;
          unint64_t v219 = 0;
          v220 = 0;
          unint64_t v221 = 0;
          char v222 = 1;
          a2(&v218);
        }
        else
        {
          uint64_t v54 = v48;
          unint64_t v55 = v49;
          unint64_t v56 = sub_24C8358A8(v48, v49);
          v202 = (unsigned char *)v54;
          unint64_t v58 = v57;
          uint64_t v199 = a3;
          if (v57 >> 60 != 15)
          {
            uint64_t v66 = v56;
            sub_24C7D7304(v56, v57);
            swift_retain();
            sub_24C7D7304(v66, v58);
            swift_retain();
            sub_24C7D7304(v66, v58);
            unint64_t v198 = v58;
            unint64_t v67 = sub_24C849570();
            os_log_type_t v68 = sub_24C84A110();
            BOOL v69 = os_log_type_enabled(v67, v68);
            unint64_t v201 = v55;
            uint64_t v195 = v66;
            v192 = 0;
            if (v69)
            {
              os_log_type_t v70 = v68;
              uint64_t v71 = swift_slowAlloc();
              uint64_t v72 = (unsigned char *)swift_slowAlloc();
              v218 = v72;
              *(_DWORD *)uint64_t v71 = 136315394;
              unint64_t v73 = v198;
              uint64_t v74 = sub_24C849340();
              uint64_t v217 = sub_24C7DE68C(v74, v75, (uint64_t *)&v218);
              sub_24C84A1A0();
              swift_bridgeObjectRelease();
              sub_24C7D6044(v66, v73);
              sub_24C7D6044(v66, v73);
              *(_WORD *)(v71 + 12) = 2080;
              LOBYTE(v217) = *(unsigned char *)(v24 + 48);
              unint64_t v76 = TransferHost.State.description.getter();
              uint64_t v217 = sub_24C7DE68C(v76, v77, (uint64_t *)&v218);
              sub_24C84A1A0();
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24C7BE000, v67, v70, "[FileTransferSetup] Finished decryption, remotePublicKey=%s state=%s", (uint8_t *)v71, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x2532FCCC0](v72, -1, -1);
              MEMORY[0x2532FCCC0](v71, -1, -1);
            }
            else
            {
              unint64_t v79 = v198;
              sub_24C7D6044(v66, v198);
              sub_24C7D6044(v66, v79);

              swift_release_n();
            }
            uint64_t v200 = v24;
            KeyPair = createKeyPair((void *)*MEMORY[0x263F16FB8], 256);
            v194 = secIdentityFromKeyPair(KeyPair);
            id v80 = publicKeyFromIdentity(v194);
            uint64_t v81 = sub_24C849350();
            unint64_t v197 = v82;

            uint64_t v196 = v81;
            uint64_t v190 = sub_24C849340();
            unint64_t v191 = v83;
            uint64_t v84 = v205;
            sub_24C849430();
            uint64_t v85 = v204;
            uint64_t v86 = *(void (**)(uint64_t, char *, uint64_t))(v204 + 16);
            uint64_t v87 = v213;
            uint64_t v88 = v203;
            v86(v213, v84, v203);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v87, 0, 1, v88);
            uint64_t v89 = v24 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferServiceUUID;
            swift_beginAccess();
            uint64_t v213 = v89;
            sub_24C7D75BC(v87, v89, &qword_2697EEAF8);
            swift_endAccess();
            uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0);
            uint64_t v91 = v214;
            unint64_t v92 = &v214[*(int *)(v90 + 96)];
            uint64_t v93 = *(int *)(v90 + 112);
            unsigned char *v214 = 1;
            unint64_t v94 = v198;
            v91[1] = v195;
            v91[2] = v94;
            v91[3] = v81;
            unint64_t v95 = v197;
            uint64_t v96 = v194;
            v91[4] = v197;
            v91[5] = v96;
            v86((uint64_t)v92, v84, v88);
            uint64_t v97 = (void (*)(char *, char *, uint64_t))v86;
            *((unsigned char *)v91 + v93) = 1;
            uint64_t v98 = v200;
            uint64_t v99 = type metadata accessor for NetworkDescriptor();
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v91, 0, 1, v99);
            uint64_t v100 = v98 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferDescriptor;
            swift_beginAccess();
            unint64_t v101 = v191;
            sub_24C7D60D0(v196, v95);
            swift_unknownObjectRetain();
            sub_24C7D75BC((uint64_t)v91, v100, (uint64_t *)&unk_2697EEB00);
            swift_endAccess();
            uint64_t v102 = v215;
            v97(v215, v205, v88);
            swift_retain_n();
            swift_bridgeObjectRetain();
            uint64_t v103 = sub_24C849570();
            os_log_type_t v104 = sub_24C84A110();
            BOOL v105 = os_log_type_enabled(v103, v104);
            v207 = a2;
            if (v105)
            {
              uint64_t v106 = swift_slowAlloc();
              v214 = (unsigned char *)swift_slowAlloc();
              v218 = v214;
              *(_DWORD *)uint64_t v106 = 136315650;
              swift_bridgeObjectRetain();
              uint64_t v217 = sub_24C7DE68C(v190, v101, (uint64_t *)&v218);
              sub_24C84A1A0();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v106 + 12) = 2080;
              sub_24C7D6128(&qword_2697EEC60, MEMORY[0x263F07508]);
              uint64_t v107 = sub_24C84A430();
              uint64_t v217 = sub_24C7DE68C(v107, v108, (uint64_t *)&v218);
              sub_24C84A1A0();
              swift_bridgeObjectRelease();
              v215 = *(char **)(v204 + 8);
              ((void (*)(char *, uint64_t))v215)(v102, v88);
              *(_WORD *)(v106 + 22) = 2080;
              LOBYTE(v217) = *(unsigned char *)(v200 + 48);
              unint64_t v109 = TransferHost.State.description.getter();
              uint64_t v217 = sub_24C7DE68C(v109, v110, (uint64_t *)&v218);
              sub_24C84A1A0();
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24C7BE000, v103, v104, "[FileTransferSetup] Generated localPublicKey=%s fileTransferServiceUUID=%s, state=%s", (uint8_t *)v106, 0x20u);
              v111 = v214;
              swift_arrayDestroy();
              MEMORY[0x2532FCCC0](v111, -1, -1);
              MEMORY[0x2532FCCC0](v106, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
              v215 = *(char **)(v204 + 8);
              ((void (*)(char *, uint64_t))v215)(v102, v88);

              swift_release_n();
            }
            v112 = v192;
            uint64_t v113 = sub_24C8353A0(v196, v197);
            if (v112)
            {
              v115 = v207;
              swift_retain();
              id v116 = v112;
              swift_retain();
              id v117 = v112;
              v118 = sub_24C849570();
              os_log_type_t v119 = sub_24C84A0F0();
              BOOL v120 = os_log_type_enabled(v118, v119);
              uint64_t v121 = v203;
              if (v120)
              {
                uint64_t v122 = swift_slowAlloc();
                v123 = (unsigned char *)swift_slowAlloc();
                uint64_t v217 = (uint64_t)v112;
                v218 = v123;
                *(_DWORD *)uint64_t v122 = 136315394;
                id v124 = v112;
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
                uint64_t v125 = sub_24C849ED0();
                uint64_t v217 = sub_24C7DE68C(v125, v126, (uint64_t *)&v218);
                sub_24C84A1A0();
                swift_bridgeObjectRelease();

                *(_WORD *)(v122 + 12) = 2080;
                LOBYTE(v217) = *(unsigned char *)(v200 + 48);
                unint64_t v127 = TransferHost.State.description.getter();
                uint64_t v217 = sub_24C7DE68C(v127, v128, (uint64_t *)&v218);
                sub_24C84A1A0();
                swift_release_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_24C7BE000, v118, v119, "[FileTransferSetup] Failed to encrypt publicKey, error=%s %s", (uint8_t *)v122, 0x16u);
                swift_arrayDestroy();
                uint64_t v121 = v203;
                MEMORY[0x2532FCCC0](v123, -1, -1);
                MEMORY[0x2532FCCC0](v122, -1, -1);
              }
              else
              {

                swift_release_n();
              }
              unint64_t v141 = v201;
              v142 = KeyPair;
              v143 = (void (*)(char *, uint64_t))v215;
              sub_24C7D6EEC();
              uint64_t v45 = (unsigned char *)swift_allocError();
              void *v144 = 0xD00000000000001ELL;
              v144[1] = 0x800000024C84F3C0;
              v218 = v45;
              unint64_t v219 = 0;
              v220 = 0;
              unint64_t v221 = 0;
              char v222 = 1;
              v115(&v218);
              sub_24C7D6044(v195, v198);

              sub_24C7D6044((uint64_t)v202, v141);
              swift_release();

              swift_unknownObjectRelease();
              sub_24C7D5FEC(v196, v197);
              swift_release();
              v143(v205, v121);
            }
            else
            {
              unint64_t v129 = v114;
              if (v114 >> 60 != 15)
              {
                uint64_t v145 = v113;
                v218 = (unsigned char *)sub_24C849420();
                LOWORD(v219) = v146;
                BYTE2(v219) = v147;
                BYTE3(v219) = v148;
                BYTE4(v219) = v149;
                BYTE5(v219) = v150;
                BYTE6(v219) = v151;
                HIBYTE(v219) = v152;
                uint64_t v154 = sub_24C808750((uint64_t)&v218, (uint64_t)&v220);
                unint64_t v155 = v153;
                uint64_t v157 = sub_24C8353A0(v154, v153);
                unint64_t v159 = v158;
                sub_24C7D5FEC(v154, v155);
                if (v159 >> 60 != 15)
                {
                  uint64_t v160 = sub_24C849340();
                  unint64_t v162 = v161;
                  v214 = (unsigned char *)sub_24C849340();
                  unint64_t v164 = v163;
                  sub_24C7D6044(v157, v159);
                  sub_24C7D6044(v145, v129);
                  uint64_t v165 = v200;
                  swift_retain_n();
                  swift_bridgeObjectRetain_n();
                  swift_bridgeObjectRetain_n();
                  v166 = sub_24C849570();
                  os_log_type_t v167 = sub_24C84A110();
                  if (os_log_type_enabled(v166, v167))
                  {
                    uint64_t v168 = swift_slowAlloc();
                    v169 = (unsigned char *)swift_slowAlloc();
                    v218 = v169;
                    *(_DWORD *)uint64_t v168 = 136315650;
                    swift_bridgeObjectRetain();
                    uint64_t v217 = sub_24C7DE68C(v160, v162, (uint64_t *)&v218);
                    sub_24C84A1A0();
                    swift_bridgeObjectRelease_n();
                    v192 = (void *)v160;
                    *(_WORD *)(v168 + 12) = 2080;
                    swift_bridgeObjectRetain();
                    uint64_t v217 = sub_24C7DE68C((uint64_t)v214, v164, (uint64_t *)&v218);
                    sub_24C84A1A0();
                    swift_bridgeObjectRelease_n();
                    *(_WORD *)(v168 + 22) = 2080;
                    LOBYTE(v217) = *(unsigned char *)(v165 + 48);
                    unint64_t v170 = TransferHost.State.description.getter();
                    uint64_t v217 = sub_24C7DE68C(v170, v171, (uint64_t *)&v218);
                    sub_24C84A1A0();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_24C7BE000, v166, v167, "[FileTransferSetup] Sending encryptedLocalPublicKey=%s encryptedServiceUUID=%s, state=%s", (uint8_t *)v168, 0x20u);
                    swift_arrayDestroy();
                    MEMORY[0x2532FCCC0](v169, -1, -1);
                    MEMORY[0x2532FCCC0](v168, -1, -1);

                    v172 = v192;
                  }
                  else
                  {

                    swift_release_n();
                    swift_bridgeObjectRelease_n();
                    swift_bridgeObjectRelease_n();
                    v172 = (unsigned char *)v160;
                  }
                  v173 = v205;
                  uint64_t v174 = v216;
                  uint64_t v175 = v212;
                  v218 = v172;
                  unint64_t v219 = v162;
                  v220 = v214;
                  unint64_t v221 = v164;
                  char v222 = 0;
                  v207(&v218);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v176 = v211;
                  (*(void (**)(char *, uint64_t, uint64_t))(v175 + 16))(v211, v208, v174);
                  swift_retain_n();
                  v177 = sub_24C849570();
                  os_log_type_t v178 = sub_24C84A110();
                  if (os_log_type_enabled(v177, v178))
                  {
                    v179 = (uint8_t *)swift_slowAlloc();
                    v180 = (unsigned char *)swift_slowAlloc();
                    v218 = v180;
                    *(_DWORD *)v179 = 136315138;
                    uint64_t v181 = v210;
                    sub_24C7D7BA4(v213, v210, &qword_2697EEAF8);
                    uint64_t v182 = v203;
                    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48))(v181, 1, v203) == 1)
                    {
                      swift_release();
                      __break(1u);
                      return;
                    }
                    v183 = v209;
                    (*(void (**)(char *, uint64_t, uint64_t))(v204 + 32))(v209, v181, v182);
                    sub_24C7D6128(&qword_2697EEC60, MEMORY[0x263F07508]);
                    uint64_t v184 = sub_24C84A430();
                    unint64_t v186 = v185;
                    v187 = v183;
                    v188 = (void (*)(char *, uint64_t))v215;
                    ((void (*)(char *, uint64_t))v215)(v187, v182);
                    uint64_t v217 = sub_24C7DE68C(v184, v186, (uint64_t *)&v218);
                    sub_24C84A1A0();
                    swift_release_n();
                    swift_bridgeObjectRelease();
                    _os_log_impl(&dword_24C7BE000, v177, v178, "Starting file-transfer-host with Bonjour fileTransferServiceUUID=%s", v179, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x2532FCCC0](v180, -1, -1);
                    MEMORY[0x2532FCCC0](v179, -1, -1);

                    (*(void (**)(char *, uint64_t))(v212 + 8))(v211, v216);
                    v173 = v205;
                  }
                  else
                  {

                    swift_release_n();
                    (*(void (**)(char *, uint64_t))(v175 + 8))(v176, v174);
                    uint64_t v182 = v203;
                    v188 = (void (*)(char *, uint64_t))v215;
                  }
                  sub_24C7C7120();
                  sub_24C7D6044(v195, v198);

                  sub_24C7D6044((uint64_t)v202, v201);
                  swift_unknownObjectRelease();
                  swift_release();
                  sub_24C7D5FEC(v196, v197);
                  swift_release();
                  v188(v173, v182);
                  return;
                }
                sub_24C7D6044(v145, v129);
              }
              swift_retain_n();
              v130 = sub_24C849570();
              os_log_type_t v131 = sub_24C84A0F0();
              if (os_log_type_enabled(v130, v131))
              {
                v132 = (uint8_t *)swift_slowAlloc();
                v133 = (unsigned char *)swift_slowAlloc();
                v218 = v133;
                *(_DWORD *)v132 = 136315138;
                LOBYTE(v217) = *(unsigned char *)(v200 + 48);
                unint64_t v134 = TransferHost.State.description.getter();
                uint64_t v217 = sub_24C7DE68C(v134, v135, (uint64_t *)&v218);
                uint64_t v136 = v203;
                sub_24C84A1A0();
                swift_release_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_24C7BE000, v130, v131, "[FileTransferSetup] Spake2Prover.encrypt() returned nil, %s", v132, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x2532FCCC0](v133, -1, -1);
                MEMORY[0x2532FCCC0](v132, -1, -1);

                v137 = v207;
                unint64_t v138 = v201;
                v139 = KeyPair;
                v140 = (void (*)(char *, uint64_t))v215;
              }
              else
              {

                swift_release_n();
                v137 = v207;
                unint64_t v138 = v201;
                v139 = KeyPair;
                v140 = (void (*)(char *, uint64_t))v215;
                uint64_t v136 = v203;
              }
              sub_24C7D6EEC();
              uint64_t v45 = (unsigned char *)swift_allocError();
              void *v156 = 0xD000000000000023;
              v156[1] = 0x800000024C84F3E0;
              v218 = v45;
              unint64_t v219 = 0;
              v220 = 0;
              unint64_t v221 = 0;
              char v222 = 1;
              v137(&v218);
              sub_24C7D6044(v195, v198);

              sub_24C7D6044((uint64_t)v202, v138);
              swift_unknownObjectRelease();
              swift_release();
              sub_24C7D5FEC(v196, v197);
              swift_release();
              v140(v205, v136);
            }
            goto LABEL_26;
          }
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          unint64_t v59 = sub_24C849570();
          uint64_t v60 = v24;
          os_log_type_t v61 = sub_24C84A0F0();
          if (os_log_type_enabled(v59, v61))
          {
            uint64_t v62 = swift_slowAlloc();
            v63 = (unsigned char *)swift_slowAlloc();
            v218 = v63;
            *(_DWORD *)uint64_t v62 = 136315394;
            swift_bridgeObjectRetain();
            uint64_t v217 = sub_24C7DE68C(v22, v21, (uint64_t *)&v218);
            sub_24C84A1A0();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v62 + 12) = 2080;
            LOBYTE(v217) = *(unsigned char *)(v60 + 48);
            unint64_t v64 = TransferHost.State.description.getter();
            uint64_t v217 = sub_24C7DE68C(v64, v65, (uint64_t *)&v218);
            sub_24C84A1A0();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24C7BE000, v59, v61, "[FileTransferSetup] Spake2Prover.decrypt() returned nil for encryptedRemotePublicKey=%s %s", (uint8_t *)v62, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x2532FCCC0](v63, -1, -1);
            MEMORY[0x2532FCCC0](v62, -1, -1);
          }
          else
          {

            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          sub_24C7D6EEC();
          uint64_t v45 = (unsigned char *)swift_allocError();
          void *v78 = 0xD000000000000023;
          v78[1] = 0x800000024C84F390;
          v218 = v45;
          unint64_t v219 = 0;
          v220 = 0;
          unint64_t v221 = 0;
          char v222 = 1;
          a2(&v218);
          sub_24C7D6044((uint64_t)v202, v55);
        }
        swift_release();
LABEL_25:
        swift_release();
LABEL_26:

        return;
      }
      sub_24C7D6EEC();
      uint64_t v43 = (unsigned char *)swift_allocError();
      uint64_t v45 = v43;
      unint64_t v46 = 0xD000000000000014;
      uint64_t v47 = "Missing Spake2Prover";
    }
    else
    {
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v216, (uint64_t)qword_2697F70A0);
      swift_retain_n();
      os_log_type_t v35 = sub_24C849570();
      os_log_type_t v36 = sub_24C84A0F0();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        unint64_t v38 = (unsigned char *)swift_slowAlloc();
        v207 = a2;
        uint64_t v39 = v24;
        unint64_t v40 = v38;
        v218 = v38;
        *(_DWORD *)uint64_t v37 = 136315138;
        LOBYTE(v217) = *(unsigned char *)(v39 + 48);
        unint64_t v41 = TransferHost.State.description.getter();
        uint64_t v217 = sub_24C7DE68C(v41, v42, (uint64_t *)&v218);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v35, v36, "[FileTransferSetup] Ignoring request, state=%s", v37, 0xCu);
        swift_arrayDestroy();
        a2 = v207;
        MEMORY[0x2532FCCC0](v40, -1, -1);
        MEMORY[0x2532FCCC0](v37, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      sub_24C7D6EEC();
      uint64_t v43 = (unsigned char *)swift_allocError();
      uint64_t v45 = v43;
      unint64_t v46 = 0xD00000000000003ALL;
      uint64_t v47 = "Received FileChannelSetupRequest while in unexpected state";
    }
    unint64_t *v44 = v46;
    v44[1] = (unint64_t)(v47 - 32) | 0x8000000000000000;
    v218 = v43;
    unint64_t v219 = 0;
    v220 = 0;
    unint64_t v221 = 0;
    char v222 = 1;
    a2(&v218);
    goto LABEL_25;
  }
}

uint64_t sub_24C7C7120()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB00);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NetworkDescriptor();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v35 = (uint64_t)&v33 - v10;
  uint64_t v11 = sub_24C849C80();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v1 + 16);
  void *v14 = v15;
  uint64_t v16 = *(void (**)(void))(v12 + 104);
  unsigned int v38 = *MEMORY[0x263F8F0E0];
  uint64_t v37 = (void (*)(void *, void, uint64_t))v16;
  v16(v14);
  id v34 = v15;
  LOBYTE(v15) = sub_24C849CA0();
  os_log_type_t v36 = *(uint64_t (**)(void *, uint64_t))(v12 + 8);
  uint64_t result = v36(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  uint64_t v18 = v1 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferDescriptor;
  swift_beginAccess();
  sub_24C7D7BA4(v18, (uint64_t)v4, (uint64_t *)&unk_2697EEB00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_24C7D7C08((uint64_t)v4, (uint64_t *)&unk_2697EEB00);
  }
  uint64_t v19 = v35;
  sub_24C7D79F0((uint64_t)v4, v35, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  sub_24C7D7AC4(v19, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoMultiplexChannelHost(0);
  swift_allocObject();
  id v20 = v34;
  id v21 = v34;
  uint64_t v22 = sub_24C847F24(0xD000000000000012, 0x800000024C84F410, (uint64_t)v9, v20);

  uint64_t v23 = OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost;
  *(void *)(v1 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost) = v22;
  swift_release();
  uint64_t v24 = *(void *)(v1 + v23);
  if (v24)
  {
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    swift_beginAccess();
    uint64_t v26 = *(void *)(v24 + 16);
    *(void *)(v24 + 16) = sub_24C7D7620;
    *(void *)(v24 + 24) = v25;
    sub_24C7D6F70(v26);
  }
  sub_24C7C2AC8();
  sub_24C7C2CB8();
  void *v14 = v21;
  v37(v14, v38, v11);
  id v27 = v21;
  char v28 = sub_24C849CA0();
  uint64_t result = v36(v14, v11);
  if ((v28 & 1) == 0) {
    goto LABEL_17;
  }
  if (*(void *)(v1 + v23))
  {
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_24C7D0FB8((uint64_t)sub_24C7D7658, v29, 0, 0, (uint64_t)&unk_26FEF1200, (uint64_t)sub_24C7D7664, (uint64_t)&block_descriptor_150, (void (*)(uint64_t, uint64_t))sub_24C7D8114);
    swift_release();
    swift_release();
  }
  sub_24C7C8F7C();
  void *v14 = v27;
  v37(v14, v38, v11);
  id v30 = v27;
  char v31 = sub_24C849CA0();
  uint64_t result = v36(v14, v11);
  if ((v31 & 1) == 0) {
    goto LABEL_18;
  }
  if (*(void *)(v1 + v23))
  {
    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_24C7D0FB8((uint64_t)sub_24C7D7650, v32, 0, 0, (uint64_t)&unk_26FEF12C8, (uint64_t)sub_24C7D78EC, (uint64_t)&block_descriptor_165, (void (*)(uint64_t, uint64_t))sub_24C7D8114);
    swift_release();
    swift_release();
  }
  char v39 = 6;
  sub_24C7C10E8(&v39);
  if (*(void *)(v1 + v23))
  {
    swift_retain();
    sub_24C83F7B4();
    swift_release();
  }
  return sub_24C7D7B2C(v19, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
}

Swift::Void __swiftcall TransferHost.setTransferFiles(_:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = sub_24C849BD0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24C849BF0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = v1[2];
  uint64_t v11 = (Swift::OpaquePointer *)swift_allocObject();
  v11[2]._rawValue = a1._rawValue;
  v11[3]._rawValue = v1;
  aBlock[4] = sub_24C7D6200;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_14;
  uint64_t v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24C849BE0();
  v13[1] = MEMORY[0x263F8EE78];
  sub_24C7D6128((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
}

void sub_24C7C7994(uint64_t a1, char *a2)
{
  uint64_t v158 = sub_24C849440();
  uint64_t v146 = *(void *)(v158 - 8);
  MEMORY[0x270FA5388](v158);
  uint64_t v5 = (char *)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEC48);
  uint64_t v6 = MEMORY[0x270FA5388](v155);
  uint64_t v154 = (uint64_t *)((char *)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unint64_t v161 = (uint64_t *)((char *)&v137 - v9);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v153 = (char *)&v137 - v11;
  MEMORY[0x270FA5388](v10);
  char v152 = (uint64_t *)((char *)&v137 - v12);
  uint64_t v13 = sub_24C8492C0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v143 = (char *)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  char v149 = (char *)&v137 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  char v151 = (char *)&v137 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v166 = (char *)&v137 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v137 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  char v28 = (uint8_t *)&v137 - v27;
  MEMORY[0x270FA5388](v26);
  id v30 = (char *)&v137 - v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  uint64_t v32 = MEMORY[0x270FA5388](v31 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v32);
  char v150 = (char *)&v137 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v156 = (char *)&v137 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v38 = MEMORY[0x270FA5388](v37);
  MEMORY[0x270FA5388](v38);
  uint64_t v43 = (char *)&v137 - v42;
  uint64_t v44 = *(char **)(a1 + 16);
  if (!v44) {
    return;
  }
  uint64_t v144 = v41;
  char v147 = v40;
  unint64_t v141 = v25;
  uint64_t v157 = v28;
  uint64_t v145 = v39;
  unint64_t v163 = v5;
  v139 = a2;
  uint64_t v159 = v14;
  uint64_t v45 = v14 + 16;
  v169 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v46 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v47 = *(void (***)(char *, char *, uint64_t))(v14 + 72);
  uint64_t v48 = (NSObject **)(v14 + 56);
  unint64_t v164 = v47;
  uint64_t v165 = (char **)(v45 + 32);
  unint64_t v49 = (void (**)(char *, char *, uint64_t))(v45 + 16);
  uint64_t v50 = (void (**)(char *, uint64_t))(v45 - 8);
  uint64_t v142 = a1;
  uint64_t v51 = v45;
  swift_bridgeObjectRetain();
  uint64_t v162 = v46;
  char v148 = v44;
  os_log_type_t v167 = v48;
  while (1)
  {
    v169(v43, v46, v13);
    uint64_t v168 = *v48;
    ((void (*)(char *, void, uint64_t, uint64_t))v168)(v43, 0, 1, v13);
    uint64_t v160 = *v165;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v160)(v43, 1, v13) == 1) {
      break;
    }
    uint64_t v52 = *v49;
    (*v49)(v30, v43, v13);
    if ((sub_24C849250() & 1) == 0)
    {
      unint64_t v164 = v49;
      swift_bridgeObjectRelease();
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_24C849590();
      __swift_project_value_buffer(v61, (uint64_t)qword_2697F70A0);
      uint64_t v62 = v157;
      v169((char *)v157, (uint64_t)v30, v13);
      v63 = v139;
      swift_retain_n();
      unint64_t v64 = sub_24C849570();
      int v65 = sub_24C84A0F0();
      if (os_log_type_enabled(v64, (os_log_type_t)v65))
      {
        LODWORD(v163) = v65;
        uint64_t v66 = swift_slowAlloc();
        uint64_t v162 = swift_slowAlloc();
        unint64_t v171 = (void *)v162;
        *(_DWORD *)uint64_t v66 = 136315394;
        unint64_t v67 = v147;
        v169((char *)v147, (uint64_t)v62, v13);
        ((void (*)(void *, void, uint64_t, uint64_t))v168)(v67, 0, 1, v13);
        uint64_t v68 = (uint64_t)v67;
        uint64_t v69 = v144;
        sub_24C7D7BA4(v68, v144, (uint64_t *)&unk_2697EEC50);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v160)(v69, 1, v13) == 1)
        {
          unint64_t v70 = 0xE300000000000000;
          uint64_t v71 = 7104878;
        }
        else
        {
          uint64_t v168 = v64;
          v130 = v141;
          v52(v141, (char *)v69, v13);
          v169(v166, (uint64_t)v130, v13);
          uint64_t v71 = sub_24C849ED0();
          unint64_t v70 = v131;
          v132 = v130;
          unint64_t v64 = v168;
          (*v50)(v132, v13);
        }
        sub_24C7D7C08((uint64_t)v147, (uint64_t *)&unk_2697EEC50);
        uint64_t v170 = sub_24C7DE68C(v71, v70, (uint64_t *)&v171);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        v133 = *v50;
        (*v50)((char *)v157, v13);
        *(_WORD *)(v66 + 12) = 2080;
        LOBYTE(v170) = v63[48];
        unint64_t v134 = TransferHost.State.description.getter();
        uint64_t v170 = sub_24C7DE68C(v134, v135, (uint64_t *)&v171);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v64, (os_log_type_t)v163, "[SetTransferFiles] Ignoring, non-file-url found url=%s, state=%s", (uint8_t *)v66, 0x16u);
        uint64_t v136 = v162;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v136, -1, -1);
        MEMORY[0x2532FCCC0](v66, -1, -1);

        v133(v30, v13);
      }
      else
      {
        swift_release_n();

        unint64_t v129 = *v50;
        (*v50)((char *)v62, v13);
        v129(v30, v13);
      }
      return;
    }
    (*v50)(v30, v13);
    v46 += (uint64_t)v164;
    --v44;
    uint64_t v48 = v167;
    if (!v44)
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v168)(v43, 1, 1, v13);
      break;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v53 = v139;
  uint64_t v138 = OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer;
  if (*(void *)(*(void *)&v139[OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer] + 16))
  {
    if (qword_2697EE9E8 != -1) {
      swift_once();
    }
    uint64_t v54 = sub_24C849590();
    __swift_project_value_buffer(v54, (uint64_t)qword_2697F70A0);
    swift_retain_n();
    unint64_t v55 = sub_24C849570();
    os_log_type_t v56 = sub_24C84A0F0();
    if (os_log_type_enabled(v55, v56))
    {
      unint64_t v57 = (uint8_t *)swift_slowAlloc();
      v166 = (char *)swift_slowAlloc();
      unint64_t v171 = v166;
      *(_DWORD *)unint64_t v57 = 136315138;
      uint64_t v157 = v57 + 4;
      LOBYTE(v170) = v53[48];
      unint64_t v58 = TransferHost.State.description.getter();
      uint64_t v170 = sub_24C7DE68C(v58, v59, (uint64_t *)&v171);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v55, v56, "[SetTransferFiles] Overriding fileURLs, state=%s", v57, 0xCu);
      uint64_t v60 = v166;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v60, -1, -1);
      MEMORY[0x2532FCCC0](v57, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  unint64_t v141 = (char *)(v146 + 16);
  v140 = (void (**)(unint64_t, char *, uint8_t *))(v159 + 40);
  unint64_t v72 = v146 + 8;
  swift_bridgeObjectRetain();
  v166 = 0;
  uint64_t v159 = MEMORY[0x263F8EE80];
  char v147 = (void *)v72;
  uint64_t v144 = v72 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v157 = (uint8_t *)v13;
  unint64_t v73 = v168;
  uint64_t v74 = (uint64_t)v156;
  uint64_t v75 = v162;
  while (1)
  {
    uint64_t v162 = v75;
    ((void (*)(uint64_t))v169)(v74);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v73)(v74, 0, 1, v13);
    unint64_t v77 = v160;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v160)(v74, 1, v13) == 1) {
      break;
    }
    unint64_t v79 = *v49;
    id v80 = v151;
    (*v49)(v151, (char *)v74, v13);
    uint64_t v81 = v155;
    unint64_t v82 = &v153[*(int *)(v155 + 48)];
    v79(v82, v80, v13);
    uint64_t v83 = v51;
    uint64_t v84 = v152;
    uint64_t v85 = (char *)v152 + *(int *)(v81 + 48);
    *char v152 = v166;
    v79(v85, v82, v13);
    uint64_t v86 = (uint64_t)v84;
    uint64_t v87 = v161;
    sub_24C7D7828(v86, (uint64_t)v161, &qword_2697EEC48);
    uint64_t v88 = (uint64_t)v163;
    sub_24C849430();
    uint64_t v89 = *(int *)(v81 + 48);
    uint64_t v90 = (char *)v154 + v89;
    uint64_t v91 = (char *)v87 + v89;
    uint64_t v92 = *v87;
    uint64_t v51 = v83;
    uint64_t v93 = (void (*)(char *, char *, uint64_t))v169;
    *uint64_t v154 = v92;
    v93(v90, v91, v13);
    uint64_t v94 = (uint64_t)v150;
    v79(v150, v90, v13);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v168)(v94, 0, 1, v13);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v77)(v94, 1, v13) == 1)
    {
      sub_24C7D7C08(v94, (uint64_t *)&unk_2697EEC50);
      uint64_t v95 = v159;
      swift_bridgeObjectRetain();
      unint64_t v96 = sub_24C805840(v88);
      char v98 = v97;
      swift_bridgeObjectRelease();
      uint64_t v99 = v145;
      uint64_t v100 = v158;
      if (v98)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v171 = (void *)v95;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_24C84733C();
          uint64_t v95 = (uint64_t)v171;
        }
        unint64_t v76 = *(void (**)(unint64_t, uint64_t))(v146 + 8);
        v76(*(void *)(v95 + 48) + *(void *)(v146 + 72) * v96, v100);
        uint64_t v102 = (uint64_t)v171;
        uint64_t v103 = v143;
        uint64_t v13 = (uint64_t)v157;
        v79(v143, (char *)(v171[7] + v96 * (void)v164), (uint64_t)v157);
        uint64_t v159 = v102;
        sub_24C7D67A4(v96, v102);
        swift_bridgeObjectRelease();
        v79((char *)v99, v103, v13);
        unint64_t v73 = v168;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v168)(v99, 0, 1, v13);
      }
      else
      {
        uint64_t v13 = (uint64_t)v157;
        unint64_t v73 = v168;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint8_t *))v168)(v145, 1, 1, v157);
        unint64_t v76 = (void (*)(unint64_t, uint64_t))*v147;
      }
      v76((unint64_t)v163, v100);
      sub_24C7D7C08(v99, (uint64_t *)&unk_2697EEC50);
      uint64_t v74 = (uint64_t)v156;
      unint64_t v77 = v148;
      goto LABEL_21;
    }
    v79(v149, (char *)v94, v13);
    uint64_t v104 = v159;
    int v105 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v171 = (void *)v104;
    unint64_t v107 = sub_24C805840(v88);
    uint64_t v108 = *(void *)(v104 + 16);
    BOOL v109 = (v106 & 1) == 0;
    uint64_t v110 = v108 + v109;
    if (__OFADD__(v108, v109))
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    char v111 = v106;
    if (*(void *)(v104 + 24) >= v110)
    {
      unint64_t v77 = v148;
      if (v105)
      {
        unint64_t v114 = v171;
        if ((v106 & 1) == 0) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_24C84733C();
        unint64_t v114 = v171;
        if ((v111 & 1) == 0) {
          goto LABEL_37;
        }
      }
    }
    else
    {
      sub_24C8460E0(v110, v105);
      unint64_t v112 = sub_24C805840((uint64_t)v163);
      unint64_t v77 = v148;
      if ((v111 & 1) != (v113 & 1))
      {
        sub_24C84A460();
        __break(1u);
        return;
      }
      unint64_t v107 = v112;
      unint64_t v114 = v171;
      if ((v111 & 1) == 0)
      {
LABEL_37:
        v114[(v107 >> 6) + 8] |= 1 << v107;
        uint64_t v115 = (uint64_t)v163;
        (*(void (**)(unint64_t, char *, uint64_t))(v146 + 16))(v114[6] + *(void *)(v146 + 72) * v107, v163, v158);
        v79((char *)(v114[7] + v107 * (void)v164), v149, (uint64_t)v157);
        uint64_t v116 = v114[2];
        BOOL v117 = __OFADD__(v116, 1);
        uint64_t v118 = v116 + 1;
        if (v117) {
          goto LABEL_51;
        }
        v114[2] = v118;
        uint64_t v13 = (uint64_t)v157;
        goto LABEL_39;
      }
    }
    uint64_t v13 = (uint64_t)v157;
    (*v140)(v114[7] + v107 * (void)v164, v149, v157);
    uint64_t v115 = (uint64_t)v163;
LABEL_39:
    uint64_t v159 = (uint64_t)v171;
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t))*v147)(v115, v158);
    unint64_t v73 = v168;
    uint64_t v74 = (uint64_t)v156;
LABEL_21:
    v78 = v166 + 1;
    sub_24C7D7C08((uint64_t)v161, &qword_2697EEC48);
    uint64_t v75 = (uint64_t)v164 + v162;
    v166 = v78;
    if (v77 == v78)
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v73)(v74, 1, 1, v13);
      break;
    }
  }
  sub_24C7D7C08(v74, (uint64_t *)&unk_2697EEC50);
  swift_bridgeObjectRelease();
  unint64_t v77 = v139;
  *(void *)&v139[v138] = v159;
  swift_bridgeObjectRelease();
  if (qword_2697EE9E8 == -1) {
    goto LABEL_43;
  }
LABEL_52:
  swift_once();
LABEL_43:
  uint64_t v119 = sub_24C849590();
  __swift_project_value_buffer(v119, (uint64_t)qword_2697F70A0);
  swift_retain_n();
  BOOL v120 = sub_24C849570();
  os_log_type_t v121 = sub_24C84A110();
  if (os_log_type_enabled(v120, v121))
  {
    uint64_t v122 = swift_slowAlloc();
    uint64_t v123 = swift_slowAlloc();
    unint64_t v171 = (void *)v123;
    *(_DWORD *)uint64_t v122 = 136315394;
    sub_24C7D6128(&qword_2697EF030, MEMORY[0x263F07508]);
    swift_bridgeObjectRetain();
    uint64_t v124 = sub_24C849E10();
    unint64_t v126 = v125;
    swift_bridgeObjectRelease();
    uint64_t v170 = sub_24C7DE68C(v124, v126, (uint64_t *)&v171);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v122 + 12) = 2080;
    LOBYTE(v170) = v77[48];
    unint64_t v127 = TransferHost.State.description.getter();
    uint64_t v170 = sub_24C7DE68C(v127, v128, (uint64_t *)&v171);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v120, v121, "[SetTransferFiles] Ready to serve files=%s, state=%s", (uint8_t *)v122, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v123, -1, -1);
    MEMORY[0x2532FCCC0](v122, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_24C7C8C00(char *a1, uint64_t a2, void (*a3)(char *))
{
  char v4 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v6 = v4;
    a3(&v6);
    return swift_release();
  }
  return result;
}

void sub_24C7C8C74(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v8 = *a1;
  uint64_t v9 = *(void **)(v2 + 16);
  *uint64_t v7 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v10 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  if (!*(void *)(v2 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost)) {
    return;
  }
  unsigned int v11 = *(unsigned __int8 *)(v2 + 48);
  if (v11 <= 9)
  {
    if (v8)
    {
      if (v11 == 6)
      {
        LOBYTE(v20) = 2;
        sub_24C7C2EA8((unsigned __int8 *)&v20, 0xD00000000000001ELL, 0x800000024C84F470);
      }
    }
    else
    {
      LOBYTE(v20) = 7;
      sub_24C7C10E8((char *)&v20);
    }
    return;
  }
  if (qword_2697EE9E8 != -1) {
    goto LABEL_14;
  }
LABEL_8:
  uint64_t v12 = sub_24C849590();
  __swift_project_value_buffer(v12, (uint64_t)qword_2697F70A0);
  swift_retain_n();
  uint64_t v13 = sub_24C849570();
  os_log_type_t v14 = sub_24C84A110();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v20 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    LOBYTE(v19) = *(unsigned char *)(v2 + 48);
    unint64_t v17 = TransferHost.State.description.getter();
    uint64_t v19 = sub_24C7DE68C(v17, v18, &v20);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v13, v14, "Stop detected, ignoring file-transfer-host state change, state=%s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v16, -1, -1);
    MEMORY[0x2532FCCC0](v15, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_24C7C8F7C()
{
  uint64_t v1 = sub_24C849C80();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + 16);
  void *v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F0E0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    if (*(void *)(v0 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost))
    {
      uint64_t v8 = swift_allocObject();
      swift_weakInit();
      uint64_t v9 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_24C7D0FB8((uint64_t)sub_24C7D799C, v8, (uint64_t)sub_24C7D79A4, v9, (uint64_t)&unk_26FEF1390, (uint64_t)sub_24C7D79B4, (uint64_t)&block_descriptor_182, (void (*)(uint64_t, uint64_t))sub_24C7D8114);
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24C7C916C(uint64_t a1, unint64_t a2, id a3, char a4)
{
  if (a4)
  {
    id v14 = a3;
    if (qword_2697EE9E8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_24C849590();
    __swift_project_value_buffer(v15, (uint64_t)qword_2697F70A0);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24C7D7B8C(a3, 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24C7D7B8C(a3, 1);
    uint64_t v16 = sub_24C849570();
    os_log_type_t v17 = sub_24C84A0F0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v25 = v19;
      *(_DWORD *)uint64_t v18 = 136315650;
      swift_bridgeObjectRetain();
      sub_24C7DE68C(a1, a2, &v25);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      id v20 = a3;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
      uint64_t v21 = sub_24C849ED0();
      sub_24C7DE68C(v21, v22, &v25);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D7B98(a3, 1);
      sub_24C7D7B98(a3, 1);
      *(_WORD *)(v18 + 22) = 2080;
      unint64_t v23 = TransferHost.State.description.getter();
      sub_24C7DE68C(v23, v24, &v25);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v16, v17, "%s Failed flushing HTTP response with error=%s, state=%s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v19, -1, -1);
      MEMORY[0x2532FCCC0](v18, -1, -1);

      sub_24C7D7B98(a3, 1);
    }
    else
    {
      sub_24C7D7B98(a3, 1);
      swift_bridgeObjectRelease_n();
      sub_24C7D7B98(a3, 1);
      sub_24C7D7B98(a3, 1);

      swift_release_n();
    }
  }
  else
  {
    if (qword_2697EE9E8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_24C849590();
    __swift_project_value_buffer(v6, (uint64_t)qword_2697F70A0);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v7 = sub_24C849570();
    os_log_type_t v8 = sub_24C84A110();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v25 = v10;
      *(_DWORD *)uint64_t v9 = 136315394;
      swift_bridgeObjectRetain();
      sub_24C7DE68C(a1, a2, &v25);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v9 + 12) = 2080;
      unint64_t v11 = TransferHost.State.description.getter();
      sub_24C7DE68C(v11, v12, &v25);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v7, v8, "%s Finished flushing HTTP response, state=%s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v10, -1, -1);
      MEMORY[0x2532FCCC0](v9, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_24C7C962C(unsigned __int8 *a1, void (*a2)(long long *), uint64_t a3)
{
  int v5 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    if (*(unsigned __int8 *)(result + 48) >= 2u)
    {
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_24C849590();
      __swift_project_value_buffer(v15, (uint64_t)qword_2697F70A0);
      uint64_t v16 = sub_24C849570();
      os_log_type_t v17 = sub_24C84A110();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 16777472;
        LOBYTE(v32) = v5;
        sub_24C84A1A0();
        _os_log_impl(&dword_24C7BE000, v16, v17, "[Lease] Received lease, version=%hhu", v18, 5u);
        MEMORY[0x2532FCCC0](v18, -1, -1);
      }

      uint64_t v19 = *(void *)(v7 + 80);
      *(void *)(v7 + 80) = a2;
      *(void *)(v7 + 88) = a3;
      swift_retain();
      sub_24C7D6F70(v19);
      if (v5 == 2)
      {
        int v20 = *(unsigned __int8 *)(v7 + 49);
        if (v20 != 12)
        {
          swift_retain_n();
          uint64_t v21 = sub_24C849570();
          os_log_type_t v22 = sub_24C84A110();
          if (os_log_type_enabled(v21, v22))
          {
            uint64_t v23 = swift_slowAlloc();
            uint64_t v24 = swift_slowAlloc();
            *(void *)&long long v32 = v24;
            *(_DWORD *)uint64_t v23 = 136315394;
            LOBYTE(v35) = v20;
            unint64_t v25 = TransferHost.State.description.getter();
            uint64_t v35 = sub_24C7DE68C(v25, v26, (uint64_t *)&v32);
            sub_24C84A1A0();
            swift_bridgeObjectRelease();
            *(_WORD *)(v23 + 12) = 2080;
            LOBYTE(v35) = *(unsigned char *)(v7 + 48);
            unint64_t v27 = TransferHost.State.description.getter();
            uint64_t v35 = sub_24C7DE68C(v27, v28, (uint64_t *)&v32);
            sub_24C84A1A0();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24C7BE000, v21, v22, "[Lease] Client invoked stop in state=%s, satisfying now, state=%s", (uint8_t *)v23, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x2532FCCC0](v24, -1, -1);
            MEMORY[0x2532FCCC0](v23, -1, -1);
          }
          else
          {

            swift_release_n();
          }
          LOBYTE(v32) = 3;
          sub_24C7C2EA8((unsigned __int8 *)&v32, 0xD000000000000014, 0x800000024C84F120);
        }
      }
      else
      {
        uint64_t v29 = sub_24C849570();
        os_log_type_t v30 = sub_24C84A110();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v31 = 16777472;
          LOBYTE(v32) = 2;
          sub_24C84A1A0();
          _os_log_impl(&dword_24C7BE000, v29, v30, "[Lease] Version mismatch detected, expected-version=%hhu", v31, 5u);
          MEMORY[0x2532FCCC0](v31, -1, -1);
        }

        LOBYTE(v35) = 6;
        *(void *)&long long v32 = 0;
        *((void *)&v32 + 1) = 0xE000000000000000;
        sub_24C84A230();
        sub_24C849F80();
        sub_24C84A430();
        sub_24C849F80();
        swift_bridgeObjectRelease();
        sub_24C849F80();
        char v36 = v5;
        sub_24C84A430();
        sub_24C849F80();
        swift_bridgeObjectRelease();
        sub_24C7C2EA8((unsigned __int8 *)&v35, 0, 0xE000000000000000);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_24C849590();
      __swift_project_value_buffer(v8, (uint64_t)qword_2697F70A0);
      swift_retain_n();
      uint64_t v9 = sub_24C849570();
      os_log_type_t v10 = sub_24C84A110();
      if (os_log_type_enabled(v9, v10))
      {
        unint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v32 = v12;
        *(_DWORD *)unint64_t v11 = 136315138;
        LOBYTE(v35) = *(unsigned char *)(v7 + 48);
        unint64_t v13 = TransferHost.State.description.getter();
        uint64_t v35 = sub_24C7DE68C(v13, v14, (uint64_t *)&v32);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v9, v10, "[Lease] Unexpected request received, state=%s", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v12, -1, -1);
        MEMORY[0x2532FCCC0](v11, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      long long v32 = xmmword_24C84AFF0;
      uint64_t v33 = 2;
      char v34 = 1;
      a2(&v32);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24C7C9C70(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    sub_24C7C916C(0x5D657361654C5BLL, 0xE700000000000000, a3, a4 & 1);
    uint64_t v8 = *(void (**)(uint64_t))(v7 + 96);
    if (v8)
    {
      uint64_t v9 = swift_retain();
      v8(v9);
      swift_release();
      return sub_24C7D6F70((uint64_t)v8);
    }
    else
    {
      char v10 = 2;
      sub_24C84A230();
      swift_bridgeObjectRelease();
      sub_24C7D7B8C(a3, a4 & 1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697EED70);
      sub_24C849ED0();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      sub_24C7D6AEC(&v10);
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  return result;
}

void sub_24C7C9DD8(uint64_t a1, void (*a2)(long long *))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    if (*(unsigned __int8 *)(Strong + 48) > 9u)
    {
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_24C849590();
      __swift_project_value_buffer(v12, (uint64_t)qword_2697F70A0);
      swift_retain_n();
      unint64_t v13 = sub_24C849570();
      os_log_type_t v14 = sub_24C84A110();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        *(void *)&long long v19 = v16;
        *(_DWORD *)uint64_t v15 = 136315138;
        LOBYTE(v21) = *(unsigned char *)(v4 + 48);
        unint64_t v17 = TransferHost.State.description.getter();
        uint64_t v21 = sub_24C7DE68C(v17, v18, (uint64_t *)&v19);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v13, v14, "[Close Request] Ignoring request, state=%s", v15, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v16, -1, -1);
        MEMORY[0x2532FCCC0](v15, -1, -1);
        swift_release();
      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_24C849590();
      __swift_project_value_buffer(v5, (uint64_t)qword_2697F70A0);
      swift_retain_n();
      uint64_t v6 = sub_24C849570();
      os_log_type_t v7 = sub_24C84A110();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        uint64_t v9 = swift_slowAlloc();
        *(void *)&long long v19 = v9;
        *(_DWORD *)uint64_t v8 = 136315138;
        LOBYTE(v21) = *(unsigned char *)(v4 + 48);
        unint64_t v10 = TransferHost.State.description.getter();
        uint64_t v21 = sub_24C7DE68C(v10, v11, (uint64_t *)&v19);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v6, v7, "[Close Request] Remote TransferClient requested close, state=%s", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v9, -1, -1);
        MEMORY[0x2532FCCC0](v8, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      long long v19 = xmmword_24C84B000;
      __int16 v20 = 0;
      a2(&v19);
      swift_release();
    }
  }
}

uint64_t sub_24C7CA164(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C7C916C(0x522065736F6C435BLL, 0xEF5D747365757165, a3, a4 & 1);
    unsigned __int8 v7 = 4;
    sub_24C7CA21C(&v7, 0xD000000000000030, 0x800000024C84F490);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C7CA21C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v5 = sub_24C849BD0();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v35 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24C849BF0();
  uint64_t v36 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24C849C40();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  os_log_type_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = sub_24C849C80();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  __int16 v20 = (uint64_t *)((char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v31 = *a1;
  uint64_t v21 = *(void **)(v3 + 16);
  void *v20 = v21;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x263F8F0E0], v17);
  id v32 = v21;
  LOBYTE(v21) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  if (v21)
  {
    sub_24C849C30();
    MEMORY[0x2532FBAE0](v14, *(double *)(v3 + 24));
    os_log_type_t v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v30(v14, v10);
    uint64_t v23 = swift_allocObject();
    swift_weakInit();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v23;
    *(unsigned char *)(v24 + 24) = v31;
    uint64_t v25 = v34;
    *(void *)(v24 + 32) = v33;
    *(void *)(v24 + 40) = v25;
    aBlock[4] = sub_24C7D6EDC;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24C7C25B4;
    aBlock[3] = &block_descriptor_90;
    unint64_t v26 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24C849BE0();
    uint64_t v40 = MEMORY[0x263F8EE78];
    sub_24C7D6128((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
    sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
    unint64_t v27 = v35;
    uint64_t v28 = v39;
    sub_24C84A1F0();
    MEMORY[0x2532FBF80](v16, v9, v27, v26);
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v28);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v37);
    v30(v16, v10);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24C7CA6DC(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v133 = sub_24C8492C0();
  uint64_t v117 = *(void *)(v133 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v133);
  unint64_t v126 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v106 - v7;
  uint64_t v9 = sub_24C849440();
  uint64_t v118 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v132 = (uint64_t)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v106 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECF0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v124 = (uint64_t)&v106 - v18;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v20 = result;
  BOOL v21 = *(unsigned __int8 *)(result + 48) >= 7u;
  uint64_t v109 = a3;
  if (!v21)
  {
    if (qword_2697EE9E8 != -1) {
LABEL_80:
    }
      swift_once();
    uint64_t v22 = sub_24C849590();
    __swift_project_value_buffer(v22, (uint64_t)qword_2697F70A0);
    swift_retain_n();
    uint64_t v23 = sub_24C849570();
    uint64_t v24 = v20;
    os_log_type_t v25 = sub_24C84A0F0();
    if (os_log_type_enabled(v23, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      unint64_t v27 = a2;
      uint64_t v28 = swift_slowAlloc();
      *(void *)&long long v134 = v28;
      *(_DWORD *)unint64_t v26 = 136315138;
      LOBYTE(v136) = *(unsigned char *)(v24 + 48);
      unint64_t v29 = TransferHost.State.description.getter();
      uint64_t v136 = sub_24C7DE68C(v29, v30, (uint64_t *)&v134);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v23, v25, "[FileList] Unexpected request received, state=%s", v26, 0xCu);
      swift_arrayDestroy();
      uint64_t v31 = v28;
      a2 = v27;
      MEMORY[0x2532FCCC0](v31, -1, -1);
      MEMORY[0x2532FCCC0](v26, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    long long v94 = xmmword_24C84AFF0;
    goto LABEL_77;
  }
  sub_24C7CB828();
  uint64_t v32 = *(void *)(v20 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer);
  if (!*(void *)(v32 + 16))
  {
    if (qword_2697EE9E8 != -1) {
      swift_once();
    }
    uint64_t v95 = sub_24C849590();
    __swift_project_value_buffer(v95, (uint64_t)qword_2697F70A0);
    swift_retain_n();
    unint64_t v96 = sub_24C849570();
    uint64_t v97 = v20;
    os_log_type_t v98 = sub_24C84A0F0();
    if (os_log_type_enabled(v96, v98))
    {
      uint64_t v99 = (uint8_t *)swift_slowAlloc();
      uint64_t v100 = a2;
      uint64_t v101 = swift_slowAlloc();
      *(void *)&long long v134 = v101;
      *(_DWORD *)uint64_t v99 = 136315138;
      LOBYTE(v136) = *(unsigned char *)(v97 + 48);
      unint64_t v102 = TransferHost.State.description.getter();
      uint64_t v136 = sub_24C7DE68C(v102, v103, (uint64_t *)&v134);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v96, v98, "[FileList] No files to transfer, state=%s", v99, 0xCu);
      swift_arrayDestroy();
      uint64_t v104 = v101;
      a2 = v100;
      MEMORY[0x2532FCCC0](v104, -1, -1);
      MEMORY[0x2532FCCC0](v99, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    long long v94 = xmmword_24C84B010;
LABEL_77:
    long long v134 = v94;
    LOWORD(v135) = 258;
    ((void (*)(long long *))a2)(&v134);
    return swift_release();
  }
  uint64_t v108 = a2;
  unint64_t v140 = MEMORY[0x263F8EE80];
  uint64_t v33 = *(void *)(v32 + 64);
  uint64_t v110 = v32 + 64;
  uint64_t v34 = 1 << *(unsigned char *)(v32 + 32);
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  unint64_t v36 = v35 & v33;
  unint64_t v129 = (void (**)(uint64_t, char *, uint64_t))(v118 + 16);
  unint64_t v128 = (void (**)(char *, char *, uint64_t))(v117 + 16);
  os_log_type_t v121 = (void (**)(char *, uint64_t, uint64_t))(v118 + 32);
  BOOL v120 = (void (**)(char *, uint64_t, uint64_t))(v117 + 32);
  id v116 = (id)*MEMORY[0x263F080B8];
  v130 = (void (**)(char *, uint64_t))(v117 + 8);
  unint64_t v112 = &v137;
  uint64_t v119 = (void (**)(uint64_t, uint64_t))(v118 + 8);
  int64_t v115 = (unint64_t)(v34 + 63) >> 6;
  int64_t v107 = v115 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v125 = 0;
  *(void *)&long long v37 = 136315394;
  long long v114 = v37;
  uint64_t v111 = MEMORY[0x263F8EE58] + 8;
  uint64_t v38 = v126;
  unint64_t v127 = v13;
  uint64_t v122 = v17;
  uint64_t v123 = v32;
  uint64_t v113 = v9;
  while (1)
  {
    if (v36)
    {
      uint64_t v45 = v20;
      uint64_t v131 = (v36 - 1) & v36;
      unint64_t v46 = __clz(__rbit64(v36)) | (v125 << 6);
LABEL_16:
      (*(void (**)(char *, unint64_t, uint64_t))(v118 + 16))(v17, *(void *)(v32 + 48) + *(void *)(v118 + 72) * v46, v9);
      uint64_t v47 = v117;
      unint64_t v48 = *(void *)(v32 + 56) + *(void *)(v117 + 72) * v46;
      a2 = (char *)&qword_2697EECF8;
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECF8);
      (*(void (**)(char *, unint64_t, uint64_t))(v47 + 16))(&v17[*(int *)(v49 + 48)], v48, v133);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v17, 0, 1, v49);
      uint64_t v20 = v45;
      goto LABEL_35;
    }
    int64_t v50 = v125 + 1;
    if (__OFADD__(v125, 1))
    {
      __break(1u);
      goto LABEL_80;
    }
    if (v50 < v115)
    {
      unint64_t v51 = *(void *)(v110 + 8 * v50);
      if (v51) {
        goto LABEL_20;
      }
      int64_t v52 = v125 + 2;
      ++v125;
      if (v50 + 1 < v115)
      {
        unint64_t v51 = *(void *)(v110 + 8 * v52);
        if (v51) {
          goto LABEL_23;
        }
        int64_t v125 = v50 + 1;
        if (v50 + 2 < v115)
        {
          unint64_t v51 = *(void *)(v110 + 8 * (v50 + 2));
          if (v51)
          {
            v50 += 2;
            goto LABEL_20;
          }
          int64_t v52 = v50 + 3;
          int64_t v125 = v50 + 2;
          if (v50 + 3 < v115) {
            break;
          }
        }
      }
    }
LABEL_34:
    a2 = (char *)&qword_2697EECF8;
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECF8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v17, 1, 1, v53);
    uint64_t v131 = 0;
LABEL_35:
    uint64_t v54 = v124;
    sub_24C7D7828((uint64_t)v17, v124, &qword_2697EECF0);
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECF8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v54, 1, v55) == 1)
    {
      swift_release();
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v83 = sub_24C849590();
      __swift_project_value_buffer(v83, (uint64_t)qword_2697F70A0);
      swift_retain_n();
      uint64_t v84 = sub_24C849570();
      uint64_t v85 = v20;
      os_log_type_t v86 = sub_24C84A110();
      if (os_log_type_enabled(v84, v86))
      {
        uint64_t v87 = swift_slowAlloc();
        uint64_t v88 = swift_slowAlloc();
        *(void *)&long long v134 = v88;
        *(_DWORD *)uint64_t v87 = v114;
        swift_beginAccess();
        sub_24C7D6128(&qword_2697EF030, MEMORY[0x263F07508]);
        swift_bridgeObjectRetain();
        uint64_t v89 = sub_24C849E10();
        unint64_t v91 = v90;
        swift_bridgeObjectRelease();
        v138[0] = sub_24C7DE68C(v89, v91, (uint64_t *)&v134);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v87 + 12) = 2080;
        LOBYTE(v138[0]) = *(unsigned char *)(v85 + 48);
        unint64_t v92 = TransferHost.State.description.getter();
        v138[0] = sub_24C7DE68C(v92, v93, (uint64_t *)&v134);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v84, v86, "[FileList] Received request, sending response=%s state=%s", (uint8_t *)v87, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v88, -1, -1);
        MEMORY[0x2532FCCC0](v87, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      int v105 = v108;
      LOBYTE(v134) = 8;
      sub_24C7C10E8((char *)&v134);
      swift_beginAccess();
      v138[0] = 200;
      v138[1] = v140;
      __int16 v139 = 0;
      swift_bridgeObjectRetain();
      ((void (*)(void *))v105)(v138);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t v56 = v54 + *(int *)(v55 + 48);
    (*v121)(v13, v54, v9);
    (*v120)(v8, v56, v133);
    uint64_t v57 = sub_24C80548C();
    if (v57)
    {
      uint64_t v58 = v57;
      if (*(void *)(v57 + 16))
      {
        id v59 = v116;
        unint64_t v60 = sub_24C8058D8((uint64_t)v59);
        if (v61)
        {
          sub_24C7D788C(*(void *)(v58 + 56) + 32 * v60, (uint64_t)&v134);
        }
        else
        {
          long long v134 = 0u;
          long long v135 = 0u;
        }
      }
      else
      {
        long long v134 = 0u;
        long long v135 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v135 + 1))
      {
        if (swift_dynamicCast()) {
          goto LABEL_53;
        }
        goto LABEL_48;
      }
    }
    else
    {
      long long v134 = 0u;
      long long v135 = 0u;
    }
    sub_24C7D7C08((uint64_t)&v134, (uint64_t *)&unk_2697EED00);
LABEL_48:
    if (qword_2697EE9E8 != -1) {
      swift_once();
    }
    uint64_t v62 = sub_24C849590();
    __swift_project_value_buffer(v62, (uint64_t)qword_2697F70A0);
    (*v128)(v38, v8, v133);
    swift_retain_n();
    v63 = sub_24C849570();
    os_log_type_t v64 = sub_24C84A0F0();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      uint64_t v67 = v133;
      uint64_t v68 = v66;
      *(void *)&long long v134 = v66;
      *(_DWORD *)uint64_t v65 = v114;
      sub_24C7D6128(&qword_2697EF6C0, MEMORY[0x263F06EA8]);
      uint64_t v69 = sub_24C84A430();
      uint64_t v136 = sub_24C7DE68C(v69, v70, (uint64_t *)&v134);
      a2 = v8;
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      (*v130)(v126, v67);
      *(_WORD *)(v65 + 12) = 2080;
      LOBYTE(v136) = *(unsigned char *)(v20 + 48);
      unint64_t v71 = TransferHost.State.description.getter();
      uint64_t v136 = sub_24C7DE68C(v71, v72, (uint64_t *)&v134);
      uint64_t v38 = v126;
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v63, v64, "[FileList] Could not read file-size of file=%s, state=%s", (uint8_t *)v65, 0x16u);
      swift_arrayDestroy();
      uint64_t v73 = v68;
      uint64_t v9 = v113;
      MEMORY[0x2532FCCC0](v73, -1, -1);
      uint64_t v74 = v65;
      uint64_t v13 = v127;
      MEMORY[0x2532FCCC0](v74, -1, -1);
    }
    else
    {
      (*v130)(v38, v133);

      swift_release_n();
    }
LABEL_53:
    (*v129)(v132, v13, v9);
    uint64_t v75 = sub_24C849260();
    uint64_t v77 = v76;
    uint64_t v78 = sub_24C80548C();
    if (!v78)
    {
      long long v134 = 0u;
      long long v135 = 0u;
LABEL_11:
      sub_24C7D7C08((uint64_t)&v134, (uint64_t *)&unk_2697EED00);
LABEL_12:
      uint64_t v39 = 0;
      goto LABEL_13;
    }
    uint64_t v79 = v78;
    if (*(void *)(v78 + 16))
    {
      id v80 = v116;
      unint64_t v81 = sub_24C8058D8((uint64_t)v80);
      if (v82)
      {
        sub_24C7D788C(*(void *)(v79 + 56) + 32 * v81, (uint64_t)&v134);
      }
      else
      {
        long long v134 = 0u;
        long long v135 = 0u;
      }
    }
    else
    {
      long long v134 = 0u;
      long long v135 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v135 + 1)) {
      goto LABEL_11;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_12;
    }
    uint64_t v39 = v136;
LABEL_13:
    unint64_t v40 = v140;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v134 = v40;
    unint64_t v140 = 0x8000000000000000;
    uint64_t v42 = v77;
    uint64_t v43 = v132;
    sub_24C846D40(v75, v42, v39, v132, isUniquelyReferenced_nonNull_native);
    unint64_t v140 = v134;
    swift_bridgeObjectRelease();
    uint64_t v44 = *v119;
    (*v119)(v43, v9);
    (*v130)(v8, v133);
    uint64_t v13 = v127;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v44)(v127, v9);
    uint64_t v17 = v122;
    uint64_t v32 = v123;
    unint64_t v36 = v131;
  }
  unint64_t v51 = *(void *)(v110 + 8 * v52);
  if (v51)
  {
LABEL_23:
    int64_t v50 = v52;
LABEL_20:
    uint64_t v45 = v20;
    uint64_t v131 = (v51 - 1) & v51;
    unint64_t v46 = __clz(__rbit64(v51)) + (v50 << 6);
    int64_t v125 = v50;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v50 = v52 + 1;
    if (__OFADD__(v52, 1)) {
      break;
    }
    if (v50 >= v115)
    {
      int64_t v125 = v107;
      goto LABEL_34;
    }
    unint64_t v51 = *(void *)(v110 + 8 * v50);
    ++v52;
    if (v51) {
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24C7CB828()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24C849C80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + 16);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  if (!*(void *)(v1 + 72)) {
    return result;
  }
  uint64_t v9 = qword_2697EE9E8;
  swift_retain();
  if (v9 != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v10 = sub_24C849590();
  __swift_project_value_buffer(v10, (uint64_t)qword_2697F70A0);
  uint64_t v11 = sub_24C849570();
  os_log_type_t v12 = sub_24C84A110();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_24C7BE000, v11, v12, "[Attestation] Closing attestation-channel-host", v13, 2u);
    MEMORY[0x2532FCCC0](v13, -1, -1);
  }

  sub_24C8315D4();
  *(void *)(v1 + 72) = 0;
  swift_release();
  return swift_release();
}

uint64_t sub_24C7CBA18(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v120 = a3;
  os_log_type_t v121 = a2;
  uint64_t v122 = (void (*)(void, void, void))a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EED48);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v110 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v110 = (uint64_t)&v110 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v113 = (uint64_t)&v110 - v12;
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EED30);
  MEMORY[0x270FA5388](v118);
  uint64_t v119 = (long long *)((char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for FileRequest(0);
  uint64_t v115 = *(void *)(v14 - 8);
  uint64_t v116 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v111 = (uint64_t)&v110 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v112 = (uint64_t)&v110 - v21;
  MEMORY[0x270FA5388](v20);
  os_log_t v114 = (os_log_t)((char *)&v110 - v22);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  MEMORY[0x270FA5388](v23 - 8);
  os_log_type_t v25 = (char *)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_24C8492C0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  unint64_t v30 = (char *)&v110 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v33 = (char *)&v110 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v117 = (char *)&v110 - v34;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v36 = result;
  uint64_t v37 = *(void *)(result + OBJC_IVAR____TtC5Cosmo12TransferHost_filesRequestedCount);
  BOOL v38 = __OFADD__(v37, 1);
  uint64_t v39 = v37 + 1;
  if (v38)
  {
    __break(1u);
    goto LABEL_42;
  }
  *(void *)(result + OBJC_IVAR____TtC5Cosmo12TransferHost_filesRequestedCount) = v39;
  if (*(unsigned __int8 *)(result + 48) < 8u)
  {
    uint64_t v40 = qword_2697EE9E8;
    swift_retain_n();
    if (v40 == -1)
    {
LABEL_5:
      uint64_t v41 = sub_24C849590();
      __swift_project_value_buffer(v41, (uint64_t)qword_2697F70A0);
      sub_24C7D7AC4((uint64_t)v122, (uint64_t)v17, type metadata accessor for FileRequest);
      swift_retain_n();
      uint64_t v42 = sub_24C849570();
      os_log_type_t v43 = sub_24C84A0F0();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v122 = (void (*)(void, void, void))swift_slowAlloc();
        uint64_t v124 = v122;
        *(_DWORD *)uint64_t v44 = 136315650;
        sub_24C7D7AC4((uint64_t)v17, (uint64_t)v9, type metadata accessor for FileRequest);
        uint64_t v46 = v115;
        uint64_t v45 = v116;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v9, 0, 1, v116);
        sub_24C7D7BA4((uint64_t)v9, (uint64_t)v6, &qword_2697EED48);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v6, 1, v45) == 1)
        {
          uint64_t v47 = 7104878;
          unint64_t v48 = 0xE300000000000000;
        }
        else
        {
          uint64_t v90 = (uint64_t)v6;
          uint64_t v91 = v112;
          sub_24C7D79F0(v90, v112, type metadata accessor for FileRequest);
          sub_24C7D7AC4(v91, v111, type metadata accessor for FileRequest);
          uint64_t v47 = sub_24C849ED0();
          unint64_t v48 = v92;
          sub_24C7D7B2C(v91, type metadata accessor for FileRequest);
        }
        sub_24C7D7C08((uint64_t)v9, &qword_2697EED48);
        uint64_t v123 = sub_24C7DE68C(v47, v48, (uint64_t *)&v124);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C7D7B2C((uint64_t)v17, type metadata accessor for FileRequest);
        *(_WORD *)(v44 + 12) = 2080;
        unint64_t v93 = sub_24C7CC9A0();
        uint64_t v123 = sub_24C7DE68C(v93, v94, (uint64_t *)&v124);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 22) = 2080;
        LOBYTE(v123) = *(unsigned char *)(v36 + 48);
        unint64_t v95 = TransferHost.State.description.getter();
        uint64_t v123 = sub_24C7DE68C(v95, v96, (uint64_t *)&v124);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v42, v43, "[Request] Unexpected request=%s, %s state=%s", (uint8_t *)v44, 0x20u);
        uint64_t v97 = (uint64_t)v122;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v97, -1, -1);
        MEMORY[0x2532FCCC0](v44, -1, -1);
      }
      else
      {
        sub_24C7D7B2C((uint64_t)v17, type metadata accessor for FileRequest);

        swift_release_n();
      }
      long long v98 = xmmword_24C84AFF0;
LABEL_39:
      uint64_t v109 = (uint64_t)v119;
      *uint64_t v119 = v98;
      *(unsigned char *)(v109 + 16) = 2;
      swift_storeEnumTagMultiPayload();
      v121(v109);
      swift_release_n();
      return sub_24C7D7C08(v109, &qword_2697EED30);
    }
LABEL_42:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v49 = *(void *)(result + OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer);
  if (*(void *)(v49 + 16))
  {
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v50 = (uint64_t)v122;
    unint64_t v51 = sub_24C805840((uint64_t)v122);
    if (v52)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v25, *(void *)(v49 + 56) + *(void *)(v27 + 72) * v51, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v25, 0, 1, v26);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, 1, 1, v26);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, 1, 1, v26);
    swift_retain_n();
    uint64_t v50 = (uint64_t)v122;
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_24C7D7C08((uint64_t)v25, (uint64_t *)&unk_2697EEC50);
    if (qword_2697EE9E8 != -1) {
      swift_once();
    }
    uint64_t v53 = sub_24C849590();
    __swift_project_value_buffer(v53, (uint64_t)qword_2697F70A0);
    os_log_t v54 = v114;
    sub_24C7D7AC4(v50, (uint64_t)v114, type metadata accessor for FileRequest);
    swift_retain_n();
    uint64_t v55 = sub_24C849570();
    os_log_type_t v56 = sub_24C84A0F0();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v124 = (void (*)(void, void, void))v58;
      *(_DWORD *)uint64_t v57 = 136315650;
      uint64_t v59 = v113;
      sub_24C7D7AC4((uint64_t)v54, v113, type metadata accessor for FileRequest);
      uint64_t v61 = v115;
      uint64_t v60 = v116;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v115 + 56))(v59, 0, 1, v116);
      uint64_t v62 = v59;
      uint64_t v63 = v110;
      sub_24C7D7BA4(v62, v110, &qword_2697EED48);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v63, 1, v60) == 1)
      {
        uint64_t v64 = 7104878;
        unint64_t v65 = 0xE300000000000000;
      }
      else
      {
        uint64_t v102 = v63;
        uint64_t v103 = v112;
        sub_24C7D79F0(v102, v112, type metadata accessor for FileRequest);
        sub_24C7D7AC4(v103, v111, type metadata accessor for FileRequest);
        uint64_t v64 = sub_24C849ED0();
        unint64_t v65 = v104;
        sub_24C7D7B2C(v103, type metadata accessor for FileRequest);
      }
      sub_24C7D7C08(v113, &qword_2697EED48);
      uint64_t v123 = sub_24C7DE68C(v64, v65, (uint64_t *)&v124);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D7B2C((uint64_t)v114, type metadata accessor for FileRequest);
      *(_WORD *)(v57 + 12) = 2080;
      unint64_t v105 = sub_24C7CC9A0();
      uint64_t v123 = sub_24C7DE68C(v105, v106, (uint64_t *)&v124);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v57 + 22) = 2080;
      LOBYTE(v123) = *(unsigned char *)(v36 + 48);
      unint64_t v107 = TransferHost.State.description.getter();
      uint64_t v123 = sub_24C7DE68C(v107, v108, (uint64_t *)&v124);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v55, v56, "[Request] Could not find URL for request=%s, %s state=%s", (uint8_t *)v57, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v58, -1, -1);
      MEMORY[0x2532FCCC0](v57, -1, -1);
    }
    else
    {
      sub_24C7D7B2C((uint64_t)v54, type metadata accessor for FileRequest);

      swift_release_n();
    }
    long long v98 = xmmword_24C84B010;
    goto LABEL_39;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v117, v25, v26);
  if (*(unsigned char *)(v36 + 48) != 9)
  {
    LOBYTE(v124) = 9;
    sub_24C7C10E8((char *)&v124);
  }
  uint64_t v66 = *(void *)(v36 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesSentCount);
  BOOL v38 = __OFADD__(v66, 1);
  uint64_t v67 = v66 + 1;
  if (v38)
  {
    __break(1u);
    goto LABEL_44;
  }
  *(void *)(v36 + OBJC_IVAR____TtC5Cosmo12TransferHost_filesSentCount) = v67;
  if (qword_2697EE9E8 != -1) {
LABEL_44:
  }
    swift_once();
  uint64_t v68 = sub_24C849590();
  __swift_project_value_buffer(v68, (uint64_t)qword_2697F70A0);
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  unint64_t v70 = v117;
  v69(v33, v117, v26);
  v69(v30, v70, v26);
  swift_retain_n();
  unint64_t v71 = sub_24C849570();
  os_log_type_t v72 = sub_24C84A110();
  int v73 = v72;
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v74 = swift_slowAlloc();
    LODWORD(v115) = v73;
    uint64_t v75 = v74;
    uint64_t v116 = swift_slowAlloc();
    uint64_t v124 = (void (*)(void, void, void))v116;
    *(_DWORD *)uint64_t v75 = 136315906;
    sub_24C7D6128(&qword_2697EF6C0, MEMORY[0x263F06EA8]);
    os_log_t v114 = v71;
    uint64_t v76 = sub_24C84A430();
    uint64_t v78 = sub_24C7DE68C(v76, v77, (uint64_t *)&v124);
    uint64_t v122 = (void (*)(void, void, void))v69;
    uint64_t v123 = v78;
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    uint64_t v79 = *(void (**)(char *, uint64_t))(v27 + 8);
    uint64_t v113 = (v27 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v79(v33, v26);
    *(_WORD *)(v75 + 12) = 2048;
    uint64_t v80 = URL.fileSize.getter();
    if (v81) {
      uint64_t v82 = 0;
    }
    else {
      uint64_t v82 = v80;
    }
    v79(v30, v26);
    uint64_t v123 = v82;
    sub_24C84A1A0();
    *(_WORD *)(v75 + 22) = 2080;
    unint64_t v83 = sub_24C7CC9A0();
    uint64_t v123 = sub_24C7DE68C(v83, v84, (uint64_t *)&v124);
    uint64_t v69 = (void (*)(char *, char *, uint64_t))v122;
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v75 + 32) = 2080;
    LOBYTE(v123) = *(unsigned char *)(v36 + 48);
    unint64_t v85 = TransferHost.State.description.getter();
    uint64_t v123 = sub_24C7DE68C(v85, v86, (uint64_t *)&v124);
    uint64_t v87 = (uint64_t (*)(char *, uint64_t))v79;
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v88 = v114;
    _os_log_impl(&dword_24C7BE000, v114, (os_log_type_t)v115, "[Request] Returning file=%s size=%llu, %s state=%s", (uint8_t *)v75, 0x2Au);
    uint64_t v89 = v116;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v89, -1, -1);
    MEMORY[0x2532FCCC0](v75, -1, -1);
  }
  else
  {
    uint64_t v99 = *(void (**)(char *, uint64_t))(v27 + 8);
    v99(v30, v26);
    v99(v33, v26);
    uint64_t v87 = (uint64_t (*)(char *, uint64_t))v99;

    swift_release_n();
  }
  uint64_t v100 = (uint64_t)v119;
  uint64_t v101 = v117;
  v69((char *)v119, v117, v26);
  *(_DWORD *)(v100 + *(int *)(type metadata accessor for CosmoFileHttpResponse(0) + 20)) = 200;
  swift_storeEnumTagMultiPayload();
  v121(v100);
  swift_release_n();
  sub_24C7D7C08(v100, &qword_2697EED30);
  return v87(v101, v26);
}

unint64_t sub_24C7CC9A0()
{
  return 0xD000000000000016;
}

uint64_t sub_24C7CCAB0(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24C8492C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v48 - v15;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    uint64_t v19 = *(void *)(result + OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer);
    if (!*(void *)(v19 + 16))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_8:
      swift_release();
      return sub_24C7D7C08((uint64_t)v9, (uint64_t *)&unk_2697EEC50);
    }
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_24C805840(a1);
    if (v21)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, *(void *)(v19 + 56) + *(void *)(v11 + 72) * v20, v10);
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v22 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v22, 1, v10);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
      goto LABEL_8;
    }
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    if (a4)
    {
      swift_retain_n();
      sub_24C7D7B8C(a3, 1);
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_24C849590();
      __swift_project_value_buffer(v31, (uint64_t)qword_2697F70A0);
      sub_24C7D7B8C(a3, 1);
      id v32 = a3;
      os_log_type_t v25 = sub_24C849570();
      os_log_type_t v33 = sub_24C84A0F0();
      int v34 = v33;
      if (os_log_type_enabled(v25, v33))
      {
        uint64_t v35 = swift_slowAlloc();
        LODWORD(v49) = v34;
        uint64_t v36 = v35;
        uint64_t v50 = swift_slowAlloc();
        uint64_t v51 = (uint64_t)a3;
        v52[0] = v50;
        *(_DWORD *)uint64_t v36 = 136315394;
        id v37 = a3;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
        os_log_t v48 = v25;
        uint64_t v38 = sub_24C849ED0();
        uint64_t v51 = sub_24C7DE68C(v38, v39, v52);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C7D7B98(a3, 1);
        sub_24C7D7B98(a3, 1);
        *(_WORD *)(v36 + 12) = 2080;
        uint64_t v40 = sub_24C7CD18C();
        uint64_t v51 = sub_24C7DE68C(v40, v41, v52);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        os_log_t v42 = v48;
        _os_log_impl(&dword_24C7BE000, v48, (os_log_type_t)v49, "[Request] Failed writing HTTP resopnse with error=%s for %s", (uint8_t *)v36, 0x16u);
        uint64_t v43 = v50;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v43, -1, -1);
        MEMORY[0x2532FCCC0](v36, -1, -1);

        sub_24C7D7B98(a3, 1);
        goto LABEL_20;
      }
      sub_24C7D7B98(a3, 1);
      sub_24C7D7B98(a3, 1);
    }
    else
    {
      uint64_t v23 = qword_2697EE9E8;
      swift_retain_n();
      if (v23 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_24C849590();
      __swift_project_value_buffer(v24, (uint64_t)qword_2697F70A0);
      os_log_type_t v25 = sub_24C849570();
      os_log_type_t v26 = sub_24C84A110();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        v52[0] = v50;
        *(_DWORD *)uint64_t v27 = 136315138;
        uint64_t v49 = v27 + 4;
        uint64_t v28 = sub_24C7CD18C();
        uint64_t v51 = sub_24C7DE68C(v28, v29, v52);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v25, v26, "[Request] Finished writing HTTP response for %s", v27, 0xCu);
        uint64_t v30 = v50;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v30, -1, -1);
        MEMORY[0x2532FCCC0](v27, -1, -1);
      }
    }

LABEL_20:
    swift_beginAccess();
    if (MEMORY[0x2532FCD70](v18 + 32))
    {
      uint64_t v44 = *(void *)(v18 + 40);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 40))(v16, ObjectType, v44);
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v46 = *(void (**)(char *, uint64_t))(v11 + 8);
      v46(v14, v10);
      swift_release_n();
      return ((uint64_t (*)(char *, uint64_t))v46)(v16, v10);
    }
    else
    {
      uint64_t v47 = *(void (**)(char *, uint64_t))(v11 + 8);
      v47(v16, v10);
      swift_release();
      v47(v14, v10);
      return swift_release_n();
    }
  }
  return result;
}

uint64_t sub_24C7CD18C()
{
  return 0x3D656C6966;
}

uint64_t sub_24C7CD2F0(uint64_t a1, void (*a2)(long long *), uint64_t a3)
{
  uint64_t v94 = a3;
  unint64_t v95 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EED20);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v86 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v87 = (uint64_t)&v86 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v91 = (uint64_t)&v86 - v13;
  uint64_t v14 = type metadata accessor for RejectFileRequest(0);
  uint64_t v92 = *(void *)(v14 - 8);
  uint64_t v93 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v88 = (uint64_t)&v86 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v89 = (uint64_t)&v86 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v86 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  MEMORY[0x270FA5388](v24 - 8);
  os_log_type_t v26 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_24C8492C0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v86 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v90 = (char *)&v86 - v32;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(unsigned __int8 *)(result + 48) < 8u)
    {
      uint64_t v91 = result;
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_24C849590();
      __swift_project_value_buffer(v34, (uint64_t)qword_2697F70A0);
      sub_24C7D7AC4(a1, (uint64_t)v17, type metadata accessor for RejectFileRequest);
      swift_retain_n();
      uint64_t v35 = sub_24C849570();
      os_log_type_t v36 = sub_24C84A0F0();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v90 = (char *)swift_slowAlloc();
        *(void *)&long long v98 = v90;
        *(_DWORD *)uint64_t v37 = 136315394;
        sub_24C7D7AC4((uint64_t)v17, (uint64_t)v10, type metadata accessor for RejectFileRequest);
        uint64_t v39 = v92;
        uint64_t v38 = v93;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v10, 0, 1, v93);
        sub_24C7D7BA4((uint64_t)v10, (uint64_t)v7, &qword_2697EED20);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v7, 1, v38) == 1)
        {
          uint64_t v40 = 7104878;
          unint64_t v41 = 0xE300000000000000;
        }
        else
        {
          uint64_t v72 = v89;
          sub_24C7D79F0((uint64_t)v7, v89, type metadata accessor for RejectFileRequest);
          sub_24C7D7AC4(v72, v88, type metadata accessor for RejectFileRequest);
          uint64_t v40 = sub_24C849ED0();
          unint64_t v41 = v73;
          sub_24C7D7B2C(v72, type metadata accessor for RejectFileRequest);
        }
        sub_24C7D7C08((uint64_t)v10, &qword_2697EED20);
        *(void *)&long long v96 = sub_24C7DE68C(v40, v41, (uint64_t *)&v98);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C7D7B2C((uint64_t)v17, type metadata accessor for RejectFileRequest);
        *(_WORD *)(v37 + 12) = 2080;
        LOBYTE(v96) = *(unsigned char *)(v91 + 48);
        unint64_t v74 = TransferHost.State.description.getter();
        *(void *)&long long v96 = sub_24C7DE68C(v74, v75, (uint64_t *)&v98);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v35, v36, "[Reject] Unexpected request=%s, state=%s", (uint8_t *)v37, 0x16u);
        uint64_t v76 = v90;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v76, -1, -1);
        MEMORY[0x2532FCCC0](v37, -1, -1);
      }
      else
      {
        sub_24C7D7B2C((uint64_t)v17, type metadata accessor for RejectFileRequest);

        swift_release_n();
      }
      long long v98 = xmmword_24C84AFF0;
      __int16 v99 = 258;
      v95(&v98);
      return swift_release();
    }
    uint64_t v42 = result;
    uint64_t v43 = *(void *)(result + OBJC_IVAR____TtC5Cosmo12TransferHost_filesToTransfer);
    if (!*(void *)(v43 + 16))
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, 1, 1, v27);
LABEL_15:
      sub_24C7D7C08((uint64_t)v26, (uint64_t *)&unk_2697EEC50);
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v47 = sub_24C849590();
      __swift_project_value_buffer(v47, (uint64_t)qword_2697F70A0);
      sub_24C7D7AC4(a1, (uint64_t)v23, type metadata accessor for RejectFileRequest);
      uint64_t v48 = v42;
      swift_retain_n();
      uint64_t v49 = sub_24C849570();
      os_log_type_t v50 = sub_24C84A0F0();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        *(void *)&long long v98 = v52;
        *(_DWORD *)uint64_t v51 = 136315394;
        uint64_t v53 = v91;
        sub_24C7D7AC4((uint64_t)v23, v91, type metadata accessor for RejectFileRequest);
        uint64_t v55 = v92;
        uint64_t v54 = v93;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v92 + 56))(v53, 0, 1, v93);
        uint64_t v56 = v87;
        sub_24C7D7BA4(v53, v87, &qword_2697EED20);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v56, 1, v54) == 1)
        {
          uint64_t v57 = 7104878;
          unint64_t v58 = 0xE300000000000000;
        }
        else
        {
          uint64_t v77 = v89;
          sub_24C7D79F0(v56, v89, type metadata accessor for RejectFileRequest);
          sub_24C7D7AC4(v77, v88, type metadata accessor for RejectFileRequest);
          uint64_t v57 = sub_24C849ED0();
          unint64_t v58 = v78;
          sub_24C7D7B2C(v77, type metadata accessor for RejectFileRequest);
        }
        sub_24C7D7C08(v91, &qword_2697EED20);
        *(void *)&long long v96 = sub_24C7DE68C(v57, v58, (uint64_t *)&v98);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C7D7B2C((uint64_t)v23, type metadata accessor for RejectFileRequest);
        *(_WORD *)(v51 + 12) = 2080;
        LOBYTE(v96) = *(unsigned char *)(v48 + 48);
        unint64_t v79 = TransferHost.State.description.getter();
        *(void *)&long long v96 = sub_24C7DE68C(v79, v80, (uint64_t *)&v98);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v49, v50, "[Reject] Could not find URL for request=%s, state=%s", (uint8_t *)v51, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v52, -1, -1);
        MEMORY[0x2532FCCC0](v51, -1, -1);
      }
      else
      {
        sub_24C7D7B2C((uint64_t)v23, type metadata accessor for RejectFileRequest);

        swift_release_n();
      }
      long long v98 = xmmword_24C84B010;
      __int16 v99 = 258;
      v95(&v98);
      return swift_release();
    }
    swift_bridgeObjectRetain();
    unint64_t v44 = sub_24C805840(a1);
    if (v45)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v26, *(void *)(v43 + 56) + *(void *)(v28 + 72) * v44, v27);
      uint64_t v46 = 0;
    }
    else
    {
      uint64_t v46 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, v46, 1, v27);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1) {
      goto LABEL_15;
    }
    uint64_t v59 = v90;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v90, v26, v27);
    if (qword_2697EE9E8 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_24C849590();
    __swift_project_value_buffer(v60, (uint64_t)qword_2697F70A0);
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v31, v59, v27);
    uint64_t v61 = v42;
    swift_retain_n();
    uint64_t v62 = sub_24C849570();
    uint64_t v63 = v28;
    os_log_type_t v64 = sub_24C84A110();
    if (os_log_type_enabled(v62, v64))
    {
      uint64_t v65 = swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      *(void *)&long long v98 = v93;
      *(_DWORD *)uint64_t v65 = 136315394;
      sub_24C7D6128(&qword_2697EF6C0, MEMORY[0x263F06EA8]);
      uint64_t v66 = sub_24C84A430();
      *(void *)&long long v96 = sub_24C7DE68C(v66, v67, (uint64_t *)&v98);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      uint64_t v68 = *(void (**)(char *, uint64_t))(v63 + 8);
      v68(v31, v27);
      *(_WORD *)(v65 + 12) = 2080;
      LOBYTE(v96) = *(unsigned char *)(v42 + 48);
      unint64_t v69 = TransferHost.State.description.getter();
      *(void *)&long long v96 = sub_24C7DE68C(v69, v70, (uint64_t *)&v98);
      uint64_t v61 = v42;
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v62, v64, "[Reject] Marking file=%s as rejected, state=%s", (uint8_t *)v65, 0x16u);
      uint64_t v71 = v93;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v71, -1, -1);
      MEMORY[0x2532FCCC0](v65, -1, -1);
    }
    else
    {
      uint64_t v68 = *(void (**)(char *, uint64_t))(v63 + 8);
      v68(v31, v27);

      swift_release_n();
    }
    char v81 = v95;
    swift_beginAccess();
    uint64_t v82 = MEMORY[0x2532FCD70](v61 + 32);
    unint64_t v83 = v90;
    if (v82)
    {
      uint64_t v84 = *(void *)(v61 + 40);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 32))(v83, ObjectType, v84);
      swift_unknownObjectRelease();
    }
    long long v96 = xmmword_24C84B000;
    __int16 v97 = 0;
    v81(&v96);
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v68)(v83, v27);
  }
  return result;
}

Swift::Void __swiftcall TransferHost.stop()()
{
  uint64_t v1 = sub_24C849BD0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24C849BF0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = *(void *)(v0 + 16);
  aBlock[4] = sub_24C7D6208;
  uint64_t v12 = v0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_17;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_24C849BE0();
  v10[1] = MEMORY[0x263F8EE78];
  sub_24C7D6128((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
}

void sub_24C7CE2D4(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 48);
  if (v1 <= 9)
  {
    if (v1 - 2 > 4)
    {
      LOBYTE(v10) = 3;
      sub_24C7C2EA8((unsigned __int8 *)&v10, 0xD000000000000014, 0x800000024C84F120);
    }
    else
    {
      if (qword_2697EE9E8 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_24C849590();
      __swift_project_value_buffer(v3, (uint64_t)qword_2697F70A0);
      swift_retain_n();
      uint64_t v4 = sub_24C849570();
      os_log_type_t v5 = sub_24C84A110();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        uint64_t v7 = swift_slowAlloc();
        uint64_t v10 = v7;
        *(_DWORD *)uint64_t v6 = 136315138;
        unint64_t v8 = TransferHost.State.description.getter();
        sub_24C7DE68C(v8, v9, &v10);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v4, v5, "[Stop] Queueing stop until file-transfer-channel established, state=%s", v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v7, -1, -1);
        MEMORY[0x2532FCCC0](v6, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      *(unsigned char *)(a1 + 49) = *(unsigned char *)(a1 + 48);
    }
  }
}

uint64_t sub_24C7CE4DC(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unsigned __int8 v8 = a2;
    sub_24C7CA21C(&v8, a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C7CE55C(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v4 = a2;
    sub_24C7D6AEC(&v4);
    return swift_release();
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_24C7CE5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v20[0] = a5;
  uint64_t v7 = v5;
  uint64_t v10 = sub_24C849BD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24C849BF0();
  uint64_t v14 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v7 + 48);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v7;
  void v17[3] = a1;
  v17[4] = a2;
  aBlock[4] = a4;
  void aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24C7C25B4;
  aBlock[3] = v20[0];
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24C849BE0();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_24C7D6128((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

uint64_t sub_24C7CE8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_2697EEA08 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_24C849590();
  __swift_project_value_buffer(v6, (uint64_t)qword_2697EF730);
  swift_retain_n();
  uint64_t v7 = sub_24C849570();
  os_log_type_t v8 = sub_24C84A110();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v19[0] = v10;
    *(_DWORD *)uint64_t v9 = 67109378;
    sub_24C84A1A0();
    *(_WORD *)(v9 + 8) = 2080;
    swift_retain();
    uint64_t v11 = CosmoSerialChannelHost.description.getter();
    unint64_t v13 = v12;
    swift_release();
    sub_24C7DE68C(v11, v13, v19);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v7, v8, "[Respond] Registered handler for messageType=%u, %s", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v10, -1, -1);
    MEMORY[0x2532FCCC0](v9, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 1;
  *(void *)(v14 + 24) = a1;
  *(void *)(v14 + 32) = a2;
  *(void *)(v14 + 40) = a3;
  uint64_t v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_handlers);
  swift_beginAccess();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v15;
  *uint64_t v15 = 0x8000000000000000;
  sub_24C846BE0((uint64_t)sub_24C7D6FAC, v14, 1u, isUniquelyReferenced_nonNull_native);
  *uint64_t v15 = v18;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_24C7CEB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_2697EEA08 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_24C849590();
  __swift_project_value_buffer(v6, (uint64_t)qword_2697EF730);
  swift_retain_n();
  uint64_t v7 = sub_24C849570();
  os_log_type_t v8 = sub_24C84A110();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v19[0] = v10;
    *(_DWORD *)uint64_t v9 = 67109378;
    sub_24C84A1A0();
    *(_WORD *)(v9 + 8) = 2080;
    swift_retain();
    uint64_t v11 = CosmoSerialChannelHost.description.getter();
    unint64_t v13 = v12;
    swift_release();
    sub_24C7DE68C(v11, v13, v19);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v7, v8, "[Respond] Registered handler for messageType=%u, %s", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v10, -1, -1);
    MEMORY[0x2532FCCC0](v9, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 3;
  *(void *)(v14 + 24) = a1;
  *(void *)(v14 + 32) = a2;
  *(void *)(v14 + 40) = a3;
  uint64_t v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_handlers);
  swift_beginAccess();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v15;
  *uint64_t v15 = 0x8000000000000000;
  sub_24C846BE0((uint64_t)sub_24C7D71CC, v14, 3u, isUniquelyReferenced_nonNull_native);
  *uint64_t v15 = v18;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_24C7CEDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_2697EEA08 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_24C849590();
  __swift_project_value_buffer(v6, (uint64_t)qword_2697EF730);
  swift_retain_n();
  uint64_t v7 = sub_24C849570();
  os_log_type_t v8 = sub_24C84A110();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v19[0] = v10;
    *(_DWORD *)uint64_t v9 = 67109378;
    sub_24C84A1A0();
    *(_WORD *)(v9 + 8) = 2080;
    swift_retain();
    uint64_t v11 = CosmoSerialChannelHost.description.getter();
    unint64_t v13 = v12;
    swift_release();
    sub_24C7DE68C(v11, v13, v19);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v7, v8, "[Respond] Registered handler for messageType=%u, %s", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v10, -1, -1);
    MEMORY[0x2532FCCC0](v9, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 5;
  *(void *)(v14 + 24) = a1;
  *(void *)(v14 + 32) = a2;
  *(void *)(v14 + 40) = a3;
  uint64_t v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_handlers);
  swift_beginAccess();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v15;
  *uint64_t v15 = 0x8000000000000000;
  sub_24C846BE0((uint64_t)sub_24C7D736C, v14, 5u, isUniquelyReferenced_nonNull_native);
  *uint64_t v15 = v18;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_24C7CF098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *, void (*)(uint64_t a1), void *))
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  sub_24C849140();
  swift_allocObject();
  swift_retain();
  sub_24C849130();
  sub_24C7D7000();
  sub_24C849120();
  swift_release();
  uint64_t v12 = v17;
  unint64_t v13 = v18;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = sub_24C7D6FFC;
  v14[3] = v11;
  v14[4] = a6;
  sub_24C7D60D0(v12, v13);
  swift_retain();
  a7(&v16, sub_24C7D7140, v14);
  swift_release();
  sub_24C7D5FEC(v12, v13);
  return sub_24C7D5FEC(v17, v18);
}

uint64_t sub_24C7CF7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *, void (*)(uint64_t a1), void *))
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  sub_24C849140();
  swift_allocObject();
  swift_retain();
  sub_24C849130();
  sub_24C7D71E4();
  sub_24C849120();
  swift_release();
  uint64_t v12 = v16;
  unint64_t v13 = v17;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = sub_24C7D6FFC;
  v14[3] = v11;
  v14[4] = a6;
  sub_24C7D60D0(v12, v13);
  swift_retain();
  a7(&v16, sub_24C7D723C, v14);
  swift_release();
  sub_24C7D5FEC(v12, v13);
  return sub_24C7D5FEC(v16, v17);
}

uint64_t sub_24C7CFF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void *, uint64_t (*)(uint64_t a1), void *))
{
  v14[5] = *MEMORY[0x263EF8340];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  sub_24C849140();
  swift_allocObject();
  swift_retain();
  sub_24C849130();
  sub_24C7D73F0();
  sub_24C849120();
  swift_release();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = sub_24C7D6FFC;
  v12[3] = v11;
  v12[4] = a6;
  swift_bridgeObjectRetain();
  swift_retain();
  a7(v14, sub_24C7D7488, v12);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_24C7D069C(id a1, unint64_t a2, char a3, void (*a4)(id, uint64_t, unint64_t, uint64_t), int a5, int a6, void (*a7)(void), int a8, void *a9)
{
  if (a3)
  {
    id v13 = a1;
    a4(a1, 0, 0, 1);
    id v17 = a1;
    unint64_t v18 = a2;
    char v19 = 1;
  }
  else
  {
    sub_24C849170();
    swift_allocObject();
    sub_24C7D60D0((uint64_t)a1, a2);
    sub_24C849160();
    a7();
    uint64_t v14 = sub_24C849150();
    unint64_t v16 = v15;
    swift_release();
    sub_24C7D60D0(v14, v16);
    a4(a9, v14, v16, 0);
    sub_24C7D5FEC(v14, v16);
    sub_24C7D5FEC(v14, v16);
    id v17 = a1;
    unint64_t v18 = a2;
    char v19 = 0;
  }
  sub_24C7D72A4(v17, v18, v19);
}

uint64_t sub_24C7D0B04(uint64_t a1, void (*a2)(void *, uint64_t, unint64_t, uint64_t))
{
  sub_24C7D7828(a1, (uint64_t)&v10, &qword_2697EECB0);
  char v4 = v10;
  sub_24C7D7828(a1, (uint64_t)v11, &qword_2697EECB0);
  if (v11[32])
  {
    id v5 = v4;
    a2(v4, 0, 0, 1);
    return sub_24C7D74E0(a1);
  }
  else
  {
    sub_24C849170();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24C849160();
    sub_24C7D7568();
    uint64_t v7 = sub_24C849150();
    unint64_t v9 = v8;
    swift_release();
    sub_24C7D60D0(v7, v9);
    a2((void *)6, v7, v9, 0);
    sub_24C7D5FEC(v7, v9);
    sub_24C7D5FEC(v7, v9);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24C7D0FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t))
{
  uint64_t v27 = a8;
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v9 = v8;
  uint64_t v14 = sub_24C849BD0();
  uint64_t v29 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_24C849BF0();
  uint64_t v17 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  char v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(v9 + 48);
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = v9;
  v20[3] = a1;
  v20[4] = a2;
  v20[5] = a3;
  v20[6] = a4;
  aBlock[4] = v24;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24C7C25B4;
  aBlock[3] = v25;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v27(a3, a4);
  sub_24C849BE0();
  uint64_t v30 = MEMORY[0x263F8EE78];
  sub_24C7D6128((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v19, v16, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v28);
  return swift_release();
}

void sub_24C7D1294(uint64_t a1, unint64_t a2)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  sub_24C849140();
  swift_allocObject();
  sub_24C849130();
  sub_24C7D7F20();
  sub_24C849120();
  if (v2)
  {
    swift_release();
    switch(a2 >> 62)
    {
      case 1uLL:
        if (a1 >> 32 < (int)a1) {
          __break(1u);
        }
        sub_24C7D60D0(a1, a2);
        uint64_t v9 = sub_24C845A54((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24C817AE0);
        unint64_t v11 = v12;
        if (v12) {
          goto LABEL_17;
        }
        goto LABEL_10;
      case 2uLL:
        uint64_t v7 = *(void *)(a1 + 16);
        uint64_t v8 = *(void *)(a1 + 24);
        sub_24C7D60D0(a1, a2);
        swift_retain();
        swift_retain();
        uint64_t v9 = sub_24C845A54(v7, v8, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24C817AE0);
        unint64_t v11 = v10;
        swift_release();
        swift_release();
        if (v11) {
          goto LABEL_17;
        }
LABEL_10:
        uint64_t v29 = a1;
        unint64_t v30 = a2;
        sub_24C7D60D0(a1, a2);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC70);
        if (swift_dynamicCast())
        {
          sub_24C7D76C8(v27, (uint64_t)&v31);
          __swift_project_boxed_opaque_existential_1(&v31, v33);
          if (sub_24C84A320())
          {
            sub_24C7D5FEC(a1, a2);
            __swift_project_boxed_opaque_existential_1(&v31, v33);
            sub_24C84A310();
            unint64_t v11 = *((void *)&v27[0] + 1);
            uint64_t v9 = *(void *)&v27[0];
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
            goto LABEL_18;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
        }
        else
        {
          uint64_t v28 = 0;
          memset(v27, 0, sizeof(v27));
          sub_24C7D7C08((uint64_t)v27, &qword_2697EF6E0);
        }
        uint64_t v5 = sub_24C8479D0(a1, a2);
LABEL_16:
        uint64_t v9 = v5;
        unint64_t v11 = v6;
LABEL_17:
        sub_24C7D5FEC(a1, a2);
LABEL_18:
        if (qword_2697EEA80 != -1) {
          swift_once();
        }
        uint64_t v13 = sub_24C849590();
        __swift_project_value_buffer(v13, (uint64_t)qword_2697EFBE0);
        id v14 = v2;
        swift_retain();
        id v15 = v2;
        swift_retain();
        swift_bridgeObjectRetain();
        unint64_t v16 = sub_24C849570();
        os_log_type_t v17 = sub_24C84A0F0();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = swift_slowAlloc();
          uint64_t v26 = swift_slowAlloc();
          uint64_t v31 = v26;
          *(_DWORD *)uint64_t v18 = 136315906;
          swift_bridgeObjectRetain();
          *(void *)&v27[0] = sub_24C7DE68C(v9, v11, &v31);
          sub_24C84A1A0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v18 + 12) = 2080;
          *(void *)&v27[0] = sub_24C7DE68C(0x657361656C2FLL, 0xE600000000000000, &v31);
          sub_24C84A1A0();
          *(_WORD *)(v18 + 22) = 2080;
          *(void *)&v27[0] = v2;
          id v19 = v2;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
          uint64_t v20 = sub_24C849ED0();
          *(void *)&v27[0] = sub_24C7DE68C(v20, v21, &v31);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();

          *(_WORD *)(v18 + 32) = 2080;
          swift_retain();
          uint64_t v22 = CosmoMultiplexChannelHost.description.getter();
          unint64_t v24 = v23;
          swift_release();
          *(void *)&v27[0] = sub_24C7DE68C(v22, v24, &v31);
          sub_24C84A1A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24C7BE000, v16, v17, "[Respond] Failed to deserialize request from body=%s, type=%s error=%s %s", (uint8_t *)v18, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v26, -1, -1);
          MEMORY[0x2532FCCC0](v18, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();

          swift_release_n();
        }
        sub_24C7D7054();
        swift_allocError();
        *(_OWORD *)uint64_t v25 = xmmword_24C84AFF0;
        *(unsigned char *)(v25 + 16) = 2;
        swift_willThrow();

        break;
      case 3uLL:
        *(void *)((char *)v27 + 6) = 0;
        *(void *)&v27[0] = 0;
        sub_24C817AE0(&v31);
        sub_24C7D5FEC(a1, a2);
        uint64_t v9 = v31;
        unint64_t v11 = v32;
        goto LABEL_18;
      default:
        uint64_t v31 = a1;
        LOWORD(v32) = a2;
        BYTE2(v32) = BYTE2(a2);
        BYTE3(v32) = BYTE3(a2);
        BYTE4(v32) = BYTE4(a2);
        BYTE5(v32) = BYTE5(a2);
        uint64_t v5 = sub_24C849F30();
        goto LABEL_16;
    }
  }
  else
  {
    swift_release();
  }
}

void sub_24C7D1970(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v41 = *MEMORY[0x263EF8340];
  sub_24C849140();
  swift_allocObject();
  sub_24C849130();
  a4();
  sub_24C849120();
  if (v6)
  {
    swift_release();
    switch(a2 >> 62)
    {
      case 1uLL:
        if (a1 >> 32 < (int)a1) {
          __break(1u);
        }
        sub_24C7D60D0(a1, a2);
        uint64_t v15 = sub_24C845A54((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24C817AE0);
        unint64_t v17 = v18;
        if (v18) {
          goto LABEL_17;
        }
        goto LABEL_10;
      case 2uLL:
        uint64_t v13 = *(void *)(a1 + 16);
        uint64_t v14 = *(void *)(a1 + 24);
        sub_24C7D60D0(a1, a2);
        swift_retain();
        swift_retain();
        uint64_t v15 = sub_24C845A54(v13, v14, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24C817AE0);
        unint64_t v17 = v16;
        swift_release();
        swift_release();
        if (v17) {
          goto LABEL_17;
        }
LABEL_10:
        uint64_t v36 = a1;
        unint64_t v37 = a2;
        sub_24C7D60D0(a1, a2);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC70);
        if (swift_dynamicCast())
        {
          sub_24C7D76C8(v34, (uint64_t)&v38);
          __swift_project_boxed_opaque_existential_1(&v38, v40);
          if (sub_24C84A320())
          {
            sub_24C7D5FEC(a1, a2);
            __swift_project_boxed_opaque_existential_1(&v38, v40);
            sub_24C84A310();
            unint64_t v17 = *((void *)&v34[0] + 1);
            uint64_t v15 = *(void *)&v34[0];
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
            goto LABEL_18;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
        }
        else
        {
          uint64_t v35 = 0;
          memset(v34, 0, sizeof(v34));
          sub_24C7D7C08((uint64_t)v34, &qword_2697EF6E0);
        }
        uint64_t v11 = sub_24C8479D0(a1, a2);
LABEL_16:
        uint64_t v15 = v11;
        unint64_t v17 = v12;
LABEL_17:
        sub_24C7D5FEC(a1, a2);
LABEL_18:
        uint64_t v33 = a6;
        if (qword_2697EEA80 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_24C849590();
        __swift_project_value_buffer(v19, (uint64_t)qword_2697EFBE0);
        id v20 = v6;
        swift_retain();
        id v21 = v6;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_24C849570();
        os_log_type_t v23 = sub_24C84A0F0();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = swift_slowAlloc();
          uint64_t v32 = swift_slowAlloc();
          uint64_t v38 = v32;
          *(_DWORD *)uint64_t v24 = 136315906;
          swift_bridgeObjectRetain();
          *(void *)&v34[0] = sub_24C7DE68C(v15, v17, &v38);
          sub_24C84A1A0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v24 + 12) = 2080;
          *(void *)&v34[0] = sub_24C7DE68C(v33, 0xE600000000000000, &v38);
          sub_24C84A1A0();
          *(_WORD *)(v24 + 22) = 2080;
          *(void *)&v34[0] = v6;
          id v25 = v6;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
          uint64_t v26 = sub_24C849ED0();
          *(void *)&v34[0] = sub_24C7DE68C(v26, v27, &v38);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();

          *(_WORD *)(v24 + 32) = 2080;
          swift_retain();
          uint64_t v28 = CosmoMultiplexChannelHost.description.getter();
          unint64_t v30 = v29;
          swift_release();
          *(void *)&v34[0] = sub_24C7DE68C(v28, v30, &v38);
          sub_24C84A1A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24C7BE000, v22, v23, "[Respond] Failed to deserialize request from body=%s, type=%s error=%s %s", (uint8_t *)v24, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v32, -1, -1);
          MEMORY[0x2532FCCC0](v24, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();

          swift_release_n();
        }
        sub_24C7D7054();
        swift_allocError();
        *(_OWORD *)uint64_t v31 = xmmword_24C84AFF0;
        *(unsigned char *)(v31 + 16) = 2;
        swift_willThrow();

        break;
      case 3uLL:
        *(void *)((char *)v34 + 6) = 0;
        *(void *)&v34[0] = 0;
        sub_24C817AE0(&v38);
        sub_24C7D5FEC(a1, a2);
        uint64_t v15 = v38;
        unint64_t v17 = v39;
        goto LABEL_18;
      default:
        uint64_t v38 = a1;
        LOWORD(v39) = a2;
        BYTE2(v39) = BYTE2(a2);
        BYTE3(v39) = BYTE3(a2);
        BYTE4(v39) = BYTE4(a2);
        BYTE5(v39) = BYTE5(a2);
        uint64_t v11 = sub_24C849F30();
        goto LABEL_16;
    }
  }
  else
  {
    swift_release();
  }
}

void sub_24C7D2058(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(void), unint64_t *a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  sub_24C849140();
  swift_allocObject();
  sub_24C849130();
  a4(0);
  sub_24C7D6128(a5, a6);
  sub_24C849120();
  if (v9)
  {
    swift_release();
    switch(a2 >> 62)
    {
      case 1uLL:
        if (a1 >> 32 < (int)a1) {
          __break(1u);
        }
        sub_24C7D60D0(a1, a2);
        uint64_t v15 = sub_24C845A54((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24C817AE0);
        unint64_t v17 = v34;
        if (v34) {
          goto LABEL_6;
        }
        goto LABEL_16;
      case 2uLL:
        uint64_t v18 = *(void *)(a1 + 16);
        uint64_t v19 = *(void *)(a1 + 24);
        sub_24C7D60D0(a1, a2);
        swift_retain();
        swift_retain();
        uint64_t v15 = sub_24C845A54(v18, v19, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24C817AE0);
        unint64_t v17 = v20;
        swift_release();
        swift_release();
        if (v17) {
          goto LABEL_6;
        }
LABEL_16:
        uint64_t v40 = a1;
        unint64_t v41 = a2;
        sub_24C7D60D0(a1, a2);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC70);
        if (swift_dynamicCast())
        {
          sub_24C7D76C8(v38, (uint64_t)&v42);
          __swift_project_boxed_opaque_existential_1(&v42, v44);
          if (sub_24C84A320())
          {
            sub_24C7D5FEC(a1, a2);
            __swift_project_boxed_opaque_existential_1(&v42, v44);
            sub_24C84A310();
            unint64_t v17 = *((void *)&v38[0] + 1);
            uint64_t v15 = *(void *)&v38[0];
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
            goto LABEL_8;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
        }
        else
        {
          uint64_t v39 = 0;
          memset(v38, 0, sizeof(v38));
          sub_24C7D7C08((uint64_t)v38, &qword_2697EF6E0);
        }
        uint64_t v15 = sub_24C8479D0(a1, a2);
        unint64_t v17 = v35;
        sub_24C7D5FEC(a1, a2);
LABEL_8:
        if (qword_2697EEA80 != -1) {
          swift_once();
        }
        uint64_t v21 = sub_24C849590();
        __swift_project_value_buffer(v21, (uint64_t)qword_2697EFBE0);
        id v22 = v9;
        swift_retain();
        id v23 = v9;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v24 = sub_24C849570();
        os_log_type_t v25 = sub_24C84A0F0();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = swift_slowAlloc();
          uint64_t v37 = swift_slowAlloc();
          uint64_t v42 = v37;
          *(_DWORD *)uint64_t v26 = 136315906;
          swift_bridgeObjectRetain();
          *(void *)&v38[0] = sub_24C7DE68C(v15, v17, &v42);
          sub_24C84A1A0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v26 + 12) = 2080;
          *(void *)&v38[0] = sub_24C7DE68C(a8, a9, &v42);
          sub_24C84A1A0();
          *(_WORD *)(v26 + 22) = 2080;
          *(void *)&v38[0] = v9;
          id v27 = v9;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
          uint64_t v28 = sub_24C849ED0();
          *(void *)&v38[0] = sub_24C7DE68C(v28, v29, &v42);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();

          *(_WORD *)(v26 + 32) = 2080;
          swift_retain();
          uint64_t v30 = CosmoMultiplexChannelHost.description.getter();
          unint64_t v32 = v31;
          swift_release();
          *(void *)&v38[0] = sub_24C7DE68C(v30, v32, &v42);
          sub_24C84A1A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24C7BE000, v24, v25, "[Respond] Failed to deserialize request from body=%s, type=%s error=%s %s", (uint8_t *)v26, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v37, -1, -1);
          MEMORY[0x2532FCCC0](v26, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();

          swift_release_n();
        }
        sub_24C7D7054();
        swift_allocError();
        *(_OWORD *)uint64_t v33 = xmmword_24C84AFF0;
        *(unsigned char *)(v33 + 16) = 2;
        swift_willThrow();

        break;
      case 3uLL:
        *(void *)((char *)v38 + 6) = 0;
        *(void *)&v38[0] = 0;
        sub_24C817AE0(&v42);
        sub_24C7D5FEC(a1, a2);
        uint64_t v15 = v42;
        unint64_t v17 = v43;
        goto LABEL_8;
      default:
        uint64_t v42 = a1;
        LOWORD(v43) = a2;
        BYTE2(v43) = BYTE2(a2);
        BYTE3(v43) = BYTE3(a2);
        BYTE4(v43) = BYTE4(a2);
        BYTE5(v43) = BYTE5(a2);
        uint64_t v15 = sub_24C849F30();
        unint64_t v17 = v16;
LABEL_6:
        sub_24C7D5FEC(a1, a2);
        goto LABEL_8;
    }
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_24C7D2778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_2697EEA80 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_24C849590();
  __swift_project_value_buffer(v10, (uint64_t)qword_2697EFBE0);
  swift_retain_n();
  uint64_t v11 = sub_24C849570();
  os_log_type_t v12 = sub_24C84A110();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v26 = a3;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v28[0] = v24;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_24C7DE68C(0x657361656C2FLL, 0xE600000000000000, v28);
    sub_24C84A1A0();
    *(_WORD *)(v13 + 12) = 2080;
    swift_retain();
    uint64_t v14 = CosmoMultiplexChannelHost.description.getter();
    uint64_t v25 = a4;
    uint64_t v15 = a5;
    unint64_t v17 = v16;
    swift_release();
    sub_24C7DE68C(v14, v17, v28);
    sub_24C84A1A0();
    swift_release_n();
    a5 = v15;
    a4 = v25;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v11, v12, "[Respond] Registered handler for path=%s, %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v24, -1, -1);
    uint64_t v18 = v13;
    a3 = v26;
    MEMORY[0x2532FCCC0](v18, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a1;
  uint64_t v19[3] = a2;
  v19[4] = a3;
  unint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a4;
  v20[3] = a5;
  v20[4] = a1;
  uint64_t v21 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
  swift_beginAccess();
  swift_retain_n();
  swift_retain();
  sub_24C7D6E3C(a4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = *v21;
  *uint64_t v21 = 0x8000000000000000;
  sub_24C846A20((uint64_t)sub_24C7D7EA8, (uint64_t)v19, (uint64_t)sub_24C7D7F00, (uint64_t)v20, 0x657361656C2FLL, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  *uint64_t v21 = v27;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_24C7D2AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_2697EEA80 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_24C849590();
  __swift_project_value_buffer(v10, (uint64_t)qword_2697EFBE0);
  swift_retain_n();
  uint64_t v11 = sub_24C849570();
  os_log_type_t v12 = sub_24C84A110();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v26 = a3;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v28[0] = v24;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_24C7DE68C(0x65736F6C632FLL, 0xE600000000000000, v28);
    sub_24C84A1A0();
    *(_WORD *)(v13 + 12) = 2080;
    swift_retain();
    uint64_t v14 = CosmoMultiplexChannelHost.description.getter();
    uint64_t v25 = a4;
    uint64_t v15 = a5;
    unint64_t v17 = v16;
    swift_release();
    sub_24C7DE68C(v14, v17, v28);
    sub_24C84A1A0();
    swift_release_n();
    a5 = v15;
    a4 = v25;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v11, v12, "[Respond] Registered handler for path=%s, %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v24, -1, -1);
    uint64_t v18 = v13;
    a3 = v26;
    MEMORY[0x2532FCCC0](v18, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a1;
  uint64_t v19[3] = a2;
  v19[4] = a3;
  unint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a4;
  v20[3] = a5;
  v20[4] = a1;
  uint64_t v21 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
  swift_beginAccess();
  swift_retain_n();
  swift_retain();
  sub_24C7D6E3C(a4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = *v21;
  *uint64_t v21 = 0x8000000000000000;
  sub_24C846A20((uint64_t)sub_24C7D7C98, (uint64_t)v19, (uint64_t)sub_24C7D7CA8, (uint64_t)v20, 0x65736F6C632FLL, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  *uint64_t v21 = v27;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_24C7D2DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_2697EEA80 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_24C849590();
  __swift_project_value_buffer(v10, (uint64_t)qword_2697EFBE0);
  swift_retain_n();
  uint64_t v11 = sub_24C849570();
  os_log_type_t v12 = sub_24C84A110();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v26 = a3;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v28[0] = v24;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_24C7DE68C(0x73656C69662FLL, 0xE600000000000000, v28);
    sub_24C84A1A0();
    *(_WORD *)(v13 + 12) = 2080;
    swift_retain();
    uint64_t v14 = CosmoMultiplexChannelHost.description.getter();
    uint64_t v25 = a4;
    uint64_t v15 = a5;
    unint64_t v17 = v16;
    swift_release();
    sub_24C7DE68C(v14, v17, v28);
    sub_24C84A1A0();
    swift_release_n();
    a5 = v15;
    a4 = v25;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v11, v12, "[Respond] Registered handler for path=%s, %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v24, -1, -1);
    uint64_t v18 = v13;
    a3 = v26;
    MEMORY[0x2532FCCC0](v18, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a1;
  uint64_t v19[3] = a2;
  v19[4] = a3;
  unint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a4;
  v20[3] = a5;
  v20[4] = a1;
  uint64_t v21 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
  swift_beginAccess();
  swift_retain_n();
  swift_retain();
  sub_24C7D6E3C(a4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = *v21;
  *uint64_t v21 = 0x8000000000000000;
  sub_24C846A20((uint64_t)sub_24C7D7680, (uint64_t)v19, (uint64_t)sub_24C7D7690, (uint64_t)v20, 0x73656C69662FLL, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  *uint64_t v21 = v27;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_24C7D3108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_2697EEA80 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_24C849590();
  __swift_project_value_buffer(v10, (uint64_t)qword_2697EFBE0);
  swift_retain_n();
  uint64_t v11 = sub_24C849570();
  os_log_type_t v12 = sub_24C84A110();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v26 = a3;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v28[0] = v24;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_24C7DE68C(0x656C69662FLL, 0xE500000000000000, v28);
    sub_24C84A1A0();
    *(_WORD *)(v13 + 12) = 2080;
    swift_retain();
    uint64_t v14 = CosmoMultiplexChannelHost.description.getter();
    uint64_t v25 = a4;
    uint64_t v15 = a5;
    unint64_t v17 = v16;
    swift_release();
    sub_24C7DE68C(v14, v17, v28);
    sub_24C84A1A0();
    swift_release_n();
    a5 = v15;
    a4 = v25;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v11, v12, "[Respond] Registered handler for path=%s, %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v24, -1, -1);
    uint64_t v18 = v13;
    a3 = v26;
    MEMORY[0x2532FCCC0](v18, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a1;
  uint64_t v19[3] = a2;
  v19[4] = a3;
  unint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a4;
  v20[3] = a5;
  v20[4] = a1;
  uint64_t v21 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
  swift_beginAccess();
  swift_retain_n();
  swift_retain();
  sub_24C7D6E3C(a4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v27 = *v21;
  *uint64_t v21 = 0x8000000000000000;
  sub_24C846A20((uint64_t)sub_24C7D79D0, (uint64_t)v19, (uint64_t)sub_24C7D79E0, (uint64_t)v20, 0x656C69662FLL, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
  *uint64_t v21 = v27;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_24C7D3438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_2697EEA80 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_24C849590();
  __swift_project_value_buffer(v9, (uint64_t)qword_2697EFBE0);
  swift_retain_n();
  uint64_t v10 = sub_24C849570();
  os_log_type_t v11 = sub_24C84A110();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v23 = a3;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v26[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315394;
    sub_24C7DE68C(0x467463656A65722FLL, 0xEB00000000656C69, v26);
    sub_24C84A1A0();
    *(_WORD *)(v12 + 12) = 2080;
    swift_retain();
    uint64_t v14 = CosmoMultiplexChannelHost.description.getter();
    unint64_t v16 = v15;
    swift_release();
    sub_24C7DE68C(v14, v16, v26);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v10, v11, "[Respond] Registered handler for path=%s, %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v13, -1, -1);
    uint64_t v17 = v12;
    a3 = v23;
    MEMORY[0x2532FCCC0](v17, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a4;
  uint64_t v19[3] = a5;
  v19[4] = a1;
  unint64_t v20 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
  swift_beginAccess();
  swift_retain_n();
  swift_retain();
  sub_24C7D6E3C(a4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v20;
  uint64_t *v20 = 0x8000000000000000;
  sub_24C846A20((uint64_t)sub_24C7D7908, (uint64_t)v18, (uint64_t)sub_24C7D7918, (uint64_t)v19, 0x467463656A65722FLL, 0xEB00000000656C69, isUniquelyReferenced_nonNull_native);
  uint64_t *v20 = v25;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_24C7D3778(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(long long *, uint64_t (*)(uint64_t a1), uint64_t))
{
  sub_24C7D1294(a1, a2);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  swift_retain();
  a6(&v11, sub_24C7D7F74, v9);
  return swift_release();
}

uint64_t sub_24C7D3870(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t (*)(uint64_t a1), uint64_t))
{
  sub_24C7D1970(a1, a2, a5, (void (*)(void))sub_24C7D7CC4, (uint64_t)&type metadata for CloseRequest, 0x65736F6C632FLL);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  uint64_t v10 = swift_retain();
  a6(v10, sub_24C7D7D18, v9);
  return swift_release();
}

uint64_t sub_24C7D39A4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t (*)(uint64_t a1), uint64_t))
{
  sub_24C7D1970(a1, a2, a5, (void (*)(void))sub_24C7D7744, (uint64_t)&type metadata for FileListRequest, 0x73656C69662FLL);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  uint64_t v10 = swift_retain();
  a6(v10, sub_24C7D7798, v9);
  return swift_release();
}

uint64_t sub_24C7D3AD8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v12 = type metadata accessor for FileRequest(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  unint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v23 - v17;
  MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v23 - v19;
  sub_24C7D2058(a1, a2, a5, (void (*)(void))type metadata accessor for FileRequest, &qword_2697EED38, (void (*)(uint64_t))type metadata accessor for FileRequest, (uint64_t)&protocol conformance descriptor for FileRequest, 0x656C69662FLL, 0xE500000000000000);
  sub_24C7D79F0((uint64_t)v18, (uint64_t)v20, type metadata accessor for FileRequest);
  sub_24C7D7AC4((uint64_t)v20, (uint64_t)v15, type metadata accessor for FileRequest);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + 24) = a4;
  swift_retain();
  a6(v15, sub_24C7D7A58, v21);
  swift_release();
  sub_24C7D7B2C((uint64_t)v15, type metadata accessor for FileRequest);
  return sub_24C7D7B2C((uint64_t)v20, type metadata accessor for FileRequest);
}

uint64_t sub_24C7D3D18(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v12 = type metadata accessor for RejectFileRequest(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  unint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v23 - v17;
  MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v23 - v19;
  sub_24C7D2058(a1, a2, a5, (void (*)(void))type metadata accessor for RejectFileRequest, &qword_2697EED10, (void (*)(uint64_t))type metadata accessor for RejectFileRequest, (uint64_t)&protocol conformance descriptor for RejectFileRequest, 0x467463656A65722FLL, 0xEB00000000656C69);
  sub_24C7D79F0((uint64_t)v18, (uint64_t)v20, type metadata accessor for RejectFileRequest);
  sub_24C7D7AC4((uint64_t)v20, (uint64_t)v15, type metadata accessor for RejectFileRequest);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a3;
  *(void *)(v21 + 24) = a4;
  swift_retain();
  a6(v15, sub_24C7D7928, v21);
  swift_release();
  sub_24C7D7B2C((uint64_t)v15, type metadata accessor for RejectFileRequest);
  return sub_24C7D7B2C((uint64_t)v20, type metadata accessor for RejectFileRequest);
}

uint64_t sub_24C7D3F64(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t *))
{
  int v8 = a1;
  if (a4)
  {
    uint64_t v10 = a1;
    uint64_t v11 = a2;
    LOBYTE(v12) = a3;
    char v15 = 1;
    sub_24C7D77BC(a1, a2, a3);
  }
  else
  {
    uint64_t v13 = &type metadata for LeaseRequest.Response;
    unint64_t v14 = sub_24C7D7F8C();
    LODWORD(v10) = v8;
    uint64_t v11 = a2;
    uint64_t v12 = a3;
    char v15 = 0;
    swift_bridgeObjectRetain();
  }
  a5(&v10);
  return sub_24C7D7C08((uint64_t)&v10, &qword_2697EECC8);
}

uint64_t sub_24C7D4018(uint64_t a1, uint64_t a2, __int16 a3, void (*a4)(uint64_t *))
{
  if ((a3 & 0x100) != 0)
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2;
    char v9 = a3;
    char v12 = 1;
    sub_24C7D77BC(a1, a2, a3);
  }
  else
  {
    uint64_t v10 = &type metadata for FileListRequest.Response;
    LODWORD(v7) = a1;
    unint64_t v11 = sub_24C7D77D4();
    uint64_t v8 = a2;
    char v12 = 0;
    swift_bridgeObjectRetain();
  }
  a4(&v7);
  return sub_24C7D7C08((uint64_t)&v7, &qword_2697EECC8);
}

uint64_t sub_24C7D40BC(uint64_t a1, void (*a2)(long long *))
{
  uint64_t v4 = type metadata accessor for CosmoFileHttpResponse(0);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EED30);
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C7D7BA4(a1, (uint64_t)v9, &qword_2697EED30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    char v10 = v9[16];
    long long v13 = *(_OWORD *)v9;
    char v14 = v10;
    char v17 = 1;
    a2(&v13);
  }
  else
  {
    sub_24C7D79F0((uint64_t)v9, (uint64_t)v6, type metadata accessor for CosmoFileHttpResponse);
    uint64_t v15 = v4;
    uint64_t v16 = sub_24C7D6128(&qword_2697EED40, (void (*)(uint64_t))type metadata accessor for CosmoFileHttpResponse);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
    sub_24C7D7AC4((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, type metadata accessor for CosmoFileHttpResponse);
    char v17 = 0;
    a2(&v13);
    sub_24C7D7B2C((uint64_t)v6, type metadata accessor for CosmoFileHttpResponse);
  }
  return sub_24C7D7C08((uint64_t)&v13, &qword_2697EECC8);
}

uint64_t sub_24C7D4294(uint64_t a1, uint64_t a2, __int16 a3, void (*a4)(void *), uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  int v8 = a1;
  if ((a3 & 0x100) != 0)
  {
    v10[0] = a1;
    v10[1] = a2;
    char v11 = a3;
    char v14 = 1;
    sub_24C7D77BC(a1, a2, a3);
  }
  else
  {
    uint64_t v12 = a6;
    uint64_t v13 = a7();
    LODWORD(v10[0]) = v8;
    char v14 = 0;
  }
  a4(v10);
  return sub_24C7D7C08((uint64_t)v10, &qword_2697EECC8);
}

uint64_t sub_24C7D4320(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(unsigned char *, long long *, uint64_t, void))
{
  if (a6)
  {
    uint64_t v11 = result;
    swift_retain();
    sub_24C7D1294(v11, a2);
    v40[0] = v34;
    sub_24C7D7BA4(a3, (uint64_t)&v34, &qword_2697EECC8);
    char v12 = v36;
    if (v36)
    {
      uint64_t v14 = *((void *)&v34 + 1);
      uint64_t v13 = v34;
      unsigned __int8 v15 = v35;
      long long v37 = v34;
      uint64_t v38 = v35;
      char v39 = 1;
LABEL_13:
      a6(v40, &v37, a4, a5 & 1);
      sub_24C7D6F70((uint64_t)a6);
      return sub_24C7D7F10(v13, v14, v15, v12);
    }
    sub_24C7D76C8(&v34, (uint64_t)v33);
    sub_24C7D76E0((uint64_t)v33, (uint64_t)v32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECD0);
    if ((swift_dynamicCast() & 1) != 0 && v30 != 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      uint64_t v13 = v28;
      uint64_t v14 = v29;
      unsigned __int8 v15 = v30;
      *(void *)&long long v37 = v28;
      *((void *)&v37 + 1) = v29;
      uint64_t v38 = v30;
      char v39 = 0;
      goto LABEL_13;
    }
    if (qword_2697EEA80 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_24C849590();
    __swift_project_value_buffer(v16, (uint64_t)qword_2697EFBE0);
    sub_24C7D76E0((uint64_t)v33, (uint64_t)v32);
    char v17 = sub_24C849570();
    os_log_type_t v18 = sub_24C84A0F0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v31 = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      sub_24C7D76E0((uint64_t)v32, (uint64_t)&v28);
      sub_24C7D7BA4((uint64_t)&v28, (uint64_t)&v26, &qword_2697EECD8);
      if (v27)
      {
        sub_24C7D76C8(&v26, (uint64_t)v25);
        sub_24C7D76E0((uint64_t)v25, (uint64_t)&v24);
        uint64_t v21 = sub_24C849ED0();
        unint64_t v23 = v22;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      }
      else
      {
        unint64_t v23 = 0xE300000000000000;
        uint64_t v21 = 7104878;
      }
      sub_24C7D7C08((uint64_t)&v28, &qword_2697EECD8);
      uint64_t v28 = sub_24C7DE68C(v21, v23, &v31);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
      _os_log_impl(&dword_24C7BE000, v17, v18, "[Respond] Could not cast %s into response type", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v20, -1, -1);
      MEMORY[0x2532FCCC0](v19, -1, -1);
      sub_24C7D6F70((uint64_t)a6);
    }
    else
    {
      sub_24C7D6F70((uint64_t)a6);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  return result;
}

uint64_t sub_24C7D46A8(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(uint64_t, long long *, uint64_t, void), uint64_t a7, uint64_t a8)
{
  if (a6)
  {
    uint64_t v14 = result;
    swift_retain();
    sub_24C7D1970(v14, a2, a8, (void (*)(void))sub_24C7D7CC4, (uint64_t)&type metadata for CloseRequest, 0x65736F6C632FLL);
    uint64_t v15 = sub_24C7D7BA4(a3, (uint64_t)&v36, &qword_2697EECC8);
    char v16 = v38;
    if (v38)
    {
      uint64_t v18 = *((void *)&v36 + 1);
      uint64_t v17 = v36;
      unsigned __int8 v19 = v37;
      long long v39 = v36;
      LOBYTE(v40) = v37;
      HIBYTE(v40) = 1;
LABEL_6:
      a6(v15, &v39, a4, a5 & 1);
      sub_24C7D6F70((uint64_t)a6);
      return sub_24C7D7CB8(v17, v18, v19, v16);
    }
    sub_24C7D76C8(&v36, (uint64_t)v35);
    sub_24C7D76E0((uint64_t)v35, (uint64_t)v34);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECD0);
    if (swift_dynamicCast())
    {
      BYTE4(v32[0]) = 0;
      uint64_t v15 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      uint64_t v18 = 0;
      unsigned __int8 v19 = 0;
      uint64_t v17 = LODWORD(v32[0]);
      long long v39 = LODWORD(v32[0]);
      __int16 v40 = 0;
      goto LABEL_6;
    }
    if (qword_2697EEA80 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_24C849590();
    __swift_project_value_buffer(v20, (uint64_t)qword_2697EFBE0);
    sub_24C7D76E0((uint64_t)v35, (uint64_t)v34);
    uint64_t v21 = sub_24C849570();
    os_log_type_t v22 = sub_24C84A0F0();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v33 = v24;
      *(_DWORD *)unint64_t v23 = 136315138;
      sub_24C7D76E0((uint64_t)v34, (uint64_t)v32);
      sub_24C7D7BA4((uint64_t)v32, (uint64_t)&v30, &qword_2697EECD8);
      if (v31)
      {
        sub_24C7D76C8(&v30, (uint64_t)v29);
        sub_24C7D76E0((uint64_t)v29, (uint64_t)&v28);
        uint64_t v25 = sub_24C849ED0();
        unint64_t v27 = v26;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      }
      else
      {
        unint64_t v27 = 0xE300000000000000;
        uint64_t v25 = 7104878;
      }
      sub_24C7D7C08((uint64_t)v32, &qword_2697EECD8);
      v32[0] = sub_24C7DE68C(v25, v27, &v33);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      _os_log_impl(&dword_24C7BE000, v21, v22, "[Respond] Could not cast %s into response type", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v24, -1, -1);
      MEMORY[0x2532FCCC0](v23, -1, -1);
      sub_24C7D6F70((uint64_t)a6);
    }
    else
    {
      sub_24C7D6F70((uint64_t)a6);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  return result;
}

uint64_t sub_24C7D4A64(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(uint64_t, long long *, uint64_t, void), uint64_t a7, uint64_t a8)
{
  if (a6)
  {
    uint64_t v14 = result;
    swift_retain();
    sub_24C7D1970(v14, a2, a8, (void (*)(void))sub_24C7D7744, (uint64_t)&type metadata for FileListRequest, 0x73656C69662FLL);
    uint64_t v15 = sub_24C7D7BA4(a3, (uint64_t)&v37, &qword_2697EECC8);
    char v16 = v39;
    if (v39)
    {
      uint64_t v18 = *((void *)&v37 + 1);
      uint64_t v17 = v37;
      unsigned __int8 v19 = v38;
      long long v40 = v37;
      LOBYTE(v41) = v38;
      HIBYTE(v41) = 1;
LABEL_7:
      a6(v15, &v40, a4, a5 & 1);
      sub_24C7D6F70((uint64_t)a6);
      return sub_24C7D76A0(v17, v18, v19, v16);
    }
    sub_24C7D76C8(&v37, (uint64_t)v36);
    sub_24C7D76E0((uint64_t)v36, (uint64_t)v35);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECD0);
    if ((swift_dynamicCast() & 1) != 0 && v33)
    {
      uint64_t v15 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      unsigned __int8 v19 = 0;
      uint64_t v17 = v32;
      uint64_t v18 = v33;
      *(void *)&long long v40 = v32;
      *((void *)&v40 + 1) = v33;
      __int16 v41 = 0;
      goto LABEL_7;
    }
    if (qword_2697EEA80 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_24C849590();
    __swift_project_value_buffer(v20, (uint64_t)qword_2697EFBE0);
    sub_24C7D76E0((uint64_t)v36, (uint64_t)v35);
    uint64_t v21 = sub_24C849570();
    os_log_type_t v22 = sub_24C84A0F0();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v34 = v24;
      *(_DWORD *)unint64_t v23 = 136315138;
      sub_24C7D76E0((uint64_t)v35, (uint64_t)&v32);
      sub_24C7D7BA4((uint64_t)&v32, (uint64_t)&v30, &qword_2697EECD8);
      if (v31)
      {
        sub_24C7D76C8(&v30, (uint64_t)v29);
        sub_24C7D76E0((uint64_t)v29, (uint64_t)&v28);
        uint64_t v25 = sub_24C849ED0();
        unint64_t v27 = v26;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      }
      else
      {
        unint64_t v27 = 0xE300000000000000;
        uint64_t v25 = 7104878;
      }
      sub_24C7D7C08((uint64_t)&v32, &qword_2697EECD8);
      uint64_t v32 = sub_24C7DE68C(v25, v27, &v34);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      _os_log_impl(&dword_24C7BE000, v21, v22, "[Respond] Could not cast %s into response type", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v24, -1, -1);
      MEMORY[0x2532FCCC0](v23, -1, -1);
      sub_24C7D6F70((uint64_t)a6);
    }
    else
    {
      sub_24C7D6F70((uint64_t)a6);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  }
  return result;
}

uint64_t sub_24C7D4E24(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, void (*a6)(void, void, void, void), uint64_t a7, uint64_t a8)
{
  int v45 = a5;
  uint64_t v46 = a4;
  uint64_t v47 = a3;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EED28);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v43 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CosmoFileHttpResponse(0);
  uint64_t v42 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EED30);
  MEMORY[0x270FA5388](v44);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FileRequest(0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  os_log_type_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v20);
  uint64_t v48 = (uint64_t)&v41 - v24;
  uint64_t v49 = a6;
  if (a6)
  {
    swift_retain();
    sub_24C7D2058(a1, a2, a8, (void (*)(void))type metadata accessor for FileRequest, &qword_2697EED38, (void (*)(uint64_t))type metadata accessor for FileRequest, (uint64_t)&protocol conformance descriptor for FileRequest, 0x656C69662FLL, 0xE500000000000000);
    uint64_t v25 = (uint64_t)v22;
    uint64_t v26 = v48;
    sub_24C7D79F0(v25, v48, type metadata accessor for FileRequest);
    sub_24C7D7BA4(v47, (uint64_t)&v58, &qword_2697EECC8);
    if (v60)
    {
      char v27 = v59;
      *(_OWORD *)uint64_t v18 = v58;
      v18[16] = v27;
    }
    else
    {
      sub_24C7D76C8(&v58, (uint64_t)v57);
      sub_24C7D76E0((uint64_t)v57, (uint64_t)v56);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECD0);
      uint64_t v28 = (uint64_t)v43;
      char v29 = swift_dynamicCast();
      long long v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
      if ((v29 & 1) == 0)
      {
        v30(v28, 1, 1, v14);
        sub_24C7D7C08(v28, &qword_2697EED28);
        if (qword_2697EEA80 != -1) {
          swift_once();
        }
        uint64_t v33 = sub_24C849590();
        __swift_project_value_buffer(v33, (uint64_t)qword_2697EFBE0);
        sub_24C7D76E0((uint64_t)v57, (uint64_t)v56);
        uint64_t v34 = sub_24C849570();
        os_log_type_t v35 = sub_24C84A0F0();
        if (os_log_type_enabled(v34, v35))
        {
          long long v36 = (uint8_t *)swift_slowAlloc();
          uint64_t v37 = swift_slowAlloc();
          uint64_t v55 = v37;
          *(_DWORD *)long long v36 = 136315138;
          sub_24C7D76E0((uint64_t)v56, (uint64_t)v54);
          sub_24C7D7BA4((uint64_t)v54, (uint64_t)&v52, &qword_2697EECD8);
          if (v53)
          {
            sub_24C7D76C8(&v52, (uint64_t)v51);
            sub_24C7D76E0((uint64_t)v51, (uint64_t)&v50);
            uint64_t v38 = sub_24C849ED0();
            unint64_t v40 = v39;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
          }
          else
          {
            unint64_t v40 = 0xE300000000000000;
            uint64_t v38 = 7104878;
          }
          sub_24C7D7C08((uint64_t)v54, &qword_2697EECD8);
          v54[0] = sub_24C7DE68C(v38, v40, &v55);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
          _os_log_impl(&dword_24C7BE000, v34, v35, "[Respond] Could not cast %s into response type", v36, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v37, -1, -1);
          MEMORY[0x2532FCCC0](v36, -1, -1);
          sub_24C7D6F70((uint64_t)v49);

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
          uint64_t v32 = v48;
          return sub_24C7D7B2C(v32, type metadata accessor for FileRequest);
        }
        sub_24C7D6F70((uint64_t)v49);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
LABEL_7:
        uint64_t v32 = v26;
        return sub_24C7D7B2C(v32, type metadata accessor for FileRequest);
      }
      v30(v28, 0, 1, v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      sub_24C7D79F0(v28, (uint64_t)v16, type metadata accessor for CosmoFileHttpResponse);
      sub_24C7D79F0((uint64_t)v16, (uint64_t)v18, type metadata accessor for CosmoFileHttpResponse);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = v49;
    v49(v26, v18, v46, v45 & 1);
    sub_24C7D6F70((uint64_t)v31);
    sub_24C7D7C08((uint64_t)v18, &qword_2697EED30);
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_24C7D5458(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(uint64_t, long long *, uint64_t, void), uint64_t a7, uint64_t a8)
{
  uint64_t v16 = type metadata accessor for RejectFileRequest(0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v17);
  if (a6)
  {
    uint64_t v37 = (uint64_t)&v36 - v21;
    swift_retain();
    sub_24C7D2058(a1, a2, a8, (void (*)(void))type metadata accessor for RejectFileRequest, &qword_2697EED10, (void (*)(uint64_t))type metadata accessor for RejectFileRequest, (uint64_t)&protocol conformance descriptor for RejectFileRequest, 0x467463656A65722FLL, 0xEB00000000656C69);
    sub_24C7D79F0((uint64_t)v19, v37, type metadata accessor for RejectFileRequest);
    sub_24C7D7BA4(a3, (uint64_t)&v46, &qword_2697EECC8);
    char v22 = v48;
    if (v48)
    {
      uint64_t v24 = *((void *)&v46 + 1);
      uint64_t v23 = v46;
      unsigned __int8 v25 = v47;
      long long v49 = v46;
      LOBYTE(v50) = v47;
      HIBYTE(v50) = 1;
    }
    else
    {
      sub_24C7D76C8(&v46, (uint64_t)v45);
      sub_24C7D76E0((uint64_t)v45, (uint64_t)v44);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECD0);
      if ((swift_dynamicCast() & 1) == 0)
      {
        if (qword_2697EEA80 != -1) {
          swift_once();
        }
        uint64_t v28 = sub_24C849590();
        __swift_project_value_buffer(v28, (uint64_t)qword_2697EFBE0);
        sub_24C7D76E0((uint64_t)v45, (uint64_t)v44);
        char v29 = sub_24C849570();
        os_log_type_t v30 = sub_24C84A0F0();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = (uint8_t *)swift_slowAlloc();
          uint64_t v32 = swift_slowAlloc();
          uint64_t v43 = v32;
          *(_DWORD *)uint64_t v31 = 136315138;
          sub_24C7D76E0((uint64_t)v44, (uint64_t)v42);
          sub_24C7D7BA4((uint64_t)v42, (uint64_t)&v40, &qword_2697EECD8);
          uint64_t v36 = a7;
          if (v41)
          {
            sub_24C7D76C8(&v40, (uint64_t)v39);
            sub_24C7D76E0((uint64_t)v39, (uint64_t)&v38);
            uint64_t v33 = sub_24C849ED0();
            unint64_t v35 = v34;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
          }
          else
          {
            unint64_t v35 = 0xE300000000000000;
            uint64_t v33 = 7104878;
          }
          sub_24C7D7C08((uint64_t)v42, &qword_2697EECD8);
          v42[0] = sub_24C7DE68C(v33, v35, &v43);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
          _os_log_impl(&dword_24C7BE000, v29, v30, "[Respond] Could not cast %s into response type", v31, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v32, -1, -1);
          MEMORY[0x2532FCCC0](v31, -1, -1);
          sub_24C7D6F70((uint64_t)a6);
        }
        else
        {
          sub_24C7D6F70((uint64_t)a6);

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
        uint64_t v27 = v37;
        return sub_24C7D7B2C(v27, type metadata accessor for RejectFileRequest);
      }
      BYTE4(v42[0]) = 0;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      uint64_t v24 = 0;
      unsigned __int8 v25 = 0;
      uint64_t v23 = LODWORD(v42[0]);
      long long v49 = LODWORD(v42[0]);
      __int16 v50 = 0;
    }
    uint64_t v26 = v37;
    a6(v37, &v49, a4, a5 & 1);
    sub_24C7D6F70((uint64_t)a6);
    sub_24C7D7CB8(v23, v24, v25, v22);
    uint64_t v27 = v26;
    return sub_24C7D7B2C(v27, type metadata accessor for RejectFileRequest);
  }
  return result;
}

uint64_t sub_24C7D5900(uint64_t a1, uint64_t a2)
{
  return sub_24C7D59F8(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_24C7D5918()
{
  sub_24C849E80();
  sub_24C849F50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24C7D596C()
{
  sub_24C849E80();
  sub_24C84A4E0();
  sub_24C849F50();
  uint64_t v0 = sub_24C84A510();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24C7D59E0(uint64_t a1, uint64_t a2)
{
  return sub_24C7D59F8(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_24C7D59F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_24C849E80();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24C7D5A3C(uint64_t a1, id *a2)
{
  uint64_t result = sub_24C849E60();
  *a2 = 0;
  return result;
}

uint64_t sub_24C7D5AB4(uint64_t a1, id *a2)
{
  char v3 = sub_24C849E70();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24C7D5B34@<X0>(uint64_t *a1@<X8>)
{
  sub_24C849E80();
  uint64_t v2 = sub_24C849E50();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24C7D5B78()
{
  return sub_24C849470();
}

uint64_t sub_24C7D5BC4()
{
  return sub_24C849460();
}

uint64_t sub_24C7D5C1C()
{
  return sub_24C84A510();
}

uint64_t sub_24C7D5C84()
{
  uint64_t v0 = sub_24C849E80();
  uint64_t v2 = v1;
  if (v0 == sub_24C849E80() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_24C84A440();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_24C7D5D10()
{
  swift_getWitnessTable();
  return sub_24C849450();
}

uint64_t sub_24C7D5D7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24C849E50();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24C7D5DC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24C849E80();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24C7D5DF0(uint64_t a1)
{
  uint64_t v2 = sub_24C7D6128(&qword_2697EED98, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_24C7D6128((unint64_t *)&unk_2697EEDA0, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t type metadata accessor for TransferHost()
{
  uint64_t result = qword_2697EEB30;
  if (!qword_2697EEB30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24C7D5EF8()
{
  unint64_t result = qword_2697EF320;
  if (!qword_2697EF320)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697EF320);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_24C7D5FC4(uint64_t a1)
{
  return a1;
}

uint64_t sub_24C7D5FEC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24C7D6044(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24C7D5FEC(a1, a2);
  }
  return a1;
}

uint64_t sub_24C7D6058()
{
  swift_release();
  swift_release();
  sub_24C7D5FEC(*(void *)(v0 + 40), *(void *)(v0 + 48));
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24C7D60A0()
{
  return sub_24C7D7E4C((uint64_t (*)(void, void, void, void, void))sub_24C7C1818);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_24C7D60D0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_24C7D6128(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24C7D6170(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24C7D61C0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24C7D6200()
{
  sub_24C7C7994(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

void sub_24C7D6208()
{
  sub_24C7CE2D4(v0);
}

unint64_t sub_24C7D6214()
{
  unint64_t result = qword_2697EEB20;
  if (!qword_2697EEB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEB20);
  }
  return result;
}

uint64_t dispatch thunk of TransferHostDelegate.attestationPassed(transferHost:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of TransferHostDelegate.attestationFailed(transferHost:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TransferHostDelegate.requestedPinCode(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of TransferHostDelegate.clientRejectedFile(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of TransferHostDelegate.finishedSendingFile(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of TransferHostDelegate.closed(reason:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TransferHost.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TransferHost.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C7D644CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

uint64_t sub_24C7D6474(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24C7D647C(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TransferHost.State()
{
  return &type metadata for TransferHost.State;
}

uint64_t sub_24C7D6494()
{
  return type metadata accessor for TransferHost();
}

void sub_24C7D649C()
{
  sub_24C7D6674(319, (unint64_t *)&qword_2697EEB40, MEMORY[0x263F07508]);
  if (v0 <= 0x3F)
  {
    sub_24C7D6674(319, (unint64_t *)&unk_2697EEB48, (void (*)(uint64_t))type metadata accessor for NetworkDescriptor);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for TransferHost(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TransferHost);
}

uint64_t dispatch thunk of TransferHost.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of TransferHost.__allocating_init(delegate:config:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 672))();
}

void sub_24C7D6674(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24C84A180();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for TransferHost.Configuration()
{
  return &type metadata for TransferHost.Configuration;
}

void type metadata accessor for SecKey(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for CFError(uint64_t a1)
{
}

uint64_t sub_24C7D6714()
{
  return sub_24C7D6128(&qword_2697EEC30, type metadata accessor for CFString);
}

uint64_t sub_24C7D675C()
{
  return sub_24C7D6128(&qword_2697EEC38, type metadata accessor for CFString);
}

unint64_t sub_24C7D67A4(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24C849440();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_24C84A200();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      uint64_t v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      uint64_t v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_24C7D6128(&qword_2697EF030, MEMORY[0x263F07508]);
        uint64_t v19 = sub_24C849E20();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(sub_24C8492C0() - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    char v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    char v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *char v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24C7D6AEC(char *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_24C849C80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (void (*)(void *))((char *)&v27[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v9 = *a1;
  uint64_t v10 = *(void **)(v3 + 16);
  *(void *)int v8 = v10;
  (*(void (**)(void (*)(void *), void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F0E0], v5);
  id v11 = v10;
  LOBYTE(v10) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void (*)(void *), uint64_t))(v6 + 8))(v8, v5);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*(unsigned __int8 *)(v3 + 48) > 0xAu) {
    return result;
  }
  LOBYTE(v27[0]) = 11;
  sub_24C7C10E8((char *)v27);
  int v2 = (void *)(v3 + 112);
  int v8 = *(void (**)(void *))(v3 + 112);
  *(unsigned char *)(v3 + 49) = 12;
  if (v8)
  {
    uint64_t v13 = qword_2697EE9E8;
    swift_retain();
    if (v13 == -1)
    {
LABEL_5:
      uint64_t v14 = sub_24C849590();
      __swift_project_value_buffer(v14, (uint64_t)qword_2697F70A0);
      uint64_t v15 = sub_24C849570();
      os_log_type_t v16 = sub_24C84A110();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl(&dword_24C7BE000, v15, v16, "[Close] Found incomplete onStart() lambda, completing with error", v17, 2u);
        MEMORY[0x2532FCCC0](v17, -1, -1);
      }

      sub_24C7D6EEC();
      int64_t v18 = (void *)swift_allocError();
      _OWORD *v19 = xmmword_24C84B030;
      v27[0] = v18;
      v27[1] = 0;
      char v28 = 1;
      v8(v27);
      sub_24C7D6F70((uint64_t)v8);

      uint64_t v20 = *(void *)(v3 + 112);
      goto LABEL_9;
    }
LABEL_15:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v20 = 0;
LABEL_9:
  *int v2 = 0;
  v2[1] = 0;
  sub_24C7D6F70(v20);
  sub_24C7CB828();
  uint64_t v21 = *(void *)(v3 + 80);
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 88) = 0;
  sub_24C7D6F70(v21);
  uint64_t v22 = *(void *)(v3 + 96);
  *(void *)(v3 + 96) = 0;
  *(void *)(v3 + 104) = 0;
  sub_24C7D6F70(v22);
  uint64_t v23 = OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost;
  if (*(void *)(v3 + OBJC_IVAR____TtC5Cosmo12TransferHost_fileTransferHost))
  {
    swift_retain();
    sub_24C83FAA8();
    swift_release();
  }
  *(void *)(v3 + v23) = 0;
  swift_release();
  *(void *)(v3 + OBJC_IVAR____TtC5Cosmo12TransferHost_spake2Prover) = 0;
  swift_release();
  swift_beginAccess();
  uint64_t result = MEMORY[0x2532FCD70](v3 + 32);
  if (result)
  {
    uint64_t v24 = *(void *)(v3 + 40);
    uint64_t ObjectType = swift_getObjectType();
    HIBYTE(v26) = v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 48))((char *)&v26 + 7, ObjectType, v24);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24C7D6E3C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24C7D6E4C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24C7D6E88()
{
  return sub_24C7CE4DC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t objectdestroy_82Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24C7D6EDC()
{
  return sub_24C7CE55C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_24C7D6EEC()
{
  unint64_t result = qword_2697EEC40;
  if (!qword_2697EEC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEC40);
  }
  return result;
}

uint64_t sub_24C7D6F40(char *a1)
{
  return sub_24C7C8C00(a1, v1, sub_24C7C25F8);
}

uint64_t sub_24C7D6F70(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_24C7D6F80(uint64_t *a1, void (*a2)(unsigned char **), uint64_t a3)
{
}

void sub_24C7D6F88(uint64_t *a1, void (*a2)(uint64_t *))
{
}

void sub_24C7D6F90(unsigned __int8 *a1, void (*a2)(void), uint64_t a3)
{
}

uint64_t sub_24C7D6F9C()
{
  return sub_24C7CE8AC(v0[2], v0[3], v0[4]);
}

uint64_t sub_24C7D6FAC(void *a1, void *a2)
{
  return sub_24C7D7384(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_24C7CF098);
}

uint64_t sub_24C7D6FC4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

unint64_t sub_24C7D7000()
{
  unint64_t result = qword_2697EEC68;
  if (!qword_2697EEC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEC68);
  }
  return result;
}

unint64_t sub_24C7D7054()
{
  unint64_t result = qword_2697EEC80;
  if (!qword_2697EEC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEC80);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void sub_24C7D7140(uint64_t a1)
{
}

unint64_t sub_24C7D7164()
{
  unint64_t result = qword_2697EEC90;
  if (!qword_2697EEC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEC90);
  }
  return result;
}

uint64_t sub_24C7D71BC()
{
  return sub_24C7CEB50(v0[2], v0[3], v0[4]);
}

uint64_t sub_24C7D71CC(void *a1, void *a2)
{
  return sub_24C7D7384(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_24C7CF7FC);
}

unint64_t sub_24C7D71E4()
{
  unint64_t result = qword_2697EEC98;
  if (!qword_2697EEC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEC98);
  }
  return result;
}

void sub_24C7D723C(uint64_t a1)
{
}

void sub_24C7D7260(uint64_t a1, void (*a2)(void), int a3, void *a4)
{
  sub_24C7D069C(*(id *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void (**)(id, uint64_t, unint64_t, uint64_t))(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), a2, a3, a4);
}

void sub_24C7D72A4(id a1, unint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    sub_24C7D5FEC((uint64_t)a1, a2);
  }
}

unint64_t sub_24C7D72B0()
{
  unint64_t result = qword_2697EECA0;
  if (!qword_2697EECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EECA0);
  }
  return result;
}

uint64_t sub_24C7D7304(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_24C7D60D0(a1, a2);
  }
  return a1;
}

uint64_t sub_24C7D731C()
{
  return sub_24C7CEDF4(v0[2], v0[3], v0[4]);
}

uint64_t objectdestroy_102Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24C7D736C(void *a1, void *a2)
{
  return sub_24C7D7384(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_24C7CFF50);
}

uint64_t sub_24C7D7384(void *a1, void *a2, uint64_t (*a3)(void, void, void, void, void, void, void, void))
{
  return a3(*a1, a1[1], *a2, a2[1], *(unsigned int *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_24C7D73AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = *(uint64_t (**)(void *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  uint64_t v7[2] = a3;
  char v8 = a4 & 1;
  return v5(v7);
}

unint64_t sub_24C7D73F0()
{
  unint64_t result = qword_2697EECA8;
  if (!qword_2697EECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EECA8);
  }
  return result;
}

uint64_t objectdestroy_108Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24C7D7488(uint64_t a1)
{
  int v2 = *(void (**)(void *, uint64_t, unint64_t, uint64_t))(v1 + 16);
  sub_24C7D7828(a1, (uint64_t)v4, &qword_2697EECB0);
  return sub_24C7D0B04((uint64_t)v4, v2);
}

uint64_t sub_24C7D74E0(uint64_t a1)
{
  return a1;
}

void sub_24C7D7518(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_24C7D7568()
{
  unint64_t result = qword_2697EECB8;
  if (!qword_2697EECB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EECB8);
  }
  return result;
}

uint64_t sub_24C7D75BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24C7D7620(char *a1)
{
  return sub_24C7C8C00(a1, v1, sub_24C7C8C74);
}

uint64_t sub_24C7D7650(uint64_t a1, void (*a2)(long long *), uint64_t a3)
{
  return sub_24C7CD2F0(a1, a2, a3);
}

uint64_t sub_24C7D7658(uint64_t a1, char *a2, uint64_t a3)
{
  return sub_24C7CA6DC(a1, a2, a3);
}

uint64_t sub_24C7D7664()
{
  return sub_24C7D7E4C(sub_24C7D2DD8);
}

uint64_t sub_24C7D7680(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24C7D39A4(a1, a2, a3, a4, *(void *)(v4 + 16), *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(v4 + 24));
}

uint64_t sub_24C7D7690(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_24C7D4A64(a1, a2, a3, a4, a5 & 1, *(void (**)(uint64_t, long long *, uint64_t, void))(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
}

uint64_t sub_24C7D76A0(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if (a4) {
    return sub_24C7D76B0(a1, a2, a3);
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24C7D76B0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24C7D76C8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24C7D76E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_24C7D7744()
{
  unint64_t result = qword_2697EECE0;
  if (!qword_2697EECE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EECE0);
  }
  return result;
}

uint64_t sub_24C7D7798(uint64_t a1)
{
  return sub_24C7D4018(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 17) << 8), *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_24C7D77BC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_24C7D77D4()
{
  unint64_t result = qword_2697EECE8;
  if (!qword_2697EECE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EECE8);
  }
  return result;
}

uint64_t sub_24C7D7828(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24C7D788C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24C7D78EC()
{
  return sub_24C7D7E4C(sub_24C7D3438);
}

uint64_t sub_24C7D7908(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24C7D3D18(a1, a2, a3, a4, *(void *)(v4 + 16), *(void (**)(char *, uint64_t (*)(uint64_t), uint64_t))(v4 + 24));
}

uint64_t sub_24C7D7918(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_24C7D5458(a1, a2, a3, a4, a5 & 1, *(void (**)(uint64_t, long long *, uint64_t, void))(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
}

uint64_t sub_24C7D7928(uint64_t a1)
{
  return sub_24C7D7D38(a1, (uint64_t)&type metadata for RejectFileRequest.Response, (uint64_t (*)(void))sub_24C7D7948);
}

unint64_t sub_24C7D7948()
{
  unint64_t result = qword_2697EED18;
  if (!qword_2697EED18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EED18);
  }
  return result;
}

uint64_t sub_24C7D799C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  return sub_24C7CBA18(a1, a2, a3);
}

uint64_t sub_24C7D79A4(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  return sub_24C7CCAB0(a1, a2, a3, a4 & 1);
}

uint64_t sub_24C7D79B4()
{
  return sub_24C7D7E4C(sub_24C7D3108);
}

uint64_t sub_24C7D79D0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24C7D3AD8(a1, a2, a3, a4, *(void *)(v4 + 16), *(void (**)(char *, uint64_t (*)(uint64_t), uint64_t))(v4 + 24));
}

uint64_t sub_24C7D79E0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_24C7D4E24(a1, a2, a3, a4, a5 & 1, *(void (**)(void, void, void, void))(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
}

uint64_t sub_24C7D79F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24C7D7A58(uint64_t a1)
{
  return sub_24C7D40BC(a1, *(void (**)(long long *))(v1 + 16));
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_24C7D7AC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24C7D7B2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_24C7D7B8C(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

void sub_24C7D7B98(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_24C7D7BA4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24C7D7C08(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_24C7D7C64(uint64_t a1, void (*a2)(long long *))
{
}

uint64_t sub_24C7D7C6C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  return sub_24C7CA164(a1, a2, a3, a4 & 1);
}

uint64_t sub_24C7D7C7C()
{
  return sub_24C7D7E4C(sub_24C7D2AA8);
}

uint64_t sub_24C7D7C98(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24C7D3870(a1, a2, a3, a4, *(void *)(v4 + 16), *(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(v4 + 24));
}

uint64_t sub_24C7D7CA8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_24C7D46A8(a1, a2, a3, a4, a5 & 1, *(void (**)(uint64_t, long long *, uint64_t, void))(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
}

uint64_t sub_24C7D7CB8(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if (a4) {
    return sub_24C7D76B0(a1, a2, a3);
  }
  return a1;
}

unint64_t sub_24C7D7CC4()
{
  unint64_t result = qword_2697EED50;
  if (!qword_2697EED50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EED50);
  }
  return result;
}

uint64_t sub_24C7D7D18(uint64_t a1)
{
  return sub_24C7D7D38(a1, (uint64_t)&type metadata for CloseRequest.Response, (uint64_t (*)(void))sub_24C7D7D78);
}

uint64_t sub_24C7D7D38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return sub_24C7D4294(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 17) << 8), *(void (**)(void *))(v3 + 16), *(void *)(v3 + 24), a2, a3);
}

unint64_t sub_24C7D7D78()
{
  unint64_t result = qword_2697EED58;
  if (!qword_2697EED58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EED58);
  }
  return result;
}

uint64_t sub_24C7D7DCC(unsigned __int8 *a1, void (*a2)(long long *), uint64_t a3)
{
  return sub_24C7C962C(a1, a2, a3);
}

uint64_t sub_24C7D7DD4(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  return sub_24C7C9C70(a1, a2, a3, a4 & 1);
}

uint64_t objectdestroy_146Tm()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24C7D7E34()
{
  return sub_24C7D7E4C(sub_24C7D2778);
}

uint64_t sub_24C7D7E4C(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t objectdestroy_96Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24C7D7EA8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24C7D3778(a1, a2, a3, a4, *(void *)(v4 + 16), *(void (**)(long long *, uint64_t (*)(uint64_t), uint64_t))(v4 + 24));
}

uint64_t objectdestroy_155Tm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24C7D7F00(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_24C7D4320(a1, a2, a3, a4, a5 & 1, *(void (**)(unsigned char *, long long *, uint64_t, void))(v5 + 16));
}

uint64_t sub_24C7D7F10(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if (a4) {
    return sub_24C7D76B0(a1, a2, a3);
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_24C7D7F20()
{
  unint64_t result = qword_2697EED60;
  if (!qword_2697EED60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EED60);
  }
  return result;
}

uint64_t sub_24C7D7F74(uint64_t a1)
{
  return sub_24C7D3F64(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void (**)(uint64_t *))(v1 + 16));
}

unint64_t sub_24C7D7F8C()
{
  unint64_t result = qword_2697EED68;
  if (!qword_2697EED68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EED68);
  }
  return result;
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void sub_24C7D7FF4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_24C7D803C()
{
  return sub_24C7D6128(&qword_2697EED80, type metadata accessor for FileAttributeKey);
}

uint64_t sub_24C7D8084()
{
  return sub_24C7D6128(&qword_2697EED88, type metadata accessor for FileAttributeKey);
}

uint64_t sub_24C7D80CC()
{
  return sub_24C7D6128(&qword_2697EED90, type metadata accessor for FileAttributeKey);
}

uint64_t CosmoFileHttpResponse.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 + *(int *)(type metadata accessor for CosmoFileHttpResponse(0) + 20)) = 200;
  uint64_t v4 = sub_24C8492C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t type metadata accessor for CosmoFileHttpResponse(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EEEC0);
}

uint64_t CosmoHttpRequest.metadata.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 56))();
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  sub_24C849EF0();
  swift_bridgeObjectRelease();
  sub_24C849EF0();
  swift_bridgeObjectRelease();
  nw_http_request_create();
  swift_release();
  swift_release();
  uint64_t metadata_for_request = nw_http_create_metadata_for_request();
  nw_http_fields_append();
  swift_unknownObjectRelease();
  return metadata_for_request;
}

uint64_t sub_24C7D8338()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EED20);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = type metadata accessor for RejectFileRequest(0);
  v8[2] = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  v8[1] = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  MEMORY[0x270FA5388](v5);
  sub_24C849170();
  swift_allocObject();
  sub_24C849160();
  sub_24C7DF08C(&qword_2697EEF00, (void (*)(uint64_t))type metadata accessor for RejectFileRequest);
  uint64_t v6 = sub_24C849150();
  swift_release();
  return v6;
}

uint64_t sub_24C7D8878()
{
  sub_24C849170();
  swift_allocObject();
  sub_24C849160();
  sub_24C7E05C8();
  uint64_t v0 = sub_24C849150();
  swift_release();
  return v0;
}

uint64_t sub_24C7D8B14(void (*a1)(void))
{
  sub_24C849170();
  swift_allocObject();
  sub_24C849160();
  a1();
  uint64_t v2 = sub_24C849150();
  swift_release();
  return v2;
}

uint64_t sub_24C7D8DA0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EED48);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = type metadata accessor for FileRequest(0);
  v8[2] = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  v8[1] = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  MEMORY[0x270FA5388](v5);
  sub_24C849170();
  swift_allocObject();
  sub_24C849160();
  sub_24C7DF08C(&qword_2697EEF18, (void (*)(uint64_t))type metadata accessor for FileRequest);
  uint64_t v6 = sub_24C849150();
  swift_release();
  return v6;
}

uint64_t CosmoHttpRequest.body.getter()
{
  uint64_t v0 = sub_24C84A180();
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  MEMORY[0x270FA5388](v1);
  sub_24C849170();
  swift_allocObject();
  sub_24C849160();
  uint64_t v2 = sub_24C849150();
  swift_release();
  return v2;
}

uint64_t CosmoHttpRequest.file.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24C8492C0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

BOOL CosmoHttpRequest.expectsFileResponse.getter()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return AssociatedTypeWitness == type metadata accessor for CosmoFileHttpResponse(0);
}

uint64_t sub_24C7D97D0(uint64_t a1)
{
  return static CosmoHttpResponse._create(from:)(a1);
}

uint64_t sub_24C7D97E8(uint64_t a1, void (*a2)(void))
{
  uint64_t v5 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24C7DF0D4(a1, (uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24C7DF13C((uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
    sub_24C7D7054();
    swift_allocError();
    *(_OWORD *)uint64_t v8 = xmmword_24C84B020;
    *(unsigned char *)(v8 + 16) = 2;
    return swift_willThrow();
  }
  else
  {
    uint64_t v10 = *v7;
    unint64_t v11 = v7[1];
    sub_24C849140();
    swift_allocObject();
    sub_24C849130();
    a2();
    sub_24C849120();
    swift_release();
    uint64_t result = sub_24C7D5FEC(v10, v11);
    if (!v2) {
      return v12[3];
    }
  }
  return result;
}

uint64_t sub_24C7D997C(uint64_t a1)
{
  return sub_24C7D9CE4(a1, (void (*)(void))sub_24C7E0368);
}

uint64_t sub_24C7D99B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24C7DF0D4(a1, (uint64_t)v4, type metadata accessor for CosmoHttpResponseContent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24C7DF13C((uint64_t)v4, type metadata accessor for CosmoHttpResponseContent);
    sub_24C7D7054();
    swift_allocError();
    *(_OWORD *)uint64_t v5 = xmmword_24C84B020;
    *(unsigned char *)(v5 + 16) = 2;
    return swift_willThrow();
  }
  else
  {
    uint64_t v7 = *v4;
    unint64_t v8 = v4[1];
    sub_24C849140();
    swift_allocObject();
    sub_24C849130();
    sub_24C7E0670();
    sub_24C849120();
    swift_release();
    return sub_24C7D5FEC(v7, v8);
  }
}

uint64_t sub_24C7D9B30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24C7DF0D4(a1, (uint64_t)v4, type metadata accessor for CosmoHttpResponseContent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24C7DF13C((uint64_t)v4, type metadata accessor for CosmoHttpResponseContent);
    sub_24C7D7054();
    swift_allocError();
    *(_OWORD *)uint64_t v5 = xmmword_24C84B020;
    *(unsigned char *)(v5 + 16) = 2;
    return swift_willThrow();
  }
  else
  {
    uint64_t v7 = *v4;
    unint64_t v8 = v4[1];
    sub_24C849140();
    swift_allocObject();
    sub_24C849130();
    sub_24C7E0574();
    sub_24C849120();
    swift_release();
    return sub_24C7D5FEC(v7, v8);
  }
}

uint64_t sub_24C7D9CB0(uint64_t a1)
{
  return sub_24C7D9CE4(a1, (void (*)(void))sub_24C7E0478);
}

uint64_t sub_24C7D9CE4(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24C7DF0D4(a1, (uint64_t)v6, type metadata accessor for CosmoHttpResponseContent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24C7DF13C((uint64_t)v6, type metadata accessor for CosmoHttpResponseContent);
    sub_24C7D7054();
    swift_allocError();
    *(_OWORD *)uint64_t v7 = xmmword_24C84B020;
    *(unsigned char *)(v7 + 16) = 2;
    return swift_willThrow();
  }
  else
  {
    uint64_t v9 = *v6;
    unint64_t v10 = v6[1];
    sub_24C849140();
    swift_allocObject();
    sub_24C849130();
    a2();
    sub_24C849120();
    swift_release();
    return sub_24C7D5FEC(v9, v10);
  }
}

uint64_t static CosmoHttpResponse._create(from:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24C7DF0D4(a1, (uint64_t)v4, type metadata accessor for CosmoHttpResponseContent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24C7DF13C((uint64_t)v4, type metadata accessor for CosmoHttpResponseContent);
    sub_24C7D7054();
    swift_allocError();
    *(_OWORD *)uint64_t v5 = xmmword_24C84B020;
    *(unsigned char *)(v5 + 16) = 2;
    return swift_willThrow();
  }
  else
  {
    uint64_t v7 = *v4;
    unint64_t v8 = v4[1];
    sub_24C849140();
    swift_allocObject();
    sub_24C849130();
    sub_24C849120();
    swift_release();
    return sub_24C7D5FEC(v7, v8);
  }
}

uint64_t sub_24C7DA000@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v8 = a1;
  uint64_t v9 = a2;
  sub_24C849170();
  swift_allocObject();
  sub_24C849160();
  sub_24C7E0520();
  uint64_t v4 = sub_24C849150();
  uint64_t v6 = v5;
  swift_release();
  *a3 = v4;
  a3[1] = v6;
  type metadata accessor for CosmoHttpResponseContent(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24C7DA2E4@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  int v9 = a1;
  uint64_t v10 = a2;
  uint64_t v11 = a3;
  sub_24C849170();
  swift_allocObject();
  sub_24C849160();
  sub_24C7E061C();
  uint64_t v5 = sub_24C849150();
  uint64_t v7 = v6;
  swift_release();
  *a4 = v5;
  a4[1] = v7;
  type metadata accessor for CosmoHttpResponseContent(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24C7DA5CC@<X0>(void (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  sub_24C849170();
  swift_allocObject();
  sub_24C849160();
  a1();
  uint64_t v4 = sub_24C849150();
  uint64_t v6 = v5;
  swift_release();
  *a2 = v4;
  a2[1] = v6;
  type metadata accessor for CosmoHttpResponseContent(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t CosmoHttpResponse._contents.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1 = sub_24C84A180();
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  MEMORY[0x270FA5388](v2);
  sub_24C849170();
  swift_allocObject();
  sub_24C849160();
  uint64_t v3 = sub_24C849150();
  uint64_t v5 = v4;
  swift_release();
  *a1 = v3;
  a1[1] = v5;
  type metadata accessor for CosmoHttpResponseContent(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24C7DACCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24C8492C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CosmoFileHttpResponse(0);
  nw_http_response_create_well_known();
  nw_http_fields_append();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v4, v1, v8);
  swift_storeEnumTagMultiPayload();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v4, v8);
    uint64_t v12 = 0;
  }
  else
  {
    sub_24C7DF13C((uint64_t)v4, type metadata accessor for CosmoHttpResponseContent);
    uint64_t v12 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v12, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_24C7D7C08((uint64_t)v7, (uint64_t *)&unk_2697EEC50);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    uint64_t v13 = URL.fileSize.getter();
    if (v14)
    {
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_24C849590();
      __swift_project_value_buffer(v15, (uint64_t)qword_2697F6FF8);
      os_log_type_t v16 = sub_24C849570();
      os_log_type_t v17 = sub_24C84A0F0();
      if (os_log_type_enabled(v16, v17))
      {
        int64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int64_t v18 = 0;
        _os_log_impl(&dword_24C7BE000, v16, v17, "File specified, but could not read file-size to set 'Content-Length'", v18, 2u);
        MEMORY[0x2532FCCC0](v18, -1, -1);
      }
    }
    else
    {
      v21[1] = v13;
      swift_unknownObjectRetain();
      sub_24C84A430();
      sub_24C849EF0();
      swift_bridgeObjectRelease();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      swift_release();
    }
    sub_24C849260();
    sub_24C849EF0();
    swift_bridgeObjectRelease();
    nw_http_fields_append();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_release();
  }
  uint64_t metadata_for_response = nw_http_create_metadata_for_response();
  swift_unknownObjectRelease();
  return metadata_for_response;
}

uint64_t sub_24C7DB0E0(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24C8492C0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  nw_http_response_create_well_known();
  nw_http_fields_append();
  sub_24C7DA2E4(a1, a2, a3, (uint64_t *)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v8, v12);
    uint64_t v16 = 0;
  }
  else
  {
    sub_24C7D5FEC(*(void *)v8, *((void *)v8 + 1));
    uint64_t v16 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v16, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_24C7D7C08((uint64_t)v11, (uint64_t *)&unk_2697EEC50);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    uint64_t v17 = URL.fileSize.getter();
    if (v18)
    {
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_24C849590();
      __swift_project_value_buffer(v19, (uint64_t)qword_2697F6FF8);
      uint64_t v20 = sub_24C849570();
      os_log_type_t v21 = sub_24C84A0F0();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_24C7BE000, v20, v21, "File specified, but could not read file-size to set 'Content-Length'", v22, 2u);
        MEMORY[0x2532FCCC0](v22, -1, -1);
      }
    }
    else
    {
      v25[1] = v17;
      swift_unknownObjectRetain();
      sub_24C84A430();
      sub_24C849EF0();
      swift_bridgeObjectRelease();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      swift_release();
    }
    sub_24C849260();
    sub_24C849EF0();
    swift_bridgeObjectRelease();
    nw_http_fields_append();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_release();
  }
  uint64_t metadata_for_response = nw_http_create_metadata_for_response();
  swift_unknownObjectRelease();
  return metadata_for_response;
}

uint64_t sub_24C7DB4C8(int a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24C8492C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  nw_http_response_create_well_known();
  nw_http_fields_append();
  sub_24C7DA000(a1, a2, (uint64_t *)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v6, v10);
    uint64_t v14 = 0;
  }
  else
  {
    sub_24C7D5FEC(*(void *)v6, *((void *)v6 + 1));
    uint64_t v14 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v14, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_24C7D7C08((uint64_t)v9, (uint64_t *)&unk_2697EEC50);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    uint64_t v15 = URL.fileSize.getter();
    if (v16)
    {
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_24C849590();
      __swift_project_value_buffer(v17, (uint64_t)qword_2697F6FF8);
      char v18 = sub_24C849570();
      os_log_type_t v19 = sub_24C84A0F0();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl(&dword_24C7BE000, v18, v19, "File specified, but could not read file-size to set 'Content-Length'", v20, 2u);
        MEMORY[0x2532FCCC0](v20, -1, -1);
      }
    }
    else
    {
      v23[1] = v15;
      swift_unknownObjectRetain();
      sub_24C84A430();
      sub_24C849EF0();
      swift_bridgeObjectRelease();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      swift_release();
    }
    sub_24C849260();
    sub_24C849EF0();
    swift_bridgeObjectRelease();
    nw_http_fields_append();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
  }
  uint64_t metadata_for_response = nw_http_create_metadata_for_response();
  swift_unknownObjectRelease();
  return metadata_for_response;
}

uint64_t sub_24C7DB8A8(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24C8492C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  nw_http_response_create_well_known();
  nw_http_fields_append();
  sub_24C7DA5CC(a2, (uint64_t *)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v8, v5, v9);
    uint64_t v13 = 0;
  }
  else
  {
    sub_24C7D5FEC(*(void *)v5, *((void *)v5 + 1));
    uint64_t v13 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v13, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24C7D7C08((uint64_t)v8, (uint64_t *)&unk_2697EEC50);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    uint64_t v14 = URL.fileSize.getter();
    if (v15)
    {
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_24C849590();
      __swift_project_value_buffer(v16, (uint64_t)qword_2697F6FF8);
      uint64_t v17 = sub_24C849570();
      os_log_type_t v18 = sub_24C84A0F0();
      if (os_log_type_enabled(v17, v18))
      {
        os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v19 = 0;
        _os_log_impl(&dword_24C7BE000, v17, v18, "File specified, but could not read file-size to set 'Content-Length'", v19, 2u);
        MEMORY[0x2532FCCC0](v19, -1, -1);
      }
    }
    else
    {
      v22[1] = v14;
      swift_unknownObjectRetain();
      sub_24C84A430();
      sub_24C849EF0();
      swift_bridgeObjectRelease();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      swift_release();
    }
    sub_24C849260();
    sub_24C849EF0();
    swift_bridgeObjectRelease();
    nw_http_fields_append();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_release();
  }
  uint64_t metadata_for_response = nw_http_create_metadata_for_response();
  swift_unknownObjectRelease();
  return metadata_for_response;
}

uint64_t CosmoHttpResponse.metadata.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24C8492C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  nw_http_response_create_well_known();
  nw_http_fields_append();
  (*(void (**)(uint64_t))(*(void *)(a2 + 8) + 24))(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_24C7D7C08((uint64_t)v6, (uint64_t *)&unk_2697EEC50);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v11 = URL.fileSize.getter();
    if (v12)
    {
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_24C849590();
      __swift_project_value_buffer(v13, (uint64_t)qword_2697F6FF8);
      uint64_t v14 = sub_24C849570();
      os_log_type_t v15 = sub_24C84A0F0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_24C7BE000, v14, v15, "File specified, but could not read file-size to set 'Content-Length'", v16, 2u);
        MEMORY[0x2532FCCC0](v16, -1, -1);
      }
    }
    else
    {
      v19[1] = v11;
      swift_unknownObjectRetain();
      sub_24C84A430();
      sub_24C849EF0();
      swift_bridgeObjectRelease();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      swift_release();
    }
    sub_24C849260();
    sub_24C849EF0();
    swift_bridgeObjectRelease();
    nw_http_fields_append();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
  }
  uint64_t metadata_for_response = nw_http_create_metadata_for_response();
  swift_unknownObjectRelease();
  return metadata_for_response;
}

uint64_t CosmoHttpResponse.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *(void *)v6;
  }
  sub_24C7DF13C((uint64_t)v6, type metadata accessor for CosmoHttpResponseContent);
  return 0;
}

uint64_t CosmoHttpResponse.file.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_24C8492C0();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v8, v9);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, v9);
  }
  else
  {
    sub_24C7DF13C((uint64_t)v8, type metadata accessor for CosmoHttpResponseContent);
    uint64_t v12 = sub_24C8492C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a3, 1, 1, v12);
  }
}

uint64_t CosmoHttpResponse.expectsFileResponse.getter()
{
  return 0;
}

uint64_t CosmoFileHttpResponse.status.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for CosmoFileHttpResponse(0) + 20));
}

uint64_t CosmoFileHttpResponse.status.setter(int a1)
{
  uint64_t result = type metadata accessor for CosmoFileHttpResponse(0);
  *(_DWORD *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*CosmoFileHttpResponse.status.modify())()
{
  return nullsub_1;
}

uint64_t static CosmoFileHttpResponse._create(from:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEE70);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v31 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - v6;
  uint64_t v8 = type metadata accessor for CosmoHttpResponseContent(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v28 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v29 = (uint64_t)&v28 - v13;
  MEMORY[0x270FA5388](v12);
  os_log_type_t v15 = (char *)&v28 - v14;
  uint64_t v16 = sub_24C8492C0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  os_log_type_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a1;
  sub_24C7DF0D4(a1, (uint64_t)v15, type metadata accessor for CosmoHttpResponseContent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v20(v19, v15, v16);
    os_log_type_t v21 = v30;
    v20(v30, v19, v16);
    uint64_t result = type metadata accessor for CosmoFileHttpResponse(0);
    *(_DWORD *)&v21[*(int *)(result + 20)] = 200;
  }
  else
  {
    sub_24C7DF13C((uint64_t)v15, type metadata accessor for CosmoHttpResponseContent);
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    sub_24C84A230();
    sub_24C849F80();
    sub_24C7DF0D4(v34, (uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    uint64_t v23 = v31;
    sub_24C7D7BA4((uint64_t)v7, v31, &qword_2697EEE70);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v23, 1, v8) != 1)
    {
      uint64_t v24 = v29;
      sub_24C7E03BC(v23, v29, type metadata accessor for CosmoHttpResponseContent);
      sub_24C7DF0D4(v24, v28, type metadata accessor for CosmoHttpResponseContent);
      sub_24C849ED0();
      sub_24C7DF13C(v24, type metadata accessor for CosmoHttpResponseContent);
    }
    sub_24C7D7C08((uint64_t)v7, &qword_2697EEE70);
    sub_24C849F80();
    swift_bridgeObjectRelease();
    uint64_t v25 = v32;
    unint64_t v26 = v33;
    sub_24C7D7054();
    swift_allocError();
    *(void *)uint64_t v27 = v25;
    *(void *)(v27 + 8) = v26;
    *(unsigned char *)(v27 + 16) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t CosmoFileHttpResponse._contents.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24C8492C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1, v3);
  type metadata accessor for CosmoHttpResponseContent(0);
  return swift_storeEnumTagMultiPayload();
}

BOOL sub_24C7DC7AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24C7DC7C4()
{
  if (*v0) {
    return 0x737574617473;
  }
  else {
    return 7107189;
  }
}

uint64_t sub_24C7DC7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24C7E01E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24C7DC81C()
{
  return 0;
}

void sub_24C7DC828(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24C7DC834(uint64_t a1)
{
  unint64_t v2 = sub_24C7DF038();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C7DC870(uint64_t a1)
{
  unint64_t v2 = sub_24C7DF038();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CosmoFileHttpResponse.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEE78);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C7DF038();
  sub_24C84A540();
  v8[15] = 0;
  sub_24C8492C0();
  sub_24C7DF08C(&qword_2697EEE88, MEMORY[0x263F06EA8]);
  sub_24C84A3F0();
  if (!v1)
  {
    type metadata accessor for CosmoFileHttpResponse(0);
    v8[14] = 1;
    sub_24C84A410();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CosmoFileHttpResponse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v26 = sub_24C8492C0();
  uint64_t v23 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEE90);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CosmoFileHttpResponse(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(int *)(v11 + 28);
  *(_DWORD *)&v13[v14] = 200;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C7DF038();
  sub_24C84A530();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = v14;
  uint64_t v15 = v23;
  char v28 = 0;
  sub_24C7DF08C(&qword_2697EEE98, MEMORY[0x263F06EA8]);
  uint64_t v16 = v26;
  uint64_t v17 = v24;
  sub_24C84A380();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v13, v5, v16);
  char v27 = 1;
  int v18 = sub_24C84A3A0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v17);
  uint64_t v19 = v22;
  *(_DWORD *)&v13[v21] = v18;
  sub_24C7DF0D4((uint64_t)v13, v19, type metadata accessor for CosmoFileHttpResponse);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24C7DF13C((uint64_t)v13, type metadata accessor for CosmoFileHttpResponse);
}

uint64_t sub_24C7DCDB4(uint64_t a1)
{
  return *(unsigned int *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_24C7DCDC0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return static CosmoFileHttpResponse._create(from:)(a1, a2);
}

uint64_t sub_24C7DCDD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24C8492C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1, v3);
  type metadata accessor for CosmoHttpResponseContent(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24C7DCE58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CosmoFileHttpResponse.init(from:)(a1, a2);
}

uint64_t sub_24C7DCE70(void *a1)
{
  return CosmoFileHttpResponse.encode(to:)(a1);
}

uint64_t sub_24C7DCE8C()
{
  uint64_t v1 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24C8492C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v3, v0, v4);
  swift_storeEnumTagMultiPayload();
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *(void *)v3;
  }
  sub_24C7DF13C((uint64_t)v3, type metadata accessor for CosmoHttpResponseContent);
  return 0;
}

uint64_t sub_24C7DCF8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24C8492C0();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, v2, v7);
  swift_storeEnumTagMultiPayload();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
    uint64_t v9 = 0;
  }
  else
  {
    sub_24C7DF13C((uint64_t)v6, type metadata accessor for CosmoHttpResponseContent);
    uint64_t v9 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v9, 1, v7);
}

uint64_t sub_24C7DD0F0()
{
  return 0;
}

uint64_t sub_24C7DD0F8()
{
  return 1;
}

uint64_t sub_24C7DD108()
{
  return 0x737574617473;
}

void sub_24C7DD120(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24C7DD12C(uint64_t a1)
{
  unint64_t v2 = sub_24C7E0A04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C7DD168(uint64_t a1)
{
  unint64_t v2 = sub_24C7E0A04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24C7DD1A4()
{
  return *v0;
}

uint64_t sub_24C7DD1AC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_24C7D97E8(a1, (void (*)(void))sub_24C7E07F8);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24C7DD1F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_24C7DA5CC((void (*)(void))sub_24C7E084C, a1);
}

uint64_t sub_24C7DD22C@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24C7DD478(a1, &qword_2697EEFA0, (void (*)(void))sub_24C7E0A04, a2);
}

uint64_t sub_24C7DD268(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24C7DD91C(a1, a2, a3, &qword_2697EEFB0, (void (*)(void))sub_24C7E0A04);
}

uint64_t sub_24C7DD2A4()
{
  return sub_24C7DB8A8(*v0, (void (*)(void))sub_24C7E084C);
}

uint64_t sub_24C7DD2DC(uint64_t a1, uint64_t a2)
{
  return sub_24C7DE324(a1, a2, (void (*)(void))sub_24C7E084C);
}

uint64_t sub_24C7DD2FC@<X0>(uint64_t a1@<X8>)
{
  return sub_24C7DE41C((void (*)(void))sub_24C7E084C, a1);
}

uint64_t sub_24C7DD31C()
{
  return sub_24C84A4F0();
}

uint64_t sub_24C7DD344(uint64_t a1)
{
  unint64_t v2 = sub_24C7E09B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C7DD380(uint64_t a1)
{
  unint64_t v2 = sub_24C7E09B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24C7DD3BC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_24C7D97E8(a1, (void (*)(void))sub_24C7E0724);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24C7DD404@<X0>(uint64_t *a1@<X8>)
{
  return sub_24C7DA5CC((void (*)(void))sub_24C7E0778, a1);
}

uint64_t sub_24C7DD43C@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24C7DD478(a1, &qword_2697EEF88, (void (*)(void))sub_24C7E09B0, a2);
}

uint64_t sub_24C7DD478@<X0>(void *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, _DWORD *a4@<X8>)
{
  uint64_t v13 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v14 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_24C84A530();
  if (v4) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v10 = sub_24C84A3A0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v7);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  _DWORD *v13 = v10;
  return result;
}

uint64_t sub_24C7DD5E4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24C7DD91C(a1, a2, a3, &qword_2697EEF98, (void (*)(void))sub_24C7E09B0);
}

uint64_t sub_24C7DD620()
{
  return sub_24C7DB8A8(*v0, (void (*)(void))sub_24C7E0778);
}

uint64_t sub_24C7DD658(uint64_t a1, uint64_t a2)
{
  return sub_24C7DE324(a1, a2, (void (*)(void))sub_24C7E0778);
}

uint64_t sub_24C7DD678@<X0>(uint64_t a1@<X8>)
{
  return sub_24C7DE41C((void (*)(void))sub_24C7E0778, a1);
}

uint64_t sub_24C7DD698()
{
  return sub_24C84A510();
}

uint64_t sub_24C7DD6DC()
{
  return sub_24C84A510();
}

uint64_t sub_24C7DD71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24C84A440();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24C7DD7AC(uint64_t a1)
{
  unint64_t v2 = sub_24C7E0A58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C7DD7E8(uint64_t a1)
{
  unint64_t v2 = sub_24C7E0A58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24C7DD824@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = sub_24C7D97E8(a1, (void (*)(void))sub_24C7E0908);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24C7DD86C@<X0>(uint64_t *a1@<X8>)
{
  return sub_24C7DA5CC((void (*)(void))sub_24C7E095C, a1);
}

uint64_t sub_24C7DD8A4@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24C7DD478(a1, &qword_2697EEFB8, (void (*)(void))sub_24C7E0A58, a2);
}

uint64_t sub_24C7DD8E0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24C7DD91C(a1, a2, a3, &qword_2697EEFC8, (void (*)(void))sub_24C7E0A58);
}

uint64_t sub_24C7DD91C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v12 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12();
  sub_24C84A540();
  sub_24C84A410();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_24C7DDA5C()
{
  return sub_24C7DB8A8(*v0, (void (*)(void))sub_24C7E095C);
}

uint64_t sub_24C7DDA94(uint64_t a1, uint64_t a2)
{
  return sub_24C7DE324(a1, a2, (void (*)(void))sub_24C7E095C);
}

uint64_t sub_24C7DDAB4@<X0>(uint64_t a1@<X8>)
{
  return sub_24C7DE41C((void (*)(void))sub_24C7E095C, a1);
}

uint64_t sub_24C7DDAEC(uint64_t a1)
{
  return sub_24C7D99B0(a1);
}

uint64_t sub_24C7DDB04@<X0>(uint64_t *a1@<X8>)
{
  return sub_24C7DA2E4(*(_DWORD *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), a1);
}

uint64_t sub_24C7DDB10()
{
  return sub_24C7DB0E0(*(_DWORD *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

uint64_t sub_24C7DDB1C()
{
  uint64_t v1 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24C7DA2E4(*(_DWORD *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), v3);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *v3;
  }
  sub_24C7DF13C((uint64_t)v3, type metadata accessor for CosmoHttpResponseContent);
  return 0;
}

uint64_t sub_24C7DDBE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C7DA2E4(*(_DWORD *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), (uint64_t *)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24C8492C0();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  else
  {
    sub_24C7D5FEC(*(void *)v5, *((void *)v5 + 1));
    uint64_t v9 = sub_24C8492C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_24C7DDD54()
{
  sub_24C849F90();
  sub_24C849EF0();
  swift_bridgeObjectRelease();
  nw_http_request_create();
  swift_release();
  uint64_t metadata_for_request = nw_http_create_metadata_for_request();
  nw_http_fields_append();
  swift_unknownObjectRelease();
  return metadata_for_request;
}

uint64_t sub_24C7DDDF4()
{
  return sub_24C7D8878();
}

uint64_t sub_24C7DDDFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24C8492C0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t sub_24C7DDE68(uint64_t a1)
{
  return sub_24C7D9B30(a1);
}

uint64_t sub_24C7DDE80@<X0>(uint64_t *a1@<X8>)
{
  return sub_24C7DA000(*(_DWORD *)v1, *(void *)(v1 + 8), a1);
}

uint64_t sub_24C7DDE8C()
{
  return sub_24C7DB4C8(*(_DWORD *)v0, *(void *)(v0 + 8));
}

uint64_t sub_24C7DDE98()
{
  uint64_t v1 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24C7DA000(*(_DWORD *)v0, *(void *)(v0 + 8), v3);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *v3;
  }
  sub_24C7DF13C((uint64_t)v3, type metadata accessor for CosmoHttpResponseContent);
  return 0;
}

uint64_t sub_24C7DDF5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C7DA000(*(_DWORD *)v1, *(void *)(v1 + 8), (uint64_t *)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24C8492C0();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  else
  {
    sub_24C7D5FEC(*(void *)v5, *((void *)v5 + 1));
    uint64_t v9 = sub_24C8492C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_24C7DE0D0()
{
  return sub_24C7DE5B8();
}

uint64_t sub_24C7DE0E4()
{
  return sub_24C7D8B14((void (*)(void))sub_24C7E04CC);
}

uint64_t sub_24C7DE11C()
{
  return sub_24C7DE1E8();
}

uint64_t sub_24C7DE12C@<X0>(uint64_t *a1@<X8>)
{
  return sub_24C7DA5CC((void (*)(void))sub_24C7E0424, a1);
}

uint64_t sub_24C7DE164()
{
  return sub_24C7DB8A8(*v0, (void (*)(void))sub_24C7E0424);
}

uint64_t sub_24C7DE19C(uint64_t a1, uint64_t a2)
{
  return sub_24C7DE324(a1, a2, (void (*)(void))sub_24C7E0424);
}

uint64_t sub_24C7DE1BC@<X0>(uint64_t a1@<X8>)
{
  return sub_24C7DE41C((void (*)(void))sub_24C7E0424, a1);
}

uint64_t sub_24C7DE1DC()
{
  return sub_24C7DE1E8();
}

uint64_t sub_24C7DE1E8()
{
  sub_24C849F90();
  sub_24C849EF0();
  swift_bridgeObjectRelease();
  nw_http_request_create();
  swift_release();
  uint64_t metadata_for_request = nw_http_create_metadata_for_request();
  nw_http_fields_append();
  swift_unknownObjectRelease();
  return metadata_for_request;
}

uint64_t sub_24C7DE294@<X0>(uint64_t *a1@<X8>)
{
  return sub_24C7DA5CC((void (*)(void))sub_24C7E0314, a1);
}

uint64_t sub_24C7DE2CC()
{
  return sub_24C7DB8A8(*v0, (void (*)(void))sub_24C7E0314);
}

uint64_t sub_24C7DE304(uint64_t a1, uint64_t a2)
{
  return sub_24C7DE324(a1, a2, (void (*)(void))sub_24C7E0314);
}

uint64_t sub_24C7DE324(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (uint64_t *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24C7DA5CC(a3, v6);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *v6;
  }
  sub_24C7DF13C((uint64_t)v6, type metadata accessor for CosmoHttpResponseContent);
  return 0;
}

uint64_t sub_24C7DE3FC@<X0>(uint64_t a1@<X8>)
{
  return sub_24C7DE41C((void (*)(void))sub_24C7E0314, a1);
}

uint64_t sub_24C7DE41C@<X0>(void (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C7DA5CC(a1, (uint64_t *)v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_24C8492C0();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  }
  else
  {
    sub_24C7D5FEC(*(void *)v6, *((void *)v6 + 1));
    uint64_t v10 = sub_24C8492C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 1, 1, v10);
  }
}

uint64_t sub_24C7DE5A4()
{
  return sub_24C7DE5B8();
}

uint64_t sub_24C7DE5B8()
{
  sub_24C849F90();
  sub_24C849EF0();
  swift_bridgeObjectRelease();
  nw_http_request_create();
  swift_release();
  uint64_t metadata_for_request = nw_http_create_metadata_for_request();
  nw_http_fields_append();
  swift_unknownObjectRelease();
  return metadata_for_request;
}

uint64_t sub_24C7DE658()
{
  return sub_24C7D8B14((void (*)(void))sub_24C7E02C0);
}

uint64_t sub_24C7DE68C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24C7DE760(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24C7D788C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24C7D788C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_24C7DE760(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24C84A1B0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24C7DE91C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24C84A270();
  if (!v8)
  {
    sub_24C84A2A0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24C84A300();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24C7DE91C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24C7DE9B4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24C7DEB2C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24C7DEB2C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24C7DE9B4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24C7EF01C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24C84A240();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24C84A2A0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24C849FB0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24C84A300();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24C84A2A0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_24C7DEB2C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEF50);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24C84A300();
  __break(1u);
  return result;
}

uint64_t _s5Cosmo0A5ErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        if (v3 == v6 && v2 == v5) {
          char v9 = 1;
        }
        else {
          char v9 = sub_24C84A440();
        }
        sub_24C7D77BC(v6, v5, 1u);
        sub_24C7D77BC(v3, v2, 1u);
        sub_24C7D76B0(v3, v2, 1u);
        sub_24C7D76B0(v6, v5, 1u);
        return v9 & 1;
      }
LABEL_10:
      sub_24C7D77BC(*(void *)a2, *(void *)(a2 + 8), v7);
      sub_24C7D77BC(v3, v2, v4);
      sub_24C7D76B0(v3, v2, v4);
      sub_24C7D76B0(v6, v5, v7);
      char v9 = 0;
      return v9 & 1;
    }
    switch(v3)
    {
      case 1:
        if (v7 != 2 || v6 != 1 || v5 != 0) {
          goto LABEL_10;
        }
        sub_24C7D76B0(*(void *)a1, v2, 2u);
        char v9 = 1;
        sub_24C7D76B0(1, 0, 2u);
        return v9 & 1;
      case 2:
        if (v7 != 2 || v6 != 2 || v5 != 0) {
          goto LABEL_10;
        }
        sub_24C7D76B0(*(void *)a1, v2, 2u);
        uint64_t v11 = 2;
        goto LABEL_81;
      case 3:
        if (v7 != 2 || v6 != 3 || v5 != 0) {
          goto LABEL_10;
        }
        sub_24C7D76B0(*(void *)a1, v2, 2u);
        uint64_t v11 = 3;
        goto LABEL_81;
      case 4:
        if (v7 != 2 || v6 != 4 || v5 != 0) {
          goto LABEL_10;
        }
        sub_24C7D76B0(*(void *)a1, v2, 2u);
        uint64_t v11 = 4;
        goto LABEL_81;
      case 5:
        if (v7 != 2 || v6 != 5 || v5 != 0) {
          goto LABEL_10;
        }
        sub_24C7D76B0(*(void *)a1, v2, 2u);
        uint64_t v11 = 5;
        goto LABEL_81;
      case 6:
        if (v7 != 2 || v6 != 6 || v5 != 0) {
          goto LABEL_10;
        }
        sub_24C7D76B0(*(void *)a1, v2, 2u);
        uint64_t v11 = 6;
        goto LABEL_81;
      default:
        if (v7 != 2 || (v5 | v6) != 0) {
          goto LABEL_10;
        }
        sub_24C7D76B0(*(void *)a1, v2, 2u);
        uint64_t v11 = 0;
LABEL_81:
        sub_24C7D76B0(v11, 0, 2u);
        char v9 = 1;
        break;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 16)) {
      goto LABEL_10;
    }
    if (v3 == v6 && v2 == v5) {
      char v9 = 1;
    }
    else {
      char v9 = sub_24C84A440();
    }
    sub_24C7D77BC(v6, v5, 0);
    sub_24C7D77BC(v3, v2, 0);
    sub_24C7D76B0(v3, v2, 0);
    sub_24C7D76B0(v6, v5, 0);
  }
  return v9 & 1;
}

uint64_t _s5Cosmo0A11HttpRequestPAAE12instancePathSSvg_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t _s5Cosmo0A11HttpRequestPAAE14instanceMethodSSvg_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t type metadata accessor for CosmoHttpResponseContent(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EEEB0);
}

uint64_t sub_24C7DF000(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24C7DF038()
{
  unint64_t result = qword_2697EEE80;
  if (!qword_2697EEE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEE80);
  }
  return result;
}

uint64_t sub_24C7DF08C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24C7DF0D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24C7DF13C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24C7DF19C(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_24C7DF08C(&qword_2697EEEA0, (void (*)(uint64_t))type metadata accessor for CosmoFileHttpResponse);
  uint64_t result = sub_24C7DF08C(&qword_2697EEEA8, (void (*)(uint64_t))type metadata accessor for CosmoFileHttpResponse);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t dispatch thunk of CosmoHttpMessage.metadata.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CosmoHttpMessage.body.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CosmoHttpMessage.file.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CosmoHttpMessage.expectsFileResponse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static CosmoHttpRequest.path.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of static CosmoHttpRequest.method.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CosmoHttpResponse.status.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static CosmoHttpResponse._create(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of CosmoHttpResponse._contents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CosmoHttpResponseContent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_24C8492C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v9 = *a2;
      unint64_t v8 = a2[1];
      sub_24C7D60D0(v9, v8);
      *a1 = v9;
      a1[1] = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for CosmoHttpResponseContent(uint64_t *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_24C8492C0();
    uint64_t v3 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    uint64_t v5 = *a1;
    unint64_t v6 = a1[1];
    return sub_24C7D5FEC(v5, v6);
  }
}

uint64_t *initializeWithCopy for CosmoHttpResponseContent(uint64_t *a1, uint64_t *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_24C8492C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v6 = *a2;
    unint64_t v5 = a2[1];
    sub_24C7D60D0(v6, v5);
    *a1 = v6;
    a1[1] = v5;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for CosmoHttpResponseContent(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_24C7DF13C((uint64_t)a1, type metadata accessor for CosmoHttpResponseContent);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_24C8492C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      uint64_t v6 = *a2;
      unint64_t v5 = a2[1];
      sub_24C7D60D0(v6, v5);
      *a1 = v6;
      a1[1] = v5;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for CosmoHttpResponseContent(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_24C8492C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for CosmoHttpResponseContent(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24C7DF13C((uint64_t)a1, type metadata accessor for CosmoHttpResponseContent);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_24C8492C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for NetworkDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24C7DF7FC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24C7DF80C()
{
  uint64_t result = sub_24C8492C0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CosmoFileHttpResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24C8492C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for CosmoFileHttpResponse(uint64_t a1)
{
  uint64_t v2 = sub_24C8492C0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for CosmoFileHttpResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24C8492C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for CosmoFileHttpResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24C8492C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for CosmoFileHttpResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24C8492C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for CosmoFileHttpResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24C8492C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoFileHttpResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24C7DFBD4);
}

uint64_t sub_24C7DFBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24C8492C0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CosmoFileHttpResponse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24C7DFC54);
}

uint64_t sub_24C7DFC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24C8492C0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24C7DFCC4()
{
  uint64_t result = sub_24C8492C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for CosmoError(uint64_t a1)
{
  return sub_24C7D76B0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s5Cosmo10CosmoErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24C7D77BC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CosmoError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24C7D77BC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24C7D76B0(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CosmoError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24C7D76B0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CosmoError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24C7DFEFC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_24C7DFF14(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CosmoError()
{
  return &type metadata for CosmoError;
}

uint64_t getEnumTagSinglePayload for CosmoSerialChannelHost.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CosmoFileHttpResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C7E0098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24C7E00C0(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CosmoFileHttpResponse.CodingKeys()
{
  return &type metadata for CosmoFileHttpResponse.CodingKeys;
}

unint64_t sub_24C7E00E0()
{
  unint64_t result = qword_2697EEED0;
  if (!qword_2697EEED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEED0);
  }
  return result;
}

unint64_t sub_24C7E0138()
{
  unint64_t result = qword_2697EEED8;
  if (!qword_2697EEED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEED8);
  }
  return result;
}

unint64_t sub_24C7E0190()
{
  unint64_t result = qword_2697EEEE0;
  if (!qword_2697EEEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEEE0);
  }
  return result;
}

uint64_t sub_24C7E01E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_24C84A440() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24C84A440();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_24C7E02C0()
{
  unint64_t result = qword_2697EEEE8;
  if (!qword_2697EEEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEEE8);
  }
  return result;
}

unint64_t sub_24C7E0314()
{
  unint64_t result = qword_2697EEEF0;
  if (!qword_2697EEEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEEF0);
  }
  return result;
}

unint64_t sub_24C7E0368()
{
  unint64_t result = qword_2697EEEF8;
  if (!qword_2697EEEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEEF8);
  }
  return result;
}

uint64_t sub_24C7E03BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24C7E0424()
{
  unint64_t result = qword_2697EEF08;
  if (!qword_2697EEF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF08);
  }
  return result;
}

unint64_t sub_24C7E0478()
{
  unint64_t result = qword_2697EEF10;
  if (!qword_2697EEF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF10);
  }
  return result;
}

unint64_t sub_24C7E04CC()
{
  unint64_t result = qword_2697EEF20;
  if (!qword_2697EEF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF20);
  }
  return result;
}

unint64_t sub_24C7E0520()
{
  unint64_t result = qword_2697EEF28;
  if (!qword_2697EEF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF28);
  }
  return result;
}

unint64_t sub_24C7E0574()
{
  unint64_t result = qword_2697EEF30;
  if (!qword_2697EEF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF30);
  }
  return result;
}

unint64_t sub_24C7E05C8()
{
  unint64_t result = qword_2697EEF38;
  if (!qword_2697EEF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF38);
  }
  return result;
}

unint64_t sub_24C7E061C()
{
  unint64_t result = qword_2697EEF40;
  if (!qword_2697EEF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF40);
  }
  return result;
}

unint64_t sub_24C7E0670()
{
  unint64_t result = qword_2697EEF48;
  if (!qword_2697EEF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF48);
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoNotFoundHttpResponse()
{
  return &type metadata for CosmoNotFoundHttpResponse;
}

ValueMetadata *type metadata accessor for CosmoBadRequestHttpResponse()
{
  return &type metadata for CosmoBadRequestHttpResponse;
}

ValueMetadata *type metadata accessor for CosmoInternalServerErrorHttpResponse()
{
  return &type metadata for CosmoInternalServerErrorHttpResponse;
}

uint64_t sub_24C7E06F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C7E08CC(a1, a2, a3, (uint64_t (*)(void))sub_24C7E0724, (uint64_t (*)(void))sub_24C7E0778);
}

unint64_t sub_24C7E0724()
{
  unint64_t result = qword_2697EEF58;
  if (!qword_2697EEF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF58);
  }
  return result;
}

unint64_t sub_24C7E0778()
{
  unint64_t result = qword_2697EEF60;
  if (!qword_2697EEF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF60);
  }
  return result;
}

uint64_t sub_24C7E07CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C7E08CC(a1, a2, a3, (uint64_t (*)(void))sub_24C7E07F8, (uint64_t (*)(void))sub_24C7E084C);
}

unint64_t sub_24C7E07F8()
{
  unint64_t result = qword_2697EEF68;
  if (!qword_2697EEF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF68);
  }
  return result;
}

unint64_t sub_24C7E084C()
{
  unint64_t result = qword_2697EEF70;
  if (!qword_2697EEF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF70);
  }
  return result;
}

uint64_t sub_24C7E08A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C7E08CC(a1, a2, a3, (uint64_t (*)(void))sub_24C7E0908, (uint64_t (*)(void))sub_24C7E095C);
}

uint64_t sub_24C7E08CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 16) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 24) = result;
  return result;
}

unint64_t sub_24C7E0908()
{
  unint64_t result = qword_2697EEF78;
  if (!qword_2697EEF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF78);
  }
  return result;
}

unint64_t sub_24C7E095C()
{
  unint64_t result = qword_2697EEF80;
  if (!qword_2697EEF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF80);
  }
  return result;
}

unint64_t sub_24C7E09B0()
{
  unint64_t result = qword_2697EEF90;
  if (!qword_2697EEF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEF90);
  }
  return result;
}

unint64_t sub_24C7E0A04()
{
  unint64_t result = qword_2697EEFA8;
  if (!qword_2697EEFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEFA8);
  }
  return result;
}

unint64_t sub_24C7E0A58()
{
  unint64_t result = qword_2697EEFC0;
  if (!qword_2697EEFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEFC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoInternalServerErrorHttpResponse.CodingKeys()
{
  return &type metadata for CosmoInternalServerErrorHttpResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for CosmoBadRequestHttpResponse.CodingKeys()
{
  return &type metadata for CosmoBadRequestHttpResponse.CodingKeys;
}

uint64_t _s5Cosmo36CosmoInternalServerErrorHttpResponseV10CodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s5Cosmo36CosmoInternalServerErrorHttpResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24C7E0BC4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoNotFoundHttpResponse.CodingKeys()
{
  return &type metadata for CosmoNotFoundHttpResponse.CodingKeys;
}

unint64_t sub_24C7E0C00()
{
  unint64_t result = qword_2697EEFD0;
  if (!qword_2697EEFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEFD0);
  }
  return result;
}

unint64_t sub_24C7E0C58()
{
  unint64_t result = qword_2697EEFD8;
  if (!qword_2697EEFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEFD8);
  }
  return result;
}

unint64_t sub_24C7E0CB0()
{
  unint64_t result = qword_2697EEFE0;
  if (!qword_2697EEFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEFE0);
  }
  return result;
}

unint64_t sub_24C7E0D08()
{
  unint64_t result = qword_2697EEFE8;
  if (!qword_2697EEFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEFE8);
  }
  return result;
}

unint64_t sub_24C7E0D60()
{
  unint64_t result = qword_2697EEFF0;
  if (!qword_2697EEFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEFF0);
  }
  return result;
}

unint64_t sub_24C7E0DB8()
{
  unint64_t result = qword_2697EEFF8;
  if (!qword_2697EEFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EEFF8);
  }
  return result;
}

unint64_t sub_24C7E0E10()
{
  unint64_t result = qword_2697EF000;
  if (!qword_2697EF000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF000);
  }
  return result;
}

unint64_t sub_24C7E0E68()
{
  unint64_t result = qword_2697EF008;
  if (!qword_2697EF008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF008);
  }
  return result;
}

unint64_t sub_24C7E0EC0()
{
  unint64_t result = qword_2697EF010;
  if (!qword_2697EF010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF010);
  }
  return result;
}

uint64_t sub_24C7E0F18()
{
  uint64_t v6 = 0x3D68746170;
  unint64_t v7 = 0xE500000000000000;
  swift_bridgeObjectRetain();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C7E118C();
  sub_24C7EEEB8(v0 + 16, (uint64_t)v2);
  sub_24C7EEEB8((uint64_t)v2, (uint64_t)&v3);
  if (*((void *)&v3 + 1) >> 60 != 15)
  {
    long long v4 = v3;
    sub_24C7EEF20((uint64_t)&v4, (uint64_t)v5);
    sub_24C7EEF20((uint64_t)v5, (uint64_t)&v6);
    switch(v7 >> 62)
    {
      case 1uLL:
        v7 &= 0x3FFFFFFFFFFFFFFFuLL;
        if (!__OFSUB__(HIDWORD(v6), v6)) {
          goto LABEL_7;
        }
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x24C7E117CLL);
      case 2uLL:
        v7 &= 0x3FFFFFFFFFFFFFFFuLL;
        if (!__OFSUB__(*(void *)(v6 + 24), *(void *)(v6 + 16))) {
          goto LABEL_7;
        }
        goto LABEL_10;
      case 3uLL:
        goto LABEL_7;
      default:
        v7 &= 0x3FFFFFFFFFFFFFFFuLL;
LABEL_7:
        sub_24C849ED0();
        break;
    }
  }
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C84A230();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  return 0x5250545448776152;
}

uint64_t sub_24C7E118C()
{
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = v12;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = sub_24C7EEF8C;
  *(void *)(v1 + 24) = v0;
  uint64_t v10 = sub_24C7EEFDC;
  uint64_t v11 = v1;
  uint64_t v6 = MEMORY[0x263EF8330];
  unint64_t v7 = 1107296256;
  int v8 = sub_24C7E1334;
  uint64_t v9 = &block_descriptor_0;
  int v2 = _Block_copy(&v6);
  swift_retain();
  swift_release();
  nw_http_request_access_method();
  _Block_release(v2);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = 0x3D646F6874656DLL;
    unint64_t v7 = 0xE700000000000000;
    swift_bridgeObjectRetain();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    uint64_t v5 = v6;
    swift_release();
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_24C7E1334(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2);
}

uint64_t sub_24C7E1360()
{
  return sub_24C7E0F18();
}

uint64_t sub_24C7E139C()
{
  uint64_t v1 = sub_24C8492C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v23, "http-status=");
  BYTE5(v23[1]) = 0;
  HIWORD(v23[1]) = -5120;
  LOWORD(v22) = *(_WORD *)v0;
  sub_24C84A430();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  uint64_t v11 = v23[0];
  strcpy((char *)v23, "body-size=");
  BYTE3(v23[1]) = 0;
  HIDWORD(v23[1]) = -369098752;
  unint64_t v12 = *(void *)(v0 + 16);
  uint64_t v21 = v11;
  if (v12 >> 60 != 15)
  {
    uint64_t v13 = *(void *)(v0 + 8);
    uint64_t v14 = 0;
    switch(v12 >> 62)
    {
      case 1uLL:
        LODWORD(v14) = HIDWORD(v13) - v13;
        if (__OFSUB__(HIDWORD(v13), v13))
        {
          __break(1u);
LABEL_12:
          __break(1u);
          JUMPOUT(0x24C7E176CLL);
        }
        uint64_t v14 = (int)v14;
LABEL_7:
        uint64_t v22 = v14;
        sub_24C849ED0();
        break;
      case 2uLL:
        uint64_t v17 = v13 + 16;
        uint64_t v16 = *(void *)(v13 + 16);
        uint64_t v15 = *(void *)(v17 + 8);
        BOOL v18 = __OFSUB__(v15, v16);
        uint64_t v14 = v15 - v16;
        if (!v18) {
          goto LABEL_7;
        }
        goto LABEL_12;
      case 3uLL:
        goto LABEL_7;
      default:
        uint64_t v14 = BYTE6(v12);
        goto LABEL_7;
    }
  }
  sub_24C849F80();
  swift_bridgeObjectRelease();
  v23[0] = 0x3D656C6966;
  v23[1] = 0xE500000000000000;
  uint64_t v19 = type metadata accessor for RawHTTPResponse(0);
  sub_24C7D7BA4(v0 + *(int *)(v19 + 24), (uint64_t)v10, (uint64_t *)&unk_2697EEC50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v10, v1);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
    sub_24C849ED0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  }
  sub_24C849F80();
  swift_bridgeObjectRelease();
  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  sub_24C84A230();
  swift_bridgeObjectRelease();
  v23[0] = 0xD000000000000010;
  v23[1] = 0x800000024C84F960;
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  return v23[0];
}

Cosmo::CosmoHttpConnection::State_optional __swiftcall CosmoHttpConnection.State.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24C84A340();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t CosmoHttpConnection.State.rawValue.getter()
{
  uint64_t v1 = 0x64656C65636E6163;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656C696166;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7964616572;
  }
}

uint64_t sub_24C7E1830(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24C7F2EEC(*a1, *a2);
}

uint64_t sub_24C7E183C()
{
  return sub_24C84A510();
}

uint64_t sub_24C7E18D8()
{
  sub_24C849F50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24C7E1960()
{
  return sub_24C84A510();
}

Cosmo::CosmoHttpConnection::State_optional sub_24C7E19F8(Swift::String *a1)
{
  return CosmoHttpConnection.State.init(rawValue:)(*a1);
}

void sub_24C7E1A04(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x64656C65636E6163;
  if (v2 != 1)
  {
    uint64_t v5 = 0x64656C696166;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7964616572;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t CosmoHttpConnection.Configuration.quicKeepAliveSeconds.getter()
{
  return *(void *)v0;
}

uint64_t CosmoHttpConnection.Configuration.receiveFileDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  uint64_t v4 = sub_24C8492C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for CosmoHttpConnection.Configuration(uint64_t a1)
{
  return sub_24C7DF000(a1, qword_2697EF068);
}

uint64_t CosmoHttpConnection.Configuration.init(quicKeepAliveSeconds:receiveFileDirectory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (char *)a3 + *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  uint64_t v5 = sub_24C8492C0();
  BOOL v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  return v6(v4, a2, v5);
}

uint64_t sub_24C7E1B7C@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_24C7F2264;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_24C7D6E3C(v4);
}

uint64_t sub_24C7E1C10(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24C7F223C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  sub_24C7D6E3C(v3);
  return sub_24C7D6F70(v8);
}

uint64_t sub_24C7E1CCC()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  sub_24C7D6E3C(v1);
  return v1;
}

uint64_t sub_24C7E1D1C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_24C7D6F70(v5);
}

uint64_t (*sub_24C7E1D70())()
{
  return j__swift_endAccess;
}

uint64_t CosmoHttpConnection.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_id;
  uint64_t v4 = sub_24C849440();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

_OWORD *sub_24C7E1E3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  id v72 = a5;
  uint64_t v69 = a4;
  LODWORD(v66) = a3;
  uint64_t v73 = a2;
  uint64_t v74 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF300);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v61 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF150);
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  long long v58 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF310);
  MEMORY[0x270FA5388](v10 - 8);
  *(void *)&long long v70 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF160);
  uint64_t v68 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  unint64_t v67 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v65 = sub_24C8493D0();
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_24C84A150();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24C84A120();
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_24C849BF0();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v19 = sub_24C849440();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[4] = 0u;
  v5[5] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[1] = 0u;
  uint64_t v23 = OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection;
  *(void *)((char *)v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection) = 0;
  *((unsigned char *)v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_awaitingFileTransfer) = 0;
  sub_24C849430();
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))((uint64_t)v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_id, v22, v19);
  sub_24C7F0404(v74, (uint64_t)v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_config, type metadata accessor for CosmoHttpConnection.Configuration);
  sub_24C7F0404(v73, (uint64_t)v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_descriptor, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  id v24 = v72;
  if (v72)
  {
    uint64_t v25 = (uint64_t)v72;
  }
  else
  {
    unint64_t v57 = sub_24C7D5EF8();
    sub_24C849BE0();
    *(void *)&long long v76 = MEMORY[0x263F8EE78];
    sub_24C7F228C((unint64_t *)&unk_2697EEAE0, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF330);
    sub_24C7F2328(&qword_2697EEAF0, (uint64_t *)&unk_2697EF330);
    sub_24C84A1F0();
    (*(void (**)(char *, void, uint64_t))(v59 + 104))(v16, *MEMORY[0x263F8F130], v60);
    uint64_t v25 = sub_24C84A170();
    id v24 = v72;
  }
  *(void *)((char *)v5 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue) = v25;
  id v26 = v24;
  sub_24C8493C0();
  sub_24C8493A0();
  double v28 = v27 * 1000.0;
  uint64_t v29 = v71;
  uint64_t v30 = v70;
  if ((~*(void *)&v28 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v28 <= -1.0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v28 < 1.84467441e19)
  {
    unint64_t v31 = (unint64_t)v28;
    (*(void (**)(char *, void))(v64 + 8))(v14, v65);
    *(void *)((char *)v6 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_epochMillisAtInit) = v31;
    *((unsigned char *)v6 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_initiated) = v66 & 1;
    *(void *)((char *)v6 + v23) = v69;
    swift_retain();
    swift_release();
    *(void *)&long long v76 = sub_24C849800();
    *((void *)&v76 + 1) = v32;
    if (qword_2697EEA40 == -1) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  __break(1u);
LABEL_19:
  swift_once();
LABEL_8:
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF340);
  __swift_project_value_buffer(v33, (uint64_t)qword_2697EF7F0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF170);
  sub_24C7F22D4();
  sub_24C7F2328((unint64_t *)&unk_2697EF180, (uint64_t *)&unk_2697EF340);
  sub_24C849E30();
  swift_bridgeObjectRelease();
  uint64_t v34 = v68;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v30, 1, v29) == 1)
  {
    sub_24C7D7C08(v30, (uint64_t *)&unk_2697EF310);
    *(void *)&long long v76 = sub_24C849800();
    *((void *)&v76 + 1) = v35;
    if (qword_2697EEA48 != -1) {
      swift_once();
    }
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF360);
    __swift_project_value_buffer(v36, (uint64_t)qword_2697EF808);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF190);
    sub_24C7F2328((unint64_t *)&unk_2697EF370, (uint64_t *)&unk_2697EF360);
    uint64_t v37 = (uint64_t)v61;
    sub_24C849E30();
    swift_bridgeObjectRelease();
    uint64_t v38 = v62;
    uint64_t v39 = v63;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v37, 1, v63) == 1)
    {
      sub_24C7D7C08(v37, (uint64_t *)&unk_2697EF300);
      uint64_t v40 = sub_24C849800();
      uint64_t v42 = v41;
      swift_release();

      sub_24C7ED248(v73, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
      sub_24C7ED248(v74, type metadata accessor for CosmoHttpConnection.Configuration);
    }
    else
    {
      __int16 v50 = v26;
      uint64_t v51 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v58, v37, v39);
      sub_24C849560();
      swift_bridgeObjectRelease();
      uint64_t v52 = MEMORY[0x2532FBD50](v79, v80, v81, v82);
      uint64_t v54 = v53;
      swift_bridgeObjectRelease();
      *(void *)&long long v76 = v52;
      *((void *)&v76 + 1) = v54;
      swift_bridgeObjectRetain();
      sub_24C849F80();
      swift_release();

      swift_bridgeObjectRelease();
      uint64_t v42 = *((void *)&v76 + 1);
      uint64_t v40 = v76;
      sub_24C7ED248(v73, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
      sub_24C7ED248(v74, type metadata accessor for CosmoHttpConnection.Configuration);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v51, v39);
    }
  }
  else
  {
    (*(void (**)(void))(v34 + 32))();
    id v72 = v26;
    uint64_t v43 = v34;
    sub_24C849560();
    swift_bridgeObjectRelease();
    long long v65 = v83;
    uint64_t v45 = v84;
    uint64_t v44 = v85;
    long long v70 = v86;
    uint64_t v46 = v88;
    uint64_t v66 = v87;
    uint64_t v47 = MEMORY[0x2532FBD50](v79, v80, v81, v82);
    uint64_t v49 = v48;
    swift_bridgeObjectRelease();
    *(void *)&long long v76 = v47;
    *((void *)&v76 + 1) = v49;
    swift_bridgeObjectRetain();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    long long v75 = v76;
    long long v76 = v65;
    uint64_t v77 = v45;
    uint64_t v78 = v44;
    sub_24C7F236C();
    sub_24C849F70();
    swift_bridgeObjectRelease();
    long long v76 = v75;
    swift_bridgeObjectRetain();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    long long v75 = v76;
    long long v76 = v70;
    uint64_t v77 = v66;
    uint64_t v78 = v46;
    sub_24C849F70();
    swift_bridgeObjectRelease();
    long long v76 = v75;
    swift_bridgeObjectRetain();
    sub_24C849F80();
    swift_release();

    swift_bridgeObjectRelease();
    uint64_t v42 = *((void *)&v76 + 1);
    uint64_t v40 = v76;
    sub_24C7ED248(v73, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
    sub_24C7ED248(v74, type metadata accessor for CosmoHttpConnection.Configuration);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v67, v29);
  }
  uint64_t v55 = (uint64_t *)((char *)v6 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_name);
  *uint64_t v55 = v40;
  v55[1] = v42;
  return v6;
}

uint64_t sub_24C7E2A9C()
{
  return sub_24C7E4B2C((uint64_t)sub_24C7F21AC, (uint64_t)&block_descriptor_121);
}

uint64_t sub_24C7E2ABC(uint64_t result)
{
  if (*(void *)(result + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
  {
    uint64_t v1 = swift_retain();
    uint64_t v2 = sub_24C7E2D34(v1);
    unint64_t v4 = v3;
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_24C849590();
    __swift_project_value_buffer(v5, (uint64_t)qword_2697F6FF8);
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_24C849570();
    os_log_type_t v7 = sub_24C84A110();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v12 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_24C7DE68C(v2, v4, &v12);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24C7BE000, v6, v7, "Starting %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v9, -1, -1);
      MEMORY[0x2532FCCC0](v8, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v10;
    void v11[3] = v2;
    v11[4] = v4;
    swift_retain();
    sub_24C7D6E3C((uint64_t)sub_24C7F21F8);
    sub_24C849810();
    swift_release();
    swift_release();
    sub_24C849860();
    return swift_release();
  }
  return result;
}

uint64_t sub_24C7E2D34(uint64_t a1)
{
  if (a1)
  {
    sub_24C849750();
    sub_24C84A430();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    sub_24C849F80();
  }
  uint64_t v1 = sub_24C7F7180();
  sub_24C84A230();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_24C7E2E50(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v177 = a4;
  v173 = (unsigned char *)a3;
  uint64_t v5 = sub_24C849660();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v163 = (uint64_t)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0C0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v157 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v157 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v165 = (uint64_t)&v157 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v168 = (char *)&v157 - v16;
  uint64_t v17 = sub_24C849B10();
  uint64_t v175 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v157 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  v176 = (char *)&v157 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unint64_t v164 = (char *)&v157 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v166 = (char *)&v157 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  v172 = (char *)&v157 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  unint64_t v171 = (void (*)(char *, char *, uint64_t))((char *)&v157 - v30);
  MEMORY[0x270FA5388](v29);
  os_log_t v174 = (os_log_t)((char *)&v157 - v31);
  uint64_t v162 = sub_24C8499D0();
  uint64_t v161 = *(void *)(v162 - 8);
  MEMORY[0x270FA5388](v162);
  uint64_t v160 = (uint64_t *)((char *)&v157 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v170 = type metadata accessor for NetworkDescriptor();
  uint64_t v33 = MEMORY[0x270FA5388](v170);
  uint64_t v167 = (uint64_t)&v157 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v169 = (void (*)(char *, char *, uint64_t))((char *)&v157 - v36);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v157 - v37;
  uint64_t v39 = sub_24C849850();
  uint64_t v40 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v42 = (char *)&v157 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v44 = Strong;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v42, a1, v39);
  int v45 = (*(uint64_t (**)(char *, uint64_t))(v40 + 88))(v42, v39);
  if (v45 == *MEMORY[0x263F14218])
  {
    (*(void (**)(char *, uint64_t))(v40 + 96))(v42, v39);
    uint64_t v46 = v175;
    uint64_t v47 = v176;
    v169 = *(void (**)(char *, char *, uint64_t))(v175 + 32);
    v169(v176, v42, v17);
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_24C849590();
    __swift_project_value_buffer(v48, (uint64_t)qword_2697F6FF8);
    unint64_t v171 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    v171(v20, v47, v17);
    unint64_t v49 = v177;
    swift_bridgeObjectRetain_n();
    __int16 v50 = sub_24C849570();
    LODWORD(v170) = sub_24C84A110();
    os_log_t v174 = v50;
    if (os_log_type_enabled(v50, (os_log_type_t)v170))
    {
      uint64_t v159 = v44;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v168 = (char *)swift_slowAlloc();
      v178[0] = (uint64_t)v168;
      *(_DWORD *)uint64_t v51 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v179 = sub_24C7DE68C((uint64_t)v173, v49, v178);
      v173 = v180;
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v51 + 12) = 2080;
      uint64_t v52 = v171;
      v171(v13, v20, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v13, 0, 1, v17);
      sub_24C7D7BA4((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_2697EF0C0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v10, 1, v17) == 1)
      {
        uint64_t v53 = 7104878;
        unint64_t v54 = 0xE300000000000000;
      }
      else
      {
        uint64_t v78 = v172;
        v169(v172, v10, v17);
        v52(v166, v78, v17);
        uint64_t v53 = sub_24C849ED0();
        unint64_t v54 = v79;
        (*(void (**)(char *, uint64_t))(v46 + 8))(v78, v17);
      }
      os_log_type_t v80 = v170;
      sub_24C7D7C08((uint64_t)v13, (uint64_t *)&unk_2697EF0C0);
      uint64_t v179 = sub_24C7DE68C(v53, v54, v178);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      long long v70 = *(void (**)(char *, uint64_t))(v46 + 8);
      v70(v20, v17);
      os_log_type_t v81 = v80;
      os_log_t v82 = v174;
      _os_log_impl(&dword_24C7BE000, v174, v81, "%s in waiting state, error=%s", (uint8_t *)v51, 0x16u);
      uint64_t v83 = (uint64_t)v168;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v83, -1, -1);
      MEMORY[0x2532FCCC0](v51, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      long long v70 = *(void (**)(char *, uint64_t))(v46 + 8);
      v70(v20, v17);
    }
    sub_24C7E4B0C();
    swift_release();
    v70(v176, v17);
    return;
  }
  if (v45 == *MEMORY[0x263F14210])
  {
    (*(void (**)(char *, uint64_t))(v40 + 96))(v42, v39);
    os_log_t v55 = v174;
    uint64_t v56 = v175;
    uint64_t v161 = *(void *)(v175 + 32);
    ((void (*)(os_log_t, char *, uint64_t))v161)(v174, v42, v17);
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v57 = sub_24C849590();
    __swift_project_value_buffer(v57, (uint64_t)qword_2697F6FF8);
    long long v58 = *(void (**)(char *, os_log_t, uint64_t))(v56 + 16);
    uint64_t v59 = v171;
    v58((char *)v171, v55, v17);
    unint64_t v60 = v177;
    swift_bridgeObjectRetain_n();
    uint64_t v61 = sub_24C849570();
    int v62 = sub_24C84A0F0();
    BOOL v63 = os_log_type_enabled(v61, (os_log_type_t)v62);
    uint64_t v159 = v44;
    v176 = (char *)v58;
    uint64_t v162 = v56 + 16;
    if (v63)
    {
      LODWORD(v160) = v62;
      uint64_t v64 = swift_slowAlloc();
      uint64_t v158 = swift_slowAlloc();
      v178[0] = v158;
      *(_DWORD *)uint64_t v64 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v179 = sub_24C7DE68C((uint64_t)v173, v60, v178);
      v173 = v180;
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v64 + 12) = 2080;
      uint64_t v65 = (uint64_t)v168;
      v58(v168, (os_log_t)v59, v17);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v65, 0, 1, v17);
      uint64_t v66 = v165;
      sub_24C7D7BA4(v65, v165, (uint64_t *)&unk_2697EF0C0);
      uint64_t v67 = v17;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v66, 1, v17) == 1)
      {
        uint64_t v68 = 7104878;
        unint64_t v69 = 0xE300000000000000;
      }
      else
      {
        uint64_t v88 = v172;
        ((void (*)(char *, uint64_t, uint64_t))v161)(v172, v66, v17);
        v58(v166, (os_log_t)v88, v17);
        uint64_t v68 = sub_24C849ED0();
        unint64_t v69 = v89;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v88, v67);
      }
      uint64_t v90 = v67;
      sub_24C7D7C08((uint64_t)v168, (uint64_t *)&unk_2697EF0C0);
      uint64_t v179 = sub_24C7DE68C(v68, v69, v178);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v56 + 8);
      v84((char *)v171, v90);
      _os_log_impl(&dword_24C7BE000, v61, (os_log_type_t)v160, "%s failed, error=%s", (uint8_t *)v64, 0x16u);
      uint64_t v91 = v158;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v91, -1, -1);
      MEMORY[0x2532FCCC0](v64, -1, -1);

      uint64_t v44 = v159;
      uint64_t v85 = v90;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v56 + 8);
      v84((char *)v59, v17);

      uint64_t v85 = v17;
    }
    uint64_t v92 = v172;
    sub_24C7E4B0C();
    uint64_t v93 = v44 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_descriptor;
    uint64_t v94 = v169;
    sub_24C7F0404(v44 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_descriptor, (uint64_t)v169, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_24C7D5FEC(*(void *)v94, *((void *)v94 + 1));
      if (*(unsigned char *)(v44 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_initiated) == 1)
      {
        *(_DWORD *)uint64_t v92 = 53;
        (*(void (**)(char *, void, uint64_t))(v56 + 104))(v92, *MEMORY[0x263F14318], v85);
        char v95 = MEMORY[0x2532FB950](v174, v92);
        v84(v92, v85);
        if (v95)
        {
          sub_24C7F6760(v163);
          sub_24C7F6D40();
          sub_24C8498C0();
          swift_allocObject();
          *(void *)(v44 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection) = sub_24C849820();
          swift_retain();
          uint64_t v96 = swift_release();
          sub_24C7E2A9C(v96);
          swift_release();
LABEL_52:
          swift_release();
          v84((char *)v174, v85);
          return;
        }
      }
    }
    else
    {
      sub_24C7ED248((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
    }
    uint64_t v97 = v167;
    sub_24C7F0404(v93, v167, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_24C7D5FEC(*(void *)v97, *(void *)(v97 + 8));
      *(_DWORD *)uint64_t v92 = 54;
      uint64_t v98 = *MEMORY[0x263F14318];
      __int16 v99 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 104);
      v99(v92, v98, v85);
      uint64_t v100 = v85;
      os_log_t v101 = v174;
      char v102 = MEMORY[0x2532FB950](v174, v92);
      v84(v92, v100);
      uint64_t v103 = v84;
      unint64_t v104 = v164;
      os_log_t v105 = v101;
      uint64_t v85 = v100;
      ((void (*)(char *, os_log_t, uint64_t))v176)(v164, v105, v100);
      if (v102)
      {
        v103(v104, v100);
        uint64_t v44 = v159;
        uint64_t v84 = v103;
LABEL_50:
        swift_beginAccess();
        uint64_t v115 = *(void (**)(uint64_t *))(v44 + 16);
        if (v115)
        {
          LOBYTE(v179) = 1;
          swift_retain();
          v115(&v179);
          sub_24C7D6F70((uint64_t)v115);
          goto LABEL_52;
        }
        v84((char *)v174, v100);
LABEL_75:
        swift_release();
        return;
      }
      *(_DWORD *)uint64_t v92 = 96;
      v99(v92, v98, v100);
      char v114 = MEMORY[0x2532FB950](v104, v92);
      v103(v92, v100);
      v103(v104, v100);
      uint64_t v44 = v159;
      uint64_t v84 = v103;
      if (v114) {
        goto LABEL_50;
      }
    }
    else
    {
      sub_24C7ED248(v97, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
    }
    swift_beginAccess();
    unint64_t v106 = *(void (**)(uint64_t *))(v44 + 16);
    if (v106)
    {
      LOBYTE(v179) = 2;
      swift_retain();
      v106(&v179);
      sub_24C7D6F70((uint64_t)v106);
      swift_release();
      v84((char *)v174, v85);
      return;
    }
    v84((char *)v174, v85);
    goto LABEL_75;
  }
  if (v45 == *MEMORY[0x263F14208])
  {
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v71 = sub_24C849590();
    __swift_project_value_buffer(v71, (uint64_t)qword_2697F6FF8);
    unint64_t v72 = v177;
    swift_bridgeObjectRetain_n();
    uint64_t v73 = sub_24C849570();
    os_log_type_t v74 = sub_24C84A110();
    if (os_log_type_enabled(v73, v74))
    {
      long long v75 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      v178[0] = v76;
      *(_DWORD *)long long v75 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v179 = sub_24C7DE68C((uint64_t)v173, v72, v178);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      uint64_t v77 = "%s in setup state";
LABEL_29:
      _os_log_impl(&dword_24C7BE000, v73, v74, v77, v75, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v76, -1, -1);
      MEMORY[0x2532FCCC0](v75, -1, -1);
      swift_release();

      return;
    }
    goto LABEL_30;
  }
  if (v45 == *MEMORY[0x263F14228])
  {
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v86 = sub_24C849590();
    __swift_project_value_buffer(v86, (uint64_t)qword_2697F6FF8);
    unint64_t v87 = v177;
    swift_bridgeObjectRetain_n();
    uint64_t v73 = sub_24C849570();
    os_log_type_t v74 = sub_24C84A110();
    if (os_log_type_enabled(v73, v74))
    {
      long long v75 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      v178[0] = v76;
      *(_DWORD *)long long v75 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v179 = sub_24C7DE68C((uint64_t)v173, v87, v178);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      uint64_t v77 = "%s in preparing state";
      goto LABEL_29;
    }
LABEL_30:

    swift_bridgeObjectRelease_n();
    goto LABEL_75;
  }
  if (v45 == *MEMORY[0x263F14200])
  {
    uint64_t v107 = v44;
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v108 = sub_24C849590();
    __swift_project_value_buffer(v108, (uint64_t)qword_2697F6FF8);
    unint64_t v109 = v177;
    swift_bridgeObjectRetain_n();
    uint64_t v110 = sub_24C849570();
    os_log_type_t v111 = sub_24C84A110();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = (uint8_t *)swift_slowAlloc();
      uint64_t v113 = swift_slowAlloc();
      v178[0] = v113;
      *(_DWORD *)uint64_t v112 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v179 = sub_24C7DE68C((uint64_t)v173, v109, v178);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24C7BE000, v110, v111, "%s in ready state", v112, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v113, -1, -1);
      MEMORY[0x2532FCCC0](v112, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_24C7F0404(v107 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_descriptor, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
    uint64_t v124 = &qword_2697EF000;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_24C7D5FEC(*((void *)v38 + 1), *((void *)v38 + 2));
      sub_24C7D5FEC(*((void *)v38 + 3), *((void *)v38 + 4));
      swift_unknownObjectRelease();
      int64_t v125 = &v38[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0) + 96)];
      uint64_t v126 = sub_24C849440();
      (*(void (**)(char *, uint64_t))(*(void *)(v126 - 8) + 8))(v125, v126);
      if (*(void *)(v107 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
      {
        sub_24C849A20();
        swift_retain();
        sub_24C8499C0();
        uint64_t v127 = sub_24C8498A0();
        swift_release();
        swift_release();
        if (v127)
        {
          sub_24C849A10();
          uint64_t v128 = swift_dynamicCastClass();
          if (!v128) {
            goto LABEL_81;
          }
          unint64_t v129 = (char *)v128;
          unint64_t v130 = v177;
          swift_bridgeObjectRetain_n();
          uint64_t v131 = v107;
          swift_retain_n();
          uint64_t v132 = sub_24C849570();
          os_log_type_t v133 = sub_24C84A0D0();
          long long v134 = &unk_2697F6000;
          if (os_log_type_enabled(v132, v133))
          {
            uint64_t v135 = swift_slowAlloc();
            uint64_t v136 = swift_slowAlloc();
            v178[0] = v136;
            *(_DWORD *)uint64_t v135 = 136315394;
            v176 = v129;
            swift_bridgeObjectRetain();
            uint64_t v179 = sub_24C7DE68C((uint64_t)v173, v130, v178);
            sub_24C84A1A0();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v135 + 12) = 2048;
            uint64_t v137 = *(void *)(v107 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_config);
            swift_release();
            uint64_t v179 = v137;
            uint64_t v131 = v107;
            unint64_t v130 = v177;
            sub_24C84A1A0();
            swift_release();
            _os_log_impl(&dword_24C7BE000, v132, v133, "%s setting keep-alive to %ld seconds", (uint8_t *)v135, 0x16u);
            swift_arrayDestroy();
            uint64_t v138 = v136;
            uint64_t v124 = &qword_2697EF000;
            MEMORY[0x2532FCCC0](v138, -1, -1);
            uint64_t v139 = v135;
            long long v134 = (void *)&unk_2697F6000;
            MEMORY[0x2532FCCC0](v139, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
          }
          char v147 = v160;
          *uint64_t v160 = *(void *)(v131 + v134[507]);
          (*(void (**)(void *, void, uint64_t))(v161 + 104))(v147, *MEMORY[0x263F14280], v162);
          sub_24C849A00();
          if ((*(unsigned char *)(v131 + v124[8]) & 1) == 0)
          {
            char v149 = (void (*)(uint64_t *, void))sub_24C8499E0();
            if (__OFADD__(*v150, 2))
            {
              __break(1u);
              return;
            }
            *v150 += 2;
            v149(v178, 0);
            swift_bridgeObjectRetain_n();
            swift_retain_n();
            char v151 = sub_24C849570();
            os_log_type_t v152 = sub_24C84A0D0();
            if (os_log_type_enabled(v151, v152))
            {
              uint64_t v153 = swift_slowAlloc();
              uint64_t v154 = swift_slowAlloc();
              v178[0] = v154;
              *(_DWORD *)uint64_t v153 = 136315394;
              swift_bridgeObjectRetain();
              uint64_t v179 = sub_24C7DE68C((uint64_t)v173, v130, v178);
              sub_24C84A1A0();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v153 + 12) = 2048;
              uint64_t v155 = sub_24C8499F0();
              swift_release();
              uint64_t v179 = v155;
              sub_24C84A1A0();
              swift_release();
              _os_log_impl(&dword_24C7BE000, v151, v152, "%s set localMaxStreamsBidirectional to %ld", (uint8_t *)v153, 0x16u);
              swift_arrayDestroy();
              uint64_t v156 = v154;
              uint64_t v124 = &qword_2697EF000;
              MEMORY[0x2532FCCC0](v156, -1, -1);
              MEMORY[0x2532FCCC0](v153, -1, -1);
              swift_release();
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_release_n();
            }
          }
          else
          {
LABEL_81:
            swift_release();
          }
        }
      }
    }
    else
    {
      sub_24C7ED248((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
    }
    swift_beginAccess();
    char v148 = *(void (**)(uint64_t *))(v107 + 16);
    if (v148)
    {
      LOBYTE(v179) = 0;
      swift_retain();
      v148(&v179);
      sub_24C7D6F70((uint64_t)v148);
    }
    if ((*(unsigned char *)(v107 + v124[8]) & 1) == 0) {
      sub_24C7E7940();
    }
    goto LABEL_75;
  }
  unint64_t v116 = v177;
  if (v45 == *MEMORY[0x263F14220])
  {
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v117 = sub_24C849590();
    __swift_project_value_buffer(v117, (uint64_t)qword_2697F6FF8);
    swift_bridgeObjectRetain_n();
    uint64_t v118 = sub_24C849570();
    os_log_type_t v119 = sub_24C84A110();
    if (os_log_type_enabled(v118, v119))
    {
      uint64_t v120 = (uint8_t *)swift_slowAlloc();
      uint64_t v121 = v44;
      uint64_t v122 = swift_slowAlloc();
      v178[0] = v122;
      *(_DWORD *)uint64_t v120 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v179 = sub_24C7DE68C((uint64_t)v173, v116, v178);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24C7BE000, v118, v119, "%s in cancelled state", v120, 0xCu);
      swift_arrayDestroy();
      uint64_t v123 = v122;
      uint64_t v44 = v121;
      MEMORY[0x2532FCCC0](v123, -1, -1);
      MEMORY[0x2532FCCC0](v120, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    uint64_t v146 = *(void (**)(uint64_t *))(v44 + 16);
    if (v146)
    {
      LOBYTE(v179) = 1;
      swift_retain();
      v146(&v179);
      sub_24C7D6F70((uint64_t)v146);
    }
    goto LABEL_75;
  }
  if (qword_2697EE9B0 != -1) {
    swift_once();
  }
  uint64_t v140 = sub_24C849590();
  __swift_project_value_buffer(v140, (uint64_t)qword_2697F6FF8);
  swift_bridgeObjectRetain_n();
  unint64_t v141 = sub_24C849570();
  os_log_type_t v142 = sub_24C84A0F0();
  if (os_log_type_enabled(v141, v142))
  {
    v143 = (uint8_t *)swift_slowAlloc();
    uint64_t v144 = swift_slowAlloc();
    uint64_t v159 = v44;
    uint64_t v145 = v144;
    v178[0] = v144;
    *(_DWORD *)v143 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v179 = sub_24C7DE68C((uint64_t)v173, v116, v178);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24C7BE000, v141, v142, "%s in unknown state", v143, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v145, -1, -1);
    MEMORY[0x2532FCCC0](v143, -1, -1);
    swift_release();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
}

uint64_t sub_24C7E4B0C()
{
  return sub_24C7E4B2C((uint64_t)sub_24C7F21A4, (uint64_t)&block_descriptor_118);
}

uint64_t sub_24C7E4B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_24C849BD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24C849BF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  aBlock[4] = a1;
  uint64_t v17 = v2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24C7C25B4;
  aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_24C849BE0();
  v15[1] = MEMORY[0x263F8EE78];
  sub_24C7F228C((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7F2328((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_24C7E4DC8(uint64_t a1)
{
  uint64_t v2 = sub_24C849850();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)v26 - v8;
  uint64_t v10 = OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection;
  if (*(void *)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
  {
    swift_beginAccess();
    uint64_t v11 = *(void *)(a1 + 16);
    if (v11)
    {
      uint64_t v28 = v10;
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      sub_24C7D6E3C(v11);
      sub_24C849870();
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F14208], v2);
      char v13 = MEMORY[0x2532FB690](v9, v6);
      uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
      v14(v6, v2);
      v14(v9, v2);
      if (v13)
      {
        v26[2] = v12;
        uint64_t v27 = (void (*)(void))v11;
        if (qword_2697EE9B0 != -1) {
          swift_once();
        }
        uint64_t v15 = sub_24C849590();
        __swift_project_value_buffer(v15, (uint64_t)qword_2697F6FF8);
        swift_retain_n();
        uint64_t v16 = sub_24C849570();
        os_log_type_t v17 = sub_24C84A110();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = (uint8_t *)swift_slowAlloc();
          uint64_t v19 = swift_slowAlloc();
          uint64_t v30 = v19;
          *(_DWORD *)uint64_t v18 = 136315138;
          v26[1] = v18 + 4;
          uint64_t v20 = swift_retain();
          uint64_t v21 = sub_24C7E2D34(v20);
          unint64_t v23 = v22;
          swift_release();
          uint64_t v29 = sub_24C7DE68C(v21, v23, &v30);
          sub_24C84A1A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24C7BE000, v16, v17, "%s, canceling (never started)", v18, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v19, -1, -1);
          MEMORY[0x2532FCCC0](v18, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        uint64_t v25 = v27;
        LOBYTE(v30) = 1;
        v27(&v30);
        uint64_t v24 = (uint64_t)v25;
      }
      else
      {
        uint64_t v24 = v11;
      }
      sub_24C7D6F70(v24);
      uint64_t v10 = v28;
    }
    else
    {
      swift_retain();
    }
    sub_24C849880();
    *(void *)(a1 + v10) = 0;
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_24C7E5158(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, void *a4)
{
  uint64_t v120 = a4;
  uint64_t v7 = sub_24C8493D0();
  uint64_t v110 = *(void (***)(char *, uint64_t))(v7 - 8);
  uint64_t v111 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v113 = ((char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24C8492C0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v112 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = v15;
  MEMORY[0x270FA5388](v14);
  os_log_type_t v17 = (char *)&v99 - v16;
  uint64_t v18 = sub_24C8497E0();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (uint64_t (**)(uint64_t))((char *)&v99 - v23);
  uint64_t v119 = a1;
  uint64_t v25 = *(void *)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection);
  if (v25)
  {
    uint64_t v107 = v11;
    uint64_t v104 = v22;
    uint64_t v105 = v21;
    char v114 = v17;
    uint64_t v115 = v13;
    uint64_t v108 = v12;
    sub_24C7D76E0((uint64_t)v120, (uint64_t)v122);
    uint64_t v26 = swift_retain_n();
    uint64_t v27 = v119;
    uint64_t v28 = sub_24C7E2D34(v26);
    unint64_t v30 = v29;
    swift_release();
    int v31 = *(unsigned __int8 *)(v27 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_initiated);
    uint64_t v32 = swift_allocObject();
    int v106 = v31;
    *(unsigned char *)(v32 + 16) = v31;
    *(void *)(v32 + 24) = v28;
    *(void *)(v32 + 32) = v30;
    *(void *)(v32 + 40) = v25;
    *(void *)(v32 + 48) = a2;
    *(void *)(v32 + 56) = a3;
    *uint64_t v24 = sub_24C7EFD4C;
    v24[1] = (uint64_t (*)(uint64_t))v32;
    (*(void (**)(uint64_t (**)(uint64_t), void, uint64_t))(v19 + 104))(v24, *MEMORY[0x263F141E0], v18);
    uint64_t v117 = v25;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24C7D6E3C((uint64_t)a2);
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_24C849590();
    __swift_project_value_buffer(v33, (uint64_t)qword_2697F6FF8);
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_24C849570();
    os_log_type_t v35 = sub_24C84A110();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v116 = v18;
    uint64_t v118 = v19;
    if (v36)
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v123[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v121 = sub_24C7DE68C(v28, v30, v123);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2080;
      unint64_t v39 = sub_24C7E5D44(v122);
      uint64_t v121 = sub_24C7DE68C(v39, v40, v123);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v34, v35, "%s sending message=%s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v38, -1, -1);
      MEMORY[0x2532FCCC0](v37, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v48 = nw_content_context_create("context");
    unint64_t v49 = v120;
    uint64_t v50 = v120[3];
    uint64_t v51 = v120[4];
    __swift_project_boxed_opaque_existential_1(v120, v50);
    uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v50, v51);
    nw_content_context_set_metadata_for_protocol(v48, v52);
    swift_unknownObjectRelease();
    uint64_t v53 = v49[3];
    uint64_t v54 = v49[4];
    __swift_project_boxed_opaque_existential_1(v49, v53);
    uint64_t v55 = (uint64_t)v107;
    (*(void (**)(uint64_t, uint64_t))(v54 + 24))(v53, v54);
    uint64_t v56 = v115;
    uint64_t v57 = v108;
    int v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v55, 1, v108);
    uint64_t v59 = v114;
    if (v58 == 1)
    {
      sub_24C7D7C08(v55, (uint64_t *)&unk_2697EEC50);
      sub_24C8497D0();
      swift_allocObject();
      swift_unknownObjectRetain();
      sub_24C8497A0();
      uint64_t v60 = v120[3];
      uint64_t v61 = v120[4];
      __swift_project_boxed_opaque_existential_1(v120, v60);
      uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 16))(v60, v61);
      unint64_t v64 = v63;
      sub_24C849830();
      sub_24C7D6044(v62, v64);
      swift_release();
      goto LABEL_22;
    }
    uint64_t v103 = v24;
    uint64_t v65 = *(void (***)(char *, uint64_t))(v56 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v65)(v114, v55, v57);
    nw_content_context_set_is_final(v48, 0);
    sub_24C8497D0();
    swift_allocObject();
    swift_unknownObjectRetain();
    uint64_t v66 = sub_24C8497A0();
    uint64_t v67 = URL.fileSize.getter();
    if (v68) {
      uint64_t v69 = 1;
    }
    else {
      uint64_t v69 = v67;
    }
    uint64_t v107 = (char *)v69;
    uint64_t v70 = swift_retain();
    uint64_t v102 = sub_24C7E2D34(v70);
    uint64_t v101 = v71;
    swift_release();
    unint64_t v72 = v113;
    sub_24C8493B0();
    sub_24C8493A0();
    double v74 = v73 * 1000.0;
    uint64_t v75 = v118;
    if ((~*(void *)&v74 & 0x7FF0000000000000) != 0)
    {
      if (v74 > -1.0)
      {
        if (v74 < 1.84467441e19)
        {
          unint64_t v76 = (unint64_t)v74;
          unint64_t v100 = (unint64_t)v74;
          v110[1]((char *)v72, v111);
          uint64_t v77 = swift_allocObject();
          uint64_t v113 = v48;
          uint64_t v78 = v77;
          *(void *)(v77 + 16) = v76;
          unint64_t v79 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
          uint64_t v111 = v66;
          os_log_type_t v80 = v112;
          v79(v112, v59, v57);
          uint64_t v81 = v75;
          (*(void (**)(uint64_t, uint64_t (**)(uint64_t), uint64_t))(v75 + 16))(v105, v103, v116);
          unint64_t v82 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
          uint64_t v83 = v109 + v82 + 7;
          uint64_t v109 = v56 + 32;
          uint64_t v110 = v65;
          unint64_t v84 = v83 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v85 = ((v83 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v86 = (v85 + 23) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v87 = v57;
          unint64_t v88 = (*(unsigned __int8 *)(v81 + 80) + v86 + 8) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
          unint64_t v89 = (v104 + v88 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v90 = swift_allocObject();
          uint64_t v91 = v101;
          *(void *)(v90 + 16) = v102;
          *(void *)(v90 + 24) = v91;
          ((void (*)(unint64_t, char *, uint64_t))v110)(v90 + v82, v80, v87);
          *(void *)(v90 + v84) = v100;
          uint64_t v92 = (uint64_t (**)())(v90 + v85);
          *uint64_t v92 = sub_24C7F23EC;
          v92[1] = (uint64_t (*)())v78;
          uint64_t v93 = v116;
          *(void *)(v90 + v86) = v117;
          uint64_t v24 = v103;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v118 + 32))(v90 + v88, v105, v93);
          *(void *)(v90 + v89) = v107;
          swift_retain_n();
          swift_retain();
          uint64_t v94 = v114;
          sub_24C8498B0();
          swift_release_n();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v115 + 8))(v94, v87);
LABEL_22:
          if (v106)
          {
            uint64_t v95 = v120[3];
            uint64_t v96 = v120[4];
            __swift_project_boxed_opaque_existential_1(v120, v95);
            char v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 32))(v95, v96);
            uint64_t v98 = v118;
            if (v97) {
              *(unsigned char *)(v119 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_awaitingFileTransfer) = 1;
            }
            sub_24C7E7940();
            swift_unknownObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v122);
            swift_release();
            (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v98 + 8))(v24, v116);
          }
          else
          {
            (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v118 + 8))(v24, v116);
            swift_release();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v122);
            swift_unknownObjectRelease();
          }
          return;
        }
LABEL_30:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_30;
  }
  if (qword_2697EE9B0 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_24C849590();
  __swift_project_value_buffer(v41, (uint64_t)qword_2697F6FF8);
  uint64_t v42 = sub_24C849570();
  os_log_type_t v43 = sub_24C84A0F0();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    v122[0] = v45;
    *(_DWORD *)uint64_t v44 = 136315138;
    v123[0] = sub_24C7DE68C(0xD00000000000001ELL, 0x800000024C84F9C0, v122);
    sub_24C84A1A0();
    _os_log_impl(&dword_24C7BE000, v42, v43, "%s connection is nil", v44, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v45, -1, -1);
    MEMORY[0x2532FCCC0](v44, -1, -1);
  }

  if (a2)
  {
    v122[0] = 0;
    v122[1] = 0xE000000000000000;
    sub_24C84A230();
    swift_bridgeObjectRelease();
    sub_24C7D7054();
    uint64_t v46 = (void *)swift_allocError();
    *(void *)uint64_t v47 = 0xD000000000000030;
    *(void *)(v47 + 8) = 0x800000024C84F980;
    *(unsigned char *)(v47 + 16) = 1;
    a2(v46, 1);
  }
}

unint64_t sub_24C7E5D44(void *a1)
{
  uint64_t v2 = sub_24C8492C0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int v31 = (char *)&v30 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v30 - v12;
  unint64_t v34 = 0x7A69732D79646F62;
  unint64_t v35 = 0xEA00000000003D65;
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  unint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  if (v17 >> 60 != 15)
  {
    unint64_t v18 = v17;
    uint64_t v19 = v16;
    switch(v17 >> 62)
    {
      case 1uLL:
        unint64_t v21 = HIDWORD(v16);
        sub_24C7D6044(v16, v17);
        LODWORD(v20) = v21 - v19;
        if (__OFSUB__(v21, v19))
        {
          __break(1u);
          JUMPOUT(0x24C7E6220);
        }
        uint64_t v20 = (int)v20;
        break;
      case 2uLL:
        uint64_t v23 = *(void *)(v16 + 16);
        uint64_t v22 = *(void *)(v16 + 24);
        sub_24C7D6044(v16, v17);
        uint64_t v20 = v22 - v23;
        if (__OFSUB__(v22, v23))
        {
          __break(1u);
          goto LABEL_9;
        }
        break;
      case 3uLL:
LABEL_9:
        sub_24C7D6044(v19, v18);
        uint64_t v20 = 0;
        break;
      default:
        sub_24C7D6044(v16, v17);
        uint64_t v20 = BYTE6(v18);
        break;
    }
    uint64_t v33 = v20;
    sub_24C849ED0();
  }
  sub_24C849F80();
  swift_bridgeObjectRelease();
  unint64_t v32 = v34;
  unint64_t v34 = 0x3D656C6966;
  unint64_t v35 = 0xE500000000000000;
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  (*(void (**)(uint64_t, uint64_t))(v25 + 24))(v24, v25);
  sub_24C7D7BA4((uint64_t)v13, (uint64_t)v11, (uint64_t *)&unk_2697EEC50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) != 1)
  {
    uint64_t v26 = v31;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v31, v11, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v26, v2);
    sub_24C849ED0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v2);
  }
  sub_24C7D7C08((uint64_t)v13, (uint64_t *)&unk_2697EEC50);
  sub_24C849F80();
  swift_bridgeObjectRelease();
  unint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  sub_24C84A230();
  swift_bridgeObjectRelease();
  unint64_t v34 = 0xD000000000000016;
  unint64_t v35 = 0x800000024C84F9F0;
  uint64_t v27 = a1[3];
  uint64_t v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  (*(void (**)(uint64_t, uint64_t))(v28 + 32))(v27, v28);
  sub_24C849F80();
  swift_bridgeObjectRelease();
  unint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  sub_24C84A230();
  swift_bridgeObjectRelease();
  unint64_t v34 = 0xD000000000000011;
  unint64_t v35 = 0x800000024C84FA10;
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  return v34;
}

uint64_t sub_24C7E6230(uint64_t a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(void *, uint64_t), uint64_t a7)
{
  uint64_t v69 = a7;
  uint64_t v70 = a6;
  uint64_t v67 = a5;
  unint64_t v65 = a4;
  uint64_t v62 = (uint64_t *)a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0C0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v68 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v63 = (uint64_t)&v53 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v64 = (char *)&v53 - v15;
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v53 - v16;
  uint64_t v18 = sub_24C849B10();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v66 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v61 = (char *)&v53 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v53 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  unint64_t v29 = (char *)&v53 - v28;
  MEMORY[0x270FA5388](v27);
  int v31 = (char *)&v53 - v30;
  unint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  uint64_t v71 = a1;
  uint64_t result = v32(a1, 1, v18);
  if (result != 1 || (a2 & 1) == 0)
  {
    sub_24C7D7BA4(v71, (uint64_t)v17, (uint64_t *)&unk_2697EF0C0);
    if (v32((uint64_t)v17, 1, v18) == 1)
    {
      sub_24C7D7C08((uint64_t)v17, (uint64_t *)&unk_2697EF0C0);
    }
    else
    {
      uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      uint64_t v58 = v19 + 32;
      v57(v31, v17, v18);
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_24C849590();
      __swift_project_value_buffer(v34, (uint64_t)qword_2697F6FF8);
      uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v60(v29, v31, v18);
      unint64_t v35 = v65;
      swift_bridgeObjectRetain_n();
      BOOL v36 = sub_24C849570();
      int v59 = sub_24C84A0F0();
      if (os_log_type_enabled(v36, (os_log_type_t)v59))
      {
        os_log_t v55 = v36;
        uint64_t v56 = v31;
        uint64_t v37 = swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        v73[0] = v54;
        *(_DWORD *)uint64_t v37 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v72 = sub_24C7DE68C((uint64_t)v62, v35, v73);
        uint64_t v62 = v73;
        sub_24C84A1A0();
        uint64_t v38 = (uint8_t *)v37;
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v37 + 12) = 2080;
        uint64_t v39 = (uint64_t)v64;
        v60(v64, v29, v18);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v39, 0, 1, v18);
        uint64_t v40 = v63;
        sub_24C7D7BA4(v39, v63, (uint64_t *)&unk_2697EF0C0);
        if (v32(v40, 1, v18) == 1)
        {
          unint64_t v41 = 0xE300000000000000;
          uint64_t v42 = 7104878;
        }
        else
        {
          v57(v26, (char *)v40, v18);
          v60(v61, v26, v18);
          uint64_t v42 = sub_24C849ED0();
          unint64_t v41 = v44;
          (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v18);
        }
        sub_24C7D7C08(v39, (uint64_t *)&unk_2697EF0C0);
        uint64_t v72 = sub_24C7DE68C(v42, v41, v73);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        uint64_t v45 = *(void (**)(char *, uint64_t))(v19 + 8);
        v45(v29, v18);
        os_log_t v46 = v55;
        _os_log_impl(&dword_24C7BE000, v55, (os_log_type_t)v59, "%s encountered error=%s while sending", v38, 0x16u);
        uint64_t v47 = v54;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v47, -1, -1);
        MEMORY[0x2532FCCC0](v38, -1, -1);

        v45(v56, v18);
      }
      else
      {

        os_log_type_t v43 = *(void (**)(char *, uint64_t))(v19 + 8);
        v43(v29, v18);
        swift_bridgeObjectRelease_n();
        v43(v31, v18);
      }
    }
    uint64_t result = sub_24C849880();
  }
  uint64_t v48 = v70;
  if (v70)
  {
    uint64_t v49 = v68;
    sub_24C7D7BA4(v71, v68, (uint64_t *)&unk_2697EF0C0);
    if (v32(v49, 1, v18) == 1)
    {
      swift_retain();
      sub_24C7D7C08(v49, (uint64_t *)&unk_2697EF0C0);
      v48(0, 0);
      return sub_24C7D6F70((uint64_t)v48);
    }
    else
    {
      uint64_t v50 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v66, v49, v18);
      sub_24C7F228C(&qword_2697EF0D0, MEMORY[0x263F14320]);
      uint64_t v51 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(v52, v50, v18);
      swift_retain();
      v48(v51, 1);
      sub_24C7D6F70((uint64_t)v48);

      return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v50, v18);
    }
  }
  return result;
}

uint64_t sub_24C7E6978(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t (*a8)(uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  unint64_t v116 = a7;
  uint64_t v117 = a8;
  uint64_t v119 = a4;
  uint64_t v120 = a6;
  uint64_t v125 = a1;
  unint64_t v126 = a5;
  LODWORD(v122) = a2;
  uint64_t v123 = a9;
  uint64_t v13 = sub_24C8493D0();
  uint64_t v114 = *(void *)(v13 - 8);
  uint64_t v115 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v121 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_24C8492C0();
  uint64_t v15 = *(void *)(v124 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v124);
  uint64_t v18 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v118 = (char *)&v98 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0C0);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v111 = (uint64_t)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v112 = (char *)&v98 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v98 - v25;
  uint64_t v27 = sub_24C849B10();
  unint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v109 = (char *)&v98 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v110 = (char *)&v98 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  unint64_t v35 = (char *)&v98 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v98 - v36;
  sub_24C7D7BA4(a3, (uint64_t)v26, (uint64_t *)&unk_2697EF0C0);
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (v38((uint64_t)v26, 1, v27) == 1)
  {
    sub_24C7D7C08((uint64_t)v26, (uint64_t *)&unk_2697EF0C0);
    uint64_t v39 = v125;
    unint64_t v40 = v126;
  }
  else
  {
    uint64_t v105 = v38;
    uint64_t v108 = v18;
    uint64_t v113 = v15;
    unint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 32);
    unint64_t v103 = v28 + 32;
    uint64_t v102 = v41;
    v41(v37, (uint64_t)v26, v27);
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_24C849590();
    __swift_project_value_buffer(v42, (uint64_t)qword_2697F6FF8);
    os_log_type_t v43 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    uint64_t v107 = v35;
    uint64_t v104 = v43;
    v43(v35, v37, v27);
    uint64_t v15 = v113;
    unint64_t v44 = v118;
    uint64_t v45 = v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v118, v120, v124);
    unint64_t v40 = v126;
    swift_bridgeObjectRetain_n();
    os_log_t v46 = sub_24C849570();
    int v106 = sub_24C84A0F0();
    if (os_log_type_enabled(v46, (os_log_type_t)v106))
    {
      os_log_t v100 = v46;
      uint64_t v101 = v37;
      uint64_t v47 = swift_slowAlloc();
      uint64_t v99 = swift_slowAlloc();
      v128[0] = v99;
      *(_DWORD *)uint64_t v47 = 136315650;
      swift_bridgeObjectRetain();
      double v127 = COERCE_DOUBLE(sub_24C7DE68C(v119, v40, v128));
      uint64_t v98 = v128;
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2080;
      uint64_t v48 = (uint64_t)v112;
      uint64_t v49 = v107;
      uint64_t v50 = v104;
      v104(v112, v107, v27);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v48, 0, 1, v27);
      uint64_t v51 = v111;
      sub_24C7D7BA4(v48, v111, (uint64_t *)&unk_2697EF0C0);
      if (v105(v51, 1, v27) == 1)
      {
        unint64_t v52 = 0xE300000000000000;
        uint64_t v53 = 7104878;
      }
      else
      {
        os_log_t v55 = v110;
        v102(v110, v51, v27);
        v50(v109, v55, v27);
        uint64_t v53 = sub_24C849ED0();
        unint64_t v52 = v56;
        (*(void (**)(char *, uint64_t))(v28 + 8))(v55, v27);
      }
      uint64_t v39 = v125;
      uint64_t v57 = v118;
      sub_24C7D7C08(v48, (uint64_t *)&unk_2697EF0C0);
      double v127 = COERCE_DOUBLE(sub_24C7DE68C(v53, v52, v128));
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      uint64_t v58 = *(void (**)(char *, uint64_t))(v28 + 8);
      v28 += 8;
      v58(v49, v27);
      *(_WORD *)(v47 + 22) = 2080;
      sub_24C7F228C(&qword_2697EF6C0, MEMORY[0x263F06EA8]);
      uint64_t v59 = v124;
      uint64_t v60 = sub_24C84A430();
      double v127 = COERCE_DOUBLE(sub_24C7DE68C(v60, v61, v128));
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      uint64_t v62 = v113;
      (*(void (**)(char *, uint64_t))(v113 + 8))(v57, v59);
      os_log_t v63 = v100;
      _os_log_impl(&dword_24C7BE000, v100, (os_log_type_t)v106, "%s encountered error=%s while writing file=%s", (uint8_t *)v47, 0x20u);
      uint64_t v64 = v99;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v64, -1, -1);
      MEMORY[0x2532FCCC0](v47, -1, -1);

      v58(v101, v27);
      uint64_t v15 = v62;
      unint64_t v40 = v126;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v15 + 8))(v44, v45);
      uint64_t v54 = *(void (**)(char *, uint64_t))(v28 + 8);
      v28 += 8;
      v54(v107, v27);
      swift_bridgeObjectRelease_n();
      v54(v37, v27);
      uint64_t v39 = v125;
    }
    uint64_t v18 = v108;
  }
  if ((v122 & 1) == 0)
  {
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v82 = sub_24C849590();
    __swift_project_value_buffer(v82, (uint64_t)qword_2697F6FF8);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v83 = sub_24C849570();
    os_log_type_t v84 = sub_24C84A0D0();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      v128[0] = v86;
      *(_DWORD *)uint64_t v85 = 136316162;
      swift_bridgeObjectRetain();
      double v127 = COERCE_DOUBLE(sub_24C7DE68C(v119, v40, v128));
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v85 + 12) = 2048;
      double v127 = (double)v39 / (double)a12 * 100.0;
      sub_24C84A1A0();
      *(_WORD *)(v85 + 22) = 2048;
      double v127 = *(double *)&v39;
      sub_24C84A1A0();
      *(_WORD *)(v85 + 32) = 2048;
      double v127 = *(double *)&a12;
      uint64_t v87 = sub_24C84A1A0();
      *(_WORD *)(v85 + 42) = 2080;
      uint64_t v88 = v117(v87);
      double v127 = COERCE_DOUBLE(sub_24C7DE68C(v88, v89, v128));
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v83, v84, "%s wrote %f%%, %ld/%llu bytes, %s elapsed", (uint8_t *)v85, 0x34u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v86, -1, -1);
      MEMORY[0x2532FCCC0](v85, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    return 1;
  }
  sub_24C8493B0();
  sub_24C8493A0();
  double v66 = v65 * 1000.0;
  if ((~*(void *)&v66 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v66 <= -1.0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v66 >= 1.84467441e19)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v67 = (unint64_t)v66;
  (*(void (**)(char *, uint64_t))(v114 + 8))(v121, v115);
  unint64_t v28 = v67 - v116;
  if (v67 >= v116)
  {
    if (qword_2697EE9B0 == -1) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  swift_once();
LABEL_18:
  uint64_t v68 = sub_24C849590();
  uint64_t v69 = __swift_project_value_buffer(v68, (uint64_t)qword_2697F6FF8);
  uint64_t v70 = v124;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v120, v124);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v122 = v69;
  uint64_t v71 = v15;
  uint64_t v72 = sub_24C849570();
  os_log_type_t v73 = sub_24C84A110();
  int v74 = v73;
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v75 = swift_slowAlloc();
    uint64_t v120 = swift_slowAlloc();
    v128[0] = v120;
    *(_DWORD *)uint64_t v75 = 136315906;
    LODWORD(v118) = v74;
    swift_bridgeObjectRetain();
    double v127 = COERCE_DOUBLE(sub_24C7DE68C(v119, v40, v128));
    uint64_t v121 = (char *)v28;
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v75 + 12) = 2080;
    sub_24C7F228C(&qword_2697EF6C0, MEMORY[0x263F06EA8]);
    uint64_t v76 = sub_24C84A430();
    double v127 = COERCE_DOUBLE(sub_24C7DE68C(v76, v77, v128));
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    uint64_t v78 = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v18, v70);
    *(_WORD *)(v75 + 22) = 2080;
    unint64_t v40 = v126;
    uint64_t v79 = v117(v78);
    double v127 = COERCE_DOUBLE(sub_24C7DE68C(v79, v80, v128));
    uint64_t v39 = v125;
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v75 + 32) = 2048;
    double v127 = *(double *)&v39;
    unint64_t v28 = (unint64_t)v121;
    sub_24C84A1A0();
    _os_log_impl(&dword_24C7BE000, v72, (os_log_type_t)v118, "%s finished sending file=%s after duration=%s with size=%ld", (uint8_t *)v75, 0x2Au);
    uint64_t v81 = v120;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v81, -1, -1);
    MEMORY[0x2532FCCC0](v75, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v70);

    swift_release_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t v90 = sub_24C849570();
  os_log_type_t v91 = sub_24C84A110();
  if (!os_log_type_enabled(v90, v91))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_32;
  }
  double v92 = (double)v28 / 1000.0;
  uint64_t v93 = swift_slowAlloc();
  uint64_t v94 = swift_slowAlloc();
  v128[0] = v94;
  *(_DWORD *)uint64_t v93 = 136315394;
  swift_bridgeObjectRetain();
  double v127 = COERCE_DOUBLE(sub_24C7DE68C(v119, v40, v128));
  sub_24C84A1A0();
  uint64_t result = swift_bridgeObjectRelease_n();
  *(_WORD *)(v93 + 12) = 2080;
  if ((~*(void *)&v92 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v92 <= -9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v92 < 9.22337204e18)
  {
    id v96 = sub_24C804910(v39, (uint64_t)v92);
    double v127 = COERCE_DOUBLE(sub_24C7DE68C((uint64_t)v96, v97, v128));
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v90, v91, "%s observed throughput of %s", (uint8_t *)v93, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v94, -1, -1);
    MEMORY[0x2532FCCC0](v93, -1, -1);

LABEL_32:
    sub_24C8497D0();
    sub_24C849780();
    sub_24C849830();
    swift_release();
    return 1;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_24C7E7940()
{
  uint64_t v1 = sub_24C849C80();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (uint64_t *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  void *v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F0E0], v1);
  id v6 = v5;
  LOBYTE(v5) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection);
  if (v7)
  {
    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = v7;
    swift_retain_n();
    swift_retain();
    sub_24C849890();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  if (qword_2697EE9B0 != -1) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v10 = sub_24C849590();
  __swift_project_value_buffer(v10, (uint64_t)qword_2697F6FF8);
  uint64_t v11 = sub_24C849570();
  os_log_type_t v12 = sub_24C84A0F0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v16 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v15 = sub_24C7DE68C(0xD000000000000014, 0x800000024C84FBB0, &v16);
    sub_24C84A1A0();
    _os_log_impl(&dword_24C7BE000, v11, v12, "%s connection is nil", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v14, -1, -1);
    MEMORY[0x2532FCCC0](v13, -1, -1);
  }
}

uint64_t sub_24C7E7C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0C0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v75 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  os_log_type_t v73 = (char *)v61 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v61 - v15;
  uint64_t v17 = sub_24C849B10();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v72 = (char *)v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)v61 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)v61 - v25;
  MEMORY[0x270FA5388](v24);
  unint64_t v28 = (char *)v61 - v27;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v71 = a7;
    uint64_t v77 = result;
    uint64_t v74 = sub_24C7E2D34(a7);
    uint64_t v31 = v30;
    uint64_t v76 = a3;
    if (a3)
    {
      sub_24C7D7BA4(a5, (uint64_t)v16, (uint64_t *)&unk_2697EF0C0);
      uint64_t v32 = v18;
      uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
      if (v33((uint64_t)v16, 1, v17) == 1)
      {
        uint64_t v34 = v76;
        swift_retain();
        sub_24C7D7C08((uint64_t)v16, (uint64_t *)&unk_2697EF0C0);
      }
      else
      {
        uint64_t v69 = v33;
        unint64_t v40 = v28;
        double v66 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        uint64_t v67 = v32 + 32;
        v66(v28, v16, v17);
        uint64_t v41 = qword_2697EE9B0;
        swift_retain();
        if (v41 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_24C849590();
        __swift_project_value_buffer(v42, (uint64_t)qword_2697F6FF8);
        uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
        v68(v26, v28, v17);
        swift_bridgeObjectRetain_n();
        os_log_type_t v43 = sub_24C849570();
        int v70 = sub_24C84A0F0();
        BOOL v44 = os_log_type_enabled(v43, (os_log_type_t)v70);
        uint64_t v45 = (uint64_t)v75;
        if (v44)
        {
          os_log_t v63 = v40;
          os_log_t v65 = v43;
          uint64_t v46 = swift_slowAlloc();
          uint64_t v62 = swift_slowAlloc();
          uint64_t v79 = v62;
          *(_DWORD *)uint64_t v46 = 136315394;
          swift_bridgeObjectRetain();
          uint64_t v78 = sub_24C7DE68C(v74, (unint64_t)v31, &v79);
          v61[1] = &v79;
          sub_24C84A1A0();
          swift_bridgeObjectRelease_n();
          uint64_t v64 = (uint8_t *)v46;
          *(_WORD *)(v46 + 12) = 2080;
          uint64_t v47 = (uint64_t)v73;
          uint64_t v48 = v68;
          v68(v73, v26, v17);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v47, 0, 1, v17);
          sub_24C7D7BA4(v47, v45, (uint64_t *)&unk_2697EF0C0);
          if (v69(v45, 1, v17) == 1)
          {
            unint64_t v49 = 0xE300000000000000;
            uint64_t v50 = 7104878;
          }
          else
          {
            v66(v23, (char *)v45, v17);
            v48(v72, v23, v17);
            uint64_t v50 = sub_24C849ED0();
            unint64_t v49 = v52;
            (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v17);
          }
          unint64_t v40 = v63;
          uint64_t v53 = v64;
          sub_24C7D7C08(v47, (uint64_t *)&unk_2697EF0C0);
          uint64_t v78 = sub_24C7DE68C(v50, v49, &v79);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          uint64_t v51 = *(void (**)(char *, uint64_t))(v32 + 8);
          v51(v26, v17);
          os_log_t v54 = v65;
          _os_log_impl(&dword_24C7BE000, v65, (os_log_type_t)v70, "%s encountered error=%s while reading HTTP headers", v53, 0x16u);
          uint64_t v55 = v62;
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v55, -1, -1);
          MEMORY[0x2532FCCC0](v53, -1, -1);
        }
        else
        {

          uint64_t v51 = *(void (**)(char *, uint64_t))(v32 + 8);
          v51(v26, v17);
          swift_bridgeObjectRelease_n();
        }
        v51(v40, v17);
        uint64_t v34 = v76;
      }
      if (sub_24C8497C0())
      {
        if (qword_2697EE9B0 != -1) {
          swift_once();
        }
        uint64_t v56 = sub_24C849590();
        __swift_project_value_buffer(v56, (uint64_t)qword_2697F6FF8);
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_24C849570();
        os_log_type_t v58 = sub_24C84A110();
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v59 = (uint8_t *)swift_slowAlloc();
          uint64_t v60 = swift_slowAlloc();
          uint64_t v79 = v60;
          *(_DWORD *)uint64_t v59 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v78 = sub_24C7DE68C(v74, (unint64_t)v31, &v79);
          sub_24C84A1A0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_24C7BE000, v57, v58, "%s read close", v59, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v60, -1, -1);
          MEMORY[0x2532FCCC0](v59, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        sub_24C849880();
        swift_release();
      }
      else
      {
        if (*(unsigned char *)(v77 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_initiated) == 1)
        {
          sub_24C7E8CD8(v34, v74, v31);
          swift_release();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        sub_24C7E856C(v34, v74, (unint64_t)v31);
        swift_release();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_24C849590();
      __swift_project_value_buffer(v35, (uint64_t)qword_2697F6FF8);
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_24C849570();
      os_log_type_t v37 = sub_24C84A110();
      if (!os_log_type_enabled(v36, v37))
      {

        swift_release();
        return swift_bridgeObjectRelease_n();
      }
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v79 = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v78 = sub_24C7DE68C(v74, (unint64_t)v31, &v79);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24C7BE000, v36, v37, "%s receiveHTTPMessage has nil context", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v39, -1, -1);
      MEMORY[0x2532FCCC0](v38, -1, -1);
    }
    return swift_release();
  }
  return result;
}

void sub_24C7E856C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24C849C80();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v28[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v4 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v13 = v12;
  LOBYTE(v12) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v14 = sub_24C7F1400(a1, a2, a3);
  if (v15)
  {
    uint64_t v17 = v14;
    uint64_t v18 = v15;
    uint64_t v19 = v16;
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_24C7F1BC0(v4, v20, v17, v18, v19, a2, a3);
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    return;
  }
  if (qword_2697EE9B0 != -1) {
    goto LABEL_12;
  }
LABEL_5:
  uint64_t v21 = sub_24C849590();
  __swift_project_value_buffer(v21, (uint64_t)qword_2697F6FF8);
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_24C849570();
  os_log_type_t v23 = sub_24C84A0F0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v28[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_24C7DE68C(a2, a3, v28);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24C7BE000, v22, v23, "%s failed to read HTTP Request", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v25, -1, -1);
    MEMORY[0x2532FCCC0](v24, -1, -1);

    uint64_t v26 = *(void (**)(uint64_t *))(v4 + 48);
    if (!v26) {
      return;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v26 = *(void (**)(uint64_t *))(v4 + 48);
    if (!v26) {
      return;
    }
  }
  v28[0] = 0;
  v28[1] = 0;
  char v29 = 3;
  swift_retain();
  v26(v28);
  sub_24C7D6F70((uint64_t)v26);
}

void sub_24C7E88EC(void *a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = Strong;
    if (a3)
    {
      id v19 = a1;
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_24C849590();
      __swift_project_value_buffer(v20, (uint64_t)qword_2697F6FF8);
      sub_24C7F13A4(a1, a2, 1);
      swift_bridgeObjectRetain();
      sub_24C7F13A4(a1, a2, 1);
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_24C849570();
      os_log_type_t v22 = sub_24C84A0F0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v29 = v24;
        *(_DWORD *)uint64_t v23 = 136315394;
        swift_bridgeObjectRetain();
        sub_24C7DE68C(a8, a9, &v29);
        sub_24C84A1A0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v23 + 12) = 2080;
        id v25 = a1;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
        uint64_t v26 = sub_24C849ED0();
        sub_24C7DE68C(v26, v27, &v29);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C7F13B0(a1, a2, 1);
        sub_24C7F13B0(a1, a2, 1);
        _os_log_impl(&dword_24C7BE000, v21, v22, "%s failed to receive HTTP body, error=%s", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v24, -1, -1);
        MEMORY[0x2532FCCC0](v23, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_24C7F13B0(a1, a2, 1);
        sub_24C7F13B0(a1, a2, 1);
      }

      unint64_t v28 = *(void (**)(uint64_t *))(v17 + 48);
      if (v28)
      {
        uint64_t v29 = (uint64_t)a1;
        uint64_t v30 = 0;
        LOBYTE(v31) = 2;
        sub_24C7F13A4(a1, a2, 1);
        sub_24C7D6E3C((uint64_t)v28);
        v28(&v29);
        swift_release();
        sub_24C7D6F70((uint64_t)v28);
        sub_24C7F13B0(a1, a2, 1);
        sub_24C7F13B0(a1, a2, 1);
        return;
      }
      sub_24C7F13B0(a1, a2, 1);
    }
    else
    {
      uint64_t v18 = *(void (**)(uint64_t *))(Strong + 32);
      if (v18)
      {
        uint64_t v29 = a5;
        uint64_t v30 = a6;
        uint64_t v31 = a1;
        unint64_t v32 = a2;
        uint64_t v33 = a7;
        sub_24C7F13A4(a1, a2, 0);
        sub_24C7F13A4(a1, a2, 0);
        sub_24C7D6E3C((uint64_t)v18);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v18(&v29);
        sub_24C7F13B0(a1, a2, 0);
        sub_24C7D6F70((uint64_t)v18);
        swift_bridgeObjectRelease();
        swift_release();
        sub_24C7D6044((uint64_t)a1, a2);
        swift_unknownObjectRelease();
        return;
      }
    }
    swift_release();
  }
}

void sub_24C7E8CD8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v178 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_24C849440();
  uint64_t v167 = *(void (***)(char *, uint64_t))(v7 - 8);
  uint64_t v168 = v7;
  MEMORY[0x270FA5388](v7);
  v166 = (char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  MEMORY[0x270FA5388](v165);
  uint64_t v10 = (char *)&v155 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_24C8492C0();
  unint64_t v171 = *(void **)(v173 - 8);
  uint64_t v11 = v171[8];
  uint64_t v12 = MEMORY[0x270FA5388](v173);
  uint64_t v162 = (char *)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v163 = (char *)&v155 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v164 = (char *)&v155 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v170 = (uint64_t)&v155 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v169 = (char *)&v155 - v20;
  MEMORY[0x270FA5388](v19);
  v172 = (char *)&v155 - v21;
  unint64_t v22 = sub_24C849C80();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  id v25 = (char **)((char *)&v155 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v174 = v3;
  uint64_t v26 = *(void **)(v3 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  *id v25 = v26;
  (*(void (**)(void *, void, unint64_t))(v23 + 104))(v25, *MEMORY[0x263F8F0E0], v22);
  id v27 = v26;
  LOBYTE(v26) = sub_24C849CA0();
  (*(void (**)(void *, unint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
LABEL_87:
    swift_once();
    goto LABEL_15;
  }
  uint64_t v28 = sub_24C7F06B0(a1, a2, (unint64_t)a3);
  unint64_t v22 = (unint64_t)a3;
  if (v29)
  {
    uint64_t v30 = v28;
    uint64_t v31 = v29;
    uint64_t v32 = v174;
    if (*(unsigned char *)(v174 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_awaitingFileTransfer) != 1)
    {
      uint64_t v49 = swift_allocObject();
      swift_weakInit();
      swift_bridgeObjectRetain();
      sub_24C7F0D34(v32, v49, v30, v31, a2, (unint64_t)a3);
      swift_release();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v161 = nw_http_response_copy_header_fields();
    if (!nw_http_fields_copy_value_by_name()) {
      goto LABEL_89;
    }
    unint64_t v160 = (unint64_t)a3;
    uint64_t v33 = sub_24C849F90();
    uint64_t v35 = v34;
    uint64_t v36 = HIBYTE(v34) & 0xF;
    uint64_t v37 = v33 & 0xFFFFFFFFFFFFLL;
    if ((v35 & 0x2000000000000000) != 0) {
      uint64_t v38 = v36;
    }
    else {
      uint64_t v38 = v33 & 0xFFFFFFFFFFFFLL;
    }
    if (!v38)
    {
      swift_bridgeObjectRelease();
      unint64_t v22 = v160;
      goto LABEL_89;
    }
    if ((v35 & 0x1000000000000000) != 0)
    {
      uint64_t v40 = (uint64_t)sub_24C7EF100(v33, v35, 10);
      char v42 = v154;
      goto LABEL_50;
    }
    if ((v35 & 0x2000000000000000) == 0)
    {
      if ((v33 & 0x1000000000000000) != 0) {
        uint64_t v39 = (unsigned __int8 *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v39 = (unsigned __int8 *)sub_24C84A270();
      }
      uint64_t v40 = (uint64_t)sub_24C7EF1E8(v39, v37, 10);
      char v42 = v41 & 1;
LABEL_50:
      swift_bridgeObjectRelease();
      unint64_t v22 = v160;
      if ((v42 & 1) == 0)
      {
        uint64_t v61 = nw_http_fields_copy_value_by_name();
        if (v61)
        {
          uint64_t v159 = v31;
          uint64_t v155 = (char *)v61;
          uint64_t v157 = v30;
          uint64_t v156 = v40;
          uint64_t v158 = a2;
          sub_24C7F0404(v32 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_config, (uint64_t)v10, type metadata accessor for CosmoHttpConnection.Configuration);
          uint64_t v62 = &v10[*(int *)(v165 + 20)];
          *(void *)&long long v176 = *(void *)(v32 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_epochMillisAtInit);
          sub_24C84A430();
          os_log_t v63 = v169;
          sub_24C849280();
          swift_bridgeObjectRelease();
          uint64_t v64 = v171 + 1;
          os_log_t v65 = (void (**)(char *, uint64_t))v171[1];
          uint64_t v66 = v173;
          ((void (*)(char *, uint64_t))v65)(v62, v173);
          uint64_t v67 = v166;
          sub_24C849430();
          sub_24C8493F0();
          v167[1](v67, v168);
          sub_24C849280();
          swift_bridgeObjectRelease();
          uint64_t v167 = v65;
          uint64_t v168 = (uint64_t)v64;
          ((void (*)(char *, uint64_t))v65)(v63, v66);
          uint64_t v10 = (char *)self;
          uint64_t v32 = 0x2652EB000uLL;
          id v68 = objc_msgSend(v10, sel_defaultManager);
          uint64_t v69 = (void *)sub_24C849270();
          *(void *)&long long v176 = 0;
          unsigned int v70 = objc_msgSend(v68, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v69, 1, 0, &v176);

          if (v70)
          {
            id v71 = (id)v176;
LABEL_66:
            sub_24C849F90();
            uint64_t v96 = v170;
            sub_24C849280();
            swift_bridgeObjectRelease();
            id v97 = [v10 *(SEL *)(v32 + 3728)];
            sub_24C8492B0();
            uint64_t v98 = (void *)sub_24C849E50();
            swift_bridgeObjectRelease();
            unsigned int v99 = objc_msgSend(v97, sel_fileExistsAtPath_, v98);

            if (v99)
            {
              if (qword_2697EE9B0 != -1) {
                swift_once();
              }
              uint64_t v100 = sub_24C849590();
              uint64_t v101 = __swift_project_value_buffer(v100, (uint64_t)qword_2697F6FF8);
              uint64_t v102 = (char *)v171[2];
              unint64_t v103 = v164;
              uint64_t v104 = v173;
              uint64_t v165 = (uint64_t)(v171 + 2);
              uint64_t v163 = v102;
              ((void (*)(char *, uint64_t, uint64_t))v102)(v164, v96, v173);
              v166 = (char *)v101;
              uint64_t v105 = sub_24C849570();
              os_log_type_t v106 = sub_24C84A0F0();
              if (os_log_type_enabled(v105, v106))
              {
                uint64_t v107 = swift_slowAlloc();
                uint64_t v155 = v10;
                uint64_t v108 = (uint8_t *)v107;
                uint64_t v109 = swift_slowAlloc();
                *(void *)&long long v176 = v109;
                *(_DWORD *)uint64_t v108 = 136315138;
                sub_24C7F228C(&qword_2697EF6C0, MEMORY[0x263F06EA8]);
                uint64_t v110 = sub_24C84A430();
                uint64_t v175 = sub_24C7DE68C(v110, v111, (uint64_t *)&v176);
                unint64_t v22 = v160;
                sub_24C84A1A0();
                swift_bridgeObjectRelease();
                uint64_t v96 = v170;
                ((void (*)(char *, uint64_t))v167)(v103, v104);
                _os_log_impl(&dword_24C7BE000, v105, v106, "WARNING: Overwriting existing file=%s", v108, 0xCu);
                swift_arrayDestroy();
                uint64_t v112 = v109;
                uint64_t v32 = 0x2652EB000;
                MEMORY[0x2532FCCC0](v112, -1, -1);
                uint64_t v113 = v108;
                uint64_t v10 = v155;
                MEMORY[0x2532FCCC0](v113, -1, -1);
              }
              else
              {
                ((void (*)(char *, uint64_t))v167)(v103, v104);
              }

              id v114 = [v10 *(SEL *)(v32 + 3728)];
              uint64_t v115 = (void *)sub_24C849270();
              *(void *)&long long v176 = 0;
              unsigned int v116 = objc_msgSend(v114, sel_removeItemAtURL_error_, v115, &v176);

              if (v116)
              {
                id v117 = (id)v176;
              }
              else
              {
                id v118 = (id)v176;
                uint64_t v119 = (void *)sub_24C849240();

                swift_willThrow();
                uint64_t v120 = v162;
                uint64_t v121 = v96;
                uint64_t v122 = v173;
                ((void (*)(char *, uint64_t, uint64_t))v163)(v162, v121, v173);
                id v123 = v119;
                id v124 = v119;
                uint64_t v125 = sub_24C849570();
                os_log_type_t v126 = sub_24C84A0F0();
                if (os_log_type_enabled(v125, v126))
                {
                  uint64_t v127 = swift_slowAlloc();
                  uint64_t v128 = swift_slowAlloc();
                  *(void *)&long long v176 = v128;
                  *(_DWORD *)uint64_t v127 = 136315394;
                  sub_24C7F228C(&qword_2697EF6C0, MEMORY[0x263F06EA8]);
                  uint64_t v129 = sub_24C84A430();
                  uint64_t v175 = sub_24C7DE68C(v129, v130, (uint64_t *)&v176);
                  sub_24C84A1A0();
                  swift_bridgeObjectRelease();
                  ((void (*)(char *, uint64_t))v167)(v120, v122);
                  *(_WORD *)(v127 + 12) = 2080;
                  uint64_t v175 = (uint64_t)v119;
                  id v131 = v119;
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
                  uint64_t v132 = sub_24C849ED0();
                  uint64_t v175 = sub_24C7DE68C(v132, v133, (uint64_t *)&v176);
                  sub_24C84A1A0();
                  swift_bridgeObjectRelease();

                  _os_log_impl(&dword_24C7BE000, v125, v126, "Error while removing existing file=%s error=%s", (uint8_t *)v127, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x2532FCCC0](v128, -1, -1);
                  uint64_t v134 = v127;
                  unint64_t v22 = v160;
                  MEMORY[0x2532FCCC0](v134, -1, -1);
                }
                else
                {

                  ((void (*)(char *, uint64_t))v167)(v120, v122);
                }
                uint64_t v96 = v170;
              }
            }
            uint64_t v138 = swift_allocObject();
            swift_weakInit();
            uint64_t v139 = v171;
            uint64_t v140 = v169;
            uint64_t v141 = v173;
            ((void (*)(char *, uint64_t, uint64_t))v171[2])(v169, v96, v173);
            unint64_t v142 = (*((unsigned __int8 *)v139 + 80) + 26) & ~(unint64_t)*((unsigned __int8 *)v139 + 80);
            unint64_t v143 = (v11 + v142 + 7) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v144 = swift_allocObject();
            *(void *)(v144 + 16) = v138;
            *(_WORD *)(v144 + 24) = v157;
            ((void (*)(unint64_t, char *, uint64_t))v139[4])(v144 + v142, v140, v141);
            *(void *)(v144 + v143) = v159;
            uint64_t v145 = (uint64_t *)(v144 + ((v143 + 15) & 0xFFFFFFFFFFFFFFF8));
            *uint64_t v145 = v158;
            v145[1] = v22;
            swift_retain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v146 = v170;
            sub_24C7EB2AC(v170, v156, 0, 0, (void (*)(void *, uint64_t))sub_24C7F1250, v144);
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_release();
            char v147 = v167;
            ((void (*)(uint64_t, uint64_t))v167)(v146, v141);
            ((void (*)(char *, uint64_t))v147)(v172, v141);
            goto LABEL_85;
          }
          id v78 = (id)v176;
          a3 = (void *)sub_24C849240();

          swift_willThrow();
          if (qword_2697EE9B0 == -1)
          {
LABEL_59:
            uint64_t v79 = sub_24C849590();
            __swift_project_value_buffer(v79, (uint64_t)qword_2697F6FF8);
            unint64_t v80 = v163;
            uint64_t v81 = v173;
            ((void (*)(char *, char *, uint64_t))v171[2])(v163, v172, v173);
            id v82 = a3;
            id v83 = a3;
            os_log_type_t v84 = sub_24C849570();
            os_log_type_t v85 = sub_24C84A0F0();
            if (os_log_type_enabled(v84, v85))
            {
              uint64_t v86 = swift_slowAlloc();
              v166 = (char *)swift_slowAlloc();
              *(void *)&long long v176 = v166;
              *(_DWORD *)uint64_t v86 = 136315394;
              sub_24C7F228C(&qword_2697EF6C0, MEMORY[0x263F06EA8]);
              uint64_t v87 = sub_24C84A430();
              uint64_t v175 = sub_24C7DE68C(v87, v88, (uint64_t *)&v176);
              sub_24C84A1A0();
              swift_bridgeObjectRelease();
              ((void (*)(char *, uint64_t))v167)(v80, v173);
              *(_WORD *)(v86 + 12) = 2080;
              uint64_t v175 = (uint64_t)a3;
              id v89 = a3;
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
              uint64_t v90 = sub_24C849ED0();
              uint64_t v175 = sub_24C7DE68C(v90, v91, (uint64_t *)&v176);
              sub_24C84A1A0();
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_24C7BE000, v84, v85, "Error creating directory=%s, error=%s", (uint8_t *)v86, 0x16u);
              double v92 = v166;
              swift_arrayDestroy();
              MEMORY[0x2532FCCC0](v92, -1, -1);
              uint64_t v93 = v86;
              uint64_t v32 = 0x2652EB000;
              MEMORY[0x2532FCCC0](v93, -1, -1);
            }
            else
            {

              ((void (*)(char *, uint64_t))v167)(v80, v81);
            }
            unint64_t v22 = v160;
            goto LABEL_66;
          }
LABEL_105:
          swift_once();
          goto LABEL_59;
        }
        if (qword_2697EE9B0 != -1) {
          swift_once();
        }
        uint64_t v72 = sub_24C849590();
        __swift_project_value_buffer(v72, (uint64_t)qword_2697F6FF8);
        swift_bridgeObjectRetain_n();
        os_log_type_t v73 = sub_24C849570();
        os_log_type_t v74 = sub_24C84A0F0();
        if (os_log_type_enabled(v73, v74))
        {
          uint64_t v75 = a2;
          uint64_t v76 = swift_slowAlloc();
          uint64_t v77 = swift_slowAlloc();
          *(void *)&long long v176 = v77;
          *(_DWORD *)uint64_t v76 = 136315394;
          swift_bridgeObjectRetain();
          uint64_t v175 = sub_24C7DE68C(v75, v22, (uint64_t *)&v176);
          sub_24C84A1A0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v76 + 12) = 2080;
          uint64_t v175 = sub_24C7DE68C(0x656D614E656C6946, 0xE800000000000000, (uint64_t *)&v176);
          sub_24C84A1A0();
          _os_log_impl(&dword_24C7BE000, v73, v74, "%s failed to read '%s' header", (uint8_t *)v76, 0x16u);
          swift_arrayDestroy();
          uint64_t v32 = v174;
          MEMORY[0x2532FCCC0](v77, -1, -1);
          MEMORY[0x2532FCCC0](v76, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        uint64_t v94 = *(void (**)(long long *))(v32 + 80);
        if (!v94) {
          goto LABEL_97;
        }
        long long v95 = xmmword_24C84BD80;
        goto LABEL_96;
      }
LABEL_89:
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v148 = sub_24C849590();
      __swift_project_value_buffer(v148, (uint64_t)qword_2697F6FF8);
      swift_bridgeObjectRetain_n();
      char v149 = sub_24C849570();
      os_log_type_t v150 = sub_24C84A0F0();
      if (os_log_type_enabled(v149, v150))
      {
        uint64_t v151 = a2;
        os_log_type_t v152 = (uint8_t *)swift_slowAlloc();
        uint64_t v153 = swift_slowAlloc();
        *(void *)&long long v176 = v153;
        *(_DWORD *)os_log_type_t v152 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v175 = sub_24C7DE68C(v151, v22, (uint64_t *)&v176);
        uint64_t v32 = v174;
        sub_24C84A1A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24C7BE000, v149, v150, "%s failed to read 'Content-Length' header", v152, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v153, -1, -1);
        MEMORY[0x2532FCCC0](v152, -1, -1);

        uint64_t v94 = *(void (**)(long long *))(v32 + 80);
        if (!v94) {
          goto LABEL_97;
        }
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v94 = *(void (**)(long long *))(v32 + 80);
        if (!v94)
        {
LABEL_97:
          if (*(void *)(v32 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
          {
            swift_retain();
            sub_24C849880();
            swift_release();
          }
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          return;
        }
      }
      long long v95 = xmmword_24C84BD90;
LABEL_96:
      long long v176 = v95;
      char v177 = 0;
      swift_retain();
      v94(&v176);
      sub_24C7D6F70((uint64_t)v94);
      goto LABEL_97;
    }
    *(void *)&long long v176 = v33;
    *((void *)&v176 + 1) = v35 & 0xFFFFFFFFFFFFFFLL;
    if (v33 == 43)
    {
      if (v36)
      {
        if (v36 != 1 && (BYTE1(v33) - 48) <= 9u)
        {
          uint64_t v40 = (BYTE1(v33) - 48);
          uint64_t v56 = v36 - 2;
          if (v56)
          {
            uint64_t v57 = (unsigned __int8 *)&v176 + 2;
            while (1)
            {
              unsigned int v58 = *v57 - 48;
              if (v58 > 9) {
                goto LABEL_47;
              }
              uint64_t v59 = 10 * v40;
              if ((unsigned __int128)(v40 * (__int128)10) >> 64 != (10 * v40) >> 63) {
                goto LABEL_47;
              }
              uint64_t v40 = v59 + v58;
              if (__OFADD__(v59, v58)) {
                goto LABEL_47;
              }
              char v42 = 0;
              ++v57;
              if (!--v56) {
                goto LABEL_50;
              }
            }
          }
          goto LABEL_49;
        }
        goto LABEL_47;
      }
    }
    else
    {
      if (v33 != 45)
      {
        if (v36 && (v33 - 48) <= 9u)
        {
          uint64_t v40 = (v33 - 48);
          uint64_t v60 = v36 - 1;
          if (v60)
          {
            uint64_t v135 = (unsigned __int8 *)&v176 + 1;
            while (1)
            {
              unsigned int v136 = *v135 - 48;
              if (v136 > 9) {
                goto LABEL_47;
              }
              uint64_t v137 = 10 * v40;
              if ((unsigned __int128)(v40 * (__int128)10) >> 64 != (10 * v40) >> 63) {
                goto LABEL_47;
              }
              uint64_t v40 = v137 + v136;
              if (__OFADD__(v137, v136)) {
                goto LABEL_47;
              }
              char v42 = 0;
              ++v135;
              if (!--v60) {
                goto LABEL_50;
              }
            }
          }
          goto LABEL_49;
        }
LABEL_47:
        uint64_t v40 = 0;
        char v42 = 1;
        goto LABEL_50;
      }
      if (v36)
      {
        if (v36 != 1 && (BYTE1(v33) - 48) <= 9u)
        {
          uint64_t v40 = -(uint64_t)(BYTE1(v33) - 48);
          uint64_t v52 = v36 - 2;
          if (v52)
          {
            uint64_t v53 = (unsigned __int8 *)&v176 + 2;
            while (1)
            {
              unsigned int v54 = *v53 - 48;
              if (v54 > 9) {
                goto LABEL_47;
              }
              uint64_t v55 = 10 * v40;
              if ((unsigned __int128)(v40 * (__int128)10) >> 64 != (10 * v40) >> 63) {
                goto LABEL_47;
              }
              uint64_t v40 = v55 - v54;
              if (__OFSUB__(v55, v54)) {
                goto LABEL_47;
              }
              char v42 = 0;
              ++v53;
              if (!--v52) {
                goto LABEL_50;
              }
            }
          }
LABEL_49:
          char v42 = 0;
          goto LABEL_50;
        }
        goto LABEL_47;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_105;
  }
  if (qword_2697EE9B0 != -1) {
    goto LABEL_87;
  }
LABEL_15:
  uint64_t v43 = sub_24C849590();
  __swift_project_value_buffer(v43, (uint64_t)qword_2697F6FF8);
  swift_bridgeObjectRetain_n();
  BOOL v44 = sub_24C849570();
  os_log_type_t v45 = sub_24C84A0F0();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = a2;
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    *(void *)&long long v176 = v48;
    *(_DWORD *)uint64_t v47 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v175 = sub_24C7DE68C(v46, v22, (uint64_t *)&v176);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24C7BE000, v44, v45, "%s failed to read HTTP response", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v48, -1, -1);
    MEMORY[0x2532FCCC0](v47, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v50 = v174;
  uint64_t v51 = *(void (**)(long long *))(v174 + 80);
  if (v51)
  {
    long long v176 = 0uLL;
    char v177 = 3;
    swift_retain();
    v51(&v176);
    sub_24C7D6F70((uint64_t)v51);
  }
  if (*(void *)(v50 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
  {
    swift_retain();
    sub_24C849880();
LABEL_85:
    swift_release();
  }
}

uint64_t sub_24C7EA3A0(void *a1, char a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v15 = type metadata accessor for RawHTTPResponse(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v19 = result;
    if (a2)
    {
      id v25 = a1;
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_24C849590();
      __swift_project_value_buffer(v26, (uint64_t)qword_2697F6FF8);
      sub_24C7D7B8C(a1, 1);
      swift_bridgeObjectRetain();
      sub_24C7D7B8C(a1, 1);
      swift_bridgeObjectRetain();
      id v27 = sub_24C849570();
      os_log_type_t v28 = sub_24C84A0F0();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        v37[0] = v30;
        *(_DWORD *)uint64_t v29 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_24C7DE68C(a7, a8, v37);
        sub_24C84A1A0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v29 + 12) = 2080;
        uint64_t v36 = (uint64_t)a1;
        id v31 = a1;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
        uint64_t v32 = sub_24C849ED0();
        uint64_t v36 = sub_24C7DE68C(v32, v33, v37);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C7D7B98(a1, 1);
        sub_24C7D7B98(a1, 1);
        _os_log_impl(&dword_24C7BE000, v27, v28, "%s failed to receive HTTP file, error=%s", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v30, -1, -1);
        MEMORY[0x2532FCCC0](v29, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_24C7D7B98(a1, 1);
        sub_24C7D7B98(a1, 1);
      }

      unint64_t v34 = *(void (**)(uint64_t *))(v19 + 80);
      if (v34)
      {
        v37[0] = (uint64_t)a1;
        v37[1] = 0;
        char v38 = 1;
        sub_24C7D7B8C(a1, 1);
        sub_24C7D6E3C((uint64_t)v34);
        v34(v37);
        sub_24C7D6F70((uint64_t)v34);
        sub_24C7D7B98(a1, 1);
      }
      if (!*(void *)(v19 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
      {
        sub_24C7D7B98(a1, 1);
        return swift_release();
      }
      swift_retain();
      sub_24C849880();
      sub_24C7D7B98(a1, 1);
    }
    else
    {
      uint64_t v20 = *(void (**)(char *))(result + 64);
      if (v20)
      {
        uint64_t v21 = &v17[*(int *)(v15 + 24)];
        uint64_t v22 = sub_24C8492C0();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v35 = v19;
        uint64_t v24 = v23;
        (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, a5, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v22);
        uint64_t v19 = v35;
        *(_WORD *)uint64_t v17 = a4;
        *(_OWORD *)(v17 + 8) = xmmword_24C84AFC0;
        *(void *)&v17[*(int *)(v15 + 28)] = a6;
        sub_24C7D6E3C((uint64_t)v20);
        swift_unknownObjectRetain();
        v20(v17);
        sub_24C7D6F70((uint64_t)v20);
        sub_24C7ED248((uint64_t)v17, type metadata accessor for RawHTTPResponse);
      }
      if (!*(void *)(v19 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection)) {
        return swift_release();
      }
      swift_retain();
      sub_24C849880();
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24C7EA844(void *a1, unint64_t a2, char a3, uint64_t a4, __int16 a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v15 = type metadata accessor for RawHTTPResponse(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v19 = result;
    if (a3)
    {
      id v23 = a1;
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_24C849590();
      __swift_project_value_buffer(v24, (uint64_t)qword_2697F6FF8);
      sub_24C7F13A4(a1, a2, 1);
      swift_bridgeObjectRetain();
      sub_24C7F13A4(a1, a2, 1);
      swift_bridgeObjectRetain();
      id v25 = sub_24C849570();
      os_log_type_t v26 = sub_24C84A0F0();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        v41[0] = v28;
        *(_DWORD *)uint64_t v27 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_24C7DE68C(a7, a8, v41);
        sub_24C84A1A0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v27 + 12) = 2080;
        uint64_t v40 = (uint64_t)a1;
        id v29 = a1;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
        uint64_t v30 = sub_24C849ED0();
        uint64_t v40 = sub_24C7DE68C(v30, v31, v41);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C7F13B0(a1, a2, 1);
        sub_24C7F13B0(a1, a2, 1);
        _os_log_impl(&dword_24C7BE000, v25, v26, "%s failed to receive HTTP body, error=%s", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v28, -1, -1);
        MEMORY[0x2532FCCC0](v27, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_24C7F13B0(a1, a2, 1);
        sub_24C7F13B0(a1, a2, 1);
      }

      uint64_t v32 = *(void (**)(uint64_t *))(v19 + 80);
      if (v32)
      {
        v41[0] = (uint64_t)a1;
        v41[1] = 0;
        char v42 = 2;
        sub_24C7F13A4(a1, a2, 1);
        sub_24C7D6E3C((uint64_t)v32);
        v32(v41);
        sub_24C7D6F70((uint64_t)v32);
        sub_24C7F13B0(a1, a2, 1);
      }
      if (*(void *)(v19 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
      {
        swift_retain();
        sub_24C849880();
        unint64_t v33 = a1;
        unint64_t v34 = a2;
        char v35 = 1;
LABEL_17:
        sub_24C7F13B0(v33, v34, v35);
        swift_release();
        return swift_release();
      }
      uint64_t v36 = a1;
      unint64_t v37 = a2;
      char v38 = 1;
    }
    else
    {
      uint64_t v20 = *(void (**)(char *))(result + 64);
      if (v20)
      {
        uint64_t v21 = &v17[*(int *)(v15 + 24)];
        uint64_t v22 = sub_24C8492C0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
        *(_WORD *)uint64_t v17 = a5;
        *((void *)v17 + 1) = a1;
        *((void *)v17 + 2) = a2;
        *(void *)&v17[*(int *)(v15 + 28)] = a6;
        sub_24C7F13A4(a1, a2, 0);
        sub_24C7F13A4(a1, a2, 0);
        sub_24C7D6E3C((uint64_t)v20);
        swift_unknownObjectRetain();
        v20(v17);
        sub_24C7D6F70((uint64_t)v20);
        sub_24C7ED248((uint64_t)v17, type metadata accessor for RawHTTPResponse);
      }
      else
      {
        sub_24C7D7304((uint64_t)a1, a2);
      }
      if (*(void *)(v19 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
      {
        swift_retain();
        sub_24C849880();
        unint64_t v33 = a1;
        unint64_t v34 = a2;
        char v35 = 0;
        goto LABEL_17;
      }
      uint64_t v36 = a1;
      unint64_t v37 = a2;
      char v38 = 0;
    }
    sub_24C7F13B0(v36, v37, v38);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C7EAD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void, void, void), uint64_t a9)
{
  uint64_t v52 = a1;
  uint64_t v53 = a3;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0C0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24C849B10();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v42 - v21;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v50 = a9;
    uint64_t v51 = a2;
    uint64_t v24 = sub_24C7E2D34(a7);
    unint64_t v26 = v25;
    sub_24C7D7BA4(a5, (uint64_t)v15, (uint64_t *)&unk_2697EF0C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      swift_bridgeObjectRelease();
      sub_24C7D7C08((uint64_t)v15, (uint64_t *)&unk_2697EF0C0);
    }
    else
    {
      uint64_t v49 = v24;
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v15, v16);
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_24C849590();
      __swift_project_value_buffer(v27, (uint64_t)qword_2697F6FF8);
      uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
      v48(v20, v22, v16);
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_24C849570();
      os_log_type_t v29 = sub_24C84A0F0();
      int v30 = v29;
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v31 = swift_slowAlloc();
        int v45 = v30;
        uint64_t v32 = v31;
        BOOL v44 = (void *)swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        v55[0] = v46;
        *(_DWORD *)uint64_t v32 = 136315650;
        uint64_t v47 = a8;
        uint64_t v54 = sub_24C7DE68C(0xD000000000000023, 0x800000024C84FB10, v55);
        os_log_t v43 = v28;
        sub_24C84A1A0();
        *(_WORD *)(v32 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v54 = sub_24C7DE68C(v49, v26, v55);
        sub_24C84A1A0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v32 + 22) = 2112;
        sub_24C7F228C(&qword_2697EF0D0, MEMORY[0x263F14320]);
        swift_allocError();
        v48(v33, v20, v16);
        uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v54 = v34;
        a8 = v47;
        sub_24C84A1A0();
        char v35 = v44;
        void *v44 = v34;
        uint64_t v36 = *(void (**)(char *, uint64_t))(v17 + 8);
        v36(v20, v16);
        os_log_t v37 = v43;
        _os_log_impl(&dword_24C7BE000, v43, (os_log_type_t)v45, "%s %s receiveMessage encountered error=%@", (uint8_t *)v32, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF0D8);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v35, -1, -1);
        uint64_t v38 = v46;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v38, -1, -1);
        MEMORY[0x2532FCCC0](v32, -1, -1);

        v36(v22, v16);
      }
      else
      {

        uint64_t v39 = *(void (**)(char *, uint64_t))(v17 + 8);
        v39(v20, v16);
        swift_bridgeObjectRelease_n();
        v39(v22, v16);
      }
    }
    if (v53)
    {
      a8(v52, v51, 0);
    }
    else
    {
      v55[0] = 0;
      v55[1] = 0xE000000000000000;
      sub_24C84A230();
      swift_bridgeObjectRelease();
      sub_24C7D7054();
      uint64_t v40 = (void *)swift_allocError();
      *(void *)uint64_t v41 = 0xD000000000000043;
      *(void *)(v41 + 8) = 0x800000024C84FB40;
      *(unsigned char *)(v41 + 16) = 0;
      a8(v40, 0, 1);
    }
    return swift_release();
  }
  return result;
}

void sub_24C7EB2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  uint64_t v75 = a5;
  uint64_t v71 = a3;
  uint64_t v72 = a4;
  uint64_t v73 = a2;
  uint64_t v77 = a1;
  uint64_t v8 = sub_24C8493D0();
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  MEMORY[0x270FA5388](v8);
  os_log_type_t v74 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24C8492C0();
  unint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  unsigned int v70 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v76 = (char *)&v60 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = sub_24C849C80();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (uint64_t *)((char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(void **)(v6 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  *uint64_t v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F8F0E0], v18);
  id v23 = v22;
  unint64_t v24 = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if ((v24 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
LABEL_4:
    uint64_t v26 = sub_24C849590();
    __swift_project_value_buffer(v26, (uint64_t)qword_2697F6FF8);
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v27(v17, v77, v10);
    swift_bridgeObjectRetain_n();
    uint64_t v28 = sub_24C849570();
    os_log_type_t v29 = sub_24C84A110();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      unint64_t v62 = v11;
      uint64_t v31 = v30;
      uint64_t v60 = swift_slowAlloc();
      v79[0] = v60;
      *(_DWORD *)uint64_t v31 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v78 = sub_24C7DE68C(v67, v24, v79);
      uint64_t v61 = v27;
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2080;
      uint64_t v64 = (void (*)(char *, uint64_t))(v31 + 14);
      sub_24C7F228C(&qword_2697EF6C0, MEMORY[0x263F06EA8]);
      uint64_t v32 = sub_24C84A430();
      uint64_t v78 = sub_24C7DE68C(v32, v33, v79);
      uint64_t v27 = v61;
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      uint64_t v64 = *(void (**)(char *, uint64_t))(v62 + 8);
      v64(v17, v10);
      _os_log_impl(&dword_24C7BE000, v28, v29, "%s receiving file at file=%s", (uint8_t *)v31, 0x16u);
      uint64_t v34 = v60;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v34, -1, -1);
      uint64_t v35 = v31;
      unint64_t v11 = v62;
      MEMORY[0x2532FCCC0](v35, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v64 = *(void (**)(char *, uint64_t))(v11 + 8);
      v64(v17, v10);
    }

    os_log_t v43 = v74;
    sub_24C8493B0();
    sub_24C8493A0();
    double v45 = v44 * 1000.0;
    if ((~*(void *)&v45 & 0x7FF0000000000000) != 0)
    {
      if (v45 > -1.0)
      {
        if (v45 < 1.84467441e19)
        {
          unint64_t v46 = (unint64_t)v45;
          unint64_t v62 = (unint64_t)v45;
          (*(void (**)(char *, uint64_t))(v68 + 8))(v43, v69);
          uint64_t v47 = swift_allocObject();
          *(void *)(v47 + 16) = v46;
          uint64_t v48 = v76;
          v27(v76, v77, v10);
          uint64_t v49 = v70;
          v27(v70, (uint64_t)v48, v10);
          unint64_t v50 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
          unint64_t v51 = (v12 + v50 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v52 = (v51 + 23) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v53 = (char *)swift_allocObject();
          *((void *)v53 + 2) = v67;
          *((void *)v53 + 3) = v24;
          uint64_t v54 = v10;
          uint64_t v63 = v10;
          uint64_t v55 = v71;
          uint64_t v56 = v72;
          *((void *)v53 + 4) = v71;
          *((void *)v53 + 5) = v56;
          *((void *)v53 + 6) = v62;
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v53[v50], v49, v54);
          uint64_t v57 = (uint64_t (**)())&v53[v51];
          *uint64_t v57 = sub_24C7F047C;
          v57[1] = (uint64_t (*)())v47;
          *(void *)&v53[v52] = v73;
          unsigned int v58 = &v53[(v52 + 15) & 0xFFFFFFFFFFFFFFF8];
          uint64_t v59 = v66;
          *(void *)unsigned int v58 = v75;
          *((void *)v58 + 1) = v59;
          swift_retain_n();
          sub_24C7D6E3C(v55);
          swift_retain();
          sub_24C849760();
          swift_release();
          swift_release_n();
          swift_release();
          v64(v76, v63);
          return;
        }
        goto LABEL_19;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (*(void *)(v6 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
  {
    uint64_t v66 = a6;
    uint64_t v65 = swift_retain();
    uint64_t v67 = sub_24C7E2D34(v65);
    unint64_t v24 = v25;
    if (qword_2697EE9B0 == -1) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  if (qword_2697EE9B0 != -1) {
LABEL_20:
  }
    swift_once();
  uint64_t v36 = sub_24C849590();
  __swift_project_value_buffer(v36, (uint64_t)qword_2697F6FF8);
  os_log_t v37 = sub_24C849570();
  os_log_type_t v38 = sub_24C84A0F0();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    v79[0] = v40;
    *(_DWORD *)uint64_t v39 = 136315138;
    uint64_t v78 = sub_24C7DE68C(0xD00000000000003DLL, 0x800000024C84FA80, v79);
    sub_24C84A1A0();
    _os_log_impl(&dword_24C7BE000, v37, v38, "%s connection is nil", v39, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v40, -1, -1);
    MEMORY[0x2532FCCC0](v39, -1, -1);
  }

  v79[0] = 0;
  v79[1] = 0xE000000000000000;
  sub_24C84A230();
  swift_bridgeObjectRelease();
  sub_24C7D7054();
  uint64_t v41 = (void *)swift_allocError();
  *(void *)uint64_t v42 = 0xD00000000000004FLL;
  *(void *)(v42 + 8) = 0x800000024C84FA30;
  *(unsigned char *)(v42 + 16) = 1;
  v75(v41, 1);
}

uint64_t sub_24C7EBB50(unint64_t a1)
{
  uint64_t v2 = sub_24C8493D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C8493B0();
  uint64_t result = sub_24C8493A0();
  double v8 = v7 * 1000.0;
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v8 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v8 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v9 = (unint64_t)v8;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v9 >= a1)
  {
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    sub_24C84A0B0();
    sub_24C849F80();
    return v10[0];
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_24C7EBCC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(uint64_t), uint64_t a8, unint64_t a9, unint64_t a10, void (**a11)(char *, unint64_t, char *), uint64_t a12, uint64_t a13, void (*a14)(void, void))
{
  uint64_t v88 = a8;
  uint64_t v89 = a5;
  unint64_t v91 = a7;
  LODWORD(v92) = a3;
  uint64_t v95 = a1;
  uint64_t v16 = sub_24C8492C0();
  uint64_t v94 = *(void (***)(char *, unint64_t, char *))(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v93 = (char *)v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24C8493D0();
  uint64_t v86 = *(void *)(v18 - 8);
  uint64_t v87 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v90 = (char *)v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0C0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_24C849B10();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  os_log_type_t v29 = (char *)v80 - v28;
  sub_24C7D7BA4(a4, (uint64_t)v22, (uint64_t *)&unk_2697EF0C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_24C7D7C08((uint64_t)v22, (uint64_t *)&unk_2697EF0C0);
  }
  else
  {
    uint64_t v85 = v16;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v22, v23);
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_24C849590();
    __swift_project_value_buffer(v30, (uint64_t)qword_2697F6FF8);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
    v31(v27, v29, v23);
    swift_bridgeObjectRetain_n();
    uint64_t v32 = sub_24C849570();
    os_log_type_t v33 = sub_24C84A0F0();
    int v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v35 = swift_slowAlloc();
      int v83 = v34;
      uint64_t v36 = v35;
      id v82 = (void *)swift_slowAlloc();
      uint64_t v84 = swift_slowAlloc();
      v97[0] = v84;
      *(_DWORD *)uint64_t v36 = 136315650;
      uint64_t v81 = (void (*)(uint64_t, char *, uint64_t))v31;
      uint64_t v96 = sub_24C7DE68C(0xD00000000000003DLL, 0x800000024C84FA80, v97);
      v80[1] = v97;
      sub_24C84A1A0();
      *(_WORD *)(v36 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_24C7DE68C(v89, a6, v97);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v36 + 22) = 2112;
      sub_24C7F228C(&qword_2697EF0D0, MEMORY[0x263F14320]);
      swift_allocError();
      unint64_t v37 = a6;
      v81(v38, v27, v23);
      uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v96 = v39;
      sub_24C84A1A0();
      uint64_t v40 = v82;
      *id v82 = v39;
      a6 = v37;
      uint64_t v41 = *(void (**)(char *, uint64_t))(v24 + 8);
      v41(v27, v23);
      uint64_t v42 = v32;
      _os_log_impl(&dword_24C7BE000, v32, (os_log_type_t)v83, "%s %s receiveFile encountered error=%@", (uint8_t *)v36, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF0D8);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v40, -1, -1);
      uint64_t v43 = v84;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v43, -1, -1);
      MEMORY[0x2532FCCC0](v36, -1, -1);
    }
    else
    {

      uint64_t v41 = *(void (**)(char *, uint64_t))(v24 + 8);
      v41(v27, v23);
      swift_bridgeObjectRelease_n();
    }
    v41(v29, v23);
    uint64_t v16 = v85;
  }
  double v45 = v93;
  double v44 = v94;
  if (v91) {
    v91(v95);
  }
  if ((v92 & 1) == 0)
  {
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v62 = sub_24C849590();
    __swift_project_value_buffer(v62, (uint64_t)qword_2697F6FF8);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v63 = sub_24C849570();
    os_log_type_t v64 = sub_24C84A0D0();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = v95;
      *(double *)&uint64_t v66 = (double)v95 / (double)a13 * 100.0;
      uint64_t v67 = swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      v97[0] = v68;
      *(_DWORD *)uint64_t v67 = 136316162;
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_24C7DE68C(v89, a6, v97);
      uint64_t v94 = a11;
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v67 + 12) = 2048;
      uint64_t v96 = v66;
      sub_24C84A1A0();
      *(_WORD *)(v67 + 22) = 2048;
      uint64_t v96 = v65;
      sub_24C84A1A0();
      *(_WORD *)(v67 + 32) = 2048;
      uint64_t v96 = a13;
      uint64_t v69 = sub_24C84A1A0();
      *(_WORD *)(v67 + 42) = 2080;
      uint64_t v70 = ((uint64_t (*)(uint64_t))v94)(v69);
      uint64_t v96 = sub_24C7DE68C(v70, v71, v97);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v63, v64, "%s read %f%%, %ld/%ld bytes, %s elapsed", (uint8_t *)v67, 0x34u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v68, -1, -1);
      MEMORY[0x2532FCCC0](v67, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    return 1;
  }
  unint64_t v46 = (unint64_t)v90;
  sub_24C8493B0();
  sub_24C8493A0();
  double v48 = v47 * 1000.0;
  if ((~*(void *)&v48 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v48 <= -1.0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v48 >= 1.84467441e19)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  os_log_type_t v29 = (char *)v16;
  unint64_t v46 = (unint64_t)v48;
  (*(void (**)(char *, uint64_t))(v86 + 8))(v90, v87);
  if (v46 >= a9)
  {
    unint64_t v92 = v46 - a9;
    uint64_t v94 = a11;
    unint64_t v46 = a10;
    if (qword_2697EE9B0 == -1) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  swift_once();
LABEL_17:
  uint64_t v49 = sub_24C849590();
  uint64_t v50 = __swift_project_value_buffer(v49, (uint64_t)qword_2697F6FF8);
  unint64_t v51 = v29;
  v44[2](v45, v46, v29);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v93 = (char *)v50;
  unint64_t v52 = sub_24C849570();
  os_log_type_t v53 = sub_24C84A110();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = v44;
    uint64_t v55 = swift_slowAlloc();
    uint64_t v90 = (char *)swift_slowAlloc();
    v97[0] = (uint64_t)v90;
    *(_DWORD *)uint64_t v55 = 136315906;
    swift_bridgeObjectRetain();
    uint64_t v96 = sub_24C7DE68C(v89, a6, v97);
    uint64_t v88 = a13;
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v55 + 12) = 2080;
    unint64_t v91 = (void (*)(uint64_t))a6;
    sub_24C7F228C(&qword_2697EF6C0, MEMORY[0x263F06EA8]);
    uint64_t v56 = sub_24C84A430();
    uint64_t v96 = sub_24C7DE68C(v56, v57, v97);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    uint64_t v58 = ((uint64_t (*)(char *, char *))v54[1])(v45, v51);
    *(_WORD *)(v55 + 22) = 2080;
    uint64_t v59 = ((uint64_t (*)(uint64_t))v94)(v58);
    uint64_t v96 = sub_24C7DE68C(v59, v60, v97);
    a6 = (unint64_t)v91;
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 32) = 2048;
    uint64_t v96 = v88;
    sub_24C84A1A0();
    _os_log_impl(&dword_24C7BE000, v52, v53, "%s finished receiving file=%s after duration=%s with size=%ld", (uint8_t *)v55, 0x2Au);
    uint64_t v61 = v90;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v61, -1, -1);
    MEMORY[0x2532FCCC0](v55, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    ((void (*)(char *, char *))v44[1])(v45, v51);

    swift_release_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t v72 = sub_24C849570();
  os_log_type_t v73 = sub_24C84A110();
  if (!os_log_type_enabled(v72, v73))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_31;
  }
  double v74 = (double)v92 / 1000.0;
  uint64_t v75 = swift_slowAlloc();
  uint64_t v76 = swift_slowAlloc();
  v97[0] = v76;
  *(_DWORD *)uint64_t v75 = 136315394;
  swift_bridgeObjectRetain();
  uint64_t v96 = sub_24C7DE68C(v89, a6, v97);
  sub_24C84A1A0();
  uint64_t result = swift_bridgeObjectRelease_n();
  *(_WORD *)(v75 + 12) = 2080;
  if ((~*(void *)&v74 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v74 <= -9.22337204e18)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v74 < 9.22337204e18)
  {
    id v78 = sub_24C804910(v95, (uint64_t)v74);
    uint64_t v96 = sub_24C7DE68C((uint64_t)v78, v79, v97);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v72, v73, "%s observed throughput of %s", (uint8_t *)v75, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v76, -1, -1);
    MEMORY[0x2532FCCC0](v75, -1, -1);

LABEL_31:
    a14(0, 0);
    return 1;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_24C7ECA2C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_2697EE9B0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24C849590();
  __swift_project_value_buffer(v5, (uint64_t)qword_2697F6FF8);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_24C849570();
  os_log_type_t v7 = sub_24C84A0D0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v12 = v9;
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    sub_24C7DE68C(a2, a3, &v12);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v10 = sub_24C849F90();
    sub_24C7DE68C(v10, v11, &v12);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v6, v7, "%s received %s request", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v9, -1, -1);
    MEMORY[0x2532FCCC0](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_24C7ECC14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a1)
  {
    uint64_t v7 = sub_24C849F90();
    uint64_t v9 = v8;
    swift_beginAccess();
    *(void *)(a2 + 16) = v7;
    *(void *)(a2 + 24) = v9;
    swift_bridgeObjectRelease();
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_24C849590();
    __swift_project_value_buffer(v10, (uint64_t)qword_2697F6FF8);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    unint64_t v11 = sub_24C849570();
    os_log_type_t v12 = sub_24C84A0D0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v18 = v14;
      *(_DWORD *)uint64_t v13 = 136315394;
      swift_bridgeObjectRetain();
      sub_24C7DE68C(a3, a4, &v18);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 12) = 2080;
      swift_beginAccess();
      if (*(void *)(a2 + 24))
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_24C849ED0();
        unint64_t v17 = v16;
      }
      else
      {
        unint64_t v17 = 0xE300000000000000;
        uint64_t v15 = 7104878;
      }
      sub_24C7DE68C(v15, v17, &v18);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v11, v12, "%s to %s path", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v14, -1, -1);
      MEMORY[0x2532FCCC0](v13, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_24C7ECEA4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2);
}

uint64_t sub_24C7ECED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (qword_2697EE9B0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_24C849590();
  __swift_project_value_buffer(v8, (uint64_t)qword_2697F6FF8);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_24C849570();
  os_log_type_t v10 = sub_24C84A0D0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = v12;
    *(_DWORD *)uint64_t v11 = 136315650;
    swift_bridgeObjectRetain();
    sub_24C7DE68C(a5, a6, &v18);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v13 = sub_24C849F90();
    sub_24C7DE68C(v13, v14, &v18);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2080;
    uint64_t v15 = sub_24C849F90();
    sub_24C7DE68C(v15, v16, &v18);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v9, v10, "%s read HTTP header '%s' with value '%s'", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v12, -1, -1);
    MEMORY[0x2532FCCC0](v11, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 1;
}

uint64_t sub_24C7ED104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4, a5) & 1;
}

uint64_t *CosmoHttpConnection.deinit()
{
  sub_24C7D6F70(v0[2]);
  sub_24C7D6F70(v0[4]);
  sub_24C7D6F70(v0[6]);
  sub_24C7D6F70(v0[8]);
  sub_24C7D6F70(v0[10]);
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_id;
  uint64_t v2 = sub_24C849440();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24C7ED248((uint64_t)v0 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_config, type metadata accessor for CosmoHttpConnection.Configuration);
  sub_24C7ED248((uint64_t)v0 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_descriptor, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_24C7ED248(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t CosmoHttpConnection.__deallocating_deinit()
{
  CosmoHttpConnection.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

unint64_t sub_24C7ED304()
{
  unint64_t result = qword_2697EF028;
  if (!qword_2697EF028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF028);
  }
  return result;
}

uint64_t sub_24C7ED358()
{
  return sub_24C7F228C(&qword_2697EF030, MEMORY[0x263F07508]);
}

uint64_t sub_24C7ED3A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_id;
  uint64_t v4 = sub_24C849440();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

id sub_24C7ED424(id result, id a2, char a3)
{
  if (a3 == 2 || a3 == 1) {
    return result;
  }
  if (!a3) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for CosmoHttpError(uint64_t a1)
{
}

void sub_24C7ED45C(void *a1, id a2, char a3)
{
  if (a3 == 2 || a3 == 1)
  {
  }
  else if (!a3)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t _s5Cosmo14CosmoHttpErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24C7ED424(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CosmoHttpError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24C7ED424(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24C7ED45C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CosmoHttpError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24C7ED45C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoHttpError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CosmoHttpError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24C7ED5FC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_24C7ED614(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CosmoHttpError()
{
  return &type metadata for CosmoHttpError;
}

uint64_t getEnumTagSinglePayload for CosmoListener.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CosmoHttpConnection.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C7ED798);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoHttpConnection.State()
{
  return &type metadata for CosmoHttpConnection.State;
}

uint64_t sub_24C7ED7D0()
{
  return type metadata accessor for CosmoHttpConnection(0);
}

uint64_t type metadata accessor for CosmoHttpConnection(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EF058);
}

uint64_t sub_24C7ED7F8()
{
  uint64_t result = sub_24C849440();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CosmoHttpConnection.Configuration(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for NetworkDescriptor();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t method lookup function for CosmoHttpConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CosmoHttpConnection);
}

uint64_t dispatch thunk of CosmoHttpConnection.stateChangedCallback.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of CosmoHttpConnection.stateChangedCallback.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of CosmoHttpConnection.stateChangedCallback.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CosmoHttpConnection.Configuration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    unsigned int v6 = (char *)a1 + v5;
    BOOL v7 = (char *)a2 + v5;
    uint64_t v8 = sub_24C8492C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for CosmoHttpConnection.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_24C8492C0();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *initializeWithCopy for CosmoHttpConnection.Configuration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24C8492C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *assignWithCopy for CosmoHttpConnection.Configuration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24C8492C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *initializeWithTake for CosmoHttpConnection.Configuration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24C8492C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for CosmoHttpConnection.Configuration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24C8492C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoHttpConnection.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24C7EDD08);
}

uint64_t sub_24C7EDD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_24C8492C0();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for CosmoHttpConnection.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24C7EDD8C);
}

uint64_t sub_24C7EDD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_24C8492C0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_24C7EDE00()
{
  uint64_t result = sub_24C8492C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24C7EDE9C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = a2 + 1;
    unint64_t v8 = a2[2];
    if (v8 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)v7;
    }
    else
    {
      uint64_t v10 = *v7;
      sub_24C7D60D0(*v7, a2[2]);
      v4[1] = v10;
      v4[2] = v8;
    }
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_24C8492C0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_unknownObjectRetain();
  }
  return v4;
}

uint64_t sub_24C7EE06C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >> 60 != 15) {
    sub_24C7D5FEC(*(void *)(a1 + 8), v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_24C8492C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_24C7EE160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = (uint64_t *)(a2 + 8);
  unint64_t v7 = *(void *)(a2 + 16);
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_24C7D60D0(*v6, *(void *)(a2 + 16));
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v7;
  }
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_24C8492C0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_24C7EE2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  unint64_t v7 = (uint64_t *)(a2 + 8);
  unint64_t v8 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) >> 60 == 15)
  {
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *v7;
      sub_24C7D60D0(*v7, *(void *)(a2 + 16));
      *(void *)(a1 + 8) = v9;
      *(void *)(a1 + 16) = v8;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v8 >> 60 == 15)
  {
    sub_24C7EE514(a1 + 8);
LABEL_6:
    _OWORD *v6 = *(_OWORD *)v7;
    goto LABEL_8;
  }
  uint64_t v10 = *v7;
  sub_24C7D60D0(*v7, *(void *)(a2 + 16));
  uint64_t v11 = *(void *)(a1 + 8);
  unint64_t v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v8;
  sub_24C7D5FEC(v11, v12);
LABEL_8:
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_24C8492C0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_13;
  }
  if (v20)
  {
LABEL_13:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_14:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_24C7EE514(uint64_t a1)
{
  return a1;
}

uint64_t sub_24C7EE568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  unint64_t v7 = (void *)(a1 + v6);
  unint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_24C8492C0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_24C7EE6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  unint64_t v7 = (_OWORD *)(a2 + 8);
  unint64_t v8 = *(void *)(a1 + 16);
  if (v8 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v9 = *(void *)(a2 + 16);
  if (v9 >> 60 == 15)
  {
    sub_24C7EE514(a1 + 8);
LABEL_4:
    _OWORD *v6 = *v7;
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)v7;
  *(void *)(a1 + 16) = v9;
  sub_24C7D5FEC(v10, v8);
LABEL_6:
  uint64_t v11 = *(int *)(a3 + 24);
  unint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = sub_24C8492C0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_11;
  }
  if (v18)
  {
LABEL_11:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_12:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_24C7EE89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24C7EE8B0);
}

uint64_t sub_24C7EE8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_24C7EE978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24C7EE98C);
}

uint64_t sub_24C7EE98C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for RawHTTPResponse(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EF080);
}

void sub_24C7EEA70()
{
  sub_24C7EEB1C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_24C7EEB1C()
{
  if (!qword_2697EF090)
  {
    sub_24C8492C0();
    unint64_t v0 = sub_24C84A180();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2697EF090);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for RawHTTPRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for RawHTTPRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >> 60 != 15) {
    sub_24C7D5FEC(*(void *)(a1 + 16), v2);
  }
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for RawHTTPRequest(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 2;
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_24C7D60D0(v7, v6);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
  }
  *(void *)(a1 + 32) = a2[4];
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for RawHTTPRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_24C7D60D0(*v4, a2[3]);
      uint64_t v8 = a1[2];
      unint64_t v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_24C7D5FEC(v8, v9);
      goto LABEL_8;
    }
    sub_24C7EE514((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_24C7D60D0(*v4, a2[3]);
  a1[2] = v6;
  a1[3] = v5;
LABEL_8:
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for RawHTTPRequest(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = a2 + 2;
  unint64_t v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_24C7D5FEC(v8, v6);
      goto LABEL_6;
    }
    sub_24C7EE514((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
LABEL_6:
  a1[4] = a2[4];
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RawHTTPRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RawHTTPRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RawHTTPRequest()
{
  return &type metadata for RawHTTPRequest;
}

uint64_t sub_24C7EEEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24C7EEF20(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24C7EEF7C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24C7EEF8C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  *uint64_t v1 = sub_24C849F90();
  v1[1] = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24C7EEFCC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C7EEFDC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

void *sub_24C7EF01C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEF50);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24C7EF084(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_24C84A000();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x2532FBE20](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_24C7EF100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24C84A020();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_24C7EF464();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_24C84A270();
  }
LABEL_7:
  uint64_t v11 = sub_24C7EF1E8(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_24C7EF1E8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  int v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_24C7EF464()
{
  unint64_t v0 = sub_24C84A030();
  uint64_t v4 = sub_24C7EF4E4(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24C7EF4E4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_24C7EF63C(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_24C7EF01C(v9, 0);
      unint64_t v12 = sub_24C7EF73C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_24C84A270();
LABEL_4:
        JUMPOUT(0x2532FBD90);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x2532FBD90](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x2532FBD90]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_24C7EF63C(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_24C7EF084(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_24C7EF084(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_24C7EF73C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    __n128 result = v12;
    if (v17 == v15) {
      __n128 result = sub_24C7EF084(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      __n128 result = sub_24C849FF0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        __n128 result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          __n128 result = sub_24C84A270();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    __n128 result = sub_24C7EF084(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_24C849FC0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_24C7EF950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_24C849BD0();
  uint64_t v23 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24C849BF0();
  uint64_t v15 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[3] = a5;
  v27[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  sub_24C7D76E0((uint64_t)v27, (uint64_t)v26);
  char v19 = (void *)swift_allocObject();
  void v19[2] = a4;
  uint64_t v19[3] = a2;
  v19[4] = a3;
  sub_24C7D76C8(v26, (uint64_t)(v19 + 5));
  aBlock[4] = sub_24C7EFCEC;
  void aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_42;
  char v20 = _Block_copy(aBlock);
  swift_retain();
  sub_24C7D6E3C(a2);
  sub_24C849BE0();
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_24C7F228C((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7F2328((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v17, v14, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v22);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_24C7EFC9C()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return MEMORY[0x270FA0238](v0, 80, 7);
}

void sub_24C7EFCEC()
{
  sub_24C7E5158(*(void *)(v0 + 16), *(void (**)(void *, uint64_t))(v0 + 24), *(void *)(v0 + 32), (void *)(v0 + 40));
}

uint64_t sub_24C7EFCFC()
{
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24C7EFD4C(uint64_t a1)
{
  return sub_24C7E6230(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void (**)(void *, uint64_t))(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_24C7EFD60()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24C7EFD70()
{
  uint64_t v1 = sub_24C8492C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_24C8497E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 + v5 + 8) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return MEMORY[0x270FA0238](v0, v10, v12);
}

uint64_t sub_24C7EFF10(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_24C8492C0() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(sub_24C8497E0() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + v11 + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return sub_24C7E6978(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), v3 + v8, *(void *)(v3 + v9), *(uint64_t (**)(uint64_t))(v3 + v10), *(void *)(v3 + v10 + 8), *(void *)(v3 + v11), v3 + v13, *(void *)(v3 + ((*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8))) & 1;
}

uint64_t sub_24C7F0068(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a3 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection))
  {
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_24C849590();
    __swift_project_value_buffer(v17, (uint64_t)qword_2697F6FF8);
    unint64_t v18 = sub_24C849570();
    os_log_type_t v19 = sub_24C84A0F0();
    if (os_log_type_enabled(v18, v19))
    {
      char v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v20 = 0;
      MEMORY[0x2532FCCC0](v20, -1, -1);
    }
    goto LABEL_13;
  }
  sub_24C8498C0();
  swift_retain_n();
  sub_24C7F6D40();
  uint64_t v14 = sub_24C849740();
  if (!v14)
  {
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_24C849590();
    __swift_project_value_buffer(v21, (uint64_t)qword_2697F6FF8);
    unint64_t v18 = sub_24C849570();
    os_log_type_t v22 = sub_24C84A0F0();
    if (os_log_type_enabled(v18, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      MEMORY[0x2532FCCC0](v23, -1, -1);
    }
    swift_release();
LABEL_13:

    swift_release();
    sub_24C7ED248(a2, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
    sub_24C7ED248(a1, type metadata accessor for CosmoHttpConnection.Configuration);
    return 0;
  }
  uint64_t v15 = v14;
  sub_24C7F0404(a1, (uint64_t)v13, type metadata accessor for CosmoHttpConnection.Configuration);
  sub_24C7F0404(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoHttpConnection(0);
  uint64_t v16 = swift_allocObject();
  sub_24C7E1E3C((uint64_t)v13, (uint64_t)v10, 1, v15, a4);
  swift_release();
  swift_release();
  sub_24C7ED248(a2, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  sub_24C7ED248(a1, type metadata accessor for CosmoHttpConnection.Configuration);
  return v16;
}

uint64_t sub_24C7F0404(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24C7F046C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24C7F047C()
{
  return sub_24C7EBB50(*(void *)(v0 + 16));
}

uint64_t sub_24C7F0498()
{
  uint64_t v1 = sub_24C8492C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  uint64_t v5 = (v3 + 56) & ~v3;
  unint64_t v6 = (((((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v5, v1);
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, v6 + 16, v3 | 7);
}

uint64_t sub_24C7F05B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(sub_24C8492C0() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24C7EBCC4(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void (**)(uint64_t))(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), v4 + v10, *(void (***)(char *, unint64_t, char *))(v4 + v11), *(void *)(v4 + v11 + 8), *(void *)(v4 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, void))(v4+ ((((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8))) & 1;
}

uint64_t sub_24C7F06B0(uint64_t a1, uint64_t a2, unint64_t isEscapingClosureAtFileLocation)
{
  uint64_t v5 = sub_24C8497B0();
  unint64_t v6 = nw_protocol_copy_http_definition();
  nw_protocol_metadata_t v7 = nw_content_context_copy_protocol_metadata(v5, v6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v7)
  {
    if (!nw_http_metadata_copy_response())
    {
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_24C849590();
      __swift_project_value_buffer(v18, (uint64_t)qword_2697F6FF8);
      swift_bridgeObjectRetain_n();
      os_log_type_t v19 = sub_24C849570();
      os_log_type_t v20 = sub_24C84A0F0();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        aBlock[0] = v22;
        *(_DWORD *)uint64_t v21 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_24C7DE68C(a2, isEscapingClosureAtFileLocation, aBlock);
        sub_24C84A1A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24C7BE000, v19, v20, "%s could not extract HTTP response metadata", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v22, -1, -1);
        MEMORY[0x2532FCCC0](v21, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_unknownObjectRelease();
      return 0;
    }
    unsigned int status_code = nw_http_response_get_status_code();
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_24C849590();
    __swift_project_value_buffer(v8, (uint64_t)qword_2697F6FF8);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_24C849570();
    os_log_type_t v10 = sub_24C84A0D0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      aBlock[0] = v12;
      *(_DWORD *)uint64_t v11 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_24C7DE68C(a2, isEscapingClosureAtFileLocation, aBlock);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v11 + 12) = 512;
      LOWORD(v28) = status_code;
      sub_24C84A1A0();
      _os_log_impl(&dword_24C7BE000, v9, v10, "%s read HTTP status %hu", (uint8_t *)v11, 0x10u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v12, -1, -1);
      MEMORY[0x2532FCCC0](v11, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    nw_http_response_copy();
    nw_http_response_copy_header_fields();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a2;
    *(void *)(v23 + 24) = isEscapingClosureAtFileLocation;
    a2 = swift_allocObject();
    *(void *)(a2 + 16) = sub_24C7F13BC;
    *(void *)(a2 + 24) = v23;
    aBlock[4] = (uint64_t)sub_24C7F13D4;
    void aBlock[5] = a2;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24C7ED104;
    aBlock[3] = (uint64_t)&block_descriptor_80;
    uint64_t v24 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    nw_http_fields_enumerate();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    _Block_release(v24);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return status_code;
    }
    __break(1u);
  }
  else if (qword_2697EE9B0 == -1)
  {
    goto LABEL_8;
  }
  swift_once();
LABEL_8:
  uint64_t v13 = sub_24C849590();
  __swift_project_value_buffer(v13, (uint64_t)qword_2697F6FF8);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_24C849570();
  os_log_type_t v15 = sub_24C84A0F0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    aBlock[0] = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_24C7DE68C(a2, isEscapingClosureAtFileLocation, aBlock);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24C7BE000, v14, v15, "%s could not extract HTTP definition for HTTP response", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v17, -1, -1);
    MEMORY[0x2532FCCC0](v16, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_24C7F0CFC()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24C7F0D34(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v12 = sub_24C849C80();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  os_log_type_t v15 = (uint64_t *)((char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  int v31 = a3;
  *(_WORD *)(v16 + 24) = a3;
  *(void *)(v16 + 32) = a4;
  *(void *)(v16 + 40) = a5;
  uint64_t v32 = a5;
  *(void *)(v16 + 48) = a6;
  uint64_t v17 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  *os_log_type_t v15 = v17;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F0E0], v12);
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = v17;
  LOBYTE(a3) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if ((a3 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection);
  if (v19)
  {
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = v20;
    v21[3] = v19;
    v21[4] = sub_24C7F135C;
    v21[5] = v16;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_24C8497F0();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  if (qword_2697EE9B0 != -1) {
    goto LABEL_10;
  }
LABEL_5:
  uint64_t v22 = sub_24C849590();
  __swift_project_value_buffer(v22, (uint64_t)qword_2697F6FF8);
  uint64_t v23 = sub_24C849570();
  os_log_type_t v24 = sub_24C84A0F0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v34[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v33 = sub_24C7DE68C(0xD000000000000023, 0x800000024C84FB10, v34);
    sub_24C84A1A0();
    _os_log_impl(&dword_24C7BE000, v23, v24, "%s connection is nil", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v26, -1, -1);
    MEMORY[0x2532FCCC0](v25, -1, -1);
  }

  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  sub_24C84A230();
  swift_bridgeObjectRelease();
  sub_24C7D7054();
  unint64_t v27 = (void *)swift_allocError();
  *(void *)uint64_t v28 = 0xD000000000000035;
  *(void *)(v28 + 8) = 0x800000024C84FAD0;
  *(unsigned char *)(v28 + 16) = 1;
  sub_24C7EA844(v27, 0, 1, a2, v31, a4, v32, a6);

  return swift_release();
}

uint64_t sub_24C7F1154()
{
  uint64_t v1 = sub_24C8492C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 26) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v6 + 16, v5);
}

uint64_t sub_24C7F1250(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(sub_24C8492C0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = v2 + v6;
  uint64_t v10 = *(void *)(v2 + v7);
  uint64_t v11 = (uint64_t *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  unint64_t v13 = v11[1];
  __int16 v14 = *(_WORD *)(v2 + 24);
  return sub_24C7EA3A0(a1, v4, v8, v14, v9, v10, v12, v13);
}

uint64_t sub_24C7F1314()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24C7F135C(void *a1, unint64_t a2, char a3)
{
  return sub_24C7EA844(a1, a2, a3 & 1, *(void *)(v3 + 16), *(_WORD *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48));
}

uint64_t sub_24C7F1378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24C7EAD0C(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void (**)(void, void, void))(v5 + 32), *(void *)(v5 + 40));
}

id sub_24C7F13A4(id a1, unint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)sub_24C7D7304((uint64_t)a1, a2);
  }
}

void sub_24C7F13B0(id a1, unint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    sub_24C7D6044((uint64_t)a1, a2);
  }
}

uint64_t sub_24C7F13BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24C7ECED0(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_24C7F13C4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C7F13D4()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_24C7F1400(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = sub_24C8497B0();
  unint64_t v6 = nw_protocol_copy_http_definition();
  nw_protocol_metadata_t v7 = nw_content_context_copy_protocol_metadata(v5, v6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (!v7)
  {
    if (qword_2697EE9B0 == -1) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
  if (!nw_http_metadata_copy_request())
  {
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_24C849590();
    __swift_project_value_buffer(v21, (uint64_t)qword_2697F6FF8);
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_24C849570();
    os_log_type_t v23 = sub_24C84A0F0();
    if (os_log_type_enabled(v22, v23))
    {
      os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t aBlock = v25;
      *(_DWORD *)os_log_type_t v24 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_24C7DE68C(a2, a3, &aBlock);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24C7BE000, v22, v23, "%s could not extract HTTP request metadata", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v25, -1, -1);
      MEMORY[0x2532FCCC0](v24, -1, -1);

LABEL_22:
      swift_unknownObjectRelease();
      return 0;
    }

LABEL_21:
    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24C7F20C4;
  *(void *)(v9 + 24) = v8;
  uint64_t v38 = sub_24C7F2404;
  uint64_t v39 = v9;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_24C7E1334;
  unint64_t v37 = &block_descriptor_99;
  uint64_t v10 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  nw_http_request_access_method();
  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v10)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  uint64_t v12[3] = a2;
  uint64_t v33 = a2;
  _DWORD v12[4] = a3;
  a2 = swift_allocObject();
  *(void *)(a2 + 16) = sub_24C7F2118;
  *(void *)(a2 + 24) = v12;
  uint64_t v38 = sub_24C7F2134;
  uint64_t v39 = a2;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_24C7ECEA4;
  unint64_t v37 = &block_descriptor_111;
  unint64_t v13 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  nw_http_request_access_path();
  _Block_release(v13);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    swift_once();
LABEL_8:
    uint64_t v16 = sub_24C849590();
    __swift_project_value_buffer(v16, (uint64_t)qword_2697F6FF8);
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_24C849570();
    os_log_type_t v18 = sub_24C84A0F0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t aBlock = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_24C7DE68C(a2, a3, &aBlock);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24C7BE000, v17, v18, "%s could not extract HTTP definition for HTTP request", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v20, -1, -1);
      MEMORY[0x2532FCCC0](v19, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  swift_beginAccess();
  if (!*(void *)(v11 + 24))
  {
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_24C849590();
    __swift_project_value_buffer(v26, (uint64_t)qword_2697F6FF8);
    swift_bridgeObjectRetain_n();
    unint64_t v27 = sub_24C849570();
    os_log_type_t v28 = sub_24C84A0F0();
    if (os_log_type_enabled(v27, v28))
    {
      log = v27;
      os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v40 = v30;
      *(_DWORD *)os_log_type_t v29 = 136315138;
      swift_bridgeObjectRetain();
      sub_24C7DE68C(v33, a3, &v40);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24C7BE000, log, v28, "%s got bad request with no HTTP path", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v30, -1, -1);
      MEMORY[0x2532FCCC0](v29, -1, -1);
      swift_release();
      swift_release();
      swift_release();

      swift_unknownObjectRelease();
      goto LABEL_22;
    }
    swift_release();
    swift_release();
    swift_release();

    swift_unknownObjectRelease();
    goto LABEL_21;
  }
  uint64_t v15 = *(void *)(v11 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v15;
}

uint64_t sub_24C7F1BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v14 = sub_24C849C80();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint8_t **)((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v18 = (void *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  uint64_t v36 = a3;
  uint64_t v37 = a6;
  uint64_t v19 = a5;
  unint64_t v20 = a7;
  uint64_t v21 = v18;
  v18[4] = a4;
  v18[5] = v19;
  v18[6] = a6;
  v18[7] = v20;
  uint64_t v22 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_queue);
  *uint64_t v17 = v22;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F0E0], v14);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v23 = v22;
  LOBYTE(v22) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v24 = *(void *)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_connection);
  if (v24)
  {
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    uint64_t v26 = (void *)swift_allocObject();
    long long v26[2] = v25;
    void v26[3] = v24;
    v26[4] = sub_24C7F2044;
    v26[5] = v21;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_24C8497F0();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  if (qword_2697EE9B0 != -1) {
    goto LABEL_10;
  }
LABEL_5:
  uint64_t v27 = sub_24C849590();
  __swift_project_value_buffer(v27, (uint64_t)qword_2697F6FF8);
  os_log_type_t v28 = sub_24C849570();
  os_log_type_t v29 = sub_24C84A0F0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v39[0] = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v35 = v30 + 4;
    uint64_t v38 = sub_24C7DE68C(0xD000000000000023, 0x800000024C84FB10, v39);
    sub_24C84A1A0();
    _os_log_impl(&dword_24C7BE000, v28, v29, "%s connection is nil", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v31, -1, -1);
    MEMORY[0x2532FCCC0](v30, -1, -1);
  }

  v39[0] = 0;
  v39[1] = 0xE000000000000000;
  sub_24C84A230();
  swift_bridgeObjectRelease();
  sub_24C7D7054();
  uint64_t v32 = (void *)swift_allocError();
  *(void *)uint64_t v33 = 0xD000000000000035;
  *(void *)(v33 + 8) = 0x800000024C84FAD0;
  *(unsigned char *)(v33 + 16) = 1;
  sub_24C7E88EC(v32, 0, 1, a2, v36, a4, v19, v37, v20);

  return swift_release();
}

uint64_t sub_24C7F1FF4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_24C7F2044(void *a1, unint64_t a2, char a3)
{
  sub_24C7E88EC(a1, a2, a3 & 1, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56));
}

uint64_t objectdestroy_70Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_24C7F20C4(uint64_t a1)
{
  sub_24C7ECA2C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24C7F20CC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C7F20DC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24C7F2118(uint64_t a1)
{
  sub_24C7ECC14(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24C7F2124()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C7F2134()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24C7F215C()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C7F219C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24C7E7C3C(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24));
}

uint64_t sub_24C7F21A4()
{
  return sub_24C7E4DC8(v0);
}

uint64_t sub_24C7F21AC()
{
  return sub_24C7E2ABC(v0);
}

uint64_t objectdestroy_104Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_24C7F21F8(uint64_t a1)
{
  sub_24C7E2E50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24C7F2204()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C7F223C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24C7F2264()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24C7F228C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24C7F22D4()
{
  unint64_t result = qword_2697EF350;
  if (!qword_2697EF350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF350);
  }
  return result;
}

uint64_t sub_24C7F2328(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24C7F236C()
{
  unint64_t result = qword_2697EF1A0;
  if (!qword_2697EF1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF1A0);
  }
  return result;
}

uint64_t sub_24C7F2408(uint64_t a1, uint64_t a2)
{
  v4[2] = a2;
  sub_24C84A180();
  sub_24C7F24A0((void (*)(char *, char *))sub_24C7F2C90, (uint64_t)v4, MEMORY[0x263F8E628], MEMORY[0x263F8D310], v2, (uint64_t)v5);
  if (v5[1]) {
    return v5[0];
  }
  else {
    return 7104878;
  }
}

uint64_t sub_24C7F24A0@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v10);
  os_log_type_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_24C7F2748()
{
  uint64_t v0 = sub_24C849590();
  __swift_allocate_value_buffer(v0, qword_2697F6FF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2697F6FF8);
  return sub_24C849580();
}

uint64_t sub_24C7F27C8()
{
  uint64_t v0 = sub_24C849590();
  __swift_allocate_value_buffer(v0, qword_2697F7010);
  __swift_project_value_buffer(v0, (uint64_t)qword_2697F7010);
  return sub_24C849580();
}

uint64_t sub_24C7F2848()
{
  uint64_t v0 = sub_24C849590();
  __swift_allocate_value_buffer(v0, qword_2697F7028);
  __swift_project_value_buffer(v0, (uint64_t)qword_2697F7028);
  return sub_24C849580();
}

uint64_t sub_24C7F28CC()
{
  uint64_t v0 = sub_24C849590();
  __swift_allocate_value_buffer(v0, qword_2697F7040);
  __swift_project_value_buffer(v0, (uint64_t)qword_2697F7040);
  return sub_24C849580();
}

uint64_t sub_24C7F2948()
{
  uint64_t v0 = sub_24C849590();
  __swift_allocate_value_buffer(v0, qword_2697F7058);
  __swift_project_value_buffer(v0, (uint64_t)qword_2697F7058);
  return sub_24C849580();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_24C7F2A30()
{
  uint64_t v0 = sub_24C849590();
  __swift_allocate_value_buffer(v0, qword_2697F7070);
  __swift_project_value_buffer(v0, (uint64_t)qword_2697F7070);
  return sub_24C849580();
}

uint64_t sub_24C7F2AAC()
{
  uint64_t v0 = sub_24C849590();
  __swift_allocate_value_buffer(v0, qword_2697F7088);
  __swift_project_value_buffer(v0, (uint64_t)qword_2697F7088);
  return sub_24C849580();
}

uint64_t sub_24C7F2B38()
{
  uint64_t v0 = sub_24C849590();
  __swift_allocate_value_buffer(v0, qword_2697F70A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2697F70A0);
  return sub_24C849580();
}

uint64_t sub_24C7F2BC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_24C849ED0();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_24C7F2C90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24C7F2BC0(a1, a2);
}

uint64_t sub_24C7F2CB0(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x6572756C696166;
  }
  else {
    uint64_t v2 = 0x73736563637573;
  }
  if (a2) {
    uint64_t v3 = 0x6572756C696166;
  }
  else {
    uint64_t v3 = 0x73736563637573;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_24C84A440();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_24C7F2D30(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x64656C696166;
    }
    else {
      uint64_t v3 = 0x64656C65636E6163;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x64656C696166;
      }
      else {
        uint64_t v6 = 0x64656C65636E6163;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x7964616572;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x7964616572)
  {
LABEL_21:
    char v8 = sub_24C84A440();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24C7F2E40(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6164696C61766E69;
  }
  else {
    uint64_t v3 = 0x7964616572;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xEB00000000646574;
  }
  if (a2) {
    uint64_t v5 = 0x6164696C61766E69;
  }
  else {
    uint64_t v5 = 0x7964616572;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000646574;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_24C84A440();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_24C7F2EF0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x64656C65636E6163;
    }
    else {
      uint64_t v3 = 0x64656C696166;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x64656C65636E6163;
      }
      else {
        uint64_t v6 = 0x64656C696166;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x7964616572;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x7964616572)
  {
LABEL_21:
    char v8 = sub_24C84A440();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24C7F2FFC()
{
  uint64_t v0 = sub_24C849590();
  __swift_allocate_value_buffer(v0, qword_2697EF1B0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2697EF1B0);
  if (qword_2697EE9B8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2697F7010);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_24C7F30C4(char *a1, char *a2)
{
  return sub_24C7F2E40(*a1, *a2) & 1;
}

uint64_t sub_24C7F30E8()
{
  return sub_24C84A510();
}

uint64_t sub_24C7F3170()
{
  sub_24C849F50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24C7F31E4()
{
  return sub_24C84A510();
}

uint64_t sub_24C7F3268@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_24C84A340();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_24C7F32C8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7964616572;
  if (*v1) {
    uint64_t v2 = 0x6164696C61766E69;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xEB00000000646574;
  }
  *a1 = v2;
  a1[1] = v3;
}

void *sub_24C7F330C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  int v5 = v4;
  uint64_t v33 = a1;
  unint64_t v34 = a2;
  uint64_t v8 = sub_24C849660();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v35 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NetworkDescriptor();
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = sub_24C84A150();
  uint64_t v31 = *(void *)(v16 - 8);
  uint64_t v32 = v16;
  MEMORY[0x270FA5388](v16);
  os_log_type_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24C84A120();
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_24C849BF0();
  MEMORY[0x270FA5388](v20 - 8);
  v4[2] = 0;
  v4[3] = 0;
  *((unsigned char *)v4 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_isReady) = 0;
  *((unsigned char *)v4 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_terminated) = 0;
  uint64_t v21 = MEMORY[0x263F8EE78];
  *(void *)((char *)v4 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue) = MEMORY[0x263F8EE78];
  unint64_t v22 = v34;
  void v4[4] = v33;
  v4[5] = v22;
  if (a4)
  {
    id v23 = a4;
  }
  else
  {
    unint64_t v34 = sub_24C7D5EF8();
    sub_24C849BE0();
    uint64_t v36 = v21;
    uint64_t v33 = sub_24C7F5C3C((unint64_t *)&unk_2697EEAE0, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF330);
    sub_24C7D6170(&qword_2697EEAF0, (uint64_t *)&unk_2697EF330);
    a4 = 0;
    sub_24C84A1F0();
    (*(void (**)(char *, void, uint64_t))(v31 + 104))(v18, *MEMORY[0x263F8F130], v32);
    id v23 = (void *)sub_24C84A170();
  }
  v4[6] = v23;
  sub_24C7F5C84(a3, (uint64_t)v4 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_descriptor);
  sub_24C7F5C84(a3, (uint64_t)v15);
  id v24 = a4;
  id v25 = v23;
  sub_24C7F6760(v35);
  sub_24C7F6D40();
  sub_24C8498C0();
  swift_allocObject();
  uint64_t v26 = sub_24C849820();
  sub_24C7F5C84((uint64_t)v15, (uint64_t)v13);
  type metadata accessor for CosmoConnection();
  swift_allocObject();
  uint64_t v27 = sub_24C7FB4D4((uint64_t)v13, 1, v26, v23);
  sub_24C7F5BE0((uint64_t)v15);
  *(void *)((char *)v5 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_connection) = v27;
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v29 = *((void *)v27 + 2);
  *((void *)v27 + 2) = sub_24C7F5CE8;
  *((void *)v27 + 3) = v28;
  swift_retain();
  sub_24C7D6F70(v29);

  sub_24C7F5BE0(a3);
  swift_release();
  return v5;
}

uint64_t sub_24C7F379C(unsigned __int8 *a1)
{
  unsigned __int8 v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unsigned __int8 v3 = v1;
    sub_24C7F3F54(&v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C7F3808()
{
  return sub_24C7F3AF8((uint64_t)sub_24C7F5B98, (uint64_t)&block_descriptor_26);
}

uint64_t sub_24C7F3828(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_connection);
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = sub_24C7F5BD8;
  *(void *)(v1 + 40) = v2;
  sub_24C7D6F70(v3);
  if (qword_2697EE9F0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_24C849590();
  __swift_project_value_buffer(v4, (uint64_t)qword_2697EF1B0);
  swift_retain_n();
  int v5 = sub_24C849570();
  os_log_type_t v6 = sub_24C84A110();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)unint64_t v7 = 136315138;
    swift_retain();
    uint64_t v9 = sub_24C7F5824();
    unint64_t v11 = v10;
    swift_release();
    sub_24C7DE68C(v9, v11, &v13);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v5, v6, "Starting channel, %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v8, -1, -1);
    MEMORY[0x2532FCCC0](v7, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return sub_24C7FBF60();
}

uint64_t sub_24C7F3A5C(int a1, uint64_t a2, unint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C7F47F4(a1, a2, a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C7F3AD8()
{
  return sub_24C7F3AF8((uint64_t)sub_24C7F5B90, (uint64_t)&block_descriptor_23);
}

uint64_t sub_24C7F3AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_24C849BD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24C849BF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + 48);
  aBlock[4] = a1;
  uint64_t v17 = v2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24C7C25B4;
  aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_24C849BE0();
  v15[1] = MEMORY[0x263F8EE78];
  sub_24C7F5C3C((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_24C7F3D78()
{
  if (qword_2697EE9F0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24C849590();
  __swift_project_value_buffer(v0, (uint64_t)qword_2697EF1B0);
  swift_retain_n();
  uint64_t v1 = sub_24C849570();
  os_log_type_t v2 = sub_24C84A110();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v9 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_retain();
    uint64_t v5 = sub_24C7F5824();
    unint64_t v7 = v6;
    swift_release();
    sub_24C7DE68C(v5, v7, &v9);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v1, v2, "Stopping channel, %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v4, -1, -1);
    MEMORY[0x2532FCCC0](v3, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return sub_24C7FEC34();
}

uint64_t sub_24C7F3F54(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (uint64_t *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v8 = *a1;
  uint64_t v9 = *(void **)(v2 + 48);
  *unint64_t v7 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v10 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    swift_once();
LABEL_10:
    uint64_t v23 = sub_24C849590();
    __swift_project_value_buffer(v23, (uint64_t)qword_2697EF1B0);
    swift_retain_n();
    id v24 = sub_24C849570();
    os_log_type_t v25 = sub_24C84A110();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      swift_retain();
      uint64_t v28 = sub_24C7F5824();
      unint64_t v30 = v29;
      swift_release();
      uint64_t v32 = sub_24C7DE68C(v28, v30, &v33);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v24, v25, "Channel ready, %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v27, -1, -1);
      MEMORY[0x2532FCCC0](v26, -1, -1);

      uint64_t v31 = *(void (**)(void))(v2 + 16);
      if (!v31) {
        return sub_24C7F4CC8();
      }
    }
    else
    {

      swift_release_n();
      uint64_t v31 = *(void (**)(void))(v2 + 16);
      if (!v31) {
        return sub_24C7F4CC8();
      }
    }
    swift_retain();
    v31(0);
    sub_24C7D6F70((uint64_t)v31);
    return sub_24C7F4CC8();
  }
  if (!v8)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_isReady) = 1;
    if (qword_2697EE9F0 == -1) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_terminated)) {
    return result;
  }
  if (qword_2697EE9F0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_24C849590();
  __swift_project_value_buffer(v12, (uint64_t)qword_2697EF1B0);
  swift_retain_n();
  uint64_t v13 = sub_24C849570();
  os_log_type_t v14 = sub_24C84A110();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    LOBYTE(v32) = v8;
    uint64_t v17 = sub_24C849ED0();
    uint64_t v32 = sub_24C7DE68C(v17, v18, &v33);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    swift_retain();
    uint64_t v19 = sub_24C7F5824();
    unint64_t v21 = v20;
    swift_release();
    uint64_t v32 = sub_24C7DE68C(v19, v21, &v33);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v13, v14, "Channel invalidated, connection-state=%s %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v16, -1, -1);
    MEMORY[0x2532FCCC0](v15, -1, -1);

    unint64_t v22 = *(void (**)(uint64_t))(v2 + 16);
    if (!v22) {
      return sub_24C7F446C();
    }
    goto LABEL_17;
  }

  swift_release_n();
  unint64_t v22 = *(void (**)(uint64_t))(v2 + 16);
  if (v22)
  {
LABEL_17:
    swift_retain();
    v22(1);
    sub_24C7D6F70((uint64_t)v22);
  }
  return sub_24C7F446C();
}

uint64_t sub_24C7F446C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24C849C80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + 48);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_isReady) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_terminated) = 1;
  uint64_t v2 = v1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue;
  uint64_t result = swift_beginAccess();
  if (!*(void *)(*(void *)v2 + 16)) {
    return result;
  }
  if (qword_2697EE9F0 != -1) {
    goto LABEL_14;
  }
LABEL_4:
  uint64_t v9 = sub_24C849590();
  __swift_project_value_buffer(v9, (uint64_t)qword_2697EF1B0);
  swift_retain_n();
  id v10 = sub_24C849570();
  os_log_type_t v11 = sub_24C84A110();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(void *)&long long v25 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    swift_retain();
    uint64_t v14 = sub_24C7F5824();
    unint64_t v16 = v15;
    swift_release();
    uint64_t v24 = sub_24C7DE68C(v14, v16, (uint64_t *)&v25);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v10, v11, "Failing pending requests, %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v13, -1, -1);
    MEMORY[0x2532FCCC0](v12, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v17 = *(void *)v2;
  uint64_t v18 = *(void *)(*(void *)v2 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = v17 + 64;
    long long v23 = xmmword_24C84C090;
    do
    {
      uint64_t v20 = *(void *)(v19 - 24);
      unint64_t v21 = *(void *)(v19 - 16);
      unint64_t v22 = *(void (**)(long long *))(v19 - 8);
      long long v25 = v23;
      __int16 v26 = 258;
      sub_24C7D60D0(v20, v21);
      swift_retain();
      v22(&v25);
      sub_24C7D5FEC(v20, v21);
      swift_release();
      v19 += 40;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  *(void *)uint64_t v2 = MEMORY[0x263F8EE78];
  return swift_bridgeObjectRelease();
}

void sub_24C7F47F4(int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24C849C80();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v11 = (uint64_t *)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v4 + 48);
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v13 = v12;
  LOBYTE(v12) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    uint64_t v14 = v4 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue;
    swift_beginAccess();
    if (!*(void *)(*(void *)v14 + 16))
    {
      if (qword_2697EE9F0 == -1) {
        goto LABEL_12;
      }
      goto LABEL_25;
    }
    swift_beginAccess();
    unint64_t v15 = *(void **)v14;
    if (*(void *)(*(void *)v14 + 16))
    {
      unint64_t v16 = (void (*)(uint64_t *))v15[7];
      uint64_t v18 = v15[5];
      unint64_t v17 = v15[6];
      sub_24C7D60D0(v18, v17);
      swift_retain();
      sub_24C817DCC(0, 1);
      swift_endAccess();
      if (a3 >> 60 == 15) {
        uint64_t v19 = 0;
      }
      else {
        uint64_t v19 = a2;
      }
      if (a3 >> 60 == 15) {
        unint64_t v20 = 0xC000000000000000;
      }
      else {
        unint64_t v20 = a3;
      }
      v39[0] = v19;
      v39[1] = v20;
      __int16 v40 = 0;
      sub_24C7D7304(a2, a3);
      v16(v39);
      sub_24C7D5FEC(v18, v17);
      swift_release();
      sub_24C7D5FEC(v19, v20);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_25:
  swift_once();
LABEL_12:
  uint64_t v21 = sub_24C849590();
  __swift_project_value_buffer(v21, (uint64_t)qword_2697EF1B0);
  sub_24C7D7304(a2, a3);
  swift_retain();
  sub_24C7D7304(a2, a3);
  swift_retain();
  unint64_t v22 = sub_24C849570();
  os_log_type_t v23 = sub_24C84A0F0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v39[0] = v25;
    *(_DWORD *)uint64_t v24 = 67109634;
    LODWORD(v38) = a1;
    sub_24C84A1A0();
    *(_WORD *)(v24 + 8) = 2080;
    uint64_t v37 = v25;
    if (a3 >> 60 == 15)
    {
      unint64_t v26 = 0xE300000000000000;
      uint64_t v27 = 7104878;
    }
    else
    {
      uint64_t v28 = 0;
      switch(a3 >> 62)
      {
        case 1uLL:
          LODWORD(v28) = HIDWORD(a2) - a2;
          if (__OFSUB__(HIDWORD(a2), a2))
          {
            __break(1u);
LABEL_27:
            __break(1u);
            JUMPOUT(0x24C7F4CB8);
          }
          uint64_t v28 = (int)v28;
LABEL_21:
          uint64_t v38 = v28;
          uint64_t v27 = sub_24C849ED0();
          unint64_t v26 = v32;
          break;
        case 2uLL:
          uint64_t v30 = *(void *)(a2 + 16);
          uint64_t v29 = *(void *)(a2 + 24);
          BOOL v31 = __OFSUB__(v29, v30);
          uint64_t v28 = v29 - v30;
          if (!v31) {
            goto LABEL_21;
          }
          goto LABEL_27;
        case 3uLL:
          goto LABEL_21;
        default:
          uint64_t v28 = BYTE6(a3);
          goto LABEL_21;
      }
    }
    uint64_t v38 = sub_24C7DE68C(v27, v26, v39);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    sub_24C7D6044(a2, a3);
    sub_24C7D6044(a2, a3);
    *(_WORD *)(v24 + 18) = 2080;
    swift_retain();
    uint64_t v33 = sub_24C7F5824();
    unint64_t v35 = v34;
    swift_release();
    uint64_t v38 = sub_24C7DE68C(v33, v35, v39);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v22, v23, "[Received] Unexpected message received with no pending requests, type=%u size=%s %s", (uint8_t *)v24, 0x1Cu);
    uint64_t v36 = v37;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v36, -1, -1);
    MEMORY[0x2532FCCC0](v24, -1, -1);
  }
  else
  {
    sub_24C7D6044(a2, a3);
    sub_24C7D6044(a2, a3);

    swift_release_n();
  }
}

uint64_t sub_24C7F4CC8()
{
  uint64_t v2 = v0;
  uint64_t v43 = sub_24C849BD0();
  uint64_t v3 = *(void **)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v42 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = sub_24C849BF0();
  uint64_t v5 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  __int16 v40 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24C849C80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  os_log_type_t v11 = *(void **)(v2 + 48);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F0E0], v7);
  id v12 = v11;
  char v13 = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v1 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue);
  uint64_t result = swift_beginAccess();
  if (*(void *)(*v1 + 16))
  {
    if (qword_2697EE9F0 != -1) {
      goto LABEL_15;
    }
    while (1)
    {
      uint64_t v15 = sub_24C849590();
      __swift_project_value_buffer(v15, (uint64_t)qword_2697EF1B0);
      swift_retain_n();
      unint64_t v16 = sub_24C849570();
      os_log_type_t v17 = sub_24C84A110();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        double v45 = v3;
        uint64_t v19 = aBlock[0];
        *(_DWORD *)uint64_t v18 = 136315138;
        double v44 = v18 + 4;
        swift_retain();
        uint64_t v20 = sub_24C7F5824();
        uint64_t v21 = v5;
        unint64_t v23 = v22;
        swift_release();
        uint64_t v46 = sub_24C7DE68C(v20, v23, aBlock);
        sub_24C84A1A0();
        swift_release_n();
        uint64_t v5 = v21;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v16, v17, "[Flush] Flushing request-queue, %s", v18, 0xCu);
        swift_arrayDestroy();
        uint64_t v24 = v19;
        uint64_t v3 = v45;
        MEMORY[0x2532FCCC0](v24, -1, -1);
        MEMORY[0x2532FCCC0](v18, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      uint64_t result = *v1;
      uint64_t v25 = *(void *)(*v1 + 16);
      if (!v25) {
        break;
      }
      uint64_t v39 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_connection);
      uint64_t v37 = v48;
      uint64_t v38 = OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue;
      uint64_t v36 = (void (**)(uint64_t *, uint64_t))(v3 + 1);
      unint64_t v35 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v34 = swift_bridgeObjectRetain();
      uint64_t v3 = (void *)(v34 + 64);
      uint64_t v1 = v42;
      while (1)
      {
        int v26 = *((_DWORD *)v3 - 8);
        if (!v26) {
          break;
        }
        uint64_t v5 = *(v3 - 3);
        unint64_t v27 = *(v3 - 2);
        uint64_t v28 = v39;
        uint64_t v29 = *(void **)(v39 + v38);
        double v44 = (uint8_t *)*v3;
        double v45 = v29;
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v28;
        *(_DWORD *)(v30 + 24) = v26;
        *(void *)(v30 + 32) = v5;
        *(void *)(v30 + 40) = v27;
        v48[2] = sub_24C7F5B68;
        v48[3] = v30;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        v48[0] = sub_24C7C25B4;
        v48[1] = &block_descriptor_1;
        BOOL v31 = _Block_copy(aBlock);
        sub_24C7D60D0(v5, v27);
        swift_retain();
        swift_retain();
        sub_24C7D60D0(v5, v27);
        unint64_t v32 = v40;
        sub_24C849BE0();
        uint64_t v46 = MEMORY[0x263F8EE78];
        sub_24C7F5C3C((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
        sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
        uint64_t v2 = v43;
        sub_24C84A1F0();
        MEMORY[0x2532FBFB0](0, v32, v1, v31);
        _Block_release(v31);
        (*v36)(v1, v2);
        (*v35)(v32, v41);
        swift_release();
        sub_24C7D5FEC(v5, v27);
        swift_release();
        v3 += 5;
        if (!--v25) {
          return swift_bridgeObjectRelease();
        }
      }
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      swift_once();
    }
  }
  return result;
}

uint64_t sub_24C7F5304()
{
  sub_24C7D6F70(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();

  sub_24C7F5BE0(v0 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_descriptor);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_24C7F53A0()
{
  return type metadata accessor for CosmoSerialChannelClient();
}

uint64_t type metadata accessor for CosmoSerialChannelClient()
{
  uint64_t result = qword_2697EF1E8;
  if (!qword_2697EF1E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24C7F53F4()
{
  uint64_t result = type metadata accessor for NetworkDescriptor();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for CosmoSerialChannelClient.PendingRequest(uint64_t a1)
{
  sub_24C7D5FEC(*(void *)(a1 + 8), *(void *)(a1 + 16));
  return swift_release();
}

uint64_t initializeWithCopy for CosmoSerialChannelClient.PendingRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_24C7D60D0(v4, v5);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CosmoSerialChannelClient.PendingRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = *(void *)(a2 + 16);
  sub_24C7D60D0(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_24C7D5FEC(v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CosmoSerialChannelClient.PendingRequest(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_24C7D5FEC(v4, v5);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoSerialChannelClient.PendingRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CosmoSerialChannelClient.PendingRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoSerialChannelClient.PendingRequest()
{
  return &type metadata for CosmoSerialChannelClient.PendingRequest;
}

unsigned char *storeEnumTagSinglePayload for CosmoSerialChannelClient.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C7F5794);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoSerialChannelClient.State()
{
  return &type metadata for CosmoSerialChannelClient.State;
}

unint64_t sub_24C7F57D0()
{
  unint64_t result = qword_2697EF1F8;
  if (!qword_2697EF1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF1F8);
  }
  return result;
}

uint64_t sub_24C7F5824()
{
  swift_bridgeObjectRetain();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  NetworkDescriptor.description.getter();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue;
  swift_beginAccess();
  if (*(void *)(*(void *)v1 + 16))
  {
    sub_24C84A230();
    swift_bridgeObjectRelease();
    sub_24C84A430();
    sub_24C849F80();
    swift_bridgeObjectRelease();
  }
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  return 0x3D656D616ELL;
}

uint64_t sub_24C7F5AF4()
{
  return sub_24C7F5824();
}

uint64_t sub_24C7F5B18()
{
  swift_release();
  unint64_t v1 = *(void *)(v0 + 40);
  if (v1 >> 60 != 15) {
    sub_24C7D5FEC(*(void *)(v0 + 32), v1);
  }
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_24C7F5B68()
{
  sub_24C7FF5A8(*(void *)(v0 + 16), *(_DWORD *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_24C7F5B90()
{
  return sub_24C7F3D78();
}

uint64_t sub_24C7F5B98()
{
  return sub_24C7F3828(v0);
}

uint64_t sub_24C7F5BA0()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24C7F5BD8(int a1, uint64_t a2, unint64_t a3)
{
  return sub_24C7F3A5C(a1, a2, a3);
}

uint64_t sub_24C7F5BE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NetworkDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24C7F5C3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24C7F5C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24C7F5CE8(unsigned __int8 *a1)
{
  return sub_24C7F379C(a1);
}

uint64_t sub_24C7F5D00()
{
  type metadata accessor for CosmoMessageProtocol();
  sub_24C7F6708();
  sub_24C849A40();
  swift_allocObject();
  uint64_t result = sub_24C849A30();
  qword_2697EF200 = result;
  return result;
}

uint64_t static CosmoMessageProtocol.definition.getter()
{
  if (qword_2697EE9F8 != -1) {
    swift_once();
  }
  return swift_retain();
}

unint64_t static CosmoMessageProtocol.label.getter()
{
  return 0xD000000000000014;
}

uint64_t CosmoMessageProtocol.__allocating_init(framer:)()
{
  swift_release();
  return swift_allocObject();
}

uint64_t CosmoMessageProtocol.init(framer:)()
{
  swift_release();
  return v0;
}

uint64_t sub_24C7F5E24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F14288];
  uint64_t v3 = sub_24C849A50();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t NWProtocolFramer.Message.messageTypeHeader.getter()
{
  sub_24C849A80();
  if (v3)
  {
    uint64_t result = swift_dynamicCast();
    if (result) {
      return v1;
    }
  }
  else
  {
    sub_24C7F62D8((uint64_t)v2);
    return 0;
  }
  return result;
}

uint64_t NWProtocolFramer.Message.init(messageTypeHeader:)()
{
  if (qword_2697EE9F8 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v0 = sub_24C849A60();
  swift_retain();
  sub_24C849A90();
  swift_release();
  return v0;
}

uint64_t CosmoMessageProtocol.deinit()
{
  return v0;
}

uint64_t CosmoMessageProtocol.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

unint64_t sub_24C7F5FE4()
{
  return 0xD000000000000014;
}

uint64_t sub_24C7F6000()
{
  swift_release();
  type metadata accessor for CosmoMessageProtocol();
  return swift_allocObject();
}

uint64_t sub_24C7F6034(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  sub_24C849A80();
  if (!v16)
  {
    sub_24C7F62D8((uint64_t)&v14);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    int v4 = 0;
    goto LABEL_6;
  }
  int v4 = __src;
LABEL_6:
  if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3))
  {
    uint64_t result = sub_24C84A2A0();
    __break(1u);
  }
  else
  {
    LODWORD(__src) = v4;
    int v13 = a3;
    uint64_t v14 = sub_24C80ACAC(&__src, 4);
    unint64_t v15 = v5;
    uint64_t v6 = sub_24C80ACAC(&v13, 4);
    unint64_t v8 = v7;
    sub_24C849360();
    sub_24C7D5FEC(v6, v8);
    uint64_t v9 = v14;
    unint64_t v10 = v15;
    sub_24C849AD0();
    sub_24C7D5FEC(v9, v10);
    return sub_24C849AE0();
  }
  return result;
}

uint64_t sub_24C7F62D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EED00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24C7F6338()
{
  return 8;
}

uint64_t type metadata accessor for CosmoMessageProtocol()
{
  return self;
}

uint64_t method lookup function for CosmoMessageProtocol(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CosmoMessageProtocol);
}

uint64_t dispatch thunk of CosmoMessageProtocol.__allocating_init(framer:)()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of CosmoMessageProtocol.start(framer:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of CosmoMessageProtocol.wakeup(framer:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of CosmoMessageProtocol.stop(framer:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of CosmoMessageProtocol.cleanup(framer:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of CosmoMessageProtocol.handleOutput(framer:message:messageLength:isComplete:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of CosmoMessageProtocol.handleInput(framer:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_24C7F661C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return 0;
  }
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  if (!a1)
  {
    if (v4 <= 0) {
      goto LABEL_4;
    }
    return 0;
  }
  if (a2 - a1 < v4) {
    return 0;
  }
LABEL_4:
  *(void *)uint64_t v5 = sub_24C7F6670(a1);
  *(unsigned char *)(v5 + 8) = 0;
  return v4;
}

uint64_t sub_24C7F6670(uint64_t a1)
{
  if (!a1) {
    __break(1u);
  }
  sub_24C84A1A0();
  sub_24C84A1A0();
  return 0;
}

unint64_t sub_24C7F6708()
{
  unint64_t result = qword_2697EF210;
  if (!qword_2697EF210)
  {
    type metadata accessor for CosmoMessageProtocol();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF210);
  }
  return result;
}

uint64_t sub_24C7F6760@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v48 = a1;
  uint64_t v3 = sub_24C849440();
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24C849650();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v43 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF290);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24C849710();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  unint64_t v23 = (char *)&v43 - v22;
  sub_24C7F5C84(v2, (uint64_t)v17);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
      uint64_t v25 = &v17[*(int *)(v24 + 48)];

      uint64_t v17 = v25;
      goto LABEL_3;
    case 2u:
      uint64_t v32 = *(void *)v17;
      unint64_t v31 = *((void *)v17 + 1);
      uint64_t v49 = v32;
      unint64_t v50 = v31;
      SharedSecret.advertisementIdentifer.getter((uint64_t)v5);
      sub_24C7F8064(v48);
      sub_24C7D5FEC(v32, v31);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v5, v47);
      break;
    case 3u:
      sub_24C7D5FEC(*((void *)v17 + 1), *((void *)v17 + 2));
      sub_24C7D5FEC(*((void *)v17 + 3), *((void *)v17 + 4));
      swift_unknownObjectRelease();
      uint64_t v34 = &v17[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0) + 96)];
      uint64_t v36 = v46;
      uint64_t v35 = v47;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v5, v34, v47);
      sub_24C7F8064(v48);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v5, v35);
      break;
    default:
LABEL_3:
      sub_24C7FA948((uint64_t)v17, (uint64_t)v23);
      sub_24C849720();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      {
        __break(1u);
        JUMPOUT(0x24C7F6D30);
      }
      int v26 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v26(v14, v10, v11);
      sub_24C7FA948((uint64_t)v23, (uint64_t)v21);
      uint64_t v28 = v44;
      uint64_t v27 = v45;
      int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48))(v21, 1, v45);
      uint64_t v30 = v43;
      if (v29 == 1)
      {
        sub_24C849640();
        sub_24C7D7C08((uint64_t)v21, &qword_2697EF220);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v43, v21, v27);
      }
      uint64_t v37 = v48;
      uint64_t v38 = v37 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF298) + 48);
      v26((char *)v37, v14, v11);
      uint64_t v39 = *MEMORY[0x263F140F0];
      uint64_t v40 = sub_24C849620();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v37, v39, v40);
      (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v38, v30, v27);
      uint64_t v41 = *MEMORY[0x263F14118];
      uint64_t v42 = sub_24C849660();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v37, v41, v42);
      break;
  }
  return result;
}

uint64_t sub_24C7F6D40()
{
  uint64_t v1 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C7F5C84(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v11 = *v3;
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
      uint64_t v13 = v12;
      uint64_t v14 = *(void **)&v3[*(int *)(v12 + 64)];
      if (v14)
      {
        KeyPair = *(__SecKey **)&v3[*(int *)(v12 + 64)];
      }
      else
      {
        KeyPair = createKeyPair((void *)*MEMORY[0x263F16FB8], 256);
        uint64_t v14 = 0;
      }
      uint64_t v41 = &v3[*(int *)(v13 + 48)];
      id v28 = v14;
      int v29 = secIdentityFromKeyPair(KeyPair);
      id v30 = publicKeyFromIdentity(v29);
      uint64_t v31 = sub_24C849350();
      unint64_t v33 = v32;

      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v29;
      *(unsigned char *)(v34 + 24) = v11;
      *(void *)(v34 + 32) = v31;
      *(void *)(v34 + 40) = v33;
      *(void *)(v34 + 48) = v31;
      *(void *)(v34 + 56) = v33;
      *(unsigned char *)(v34 + 64) = 1;
      uint64_t v46 = sub_24C7FA9B4;
      uint64_t v47 = v34;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v43 = 1107296256;
      uint64_t v44 = sub_24C7F8004;
      uint64_t v45 = &block_descriptor_2;
      uint64_t v35 = _Block_copy(&aBlock);
      sub_24C7D60D0(v31, v33);
      sub_24C7D60D0(v31, v33);
      swift_unknownObjectRetain();
      swift_release();
      nw_parameters_create_quic(v35);
      _Block_release(v35);
      nw_parameters_set_attach_protocol_listener();
      sub_24C849930();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_24C849940();
      sub_24C8498D0();
      options = nw_http3_create_options();
      uint64_t v37 = sub_24C849910();
      uint64_t v38 = nw_parameters_copy_default_protocol_stack(v37);
      swift_unknownObjectRelease();
      nw_protocol_stack_prepend_application_protocol(v38, options);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_24C7D5FEC(v31, v33);

      swift_unknownObjectRelease();
      uint64_t v10 = (uint64_t)v41;
      goto LABEL_9;
    case 2u:
      unint64_t v17 = *((void *)v3 + 1);
      char v18 = v3[16];
      uint64_t aBlock = *(void *)v3;
      uint64_t v16 = aBlock;
      uint64_t v43 = v17;
      uint64_t v9 = sub_24C7F7340(v18, &aBlock, 1);
      sub_24C7D5FEC(v16, v17);
      break;
    case 3u:
      char v19 = *v3;
      uint64_t v20 = *((void *)v3 + 1);
      unint64_t v21 = *((void *)v3 + 2);
      uint64_t v22 = *((void *)v3 + 3);
      unint64_t v23 = *((void *)v3 + 4);
      uint64_t v24 = *((void *)v3 + 5);
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0);
      int v26 = &v3[*(int *)(v25 + 96)];
      uint64_t v9 = sub_24C7F75E4(v19, v20, v21, v22, v23, v24, v3[*(int *)(v25 + 112)], 1);
      swift_unknownObjectRelease();
      sub_24C7D5FEC(v22, v23);
      sub_24C7D5FEC(v20, v21);
      uint64_t v27 = sub_24C849440();
      (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
      break;
    default:
      uint64_t v4 = sub_24C84A090();
      *(void *)(v4 + 16) = 8;
      *(void *)(v4 + 32) = 0;
      uint64_t v5 = (unsigned char *)(v4 + 32);
      SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], 8uLL, (void *)(v4 + 32));
      uint64_t v6 = sub_24C80ACAC(v5, 8);
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      uint64_t aBlock = v6;
      uint64_t v43 = v8;
      uint64_t v9 = sub_24C7F7340(0, &aBlock, 0);
      sub_24C7D5FEC(v6, v8);
      uint64_t v10 = (uint64_t)v3;
LABEL_9:
      sub_24C7D7C08(v10, &qword_2697EF220);
      break;
  }
  return v9;
}

uint64_t sub_24C7F7180()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C7F5C84(v1, (uint64_t)v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = 1128879441;
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
      uint64_t v10 = (uint64_t)&v4[*(int *)(v9 + 48)];

      sub_24C7D7C08(v10, &qword_2697EF220);
      break;
    case 2u:
      int v6 = v4[16];
      sub_24C7D5FEC(*(void *)v4, *((void *)v4 + 1));
      if (v6) {
        uint64_t v5 = 5459028;
      }
      else {
        uint64_t v5 = 5260116;
      }
      break;
    case 3u:
      uint64_t v5 = 1128879441;
      sub_24C7D5FEC(*((void *)v4 + 1), *((void *)v4 + 2));
      sub_24C7D5FEC(*((void *)v4 + 3), *((void *)v4 + 4));
      swift_unknownObjectRelease();
      unint64_t v7 = &v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0) + 96)];
      uint64_t v8 = sub_24C849440();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      break;
    default:
      uint64_t v5 = 5260116;
      sub_24C7D7C08((uint64_t)v4, &qword_2697EF220);
      break;
  }
  return v5;
}

uint64_t sub_24C7F7340(char a1, uint64_t *a2, char a3)
{
  uint64_t v6 = sub_24C849730();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  sub_24C849980();
  swift_allocObject();
  uint64_t v12 = sub_24C849970();
  sub_24C849960();
  sub_24C849950();
  uint64_t v13 = 0;
  if (a1)
  {
    sub_24C849930();
    v20[0] = v10;
    v20[1] = v11;
    uint64_t v13 = sub_24C7F794C(v20);
  }
  sub_24C849930();
  swift_retain();
  swift_retain();
  uint64_t v14 = MEMORY[0x2532FB770](v13, v12);
  sub_24C8498D0();
  if (a3)
  {
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F141B8], v6);
    sub_24C849900();
  }
  if (qword_2697EE9F8 != -1) {
    swift_once();
  }
  sub_24C849AB0();
  swift_allocObject();
  swift_retain();
  uint64_t v15 = sub_24C849AA0();
  sub_24C8498F0();
  swift_retain();
  uint64_t v16 = (void (*)(uint64_t *, void))sub_24C8498E0();
  if (*v17 >> 62 && (swift_bridgeObjectRetain(), v19 = sub_24C84A2C0(), uint64_t result = swift_bridgeObjectRelease(), v19 < 0))
  {
    __break(1u);
  }
  else
  {
    sub_24C8177CC(0, 0, v15);
    v16(v20, 0);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v14;
  }
  return result;
}

uint64_t sub_24C7F75E4(char a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, char a7, int a8)
{
  int v30 = a8;
  uint64_t v29 = sub_24C849730();
  uint64_t v15 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  unint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a6;
  *(unsigned char *)(v18 + 24) = a1;
  *(void *)(v18 + 32) = a2;
  *(void *)(v18 + 40) = a3;
  *(void *)(v18 + 48) = a4;
  *(void *)(v18 + 56) = a5;
  *(unsigned char *)(v18 + 64) = a7;
  aBlock[4] = sub_24C7FA9B4;
  void aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7F8004;
  aBlock[3] = &block_descriptor_8;
  uint64_t v19 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  sub_24C7D60D0(a2, a3);
  sub_24C7D60D0(a4, a5);
  swift_release();
  nw_parameters_create_quic(v19);
  _Block_release(v19);
  nw_parameters_set_attach_protocol_listener();
  sub_24C849930();
  swift_unknownObjectRetain();
  uint64_t v20 = sub_24C849940();
  sub_24C8498D0();
  if (v30)
  {
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F141B8], v29);
    sub_24C849900();
  }
  if (a7)
  {
    options = nw_http3_create_options();
    uint64_t v22 = sub_24C849910();
    unint64_t v23 = nw_parameters_copy_default_protocol_stack(v22);
    swift_unknownObjectRelease();
    nw_protocol_stack_prepend_application_protocol(v23, options);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
LABEL_9:
    swift_unknownObjectRelease();
    return v20;
  }
  if (qword_2697EE9F8 != -1) {
    swift_once();
  }
  sub_24C849AB0();
  swift_allocObject();
  swift_retain();
  uint64_t v24 = sub_24C849AA0();
  sub_24C8498F0();
  swift_retain();
  uint64_t v25 = (void (*)(void *, void))sub_24C8498E0();
  if (!(*v26 >> 62)
    || (swift_bridgeObjectRetain(),
        uint64_t v28 = sub_24C84A2C0(),
        uint64_t result = swift_bridgeObjectRelease(),
        (v28 & 0x8000000000000000) == 0))
  {
    sub_24C8177CC(0, 0, v24);
    v25(aBlock, 0);
    swift_release();
    swift_release();
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_24C7F794C(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF270);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24C849C20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24C849EC0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF278);
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v34 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24C849D30();
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  unint64_t v16 = a1[1];
  sub_24C8499B0();
  swift_allocObject();
  uint64_t v37 = sub_24C8499A0();
  uint64_t v38 = v17;
  unint64_t v39 = v16;
  sub_24C7D60D0(v17, v16);
  sub_24C849D20();
  sub_24C849EB0();
  uint64_t v18 = sub_24C849E90();
  unint64_t v20 = v19;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v20 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v38 = v18;
    unint64_t v39 = v20;
    sub_24C849DE0();
    sub_24C7FA9D0(&qword_2697EF280, MEMORY[0x263F047F8]);
    sub_24C7FAA18();
    uint64_t v22 = v34;
    sub_24C849DD0();
    sub_24C7D6044(v18, v20);
    uint64_t v24 = v35;
    unint64_t v23 = v36;
    sub_24C849D40();
    uint64_t v25 = sub_24C849990();
    int v26 = sub_24C849C00();
    sub_24C7FA584((uint64_t)v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    if (result != 1)
    {
      uint64_t v27 = sub_24C849C00();
      sec_protocol_options_add_pre_shared_key(v25, v26, v27);

      swift_unknownObjectRelease();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v6 + 8);
      v28(v4, v5);
      uint64_t v29 = v37;
      int v30 = sub_24C849990();
      sec_protocol_options_append_tls_ciphersuite(v30, (tls_ciphersuite_t)0xA8u);
      swift_unknownObjectRelease();
      v28(v23, v5);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v24);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
      return v29;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24C7F7E28(NSObject *a1, NSObject *a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, char a8)
{
  uint64_t v15 = nw_quic_copy_sec_protocol_options(a1);
  sec_protocol_options_set_local_identity(v15, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF268);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24C84C230;
  if (a3)
  {
    *(void *)(v16 + 32) = a4;
    *(void *)(v16 + 40) = a5;
    sub_24C7D60D0(a4, a5);
    uint64_t v17 = (void *)sub_24C84A060();
    swift_bridgeObjectRelease();
    sec_protocol_options_set_client_raw_public_key_certificates();

    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_24C84C230;
    *(void *)(v18 + 32) = a6;
    *(void *)(v18 + 40) = a7;
    uint64_t v19 = a6;
    unint64_t v20 = a7;
  }
  else
  {
    *(void *)(v16 + 32) = a6;
    *(void *)(v16 + 40) = a7;
    sub_24C7D60D0(a6, a7);
    unint64_t v21 = (void *)sub_24C84A060();
    swift_bridgeObjectRelease();
    sec_protocol_options_set_client_raw_public_key_certificates();

    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_24C84C230;
    *(void *)(v22 + 32) = a4;
    *(void *)(v22 + 40) = a5;
    uint64_t v19 = a4;
    unint64_t v20 = a5;
  }
  sub_24C7D60D0(v19, v20);
  unint64_t v23 = (void *)sub_24C84A060();
  swift_bridgeObjectRelease();
  sec_protocol_options_set_server_raw_public_key_certificates();

  sec_protocol_options_set_peer_authentication_required(v15, 1);
  if (a8)
  {
    sec_protocol_options_clear_tls_application_protocols();
    sec_protocol_options_add_tls_application_protocol(v15, "h3");
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_24C7F8004(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_24C7F8064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF258);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C8493F0();
  uint64_t v5 = sub_24C849EF0();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_24C849EF0();
  nw_endpoint_create_bonjour_service((const char *)(v5 + 32), (const char *)(v6 + 32), "local");
  swift_release();
  swift_release();
  swift_unknownObjectRetain();
  sub_24C849670();
  uint64_t v7 = sub_24C849660();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_24C7D7C08((uint64_t)v4, (uint64_t *)&unk_2697EF258);
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_24C849590();
    __swift_project_value_buffer(v10, (uint64_t)qword_2697F6FF8);
    uint64_t v11 = sub_24C849570();
    os_log_type_t v12 = sub_24C84A100();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_24C7BE000, v11, v12, "[Endpoint] Could not create NWEndpoint from nw_endpoint_t", v13, 2u);
      MEMORY[0x2532FCCC0](v13, -1, -1);
    }

    uint64_t result = sub_24C84A2B0();
    __break(1u);
  }
  else
  {
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v4, v7);
  }
  return result;
}

uint64_t sub_24C7F82E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24C849440();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C7F5C84(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
      uint64_t v15 = &v8[*(int *)(v14 + 48)];

      uint64_t v9 = (uint64_t)v15;
      goto LABEL_7;
    case 2u:
      unint64_t v11 = *((void *)v8 + 1);
      v17[0] = *(void *)v8;
      uint64_t v10 = v17[0];
      v17[1] = v11;
      SharedSecret.advertisementIdentifer.getter((uint64_t)v5);
      uint64_t v12 = sub_24C8493F0();
      sub_24C7D5FEC(v10, v11);
      goto LABEL_5;
    case 3u:
      sub_24C7D5FEC(*((void *)v8 + 1), *((void *)v8 + 2));
      sub_24C7D5FEC(*((void *)v8 + 3), *((void *)v8 + 4));
      swift_unknownObjectRelease();
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v8[*(int *)(v13 + 96)], v2);
      uint64_t v12 = sub_24C8493F0();
LABEL_5:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
    default:
      uint64_t v9 = (uint64_t)v8;
LABEL_7:
      sub_24C7D7C08(v9, &qword_2697EF220);
      uint64_t v12 = 0;
      break;
  }
  return v12;
}

uint64_t sub_24C7F8530()
{
  uint64_t v1 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C7F5C84(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
      uint64_t v9 = &v3[*(int *)(v8 + 48)];

      uint64_t v4 = (uint64_t)v9;
      goto LABEL_6;
    case 2u:
      sub_24C7D5FEC(*(void *)v3, *((void *)v3 + 1));
      uint64_t result = 0x63746F6D736F635FLL;
      break;
    case 3u:
      sub_24C7D5FEC(*((void *)v3 + 1), *((void *)v3 + 2));
      sub_24C7D5FEC(*((void *)v3 + 3), *((void *)v3 + 4));
      swift_unknownObjectRelease();
      uint64_t v6 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0) + 96)];
      uint64_t v7 = sub_24C849440();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      uint64_t result = 0x75716F6D736F635FLL;
      break;
    default:
      uint64_t v4 = (uint64_t)v3;
LABEL_6:
      sub_24C7D7C08(v4, &qword_2697EF220);
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_24C7F86EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C7F5C84(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
      uint64_t v19 = &v6[*(int *)(v18 + 48)];

      uint64_t v20 = sub_24C849B20();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 1, 1, v20);
      uint64_t v8 = (uint64_t)v19;
      goto LABEL_6;
    case 2u:
      sub_24C7D5FEC(*(void *)v6, *((void *)v6 + 1));
      strcpy((char *)a1, "_cosmotcp._tcp");
      *(unsigned char *)(a1 + 15) = -18;
      *(_OWORD *)(a1 + 16) = xmmword_24C84C2E0;
      uint64_t v9 = *MEMORY[0x263F14378];
      uint64_t v10 = sub_24C849B20();
      uint64_t v11 = *(void *)(v10 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 104))(a1, v9, v10);
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      break;
    case 3u:
      sub_24C7D5FEC(*((void *)v6 + 1), *((void *)v6 + 2));
      sub_24C7D5FEC(*((void *)v6 + 3), *((void *)v6 + 4));
      swift_unknownObjectRelease();
      uint64_t v13 = &v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0) + 96)];
      *(void *)a1 = 0x75716F6D736F635FLL;
      *(void *)(a1 + 8) = 0xEF7064755F2E6369;
      *(_OWORD *)(a1 + 16) = xmmword_24C84C2E0;
      uint64_t v14 = *MEMORY[0x263F14378];
      uint64_t v15 = sub_24C849B20();
      uint64_t v16 = *(void *)(v15 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104))(a1, v14, v15);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      uint64_t v17 = sub_24C849440();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v13, v17);
      break;
    default:
      uint64_t v7 = sub_24C849B20();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 1, 1, v7);
      uint64_t v8 = (uint64_t)v6;
LABEL_6:
      uint64_t result = sub_24C7D7C08(v8, &qword_2697EF220);
      break;
  }
  return result;
}

uint64_t NetworkDescriptor.description.getter()
{
  sub_24C7F8B90(v0);
  sub_24C84A230();
  sub_24C849F80();
  sub_24C7F7180();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  return 0;
}

uint64_t sub_24C7F8B90(uint64_t a1)
{
  uint64_t v2 = sub_24C849440();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v24 - v13;
  sub_24C7F5C84(a1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
      uint64_t v16 = &v8[*(int *)(v15 + 48)];

      uint64_t v8 = v16;
      goto LABEL_3;
    case 2u:
      uint64_t v19 = 1818523489;
      uint64_t v21 = *(void *)v8;
      unint64_t v20 = *((void *)v8 + 1);
      unint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
      sub_24C84A230();
      swift_bridgeObjectRelease();
      unint64_t v25 = 0xD000000000000014;
      unint64_t v26 = 0x800000024C84FE00;
      v24[0] = v21;
      v24[1] = v20;
      SharedSecret.advertisementIdentifer.getter((uint64_t)v5);
      sub_24C7FA9D0(&qword_2697EEC60, MEMORY[0x263F07508]);
      sub_24C84A430();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_24C7D5FEC(v21, v20);
      break;
    case 3u:
      uint64_t v19 = 1818523489;
      sub_24C7D5FEC(*((void *)v8 + 1), *((void *)v8 + 2));
      sub_24C7D5FEC(*((void *)v8 + 3), *((void *)v8 + 4));
      swift_unknownObjectRelease();
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v8[*(int *)(v22 + 96)], v2);
      unint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
      sub_24C84A230();
      swift_bridgeObjectRelease();
      unint64_t v25 = 0xD000000000000014;
      unint64_t v26 = 0x800000024C84FE00;
      sub_24C7FA9D0(&qword_2697EEC60, MEMORY[0x263F07508]);
      sub_24C84A430();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
    default:
LABEL_3:
      sub_24C7FA948((uint64_t)v8, (uint64_t)v14);
      sub_24C7FA948((uint64_t)v14, (uint64_t)v12);
      uint64_t v17 = sub_24C849650();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17) == 1)
      {
        sub_24C7D7C08((uint64_t)v12, &qword_2697EF220);
      }
      else
      {
        sub_24C849630();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v17);
      }
      unint64_t v25 = 0x2E302E302E373231;
      unint64_t v26 = 0xEA00000000003A31;
      sub_24C849F80();
      swift_bridgeObjectRelease();
      uint64_t v19 = 0x6B636162706F6F6CLL;
      break;
  }
  return v19;
}

uint64_t *initializeBufferWithCopyOfBuffer for NetworkDescriptor(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
        uint64_t v11 = *(int *)(v10 + 48);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_24C849650();
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
        {
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
          memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
        }
        uint64_t v28 = *(int *)(v10 + 64);
        uint64_t v29 = *(void **)((char *)a2 + v28);
        *(uint64_t *)((char *)a1 + v28) = (uint64_t)v29;
        id v30 = v29;
        break;
      case 2u:
        uint64_t v17 = *a2;
        unint64_t v18 = a2[1];
        sub_24C7D60D0(*a2, v18);
        *a1 = v17;
        a1[1] = v18;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        break;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v19 = a2[1];
        unint64_t v20 = a2[2];
        sub_24C7D60D0(v19, v20);
        a1[1] = v19;
        a1[2] = v20;
        uint64_t v21 = a2[3];
        unint64_t v22 = a2[4];
        sub_24C7D60D0(v21, v22);
        a1[3] = v21;
        a1[4] = v22;
        a1[5] = a2[5];
        swift_unknownObjectRetain();
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0);
        uint64_t v24 = *(int *)(v23 + 96);
        unint64_t v25 = (char *)a1 + v24;
        unint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = sub_24C849440();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        *((unsigned char *)a1 + *(int *)(v23 + 112)) = *((unsigned char *)a2 + *(int *)(v23 + 112));
        break;
      default:
        uint64_t v6 = sub_24C849650();
        uint64_t v7 = *(void *)(v6 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for NetworkDescriptor(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v2 = sub_24C849650();
      uint64_t v15 = *(void *)(v2 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a1, 1, v2))
      {
        uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
        uint64_t v14 = a1;
        uint64_t v13 = v2;
        goto LABEL_14;
      }
      break;
    case 1u:
      uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
      uint64_t v4 = a1 + *(int *)(v3 + 48);
      uint64_t v5 = sub_24C849650();
      uint64_t v6 = *(void *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      }
      uint64_t v7 = *(void **)(a1 + *(int *)(v3 + 64));

      break;
    case 2u:
      uint64_t v8 = *(void *)a1;
      unint64_t v9 = *(void *)(a1 + 8);
      sub_24C7D5FEC(v8, v9);
      break;
    case 3u:
      sub_24C7D5FEC(*(void *)(a1 + 8), *(void *)(a1 + 16));
      sub_24C7D5FEC(*(void *)(a1 + 24), *(void *)(a1 + 32));
      swift_unknownObjectRelease();
      uint64_t v10 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0) + 96);
      uint64_t v11 = sub_24C849440();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      uint64_t v13 = v11;
      uint64_t v14 = v10;
LABEL_14:
      v12(v14, v13);
      break;
    default:
      return;
  }
}

uint64_t *initializeWithCopy for NetworkDescriptor(uint64_t *a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
      uint64_t v8 = *(int *)(v7 + 48);
      unint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_24C849650();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v25 = *(int *)(v7 + 64);
      unint64_t v26 = *(void **)((char *)a2 + v25);
      *(uint64_t *)((char *)a1 + v25) = (uint64_t)v26;
      id v27 = v26;
      break;
    case 2u:
      uint64_t v14 = *a2;
      unint64_t v15 = a2[1];
      sub_24C7D60D0(*a2, v15);
      *a1 = v14;
      a1[1] = v15;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      break;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v16 = a2[1];
      unint64_t v17 = a2[2];
      sub_24C7D60D0(v16, v17);
      a1[1] = v16;
      a1[2] = v17;
      uint64_t v18 = a2[3];
      unint64_t v19 = a2[4];
      sub_24C7D60D0(v18, v19);
      a1[3] = v18;
      a1[4] = v19;
      a1[5] = a2[5];
      swift_unknownObjectRetain();
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0);
      uint64_t v21 = *(int *)(v20 + 96);
      unint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_24C849440();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      *((unsigned char *)a1 + *(int *)(v20 + 112)) = *((unsigned char *)a2 + *(int *)(v20 + 112));
      break;
    default:
      uint64_t v4 = sub_24C849650();
      uint64_t v5 = *(void *)(v4 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for NetworkDescriptor(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_24C7F5BE0((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
        uint64_t v8 = *(int *)(v7 + 48);
        unint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_24C849650();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        uint64_t v25 = *(int *)(v7 + 64);
        unint64_t v26 = *(void **)((char *)a2 + v25);
        *(uint64_t *)((char *)a1 + v25) = (uint64_t)v26;
        id v27 = v26;
        break;
      case 2u:
        uint64_t v14 = *a2;
        unint64_t v15 = a2[1];
        sub_24C7D60D0(*a2, v15);
        *a1 = v14;
        a1[1] = v15;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        break;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v16 = a2[1];
        unint64_t v17 = a2[2];
        sub_24C7D60D0(v16, v17);
        a1[1] = v16;
        a1[2] = v17;
        uint64_t v18 = a2[3];
        unint64_t v19 = a2[4];
        sub_24C7D60D0(v18, v19);
        a1[3] = v18;
        a1[4] = v19;
        a1[5] = a2[5];
        swift_unknownObjectRetain();
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0);
        uint64_t v21 = *(int *)(v20 + 96);
        unint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = sub_24C849440();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        *((unsigned char *)a1 + *(int *)(v20 + 112)) = *((unsigned char *)a2 + *(int *)(v20 + 112));
        break;
      default:
        uint64_t v4 = sub_24C849650();
        uint64_t v5 = *(void *)(v4 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
        {
          uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for NetworkDescriptor()
{
  uint64_t result = qword_2697EF238;
  if (!qword_2697EF238) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *initializeWithTake for NetworkDescriptor(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0);
      uint64_t v11 = *(int *)(v10 + 96);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_24C849440();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      a1[*(int *)(v10 + 112)] = a2[*(int *)(v10 + 112)];
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      *a1 = *a2;
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
      uint64_t v16 = *(int *)(v15 + 48);
      unint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      uint64_t v19 = sub_24C849650();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      *(void *)&a1[*(int *)(v15 + 64)] = *(void *)&a2[*(int *)(v15 + 64)];
      goto LABEL_14;
    case 0:
      uint64_t v7 = sub_24C849650();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_14;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for NetworkDescriptor(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24C7F5BE0((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        *a1 = *a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0);
        uint64_t v11 = *(int *)(v10 + 96);
        uint64_t v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        uint64_t v14 = sub_24C849440();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        a1[*(int *)(v10 + 112)] = a2[*(int *)(v10 + 112)];
LABEL_14:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        *a1 = *a2;
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
        uint64_t v16 = *(int *)(v15 + 48);
        unint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        uint64_t v19 = sub_24C849650();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        *(void *)&a1[*(int *)(v15 + 64)] = *(void *)&a2[*(int *)(v15 + 64)];
        goto LABEL_14;
      case 0:
        uint64_t v7 = sub_24C849650();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        goto LABEL_14;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_24C7FA3D8()
{
  sub_24C7FA504();
  if (v1 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v0 - 8) + 64;
    swift_getTupleTypeLayout3();
    uint64_t v6 = &v4;
    uint64_t v7 = &unk_24C84C378;
    sub_24C849440();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout();
      uint64_t v8 = &v3;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_24C7FA504()
{
  if (!qword_2697EF248)
  {
    sub_24C849650();
    unint64_t v0 = sub_24C84A180();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2697EF248);
    }
  }
}

uint64_t sub_24C7FA55C()
{
  return sub_24C849C10();
}

uint64_t sub_24C7FA584@<X0>(uint64_t a1@<X8>)
{
  void v17[3] = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24C849C20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24C849EC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C849EB0();
  uint64_t v10 = sub_24C849E90();
  unint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v12 >> 60 == 15)
  {
    uint64_t v13 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v13, 1, v2);
  }
  switch(v12 >> 62)
  {
    case 1uLL:
      if (v10 >> 32 < (int)v10)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
      }
      sub_24C7D60D0(v10, v12);
      if (sub_24C8491E0() && __OFSUB__((int)v10, sub_24C849210())) {
        goto LABEL_19;
      }
      sub_24C849200();
      sub_24C849C10();
      sub_24C7D6044(v10, v12);
LABEL_15:
      sub_24C7D6044(v10, v12);
      (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
      uint64_t v13 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v13, 1, v2);
    case 2uLL:
      uint64_t v14 = *(void *)(v10 + 16);
      uint64_t v15 = *(void *)(v10 + 24);
      swift_retain();
      swift_retain();
      if (sub_24C8491E0() && __OFSUB__(v14, sub_24C849210())) {
        goto LABEL_20;
      }
      if (__OFSUB__(v15, v14)) {
        goto LABEL_18;
      }
      sub_24C849200();
      sub_24C849C10();
      swift_release();
      swift_release();
      goto LABEL_15;
    case 3uLL:
      memset(&v17[1], 0, 14);
      goto LABEL_14;
    default:
      v17[1] = v10;
      LOWORD(v17[2]) = v12;
      BYTE2(v17[2]) = BYTE2(v12);
      BYTE3(v17[2]) = BYTE3(v12);
      BYTE4(v17[2]) = BYTE4(v12);
      BYTE5(v17[2]) = BYTE5(v12);
LABEL_14:
      sub_24C849C10();
      goto LABEL_15;
  }
}

uint64_t sub_24C7FA948(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_24C7FA9D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24C7FAA18()
{
  unint64_t result = qword_2697EF288;
  if (!qword_2697EF288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF288);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  sub_24C7D5FEC(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_24C7D5FEC(*(void *)(v0 + 48), *(void *)(v0 + 56));
  return MEMORY[0x270FA0238](v0, 65, 7);
}

uint64_t sub_24C7FAAB8(NSObject *a1)
{
  return sub_24C7F7E28(a1, *(NSObject **)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64));
}

uint64_t CosmoConnection.__allocating_init(descriptor:queue:)(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24C849660();
  MEMORY[0x270FA5388](v7 - 8);
  sub_24C7F6760((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24C7F6D40();
  sub_24C8498C0();
  swift_allocObject();
  uint64_t v9 = sub_24C849820();
  sub_24C7F5C84(a1, (uint64_t)v6);
  type metadata accessor for CosmoConnection();
  uint64_t v10 = swift_allocObject();
  sub_24C7FB4D4((uint64_t)v6, 1, v9, a2);
  sub_24C7F5BE0(a1);
  return v10;
}

uint64_t type metadata accessor for CosmoConnection()
{
  uint64_t result = qword_2697EF2D8;
  if (!qword_2697EF2D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Cosmo::CosmoConnection::State_optional __swiftcall CosmoConnection.State.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24C84A340();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t CosmoConnection.State.rawValue.getter()
{
  uint64_t v1 = 0x64656C65636E6163;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656C696166;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7964616572;
  }
}

Cosmo::CosmoConnection::State_optional sub_24C7FAD1C(Swift::String *a1)
{
  return CosmoConnection.State.init(rawValue:)(*a1);
}

uint64_t sub_24C7FAD28@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_24C7F2264;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_24C7D6E3C(v4);
}

uint64_t sub_24C7FADBC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24C7F223C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  sub_24C7D6E3C(v3);
  return sub_24C7D6F70(v8);
}

uint64_t (*sub_24C7FAE78())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_24C7FAECC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 32);
  uint64_t v5 = *(void *)(v3 + 40);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_24C800D88;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_24C7D6E3C(v4);
}

uint64_t sub_24C7FAF60(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24C800D48;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 32);
  *(void *)(v7 + 32) = v6;
  *(void *)(v7 + 40) = v5;
  sub_24C7D6E3C(v3);
  return sub_24C7D6F70(v8);
}

uint64_t sub_24C7FB01C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 32);
  sub_24C7D6E3C(v1);
  return v1;
}

uint64_t sub_24C7FB06C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 32);
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return sub_24C7D6F70(v5);
}

uint64_t (*sub_24C7FB0C0())()
{
  return j__swift_endAccess;
}

uint64_t sub_24C7FB114@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 48);
  uint64_t v5 = *(void *)(v3 + 56);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_24C800D40;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_24C7D6E3C(v4);
}

uint64_t sub_24C7FB1A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24C800D38;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 48);
  *(void *)(v7 + 48) = v6;
  *(void *)(v7 + 56) = v5;
  sub_24C7D6E3C(v3);
  return sub_24C7D6F70(v8);
}

uint64_t sub_24C7FB264()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 48);
  sub_24C7D6E3C(v1);
  return v1;
}

uint64_t sub_24C7FB2B4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 48);
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return sub_24C7D6F70(v5);
}

uint64_t (*sub_24C7FB308())()
{
  return j_j__swift_endAccess;
}

uint64_t CosmoConnection.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_id;
  uint64_t v4 = sub_24C849440();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t CosmoConnection.name.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CosmoConnection.__allocating_init(descriptor:connection:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C7F5C84(a1, (uint64_t)v8);
  type metadata accessor for CosmoConnection();
  uint64_t v9 = swift_allocObject();
  sub_24C7FB4D4((uint64_t)v8, 0, a2, a3);
  sub_24C7F5BE0(a1);
  return v9;
}

_OWORD *sub_24C7FB4D4(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  unint64_t v60 = a4;
  uint64_t v64 = a3;
  LODWORD(v62) = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF300);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v56 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF150);
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  os_log_type_t v53 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF310);
  MEMORY[0x270FA5388](v10 - 8);
  *(void *)&long long v61 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF160);
  uint64_t v63 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  unint64_t v57 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_24C84A150();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v14 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24C84A120();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_24C849BF0();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v17 = sub_24C849440();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[2] = 0u;
  v4[3] = 0u;
  v4[1] = 0u;
  uint64_t v21 = OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection;
  *(void *)((char *)v4 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection) = 0;
  *(void *)((char *)v4 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_listener) = 0;
  sub_24C849430();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))((uint64_t)v4 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_id, v20, v17);
  uint64_t v65 = a1;
  uint64_t v22 = a1;
  uint64_t v23 = v60;
  sub_24C7F5C84(v22, (uint64_t)v4 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor);
  if (v23)
  {
    uint64_t v24 = (uint64_t)v23;
  }
  else
  {
    v52[1] = sub_24C7D5EF8();
    sub_24C849BE0();
    *(void *)&long long v68 = MEMORY[0x263F8EE78];
    sub_24C800E80((unint64_t *)&unk_2697EEAE0, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF330);
    sub_24C7F2328(&qword_2697EEAF0, (uint64_t *)&unk_2697EF330);
    sub_24C84A1F0();
    (*(void (**)(char *, void, uint64_t))(v54 + 104))(v14, *MEMORY[0x263F8F130], v55);
    uint64_t v24 = sub_24C84A170();
  }
  *(void *)((char *)v4 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue) = v24;
  *((unsigned char *)v4 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_initiated) = v62 & 1;
  *(void *)((char *)v4 + v21) = v64;
  id v62 = v23;
  swift_retain();
  swift_release();
  *(void *)&long long v68 = sub_24C849800();
  *((void *)&v68 + 1) = v25;
  uint64_t v26 = v61;
  if (qword_2697EEA40 != -1) {
    swift_once();
  }
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF340);
  __swift_project_value_buffer(v27, (uint64_t)qword_2697EF7F0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF170);
  sub_24C7F22D4();
  sub_24C7F2328((unint64_t *)&unk_2697EF180, (uint64_t *)&unk_2697EF340);
  sub_24C849E30();
  swift_bridgeObjectRelease();
  uint64_t v28 = v63;
  uint64_t v29 = v66;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v26, 1, v66) == 1)
  {
    sub_24C7D7C08(v26, (uint64_t *)&unk_2697EF310);
    *(void *)&long long v68 = sub_24C849800();
    *((void *)&v68 + 1) = v30;
    if (qword_2697EEA48 != -1) {
      swift_once();
    }
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF360);
    __swift_project_value_buffer(v31, (uint64_t)qword_2697EF808);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF190);
    sub_24C7F2328((unint64_t *)&unk_2697EF370, (uint64_t *)&unk_2697EF360);
    uint64_t v32 = (uint64_t)v56;
    sub_24C849E30();
    swift_bridgeObjectRelease();
    uint64_t v33 = v58;
    uint64_t v34 = v59;
    if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v58 + 48))(v32, 1, v59) == 1)
    {
      sub_24C7D7C08(v32, (uint64_t *)&unk_2697EF300);
      uint64_t v35 = sub_24C849800();
      uint64_t v37 = v36;
      swift_release();

      sub_24C7F5BE0(v65);
    }
    else
    {
      uint64_t v46 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v53, v32, v34);
      sub_24C849560();
      swift_bridgeObjectRelease();
      uint64_t v47 = MEMORY[0x2532FBD50](v71, v72, v73, v74);
      uint64_t v49 = v48;
      swift_bridgeObjectRelease();
      *(void *)&long long v68 = v47;
      *((void *)&v68 + 1) = v49;
      swift_bridgeObjectRetain();
      sub_24C849F80();
      swift_release();

      swift_bridgeObjectRelease();
      uint64_t v37 = *((void *)&v68 + 1);
      uint64_t v35 = v68;
      sub_24C7F5BE0(v65);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v46, v34);
    }
  }
  else
  {
    uint64_t v38 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v57, v26, v29);
    uint64_t v39 = v28;
    sub_24C849560();
    swift_bridgeObjectRelease();
    long long v59 = v75;
    uint64_t v41 = v76;
    uint64_t v40 = v77;
    long long v61 = v78;
    uint64_t v42 = v80;
    unint64_t v60 = v79;
    uint64_t v43 = MEMORY[0x2532FBD50](v71, v72, v73, v74);
    uint64_t v45 = v44;
    swift_bridgeObjectRelease();
    *(void *)&long long v68 = v43;
    *((void *)&v68 + 1) = v45;
    swift_bridgeObjectRetain();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    long long v67 = v68;
    long long v68 = v59;
    uint64_t v69 = v41;
    uint64_t v70 = v40;
    sub_24C7F236C();
    sub_24C849F70();
    swift_bridgeObjectRelease();
    long long v68 = v67;
    swift_bridgeObjectRetain();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    long long v67 = v68;
    long long v68 = v61;
    uint64_t v69 = v60;
    uint64_t v70 = v42;
    sub_24C849F70();
    swift_bridgeObjectRelease();
    long long v68 = v67;
    swift_bridgeObjectRetain();
    sub_24C849F80();
    swift_release();

    swift_bridgeObjectRelease();
    uint64_t v37 = *((void *)&v68 + 1);
    uint64_t v35 = v68;
    sub_24C7F5BE0(v65);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v66);
  }
  unint64_t v50 = (uint64_t *)((char *)v5 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_name);
  *unint64_t v50 = v35;
  v50[1] = v37;
  return v5;
}

uint64_t sub_24C7FBF60()
{
  return sub_24C7FEC54((uint64_t)sub_24C7FC1F8, (uint64_t)&block_descriptor_3);
}

uint64_t sub_24C7FBF80(uint64_t result)
{
  if (*(void *)(result + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection))
  {
    uint64_t v1 = swift_retain();
    uint64_t v2 = sub_24C7FC218(v1);
    unint64_t v4 = v3;
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_24C849590();
    __swift_project_value_buffer(v5, (uint64_t)qword_2697F6FF8);
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_24C849570();
    os_log_type_t v7 = sub_24C84A110();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v12 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      sub_24C7DE68C(v2, v4, &v12);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24C7BE000, v6, v7, "Starting %s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v9, -1, -1);
      MEMORY[0x2532FCCC0](v8, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v10;
    void v11[3] = v2;
    v11[4] = v4;
    swift_retain();
    sub_24C7D6E3C((uint64_t)sub_24C800E24);
    sub_24C849810();
    swift_release();
    swift_release();
    sub_24C849860();
    return swift_release();
  }
  return result;
}

uint64_t sub_24C7FC1F8()
{
  return sub_24C7FBF80(v0);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_24C7FC218(uint64_t a1)
{
  if (a1)
  {
    sub_24C849750();
    sub_24C84A430();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    sub_24C849F80();
  }
  uint64_t v2 = sub_24C7F7180();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_24C7FC308(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v167 = (char *)a4;
  unint64_t v164 = (char *)a3;
  uint64_t v5 = sub_24C849660();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v153 = (uint64_t)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0C0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  v166 = (void (*)(char *, os_log_t, uint64_t))((char *)&v147 - v12);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v155 = (uint64_t)&v147 - v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v160 = (char *)&v147 - v15;
  uint64_t v16 = sub_24C849B10();
  uint64_t v17 = *(char **)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v168 = (char *)&v147 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  char v154 = (char *)&v147 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v157 = (char *)&v147 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v163 = (char *)&v147 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v165 = (char *)&v147 - v30;
  MEMORY[0x270FA5388](v29);
  os_log_t v162 = (os_log_t)((char *)&v147 - v31);
  uint64_t v156 = sub_24C849C80();
  os_log_t v152 = *(os_log_t *)(v156 - 8);
  MEMORY[0x270FA5388](v156);
  uint64_t v151 = (uint64_t *)((char *)&v147 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v150 = sub_24C8499D0();
  uint64_t v149 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  uint64_t v148 = (uint64_t *)((char *)&v147 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v161 = type metadata accessor for NetworkDescriptor();
  uint64_t v34 = MEMORY[0x270FA5388](v161);
  uint64_t v158 = (uint64_t)&v147 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v159 = (uint64_t)&v147 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (char *)&v147 - v38;
  uint64_t v40 = sub_24C849850();
  uint64_t v41 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v147 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v45 = Strong;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v43, a1, v40);
  int v46 = (*(uint64_t (**)(char *, uint64_t))(v41 + 88))(v43, v40);
  if (v46 == *MEMORY[0x263F14218])
  {
    uint64_t v156 = v45;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v43, v40);
    uint64_t v47 = v168;
    uint64_t v165 = (char *)*((void *)v17 + 4);
    ((void (*)(char *, char *, uint64_t))v165)(v168, v43, v16);
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_24C849590();
    __swift_project_value_buffer(v48, (uint64_t)qword_2697F6FF8);
    uint64_t v49 = (void (*)(char *, char *, uint64_t))*((void *)v17 + 2);
    v49(v20, v47, v16);
    unint64_t v50 = (unint64_t)v167;
    swift_bridgeObjectRetain_n();
    unint64_t v51 = sub_24C849570();
    int v52 = sub_24C84A110();
    if (os_log_type_enabled(v51, (os_log_type_t)v52))
    {
      LODWORD(v161) = v52;
      os_log_t v162 = v51;
      uint64_t v53 = swift_slowAlloc();
      unint64_t v160 = (char *)swift_slowAlloc();
      v169[0] = (uint64_t)v160;
      *(_DWORD *)uint64_t v53 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v170 = sub_24C7DE68C((uint64_t)v164, v50, v169);
      unint64_t v164 = &v171;
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v54 = v166;
      v49((char *)v166, v20, v16);
      (*((void (**)(void (*)(char *, os_log_t, uint64_t), void, uint64_t, uint64_t))v17 + 7))(v54, 0, 1, v16);
      sub_24C7D7BA4((uint64_t)v54, (uint64_t)v10, (uint64_t *)&unk_2697EF0C0);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v17 + 6))(v10, 1, v16) == 1)
      {
        uint64_t v55 = 7104878;
        unint64_t v56 = 0xE300000000000000;
      }
      else
      {
        uint64_t v88 = v163;
        ((void (*)(char *, char *, uint64_t))v165)(v163, v10, v16);
        v49(v157, v88, v16);
        uint64_t v55 = sub_24C849ED0();
        unint64_t v56 = v89;
        (*((void (**)(char *, uint64_t))v17 + 1))(v88, v16);
      }
      sub_24C7D7C08((uint64_t)v166, (uint64_t *)&unk_2697EF0C0);
      uint64_t v170 = sub_24C7DE68C(v55, v56, v169);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      uint64_t v80 = (void (*)(char *, uint64_t))*((void *)v17 + 1);
      v80(v20, v16);
      unint64_t v51 = v162;
      _os_log_impl(&dword_24C7BE000, v162, (os_log_type_t)v161, "%s in waiting state, error=%s", (uint8_t *)v53, 0x16u);
      uint64_t v90 = (uint64_t)v160;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v90, -1, -1);
      MEMORY[0x2532FCCC0](v53, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v80 = (void (*)(char *, uint64_t))*((void *)v17 + 1);
      v80(v20, v16);
    }

    sub_24C7FEC34();
    swift_release();
    v80(v168, v16);
    return;
  }
  if (v46 == *MEMORY[0x263F14210])
  {
    uint64_t v156 = v45;
    (*(void (**)(char *, uint64_t))(v41 + 96))(v43, v40);
    unint64_t v57 = v17;
    uint64_t v58 = (char *)*((void *)v17 + 4);
    os_log_t v59 = v162;
    uint64_t v60 = v16;
    unint64_t v164 = v58;
    ((void (*)(os_log_t, char *, uint64_t))v58)(v162, v43, v16);
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_24C849590();
    __swift_project_value_buffer(v61, (uint64_t)qword_2697F6FF8);
    id v62 = (void (*)(char *, os_log_t, uint64_t))*((void *)v57 + 2);
    uint64_t v63 = v165;
    v62(v165, v59, v16);
    uint64_t v64 = v156;
    swift_retain_n();
    uint64_t v65 = sub_24C849570();
    LODWORD(v168) = sub_24C84A0F0();
    BOOL v66 = os_log_type_enabled(v65, (os_log_type_t)v168);
    v166 = v62;
    uint64_t v167 = v57 + 16;
    if (v66)
    {
      os_log_t v152 = v65;
      uint64_t v67 = swift_slowAlloc();
      uint64_t v151 = (void *)swift_slowAlloc();
      v169[0] = (uint64_t)v151;
      *(_DWORD *)uint64_t v67 = 136315394;
      uint64_t v150 = v67 + 4;
      uint64_t v68 = swift_retain();
      uint64_t v69 = sub_24C7FC218(v68);
      unint64_t v71 = v70;
      uint64_t v72 = v16;
      swift_release();
      uint64_t v170 = sub_24C7DE68C(v69, v71, v169);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 12) = 2080;
      uint64_t v73 = (uint64_t)v160;
      v62(v160, (os_log_t)v165, v16);
      (*((void (**)(uint64_t, void, uint64_t, uint64_t))v57 + 7))(v73, 0, 1, v16);
      uint64_t v74 = v73;
      uint64_t v75 = v155;
      sub_24C7D7BA4(v74, v155, (uint64_t *)&unk_2697EF0C0);
      if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v57 + 6))(v75, 1, v16) == 1)
      {
        uint64_t v76 = v16;
        uint64_t v77 = 7104878;
        unint64_t v78 = 0xE300000000000000;
        unint64_t v79 = v163;
      }
      else
      {
        unint64_t v79 = v163;
        ((void (*)(char *, uint64_t, uint64_t))v164)(v163, v75, v72);
        v62(v157, v79, v72);
        uint64_t v76 = v72;
        uint64_t v77 = sub_24C849ED0();
        unint64_t v78 = v94;
        (*((void (**)(NSObject *, uint64_t))v57 + 1))(v79, v76);
      }
      sub_24C7D7C08((uint64_t)v160, (uint64_t *)&unk_2697EF0C0);
      uint64_t v170 = sub_24C7DE68C(v77, v78, v169);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      unint64_t v91 = (void (*)(char *, uint64_t))*((void *)v57 + 1);
      v91(v165, v76);
      os_log_t v95 = v152;
      _os_log_impl(&dword_24C7BE000, v152, (os_log_type_t)v168, "%s failed, error=%s", (uint8_t *)v67, 0x16u);
      uint64_t v96 = v151;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v96, -1, -1);
      MEMORY[0x2532FCCC0](v67, -1, -1);

      uint64_t v64 = v156;
      uint64_t v60 = v76;
      os_log_t v59 = v162;
    }
    else
    {
      swift_release_n();
      unint64_t v91 = (void (*)(char *, uint64_t))*((void *)v57 + 1);
      v91(v63, v16);

      unint64_t v79 = v163;
    }
    sub_24C7FEC34();
    uint64_t v97 = v64 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor;
    uint64_t v98 = v159;
    sub_24C7F5C84(v64 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor, v159);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_24C7D5FEC(*(void *)v98, *(void *)(v98 + 8));
      if (*(unsigned char *)(v64 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_initiated) == 1)
      {
        LODWORD(v79->isa) = 53;
        (*((void (**)(NSObject *, void, uint64_t))v57 + 13))(v79, *MEMORY[0x263F14318], v60);
        char v99 = MEMORY[0x2532FB950](v59, v79);
        v91((char *)v79, v60);
        if (v99)
        {
          sub_24C7F6760(v153);
          sub_24C7F6D40();
          sub_24C8498C0();
          swift_allocObject();
          *(void *)(v64 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection) = sub_24C849820();
          swift_retain();
          uint64_t v100 = swift_release();
          sub_24C7FBF60(v100);
          swift_release();
LABEL_52:
          swift_release();
          v91((char *)v59, v60);
          return;
        }
      }
    }
    else
    {
      sub_24C7F5BE0(v98);
    }
    uint64_t v101 = v158;
    sub_24C7F5C84(v97, v158);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_24C7D5FEC(*(void *)v101, *(void *)(v101 + 8));
      LODWORD(v79->isa) = 54;
      uint64_t v102 = *MEMORY[0x263F14318];
      uint64_t v168 = v57;
      unint64_t v103 = (void (*)(_DWORD *, uint64_t, uint64_t))*((void *)v57 + 13);
      v103(v79, v102, v60);
      char v104 = MEMORY[0x2532FB950](v59, v79);
      v91((char *)v79, v60);
      uint64_t v105 = v154;
      v166(v154, v59, v60);
      if (v104)
      {
        v91(v105, v60);
        uint64_t v64 = v156;
        goto LABEL_50;
      }
      LODWORD(v79->isa) = 96;
      v103(v79, v102, v60);
      char v113 = MEMORY[0x2532FB950](v105, v79);
      v91((char *)v79, v60);
      v91(v105, v60);
      uint64_t v64 = v156;
      if (v113)
      {
LABEL_50:
        swift_beginAccess();
        id v114 = *(void (**)(uint64_t *))(v64 + 16);
        if (v114)
        {
          LOBYTE(v170) = 1;
          swift_retain();
          v114(&v170);
          sub_24C7D6F70((uint64_t)v114);
          goto LABEL_52;
        }
        goto LABEL_60;
      }
    }
    else
    {
      sub_24C7F5BE0(v101);
    }
    swift_beginAccess();
    uint64_t v115 = *(void (**)(uint64_t *))(v64 + 16);
    if (v115)
    {
      LOBYTE(v170) = 2;
      swift_retain();
      v115(&v170);
      sub_24C7D6F70((uint64_t)v115);
      swift_release();
      v91((char *)v59, v60);
      return;
    }
LABEL_60:
    v91((char *)v59, v60);
    goto LABEL_61;
  }
  if (v46 == *MEMORY[0x263F14208])
  {
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v81 = sub_24C849590();
    __swift_project_value_buffer(v81, (uint64_t)qword_2697F6FF8);
    unint64_t v82 = (unint64_t)v167;
    swift_bridgeObjectRetain_n();
    int v83 = sub_24C849570();
    os_log_type_t v84 = sub_24C84A110();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = (uint8_t *)swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      v169[0] = v86;
      *(_DWORD *)uint64_t v85 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v170 = sub_24C7DE68C((uint64_t)v164, v82, v169);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      uint64_t v87 = "%s in setup state";
LABEL_30:
      _os_log_impl(&dword_24C7BE000, v83, v84, v87, v85, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v86, -1, -1);
      MEMORY[0x2532FCCC0](v85, -1, -1);
      swift_release();

      return;
    }
    goto LABEL_31;
  }
  if (v46 == *MEMORY[0x263F14228])
  {
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v92 = sub_24C849590();
    __swift_project_value_buffer(v92, (uint64_t)qword_2697F6FF8);
    unint64_t v93 = (unint64_t)v167;
    swift_bridgeObjectRetain_n();
    int v83 = sub_24C849570();
    os_log_type_t v84 = sub_24C84A110();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = (uint8_t *)swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      v169[0] = v86;
      *(_DWORD *)uint64_t v85 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v170 = sub_24C7DE68C((uint64_t)v164, v93, v169);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      uint64_t v87 = "%s in preparing state";
      goto LABEL_30;
    }
LABEL_31:

    swift_bridgeObjectRelease_n();
    goto LABEL_61;
  }
  if (v46 == *MEMORY[0x263F14200])
  {
    uint64_t v106 = v45;
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v107 = sub_24C849590();
    __swift_project_value_buffer(v107, (uint64_t)qword_2697F6FF8);
    unint64_t v108 = (unint64_t)v167;
    swift_bridgeObjectRetain_n();
    uint64_t v109 = sub_24C849570();
    os_log_type_t v110 = sub_24C84A110();
    if (os_log_type_enabled(v109, v110))
    {
      unint64_t v111 = (uint8_t *)swift_slowAlloc();
      uint64_t v112 = swift_slowAlloc();
      v169[0] = v112;
      *(_DWORD *)unint64_t v111 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v170 = sub_24C7DE68C((uint64_t)v164, (unint64_t)v167, v169);
      unint64_t v108 = (unint64_t)v167;
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24C7BE000, v109, v110, "%s in ready state", v111, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v112, -1, -1);
      MEMORY[0x2532FCCC0](v111, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v45 = v106;
    sub_24C7F5C84(v106 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor, (uint64_t)v39);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_24C7D5FEC(*((void *)v39 + 1), *((void *)v39 + 2));
      sub_24C7D5FEC(*((void *)v39 + 3), *((void *)v39 + 4));
      swift_unknownObjectRelease();
      uint64_t v122 = &v39[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0) + 96)];
      uint64_t v123 = sub_24C849440();
      (*(void (**)(char *, uint64_t))(*(void *)(v123 - 8) + 8))(v122, v123);
      if (*(void *)(v106 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection))
      {
        sub_24C849A20();
        swift_retain();
        sub_24C8499C0();
        uint64_t v124 = sub_24C8498A0();
        swift_release();
        uint64_t v45 = v106;
        swift_release();
        if (v124)
        {
          sub_24C849A10();
          if (swift_dynamicCastClass())
          {
            swift_bridgeObjectRetain_n();
            uint64_t v125 = sub_24C849570();
            os_log_type_t v126 = sub_24C84A110();
            if (os_log_type_enabled(v125, v126))
            {
              uint64_t v127 = (uint8_t *)swift_slowAlloc();
              uint64_t v128 = swift_slowAlloc();
              *(_DWORD *)uint64_t v127 = 136315138;
              uint64_t v168 = (char *)(v127 + 4);
              v169[0] = v128;
              swift_bridgeObjectRetain();
              uint64_t v170 = sub_24C7DE68C((uint64_t)v164, v108, v169);
              sub_24C84A1A0();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_24C7BE000, v125, v126, "%s setting keep-alive to 15 seconds", v127, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2532FCCC0](v128, -1, -1);
              MEMORY[0x2532FCCC0](v127, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            uint64_t v137 = v148;
            *uint64_t v148 = 15;
            (*(void (**)(void *, void, uint64_t))(v149 + 104))(v137, *MEMORY[0x263F14280], v150);
            sub_24C849A00();
            uint64_t v45 = v106;
          }
          swift_release();
        }
      }
      sub_24C7FDE9C();
    }
    else
    {
      sub_24C7F5BE0((uint64_t)v39);
    }
    swift_beginAccess();
    uint64_t v138 = *(void (**)(uint64_t *))(v45 + 16);
    if (v138)
    {
      LOBYTE(v170) = 0;
      swift_retain();
      v138(&v170);
      sub_24C7D6F70((uint64_t)v138);
    }
    uint64_t v139 = *(void **)(v45 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue);
    uint64_t v140 = v151;
    *uint64_t v151 = v139;
    os_log_t v141 = v152;
    uint64_t v142 = v156;
    ((void (*)(void *, void, uint64_t))v152[13].isa)(v140, *MEMORY[0x263F8F0E0], v156);
    id v143 = v139;
    LOBYTE(v139) = sub_24C849CA0();
    ((void (*)(void *, uint64_t))v141[1].isa)(v140, v142);
    if (v139)
    {
      uint64_t v144 = *(void *)(v45 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection);
      if (v144)
      {
        uint64_t v145 = swift_allocObject();
        swift_weakInit();
        uint64_t v146 = swift_allocObject();
        *(void *)(v146 + 16) = v145;
        *(void *)(v146 + 24) = v144;
        swift_retain_n();
        swift_retain();
        sub_24C8497F0();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return;
      }
LABEL_61:
      swift_release();
      return;
    }
    __break(1u);
LABEL_89:
    swift_once();
LABEL_58:
    uint64_t v116 = sub_24C849590();
    __swift_project_value_buffer(v116, (uint64_t)qword_2697F6FF8);
    unint64_t v117 = (unint64_t)v167;
    swift_bridgeObjectRetain_n();
    id v118 = sub_24C849570();
    os_log_type_t v119 = sub_24C84A110();
    if (os_log_type_enabled(v118, v119))
    {
      uint64_t v120 = (uint8_t *)swift_slowAlloc();
      uint64_t v121 = swift_slowAlloc();
      v169[0] = v121;
      *(_DWORD *)uint64_t v120 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v170 = sub_24C7DE68C((uint64_t)v164, v117, v169);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24C7BE000, v118, v119, "%s in cancelled state", v120, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v121, -1, -1);
      MEMORY[0x2532FCCC0](v120, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    unsigned int v136 = *(void (**)(uint64_t *))(v45 + 16);
    if (v136)
    {
      LOBYTE(v170) = 1;
      swift_retain();
      v136(&v170);
      sub_24C7D6F70((uint64_t)v136);
    }
    goto LABEL_61;
  }
  if (v46 == *MEMORY[0x263F14220])
  {
    if (qword_2697EE9B0 == -1) {
      goto LABEL_58;
    }
    goto LABEL_89;
  }
  if (qword_2697EE9B0 != -1) {
    swift_once();
  }
  uint64_t v129 = sub_24C849590();
  __swift_project_value_buffer(v129, (uint64_t)qword_2697F6FF8);
  unint64_t v130 = (unint64_t)v167;
  swift_bridgeObjectRetain_n();
  id v131 = sub_24C849570();
  os_log_type_t v132 = sub_24C84A0F0();
  if (os_log_type_enabled(v131, v132))
  {
    unint64_t v133 = (uint8_t *)swift_slowAlloc();
    uint64_t v134 = swift_slowAlloc();
    uint64_t v156 = v45;
    uint64_t v135 = v134;
    v169[0] = v134;
    *(_DWORD *)unint64_t v133 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v170 = sub_24C7DE68C((uint64_t)v164, v130, v169);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24C7BE000, v131, v132, "%s in unknown state", v133, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v135, -1, -1);
    MEMORY[0x2532FCCC0](v133, -1, -1);
    swift_release();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
}

void sub_24C7FDE9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (uint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_24C849C80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F0E0], v5);
  id v10 = v9;
  char v11 = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (!*(void *)(v1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection)) {
    return;
  }
  sub_24C7F5C84(v1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    swift_retain();
    sub_24C7F5BE0((uint64_t)v4);
    if (qword_2697EE9B0 == -1)
    {
LABEL_10:
      uint64_t v22 = sub_24C849590();
      __swift_project_value_buffer(v22, (uint64_t)qword_2697F6FF8);
      uint64_t v23 = sub_24C849570();
      os_log_type_t v24 = sub_24C84A0F0();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl(&dword_24C7BE000, v23, v24, "Bad API usage, raw TCP cannot set a per-connection NWListener", v25, 2u);
        MEMORY[0x2532FCCC0](v25, -1, -1);
        swift_release();

        return;
      }

      goto LABEL_13;
    }
LABEL_17:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v12 = v4[1];
  unint64_t v13 = v4[2];
  swift_retain();
  sub_24C7D5FEC(v12, v13);
  sub_24C7D5FEC(v4[3], v4[4]);
  swift_unknownObjectRelease();
  uint64_t v14 = (char *)v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0) + 96);
  uint64_t v15 = sub_24C849440();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_beginAccess();
  uint64_t v16 = *(void *)(v1 + 48);
  if (!v16)
  {
LABEL_13:
    swift_release();
    return;
  }
  uint64_t v17 = *(void *)(v1 + 56);
  sub_24C849700();
  swift_retain();
  sub_24C7D6E3C(v16);
  sub_24C7F6D40();
  uint64_t v18 = sub_24C849680();
  uint64_t v19 = OBJC_IVAR____TtC5Cosmo15CosmoConnection_listener;
  *(void *)(v1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_listener) = v18;
  swift_release();
  if (*(void *)(v1 + v19))
  {
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = v20;
    v21[3] = v16;
    v21[4] = v17;
    sub_24C7D6E3C(v16);
    swift_retain();
    swift_retain();
    sub_24C7D6E3C((uint64_t)sub_24C800CEC);
    sub_24C8496A0();
    swift_release();
    swift_release();
    swift_release();
    if (*(void *)(v1 + v19))
    {
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      swift_retain();
      sub_24C7D6E3C((uint64_t)sub_24C800CF8);
      sub_24C849690();
      swift_release();
      swift_release_n();
      if (*(void *)(v1 + v19))
      {
        swift_retain();
        sub_24C8496D0();
        swift_release();
        sub_24C7D6F70(v16);
        goto LABEL_13;
      }
    }
  }
  swift_release();
  sub_24C7D6F70(v16);
}

uint64_t sub_24C7FE384(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v7 = type metadata accessor for NetworkDescriptor();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  id v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v31 = a4;
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_24C849590();
    __swift_project_value_buffer(v15, (uint64_t)qword_2697F6FF8);
    swift_retain_n();
    swift_retain_n();
    uint64_t v16 = sub_24C849570();
    os_log_type_t v17 = sub_24C84A110();
    uint64_t v18 = &qword_2697F6FF8[1];
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v29 = v20;
      uint64_t v30 = a3;
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v27 = v19 + 4;
      uint64_t v28 = v19;
      uint64_t v33 = 4401184;
      unint64_t v34 = 0xE300000000000000;
      uint64_t v35 = v20;
      uint64_t v32 = sub_24C849750();
      sub_24C84A430();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      sub_24C849F80();
      uint64_t v33 = sub_24C7F7180();
      unint64_t v34 = v21;
      sub_24C849F80();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      uint64_t v33 = sub_24C7DE68C(v33, v34, &v35);
      a3 = v30;
      sub_24C84A1A0();
      swift_release_n();
      swift_release_n();
      uint64_t v18 = qword_2697F6FF8 + 8;
      swift_bridgeObjectRelease();
      uint64_t v22 = v28;
      _os_log_impl(&dword_24C7BE000, v16, v17, "Received incoming stream, %s", v28, 0xCu);
      uint64_t v23 = v29;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v23, -1, -1);
      MEMORY[0x2532FCCC0](v22, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    sub_24C7F5C84(v14 + v18[27], (uint64_t)v12);
    os_log_type_t v24 = *(void **)(v14 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue);
    sub_24C7F5C84((uint64_t)v12, (uint64_t)v10);
    type metadata accessor for CosmoConnection();
    uint64_t v25 = swift_allocObject();
    swift_retain();
    id v26 = v24;
    sub_24C7FB4D4((uint64_t)v10, 0, a1, v24);
    sub_24C7F5BE0((uint64_t)v12);
    a3(v25);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_24C7FE73C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF2F0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v36 - v6;
  uint64_t v8 = sub_24C8496C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v36 - v14;
  MEMORY[0x270FA5388](v13);
  os_log_type_t v17 = (char *)v36 - v16;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = Strong;
    uint64_t v41 = v12;
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_24C849590();
    __swift_project_value_buffer(v20, (uint64_t)qword_2697F6FF8);
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v42(v17, a1, v8);
    swift_retain_n();
    unint64_t v21 = sub_24C849570();
    int v22 = sub_24C84A110();
    if (os_log_type_enabled(v21, (os_log_type_t)v22))
    {
      int v39 = v22;
      v36[0] = v15;
      uint64_t v40 = v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v45 = v38;
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v37 = v23 + 4;
      uint64_t v24 = v19;
      uint64_t v25 = (uint64_t)v7;
      uint64_t v26 = swift_retain();
      uint64_t v27 = sub_24C7FC218(v26);
      uint64_t v43 = v17;
      unint64_t v29 = v28;
      swift_release();
      uint64_t v44 = sub_24C7DE68C(v27, v29, &v45);
      v36[1] = &v45;
      sub_24C84A1A0();
      uint64_t v37 = v24;
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v30 = v42;
      v42((char *)v25, (uint64_t)v43, v8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v25, 0, 1, v8);
      sub_24C7D7BA4(v25, (uint64_t)v5, &qword_2697EF2F0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
      {
        unint64_t v31 = 0xE300000000000000;
        uint64_t v32 = 7104878;
      }
      else
      {
        uint64_t v33 = v36[0];
        (*(void (**)(void, char *, uint64_t))(v9 + 32))(v36[0], v5, v8);
        v30(v41, v33, v8);
        uint64_t v32 = sub_24C849ED0();
        unint64_t v31 = v34;
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v33, v8);
      }
      unint64_t v21 = v40;
      sub_24C7D7C08(v25, &qword_2697EF2F0);
      uint64_t v44 = sub_24C7DE68C(v32, v31, &v45);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v43, v8);
      _os_log_impl(&dword_24C7BE000, v21, (os_log_type_t)v39, "%s listener state update, state=%s", (uint8_t *)v23, 0x16u);
      uint64_t v35 = v38;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v35, -1, -1);
      MEMORY[0x2532FCCC0](v23, -1, -1);
      swift_release();
    }
    else
    {
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    }
  }
}

uint64_t sub_24C7FEC34()
{
  return sub_24C7FEC54((uint64_t)sub_24C7FF2B4, (uint64_t)&block_descriptor_3);
}

uint64_t sub_24C7FEC54(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_24C849BD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24C849BF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue);
  aBlock[4] = a1;
  uint64_t v17 = v2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_24C849BE0();
  v15[1] = MEMORY[0x263F8EE78];
  sub_24C800E80((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7F2328((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_24C7FEEF0(uint64_t a1)
{
  uint64_t v2 = sub_24C849850();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v10 = OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection;
  if (*(void *)(a1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection))
  {
    swift_beginAccess();
    uint64_t v11 = *(void *)(a1 + 16);
    if (v11)
    {
      uint64_t v29 = v10;
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      sub_24C7D6E3C(v11);
      sub_24C849870();
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F14208], v2);
      char v13 = MEMORY[0x2532FB690](v9, v6);
      uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
      v14(v6, v2);
      v14(v9, v2);
      if (v13)
      {
        void v27[2] = v12;
        unint64_t v28 = (void (*)(void))v11;
        if (qword_2697EE9B0 != -1) {
          swift_once();
        }
        uint64_t v15 = sub_24C849590();
        __swift_project_value_buffer(v15, (uint64_t)qword_2697F6FF8);
        swift_retain_n();
        uint64_t v16 = sub_24C849570();
        os_log_type_t v17 = sub_24C84A110();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = (uint8_t *)swift_slowAlloc();
          uint64_t v19 = swift_slowAlloc();
          uint64_t v31 = v19;
          *(_DWORD *)uint64_t v18 = 136315138;
          v27[1] = v18 + 4;
          uint64_t v20 = swift_retain();
          uint64_t v21 = sub_24C7FC218(v20);
          unint64_t v23 = v22;
          swift_release();
          uint64_t v30 = sub_24C7DE68C(v21, v23, &v31);
          sub_24C84A1A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24C7BE000, v16, v17, "%s, canceling (never started)", v18, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v19, -1, -1);
          MEMORY[0x2532FCCC0](v18, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        uint64_t v25 = v28;
        LOBYTE(v31) = 1;
        v28(&v31);
        uint64_t v24 = (uint64_t)v25;
      }
      else
      {
        uint64_t v24 = v11;
      }
      sub_24C7D6F70(v24);
      uint64_t v10 = v29;
    }
    else
    {
      swift_retain();
    }
    sub_24C849880();
    *(void *)(a1 + v10) = 0;
    swift_release();
    uint64_t result = swift_release();
  }
  uint64_t v26 = OBJC_IVAR____TtC5Cosmo15CosmoConnection_listener;
  if (*(void *)(a1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_listener))
  {
    swift_retain();
    sub_24C8496F0();
    *(void *)(a1 + v26) = 0;
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24C7FF2B4()
{
  return sub_24C7FEEF0(v0);
}

uint64_t sub_24C7FF2BC(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v7 = sub_24C849BD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24C849BF0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v18[0] = *(void *)(v3 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v3;
    *(_DWORD *)(v16 + 24) = a3;
    *(void *)(v16 + 32) = a1;
    *(void *)(v16 + 40) = a2;
    aBlock[4] = sub_24C7F5B68;
    void aBlock[5] = v16;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_24C7C25B4;
    aBlock[3] = &block_descriptor_6;
    os_log_type_t v17 = _Block_copy(aBlock);
    swift_retain();
    sub_24C7D7304(a1, a2);
    sub_24C849BE0();
    v18[1] = MEMORY[0x263F8EE78];
    sub_24C800E80((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
    sub_24C7F2328((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
    sub_24C84A1F0();
    MEMORY[0x2532FBFB0](0, v15, v10, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24C7FF5A8(uint64_t a1, int a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_24C8497E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection))
  {
    LODWORD(v42) = a2;
    uint64_t v12 = qword_2697EE9B0;
    swift_retain();
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_24C849590();
    __swift_project_value_buffer(v13, (uint64_t)qword_2697F6FF8);
    swift_retain();
    swift_retain();
    sub_24C7D7304(a3, a4);
    swift_retain();
    swift_retain();
    sub_24C7D7304(a3, a4);
    uint64_t v14 = sub_24C849570();
    int v15 = sub_24C84A0E0();
    if (os_log_type_enabled(v14, (os_log_type_t)v15))
    {
      int v37 = v15;
      os_log_t v38 = v14;
      uint64_t v39 = v9;
      uint64_t v40 = v8;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v47 = v36;
      *(_DWORD *)uint64_t v16 = 136315650;
      uint64_t v41 = v16 + 4;
      unint64_t v17 = 0xE300000000000000;
      uint64_t v44 = 4401184;
      unint64_t v45 = 0xE300000000000000;
      uint64_t v43 = sub_24C849750();
      sub_24C84A430();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      sub_24C849F80();
      uint64_t v44 = sub_24C7F7180();
      unint64_t v45 = v18;
      sub_24C849F80();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      uint64_t v44 = sub_24C7DE68C(v44, v45, &v47);
      sub_24C84A1A0();
      swift_release_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 1024;
      int v19 = (int)v42;
      LODWORD(v44) = v42;
      sub_24C84A1A0();
      *(_WORD *)(v16 + 18) = 2080;
      if (a4 >> 60 == 15)
      {
        uint64_t v20 = 7104878;
      }
      else
      {
        uint64_t v26 = 0;
        switch(a4 >> 62)
        {
          case 1uLL:
            LODWORD(v26) = HIDWORD(a3) - a3;
            if (__OFSUB__(HIDWORD(a3), a3))
            {
              __break(1u);
LABEL_26:
              __break(1u);
              JUMPOUT(0x24C7FFD1CLL);
            }
            uint64_t v26 = (int)v26;
LABEL_20:
            uint64_t v44 = v26;
            uint64_t v20 = sub_24C849ED0();
            unint64_t v17 = v30;
            break;
          case 2uLL:
            uint64_t v28 = *(void *)(a3 + 16);
            uint64_t v27 = *(void *)(a3 + 24);
            BOOL v29 = __OFSUB__(v27, v28);
            uint64_t v26 = v27 - v28;
            if (!v29) {
              goto LABEL_20;
            }
            goto LABEL_26;
          case 3uLL:
            goto LABEL_20;
          default:
            uint64_t v26 = BYTE6(a4);
            goto LABEL_20;
        }
      }
      uint64_t v44 = sub_24C7DE68C(v20, v17, &v47);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D6044(a3, a4);
      sub_24C7D6044(a3, a4);
      os_log_t v31 = v38;
      _os_log_impl(&dword_24C7BE000, v38, (os_log_type_t)v37, "%s sending messageHeader=%u, data-size=%s", (uint8_t *)v16, 0x1Cu);
      uint64_t v32 = v36;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v32, -1, -1);
      MEMORY[0x2532FCCC0](v16, -1, -1);

      uint64_t v9 = v39;
      uint64_t v8 = v40;
    }
    else
    {
      swift_release_n();
      swift_release_n();
      sub_24C7D6044(a3, a4);
      sub_24C7D6044(a3, a4);

      int v19 = (int)v42;
    }
    sub_24C849A70();
    if (qword_2697EE9F8 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v33 = sub_24C849A60();
    uint64_t v46 = MEMORY[0x263F8E8F8];
    LODWORD(v44) = v19;
    sub_24C849A90();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF2F8);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_24C84C3D0;
    *(void *)(v34 + 32) = v33;
    uint64_t v44 = v34;
    sub_24C84A070();
    sub_24C8497D0();
    swift_allocObject();
    swift_retain();
    sub_24C849770();
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F141D8], v8);
    sub_24C849830();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_24C849590();
    __swift_project_value_buffer(v21, (uint64_t)qword_2697F6FF8);
    os_log_t v42 = (os_log_t)sub_24C849570();
    os_log_type_t v22 = sub_24C84A0F0();
    if (os_log_type_enabled(v42, v22))
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)unint64_t v23 = 136315138;
      uint64_t v44 = v24;
      uint64_t v47 = sub_24C7DE68C(0xD00000000000001DLL, 0x800000024C84FEC0, &v44);
      sub_24C84A1A0();
      _os_log_impl(&dword_24C7BE000, v42, v22, "%s connection is nil", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v24, -1, -1);
      MEMORY[0x2532FCCC0](v23, -1, -1);
    }
    else
    {
      os_log_t v25 = v42;
    }
  }
}

uint64_t sub_24C7FFD2C()
{
  swift_release();
  unint64_t v1 = *(void *)(v0 + 40);
  if (v1 >> 60 != 15) {
    sub_24C7D5FEC(*(void *)(v0 + 32), v1);
  }
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24C7FFD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_24C849C80();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v51 = v10;
    uint64_t v52 = a5;
    uint64_t v54 = 4401184;
    unint64_t v55 = 0xE300000000000000;
    uint64_t v57 = sub_24C849750();
    sub_24C84A430();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    sub_24C849F80();
    uint64_t v54 = sub_24C7F7180();
    unint64_t v55 = v15;
    sub_24C849F80();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    uint64_t v16 = v54;
    unint64_t v17 = v55;
    if (a3)
    {
      uint64_t v50 = v54;
      swift_retain();
      LODWORD(v18) = sub_24C8497C0();
      if (v18)
      {
        if (qword_2697EE9B0 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_24C849590();
        __swift_project_value_buffer(v19, (uint64_t)qword_2697F6FF8);
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_24C849570();
        os_log_type_t v21 = sub_24C84A110();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v48 = v9;
          uint64_t v22 = swift_slowAlloc();
          uint64_t v49 = a3;
          unint64_t v23 = (uint8_t *)v22;
          uint64_t v24 = swift_slowAlloc();
          int v47 = v18;
          uint64_t v18 = v24;
          uint64_t v54 = v24;
          *(_DWORD *)unint64_t v23 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v57 = sub_24C7DE68C(v50, v17, &v54);
          uint64_t v9 = v48;
          sub_24C84A1A0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_24C7BE000, v20, v21, "%s read close", v23, 0xCu);
          swift_arrayDestroy();
          uint64_t v25 = v18;
          LOBYTE(v18) = v47;
          MEMORY[0x2532FCCC0](v25, -1, -1);
          MEMORY[0x2532FCCC0](v23, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        sub_24C849880();
        goto LABEL_34;
      }
      if (qword_2697EE9F8 != -1) {
        swift_once();
      }
      if (sub_24C849790())
      {
        sub_24C849A70();
        if (swift_dynamicCastClass())
        {
          swift_bridgeObjectRelease();
          swift_beginAccess();
          os_log_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
          if (!v31)
          {
LABEL_33:
            swift_release();
LABEL_34:
            uint64_t v38 = v52;
            uint64_t v39 = sub_24C849B10();
            if (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v38, 1, v39) != 1|| (v18)
            {
              goto LABEL_39;
            }
            uint64_t v40 = *(void **)(v14 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_queue);
            void *v12 = v40;
            uint64_t v41 = v51;
            (*(void (**)(void *, void, uint64_t))(v51 + 104))(v12, *MEMORY[0x263F8F0E0], v9);
            id v42 = v40;
            LOBYTE(v40) = sub_24C849CA0();
            uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v41 + 8))(v12, v9);
            if ((v40 & 1) == 0)
            {
              __break(1u);
              return result;
            }
            uint64_t v43 = *(void *)(v14 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_connection);
            if (v43)
            {
              uint64_t v44 = swift_allocObject();
              swift_weakInit();
              uint64_t v45 = swift_allocObject();
              *(void *)(v45 + 16) = v44;
              *(void *)(v45 + 24) = v43;
              swift_retain_n();
              swift_retain();
              sub_24C8497F0();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
            }
            else
            {
LABEL_39:
              swift_release();
            }
            return swift_release();
          }
          uint64_t v50 = *(void *)(v14 + 40);
          swift_retain();
          sub_24C849A80();
          if (v56)
          {
            if (swift_dynamicCast())
            {
              uint64_t v32 = v53;
LABEL_32:
              v31(v32, a1, a2);
              sub_24C7D6F70((uint64_t)v31);
              goto LABEL_33;
            }
          }
          else
          {
            sub_24C7D7C08((uint64_t)&v54, (uint64_t *)&unk_2697EED00);
          }
          uint64_t v32 = 0;
          goto LABEL_32;
        }
        swift_release();
      }
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_24C849590();
      __swift_project_value_buffer(v33, (uint64_t)qword_2697F6FF8);
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_24C849570();
      os_log_type_t v35 = sub_24C84A0F0();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v54 = v37;
        *(_DWORD *)uint64_t v36 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_24C7DE68C(v50, v17, &v54);
        sub_24C84A1A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24C7BE000, v34, v35, "%s could not read messageTypeHeader", v36, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v37, -1, -1);
        MEMORY[0x2532FCCC0](v36, -1, -1);

        swift_release();
        return swift_release();
      }

      swift_release();
    }
    else
    {
      if (qword_2697EE9B0 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_24C849590();
      __swift_project_value_buffer(v26, (uint64_t)qword_2697F6FF8);
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_24C849570();
      os_log_type_t v28 = sub_24C84A0F0();
      if (os_log_type_enabled(v27, v28))
      {
        BOOL v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        uint64_t v54 = v30;
        *(_DWORD *)BOOL v29 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_24C7DE68C(v16, v17, &v54);
        sub_24C84A1A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24C7BE000, v27, v28, "%s receiveMessage has nil context", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v30, -1, -1);
        MEMORY[0x2532FCCC0](v29, -1, -1);

        return swift_release();
      }
    }
    swift_release();
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t *CosmoConnection.deinit()
{
  sub_24C7D6F70(v0[2]);
  sub_24C7D6F70(v0[4]);
  sub_24C7D6F70(v0[6]);
  unint64_t v1 = (char *)v0 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_id;
  uint64_t v2 = sub_24C849440();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24C7F5BE0((uint64_t)v0 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_descriptor);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t CosmoConnection.__deallocating_deinit()
{
  CosmoConnection.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

unint64_t sub_24C800780()
{
  unint64_t result = qword_2697EF2B8;
  if (!qword_2697EF2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF2B8);
  }
  return result;
}

uint64_t sub_24C8007D4()
{
  return sub_24C800E80(&qword_2697EF030, MEMORY[0x263F07508]);
}

uint64_t sub_24C80081C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC5Cosmo15CosmoConnection_id;
  uint64_t v4 = sub_24C849440();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

unsigned char *storeEnumTagSinglePayload for CosmoConnection.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C800978);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoConnection.State()
{
  return &type metadata for CosmoConnection.State;
}

uint64_t sub_24C8009B0()
{
  return type metadata accessor for CosmoConnection();
}

uint64_t sub_24C8009B8()
{
  uint64_t result = sub_24C849440();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for NetworkDescriptor();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for CosmoConnection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CosmoConnection);
}

uint64_t dispatch thunk of CosmoConnection.stateChangedCallback.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of CosmoConnection.stateChangedCallback.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of CosmoConnection.stateChangedCallback.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of CosmoConnection.messageCallback.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of CosmoConnection.messageCallback.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of CosmoConnection.messageCallback.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of CosmoConnection.newStreamHandler.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of CosmoConnection.newStreamHandler.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of CosmoConnection.newStreamHandler.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of CosmoConnection.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of CosmoConnection.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of CosmoConnection.send(data:messageTypeHeader:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t sub_24C800C9C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24C800CD4()
{
  return objectdestroy_28Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24C800CEC(uint64_t a1)
{
  return sub_24C7FE384(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

void sub_24C800CF8(uint64_t a1)
{
}

uint64_t sub_24C800D00()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C800D38(uint64_t a1)
{
  return sub_24C800F20(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_24C800D40(void *a1)
{
  return sub_24C800EF4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_24C800D48(int a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = *(uint64_t (**)(int *, void *))(v3 + 16);
  int v7 = a1;
  v6[0] = a2;
  v6[1] = a3;
  return v4(&v7, v6);
}

uint64_t sub_24C800D88(unsigned int *a1, void *a2)
{
  return (*(uint64_t (**)(void, void, void))(v2 + 16))(*a1, *a2, a2[1]);
}

uint64_t sub_24C800DBC()
{
  return objectdestroy_28Tm(MEMORY[0x263F8EEA0]);
}

uint64_t objectdestroy_28Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  return MEMORY[0x270FA0238](v1, 40, 7);
}

void sub_24C800E24(uint64_t a1)
{
  sub_24C7FC308(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24C800E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24C7FFD7C(a1, a2, a3, a4, a5);
}

uint64_t objectdestroy_55Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C800E80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24C800EF4(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_24C800F20(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3 = a1;
  return a2(&v3);
}

Cosmo::CosmoListener::State_optional __swiftcall CosmoListener.State.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24C84A340();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t CosmoListener.State.rawValue.getter()
{
  uint64_t v1 = 0x64656C696166;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656C65636E6163;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7964616572;
  }
}

uint64_t sub_24C801008(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24C7F2D30(*a1, *a2);
}

uint64_t sub_24C801014()
{
  return sub_24C84A510();
}

uint64_t sub_24C8010B0()
{
  sub_24C849F50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24C801138()
{
  return sub_24C84A510();
}

Cosmo::CosmoListener::State_optional sub_24C8011D0(Swift::String *a1)
{
  return CosmoListener.State.init(rawValue:)(*a1);
}

void sub_24C8011DC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x64656C696166;
  if (v2 != 1)
  {
    uint64_t v5 = 0x64656C65636E6163;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7964616572;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_24C801234@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_24C7F2264;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_24C7D6E3C(v4);
}

uint64_t sub_24C8012C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24C7F223C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  sub_24C7D6E3C(v3);
  return sub_24C7D6F70(v8);
}

uint64_t sub_24C801384@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 32);
  uint64_t v5 = *(void *)(v3 + 40);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_24C8047A0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_24C7D6E3C(v4);
}

uint64_t sub_24C801418(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24C804768;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 32);
  *(void *)(v7 + 32) = v6;
  *(void *)(v7 + 40) = v5;
  sub_24C7D6E3C(v3);
  return sub_24C7D6F70(v8);
}

uint64_t (*sub_24C8014D4())()
{
  return j_j__swift_endAccess;
}

uint64_t CosmoListener.__allocating_init(descriptor:queue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  CosmoListener.init(descriptor:queue:)(a1, a2);
  return v4;
}

_OWORD *CosmoListener.init(descriptor:queue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_24C84A150();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24C84A120();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_24C849BF0();
  MEMORY[0x270FA5388](v10 - 8);
  v2[2] = 0u;
  v2[3] = 0u;
  v2[1] = 0u;
  *(void *)((char *)v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_listener) = 0;
  *((unsigned char *)v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_restarting) = 0;
  sub_24C7F5C84(a1, (uint64_t)v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor);
  if (!a2)
  {
    unint64_t v14 = sub_24C7D5EF8();
    sub_24C849BE0();
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_24C8046E8((unint64_t *)&unk_2697EEAE0, MEMORY[0x263F8F0F8]);
    uint64_t v13 = v5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF330);
    sub_24C7D6170(&qword_2697EEAF0, (uint64_t *)&unk_2697EF330);
    sub_24C84A1F0();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F130], v13);
    a2 = sub_24C84A170();
  }
  sub_24C7F5BE0(a1);
  *(void *)((char *)v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue) = a2;
  return v2;
}

uint64_t sub_24C801820()
{
  uint64_t v1 = sub_24C849BD0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24C849BF0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue);
  aBlock[4] = sub_24C801E94;
  uint64_t v13 = v0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_4;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_24C849BE0();
  v11[1] = MEMORY[0x263F8EE78];
  sub_24C8046E8((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_24C801AB8(uint64_t a1)
{
  uint64_t v2 = sub_24C849650();
  MEMORY[0x270FA5388](v2 - 8);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo13CosmoListener_restarting) = 0;
  sub_24C7F6D40();
  swift_retain();
  sub_24C849640();
  sub_24C849700();
  swift_allocObject();
  *(void *)(a1 + OBJC_IVAR____TtC5Cosmo13CosmoListener_listener) = sub_24C8496E0();
  swift_retain();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_24C7D6E3C((uint64_t)sub_24C804804);
  sub_24C849690();
  swift_release_n();
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_24C7D6E3C((uint64_t)sub_24C80480C);
  sub_24C8496A0();
  swift_release_n();
  sub_24C8496D0();
  swift_release();
  return swift_release();
}

uint64_t sub_24C801E94()
{
  return sub_24C801AB8(v0);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_24C801EB4(void (*a1)(uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C801F74(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C801F14(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C80389C(a1);
    return swift_release();
  }
  return result;
}

void sub_24C801F74(void (*a1)(uint64_t, uint64_t))
{
  unint64_t v201 = a1;
  uint64_t v179 = sub_24C849440();
  uint64_t v178 = *(void *)(v179 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v179);
  os_log_t v199 = (os_log_t)((char *)&v168 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v2);
  uint64_t v172 = (uint64_t)&v168 - v4;
  uint64_t v176 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v176);
  char v177 = (uint64_t *)((char *)&v168 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v180 = sub_24C849660();
  uint64_t v183 = *(void *)(v180 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v180);
  uint64_t v171 = (uint64_t)&v168 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v173 = (uint64_t)&v168 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0C0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v175 = (uint64_t)&v168 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v182 = (char *)&v168 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v174 = (uint64_t)&v168 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v181 = (char *)&v168 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v188 = (uint64_t)&v168 - v19;
  MEMORY[0x270FA5388](v18);
  unint64_t v191 = (char *)&v168 - v20;
  unint64_t v198 = sub_24C849B10();
  uint64_t v200 = *(void *)(v198 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v198);
  unint64_t v185 = (char *)&v168 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v184 = (char *)&v168 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v189 = (char *)&v168 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  unint64_t v186 = (char *)&v168 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v190 = (char *)&v168 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  v193 = (char *)&v168 - v32;
  MEMORY[0x270FA5388](v31);
  v192 = (char *)&v168 - v33;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF2F0);
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  uint64_t v37 = (char *)&v168 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v196 = (char *)&v168 - v38;
  uint64_t v39 = sub_24C8496C0();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  os_log_t v197 = (os_log_t)((char *)&v168 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  v187 = (char *)&v168 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  int v47 = (char *)&v168 - v46;
  MEMORY[0x270FA5388](v45);
  uint64_t v49 = (char *)&v168 - v48;
  uint64_t v50 = sub_24C849C80();
  uint64_t v51 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  unsigned int v53 = (uint64_t *)((char *)&v168 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v194 = v1;
  uint64_t v54 = *(void **)(v1 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue);
  *unsigned int v53 = v54;
  (*(void (**)(void *, void, uint64_t))(v51 + 104))(v53, *MEMORY[0x263F8F0E0], v50);
  id v55 = v54;
  LOBYTE(v54) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v51 + 8))(v53, v50);
  if (v54)
  {
    if (qword_2697EE9B0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v56 = sub_24C849590();
  uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)qword_2697F6FF8);
  uint64_t v58 = *(void (**)(char *, void (*)(uint64_t, uint64_t), uint64_t))(v40 + 16);
  os_log_t v59 = v201;
  v58(v49, v201, v39);
  uint64_t v195 = v57;
  uint64_t v60 = sub_24C849570();
  int v61 = sub_24C84A110();
  if (os_log_type_enabled(v60, (os_log_type_t)v61))
  {
    int v170 = v61;
    id v62 = (uint8_t *)swift_slowAlloc();
    uint64_t v169 = swift_slowAlloc();
    v204[0] = v169;
    *(_DWORD *)id v62 = 136315138;
    uint64_t v63 = (uint64_t)v196;
    v58(v196, (void (*)(uint64_t, uint64_t))v49, v39);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v63, 0, 1, v39);
    sub_24C7D7BA4(v63, (uint64_t)v37, &qword_2697EF2F0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v37, 1, v39) == 1)
    {
      uint64_t v64 = 7104878;
      unint64_t v65 = 0xE300000000000000;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v47, v37, v39);
      v58(v187, (void (*)(uint64_t, uint64_t))v47, v39);
      uint64_t v64 = sub_24C849ED0();
      unint64_t v65 = v67;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v47, v39);
    }
    sub_24C7D7C08((uint64_t)v196, &qword_2697EF2F0);
    uint64_t v203 = sub_24C7DE68C(v64, v65, v204);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    BOOL v66 = *(void (**)(char *, uint64_t))(v40 + 8);
    v66(v49, v39);
    _os_log_impl(&dword_24C7BE000, v60, (os_log_type_t)v170, "[Listener] State update, state=%s", v62, 0xCu);
    uint64_t v68 = v169;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v68, -1, -1);
    MEMORY[0x2532FCCC0](v62, -1, -1);

    os_log_t v59 = v201;
  }
  else
  {
    BOOL v66 = *(void (**)(char *, uint64_t))(v40 + 8);
    v66(v49, v39);
  }
  os_log_t v69 = v197;
  v58((char *)v197, v59, v39);
  int v70 = (*(uint64_t (**)(os_log_t, uint64_t))(v40 + 88))(v69, v39);
  unint64_t v72 = v198;
  os_log_t v71 = v199;
  if (v70 == *MEMORY[0x263F14150])
  {
    (*(void (**)(os_log_t, uint64_t))(v40 + 96))(v69, v39);
    uint64_t v73 = v200;
    uint64_t v74 = *(void (**)(char *, os_log_t, unint64_t))(v200 + 32);
    uint64_t v75 = v192;
    v74(v192, v69, v72);
    uint64_t v76 = *(void (**)(char *, char *, unint64_t))(v73 + 16);
    uint64_t v77 = v193;
    v76(v193, v75, v72);
    unint64_t v78 = sub_24C849570();
    int v79 = sub_24C84A110();
    if (os_log_type_enabled(v78, (os_log_type_t)v79))
    {
      os_log_t v197 = v78;
      LODWORD(v201) = v79;
      uint64_t v80 = (uint8_t *)swift_slowAlloc();
      os_log_t v199 = (os_log_t)swift_slowAlloc();
      v204[0] = (uint64_t)v199;
      *(_DWORD *)uint64_t v80 = 136315138;
      uint64_t v81 = v77;
      uint64_t v82 = (uint64_t)v191;
      v76(v191, v81, v72);
      (*(void (**)(uint64_t, void, uint64_t, unint64_t))(v73 + 56))(v82, 0, 1, v72);
      uint64_t v83 = v82;
      uint64_t v84 = v188;
      sub_24C7D7BA4(v83, v188, (uint64_t *)&unk_2697EF0C0);
      int v85 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v73 + 48))(v84, 1, v72);
      uint64_t v86 = v73;
      uint64_t v87 = v194;
      if (v85 == 1)
      {
        uint64_t v88 = 7104878;
        unint64_t v89 = 0xE300000000000000;
      }
      else
      {
        unint64_t v111 = v190;
        v74(v190, (os_log_t)v84, v72);
        v76(v186, v111, v72);
        uint64_t v88 = sub_24C849ED0();
        unint64_t v89 = v112;
        char v113 = v111;
        uint64_t v75 = v192;
        (*(void (**)(char *, unint64_t))(v86 + 8))(v113, v72);
      }
      sub_24C7D7C08((uint64_t)v191, (uint64_t *)&unk_2697EF0C0);
      uint64_t v203 = sub_24C7DE68C(v88, v89, v204);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      uint64_t v107 = *(void (**)(char *, unint64_t))(v86 + 8);
      v107(v193, v72);
      os_log_t v114 = v197;
      _os_log_impl(&dword_24C7BE000, v197, (os_log_type_t)v201, "[Listener] Waiting for network to become available, error=%s", v80, 0xCu);
      os_log_t v115 = v199;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v115, -1, -1);
      MEMORY[0x2532FCCC0](v80, -1, -1);
    }
    else
    {
      uint64_t v107 = *(void (**)(char *, unint64_t))(v73 + 8);
      v107(v77, v72);

      uint64_t v87 = v194;
    }
    swift_beginAccess();
    uint64_t v116 = *(void (**)(uint64_t *))(v87 + 16);
    if (v116)
    {
      LOBYTE(v203) = 1;
      swift_retain();
      v116(&v203);
      sub_24C7D6F70((uint64_t)v116);
    }
    sub_24C803ED0();
    v107(v75, v72);
  }
  else if (v70 == *MEMORY[0x263F14148])
  {
    (*(void (**)(os_log_t, uint64_t))(v40 + 96))(v69, v39);
    uint64_t v90 = v200;
    unint64_t v91 = *(void (**)(char *, os_log_t, unint64_t))(v200 + 32);
    uint64_t v92 = v189;
    v91(v189, v69, v72);
    unint64_t v93 = v190;
    *(_DWORD *)uint64_t v190 = -65569;
    (*(void (**)(char *, void, unint64_t))(v90 + 104))(v93, *MEMORY[0x263F14310], v72);
    char v94 = MEMORY[0x2532FB950](v92, v93);
    os_log_t v95 = *(void (**)(char *, unint64_t))(v90 + 8);
    v95(v93, v72);
    uint64_t v96 = *(void (**)(char *, char *, unint64_t))(v90 + 16);
    if (v94)
    {
      uint64_t v97 = v184;
      v96(v184, v92, v72);
      uint64_t v98 = sub_24C849570();
      LODWORD(v201) = sub_24C84A110();
      if (os_log_type_enabled(v98, (os_log_type_t)v201))
      {
        os_log_t v199 = v98;
        char v99 = (uint8_t *)swift_slowAlloc();
        os_log_t v197 = (os_log_t)swift_slowAlloc();
        v204[0] = (uint64_t)v197;
        *(_DWORD *)char v99 = 136315138;
        uint64_t v100 = v97;
        uint64_t v101 = (uint64_t)v181;
        v96(v181, v100, v72);
        uint64_t v102 = v200;
        (*(void (**)(uint64_t, void, uint64_t, unint64_t))(v200 + 56))(v101, 0, 1, v72);
        uint64_t v103 = v101;
        uint64_t v104 = v174;
        sub_24C7D7BA4(v103, v174, (uint64_t *)&unk_2697EF0C0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v102 + 48))(v104, 1, v72) == 1)
        {
          uint64_t v105 = 7104878;
          unint64_t v106 = 0xE300000000000000;
        }
        else
        {
          uint64_t v151 = v190;
          v91(v190, (os_log_t)v104, v72);
          v96(v186, v151, v72);
          uint64_t v105 = sub_24C849ED0();
          unint64_t v106 = v152;
          v95(v151, v72);
        }
        os_log_type_t v153 = v201;
        sub_24C7D7C08((uint64_t)v181, (uint64_t *)&unk_2697EF0C0);
        uint64_t v203 = sub_24C7DE68C(v105, v106, v204);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        v95(v184, v72);
        os_log_type_t v154 = v153;
        os_log_t v155 = v199;
        _os_log_impl(&dword_24C7BE000, v199, v154, "[Listener] Failed with error=%s, restarting", v99, 0xCu);
        os_log_t v156 = v197;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v156, -1, -1);
        MEMORY[0x2532FCCC0](v99, -1, -1);

        uint64_t v92 = v189;
      }
      else
      {
        v95(v97, v72);
      }
      uint64_t v157 = v194;
      sub_24C803ED0();
      *(unsigned char *)(v157 + OBJC_IVAR____TtC5Cosmo13CosmoListener_restarting) = 1;
      sub_24C801820();
    }
    else
    {
      unint64_t v117 = v185;
      v96(v185, v92, v72);
      id v118 = sub_24C849570();
      LODWORD(v201) = sub_24C84A110();
      if (os_log_type_enabled(v118, (os_log_type_t)v201))
      {
        os_log_t v199 = v118;
        os_log_type_t v119 = (uint8_t *)swift_slowAlloc();
        os_log_t v197 = (os_log_t)swift_slowAlloc();
        v204[0] = (uint64_t)v197;
        *(_DWORD *)os_log_type_t v119 = 136315138;
        uint64_t v120 = v117;
        uint64_t v121 = (uint64_t)v182;
        v96(v182, v120, v72);
        uint64_t v122 = v200;
        (*(void (**)(uint64_t, void, uint64_t, unint64_t))(v200 + 56))(v121, 0, 1, v72);
        uint64_t v123 = v121;
        uint64_t v124 = v175;
        sub_24C7D7BA4(v123, v175, (uint64_t *)&unk_2697EF0C0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v122 + 48))(v124, 1, v72) == 1)
        {
          uint64_t v125 = 7104878;
          unint64_t v126 = 0xE300000000000000;
        }
        else
        {
          uint64_t v158 = v190;
          v91(v190, (os_log_t)v124, v72);
          v96(v186, v158, v72);
          uint64_t v125 = sub_24C849ED0();
          unint64_t v126 = v159;
          v95(v158, v72);
        }
        os_log_type_t v160 = v201;
        sub_24C7D7C08((uint64_t)v182, (uint64_t *)&unk_2697EF0C0);
        uint64_t v203 = sub_24C7DE68C(v125, v126, v204);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        v95(v185, v72);
        os_log_type_t v161 = v160;
        os_log_t v162 = v199;
        _os_log_impl(&dword_24C7BE000, v199, v161, "[Listener] Failed with error=%s, stopping", v119, 0xCu);
        os_log_t v163 = v197;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v163, -1, -1);
        MEMORY[0x2532FCCC0](v119, -1, -1);

        uint64_t v92 = v189;
      }
      else
      {
        v95(v117, v72);
      }
      sub_24C803ED0();
    }
    v95(v92, v72);
  }
  else if (v70 == *MEMORY[0x263F14140])
  {
    unint64_t v108 = sub_24C849570();
    os_log_type_t v109 = sub_24C84A0D0();
    if (os_log_type_enabled(v108, v109))
    {
      os_log_type_t v110 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v110 = 0;
      _os_log_impl(&dword_24C7BE000, v108, v109, "[Listener] Initialized but not started", v110, 2u);
      MEMORY[0x2532FCCC0](v110, -1, -1);
    }
  }
  else if (v70 == *MEMORY[0x263F14138])
  {
    uint64_t v127 = sub_24C849570();
    os_log_type_t v128 = sub_24C84A110();
    if (os_log_type_enabled(v127, v128))
    {
      uint64_t v129 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v129 = 0;
      _os_log_impl(&dword_24C7BE000, v127, v128, "[Listener] Ready to accept incoming connections", v129, 2u);
      MEMORY[0x2532FCCC0](v129, -1, -1);
    }

    uint64_t v130 = v194;
    uint64_t v131 = v179;
    if (!*(void *)(v194 + OBJC_IVAR____TtC5Cosmo13CosmoListener_listener)) {
      goto LABEL_68;
    }
    uint64_t v132 = v194 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor;
    swift_retain();
    uint64_t v133 = v173;
    sub_24C7F6760(v173);
    uint64_t v134 = sub_24C849610();
    uint64_t v135 = *(void (**)(uint64_t, uint64_t))(v183 + 8);
    v183 += 8;
    v135(v133, v180);
    if (v134)
    {
      uint64_t v203 = MEMORY[0x263F8EE78];
      uint64_t v136 = swift_unknownObjectRetain();
      MEMORY[0x2532FBEA0](v136);
      if (*(void *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24C84A080();
      }
      sub_24C84A0A0();
      sub_24C84A070();
      uint64_t v137 = v177;
      sub_24C7F5C84(v132, (uint64_t)v177);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v138 = v137[1];
        uint64_t v200 = *v137;
        unint64_t v201 = v135;
        v204[0] = v200;
        v204[1] = v138;
        unint64_t v198 = v138;
        uint64_t v139 = v172;
        sub_24C807B10(v172);
        uint64_t v140 = v178;
        (*(void (**)(os_log_t, uint64_t, uint64_t))(v178 + 16))(v71, v139, v131);
        os_log_t v141 = sub_24C849570();
        os_log_type_t v142 = sub_24C84A110();
        if (os_log_type_enabled(v141, v142))
        {
          id v143 = (uint8_t *)swift_slowAlloc();
          uint64_t v144 = swift_slowAlloc();
          v204[0] = v144;
          *(_DWORD *)id v143 = 136315138;
          sub_24C8046E8(&qword_2697EEC60, MEMORY[0x263F07508]);
          uint64_t v145 = sub_24C84A430();
          uint64_t v202 = sub_24C7DE68C(v145, v146, v204);
          uint64_t v131 = v179;
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          uint64_t v139 = v172;
          uint64_t v147 = *(void (**)(os_log_t, uint64_t))(v140 + 8);
          v147(v199, v131);
          _os_log_impl(&dword_24C7BE000, v141, v142, "[Listener] Advertising protocol-version v1 bonjour-serviceUUID=%s", v143, 0xCu);
          swift_arrayDestroy();
          uint64_t v148 = v144;
          uint64_t v130 = v194;
          MEMORY[0x2532FCCC0](v148, -1, -1);
          MEMORY[0x2532FCCC0](v143, -1, -1);
        }
        else
        {
          uint64_t v147 = *(void (**)(os_log_t, uint64_t))(v140 + 8);
          v147(v71, v131);
        }

        uint64_t v164 = v171;
        sub_24C7F8064(v171);
        if (sub_24C849610())
        {
          uint64_t v165 = swift_unknownObjectRetain();
          MEMORY[0x2532FBEA0](v165);
          if (*(void *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v203 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_24C84A080();
          }
          sub_24C84A0A0();
          sub_24C84A070();
          swift_unknownObjectRelease();
        }
        sub_24C7D5FEC(v200, v198);
        v201(v164, v180);
        v147((os_log_t)v139, v131);
      }
      else
      {
        sub_24C7F5BE0((uint64_t)v137);
      }
      unint64_t v166 = v203;
      sub_24C8496B0();
      advertiseEndpoints(_:onListener:)(v166);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_beginAccess();
      uint64_t v167 = *(void (**)(uint64_t *))(v130 + 16);
      if (v167)
      {
        LOBYTE(v202) = 0;
        swift_retain();
        v167(&v202);
        swift_unknownObjectRelease();
        sub_24C7D6F70((uint64_t)v167);
        swift_release();
      }
      else
      {
        swift_release();
        swift_unknownObjectRelease();
      }
    }
    else
    {
LABEL_68:
      sub_24C84A2B0();
      __break(1u);
    }
  }
  else if (v70 == *MEMORY[0x263F14158])
  {
    uint64_t v149 = v194;
    if ((*(unsigned char *)(v194 + OBJC_IVAR____TtC5Cosmo13CosmoListener_restarting) & 1) == 0)
    {
      swift_beginAccess();
      uint64_t v150 = *(void (**)(uint64_t *))(v149 + 16);
      if (v150)
      {
        LOBYTE(v203) = 2;
        swift_retain();
        v150(&v203);
        sub_24C7D6F70((uint64_t)v150);
      }
    }
  }
  else
  {
    v66((char *)v69, v39);
  }
}

uint64_t sub_24C80389C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v46 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  MEMORY[0x270FA5388](v46);
  int v47 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for NetworkDescriptor();
  uint64_t v5 = MEMORY[0x270FA5388](v48);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v43 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v13 = sub_24C849C80();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (id *)((char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8F0E0], v13);
  id v18 = v17;
  char v19 = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v19)
  {
    if (qword_2697EE9B0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v20 = sub_24C849590();
  __swift_project_value_buffer(v20, (uint64_t)qword_2697F6FF8);
  swift_retain_n();
  uint64_t v21 = sub_24C849570();
  os_log_type_t v22 = sub_24C84A110();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v45 = v2;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v49 = a1;
    v50[0] = v25;
    uint64_t v44 = v7;
    *(_DWORD *)uint64_t v24 = 136315138;
    sub_24C8498C0();
    id v43 = v18;
    swift_retain();
    uint64_t v26 = sub_24C849ED0();
    uint64_t v49 = sub_24C7DE68C(v26, v27, v50);
    uint64_t v7 = v44;
    sub_24C84A1A0();
    swift_release_n();
    id v18 = v43;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v21, v22, "[Listener] Received connection=%s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v25, -1, -1);
    uint64_t v28 = v24;
    uint64_t v2 = v45;
    MEMORY[0x2532FCCC0](v28, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v29 = v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor;
  sub_24C7F5C84(v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor, (uint64_t)v12);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF228);
      uint64_t v31 = (uint64_t)&v12[*(int *)(v30 + 48)];

      sub_24C7D7C08(v31, &qword_2697EF220);
      goto LABEL_13;
    case 2u:
      sub_24C7D5FEC(*(void *)v12, *((void *)v12 + 1));
      goto LABEL_10;
    case 3u:
      sub_24C7D5FEC(*((void *)v12 + 1), *((void *)v12 + 2));
      sub_24C7D5FEC(*((void *)v12 + 3), *((void *)v12 + 4));
      swift_unknownObjectRelease();
      uint64_t v35 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0) + 96)];
      uint64_t v36 = sub_24C849440();
      (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
LABEL_13:
      sub_24C7F5C84(v29, (uint64_t)v10);
      uint64_t v37 = self;
      id v38 = v18;
      swift_retain();
      id v39 = objc_msgSend(v37, sel_defaultManager);
      id v40 = objc_msgSend(v39, sel_temporaryDirectory);

      uint64_t v41 = v47;
      sub_24C849290();

      *uint64_t v41 = 15;
      sub_24C7F5C84((uint64_t)v10, (uint64_t)v7);
      type metadata accessor for CosmoHttpConnection(0);
      swift_allocObject();
      uint64_t v33 = sub_24C7E1E3C((uint64_t)v41, (uint64_t)v7, 0, a1, v18);
      sub_24C7F5BE0((uint64_t)v10);
      uint64_t v34 = *(void (**)(_OWORD *))(v2 + 48);
      if (v34) {
        goto LABEL_14;
      }
      return swift_release();
    default:
      sub_24C7D7C08((uint64_t)v12, &qword_2697EF220);
LABEL_10:
      sub_24C7F5C84(v29, (uint64_t)v10);
      sub_24C7F5C84((uint64_t)v10, (uint64_t)v7);
      type metadata accessor for CosmoConnection();
      swift_allocObject();
      id v32 = v18;
      swift_retain();
      uint64_t v33 = sub_24C7FB4D4((uint64_t)v7, 0, a1, v18);
      sub_24C7F5BE0((uint64_t)v10);
      swift_beginAccess();
      uint64_t v34 = *(void (**)(_OWORD *))(v2 + 32);
      if (v34)
      {
LABEL_14:
        swift_retain();
        v34(v33);
        sub_24C7D6F70((uint64_t)v34);
      }
      return swift_release();
  }
}

void sub_24C803ED0()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_24C849C80();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue);
  void *v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F0E0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v1 = OBJC_IVAR____TtC5Cosmo13CosmoListener_listener;
  if (*(void *)(v2 + OBJC_IVAR____TtC5Cosmo13CosmoListener_listener))
  {
    uint64_t v9 = qword_2697EE9B0;
    swift_retain();
    if (v9 == -1)
    {
LABEL_4:
      uint64_t v10 = sub_24C849590();
      __swift_project_value_buffer(v10, (uint64_t)qword_2697F6FF8);
      uint64_t v11 = sub_24C849570();
      os_log_type_t v12 = sub_24C84A110();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl(&dword_24C7BE000, v11, v12, "[Listener] Stopping", v13, 2u);
        MEMORY[0x2532FCCC0](v13, -1, -1);
      }

      sub_24C8496F0();
      *(void *)(v2 + v1) = 0;
      swift_release();
      swift_release();
      return;
    }
LABEL_13:
    swift_once();
    goto LABEL_4;
  }
  if (qword_2697EE9B0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_24C849590();
  __swift_project_value_buffer(v14, (uint64_t)qword_2697F6FF8);
  uint64_t v15 = sub_24C849570();
  os_log_type_t v16 = sub_24C84A0D0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v20 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v19 = sub_24C7DE68C(0x2928706F7473, 0xE600000000000000, &v20);
    sub_24C84A1A0();
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v18, -1, -1);
    MEMORY[0x2532FCCC0](v17, -1, -1);
  }
}

uint64_t *CosmoListener.deinit()
{
  sub_24C7D6F70(v0[2]);
  sub_24C7D6F70(v0[4]);
  sub_24C7D6F70(v0[6]);
  sub_24C7F5BE0((uint64_t)v0 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor);

  swift_release();
  return v0;
}

uint64_t CosmoListener.__deallocating_deinit()
{
  sub_24C7D6F70(v0[2]);
  sub_24C7D6F70(v0[4]);
  sub_24C7D6F70(v0[6]);
  sub_24C7F5BE0((uint64_t)v0 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor);

  swift_release();
  uint64_t v1 = *(unsigned int *)(*v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

unint64_t sub_24C804310()
{
  unint64_t result = qword_2697EF390;
  if (!qword_2697EF390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF390);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CosmoListener.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C804440);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoListener.State()
{
  return &type metadata for CosmoListener.State;
}

uint64_t sub_24C804478()
{
  return type metadata accessor for CosmoListener();
}

uint64_t type metadata accessor for CosmoListener()
{
  uint64_t result = qword_2697EF3A0;
  if (!qword_2697EF3A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24C8044CC()
{
  uint64_t result = type metadata accessor for NetworkDescriptor();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CosmoListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CosmoListener);
}

uint64_t dispatch thunk of CosmoListener.stateChangedCallback.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of CosmoListener.stateChangedCallback.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of CosmoListener.stateChangedCallback.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of CosmoListener.connectionReceivedCallback.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of CosmoListener.connectionReceivedCallback.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of CosmoListener.connectionReceivedCallback.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of CosmoListener.__allocating_init(descriptor:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of CosmoListener.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of CosmoListener.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t sub_24C8046E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24C804730()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C804768(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_24C8047A0(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_24C8047CC()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24C804804(void (*a1)(uint64_t, uint64_t))
{
  return sub_24C801EB4(a1);
}

uint64_t sub_24C80480C(uint64_t a1)
{
  return sub_24C801F14(a1);
}

uint64_t URL.fileSize.getter()
{
  uint64_t v0 = sub_24C80548C();
  if (!v0)
  {
    long long v7 = 0u;
    long long v8 = 0u;
    goto LABEL_13;
  }
  uint64_t v1 = v0;
  if (!*(void *)(v0 + 16))
  {
    long long v7 = 0u;
    long long v8 = 0u;
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  id v2 = (id)*MEMORY[0x263F080B8];
  unint64_t v3 = sub_24C8058D8((uint64_t)v2);
  if ((v4 & 1) == 0)
  {
    long long v7 = 0u;
    long long v8 = 0u;

    goto LABEL_12;
  }
  sub_24C7D788C(*(void *)(v1 + 56) + 32 * v3, (uint64_t)&v7);

  swift_bridgeObjectRelease();
  if (!*((void *)&v8 + 1))
  {
LABEL_13:
    sub_24C7F62D8((uint64_t)&v7);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v6;
  }
  else {
    return 0;
  }
}

id sub_24C804910(uint64_t a1, uint64_t a2)
{
  if (a2 <= 1) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = a2;
  }
  double v3 = (double)a1 / (double)v2;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F086F0]), sel_init);
  id result = objc_msgSend(v4, sel_setCountStyle_, 0);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 < 9.22337204e18)
  {
    id v6 = objc_msgSend(v4, sel_stringFromByteCount_, (uint64_t)v3);
    uint64_t v7 = sub_24C849E80();

    sub_24C849F80();
    return (id)v7;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t advertiseEndpoints(_:onListener:)(unint64_t a1)
{
  nw_array_create();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_24C84A2C0();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_10;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      MEMORY[0x2532FC0A0](i, a1);
      nw_array_append();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    for (uint64_t j = 0; j != v2; ++j)
      nw_array_append();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  nw_listener_set_advertise_endpoints();
  return swift_unknownObjectRelease();
}

uint64_t sub_24C804B24(uint64_t result, void *a2)
{
  uint64_t v2 = (void *)result;
  unint64_t v3 = a2[2];
  if (!v3) {
    goto LABEL_9;
  }
  uint64_t v4 = *(void *)(result + 16);
  if (!v4) {
    return 1;
  }
  uint64_t result = a2[4];
  uint64_t v6 = a2[5];
  if (result != v2[4] || v6 != v2[5])
  {
    uint64_t result = sub_24C84A440();
    BOOL v8 = 0;
    if ((result & 1) == 0) {
      return v8;
    }
  }
  unint64_t v9 = v3 - 1;
  if (v3 != 1)
  {
    uint64_t v11 = v4 - 1;
    os_log_type_t v12 = a2 + 7;
    uint64_t v13 = v2 + 7;
    while (v9)
    {
      BOOL v8 = v11 == 0;
      if (!v11) {
        return v8;
      }
      uint64_t result = *(v12 - 1);
      if (result != *(v13 - 1) || *v12 != *v13)
      {
        uint64_t result = sub_24C84A440();
        if ((result & 1) == 0) {
          return v8;
        }
      }
      --v11;
      v12 += 2;
      v13 += 2;
      if (!--v9) {
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    unint64_t v10 = v2[2];
    if (v3 == v10) {
      return 1;
    }
    if (v3 < v10) {
      return 0;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_24C804C1C(unint64_t *a1)
{
  unint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  uint64_t v3 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0) {
    uint64_t v3 = *a1;
  }
  uint64_t v4 = 7;
  if (((v1 >> 60) & ((v2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  if (sub_24C80665C(0xFuLL, v4 | (v3 << 16), v2, v1) != 1) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t result = sub_24C804CCC(v2, v1);
  if ((result & 0x100000000) != 0)
  {
    __break(1u);
  }
  else
  {
    char v6 = sub_24C849190();
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
  return result;
}

unint64_t sub_24C804CCC(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_24C8065BC(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      unsigned int v5 = sub_24C84A220();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0) {
        sub_24C84A270();
      }
      unsigned int v5 = sub_24C84A280();
    }
  }
  else
  {
    unsigned int v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

uint64_t sub_24C804DAC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    unsigned int v5 = (uint64_t (*)(void *))result;
    unint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(a3 + 40);
    uint64_t v8 = MEMORY[0x263F8EE78];
    uint64_t v15 = (uint64_t (*)(void *))result;
    while (v6 < *(void *)(v4 + 16))
    {
      uint64_t v10 = *(v7 - 1);
      uint64_t v9 = *v7;
      v18[0] = v10;
      v18[1] = v9;
      swift_bridgeObjectRetain();
      char v11 = v5(v18);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v11)
      {
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v19 = v8;
        if ((result & 1) == 0)
        {
          unint64_t result = sub_24C82F37C(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v19;
        }
        unint64_t v13 = *(void *)(v8 + 16);
        unint64_t v12 = *(void *)(v8 + 24);
        if (v13 >= v12 >> 1)
        {
          unint64_t result = sub_24C82F37C(v12 > 1, v13 + 1, 1);
          uint64_t v8 = v19;
        }
        *(void *)(v8 + 16) = v13 + 1;
        uint64_t v14 = v8 + 16 * v13;
        *(void *)(v14 + 32) = v10;
        *(void *)(v14 + 40) = v9;
        uint64_t v4 = a3;
        unsigned int v5 = v15;
      }
      else
      {
        unint64_t result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_24C804F24(uint64_t result, unint64_t a2, unint64_t a3)
{
  if (a3 - 37 < 0xFFFFFFFFFFFFFFDDLL)
  {
    __break(1u);
LABEL_76:
    swift_bridgeObjectRelease();
    unsigned __int8 v11 = 0;
    int v10 = 1;
    return v11 | (v10 << 8);
  }
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v6) {
    goto LABEL_76;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unsigned int v9 = sub_24C806230(result, a2, a3);
    swift_bridgeObjectRelease();
    int v10 = (v9 >> 8) & 1;
LABEL_12:
    if (v10) {
      unsigned __int8 v11 = 0;
    }
    else {
      unsigned __int8 v11 = v9;
    }
    return v11 | (v10 << 8);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_24C84A270();
    }
    unsigned int v9 = sub_24C806314(v8, v5, a3);
    int v10 = (v9 >> 8) & 1;
    goto LABEL_11;
  }
  v36[0] = result;
  v36[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v4)
    {
      uint64_t v21 = v4 - 1;
      if (v21)
      {
        LOBYTE(v13) = 0;
        unsigned __int8 v22 = a3 + 48;
        unsigned __int8 v23 = a3 + 55;
        unsigned __int8 v24 = a3 + 87;
        if (a3 > 0xA)
        {
          unsigned __int8 v22 = 58;
        }
        else
        {
          unsigned __int8 v24 = 97;
          unsigned __int8 v23 = 65;
        }
        uint64_t v25 = (unsigned __int8 *)v36 + 1;
        int v10 = 1;
        do
        {
          unsigned int v26 = *v25;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              LOBYTE(v9) = 0;
              if (v26 < 0x61 || v26 >= v24) {
                goto LABEL_11;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          __int16 v28 = v13 * a3;
          if ((v28 & 0xFF00) != 0) {
            goto LABEL_74;
          }
          unsigned int v13 = v28 + (v26 + v27);
          if ((v13 >> 8)) {
            goto LABEL_74;
          }
          ++v25;
          --v21;
        }
        while (v21);
LABEL_73:
        int v10 = 0;
        LOBYTE(v9) = v13;
        goto LABEL_11;
      }
      goto LABEL_74;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v4)
      {
        LOBYTE(v13) = 0;
        unsigned __int8 v29 = a3 + 48;
        unsigned __int8 v30 = a3 + 55;
        unsigned __int8 v31 = a3 + 87;
        if (a3 > 0xA)
        {
          unsigned __int8 v29 = 58;
        }
        else
        {
          unsigned __int8 v31 = 97;
          unsigned __int8 v30 = 65;
        }
        id v32 = (unsigned __int8 *)v36;
        int v10 = 1;
        while (1)
        {
          unsigned int v33 = *v32;
          if (v33 < 0x30 || v33 >= v29)
          {
            if (v33 < 0x41 || v33 >= v30)
            {
              LOBYTE(v9) = 0;
              if (v33 < 0x61 || v33 >= v31) {
                goto LABEL_11;
              }
              char v34 = -87;
            }
            else
            {
              char v34 = -55;
            }
          }
          else
          {
            char v34 = -48;
          }
          __int16 v35 = v13 * a3;
          if ((v35 & 0xFF00) != 0) {
            goto LABEL_74;
          }
          unsigned int v13 = v35 + (v33 + v34);
          if ((v13 >> 8)) {
            goto LABEL_74;
          }
          ++v32;
          if (!--v4) {
            goto LABEL_73;
          }
        }
      }
      goto LABEL_74;
    }
    if (v4)
    {
      uint64_t v12 = v4 - 1;
      if (v12)
      {
        LOBYTE(v13) = 0;
        unsigned __int8 v14 = a3 + 48;
        unsigned __int8 v15 = a3 + 55;
        unsigned __int8 v16 = a3 + 87;
        if (a3 > 0xA)
        {
          unsigned __int8 v14 = 58;
        }
        else
        {
          unsigned __int8 v16 = 97;
          unsigned __int8 v15 = 65;
        }
        uint64_t v17 = (unsigned __int8 *)v36 + 1;
        int v10 = 1;
        while (1)
        {
          unsigned int v18 = *v17;
          if (v18 < 0x30 || v18 >= v14)
          {
            if (v18 < 0x41 || v18 >= v15)
            {
              LOBYTE(v9) = 0;
              if (v18 < 0x61 || v18 >= v16) {
                goto LABEL_11;
              }
              char v19 = -87;
            }
            else
            {
              char v19 = -55;
            }
          }
          else
          {
            char v19 = -48;
          }
          __int16 v20 = v13 * a3;
          if ((v20 & 0xFF00) != 0) {
            break;
          }
          unsigned int v13 = v20 - (v18 + v19);
          if ((v13 & 0xFFFFFF00) != 0) {
            break;
          }
          ++v17;
          if (!--v12) {
            goto LABEL_73;
          }
        }
      }
LABEL_74:
      LOBYTE(v9) = 0;
      int v10 = 1;
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24C805280@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_12:
        __break(1u);
      }
      uint64_t v6 = (int)v6;
LABEL_6:
      if (v6 == 16)
      {
        sub_24C7FAA18();
        sub_24C8491B0();
        sub_24C849410();
        sub_24C7D5FEC(a1, a2);
        uint64_t v10 = sub_24C849440();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a3, 0, 1, v10);
      }
      else
      {
LABEL_8:
        sub_24C7D5FEC(a1, a2);
        uint64_t v12 = sub_24C849440();
        unsigned int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
        return v13(a3, 1, 1, v12);
      }
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v6 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_24C80548C()
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v0 = objc_msgSend(self, sel_defaultManager);
  sub_24C8492B0();
  unint64_t v1 = (void *)sub_24C849E50();
  swift_bridgeObjectRelease();
  id v14 = 0;
  id v2 = objc_msgSend(v0, sel_attributesOfItemAtPath_error_, v1, &v14);

  id v3 = v14;
  if (v2)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_24C806074(&qword_2697EED98, type metadata accessor for FileAttributeKey);
    uint64_t v4 = sub_24C849E00();
    id v5 = v3;
  }
  else
  {
    id v6 = v14;
    uint64_t v7 = (void *)sub_24C849240();

    swift_willThrow();
    id v17 = v7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
    sub_24C806034();
    swift_dynamicCast();
    uint64_t v8 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF208);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_24C84C230;
    id v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_24C84A230();
    swift_bridgeObjectRelease();
    id v14 = (id)0xD000000000000015;
    unint64_t v15 = 0x800000024C84FFE0;
    id v10 = objc_msgSend(v8, sel_description);
    sub_24C849E80();

    sub_24C849F80();
    swift_bridgeObjectRelease();
    id v11 = v14;
    unint64_t v12 = v15;
    *(void *)(v9 + 56) = MEMORY[0x263F8D310];
    *(void *)(v9 + 32) = v11;
    *(void *)(v9 + 40) = v12;
    sub_24C84A4C0();

    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t advertiseEndpoint(_:onListener:)()
{
  nw_array_create();
  swift_unknownObjectRetain();
  nw_array_append();
  nw_listener_set_advertise_endpoints();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

unint64_t sub_24C805780(uint64_t a1, uint64_t a2)
{
  sub_24C84A4E0();
  sub_24C849F50();
  uint64_t v4 = sub_24C84A510();
  return sub_24C805A20(a1, a2, v4);
}

unint64_t sub_24C8057F8(unsigned int a1)
{
  uint64_t v3 = MEMORY[0x2532FC320](*(void *)(v1 + 40), a1, 4);
  return sub_24C805B04(a1, v3);
}

unint64_t sub_24C805840(uint64_t a1)
{
  sub_24C849440();
  sub_24C806074(&qword_2697EF030, MEMORY[0x263F07508]);
  uint64_t v2 = sub_24C849E20();
  return sub_24C805BA0(a1, v2);
}

unint64_t sub_24C8058D8(uint64_t a1)
{
  sub_24C849E80();
  sub_24C84A4E0();
  sub_24C849F50();
  uint64_t v2 = sub_24C84A510();
  swift_bridgeObjectRelease();
  return sub_24C805D60(a1, v2);
}

unint64_t sub_24C80596C(uint64_t a1)
{
  sub_24C84A4E0();
  type metadata accessor for CFString(0);
  sub_24C806074(&qword_2697EF3B0, type metadata accessor for CFString);
  sub_24C849460();
  uint64_t v2 = sub_24C84A510();
  return sub_24C805ED8(a1, v2);
}

unint64_t sub_24C805A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_24C84A440() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unsigned int v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_24C84A440() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24C805B04(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_24C805BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_24C849440();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    unsigned int v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_24C806074(&qword_2697EF3C0, MEMORY[0x263F07508]);
      char v15 = sub_24C849E40();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_24C805D60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_24C849E80();
    uint64_t v8 = v7;
    if (v6 == sub_24C849E80() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_24C84A440();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_24C849E80();
          uint64_t v15 = v14;
          if (v13 == sub_24C849E80() && v15 == v16) {
            break;
          }
          char v18 = sub_24C84A440();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_24C805ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString(0);
    uint64_t v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_24C806074(&qword_2697EF3B0, type metadata accessor for CFString);
    id v7 = v6;
    char v8 = sub_24C849450();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_24C849450();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_24C806034()
{
  unint64_t result = qword_2697EF3B8;
  if (!qword_2697EF3B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2697EF3B8);
  }
  return result;
}

uint64_t sub_24C806074(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24C8060BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF3D8);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_24C84A300();
  __break(1u);
  return result;
}

uint64_t sub_24C806230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24C84A020();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    id v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_24C7EF464();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    id v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    id v7 = (unsigned __int8 *)sub_24C84A270();
  }
LABEL_7:
  unsigned __int16 v11 = (unsigned __int16)sub_24C806314(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FF;
}

unsigned __int8 *sub_24C806314(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }
        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          char v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v20 = -87;
              }
              else
              {
                char v20 = -55;
              }
            }
            else
            {
              char v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) + (v19 + v20);
            if ((v8 >> 8)) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            unsigned int v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v26 = -87;
              }
              else
              {
                char v26 = -55;
              }
            }
            else
            {
              char v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v24 = (v24 * a3) + (v25 + v26);
            if ((v24 >> 8)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          unint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_24C8065BC(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_24C806870(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_24C8068E0(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_24C80665C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = sub_24C8069F4(a1, a3, a4);
  unint64_t result = sub_24C8069F4(a2, a3, a4);
  unint64_t v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v11 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if ((a4 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_24C849F10();
        unint64_t v7 = result;
      }
      else
      {
        unint64_t v12 = v7 >> 16;
        if ((a4 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a3;
          uint64_t v23 = a4 & 0xFFFFFFFFFFFFFFLL;
          int v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          unint64_t result = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0) {
            unint64_t result = sub_24C84A270();
          }
          int v13 = *(unsigned __int8 *)(result + v12);
        }
        int v14 = (char)v13;
        unsigned int v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0) {
          LOBYTE(v15) = 1;
        }
        unint64_t v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14) {
        return v11;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    uint64_t v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_24C849F20();
        unint64_t v7 = result;
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          unint64_t v22 = a3;
          uint64_t v23 = a4 & 0xFFFFFFFFFFFFFFLL;
          if ((*((unsigned char *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            uint64_t v20 = 0;
            do
              int v21 = *((unsigned char *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            uint64_t v19 = 1 - v20;
          }
          else
          {
            uint64_t v19 = 1;
          }
        }
        else
        {
          unint64_t result = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0) {
            unint64_t result = sub_24C84A270();
          }
          uint64_t v17 = 0;
          do
            int v18 = *(unsigned char *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          uint64_t v19 = -v17;
        }
        unint64_t v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14) {
        return v11;
      }
    }
    goto LABEL_36;
  }
  return 0;
}

unint64_t sub_24C806870(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_24C7EF084(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_24C8068E0(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      void v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((unsigned char *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v10 = v5 - 1;
            int v11 = *((unsigned char *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          unint64_t v5 = v10;
        }
        return v5 << 16;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 != (a2 & 0xFFFFFFFFFFFFLL))
        {
          do
LABEL_9:
            int v7 = *(unsigned char *)(v6 + v5--) & 0xC0;
          while (v7 == 128);
          ++v5;
        }
      }
      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_24C84A270();
        unint64_t v5 = v12;
        if (v12 != v9) {
          goto LABEL_9;
        }
      }
      return v5 << 16;
    }
    uint64_t v8 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v8 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v8)
    {
      return MEMORY[0x270F9E998]();
    }
  }
  return result;
}

unint64_t sub_24C8069F4(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    unint64_t result = sub_24C806A94(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_24C8068E0(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
    }
  }
  return result;
}

unint64_t sub_24C806A94(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4 << v5) {
    unint64_t result = sub_24C7EF084(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 < result >> 16) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24C806B04(uint64_t a1, unint64_t a2)
{
  uint64_t v61 = *MEMORY[0x263EF8340];
  uint64_t v5 = (uint64_t *)sub_24C8491A0();
  unint64_t v6 = (void (**)(char *, void *))*(v5 - 1);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C849180();
  uint64_t v9 = sub_24C849F60();
  if (v9)
  {
    unint64_t v10 = (char *)v9;
    int v11 = (long long *)sub_24C80A888(v9, 0);
    swift_bridgeObjectRetain();
    unint64_t v12 = (char *)sub_24C80A7CC(v57, (uint64_t *)v11 + 4, (uint64_t)v10, a1, a2);
    swift_bridgeObjectRelease();
    if (v12 != v10) {
      goto LABEL_79;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    int v11 = (long long *)MEMORY[0x263F8EE78];
  }
  char v13 = sub_24C804B24((uint64_t)&unk_26FEF09E0, v11);
  swift_retain();
  swift_arrayDestroy();
  uint64_t v14 = swift_release();
  if ((v13 & 1) == 0)
  {
    uint64_t v17 = (uint64_t)v11;
    goto LABEL_16;
  }
  unint64_t v10 = v8;
  unint64_t v2 = *((void *)v11 + 2);
  if (v2 >= 2) {
    a2 = 2;
  }
  else {
    a2 = *((void *)v11 + 2);
  }
  sub_24C84A450();
  swift_unknownObjectRetain_n();
  uint64_t v15 = swift_dynamicCastClass();
  if (!v15)
  {
    swift_release();
    uint64_t v15 = MEMORY[0x263F8EE78];
  }
  uint64_t v16 = *(void *)(v15 + 16);
  swift_release();
  if (v16 != v2 - a2) {
    goto LABEL_80;
  }
  uint64_t v17 = swift_dynamicCastClass();
  uint64_t v14 = swift_release();
  uint64_t v8 = v10;
  if (v17) {
    goto LABEL_16;
  }
  uint64_t v17 = MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v14 = swift_release();
LABEL_16:
    MEMORY[0x270FA5388](v14);
    *(&v51 - 2) = (uint64_t)v8;
    uint64_t v18 = v17;
    a2 = 0;
    uint64_t v19 = (void *)sub_24C804DAC((uint64_t)sub_24C8072C0, (uint64_t)(&v51 - 4), v18);
    uint64_t v20 = v19;
    unint64_t v21 = v19[2];
    if (!v21)
    {
      swift_bridgeObjectRelease();
      v6[1](v8, v5);
      return 0;
    }
    long long v60 = xmmword_24C84C6B0;
    if ((v21 & 1) == 0)
    {
      unint64_t v2 = 0;
      goto LABEL_68;
    }
    uint64_t v23 = v19[4];
    unint64_t v24 = v19[5];
    uint64_t v25 = HIBYTE(v24) & 0xF;
    uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
    if ((v24 & 0x2000000000000000) != 0) {
      uint64_t v27 = HIBYTE(v24) & 0xF;
    }
    else {
      uint64_t v27 = v23 & 0xFFFFFFFFFFFFLL;
    }
    if (!v27)
    {
      __break(1u);
LABEL_82:
      swift_bridgeObjectRetain();
      LOWORD(v23) = sub_24C806230(v23, v24, 16);
      swift_bridgeObjectRelease();
      if ((v23 & 0x100) != 0) {
        goto LABEL_89;
      }
      goto LABEL_67;
    }
    if ((v24 & 0x1000000000000000) != 0) {
      goto LABEL_82;
    }
    if ((v24 & 0x2000000000000000) != 0)
    {
      v57[0] = v19[4];
      v57[1] = v24 & 0xFFFFFFFFFFFFFFLL;
      if (v23 == 43)
      {
        if (!v25) {
          goto LABEL_87;
        }
        if (!--v25)
        {
LABEL_89:
          __break(1u);
          JUMPOUT(0x24C8072B0);
        }
        LOBYTE(v23) = 0;
        unsigned int v33 = (unsigned __int8 *)v57 + 1;
        while (1)
        {
          int v34 = *v33;
          char v35 = v34 - 48;
          if ((v34 - 48) >= 0xA)
          {
            if ((v34 - 65) < 6)
            {
              char v35 = v34 - 55;
            }
            else
            {
              if ((v34 - 97) > 5) {
                break;
              }
              char v35 = v34 - 87;
            }
          }
          if (v23 > 0xFu) {
            break;
          }
          LOBYTE(v23) = v35 + 16 * v23;
          ++v33;
          if (!--v25) {
            goto LABEL_66;
          }
        }
      }
      else if (v23 == 45)
      {
        if (!v25)
        {
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          swift_bridgeObjectRelease();
          __break(1u);
        }
        if (!--v25) {
          goto LABEL_89;
        }
        LOBYTE(v23) = 0;
        unsigned __int8 v30 = (unsigned __int8 *)v57 + 1;
        while (1)
        {
          int v31 = *v30;
          unsigned __int8 v32 = v31 - 48;
          if ((v31 - 48) >= 0xA)
          {
            if ((v31 - 65) < 6)
            {
              unsigned __int8 v32 = v31 - 55;
            }
            else
            {
              if ((v31 - 97) > 5) {
                break;
              }
              unsigned __int8 v32 = v31 - 87;
            }
          }
          if (v23 > 0xFu) {
            break;
          }
          LODWORD(v23) = 16 * (v23 & 0xF) - v32;
          if ((v23 & 0xFFFFFF00) != 0) {
            break;
          }
          ++v30;
          if (!--v25) {
            goto LABEL_66;
          }
        }
      }
      else
      {
        if (!v25) {
          goto LABEL_89;
        }
        LOBYTE(v23) = 0;
        uint64_t v36 = (unsigned __int8 *)v57;
        while (1)
        {
          int v37 = *v36;
          char v38 = v37 - 48;
          if ((v37 - 48) >= 0xA)
          {
            if ((v37 - 65) < 6)
            {
              char v38 = v37 - 55;
            }
            else
            {
              if ((v37 - 97) > 5) {
                break;
              }
              char v38 = v37 - 87;
            }
          }
          if (v23 > 0xFu) {
            break;
          }
          LOBYTE(v23) = v38 + 16 * v23;
          ++v36;
          if (!--v25) {
            goto LABEL_66;
          }
        }
      }
      LOBYTE(v23) = 0;
      LODWORD(v25) = 1;
LABEL_66:
      if (v25) {
        goto LABEL_89;
      }
    }
    else
    {
      if ((v23 & 0x1000000000000000) != 0) {
        __int16 v28 = (unsigned __int8 *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        __int16 v28 = (unsigned __int8 *)sub_24C84A270();
      }
      unsigned int v29 = sub_24C806314(v28, v26, 16);
      if ((v29 >> 8)) {
        goto LABEL_89;
      }
      LOBYTE(v23) = v29;
    }
LABEL_67:
    a2 = (unint64_t)&qword_2697EF3C8;
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF3C8);
    uint64_t v58 = v39;
    uint64_t v59 = sub_24C7F2328(&qword_2697EF3D0, &qword_2697EF3C8);
    LOBYTE(v57[0]) = v23;
    char v56 = *(unsigned char *)__swift_project_boxed_opaque_existential_1(v57, v39);
    unint64_t v2 = 1;
    int v11 = &v60;
    sub_24C849310();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    if (v21 <= 1) {
      break;
    }
LABEL_68:
    uint64_t v52 = v8;
    unsigned int v53 = v6;
    uint64_t v54 = v5;
    id v40 = &v20[2 * v2 + 7];
    long long v55 = xmmword_24C84C6C0;
    unint64_t v10 = (char *)&qword_2697EF3E0;
    uint64_t v5 = &qword_2697EF3C8;
    unint64_t v6 = (void (**)(char *, void *))&qword_2697EF3D0;
    while (1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF3D8);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = v55;
      unint64_t v43 = v20[2];
      if (v2 >= v43) {
        break;
      }
      uint64_t v44 = *(v40 - 2);
      *(void *)(v42 + 32) = *(v40 - 3);
      *(void *)(v42 + 40) = v44;
      unint64_t v45 = v2 + 1;
      if (v2 + 1 >= v43) {
        goto LABEL_78;
      }
      a2 = (unint64_t)v20;
      uint64_t v46 = *v40;
      *(void *)(v42 + 48) = *(v40 - 1);
      *(void *)(v42 + 56) = v46;
      v57[0] = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF3E0);
      sub_24C7F2328(&qword_2697EF3E8, &qword_2697EF3E0);
      uint64_t v47 = sub_24C84A010();
      __int16 v49 = sub_24C804F24(v47, v48, 0x10uLL);
      if ((v49 & 0x100) != 0) {
        goto LABEL_88;
      }
      char v50 = v49;
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF3C8);
      uint64_t v58 = v41;
      uint64_t v59 = sub_24C7F2328(&qword_2697EF3D0, &qword_2697EF3C8);
      LOBYTE(v57[0]) = v50;
      char v56 = *(unsigned char *)__swift_project_boxed_opaque_existential_1(v57, v41);
      int v11 = &v60;
      sub_24C849310();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
      v40 += 4;
      unint64_t v2 = v45 + 1;
      if (v45 + 1 >= v21)
      {
        swift_bridgeObjectRelease();
        unint64_t v6 = v53;
        uint64_t v5 = v54;
        uint64_t v8 = v52;
        goto LABEL_76;
      }
    }
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    swift_release();
    uint64_t v17 = sub_24C8060BC((uint64_t)v11, (uint64_t)(v11 + 2), a2, (2 * v2) | 1);
    uint64_t v8 = v10;
  }
  swift_bridgeObjectRelease();
LABEL_76:
  v6[1](v8, v5);
  return v60;
}

unint64_t sub_24C8072C0(unint64_t *a1)
{
  return sub_24C804C1C(a1) & 1;
}

uint64_t static TransferConstants.currentProtocolVersion.getter()
{
  return 2;
}

uint64_t static TransferConstants.pinFlowProtocolVersion.getter()
{
  return 1;
}

uint64_t static TransferConstants.pinlessFlowProtocolVersion.getter()
{
  return 2;
}

ValueMetadata *type metadata accessor for TransferConstants()
{
  return &type metadata for TransferConstants;
}

uint64_t static SharedSecret.accV2Compatible(protocolVersion:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  if ((result - 5) < 0xFCu)
  {
    __break(1u);
    goto LABEL_8;
  }
  char v3 = result;
  uint64_t v4 = MEMORY[0x263F8E778];
  uint64_t v5 = sub_24C84A090();
  *(void *)(v5 + 16) = 2;
  *(_WORD *)(v5 + 32) = 0;
  SecRandomCopyBytes((SecRandomRef)*MEMORY[0x263F17510], 2uLL, (void *)(v5 + 32));
  uint64_t v6 = sub_24C80ABE8((unsigned char *)(v5 + 32), (unsigned char *)(v5 + 34));
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (v3 == 1)
  {
    LOBYTE(v9) = 1;
    goto LABEL_5;
  }
  unint64_t result = sub_24C80A200(4);
  __int16 v9 = ((4 * v3 - 4) & 0xFC) + result;
  if ((v9 & 0x100) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
LABEL_5:
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFLL;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF3F0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_24C84C230;
  uint64_t v12 = MEMORY[0x263F8E7C0];
  *(void *)(v11 + 56) = v4;
  *(void *)(v11 + 64) = v12;
  *(unsigned char *)(v11 + 32) = v9;
  uint64_t v17 = sub_24C849EA0();
  unint64_t v18 = v13;
  SharedSecret.asLowercasedHex.getter();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  unint64_t result = sub_24C806B04(v17, v18);
  if (v14 >> 60 != 15)
  {
    uint64_t v15 = result;
    uint64_t v16 = v14;
    unint64_t result = sub_24C7D5FEC(v6, v10);
    *a2 = v15;
    a2[1] = v16;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t SharedSecret.advertisementIdentifer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_24C849D30();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  __int16 v9 = (char *)&v37 - v8;
  uint64_t v10 = *v1;
  unint64_t v11 = v1[1];
  uint64_t v38 = *v1;
  unint64_t v39 = v11;
  __int16 v12 = SharedSecret.protocolVersion.getter();
  if ((v12 & 0x100) != 0 || (v12 & 0xFE) == 0)
  {
    uint64_t v38 = v10;
    unint64_t v39 = v11;
    return sub_24C807B10(a1);
  }
  else
  {
    uint64_t v38 = v10;
    unint64_t v39 = v11;
    sub_24C7D60D0(v10, v11);
    sub_24C849D20();
    uint64_t v13 = sub_24C807F74(0x696669746E656469uLL, 0xEA00000000007265);
    unint64_t v15 = v14;
    uint64_t v38 = v13;
    unint64_t v39 = v14;
    sub_24C849DE0();
    sub_24C80BAA0(&qword_2697EF280, MEMORY[0x263F047F8]);
    sub_24C7FAA18();
    sub_24C849DC0();
    sub_24C7D5FEC(v13, v15);
    uint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
    v16(v7, v3);
    sub_24C849D10();
    v16(v9, v3);
    uint64_t v18 = v38;
    unint64_t v17 = v39;
    switch(v39 >> 62)
    {
      case 1uLL:
        uint64_t v20 = (v38 >> 32) - (int)v38;
        if (v38 >> 32 < (int)v38) {
          goto LABEL_32;
        }
        sub_24C7D60D0(v38, v39);
        uint64_t v21 = sub_24C8491E0();
        if (!v21) {
          goto LABEL_11;
        }
        uint64_t v22 = sub_24C849210();
        if (__OFSUB__((int)v18, v22)) {
          goto LABEL_35;
        }
        v21 += (int)v18 - v22;
LABEL_11:
        uint64_t v23 = sub_24C849200();
        if (v23 >= v20) {
          uint64_t v24 = (v18 >> 32) - (int)v18;
        }
        else {
          uint64_t v24 = v23;
        }
        uint64_t v25 = v21 + v24;
        if (v21) {
          uint64_t v26 = v25;
        }
        else {
          uint64_t v26 = 0;
        }
        sub_24C808D90(v21, v26);
        sub_24C7D5FEC(v18, v17);
        break;
      case 2uLL:
        uint64_t v27 = *(void *)(v38 + 16);
        uint64_t v28 = *(void *)(v38 + 24);
        swift_retain();
        swift_retain();
        uint64_t v29 = sub_24C8491E0();
        if (!v29) {
          goto LABEL_21;
        }
        uint64_t v30 = sub_24C849210();
        if (__OFSUB__(v27, v30)) {
          goto LABEL_34;
        }
        v29 += v27 - v30;
LABEL_21:
        BOOL v31 = __OFSUB__(v28, v27);
        uint64_t v32 = v28 - v27;
        if (v31) {
          goto LABEL_33;
        }
        uint64_t v33 = sub_24C849200();
        if (v33 >= v32) {
          uint64_t v34 = v32;
        }
        else {
          uint64_t v34 = v33;
        }
        uint64_t v35 = v29 + v34;
        if (v29) {
          uint64_t v36 = v35;
        }
        else {
          uint64_t v36 = 0;
        }
        sub_24C808D90(v29, v36);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        __break(1u);
        JUMPOUT(0x24C807878);
      default:
        if ((v39 & 0xF0000000000000) == 0)
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
        }
        sub_24C849410();
        break;
    }
    return sub_24C7D5FEC(v18, v17);
  }
}

uint64_t SharedSecret.asACCV2CompatibileHex.getter()
{
  long long v11 = *v0;
  uint64_t v1 = SharedSecret.asLowercasedHex.getter();
  unint64_t v3 = v2;
  uint64_t v4 = sub_24C849F60();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_24C80A888(v4, 0);
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_24C80A7CC(&v11, v6 + 4, v5, v1, v3);
    uint64_t result = swift_bridgeObjectRelease();
    if (v7 != (void *)v5)
    {
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v9 = v6[2];
  unint64_t v10 = v9 - 5;
  if (v9 < 5) {
    unint64_t v10 = 0;
  }
  *(void *)&long long v11 = v6;
  *((void *)&v11 + 1) = v6 + 4;
  unint64_t v12 = v10;
  uint64_t v13 = (2 * v9) | 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF3F8);
  sub_24C7F2328(&qword_2697EF400, &qword_2697EF3F8);
  return sub_24C84A010();
}

uint64_t SharedSecret.protocolVersion.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  int v3 = 1;
  int v4 = 0;
  switch(v2 >> 62)
  {
    case 1uLL:
      if ((v1 ^ (unint64_t)(v1 << 32)) >> 32) {
        goto LABEL_8;
      }
      goto LABEL_7;
    case 2uLL:
      if (*(void *)(v1 + 16) == *(void *)(v1 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      return v4 | (v3 << 8);
    default:
      if ((v2 & 0xFF000000000000) != 0)
      {
LABEL_8:
        unsigned __int8 v5 = sub_24C849390();
        if (v5 == 1) {
          int v4 = 1;
        }
        else {
          int v4 = (v5 >> 2) + 1;
        }
        int v3 = 0;
      }
      else
      {
LABEL_7:
        int v4 = 0;
      }
      return v4 | (v3 << 8);
  }
}

uint64_t SharedSecret.init(length:)@<X0>(size_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_24C808E00(0, a1);
  unsigned __int8 v5 = (const __SecRandom *)*MEMORY[0x263F17510];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = (uint64_t)sub_24C809A60(0, *(void *)(v4 + 16), 0, (char *)v4);
  }
  SecRandomCopyBytes(v5, a1, (void *)(v4 + 32));
  uint64_t v6 = sub_24C80ACAC((unsigned char *)(v4 + 32), a1);
  uint64_t v8 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v6;
  a2[1] = v8;
  return result;
}

uint64_t sub_24C807B10@<X0>(uint64_t a1@<X8>)
{
  v15[1] = a1;
  v18[3] = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24C849DE0();
  uint64_t v17 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24C849D00();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v16 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v15 - v9;
  uint64_t v11 = *v1;
  unint64_t v12 = v1[1];
  sub_24C7D60D0(*v1, v12);
  sub_24C80BAA0(&qword_2697EF280, MEMORY[0x263F047F8]);
  sub_24C849CE0();
  switch(v12 >> 62)
  {
    case 1uLL:
      if (v11 >> 32 < (int)v11) {
        goto LABEL_11;
      }
      v15[0] = v12 & 0x3FFFFFFFFFFFFFFFLL;
      sub_24C7D60D0(v11, v12);
      sub_24C809FFC((int)v11, v11 >> 32);
      break;
    case 2uLL:
      uint64_t v13 = *(void *)(v11 + 16);
      v15[0] = *(void *)(v11 + 24);
      sub_24C7D60D0(v11, v12);
      swift_retain();
      swift_retain();
      sub_24C809FFC(v13, v15[0]);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v18, 0, 14);
      goto LABEL_7;
    default:
      v18[0] = v11;
      LOWORD(v18[1]) = v12;
      BYTE2(v18[1]) = BYTE2(v12);
      BYTE3(v18[1]) = BYTE3(v12);
      BYTE4(v18[1]) = BYTE4(v12);
      BYTE5(v18[1]) = BYTE5(v12);
LABEL_7:
      sub_24C849CC0();
      break;
  }
  sub_24C7D5FEC(v11, v12);
  sub_24C849CD0();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v2);
  sub_24C7D5FEC(v11, v12);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v16, v10, v5);
  sub_24C80BAA0(&qword_2697EF458, MEMORY[0x263F045C0]);
  if (*(void *)(sub_24C84A040() + 16) < 0x10uLL)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  sub_24C849410();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
}

uint64_t sub_24C807F74(unint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF448);
  if (swift_dynamicCast())
  {
    sub_24C7D76C8(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    sub_24C849230();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_24C80B9B4((uint64_t)v38);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_24C84A270();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_24C80B6F8(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_24C849FB0();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_24C80B75C(v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x270FA5388](*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_24C809C80((void *(*)(uint64_t *__return_ptr, char *, char *))sub_24C80BA14);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_24C849310();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_24C7EF084(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_24C849FF0();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_24C84A270();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_24C7EF084(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_24C849FC0();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_24C849320();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  uint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_24C849320();
    sub_24C7D6044(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_24C7D6044((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t sub_24C80849C(uint64_t a1, unint64_t a2)
{
  v28[5] = *MEMORY[0x263EF8340];
  uint64_t v28[3] = MEMORY[0x263F06F78];
  v28[4] = MEMORY[0x263F06F68];
  v28[0] = a1;
  v28[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v28, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      sub_24C7D60D0(a1, a2);
      sub_24C7D60D0(v5, v6);
      uint64_t v8 = (unsigned char *)sub_24C8491E0();
      if (v8)
      {
        uint64_t v9 = sub_24C849210();
        if (!__OFSUB__((int)v5, v9))
        {
          v8 += (int)v5 - v9;
          goto LABEL_7;
        }
LABEL_31:
        __break(1u);
      }
LABEL_7:
      uint64_t v10 = sub_24C849200();
      if (v10 >= (v5 >> 32) - (int)v5) {
        uint64_t v11 = (v5 >> 32) - (int)v5;
      }
      else {
        uint64_t v11 = v10;
      }
      uint64_t v12 = &v8[v11];
      if (v8) {
        unint64_t v13 = v12;
      }
      else {
        unint64_t v13 = 0;
      }
      sub_24C809F84(v8, v13, &v27);
      sub_24C7D5FEC(v5, v6);
LABEL_27:
      sub_24C7D5FEC(a1, a2);
      uint64_t v24 = v27;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      return v24;
    case 2uLL:
      uint64_t v14 = *(void *)(v5 + 16);
      uint64_t v15 = *(void *)(v5 + 24);
      sub_24C7D60D0(a1, a2);
      swift_retain();
      swift_retain();
      uint64_t v16 = (unsigned char *)sub_24C8491E0();
      if (!v16) {
        goto LABEL_17;
      }
      uint64_t v17 = sub_24C849210();
      if (__OFSUB__(v14, v17)) {
        goto LABEL_30;
      }
      v16 += v14 - v17;
LABEL_17:
      BOOL v18 = __OFSUB__(v15, v14);
      uint64_t v19 = v15 - v14;
      if (v18) {
        goto LABEL_29;
      }
      uint64_t v20 = sub_24C849200();
      if (v20 >= v19) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = v20;
      }
      uint64_t v22 = &v16[v21];
      if (v16) {
        BOOL v23 = v22;
      }
      else {
        BOOL v23 = 0;
      }
      sub_24C809F84(v16, v23, &v27);
      swift_release();
      swift_release();
      goto LABEL_27;
    case 3uLL:
      memset(v26, 0, 14);
      sub_24C7D60D0(a1, a2);
      uint64_t v7 = v26;
      goto LABEL_26;
    default:
      v26[0] = *v4;
      LOWORD(v26[1]) = v6;
      BYTE2(v26[1]) = BYTE2(v6);
      BYTE3(v26[1]) = BYTE3(v6);
      BYTE4(v26[1]) = BYTE4(v6);
      BYTE5(v26[1]) = BYTE5(v6);
      sub_24C7D60D0(a1, a2);
      uint64_t v7 = (char *)v26 + BYTE6(v6);
LABEL_26:
      sub_24C809F84(v26, v7, &v27);
      goto LABEL_27;
  }
}

uint64_t sub_24C808750(uint64_t a1, uint64_t a2)
{
  void v8[3] = MEMORY[0x263F8D3E8];
  v8[4] = MEMORY[0x263F07B80];
  v8[0] = a1;
  v8[1] = a2;
  unint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x263F8D3E8]);
  unint64_t v3 = (unsigned char *)*v2;
  if (*v2 && (v4 = (unsigned char *)v2[1], uint64_t v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_24C80ABE8(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_24C80B5F8((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      uint64_t v6 = sub_24C80B674((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

BOOL static ClosedReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ClosedReason.hash(into:)()
{
  return sub_24C84A4F0();
}

uint64_t ClosedReason.hashValue.getter()
{
  return sub_24C84A510();
}

uint64_t SharedSecret.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_24C7D60D0(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t SharedSecret.asLowercasedHex.getter()
{
  uint64_t v1 = sub_24C849370();
  uint64_t v14 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)v0;
  unint64_t v4 = *(void *)(v0 + 8);
  switch(v4 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_24C7D60D0(*(void *)v0, *(void *)(v0 + 8));
      sub_24C7D60D0(v5, v4);
      break;
    default:
      break;
  }
  sub_24C849380();
  sub_24C7D5FEC(v5, v4);
  sub_24C80BAA0(&qword_2697EF408, MEMORY[0x263F06F40]);
  sub_24C84A190();
  if (v19)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
    long long v15 = xmmword_24C84C230;
    uint64_t v8 = MEMORY[0x263F8E778];
    uint64_t v9 = MEMORY[0x263F8E7C0];
    do
    {
      char v10 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF3F0);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = v15;
      *(void *)(v11 + 56) = v8;
      *(void *)(v11 + 64) = v9;
      *(unsigned char *)(v11 + 32) = v10;
      sub_24C849EA0();
      uint64_t v16 = v6;
      unint64_t v17 = v7;
      swift_bridgeObjectRetain();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v16;
      unint64_t v7 = v17;
      sub_24C84A190();
    }
    while (v19 != 1);
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v1);
  return v6;
}

uint64_t SharedSecret.init(hexEncoded:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_24C806B04(a1, a2);
  if (v5 >> 60 == 15) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = result;
  }
  unint64_t v7 = 0xF000000000000000;
  if (v5 >> 60 != 15) {
    unint64_t v7 = v5;
  }
  *a3 = v6;
  a3[1] = v7;
  return result;
}

uint64_t static SharedSecret.accV2Compatibile.getter@<X0>(uint64_t *a1@<X8>)
{
  return static SharedSecret.accV2Compatible(protocolVersion:)(2, a1);
}

uint64_t SharedSecret.asURLSafeBase64Encoded.getter()
{
  uint64_t v0 = sub_24C8491A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24C849340();
  uint64_t v18 = v4;
  uint64_t v15 = 43;
  unint64_t v16 = 0xE100000000000000;
  uint64_t v13 = 45;
  unint64_t v14 = 0xE100000000000000;
  sub_24C80AD60();
  uint64_t v5 = sub_24C84A1D0();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v17 = v5;
  uint64_t v18 = v7;
  uint64_t v15 = 47;
  unint64_t v16 = 0xE100000000000000;
  uint64_t v13 = 95;
  unint64_t v14 = 0xE100000000000000;
  uint64_t v8 = sub_24C84A1D0();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v17 = v8;
  uint64_t v18 = v10;
  sub_24C849180();
  uint64_t v11 = sub_24C84A1C0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_24C808D78@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_24C809648(a1, a2, a3);
}

uint64_t sub_24C808D90(uint64_t result, uint64_t a2)
{
  if (result && (unint64_t)(a2 - result + 15) >= 0x1F) {
    return sub_24C849410();
  }
  __break(1u);
  return result;
}

uint64_t sub_24C808E00(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_24C84A2A0();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v4 = sub_24C84A090();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return v4;
  }
  return result;
}

uint64_t SharedSecret.init(data:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t SharedSecret.init(urlSafeBase64Encoded:)@<X0>(uint64_t *a1@<X8>)
{
  sub_24C80AD60();
  sub_24C84A1D0();
  swift_bridgeObjectRelease();
  sub_24C84A1D0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_24C849F60();
  uint64_t v3 = v2 & 3;
  if (v2 <= 0) {
    uint64_t v3 = -(-v2 & 3);
  }
  if (v3 >= 1)
  {
    uint64_t v4 = 4 - v3;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_24C849F60();
    swift_bridgeObjectRelease();
    uint64_t result = v5 + v4;
    if (__OFADD__(v5, v4))
    {
      __break(1u);
      return result;
    }
    sub_24C84A1E0();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = sub_24C8492F0();
  unint64_t v9 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  if (v9 >> 60 == 15) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = v7;
  }
  unint64_t v11 = 0xF000000000000000;
  if (v9 >> 60 != 15) {
    unint64_t v11 = v9;
  }
  *a1 = v10;
  a1[1] = v11;
  return result;
}

uint64_t SharedSecret.init(accCompatibileHexEncoded:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (sub_24C849F60() == 5)
  {
    uint64_t result = sub_24C806B04(a1, a2);
    if (v7 >> 60 == 15) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = result;
    }
    unint64_t v9 = 0xF000000000000000;
    if (v7 >> 60 != 15) {
      unint64_t v9 = v7;
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = 0;
    unint64_t v9 = 0xF000000000000000;
  }
  *a3 = v8;
  a3[1] = v9;
  return result;
}

uint64_t SharedSecret.init(pinCode:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24C849EC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C849EB0();
  uint64_t v6 = sub_24C849E90();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    *a1 = v6;
    a1[1] = v8;
  }
  return result;
}

uint64_t PinCode.value.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24C80925C()
{
  void v23[2] = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_24C849DE0();
  uint64_t v22 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24C849D00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *v0;
  unint64_t v8 = v0[1];
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24C807F74(v9, v8);
  unint64_t v12 = v11;
  sub_24C80BAA0(&qword_2697EF280, MEMORY[0x263F047F8]);
  sub_24C849CE0();
  switch(v12 >> 62)
  {
    case 1uLL:
      uint64_t v21 = v5;
      if (v10 >> 32 < (int)v10) {
        __break(1u);
      }
      uint64_t v20 = 0;
      sub_24C7D60D0(v10, v12);
      sub_24C809FFC((int)v10, v10 >> 32);
      sub_24C7D5FEC(v10, v12);
      uint64_t v5 = v21;
      goto LABEL_9;
    case 2uLL:
      uint64_t v20 = 0;
      uint64_t v21 = v5;
      uint64_t v13 = v4;
      uint64_t v15 = *(void *)(v10 + 16);
      uint64_t v14 = *(void *)(v10 + 24);
      sub_24C7D60D0(v10, v12);
      swift_retain();
      swift_retain();
      uint64_t v16 = v15;
      uint64_t v17 = v14;
      uint64_t v4 = v13;
      uint64_t v5 = v21;
      sub_24C809FFC(v16, v17);
      swift_release();
      swift_release();
      goto LABEL_8;
    case 3uLL:
      memset(v23, 0, 14);
      goto LABEL_7;
    default:
      v23[0] = v10;
      LOWORD(v23[1]) = v12;
      BYTE2(v23[1]) = BYTE2(v12);
      BYTE3(v23[1]) = BYTE3(v12);
      BYTE4(v23[1]) = BYTE4(v12);
      BYTE5(v23[1]) = BYTE5(v12);
LABEL_7:
      sub_24C849CC0();
LABEL_8:
      sub_24C7D5FEC(v10, v12);
LABEL_9:
      sub_24C849CD0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v1);
      sub_24C7D5FEC(v10, v12);
      sub_24C849CF0();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return v23[0];
  }
}

uint64_t sub_24C809648@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  if (a1)
  {
    uint64_t v5 = a1;
    uint64_t v6 = (char *)MEMORY[0x263F8EE78];
    if (a2) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v6 = (char *)MEMORY[0x263F8EE78];
    if (!a2) {
      goto LABEL_7;
    }
    uint64_t v5 = 0;
  }
  do
  {
    do
    {
      char v12 = *v5++;
      char v11 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_24C809A60(0, *((void *)v6 + 2) + 1, 1, v6);
      }
      unint64_t v14 = *((void *)v6 + 2);
      unint64_t v13 = *((void *)v6 + 3);
      if (v14 >= v13 >> 1) {
        uint64_t v6 = sub_24C809A60((char *)(v13 > 1), v14 + 1, 1, v6);
      }
      *((void *)v6 + 2) = v14 + 1;
      v6[v14 + 32] = v11;
    }
    while (!a2);
LABEL_6:
    ;
  }
  while (v5 != a2);
LABEL_7:
  uint64_t v7 = sub_24C80B8F4((uint64_t)v6);
  uint64_t v9 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v7;
  a3[1] = v9;
  return result;
}

Cosmo::PinCode __swiftcall PinCode.init(stringLiteral:)(Cosmo::PinCode stringLiteral)
{
  *uint64_t v1 = stringLiteral;
  return stringLiteral;
}

uint64_t static PinCode.random(length:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if ((unint64_t)(result - 9) >= 0xFFFFFFFFFFFFFFF8)
  {
    uint64_t v3 = result;
    uint64_t v4 = 0;
    uint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
    while (v4 != v3)
    {
      unint64_t v7 = 0;
      MEMORY[0x2532FCCD0](&v7, 8);
      unint64_t v5 = v7;
      if (10 * v7 <= 5)
      {
        do
        {
          unint64_t v7 = 0;
          MEMORY[0x2532FCCD0](&v7, 8);
          unint64_t v5 = v7;
        }
        while (10 * v7 < 6);
      }
      ++v4;
      unint64_t v7 = (v5 * (unsigned __int128)0xAuLL) >> 64;
      sub_24C84A430();
      sub_24C849F80();
      uint64_t result = swift_bridgeObjectRelease();
      if (v4 == v3)
      {
        unint64_t v6 = v9;
        *a2 = v8;
        a2[1] = v6;
        return result;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t PinCode.description.getter()
{
  return 0x2865646F436E6950;
}

uint64_t static PinCode.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24C84A440();
  }
}

uint64_t sub_24C809914()
{
  return 0x2865646F436E6950;
}

void *sub_24C809990@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_24C80999C(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24C84A440();
  }
}

Cosmo::PinCode __swiftcall PinCode.init(integerLiteral:)(Swift::Int integerLiteral)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_24C84A430();
  *uint64_t v2 = v3;
  v2[1] = (uint64_t)v4;
  result.value._object = v4;
  result.value._countAndFlagsBits = v3;
  return result;
}

uint64_t sub_24C809A14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24C84A430();
  *a1 = result;
  a1[1] = v3;
  return result;
}

char *sub_24C809A60(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEF50);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      char v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      char v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24C80AB00(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24C809B5C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF440);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      char v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      char v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24C80B7FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24C809C80(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  void v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  char v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v1 = xmmword_24C84C6B0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_24C8491E0() && __OFSUB__((int)v4, sub_24C849210())) {
        goto LABEL_24;
      }
      sub_24C849220();
      swift_allocObject();
      uint64_t v13 = sub_24C8491C0();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_24C80A14C((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *char v5 = v4;
        goto LABEL_19;
      }
      *char v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_24C8492D0();
      uint64_t result = sub_24C80A14C(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *uint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *uint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *uint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_24C809F84@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_24C80ABE8(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_24C80B5F8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_24C80B674((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24C809FFC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24C8491E0();
  if (!result || (uint64_t result = sub_24C849210(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_24C849200();
      sub_24C849DE0();
      sub_24C80BAA0(&qword_2697EF280, MEMORY[0x263F047F8]);
      return sub_24C849CC0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_24C80A0DC(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_24C80A14C(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_24C8491E0();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_24C849210();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_24C849200();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_24C80A200(uint64_t result)
{
  if ((_BYTE)result)
  {
    v6[3] = v1;
    v6[4] = v2;
    unsigned __int8 v3 = result;
    v6[0] = 0;
    MEMORY[0x2532FCCD0](v6, 8);
    int v4 = v3;
    uint64_t result = (LOBYTE(v6[0]) * v3) >> 8;
    if (v3 > (LOBYTE(v6[0]) * v3)
      && -v3 % v3 > (LOBYTE(v6[0]) * v3))
    {
      unsigned int v5 = (-v3 % v3);
      do
      {
        v6[0] = 0;
        MEMORY[0x2532FCCD0](v6, 8);
      }
      while (v5 > (LOBYTE(v6[0]) * v4));
      return (LOBYTE(v6[0]) * v4) >> 8;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24C80A29C@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_24C7D60D0(a2, a3);
      BOOL v10 = (char *)sub_24C8491E0();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_24C849210();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_24C849200();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x24C80A500);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_24C7D5FEC(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_24C8491E0();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_24C849210();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_24C849200();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_24C80A510(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  __s1[2] = *MEMORY[0x263EF8340];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_24C7D60D0(a1, a2);
      char v5 = sub_24C80A900((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_24C7D5FEC(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_24C80A900(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_24C7D5FEC(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_24C80A29C((uint64_t)__s1, a3, a4, &v14);
      sub_24C7D5FEC(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_24C80A740@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_24C84A240();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_24C80A7CC(void *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  char v5 = result;
  uint64_t v6 = HIBYTE(a5) & 0xF;
  uint64_t v12 = a4;
  unint64_t v13 = a5;
  if ((a5 & 0x2000000000000000) == 0) {
    uint64_t v6 = a4 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v14 = v6;
  if (!a2)
  {
    uint64_t v7 = 0;
LABEL_14:
    *char v5 = a4;
    v5[1] = a5;
    void v5[2] = 0;
    v5[3] = v6;
    return (void *)v7;
  }
  uint64_t v7 = a3;
  if (!a3) {
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    BOOL v8 = a2;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = sub_24C849FA0();
      if (!v11) {
        break;
      }
      ++v9;
      *BOOL v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    uint64_t v7 = v9;
LABEL_13:
    uint64_t v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void *sub_24C80A888(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF3D8);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  v4[2] = a1;
  v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t sub_24C80A900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_24C8491E0();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_24C849210();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_24C849200();
  sub_24C80A29C(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

BOOL _s5Cosmo12SharedSecretV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = 0;
  switch(v3 >> 62)
  {
    case 1uLL:
      LODWORD(v6) = HIDWORD(v2) - v2;
      if (__OFSUB__(HIDWORD(v2), v2))
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        JUMPOUT(0x24C80AAE0);
      }
      uint64_t v6 = (int)v6;
LABEL_6:
      switch(v5 >> 62)
      {
        case 1uLL:
          LODWORD(v10) = HIDWORD(v4) - v4;
          if (__OFSUB__(HIDWORD(v4), v4)) {
            goto LABEL_19;
          }
          uint64_t v10 = (int)v10;
LABEL_11:
          if (v6 == v10
            && (v6 < 1 || (sub_24C7D60D0(*(void *)a2, *(void *)(a2 + 8)), (sub_24C80A510(v2, v3, v4, v5) & 1) != 0)))
          {
            return 1;
          }
          else
          {
            return 0;
          }
        case 2uLL:
          uint64_t v12 = *(void *)(v4 + 16);
          uint64_t v11 = *(void *)(v4 + 24);
          BOOL v9 = __OFSUB__(v11, v12);
          uint64_t v10 = v11 - v12;
          if (!v9) {
            goto LABEL_11;
          }
          goto LABEL_20;
        case 3uLL:
          return !v6;
        default:
          uint64_t v10 = BYTE6(v5);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v8 = *(void *)(v2 + 16);
      uint64_t v7 = *(void *)(v2 + 24);
      BOOL v9 = __OFSUB__(v7, v8);
      uint64_t v6 = v7 - v8;
      if (!v9) {
        goto LABEL_6;
      }
      goto LABEL_18;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v6 = BYTE6(v3);
      goto LABEL_6;
  }
}

char *sub_24C80AB00(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    uint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_24C84A300();
  __break(1u);
  return result;
}

uint64_t sub_24C80ABE8(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_24C80ACAC(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_24C80ABE8(__src, &__src[a2]);
  }
  sub_24C849220();
  swift_allocObject();
  sub_24C8491D0();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_24C849300();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

unint64_t sub_24C80AD60()
{
  unint64_t result = qword_2697EF410;
  if (!qword_2697EF410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF410);
  }
  return result;
}

unint64_t sub_24C80ADB8()
{
  unint64_t result = qword_2697EF418;
  if (!qword_2697EF418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF418);
  }
  return result;
}

unint64_t sub_24C80AE10()
{
  unint64_t result = qword_2697EF420;
  if (!qword_2697EF420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF420);
  }
  return result;
}

uint64_t sub_24C80AE64()
{
  return MEMORY[0x263F8D388];
}

unint64_t sub_24C80AE74()
{
  unint64_t result = qword_2697EF428;
  if (!qword_2697EF428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF428);
  }
  return result;
}

uint64_t sub_24C80AEC8()
{
  return MEMORY[0x263F8D398];
}

uint64_t sub_24C80AED4()
{
  return MEMORY[0x263F8D390];
}

uint64_t sub_24C80AEE0()
{
  return MEMORY[0x263F8D748];
}

uint64_t getEnumTagSinglePayload for ClosedReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClosedReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C80B048);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClosedReason()
{
  return &type metadata for ClosedReason;
}

unint64_t destroy for TransferError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s5Cosmo13TransferErrorOwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = a2[1];
  }
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for TransferError(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  int v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for TransferError(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = a2[1];
    }
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for TransferError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 3;
  if (v5 >= 5) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TransferError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_24C80B2D4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_24C80B2F8(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *__n128 result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransferError()
{
  return &type metadata for TransferError;
}

uint64_t *initializeBufferWithCopyOfBuffer for SharedSecret(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_24C7D60D0(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for SharedSecret(uint64_t a1)
{
  return sub_24C7D5FEC(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for SharedSecret(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_24C7D60D0(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_24C7D5FEC(v5, v6);
  return a1;
}

uint64_t *assignWithTake for SharedSecret(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_24C7D5FEC(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharedSecret(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SharedSecret(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)__n128 result = a2 - 13;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedSecret()
{
  return &type metadata for SharedSecret;
}

void *initializeBufferWithCopyOfBuffer for PinCode(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for PinCode()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for PinCode(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PinCode(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PinCode(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PinCode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PinCode()
{
  return &type metadata for PinCode;
}

uint64_t sub_24C80B5F8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_24C849220();
  swift_allocObject();
  uint64_t result = sub_24C8491D0();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_24C849300();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_24C80B674(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_24C849220();
  swift_allocObject();
  uint64_t result = sub_24C8491D0();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

unsigned char *sub_24C80B6F8(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_24C80ABE8(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_24C80B5F8((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_24C80B674((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_24C80B75C(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_24C849220();
      swift_allocObject();
      sub_24C8491F0();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_24C849300();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_24C80B7FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24C84A300();
  __break(1u);
  return result;
}

uint64_t sub_24C80B8F4(uint64_t a1)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF430);
  uint64_t v10 = sub_24C7F2328(&qword_2697EF438, &qword_2697EF430);
  v8[0] = a1;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_24C809F84(v3, v4, &v7);
  uint64_t v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_24C80B9B4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF450);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_24C80BA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  void v12[2] = v13;
  uint64_t result = sub_24C80A0DC((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24C80BA80, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_24C80BA80@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24C80A740(a1, a2);
}

uint64_t sub_24C80BAA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static CosmoBrowser.EndpointState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CosmoBrowser.EndpointState.hash(into:)()
{
  return sub_24C84A4F0();
}

uint64_t CosmoBrowser.EndpointState.hashValue.getter()
{
  return sub_24C84A510();
}

uint64_t sub_24C80BB80@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_24C7F2264;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_24C7D6E3C(v4);
}

uint64_t sub_24C80BC14(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24C7F223C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  sub_24C7D6E3C(v3);
  return sub_24C7D6F70(v8);
}

uint64_t sub_24C80BCD0()
{
  uint64_t v1 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24C7F5C84(v0 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_descriptor, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    sub_24C7D5FEC(*((void *)v3 + 1), *((void *)v3 + 2));
    sub_24C7D5FEC(*((void *)v3 + 3), *((void *)v3 + 4));
    swift_unknownObjectRelease();
    uint64_t v6 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0) + 96)];
    uint64_t v7 = sub_24C849440();
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    return 0x75716F6D736F635FLL;
  }
  else if (EnumCaseMultiPayload == 2)
  {
    sub_24C7D5FEC(*(void *)v3, *((void *)v3 + 1));
    return 0x63746F6D736F635FLL;
  }
  else
  {
    sub_24C7F5BE0((uint64_t)v3);
    return 16718;
  }
}

void sub_24C80BE38()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF490);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24C849B20();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v27 - v9;
  sub_24C7F86EC((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    sub_24C7F6D40();
    sub_24C849BC0();
    swift_allocObject();
    uint64_t v15 = sub_24C849B50();
    uint64_t v16 = OBJC_IVAR____TtC5Cosmo12CosmoBrowser_browser;
    *(void *)(v0 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_browser) = v15;
    swift_release();
    if (*(void *)(v0 + v16))
    {
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      swift_retain();
      sub_24C7D6E3C((uint64_t)sub_24C80D9D8);
      sub_24C849B30();
      swift_release();
      swift_release_n();
      if (*(void *)(v0 + v16))
      {
        swift_allocObject();
        swift_weakInit();
        swift_retain();
        swift_retain();
        sub_24C7D6E3C((uint64_t)sub_24C80D9E0);
        sub_24C849B40();
        swift_release();
        swift_release_n();
      }
    }
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_24C849590();
    __swift_project_value_buffer(v17, (uint64_t)qword_2697F6FF8);
    swift_retain_n();
    uint64_t v18 = sub_24C849570();
    os_log_type_t v19 = sub_24C84A110();
    if (os_log_type_enabled(v18, v19))
    {
      int64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      char v28 = v10;
      uint64_t v22 = v21;
      uint64_t v30 = v21;
      uint64_t v27 = v16;
      *(_DWORD *)int64_t v20 = 136315138;
      uint64_t v23 = sub_24C80BCD0();
      uint64_t v29 = sub_24C7DE68C(v23, v24, &v30);
      uint64_t v25 = v27;
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v18, v19, "[Browser] Starting browser for Bonjour type=%s", v20, 0xCu);
      swift_arrayDestroy();
      uint64_t v26 = v22;
      uint64_t v10 = v28;
      MEMORY[0x2532FCCC0](v26, -1, -1);
      MEMORY[0x2532FCCC0](v20, -1, -1);

      if (!*(void *)(v0 + v25)) {
        goto LABEL_17;
      }
    }
    else
    {

      swift_release_n();
      if (!*(void *)(v0 + v16))
      {
LABEL_17:
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        return;
      }
    }
    swift_retain();
    sub_24C849B70();
    swift_release();
    goto LABEL_17;
  }
  sub_24C7D7C08((uint64_t)v3, &qword_2697EF490);
  if (qword_2697EE9B0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_24C849590();
  __swift_project_value_buffer(v11, (uint64_t)qword_2697F6FF8);
  uint64_t v12 = sub_24C849570();
  os_log_type_t v13 = sub_24C84A0F0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_24C7BE000, v12, v13, "[Browser] No Bonjour type!", v14, 2u);
    MEMORY[0x2532FCCC0](v14, -1, -1);
  }
}

void sub_24C80C3A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF4A8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v30 - v6;
  uint64_t v8 = sub_24C849B60();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v30 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v30 - v16;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v34 = v12;
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_24C849590();
    __swift_project_value_buffer(v18, (uint64_t)qword_2697F6FF8);
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v35(v17, a1, v8);
    swift_retain_n();
    os_log_type_t v19 = sub_24C849570();
    int v20 = sub_24C84A110();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      int v32 = v20;
      v30[0] = v15;
      os_log_t v33 = v19;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v37 = v31;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v22 = sub_24C80BCD0();
      uint64_t v36 = sub_24C7DE68C(v22, v23, &v37);
      v30[1] = &v37;
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v35(v7, (uint64_t)v17, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
      sub_24C80D9E8((uint64_t)v7, (uint64_t)v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
      {
        unint64_t v24 = 0xE300000000000000;
        uint64_t v25 = 7104878;
      }
      else
      {
        uint64_t v26 = v30[0];
        (*(void (**)(void, char *, uint64_t))(v9 + 32))(v30[0], v5, v8);
        v35(v34, v26, v8);
        uint64_t v25 = sub_24C849ED0();
        unint64_t v24 = v27;
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v26, v8);
      }
      sub_24C7D7C08((uint64_t)v7, &qword_2697EF4A8);
      uint64_t v36 = sub_24C7DE68C(v25, v24, &v37);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
      os_log_t v28 = v33;
      _os_log_impl(&dword_24C7BE000, v33, (os_log_type_t)v32, "[Browser] Browser for Bonjour type=%s changed state=%s", (uint8_t *)v21, 0x16u);
      uint64_t v29 = v31;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v29, -1, -1);
      MEMORY[0x2532FCCC0](v21, -1, -1);
      swift_release();
    }
    else
    {
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    }
  }
}

uint64_t sub_24C80C85C(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = sub_24C849BA0();
  uint64_t v3 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24C849B80();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v32 - v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v42 = result;
    uint64_t v38 = sub_24C7F82E8();
    uint64_t v41 = v14;
    uint64_t v37 = sub_24C7F8530();
    uint64_t v40 = v15;
    uint64_t v16 = *(void *)(a2 + 56);
    uint64_t v34 = a2 + 56;
    uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
    uint64_t v18 = -1;
    if (v17 < 64) {
      uint64_t v18 = ~(-1 << v17);
    }
    unint64_t v19 = v18 & v16;
    int64_t v35 = (unint64_t)(v17 + 63) >> 6;
    uint64_t v45 = v7 + 32;
    uint64_t v46 = v7 + 16;
    uint64_t v44 = v7 + 88;
    int v43 = *MEMORY[0x263F143B8];
    int v33 = *MEMORY[0x263F143C8];
    int v32 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v36 = (void (**)(char *, uint64_t))(v7 + 96);
    int v20 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    uint64_t v21 = (uint64_t (**)(char *, uint64_t))(v3 + 8);
    uint64_t v47 = a2;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v22 = 0;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v28 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      return result;
    }
    if (v28 >= v35) {
      goto LABEL_28;
    }
    unint64_t v29 = *(void *)(v34 + 8 * v28);
    ++v22;
    if (!v29)
    {
      int64_t v22 = v28 + 1;
      if (v28 + 1 >= v35) {
        goto LABEL_28;
      }
      unint64_t v29 = *(void *)(v34 + 8 * v22);
      if (v29) {
        goto LABEL_22;
      }
      int64_t v22 = v28 + 2;
      if (v28 + 2 >= v35)
      {
LABEL_28:
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return swift_bridgeObjectRelease();
      }
      unint64_t v29 = *(void *)(v34 + 8 * v22);
      if (!v29)
      {
        int64_t v30 = v28 + 3;
        if (v30 < v35)
        {
          unint64_t v29 = *(void *)(v34 + 8 * v30);
          if (v29)
          {
            int64_t v22 = v30;
            goto LABEL_22;
          }
          while (1)
          {
            int64_t v22 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_31;
            }
            if (v22 >= v35) {
              goto LABEL_28;
            }
            unint64_t v29 = *(void *)(v34 + 8 * v22);
            ++v30;
            if (v29) {
              goto LABEL_22;
            }
          }
        }
        goto LABEL_28;
      }
    }
LABEL_22:
    unint64_t v19 = (v29 - 1) & v29;
    for (unint64_t i = __clz(__rbit64(v29)) + (v22 << 6); ; unint64_t i = v26 | (v22 << 6))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(void *)(v47 + 48) + *(void *)(v7 + 72) * i, v6);
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
      int v31 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
      if (v31 == v43) {
        break;
      }
      if (v31 == v33)
      {
        (*v36)(v10, v6);
        uint64_t v23 = v39;
        (*v20)(v5, v10, v39);
        uint64_t v24 = (uint64_t)v5;
        char v25 = 0;
LABEL_7:
        sub_24C80CCF4(v24, v25, v38, v41, v37, v40, v42);
        uint64_t result = (*v21)(v5, v23);
        if (!v19) {
          goto LABEL_9;
        }
        goto LABEL_8;
      }
      uint64_t result = (*v32)(v10, v6);
      if (!v19) {
        goto LABEL_9;
      }
LABEL_8:
      unint64_t v26 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
    }
    (*v36)(v10, v6);
    uint64_t v23 = v39;
    (*v20)(v5, v10, v39);
    uint64_t v24 = (uint64_t)v5;
    char v25 = 1;
    goto LABEL_7;
  }
  return result;
}

void sub_24C80CCF4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_24C849660();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24C849B90();
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v14 + 88))(v16, v13) != *MEMORY[0x263F14110])
  {
    (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
    return;
  }
  uint64_t v42 = a7;
  (*(void (**)(uint64_t *, uint64_t))(v14 + 96))(v16, v13);
  uint64_t v18 = *v16;
  unint64_t v17 = v16[1];
  uint64_t v20 = v16[2];
  unint64_t v19 = v16[3];
  swift_bridgeObjectRelease();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF498);
  sub_24C7D7C08((uint64_t)v16 + *(int *)(v21 + 80), &qword_2697EF4A0);
  uint64_t v22 = 0x652D65766F6D6572;
  if (a2) {
    uint64_t v22 = 0x6E6576652D646461;
  }
  uint64_t v43 = v22;
  uint64_t v44 = v20;
  if (a2) {
    unint64_t v23 = 0xE900000000000074;
  }
  else {
    unint64_t v23 = 0xEC000000746E6576;
  }
  if (!a4)
  {
    sub_24C849EE0();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  BOOL v24 = v18 == a3 && v17 == a4;
  if (!v24 && (sub_24C84A440() & 1) == 0)
  {
    if (sub_24C849EE0() == a3 && v25 == a4)
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = v44;
    }
    else
    {
      char v27 = sub_24C84A440();
      swift_bridgeObjectRelease();
      uint64_t v20 = v44;
      if ((v27 & 1) == 0) {
        goto LABEL_32;
      }
    }
  }
  if (!a6 || (v20 == a5 ? (BOOL v28 = v19 == a6) : (BOOL v28 = 0), !v28 && (sub_24C84A440() & 1) == 0))
  {
LABEL_32:
    if (qword_2697EE9B0 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_24C849590();
    __swift_project_value_buffer(v34, (uint64_t)qword_2697F6FF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v35 = sub_24C849570();
    os_log_type_t v36 = sub_24C84A110();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v45[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_24C7DE68C(v43, v23, v45);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_24C7DE68C(v18, v17, v45);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_24C7DE68C(v44, v19, v45);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24C7BE000, v35, v36, "[Browser] Ignoring %s for Bonjour-service-name=%s Bonjour-service-type=%s", (uint8_t *)v37, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v38, -1, -1);
      MEMORY[0x2532FCCC0](v37, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return;
  }
  if (qword_2697EE9B0 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_24C849590();
  __swift_project_value_buffer(v29, (uint64_t)qword_2697F6FF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v30 = sub_24C849570();
  os_log_type_t v31 = sub_24C84A110();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v45[0] = v41;
    *(_DWORD *)uint64_t v32 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_24C7DE68C(v43, v23, v45);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_24C7DE68C(v18, v17, v45);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_24C7DE68C(v44, v19, v45);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24C7BE000, v30, v31, "[Browser] Received %s for Bonjour-service-name=%s Bonjour-service-type=%s", (uint8_t *)v32, 0x20u);
    uint64_t v33 = v41;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v33, -1, -1);
    MEMORY[0x2532FCCC0](v32, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v39 = (void (**)(uint64_t *))(v42 + 16);
  if (a2)
  {
    swift_beginAccess();
    uint64_t v40 = *v39;
    if (!v40) {
      return;
    }
    LOBYTE(v46) = 0;
  }
  else
  {
    swift_beginAccess();
    uint64_t v40 = *v39;
    if (!v40) {
      return;
    }
    LOBYTE(v46) = 1;
  }
  swift_retain();
  v40(&v46);
  sub_24C7D6F70((uint64_t)v40);
}

void sub_24C80D408()
{
  if (qword_2697EE9B0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24C849590();
  __swift_project_value_buffer(v1, (uint64_t)qword_2697F6FF8);
  swift_retain_n();
  uint64_t v2 = sub_24C849570();
  os_log_type_t v3 = sub_24C84A110();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v8 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_24C80BCD0();
    sub_24C7DE68C(v6, v7, &v8);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v2, v3, "[Browser] Stopping browser for Bonjour type=%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v5, -1, -1);
    MEMORY[0x2532FCCC0](v4, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_browser))
  {
    swift_retain();
    sub_24C849BB0();
    swift_release();
  }
}

uint64_t CosmoBrowser.deinit()
{
  sub_24C7D6F70(*(void *)(v0 + 16));
  sub_24C7F5BE0(v0 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_descriptor);

  swift_release();
  return v0;
}

uint64_t CosmoBrowser.__deallocating_deinit()
{
  sub_24C7D6F70(v0[2]);
  sub_24C7F5BE0((uint64_t)v0 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_descriptor);

  swift_release();
  uint64_t v1 = *(unsigned int *)(*v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

unint64_t sub_24C80D6B4()
{
  unint64_t result = qword_2697EF468;
  if (!qword_2697EF468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF468);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CosmoBrowser.EndpointState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C80D7DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoBrowser.EndpointState()
{
  return &type metadata for CosmoBrowser.EndpointState;
}

uint64_t sub_24C80D814()
{
  return type metadata accessor for CosmoBrowser();
}

uint64_t type metadata accessor for CosmoBrowser()
{
  uint64_t result = qword_2697EF478;
  if (!qword_2697EF478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24C80D868()
{
  uint64_t result = type metadata accessor for NetworkDescriptor();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CosmoBrowser(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CosmoBrowser);
}

uint64_t dispatch thunk of CosmoBrowser.endpointChanged.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of CosmoBrowser.endpointChanged.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of CosmoBrowser.endpointChanged.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_24C80D9A0()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24C80D9D8(uint64_t a1)
{
}

uint64_t sub_24C80D9E0(uint64_t a1, uint64_t a2)
{
  return sub_24C80C85C(a1, a2);
}

uint64_t sub_24C80D9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF4A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24C80DA50()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

SecKeyRef getLocalKeyPair(serializedKeyPair:)(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15)
  {
    uint64_t v2 = (void *)*MEMORY[0x263F16FB8];
    return createKeyPair(v2, 256);
  }
  else
  {
    sub_24C7D60D0(a1, a2);
    unsigned int v6 = deserialize(serializedKeyPair:)();
    if (v6)
    {
      unint64_t v7 = v6;
      sub_24C7D6044(a1, a2);
      return (SecKeyRef)v7;
    }
    else
    {
      SecKeyRef result = (SecKeyRef)sub_24C84A2B0();
      __break(1u);
    }
  }
  return result;
}

uint64_t getPublicKey(identity:)(void *a1)
{
  id v1 = publicKeyFromIdentity(a1);
  uint64_t v2 = sub_24C849350();

  return v2;
}

uint64_t copyPublicKeyFrom(identity:)(NSObject *a1)
{
  v30[1] = *(SecKeyRef *)MEMORY[0x263EF8340];
  id v1 = sec_identity_copy_ref(a1);
  if (!v1)
  {
    if (qword_2697EE9D8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_24C849590();
    __swift_project_value_buffer(v11, (uint64_t)qword_2697F7070);
    uint64_t v12 = sub_24C849570();
    os_log_type_t v13 = sub_24C84A0F0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_24C7BE000, v12, v13, "Unable to copy secIdentity", v14, 2u);
      MEMORY[0x2532FCCC0](v14, -1, -1);
    }

    return 0;
  }
  uint64_t v2 = v1;
  v30[0] = 0;
  OSStatus v3 = SecIdentityCopyPrivateKey(v1, v30);
  SecKeyRef v4 = v30[0];
  if (v3 != sub_24C8495A0())
  {
    if (qword_2697EE9D8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_24C849590();
    __swift_project_value_buffer(v15, (uint64_t)qword_2697F7070);
    uint64_t v16 = sub_24C849570();
    os_log_type_t v17 = sub_24C84A0F0();
    if (!os_log_type_enabled(v16, v17)) {
      goto LABEL_21;
    }
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    unint64_t v19 = "SecIdentityCopyPrivateKey failed";
    goto LABEL_20;
  }
  if (!v4)
  {
    if (qword_2697EE9D8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_24C849590();
    __swift_project_value_buffer(v20, (uint64_t)qword_2697F7070);
    uint64_t v16 = sub_24C849570();
    os_log_type_t v17 = sub_24C84A0F0();
    if (!os_log_type_enabled(v16, v17)) {
      goto LABEL_21;
    }
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    unint64_t v19 = "Could not copy privateKey";
LABEL_20:
    _os_log_impl(&dword_24C7BE000, v16, v17, v19, v18, 2u);
    MEMORY[0x2532FCCC0](v18, -1, -1);
LABEL_21:

LABEL_33:
    return 0;
  }
  uint64_t v5 = v4;
  SecKeyRef v6 = SecKeyCopyPublicKey(v5);
  if (!v6)
  {
    if (qword_2697EE9D8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_24C849590();
    __swift_project_value_buffer(v21, (uint64_t)qword_2697F7070);
    uint64_t v22 = sub_24C849570();
    os_log_type_t v23 = sub_24C84A0F0();
    if (os_log_type_enabled(v22, v23))
    {
      BOOL v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v24 = 0;
      _os_log_impl(&dword_24C7BE000, v22, v23, "Could not create publicKey from privateKey", v24, 2u);
      MEMORY[0x2532FCCC0](v24, -1, -1);
    }
    goto LABEL_32;
  }
  SecKeyRef v7 = v6;
  uint64_t v8 = (void *)SecKeyCopySubjectPublicKeyInfo();
  if (!v8)
  {
    if (qword_2697EE9D8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_24C849590();
    __swift_project_value_buffer(v25, (uint64_t)qword_2697F7070);
    uint64_t v22 = sub_24C849570();
    os_log_type_t v26 = sub_24C84A0F0();
    if (os_log_type_enabled(v22, v26))
    {
      char v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v27 = 0;
      _os_log_impl(&dword_24C7BE000, v22, v26, "Could not create data from publicKey", v27, 2u);
      MEMORY[0x2532FCCC0](v27, -1, -1);
      BOOL v28 = v7;
    }
    else
    {
      BOOL v28 = v22;
      uint64_t v22 = v5;
      uint64_t v5 = v2;
      uint64_t v2 = v7;
    }

LABEL_32:
    goto LABEL_33;
  }
  id v9 = v8;
  uint64_t v10 = sub_24C849350();

  return v10;
}

uint64_t copyPrivateKeyFrom(identity:)(NSObject *a1)
{
  v18[1] = *(SecKeyRef *)MEMORY[0x263EF8340];
  id v1 = sec_identity_copy_ref(a1);
  if (!v1)
  {
    if (qword_2697EE9D8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_24C849590();
    __swift_project_value_buffer(v7, (uint64_t)qword_2697F7070);
    uint64_t v8 = sub_24C849570();
    os_log_type_t v9 = sub_24C84A0F0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_24C7BE000, v8, v9, "Unable to copy secIdentity", v10, 2u);
      MEMORY[0x2532FCCC0](v10, -1, -1);
    }

    return 0;
  }
  uint64_t v2 = v1;
  v18[0] = 0;
  OSStatus v3 = SecIdentityCopyPrivateKey(v1, v18);
  SecKeyRef v4 = v18[0];
  if (v3 != sub_24C8495A0())
  {
    if (qword_2697EE9D8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_24C849590();
    __swift_project_value_buffer(v11, (uint64_t)qword_2697F7070);
    uint64_t v12 = sub_24C849570();
    os_log_type_t v13 = sub_24C84A0F0();
    if (!os_log_type_enabled(v12, v13)) {
      goto LABEL_19;
    }
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    uint64_t v15 = "SecIdentityCopyPrivateKey failed";
    goto LABEL_18;
  }
  if (!v4)
  {
    if (qword_2697EE9D8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_24C849590();
    __swift_project_value_buffer(v16, (uint64_t)qword_2697F7070);
    uint64_t v12 = sub_24C849570();
    os_log_type_t v13 = sub_24C84A0F0();
    if (!os_log_type_enabled(v12, v13)) {
      goto LABEL_19;
    }
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    uint64_t v15 = "Could not copy privateKey";
LABEL_18:
    _os_log_impl(&dword_24C7BE000, v12, v13, v15, v14, 2u);
    MEMORY[0x2532FCCC0](v14, -1, -1);
LABEL_19:

    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = serializeKeyPair(keyPair:)(v5);

  return v6;
}

uint64_t serializeKeyPair(keyPair:)(__SecKey *a1)
{
  error[1] = *(CFErrorRef *)MEMORY[0x263EF8340];
  error[0] = 0;
  CFDataRef v1 = SecKeyCopyExternalRepresentation(a1, error);
  uint64_t v2 = v1;
  CFErrorRef v3 = error[0];
  if (error[0])
  {
    if (qword_2697EE9D8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24C849590();
    __swift_project_value_buffer(v4, (uint64_t)qword_2697F7070);
    uint64_t v5 = sub_24C849570();
    os_log_type_t v6 = sub_24C84A0F0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v17 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      type metadata accessor for CFError(0);
      sub_24C80EB38(&qword_2697EF4B0, type metadata accessor for CFError);
      uint64_t v9 = sub_24C84A470();
      unint64_t v11 = v10;

      sub_24C7DE68C(v9, v11, &v17);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v5, v6, "Error encountered during serialization of keyPair, error: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v8, -1, -1);
      MEMORY[0x2532FCCC0](v7, -1, -1);

      return 0;
    }

LABEL_9:
    return 0;
  }
  if (!v1)
  {
    if (qword_2697EE9D8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_24C849590();
    __swift_project_value_buffer(v14, (uint64_t)qword_2697F7070);
    uint64_t v2 = sub_24C849570();
    os_log_type_t v15 = sub_24C84A0F0();
    if (os_log_type_enabled(v2, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_24C7BE000, v2, v15, "Failed to serialize keyPair", v16, 2u);
      MEMORY[0x2532FCCC0](v16, -1, -1);
    }
    goto LABEL_9;
  }
  uint64_t v12 = sub_24C849350();

  return v12;
}

NSObject *deserialize(serializedKeyPair:)()
{
  error[11] = *(CFErrorRef *)MEMORY[0x263EF8340];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF4B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24C84CA60;
  CFDataRef v1 = (void *)*MEMORY[0x263F16FA8];
  uint64_t v2 = (void *)*MEMORY[0x263F16FB8];
  *(void *)(inited + 32) = *MEMORY[0x263F16FA8];
  *(void *)(inited + 40) = v2;
  CFErrorRef v3 = (void *)*MEMORY[0x263F16F68];
  uint64_t v4 = (void *)*MEMORY[0x263F16F70];
  *(void *)(inited + 48) = *MEMORY[0x263F16F68];
  *(void *)(inited + 56) = v4;
  uint64_t v5 = (void *)*MEMORY[0x263F16F98];
  *(void *)(inited + 64) = *MEMORY[0x263F16F98];
  id v6 = v1;
  id v7 = v2;
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  *(void *)(inited + 72) = sub_24C84A0C0();
  sub_24C80EA2C(inited);
  error[0] = 0;
  CFDataRef v11 = (const __CFData *)sub_24C849330();
  type metadata accessor for CFString(0);
  sub_24C80EB38(&qword_2697EEC30, type metadata accessor for CFString);
  CFDictionaryRef v12 = (const __CFDictionary *)sub_24C849DF0();
  swift_bridgeObjectRelease();
  os_log_type_t v13 = SecKeyCreateWithData(v11, v12, error);

  CFErrorRef v14 = error[0];
  if (error[0])
  {
    if (qword_2697EE9D8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_24C849590();
    __swift_project_value_buffer(v15, (uint64_t)qword_2697F7070);
    uint64_t v16 = sub_24C849570();
    os_log_type_t v17 = sub_24C84A0F0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v27 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      type metadata accessor for CFError(0);
      sub_24C80EB38(&qword_2697EF4B0, type metadata accessor for CFError);
      uint64_t v20 = sub_24C84A470();
      unint64_t v22 = v21;

      sub_24C7DE68C(v20, v22, &v27);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v16, v17, "Error encountered during deserialization of keyPair, error: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v19, -1, -1);
      MEMORY[0x2532FCCC0](v18, -1, -1);

      return 0;
    }

LABEL_12:
    return 0;
  }
  if (!v13)
  {
    if (qword_2697EE9D8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_24C849590();
    __swift_project_value_buffer(v23, (uint64_t)qword_2697F7070);
    os_log_type_t v13 = sub_24C849570();
    os_log_type_t v24 = sub_24C84A0F0();
    if (os_log_type_enabled(v13, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_24C7BE000, v13, v24, "Failed to deserialize keyPair", v25, 2u);
      MEMORY[0x2532FCCC0](v25, -1, -1);
    }
    goto LABEL_12;
  }
  return v13;
}

unint64_t sub_24C80EA2C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF4C0);
  uint64_t v2 = (void *)sub_24C84A2F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_unknownObjectRetain();
    unint64_t result = sub_24C80596C((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_24C80EB38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24C80EB80()
{
  uint64_t v0 = sub_24C849590();
  __swift_allocate_value_buffer(v0, qword_2697EF4C8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2697EF4C8);
  if (qword_2697EE9C0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2697F7028);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

Cosmo::CosmoMultiplexChannelClient::State_optional __swiftcall CosmoMultiplexChannelClient.State.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_24C84A340();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t CosmoMultiplexChannelClient.State.rawValue.getter()
{
  if (*v0) {
    return 0x6164696C61766E69;
  }
  else {
    return 0x7964616572;
  }
}

uint64_t sub_24C80ECEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24C7F2E3C(*a1, *a2);
}

Cosmo::CosmoMultiplexChannelClient::State_optional sub_24C80ECF8(Swift::String *a1)
{
  return CosmoMultiplexChannelClient.State.init(rawValue:)(*a1);
}

uint64_t CosmoMultiplexChannelClient.Configuration.maxOutstandingRequests.getter()
{
  return *(void *)v0;
}

uint64_t CosmoMultiplexChannelClient.Configuration.httpConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CosmoMultiplexChannelClient.Configuration(0);
  return sub_24C80F5A4(v1 + *(int *)(v3 + 20), a1, type metadata accessor for CosmoHttpConnection.Configuration);
}

uint64_t type metadata accessor for CosmoMultiplexChannelClient.Configuration(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EF528);
}

uint64_t CosmoMultiplexChannelClient.Configuration.init(maxOutstandingRequests:httpConfig:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v5 = type metadata accessor for CosmoMultiplexChannelClient.Configuration(0);
  return sub_24C818318(a2, (uint64_t)a3 + *(int *)(v5 + 20), type metadata accessor for CosmoHttpConnection.Configuration);
}

uint64_t sub_24C80EDCC@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    id v7 = sub_24C7F2264;
  }
  else
  {
    id v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_24C7D6E3C(v4);
}

uint64_t sub_24C80EE60(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24C7F223C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  sub_24C7D6E3C(v3);
  return sub_24C7D6F70(v8);
}

uint64_t CosmoMultiplexChannelClient.__allocating_init(config:name:descriptor:queue:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  CosmoMultiplexChannelClient.init(config:name:descriptor:queue:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t CosmoMultiplexChannelClient.init(config:name:descriptor:queue:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v51 = a5;
  uint64_t v45 = a2;
  unint64_t v46 = a3;
  uint64_t v9 = sub_24C849660();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v49 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NetworkDescriptor();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v50 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v16 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v48 = (uint64_t)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v44 = sub_24C84A150();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v43 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24C84A120();
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = sub_24C849BF0();
  MEMORY[0x270FA5388](v23 - 8);
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) = 0;
  uint64_t v24 = MEMORY[0x263F8EE78];
  *(void *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_requestQueue) = MEMORY[0x263F8EE78];
  *(void *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests) = v24;
  sub_24C80F5A4(a1, v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config, type metadata accessor for CosmoMultiplexChannelClient.Configuration);
  uint64_t v25 = v51;
  os_log_type_t v26 = (uint64_t *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_name);
  unint64_t v27 = v46;
  *os_log_type_t v26 = v45;
  v26[1] = v27;
  if (v25)
  {
    BOOL v28 = v25;
    uint64_t v29 = v25;
  }
  else
  {
    unint64_t v46 = sub_24C7D5EF8();
    sub_24C849BE0();
    uint64_t v52 = v24;
    uint64_t v45 = sub_24C817C3C((unint64_t *)&unk_2697EEAE0, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF330);
    sub_24C7D6170(&qword_2697EEAF0, (uint64_t *)&unk_2697EF330);
    sub_24C84A1F0();
    (*(void (**)(char *, void, uint64_t))(v42 + 104))(v43, *MEMORY[0x263F8F130], v44);
    BOOL v28 = (void *)sub_24C84A170();
    uint64_t v29 = v51;
  }
  *(void *)(v6 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue) = v28;
  sub_24C80F5A4(a4, v6 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_descriptor, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  uint64_t v30 = *(int *)(type metadata accessor for CosmoMultiplexChannelClient.Configuration(0) + 20);
  uint64_t v47 = a1;
  sub_24C80F5A4(a1 + v30, (uint64_t)v20, type metadata accessor for CosmoHttpConnection.Configuration);
  sub_24C80F5A4(a4, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  uint64_t v31 = (uint64_t)v20;
  id v32 = v29;
  id v33 = v28;
  sub_24C7F6760(v49);
  sub_24C7F6D40();
  sub_24C8498C0();
  swift_allocObject();
  uint64_t v34 = sub_24C849820();
  uint64_t v35 = v48;
  sub_24C80F5A4(v31, v48, type metadata accessor for CosmoHttpConnection.Configuration);
  uint64_t v36 = v50;
  sub_24C80F5A4((uint64_t)v15, v50, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoHttpConnection(0);
  swift_allocObject();
  uint64_t v37 = sub_24C7E1E3C(v35, v36, 1, v34, v28);
  sub_24C80F60C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  sub_24C80F60C(v31, type metadata accessor for CosmoHttpConnection.Configuration);
  *(void *)(v6 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_parentConnection) = v37;
  uint64_t v38 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v39 = *((void *)v37 + 2);
  *((void *)v37 + 2) = sub_24C80F6A4;
  *((void *)v37 + 3) = v38;
  swift_retain();
  sub_24C7D6F70(v39);

  sub_24C80F60C(a4, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  sub_24C80F60C(v47, type metadata accessor for CosmoMultiplexChannelClient.Configuration);
  swift_release();
  return v6;
}

uint64_t sub_24C80F5A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24C80F60C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24C80F66C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24C80F6A4(char *a1)
{
  return sub_24C814BBC(a1, v1, (void (*)(char *))sub_24C80FDD4);
}

uint64_t sub_24C80F6D4()
{
  return sub_24C80F968((uint64_t)sub_24C80F928, (uint64_t)&block_descriptor_5);
}

uint64_t sub_24C80F6F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_parentConnection);
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = sub_24C80F6A4;
  *(void *)(v1 + 24) = v2;
  sub_24C7D6F70(v3);
  if (qword_2697EEA00 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_24C849590();
  __swift_project_value_buffer(v4, (uint64_t)qword_2697EF4C8);
  swift_retain_n();
  uint64_t v5 = sub_24C849570();
  os_log_type_t v6 = sub_24C84A110();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_retain();
    uint64_t v9 = CosmoMultiplexChannelClient.description.getter();
    unint64_t v11 = v10;
    swift_release();
    sub_24C7DE68C(v9, v11, &v13);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v5, v6, "[Start] Starting parent channel, %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v8, -1, -1);
    MEMORY[0x2532FCCC0](v7, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return sub_24C7E2A9C();
}

uint64_t sub_24C80F928()
{
  return sub_24C80F6F4(v0);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_24C80F948()
{
  return sub_24C80F968((uint64_t)sub_24C80FDCC, (uint64_t)&block_descriptor_3_0);
}

uint64_t sub_24C80F968(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_24C849BD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24C849BF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  aBlock[4] = a1;
  uint64_t v17 = v2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_24C849BE0();
  v15[1] = MEMORY[0x263F8EE78];
  sub_24C817C3C((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_24C80FBF0()
{
  if (qword_2697EEA00 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24C849590();
  __swift_project_value_buffer(v0, (uint64_t)qword_2697EF4C8);
  swift_retain_n();
  uint64_t v1 = sub_24C849570();
  os_log_type_t v2 = sub_24C84A110();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v9 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_retain();
    uint64_t v5 = CosmoMultiplexChannelClient.description.getter();
    unint64_t v7 = v6;
    swift_release();
    sub_24C7DE68C(v5, v7, &v9);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v1, v2, "[Stop] Stopping parent channel, %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v4, -1, -1);
    MEMORY[0x2532FCCC0](v3, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return sub_24C7E4B0C();
}

uint64_t sub_24C80FDCC()
{
  return sub_24C80FBF0();
}

void sub_24C80FDD4(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (uint64_t *)((char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v8 = *a1;
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  *unint64_t v7 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v10 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_9;
  }
  if (v8)
  {
    if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) & 1) == 0)
    {
      if (qword_2697EEA00 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_24C849590();
      __swift_project_value_buffer(v11, (uint64_t)qword_2697EF4C8);
      swift_retain_n();
      uint64_t v12 = sub_24C849570();
      os_log_type_t v13 = sub_24C84A110();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        v32[0] = v15;
        *(_DWORD *)uint64_t v14 = 136315394;
        LOBYTE(v31) = v8;
        uint64_t v16 = sub_24C849ED0();
        uint64_t v31 = sub_24C7DE68C(v16, v17, v32);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2080;
        swift_retain();
        uint64_t v18 = CosmoMultiplexChannelClient.description.getter();
        unint64_t v20 = v19;
        swift_release();
        uint64_t v31 = sub_24C7DE68C(v18, v20, v32);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v12, v13, "Parent channel invalidated, connection-state=%s %s", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v15, -1, -1);
        MEMORY[0x2532FCCC0](v14, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      sub_24C810318();
      swift_beginAccess();
      uint64_t v30 = *(void (**)(uint64_t *))(v2 + 16);
      if (v30)
      {
        LOBYTE(v31) = 1;
        swift_retain();
        v30(&v31);
        sub_24C7D6F70((uint64_t)v30);
      }
    }
    return;
  }
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) = 1;
  if (qword_2697EEA00 != -1) {
    goto LABEL_20;
  }
LABEL_9:
  uint64_t v21 = sub_24C849590();
  __swift_project_value_buffer(v21, (uint64_t)qword_2697EF4C8);
  swift_retain_n();
  uint64_t v22 = sub_24C849570();
  os_log_type_t v23 = sub_24C84A110();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v32[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_retain();
    uint64_t v26 = CosmoMultiplexChannelClient.description.getter();
    unint64_t v28 = v27;
    swift_release();
    uint64_t v31 = sub_24C7DE68C(v26, v28, v32);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v22, v23, "Parent channel ready, %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v25, -1, -1);
    MEMORY[0x2532FCCC0](v24, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  uint64_t v29 = *(void (**)(uint64_t *))(v2 + 16);
  if (v29)
  {
    LOBYTE(v31) = 0;
    swift_retain();
    v29(&v31);
    sub_24C7D6F70((uint64_t)v29);
  }
  sub_24C8126A0();
}

uint64_t sub_24C810318()
{
  uint64_t v2 = v0;
  uint64_t v49 = sub_24C849BD0();
  uint64_t v3 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_24C849BF0();
  uint64_t v5 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  unint64_t v46 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24C849C80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (void *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  *id v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F0E0], v7);
  id v12 = v11;
  char v13 = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_24C84A2C0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v37) {
      return result;
    }
    goto LABEL_4;
  }
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) = 1;
  uint64_t v1 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_requestQueue);
  uint64_t result = swift_beginAccess();
  if ((unint64_t)*v1 >> 62) {
    goto LABEL_20;
  }
  if (!*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return result;
  }
LABEL_4:
  uint64_t v15 = (unint64_t *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  uint64_t result = swift_beginAccess();
  unint64_t v16 = *v15;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_24C84A2C0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v38) {
      return result;
    }
  }
  else if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  if (qword_2697EEA00 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_24C849590();
  __swift_project_value_buffer(v17, (uint64_t)qword_2697EF4C8);
  swift_retain_n();
  uint64_t v18 = sub_24C849570();
  os_log_type_t v19 = sub_24C84A110();
  if (os_log_type_enabled(v18, v19))
  {
    unint64_t v20 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    uint64_t v45 = v3;
    uint64_t v21 = aBlock[0];
    *(_DWORD *)unint64_t v20 = 136315138;
    uint64_t v44 = v20 + 4;
    swift_retain();
    uint64_t v22 = CosmoMultiplexChannelClient.description.getter();
    uint64_t v23 = v5;
    unint64_t v25 = v24;
    swift_release();
    uint64_t v50 = sub_24C7DE68C(v22, v25, aBlock);
    sub_24C84A1A0();
    swift_release_n();
    uint64_t v5 = v23;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v18, v19, "Failing pending requests, %s", v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v21;
    uint64_t v3 = v45;
    MEMORY[0x2532FCCC0](v26, -1, -1);
    MEMORY[0x2532FCCC0](v20, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v27 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_24C84A2C0();
    uint64_t v28 = result;
    if (result) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v28)
    {
LABEL_13:
      if (v28 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v29 = 0;
      unint64_t v43 = v27 & 0xC000000000000001;
      uint64_t v42 = v52;
      uint64_t v41 = (void (**)(char *, uint64_t))(v3 + 8);
      uint64_t v30 = (void (**)(char *, uint64_t))(v5 + 8);
      unint64_t v40 = 0x800000024C850450;
      long long v39 = xmmword_24C84C090;
      uint64_t v44 = (uint8_t *)v28;
      uint64_t v45 = v27;
      uint64_t v31 = v49;
      do
      {
        if (v43)
        {
          uint64_t v32 = MEMORY[0x2532FC0A0](v29, v27);
        }
        else
        {
          uint64_t v32 = *(void *)(v27 + 8 * (void)v29 + 32);
          swift_retain();
        }
        ++v29;
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = v32;
        *(void *)(v33 + 24) = 0xD00000000000001DLL;
        *(void *)(v33 + 32) = v40;
        *(_OWORD *)(v33 + 40) = v39;
        *(unsigned char *)(v33 + 56) = 2;
        void v52[2] = sub_24C817CE4;
        uint64_t v52[3] = v33;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        v52[0] = sub_24C7C25B4;
        v52[1] = &block_descriptor_71;
        uint64_t v34 = _Block_copy(aBlock);
        swift_retain();
        uint64_t v35 = v46;
        sub_24C849BE0();
        uint64_t v50 = MEMORY[0x263F8EE78];
        sub_24C817C3C((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
        sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
        uint64_t v36 = v48;
        sub_24C84A1F0();
        MEMORY[0x2532FBFB0](0, v35, v36, v34);
        _Block_release(v34);
        (*v41)(v36, v31);
        (*v30)(v35, v47);
        swift_release();
        swift_release();
        uint64_t v27 = v45;
      }
      while (v44 != v29);
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24C810A78(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v27 = a3;
  uint64_t v28 = a6;
  int v29 = a2;
  uint64_t v31 = sub_24C849BD0();
  uint64_t v34 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24C849BF0();
  uint64_t v32 = *(void *)(v13 - 8);
  uint64_t v33 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a5 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v30 = *(void *)(v6 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a5);
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v20 = (char *)swift_allocObject();
  uint64_t v21 = v28;
  *((void *)v20 + 2) = a5;
  *((void *)v20 + 3) = v21;
  uint64_t v22 = v27;
  *((void *)v20 + 4) = v7;
  *((void *)v20 + 5) = v22;
  *((void *)v20 + 6) = a4;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v20[v19], (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
  v20[v19 + v18] = v29;
  aBlock[4] = sub_24C811540;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_9;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24C849BE0();
  uint64_t v35 = MEMORY[0x263F8EE78];
  sub_24C817C3C((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  uint64_t v24 = v31;
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v16, v12, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v24);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v33);
  return swift_release();
}

void sub_24C810E20(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v50 = a5;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2697EF0E0);
  uint64_t v11 = sub_24C84A520();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (uint64_t *)((char *)&v46 - v14);
  uint64_t v16 = *(void *)(a6 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v13);
  unint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v46 - v20;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated))
  {
    sub_24C7D7054();
    uint64_t v22 = swift_allocError();
    *(_OWORD *)uint64_t v23 = xmmword_24C84C090;
    *(unsigned char *)(v23 + 16) = 2;
    *uint64_t v15 = v22;
    swift_storeEnumTagMultiPayload();
    v51(v15);
    (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v15, v11);
    return;
  }
  uint64_t v49 = type metadata accessor for PendingRequest(0);
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v47(v21, a4, a6);
  id v48 = *(id *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  unint64_t v25 = (void *)swift_allocObject();
  void v25[2] = a6;
  v25[3] = a7;
  uint64_t v26 = v51;
  v25[4] = v24;
  v25[5] = v26;
  v25[6] = v52;
  v47(v19, (uint64_t)v21, a6);
  id v27 = v48;
  swift_retain();
  swift_retain();
  char v28 = v50;
  uint64_t v52 = a7;
  int v29 = sub_24C817B18((uint64_t)v19, v50 & 1, (uint64_t)v27, (uint64_t)sub_24C818300, (uint64_t)v25, v49, a6, a7);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v51 = (void (*)(uint64_t *))a6;
  v30(v21, a6);
  swift_release();
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  uint64_t v32 = v29[2];
  v29[2] = sub_24C818310;
  v29[3] = v31;
  sub_24C7D6F70(v32);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) != 1) {
    goto LABEL_8;
  }
  uint64_t v33 = (unint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  swift_beginAccess();
  unint64_t v34 = *v33;
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v35 < *(void *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config) || (v28 & 1) != 0)
  {
    sub_24C812F68((uint64_t)v29);
  }
  else
  {
LABEL_8:
    sub_24C812334((uint64_t)v29, v28 & 1);
    if (qword_2697EEA00 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_24C849590();
    __swift_project_value_buffer(v36, (uint64_t)qword_2697EF4C8);
    swift_retain_n();
    uint64_t v37 = sub_24C849570();
    os_log_type_t v38 = sub_24C84A110();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v54 = v49;
      *(_DWORD *)uint64_t v39 = 136315650;
      uint64_t v40 = (*(uint64_t (**)(void))(v52 + 48))();
      uint64_t v53 = sub_24C7DE68C(v40, v41, &v54);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 1024;
      LODWORD(v53) = v28 & 1;
      sub_24C84A1A0();
      *(_WORD *)(v39 + 18) = 2080;
      swift_retain();
      uint64_t v42 = CosmoMultiplexChannelClient.description.getter();
      unint64_t v44 = v43;
      swift_release();
      uint64_t v53 = sub_24C7DE68C(v42, v44, &v54);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v37, v38, "[Request] Queued request for path=%s, forceFlush=%{BOOL}d %s", (uint8_t *)v39, 0x1Cu);
      uint64_t v45 = v49;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v45, -1, -1);
      MEMORY[0x2532FCCC0](v39, -1, -1);
      swift_release();

      return;
    }

    swift_release_n();
  }
  swift_release();
}

uint64_t sub_24C811470()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v6, v5);
}

void sub_24C811540()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80);
  sub_24C810E20(*(void *)(v0 + 32), *(void (**)(uint64_t *))(v0 + 40), *(void *)(v0 + 48), v0 + v1, *(unsigned __int8 *)(v0 + v1 + *(void *)(*(void *)(*(void *)(v0 + 16) - 8) + 64)), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24C8115A8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v30 = a4;
  uint64_t v31 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  void v28[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2697EF0E0);
  uint64_t v6 = sub_24C84A520();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (void *)((char *)v28 - v8);
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v28 - v11;
  uint64_t v13 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v29 = (uint64_t)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF570);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C7D7BA4(a1, (uint64_t)v17, &qword_2697EF570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = *(void *)v17;
      uint64_t v20 = *((void *)v17 + 1);
      char v21 = v17[16];
      sub_24C7D7054();
      uint64_t v22 = swift_allocError();
      *(void *)uint64_t v23 = v19;
      *(void *)(v23 + 8) = v20;
      *(unsigned char *)(v23 + 16) = v21;
      *uint64_t v9 = v22;
      uint64_t v24 = v33;
      swift_storeEnumTagMultiPayload();
      v31(v9);
      swift_release();
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v32 + 8))(v9, v24);
    }
    else
    {
      uint64_t v25 = v29;
      sub_24C818318((uint64_t)v17, v29, type metadata accessor for CosmoHttpResponseContent);
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v25, AssociatedTypeWitness, AssociatedConformanceWitness);
      (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(v9, v12, AssociatedTypeWitness);
      uint64_t v27 = v33;
      swift_storeEnumTagMultiPayload();
      v31(v9);
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v32 + 8))(v9, v27);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
      return sub_24C80F60C(v25, type metadata accessor for CosmoHttpResponseContent);
    }
  }
  return result;
}

uint64_t sub_24C811C90(uint64_t a1)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24C8492C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)&v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24C80F5A4(a1, (uint64_t)v8, type metadata accessor for CosmoHttpResponseContent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t v25 = 0x3D4C5255656C6966;
    unint64_t v26 = 0xE800000000000000;
    sub_24C8492A0();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    uint64_t v9 = v25;
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v11 = *v8;
    unint64_t v10 = v8[1];
    switch(v10 >> 62)
    {
      case 1uLL:
        if (v11 >> 32 < (int)v11) {
          __break(1u);
        }
        sub_24C7D60D0(v11, v10);
        swift_retain();
        uint64_t v9 = sub_24C845A54((int)v11, v11 >> 32, v10 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24C817AE0);
        uint64_t v14 = v13;
        sub_24C7D5FEC(v11, v10);
        if (v14) {
          goto LABEL_17;
        }
        goto LABEL_9;
      case 2uLL:
        uint64_t v15 = *(void *)(v11 + 16);
        uint64_t v16 = *(void *)(v11 + 24);
        sub_24C7D60D0(v11, v10);
        swift_retain();
        swift_retain();
        uint64_t v9 = sub_24C845A54(v15, v16, v10 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24C817AE0);
        uint64_t v18 = v17;
        swift_release();
        swift_release();
        if (v18) {
          goto LABEL_17;
        }
LABEL_9:
        uint64_t v23 = v11;
        unint64_t v24 = v10;
        sub_24C7D60D0(v11, v10);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC70);
        if (swift_dynamicCast())
        {
          sub_24C7D76C8(v21, (uint64_t)&v25);
          __swift_project_boxed_opaque_existential_1(&v25, v27);
          if (sub_24C84A320())
          {
            sub_24C7D5FEC(v11, v10);
            __swift_project_boxed_opaque_existential_1(&v25, v27);
            sub_24C84A310();
            uint64_t v9 = *(void *)&v21[0];
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
            goto LABEL_18;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
        }
        else
        {
          uint64_t v22 = 0;
          memset(v21, 0, sizeof(v21));
          sub_24C7D7C08((uint64_t)v21, &qword_2697EF6E0);
        }
        uint64_t v12 = sub_24C8479D0(v11, v10);
LABEL_16:
        uint64_t v9 = v12;
LABEL_17:
        sub_24C7D5FEC(v11, v10);
LABEL_18:
        sub_24C7D5FEC(v11, v10);
        break;
      case 3uLL:
        *(void *)((char *)v21 + 6) = 0;
        *(void *)&v21[0] = 0;
        sub_24C817AE0(&v25);
        sub_24C7D5FEC(v11, v10);
        sub_24C7D5FEC(v11, v10);
        return v25;
      default:
        uint64_t v25 = *v8;
        LOWORD(v26) = v10;
        BYTE2(v26) = BYTE2(v10);
        BYTE3(v26) = BYTE3(v10);
        BYTE4(v26) = BYTE4(v10);
        BYTE5(v26) = BYTE5(v10);
        uint64_t v12 = sub_24C849F30();
        goto LABEL_16;
    }
  }
  return v9;
}

uint64_t sub_24C812160(uint64_t a1)
{
  uint64_t v2 = sub_24C849C80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void **)(result + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
    *uint64_t v5 = v8;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
    id v9 = v8;
    LOBYTE(v8) = sub_24C849CA0();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    if (v8)
    {
      unint64_t v10 = (unint64_t *)(v7 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
      swift_beginAccess();
      unint64_t v11 = *v10;
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_24C83F224(a1, v11);
      char v14 = v13;
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        swift_beginAccess();
        sub_24C83F3D4(v12);
        swift_endAccess();
        swift_release();
      }
      sub_24C8126A0();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_24C812334(uint64_t a1, char a2)
{
  uint64_t v5 = sub_24C849C80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v9 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F0E0], v5);
  id v10 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((a2 & 1) == 0)
  {
LABEL_16:
    uint64_t v18 = (void *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_requestQueue);
    swift_beginAccess();
    uint64_t v19 = swift_retain();
    MEMORY[0x2532FBEA0](v19);
    if (*(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_17:
      sub_24C84A0A0();
      sub_24C84A070();
      return swift_endAccess();
    }
LABEL_22:
    sub_24C84A080();
    goto LABEL_17;
  }
  unint64_t v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_requestQueue);
  swift_beginAccess();
  uint64_t v12 = *v11;
  if (!((unint64_t)*v11 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_24C84A2C0();
  if (!v13) {
    goto LABEL_15;
  }
LABEL_5:
  if ((v12 & 0xC000000000000001) != 0)
  {
    char v21 = *(unsigned char *)(MEMORY[0x2532FC0A0](0, v12)
                   + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
    swift_unknownObjectRelease();
    if (v21)
    {
LABEL_7:
      if (v13 != 1)
      {
        uint64_t v14 = 5;
        while (1)
        {
          uint64_t v15 = v14 - 4;
          if ((v12 & 0xC000000000000001) != 0)
          {
            char v16 = *(unsigned char *)(MEMORY[0x2532FC0A0](v14 - 4, v12)
                           + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
            swift_unknownObjectRelease();
            if ((v16 & 1) == 0) {
              goto LABEL_19;
            }
          }
          else if ((*(unsigned char *)(*(void *)(v12 + 8 * v14) {
                              + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) & 1) == 0)
          }
          {
LABEL_19:
            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
          uint64_t v17 = v14 - 3;
          if (__OFADD__(v15, 1)) {
            break;
          }
          ++v14;
          if (v17 == v13) {
            goto LABEL_15;
          }
        }
        __break(1u);
        goto LABEL_21;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(*(void *)(v12 + 32) {
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) & 1) != 0)
  }
  {
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = 0;
LABEL_27:
  swift_beginAccess();
  if (!((unint64_t)*v11 >> 62))
  {
    uint64_t v22 = *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_retain();
    if (v22 >= v15) {
      goto LABEL_29;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_24C84A2C0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v23 < v15) {
    goto LABEL_32;
  }
LABEL_29:
  if ((v15 & 0x8000000000000000) == 0)
  {
    sub_24C8177E4(v15, v15, a1, (void (*)(void))type metadata accessor for PendingRequest);
    return swift_endAccess();
  }
LABEL_33:
  __break(1u);
  return result;
}

void sub_24C8126A0()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_24C849C80();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  uint64_t *v6 = (uint64_t)v7;
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F0E0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_24C849CA0();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
    if (!v16) {
      return;
    }
    goto LABEL_5;
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) != 1) {
    return;
  }
  uint64_t v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_requestQueue);
  swift_beginAccess();
  if ((unint64_t)*v6 >> 62) {
    goto LABEL_18;
  }
  if (!*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return;
  }
LABEL_5:
  uint64_t v9 = *v6;
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_24C84A2C0();
    if (v10)
    {
LABEL_7:
      if (v10 >= 1)
      {
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        int64_t v1 = v9 & 0xC000000000000001;
        while (1)
        {
          if (v1)
          {
            unsigned int v13 = *(unsigned __int8 *)(MEMORY[0x2532FC0A0](v11, v9)
                                     + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
            swift_unknownObjectRelease();
            BOOL v14 = __OFADD__(v12, v13);
            v12 += v13;
            if (v14) {
              goto LABEL_16;
            }
          }
          else
          {
            uint64_t v15 = *(unsigned __int8 *)(*(void *)(v9 + 8 * v11 + 32)
                                     + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
            BOOL v14 = __OFADD__(v12, v15);
            v12 += v15;
            if (v14)
            {
LABEL_16:
              __break(1u);
              goto LABEL_17;
            }
          }
          if (v10 == ++v11) {
            goto LABEL_22;
          }
        }
      }
      goto LABEL_81;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v10) {
      goto LABEL_7;
    }
  }
  uint64_t v12 = 0;
LABEL_22:
  swift_bridgeObjectRelease_n();
  if ((unint64_t)*v6 >> 62)
  {
LABEL_77:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  int64_t v1 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config);
  uint64_t v18 = (unint64_t *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  swift_beginAccess();
  unint64_t v19 = *v18;
  if (!(v19 >> 62))
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    int64_t v21 = v1 - v20;
    if (!__OFSUB__(v1, v20)) {
      goto LABEL_26;
    }
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_24C84A2C0();
  swift_bridgeObjectRelease();
  int64_t v21 = v1 - v47;
  if (__OFSUB__(v1, v47)) {
    goto LABEL_80;
  }
LABEL_26:
  if (v21 >= v17) {
    int64_t v21 = v17;
  }
  if (v21 <= v12) {
    int64_t v1 = v12;
  }
  else {
    int64_t v1 = v21;
  }
  if (v1 > 0)
  {
    if (qword_2697EEA00 == -1)
    {
LABEL_33:
      uint64_t v22 = sub_24C849590();
      __swift_project_value_buffer(v22, (uint64_t)qword_2697EF4C8);
      swift_retain_n();
      uint64_t v23 = sub_24C849570();
      os_log_type_t v24 = sub_24C84A110();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        v50[0] = v49;
        *(_DWORD *)uint64_t v25 = 134218242;
        unint64_t v51 = v1;
        sub_24C84A1A0();
        *(_WORD *)(v25 + 12) = 2080;
        swift_retain();
        uint64_t v26 = CosmoMultiplexChannelClient.description.getter();
        unint64_t v28 = v27;
        swift_release();
        unint64_t v51 = sub_24C7DE68C(v26, v28, v50);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v23, v24, "[Flush] Flushing count=%ld requests, %s", (uint8_t *)v25, 0x16u);
        uint64_t v29 = v49;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v29, -1, -1);
        MEMORY[0x2532FCCC0](v25, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      unint64_t v51 = MEMORY[0x263F8EE78];
      uint64_t v12 = 1;
      while (1)
      {
        swift_beginAccess();
        if ((unint64_t)*v6 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v40 = sub_24C84A2C0();
          swift_bridgeObjectRelease();
          if (!v40)
          {
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
            goto LABEL_77;
          }
        }
        else if (!*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_72;
        }
        uint64_t v38 = *v6;
        if ((unint64_t)*v6 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v41 = sub_24C84A2C0();
          swift_bridgeObjectRelease();
          if (!v41) {
            goto LABEL_73;
          }
        }
        else if (!*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_73;
        }
        if ((v38 & 0xC000000000000001) != 0)
        {
          MEMORY[0x2532FC0A0](0, v38);
        }
        else
        {
          if (!*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_74;
          }
          swift_retain();
        }
        if ((unint64_t)*v6 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v42 = sub_24C84A2C0();
          swift_bridgeObjectRelease();
          if (!v42) {
            goto LABEL_76;
          }
        }
        else if (!*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_76;
        }
        sub_24C817F44(0, 1);
        uint64_t v39 = swift_endAccess();
        MEMORY[0x2532FBEA0](v39);
        if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_24C84A080();
        }
        sub_24C84A0A0();
        sub_24C84A070();
        if (v1 == v12) {
          break;
        }
        BOOL v14 = __OFADD__(v12++, 1);
        if (v14) {
          goto LABEL_75;
        }
      }
      unint64_t v43 = v51;
      if (v51 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v44 = sub_24C84A2C0();
        swift_bridgeObjectRelease();
        if (v44) {
          goto LABEL_65;
        }
      }
      else
      {
        uint64_t v44 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v44)
        {
LABEL_65:
          if (v44 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v44; ++i)
          {
            if ((v43 & 0xC000000000000001) != 0)
            {
              uint64_t v46 = MEMORY[0x2532FC0A0](i, v43);
            }
            else
            {
              uint64_t v46 = *(void *)(v43 + 8 * i + 32);
              swift_retain();
            }
            sub_24C812F68(v46);
            swift_release();
          }
        }
      }
      swift_bridgeObjectRelease();
      return;
    }
LABEL_82:
    swift_once();
    goto LABEL_33;
  }
  if (qword_2697EEA00 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_24C849590();
  __swift_project_value_buffer(v30, (uint64_t)qword_2697EF4C8);
  swift_retain_n();
  uint64_t v31 = sub_24C849570();
  os_log_type_t v32 = sub_24C84A110();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    v50[0] = v34;
    *(_DWORD *)uint64_t v33 = 136315138;
    swift_retain();
    uint64_t v35 = CosmoMultiplexChannelClient.description.getter();
    unint64_t v37 = v36;
    swift_release();
    unint64_t v51 = sub_24C7DE68C(v35, v37, v50);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v31, v32, "[Flush] Skipping, %s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v34, -1, -1);
    MEMORY[0x2532FCCC0](v33, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_24C812F68(uint64_t a1)
{
  uint64_t v2 = v1;
  v34[1] = a1;
  uint64_t v3 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CosmoMultiplexChannelClient.Configuration(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24C849C80();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (void *)((char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  *uint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F0E0], v12);
  id v17 = v16;
  char v18 = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_24C80F5A4(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config, (uint64_t)v11, type metadata accessor for CosmoMultiplexChannelClient.Configuration);
  sub_24C818318((uint64_t)&v11[*(int *)(v9 + 20)], (uint64_t)v8, type metadata accessor for CosmoHttpConnection.Configuration);
  sub_24C80F5A4(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_descriptor, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_parentConnection);
  id v20 = v17;
  swift_retain();
  uint64_t v21 = sub_24C7F0068((uint64_t)v8, (uint64_t)v5, v19, v17);
  if (v21)
  {
    id v8 = (char *)v21;
    uint64_t v22 = (void *)(v2 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
    swift_beginAccess();
    uint64_t v23 = swift_retain();
    MEMORY[0x2532FBEA0](v23);
    if (*(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_4:
      sub_24C84A0A0();
      sub_24C84A070();
      swift_endAccess();
      sub_24C8147DC((uint64_t)v8);
      return swift_release();
    }
LABEL_12:
    sub_24C84A080();
    goto LABEL_4;
  }
  if (qword_2697EEA00 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_24C849590();
  __swift_project_value_buffer(v25, (uint64_t)qword_2697EF4C8);
  swift_retain_n();
  uint64_t v26 = sub_24C849570();
  os_log_type_t v27 = sub_24C84A110();
  if (os_log_type_enabled(v26, v27))
  {
    unint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    v35[0] = v29;
    *(_DWORD *)unint64_t v28 = 136315138;
    swift_retain();
    uint64_t v30 = CosmoMultiplexChannelClient.description.getter();
    unint64_t v32 = v31;
    swift_release();
    uint64_t v37 = sub_24C7DE68C(v30, v32, v35);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v26, v27, "[Request] Could not create outbound request stream, %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v29, -1, -1);
    MEMORY[0x2532FCCC0](v28, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  v35[0] = 0xD000000000000021;
  v35[1] = 0x800000024C8503E0;
  char v36 = 0;
  uint64_t v33 = sub_24C814D0C(0xD000000000000021, 0x800000024C8503E0, (uint64_t)v35);
  return sub_24C8126A0(v33);
}

uint64_t CosmoMultiplexChannelClient.deinit()
{
  sub_24C7D6F70(*(void *)(v0 + 16));
  sub_24C80F60C(v0 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config, type metadata accessor for CosmoMultiplexChannelClient.Configuration);
  swift_bridgeObjectRelease();

  sub_24C80F60C(v0 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_descriptor, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CosmoMultiplexChannelClient.__deallocating_deinit()
{
  CosmoMultiplexChannelClient.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t CosmoMultiplexChannelClient.description.getter()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRetain();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  strcpy((char *)v30, "endpoint=");
  NetworkDescriptor.description.getter();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  strcpy((char *)v30, "isReady=");
  sub_24C849F80();
  swift_bridgeObjectRelease();
  strcpy((char *)v30, "isTerminated=");
  v30[7] = -4864;
  sub_24C849F80();
  swift_bridgeObjectRelease();
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_requestQueue);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_24C84A2C0();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  if (!v4)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_32;
  }
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        unsigned int v7 = *(unsigned __int8 *)(MEMORY[0x2532FC0A0](v5, v3)
                                + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
        swift_unknownObjectRelease();
        BOOL v8 = __OFADD__(v6, v7);
        v6 += v7;
        if (v8) {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v9 = *(unsigned __int8 *)(*(void *)(v3 + 8 * v5 + 32)
                                + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
        BOOL v8 = __OFADD__(v6, v9);
        v6 += v9;
        if (v8)
        {
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
      }
      ++v5;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease_n();
    if (!v6) {
      goto LABEL_32;
    }
    sub_24C84A230();
    swift_bridgeObjectRelease();
    uint64_t v3 = *v2;
    if (!((unint64_t)*v2 >> 62))
    {
      uint64_t v10 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (!v10) {
        goto LABEL_31;
      }
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24C84A2C0();
  uint64_t v10 = result;
  if (result)
  {
LABEL_15:
    if (v10 < 1)
    {
      __break(1u);
      goto LABEL_76;
    }
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        unsigned int v14 = *(unsigned __int8 *)(MEMORY[0x2532FC0A0](v12, v3)
                                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
        swift_unknownObjectRelease();
        BOOL v8 = __OFADD__(v13, v14);
        v13 += v14;
        if (v8) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v15 = *(unsigned __int8 *)(*(void *)(v3 + 8 * v12 + 32)
                                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
        BOOL v8 = __OFADD__(v13, v15);
        v13 += v15;
        if (v8) {
          goto LABEL_27;
        }
      }
      ++v12;
    }
    while (v10 != v12);
  }
LABEL_31:
  swift_bridgeObjectRelease_n();
  sub_24C84A430();
  sub_24C849F80();
  swift_bridgeObjectRelease();
LABEL_32:
  if ((unint64_t)*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
    if (!v16) {
      goto LABEL_38;
    }
  }
  else if (!*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_38;
  }
  sub_24C84A230();
  swift_bridgeObjectRelease();
  if ((unint64_t)*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24C84A2C0();
    swift_bridgeObjectRelease();
  }
  sub_24C84A430();
  sub_24C849F80();
  swift_bridgeObjectRelease();
LABEL_38:
  id v17 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  swift_beginAccess();
  uint64_t v18 = *v17;
  if (!((unint64_t)*v17 >> 62))
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v19) {
      goto LABEL_40;
    }
LABEL_64:
    swift_bridgeObjectRelease_n();
    goto LABEL_68;
  }
LABEL_63:
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_24C84A2C0();
  if (!v19) {
    goto LABEL_64;
  }
LABEL_40:
  if (v19 < 1)
  {
    __break(1u);
    goto LABEL_66;
  }
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  do
  {
    if ((v18 & 0xC000000000000001) != 0)
    {
      unsigned int v22 = *(unsigned __int8 *)(MEMORY[0x2532FC0A0](v20, v18)
                               + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
      swift_unknownObjectRelease();
      BOOL v8 = __OFADD__(v21, v22);
      v21 += v22;
      if (v8) {
        goto LABEL_61;
      }
    }
    else
    {
      uint64_t v23 = *(unsigned __int8 *)(*(void *)(v18 + 8 * v20 + 32)
                               + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
      BOOL v8 = __OFADD__(v21, v23);
      v21 += v23;
      if (v8)
      {
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
    }
    ++v20;
  }
  while (v19 != v20);
  swift_bridgeObjectRelease_n();
  if (!v21) {
    goto LABEL_68;
  }
  sub_24C84A230();
  swift_bridgeObjectRelease();
  uint64_t v18 = *v17;
  if ((unint64_t)*v17 >> 62)
  {
LABEL_66:
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_24C84A2C0();
    uint64_t v24 = result;
    if (!result)
    {
LABEL_67:
      swift_bridgeObjectRelease_n();
      sub_24C84A430();
      sub_24C849F80();
      swift_bridgeObjectRelease();
LABEL_68:
      if ((unint64_t)*v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_24C84A2C0();
        swift_bridgeObjectRelease();
        if (v29) {
          goto LABEL_70;
        }
      }
      else if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_70:
        sub_24C84A230();
        swift_bridgeObjectRelease();
        if ((unint64_t)*v17 >> 62)
        {
          swift_bridgeObjectRetain();
          sub_24C84A2C0();
          swift_bridgeObjectRelease();
        }
        sub_24C84A430();
        sub_24C849F80();
        swift_bridgeObjectRelease();
      }
      sub_24C84A230();
      swift_bridgeObjectRelease();
      sub_24C849F80();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      sub_24C849F80();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      sub_24C849F80();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      return 0x3D656D616ELL;
    }
    goto LABEL_51;
  }
  uint64_t v24 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (!v24) {
    goto LABEL_67;
  }
LABEL_51:
  if (v24 >= 1)
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
      {
        unsigned int v27 = *(unsigned __int8 *)(MEMORY[0x2532FC0A0](v25, v18)
                                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
        swift_unknownObjectRelease();
        BOOL v8 = __OFADD__(v26, v27);
        v26 += v27;
        if (v8) {
          goto LABEL_62;
        }
      }
      else
      {
        uint64_t v28 = *(unsigned __int8 *)(*(void *)(v18 + 8 * v25 + 32)
                                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush);
        BOOL v8 = __OFADD__(v26, v28);
        v26 += v28;
        if (v8) {
          goto LABEL_62;
        }
      }
      ++v25;
    }
    while (v24 != v25);
    goto LABEL_67;
  }
LABEL_76:
  __break(1u);
  return result;
}

unint64_t sub_24C813E98()
{
  unint64_t result = qword_2697EF510;
  if (!qword_2697EF510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF510);
  }
  return result;
}

uint64_t sub_24C813EEC()
{
  return CosmoMultiplexChannelClient.description.getter();
}

unsigned char *storeEnumTagSinglePayload for CosmoMultiplexChannelClient.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C813FE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoMultiplexChannelClient.State()
{
  return &type metadata for CosmoMultiplexChannelClient.State;
}

uint64_t sub_24C81401C()
{
  return type metadata accessor for CosmoMultiplexChannelClient(0);
}

uint64_t type metadata accessor for CosmoMultiplexChannelClient(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EF518);
}

uint64_t sub_24C814044()
{
  uint64_t result = type metadata accessor for CosmoMultiplexChannelClient.Configuration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for NetworkDescriptor();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for CosmoMultiplexChannelClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CosmoMultiplexChannelClient);
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.stateChangedCallback.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.stateChangedCallback.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.stateChangedCallback.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.__allocating_init(config:name:descriptor:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelClient.request<A>(request:forceFlush:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t *initializeBufferWithCopyOfBuffer for CosmoMultiplexChannelClient.Configuration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    unsigned int v6 = (char *)a1 + v5;
    unsigned int v7 = (char *)a2 + v5;
    *(uint64_t *)((char *)a1 + v5) = *(uint64_t *)((char *)a2 + v5);
    uint64_t v8 = *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
    uint64_t v9 = &v6[v8];
    uint64_t v10 = &v7[v8];
    uint64_t v11 = sub_24C8492C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v3;
}

uint64_t destroy for CosmoMultiplexChannelClient.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = v2 + *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  uint64_t v4 = sub_24C8492C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  return v5(v3, v4);
}

void *initializeWithCopy for CosmoMultiplexChannelClient.Configuration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  *(void *)((char *)a1 + v4) = *(void *)((char *)a2 + v4);
  uint64_t v7 = *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  uint64_t v8 = &v5[v7];
  uint64_t v9 = &v6[v7];
  uint64_t v10 = sub_24C8492C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

void *assignWithCopy for CosmoMultiplexChannelClient.Configuration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  *(void *)((char *)a1 + v4) = *(void *)((char *)a2 + v4);
  uint64_t v7 = *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  uint64_t v8 = &v5[v7];
  uint64_t v9 = &v6[v7];
  uint64_t v10 = sub_24C8492C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

void *initializeWithTake for CosmoMultiplexChannelClient.Configuration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  *(void *)((char *)a1 + v4) = *(void *)((char *)a2 + v4);
  uint64_t v7 = *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  uint64_t v8 = &v5[v7];
  uint64_t v9 = &v6[v7];
  uint64_t v10 = sub_24C8492C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

void *assignWithTake for CosmoMultiplexChannelClient.Configuration(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  unsigned int v6 = (char *)a2 + v4;
  *(void *)((char *)a1 + v4) = *(void *)((char *)a2 + v4);
  uint64_t v7 = *(int *)(type metadata accessor for CosmoHttpConnection.Configuration(0) + 20);
  uint64_t v8 = &v5[v7];
  uint64_t v9 = &v6[v7];
  uint64_t v10 = sub_24C8492C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoMultiplexChannelClient.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24C814648);
}

uint64_t sub_24C814648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for CosmoMultiplexChannelClient.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24C8146CC);
}

uint64_t sub_24C8146CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for CosmoHttpConnection.Configuration(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_24C814740()
{
  uint64_t result = type metadata accessor for CosmoHttpConnection.Configuration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24C8147DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849BD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24C849BF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + 32);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_24C817D84;
  void aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_59;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24C849BE0();
  v15[1] = MEMORY[0x263F8EE78];
  sub_24C817C3C((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_24C814A94(uint64_t a1, void *a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection) = a2;
  swift_retain();
  swift_release();
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v4 = a2[2];
  a2[2] = sub_24C817D8C;
  a2[3] = v3;
  sub_24C7D6F70(v4);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = a2[8];
  a2[8] = sub_24C817DBC;
  a2[9] = v5;
  sub_24C7D6F70(v6);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = a2[10];
  a2[10] = sub_24C817DC4;
  a2[11] = v7;
  sub_24C7D6F70(v8);
  return sub_24C7E2A9C();
}

uint64_t sub_24C814BBC(char *a1, uint64_t a2, void (*a3)(char *))
{
  char v4 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v6 = v4;
    a3(&v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C814C30(unsigned __int16 *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C8160A8(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C814C90(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  char v3 = *((unsigned char *)a1 + 16);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v5[0] = v1;
    v5[1] = v2;
    char v6 = v3;
    sub_24C8168A4((uint64_t)v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C814D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24C849BD0();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24C849BF0();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)a3;
  uint64_t v14 = *(void *)(a3 + 8);
  uint64_t v19 = *(void *)(v4 + 32);
  LOBYTE(a3) = *(unsigned char *)(a3 + 16);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v4;
  *(void *)(v16 + 24) = a1;
  *(void *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = v15;
  *(void *)(v16 + 48) = v14;
  *(unsigned char *)(v16 + 56) = a3;
  aBlock[4] = sub_24C817CE4;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_53;
  id v17 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24C7D77BC(v15, v14, a3);
  sub_24C849BE0();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_24C817C3C((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v13, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  return swift_release();
}

uint64_t sub_24C814FF4(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF570);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(uint64_t *)((char *)a1 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection))
  {
    uint64_t v16 = qword_2697EEA00;
    swift_retain();
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v70 = a2;
    uint64_t v17 = sub_24C849590();
    __swift_project_value_buffer(v17, (uint64_t)qword_2697EF4C8);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24C7D77BC(a4, a5, a6);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24C7D77BC(a4, a5, a6);
    swift_retain();
    uint64_t v18 = sub_24C849570();
    os_log_type_t v19 = sub_24C84A110();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      os_log_t v74 = (os_log_t)v68;
      *(_DWORD *)uint64_t v21 = 136315906;
      LODWORD(v67) = v20;
      uint64_t v22 = swift_retain();
      os_log_t v66 = v18;
      uint64_t v23 = sub_24C7E2D34(v22);
      os_log_t v69 = a1;
      uint64_t v24 = (uint64_t *)a3;
      unsigned __int8 v25 = a6;
      unint64_t v27 = v26;
      swift_release();
      uint64_t v71 = sub_24C7DE68C(v23, v27, (uint64_t *)&v74);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      swift_bridgeObjectRetain();
      unint64_t v28 = (unint64_t)v24;
      unint64_t v65 = v24;
      a1 = v69;
      uint64_t v71 = sub_24C7DE68C(v70, v28, (uint64_t *)&v74);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 22) = 2080;
      uint64_t v71 = a4;
      uint64_t v72 = a5;
      unsigned __int8 v73 = v25;
      sub_24C7D77BC(a4, a5, v25);
      uint64_t v29 = sub_24C849ED0();
      uint64_t v71 = sub_24C7DE68C(v29, v30, (uint64_t *)&v74);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D76B0(a4, a5, v25);
      sub_24C7D76B0(a4, a5, v25);
      *(_WORD *)(v21 + 32) = 2080;
      swift_retain();
      uint64_t v31 = sub_24C816FA4();
      unint64_t v33 = v32;
      swift_release();
      uint64_t v71 = sub_24C7DE68C(v31, v33, (uint64_t *)&v74);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v34 = v66;
      _os_log_impl(&dword_24C7BE000, v66, (os_log_type_t)v67, "[Stop] Stopping channel %s, reason='%s' error=%s, %s", (uint8_t *)v21, 0x2Au);
      uint64_t v35 = v68;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v35, -1, -1);
      MEMORY[0x2532FCCC0](v21, -1, -1);

      uint64_t v36 = v70;
      uint64_t v37 = v65;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();
      sub_24C7D76B0(a4, a5, a6);
      sub_24C7D76B0(a4, a5, a6);

      swift_release_n();
      uint64_t v37 = (void *)a3;
      unsigned __int8 v25 = a6;
      uint64_t v36 = v70;
    }
    uint64_t v53 = (char *)a1 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith;
    uint64_t v54 = *(uint64_t *)((char *)a1
                     + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith);
    uint64_t v55 = *((void *)v53 + 1);
    uint64_t v56 = *((void *)v53 + 2);
    uint64_t v57 = *((void *)v53 + 3);
    *(void *)uint64_t v53 = v36;
    *((void *)v53 + 1) = v37;
    *((void *)v53 + 2) = a4;
    *((void *)v53 + 3) = a5;
    unsigned __int8 v58 = v53[32];
    v53[32] = v25;
    swift_bridgeObjectRetain();
    sub_24C7D77BC(a4, a5, v25);
    sub_24C817CE8(v54, v55, v56, v57, v58);
    sub_24C7E4B0C();
    return swift_release();
  }
  else
  {
    uint64_t v38 = *(void (**)(void))((char *)a1
                                        + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
    if (v38)
    {
      os_log_t v69 = (uint64_t *)((char *)a1
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
      uint64_t v39 = qword_2697EEA00;
      uint64_t v70 = *(uint64_t *)((char *)a1
                       + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion
                       + 8);
      swift_retain();
      if (v39 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_24C849590();
      __swift_project_value_buffer(v40, (uint64_t)qword_2697EF4C8);
      swift_bridgeObjectRetain();
      sub_24C7D77BC(a4, a5, a6);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_24C7D77BC(a4, a5, a6);
      swift_retain();
      uint64_t v41 = sub_24C849570();
      os_log_type_t v42 = sub_24C84A110();
      LODWORD(v68) = v42;
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        unint64_t v67 = v38;
        uint64_t v44 = a2;
        uint64_t v45 = v43;
        os_log_t v66 = (os_log_t)swift_slowAlloc();
        os_log_t v74 = v66;
        *(_DWORD *)uint64_t v45 = 136315650;
        os_log_t v64 = v41;
        swift_bridgeObjectRetain();
        uint64_t v71 = sub_24C7DE68C(v44, a3, (uint64_t *)&v74);
        sub_24C84A1A0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 2080;
        uint64_t v71 = a4;
        uint64_t v72 = a5;
        unsigned __int8 v73 = a6;
        sub_24C7D77BC(a4, a5, a6);
        uint64_t v46 = sub_24C849ED0();
        uint64_t v71 = sub_24C7DE68C(v46, v47, (uint64_t *)&v74);
        unint64_t v65 = &v72;
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C7D76B0(a4, a5, a6);
        sub_24C7D76B0(a4, a5, a6);
        *(_WORD *)(v45 + 22) = 2080;
        swift_retain();
        uint64_t v48 = sub_24C816FA4();
        unint64_t v50 = v49;
        swift_release();
        uint64_t v71 = sub_24C7DE68C(v48, v50, (uint64_t *)&v74);
        sub_24C84A1A0();
        swift_release_n();
        uint64_t v38 = v67;
        swift_bridgeObjectRelease();
        os_log_t v51 = v64;
        _os_log_impl(&dword_24C7BE000, v64, (os_log_type_t)v68, "[Stop] Failing, no channel stream found, reason='%s' error=%s %s", (uint8_t *)v45, 0x20u);
        os_log_t v52 = v66;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v52, -1, -1);
        MEMORY[0x2532FCCC0](v45, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_24C7D76B0(a4, a5, a6);
        sub_24C7D76B0(a4, a5, a6);

        swift_release_n();
      }
      *(void *)uint64_t v15 = a4;
      *((void *)v15 + 1) = a5;
      v15[16] = a6;
      swift_storeEnumTagMultiPayload();
      sub_24C7D77BC(a4, a5, a6);
      v38(v15);
      sub_24C7D7C08((uint64_t)v15, &qword_2697EF570);
      uint64_t v59 = v69;
      uint64_t v60 = *v69;
      *os_log_t v69 = 0;
      v59[1] = 0;
      sub_24C7D6F70(v60);
      uint64_t v61 = (void (*)(uint64_t *))a1[2];
      if (v61)
      {
        swift_retain();
        v61(a1);
        sub_24C7D6F70((uint64_t)v38);
        uint64_t v62 = (uint64_t)v61;
      }
      else
      {
        uint64_t v62 = (uint64_t)v38;
      }
      return sub_24C7D6F70(v62);
    }
  }
  return result;
}

uint64_t sub_24C815830(unsigned __int8 *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF570);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_24C849C80();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v12 = *a1;
  uint64_t v13 = *(void **)(v3 + 32);
  void *v11 = v13;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v14 = v13;
  LOBYTE(v13) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection);
  if (v16)
  {
    if (v12)
    {
      uint64_t v17 = *(void *)(v3
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
      if (!v17)
      {
        swift_retain();
        uint64_t v54 = *(void (**)(uint64_t))(v3 + 16);
        if (!v54) {
          return swift_release();
        }
        goto LABEL_26;
      }
      int v69 = v12;
      uint64_t v70 = v7;
      uint64_t v72 = v5;
      os_log_t v74 = (uint64_t *)(v3
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
      uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith);
      uint64_t v19 = *(void *)(v3
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                      + 8);
      uint64_t v21 = *(void *)(v3
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                      + 16);
      uint64_t v20 = *(void *)(v3
                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                      + 24);
      uint64_t v22 = 3;
      if (v19)
      {
        uint64_t v22 = *(void *)(v3
                        + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                        + 16);
        uint64_t v2 = *(void *)(v3
                       + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                       + 24);
      }
      else
      {
        uint64_t v2 = 0;
      }
      unsigned __int8 v23 = *(unsigned char *)(v3
                     + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                     + 32);
      if (v19) {
        LOBYTE(v7) = *(unsigned char *)(v3
      }
                              + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith
                              + 32);
      else {
        LOBYTE(v7) = 2;
      }
      unint64_t v24 = 0xD00000000000002ELL;
      if (v19) {
        unint64_t v24 = *(void *)(v3 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith);
      }
      unint64_t v68 = v24;
      unint64_t v25 = 0x800000024C850390;
      if (v19) {
        unint64_t v25 = v19;
      }
      unint64_t v75 = v25;
      uint64_t v76 = v22;
      uint64_t v71 = v16;
      swift_retain();
      unsigned __int8 v73 = (void (*)(uint64_t))v17;
      sub_24C7D6E3C(v17);
      sub_24C817C84(v18, v19, v21, v20, v23);
      if (qword_2697EEA00 == -1)
      {
LABEL_16:
        uint64_t v26 = sub_24C849590();
        __swift_project_value_buffer(v26, (uint64_t)qword_2697EF4C8);
        swift_retain();
        uint64_t v27 = v76;
        sub_24C7D77BC(v76, v2, v7);
        swift_retain();
        sub_24C7D77BC(v27, v2, v7);
        unint64_t v28 = v75;
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_24C849570();
        os_log_type_t v30 = sub_24C84A110();
        int v31 = v30;
        uint64_t v32 = v2;
        unsigned __int8 v33 = v7;
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v34 = swift_slowAlloc();
          uint64_t v67 = swift_slowAlloc();
          uint64_t v81 = v67;
          *(_DWORD *)uint64_t v34 = 136316162;
          os_log_t v66 = v29;
          v77[0] = sub_24C7DE68C(0xD00000000000001FLL, 0x800000024C8503C0, &v81);
          sub_24C84A1A0();
          uint64_t v35 = v32;
          *(_WORD *)(v34 + 12) = 2080;
          LOBYTE(v77[0]) = v69;
          int v69 = v31;
          uint64_t v36 = sub_24C849ED0();
          v77[0] = sub_24C7DE68C(v36, v37, &v81);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v34 + 22) = 2080;
          swift_bridgeObjectRetain();
          v77[0] = sub_24C7DE68C(v68, v28, &v81);
          sub_24C84A1A0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v34 + 32) = 2080;
          v77[0] = v27;
          v77[1] = v32;
          unsigned __int8 v78 = v33;
          sub_24C7D77BC(v27, v32, v33);
          uint64_t v38 = sub_24C849ED0();
          v77[0] = sub_24C7DE68C(v38, v39, &v81);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          sub_24C7D76B0(v27, v32, v33);
          sub_24C7D76B0(v27, v32, v33);
          *(_WORD *)(v34 + 42) = 2080;
          swift_retain();
          uint64_t v40 = sub_24C816FA4();
          unint64_t v42 = v41;
          swift_release();
          v77[0] = sub_24C7DE68C(v40, v42, &v81);
          sub_24C84A1A0();
          swift_release_n();
          uint64_t v32 = v35;
          swift_bridgeObjectRelease();
          os_log_t v43 = v66;
          _os_log_impl(&dword_24C7BE000, v66, (os_log_type_t)v69, "%s channel stream ended, state=%s reason='%s' error=%s %s", (uint8_t *)v34, 0x34u);
          uint64_t v44 = v67;
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v44, -1, -1);
          MEMORY[0x2532FCCC0](v34, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          sub_24C7D76B0(v27, v32, v7);
          sub_24C7D76B0(v27, v32, v7);

          swift_release_n();
        }
        uint64_t v56 = v73;
        uint64_t v55 = v74;
        uint64_t v57 = (uint64_t)v70;
        *uint64_t v70 = v27;
        *(void *)(v57 + 8) = v32;
        *(unsigned char *)(v57 + 16) = v33;
        swift_storeEnumTagMultiPayload();
        v56(v57);
        sub_24C7D6F70((uint64_t)v56);
        sub_24C7D7C08(v57, &qword_2697EF570);
        uint64_t v58 = *v55;
        *uint64_t v55 = 0;
        v55[1] = 0;
        sub_24C7D6F70(v58);
        uint64_t v54 = *(void (**)(uint64_t))(v3 + 16);
        if (!v54) {
          return swift_release();
        }
LABEL_26:
        swift_retain();
        v54(v3);
        sub_24C7D6F70((uint64_t)v54);
        return swift_release();
      }
LABEL_32:
      swift_once();
      goto LABEL_16;
    }
    uint64_t v45 = qword_2697EEA00;
    swift_retain();
    if (v45 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_24C849590();
    __swift_project_value_buffer(v46, (uint64_t)qword_2697EF4C8);
    swift_retain_n();
    unint64_t v47 = sub_24C849570();
    os_log_type_t v48 = sub_24C84A110();
    if (os_log_type_enabled(v47, v48))
    {
      unint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      v77[0] = v50;
      *(_DWORD *)unint64_t v49 = 136315138;
      swift_retain();
      uint64_t v51 = sub_24C816FA4();
      unint64_t v53 = v52;
      swift_release();
      uint64_t v81 = sub_24C7DE68C(v51, v53, v77);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v47, v48, "Channel stream ready, sending request, %s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v50, -1, -1);
      MEMORY[0x2532FCCC0](v49, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v59 = (void *)(v3 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
    uint64_t v60 = *(void *)(v3 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage + 24);
    uint64_t v61 = v59[4];
    uint64_t v62 = __swift_project_boxed_opaque_existential_1(v59, v60);
    uint64_t v79 = v60;
    uint64_t v63 = *(void *)(v61 + 8);
    uint64_t v80 = v63;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v77);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v60 - 8) + 16))(boxed_opaque_existential_1, v62, v60);
    sub_24C7EF950((uint64_t)boxed_opaque_existential_1, 0, 0, v16, v60, v63);
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
  }
  return result;
}

void sub_24C8160A8(unsigned __int16 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RawHTTPResponse(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24C8492C0();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  MEMORY[0x270FA5388](v10);
  os_log_t v43 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF570);
  MEMORY[0x270FA5388](v46);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24C849C80();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint64_t *)((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void **)(v2 + 32);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F0E0], v14);
  id v19 = v18;
  LOBYTE(v18) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_27:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v20 = (uint64_t *)(v2 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  uint64_t v21 = *(void (**)(char *))(v2
                                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  if (v21)
  {
    unsigned int v22 = *a1;
    if (v22 > 0x193)
    {
      if (v22 == 404)
      {
        long long v23 = xmmword_24C84B010;
        goto LABEL_18;
      }
      if (v22 == 500)
      {
        long long v23 = xmmword_24C84CA80;
        goto LABEL_18;
      }
    }
    else
    {
      if (v22 == 200)
      {
        unint64_t v34 = *((void *)a1 + 2);
        if (v34 >> 60 != 15)
        {
          uint64_t v40 = *((void *)a1 + 1);
          *(void *)uint64_t v13 = v40;
          *((void *)v13 + 1) = v34;
          type metadata accessor for CosmoHttpResponseContent(0);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          sub_24C7D7304(v40, v34);
          sub_24C7D7304(v40, v34);
          sub_24C7D6E3C((uint64_t)v21);
          v21(v13);
          sub_24C7D6F70((uint64_t)v21);
          sub_24C7D6044(v40, v34);
          goto LABEL_22;
        }
        sub_24C7D7BA4((uint64_t)a1 + *(int *)(v4 + 24), (uint64_t)v9, (uint64_t *)&unk_2697EEC50);
        uint64_t v36 = v44;
        uint64_t v35 = v45;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v9, 1, v45) != 1)
        {
          unint64_t v41 = v43;
          (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v43, v9, v35);
          (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v13, v41, v35);
          type metadata accessor for CosmoHttpResponseContent(0);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          swift_retain();
          v21(v13);
          sub_24C7D6F70((uint64_t)v21);
          sub_24C7D7C08((uint64_t)v13, &qword_2697EF570);
          (*(void (**)(char *, uint64_t))(v36 + 8))(v41, v35);
          goto LABEL_23;
        }
        swift_retain();
        sub_24C7D7C08((uint64_t)v9, (uint64_t *)&unk_2697EEC50);
        unint64_t v37 = 0xD000000000000026;
        unint64_t v38 = 0x800000024C850360;
        goto LABEL_20;
      }
      if (v22 == 400)
      {
        long long v23 = xmmword_24C84AFF0;
LABEL_18:
        *(_OWORD *)uint64_t v13 = v23;
        v13[16] = 2;
        swift_storeEnumTagMultiPayload();
        swift_retain();
LABEL_21:
        v21(v13);
        sub_24C7D6F70((uint64_t)v21);
LABEL_22:
        sub_24C7D7C08((uint64_t)v13, &qword_2697EF570);
LABEL_23:
        uint64_t v39 = *v20;
        uint64_t *v20 = 0;
        v20[1] = 0;
        sub_24C7D6F70(v39);
        return;
      }
    }
    unint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    swift_retain();
    sub_24C84A230();
    swift_bridgeObjectRelease();
    unint64_t v47 = 0xD000000000000012;
    unint64_t v48 = 0x800000024C850340;
    LOWORD(v49) = v22;
    sub_24C84A430();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    unint64_t v37 = v47;
    unint64_t v38 = v48;
LABEL_20:
    *(void *)uint64_t v13 = v37;
    *((void *)v13 + 1) = v38;
    v13[16] = 0;
    swift_storeEnumTagMultiPayload();
    goto LABEL_21;
  }
  if (qword_2697EEA00 != -1) {
    goto LABEL_27;
  }
LABEL_8:
  uint64_t v24 = sub_24C849590();
  __swift_project_value_buffer(v24, (uint64_t)qword_2697EF4C8);
  sub_24C80F5A4((uint64_t)a1, (uint64_t)v6, type metadata accessor for RawHTTPResponse);
  swift_retain_n();
  unint64_t v25 = sub_24C849570();
  os_log_type_t v26 = sub_24C84A0F0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    unint64_t v47 = v28;
    *(_DWORD *)uint64_t v27 = 136315650;
    uint64_t v49 = sub_24C7DE68C(0xD000000000000016, 0x800000024C850320, (uint64_t *)&v47);
    sub_24C84A1A0();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v29 = sub_24C7E139C();
    uint64_t v49 = sub_24C7DE68C(v29, v30, (uint64_t *)&v47);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    sub_24C80F60C((uint64_t)v6, type metadata accessor for RawHTTPResponse);
    *(_WORD *)(v27 + 22) = 2080;
    swift_retain();
    uint64_t v31 = sub_24C816FA4();
    unint64_t v33 = v32;
    swift_release();
    uint64_t v49 = sub_24C7DE68C(v31, v33, (uint64_t *)&v47);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v25, v26, "%s ignoring response, no completion handler, response=%s %s", (uint8_t *)v27, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v28, -1, -1);
    MEMORY[0x2532FCCC0](v27, -1, -1);
  }
  else
  {
    sub_24C80F60C((uint64_t)v6, type metadata accessor for RawHTTPResponse);

    swift_release_n();
  }
}

void sub_24C8168A4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF570);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24C849C80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (void (*)(void))((char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)a1;
  uint64_t v11 = *(void **)(a1 + 8);
  uint64_t v13 = *(char *)(a1 + 16);
  uint64_t v14 = *(void **)(v2 + 32);
  *(void *)uint64_t v10 = v14;
  (*(void (**)(void (*)(void), void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F0E0], v7);
  id v15 = v14;
  LOBYTE(v14) = sub_24C849CA0();
  uint64_t v17 = *(void (**)(void (*)(void), uint64_t))(v8 + 8);
  uint64_t v16 = (uint64_t *)(v8 + 8);
  v17(v10, v7);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  LOBYTE(v7) = v13;
  uint64_t v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  uint64_t v10 = *(void (**)(void))(v2
                                      + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  if (v10)
  {
    uint64_t v18 = qword_2697EEA00;
    uint64_t v49 = v16[1];
    swift_retain();
    if (v18 == -1)
    {
LABEL_4:
      uint64_t v19 = sub_24C849590();
      __swift_project_value_buffer(v19, (uint64_t)qword_2697EF4C8);
      sub_24C7ED424(v12, v11, v7);
      swift_retain();
      sub_24C7ED424(v12, v11, v7);
      swift_retain();
      uint64_t v20 = sub_24C849570();
      os_log_type_t v21 = sub_24C84A0F0();
      int v48 = v21;
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v46 = v10;
        uint64_t v23 = v22;
        uint64_t v45 = swift_slowAlloc();
        uint64_t v53 = v45;
        *(_DWORD *)uint64_t v23 = 136315394;
        v43[1] = v23 + 4;
        uint64_t v50 = (uint64_t)v12;
        uint64_t v51 = v11;
        char v52 = v7;
        sub_24C7ED424(v12, v11, v7);
        uint64_t v47 = v13;
        uint64_t v24 = sub_24C849ED0();
        os_log_t v44 = v20;
        uint64_t v50 = sub_24C7DE68C(v24, v25, &v53);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C7ED45C(v12, v11, v7);
        sub_24C7ED45C(v12, v11, v7);
        *(_WORD *)(v23 + 12) = 2080;
        swift_retain();
        uint64_t v26 = sub_24C816FA4();
        unint64_t v28 = v27;
        swift_release();
        uint64_t v50 = sub_24C7DE68C(v26, v28, &v53);
        uint64_t v13 = v47;
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_log_t v29 = v44;
        _os_log_impl(&dword_24C7BE000, v44, (os_log_type_t)v48, "Encountered error while receiving HTTP response, error=%s %s", (uint8_t *)v23, 0x16u);
        uint64_t v30 = v45;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v30, -1, -1);
        uint64_t v31 = v23;
        uint64_t v10 = v46;
        MEMORY[0x2532FCCC0](v31, -1, -1);
      }
      else
      {
        sub_24C7ED45C(v12, v11, v7);
        sub_24C7ED45C(v12, v11, v7);

        swift_release_n();
      }
      *(void *)uint64_t v6 = qword_24C84CCD0[v13];
      *((void *)v6 + 1) = 0;
      v6[16] = 2;
      swift_storeEnumTagMultiPayload();
      v10(v6);
      sub_24C7D6F70((uint64_t)v10);
      sub_24C7D7C08((uint64_t)v6, &qword_2697EF570);
      uint64_t v42 = *v16;
      *uint64_t v16 = 0;
      v16[1] = 0;
      sub_24C7D6F70(v42);
      return;
    }
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  if (qword_2697EEA00 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_24C849590();
  __swift_project_value_buffer(v32, (uint64_t)qword_2697EF4C8);
  sub_24C7ED424(v12, v11, v13);
  swift_retain();
  sub_24C7ED424(v12, v11, v13);
  swift_retain();
  unint64_t v33 = sub_24C849570();
  os_log_type_t v34 = sub_24C84A0F0();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v53 = v49;
    *(_DWORD *)uint64_t v35 = 136315650;
    uint64_t v50 = sub_24C7DE68C(0xD00000000000001DLL, 0x800000024C850300, &v53);
    sub_24C84A1A0();
    *(_WORD *)(v35 + 12) = 2080;
    uint64_t v50 = (uint64_t)v12;
    uint64_t v51 = v11;
    char v52 = v13;
    sub_24C7ED424(v12, v11, v13);
    uint64_t v36 = sub_24C849ED0();
    uint64_t v50 = sub_24C7DE68C(v36, v37, &v53);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    sub_24C7ED45C(v12, v11, v13);
    sub_24C7ED45C(v12, v11, v13);
    *(_WORD *)(v35 + 22) = 2080;
    swift_retain();
    uint64_t v38 = sub_24C816FA4();
    unint64_t v40 = v39;
    swift_release();
    uint64_t v50 = sub_24C7DE68C(v38, v40, &v53);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v33, v34, "%s ignoring error, no completion handler, error=%s %s", (uint8_t *)v35, 0x20u);
    uint64_t v41 = v49;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v41, -1, -1);
    MEMORY[0x2532FCCC0](v35, -1, -1);
  }
  else
  {
    sub_24C7ED45C(v12, v11, v13);
    sub_24C7ED45C(v12, v11, v13);

    swift_release_n();
  }
}

uint64_t sub_24C816FA4()
{
  sub_24C817168(v0);
  sub_24C84A230();
  swift_bridgeObjectRelease();
  sub_24C849440();
  sub_24C817C3C(&qword_2697EEC60, MEMORY[0x263F07508]);
  sub_24C84A430();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  return 4023401;
}

uint64_t sub_24C817168(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC50);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24C8492C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  sub_24C84A230();
  swift_bridgeObjectRelease();
  uint64_t v30 = 0x3D6874617020;
  unint64_t v31 = 0xE600000000000000;
  uint64_t v9 = (void *)(a1 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage + 24);
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage + 32);
  __swift_project_boxed_opaque_existential_1(v9, v10);
  _s5Cosmo0A11HttpRequestPAAE12instancePathSSvg_0(v10, v11);
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  uint64_t v12 = v9[3];
  uint64_t v13 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v12);
  _s5Cosmo0A11HttpRequestPAAE14instanceMethodSSvg_0(v12, v13);
  sub_24C849F80();
  swift_bridgeObjectRelease();
  uint64_t v15 = v9[3];
  uint64_t v14 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v15);
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)(v14 + 8) + 16))(v15);
  if (v17 >> 60 == 15)
  {
    uint64_t v19 = v9[3];
    uint64_t v18 = v9[4];
    __swift_project_boxed_opaque_existential_1(v9, v19);
    (*(void (**)(uint64_t))(*(void *)(v18 + 8) + 24))(v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_24C7D7C08((uint64_t)v4, (uint64_t *)&unk_2697EEC50);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      unint64_t v28 = 0x3D656C696620;
      unint64_t v29 = 0xE600000000000000;
      sub_24C817C3C(&qword_2697EF6C0, MEMORY[0x263F06EA8]);
      sub_24C84A430();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      sub_24C849F80();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  else
  {
    uint64_t v20 = v16;
    unint64_t v21 = v17;
    unint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_24C84A230();
    swift_bridgeObjectRelease();
    unint64_t v28 = 0xD000000000000016;
    unint64_t v29 = 0x800000024C8502E0;
    uint64_t v22 = 0;
    switch(v21 >> 62)
    {
      case 1uLL:
        LODWORD(v22) = HIDWORD(v20) - v20;
        if (__OFSUB__(HIDWORD(v20), v20))
        {
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x24C817584);
        }
        uint64_t v22 = (int)v22;
LABEL_10:
        v27[1] = v22;
        sub_24C84A430();
        sub_24C849F80();
        swift_bridgeObjectRelease();
        sub_24C849F80();
        swift_bridgeObjectRelease();
        sub_24C7D6044(v20, v21);
        break;
      case 2uLL:
        uint64_t v24 = *(void *)(v20 + 16);
        uint64_t v23 = *(void *)(v20 + 24);
        BOOL v25 = __OFSUB__(v23, v24);
        uint64_t v22 = v23 - v24;
        if (!v25) {
          goto LABEL_10;
        }
        goto LABEL_13;
      case 3uLL:
        goto LABEL_10;
      default:
        uint64_t v22 = BYTE6(v21);
        goto LABEL_10;
    }
  }
  return v30;
}

uint64_t sub_24C817594()
{
  sub_24C7D6F70(*(void *)(v0 + 16));

  uint64_t v1 = v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_id;
  uint64_t v2 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  swift_release();
  sub_24C7D6F70(*(void *)(v0
                          + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion));
  sub_24C817CE8(*(void *)(v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith), *(void *)(v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith + 8), *(void *)(v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith + 16), *(void *)(v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith + 24), *(unsigned char *)(v0 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith + 32));
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_24C817694()
{
  return type metadata accessor for PendingRequest(0);
}

uint64_t type metadata accessor for PendingRequest(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EF560);
}

uint64_t sub_24C8176BC()
{
  uint64_t result = sub_24C849440();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24C81778C()
{
  return sub_24C849400();
}

uint64_t sub_24C8177A8()
{
  return sub_24C816FA4();
}

uint64_t sub_24C8177CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C8177E4(a1, a2, a3, MEMORY[0x263F14290]);
}

uint64_t sub_24C8177E4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a4;
    uint64_t v9 = a3;
    uint64_t v5 = a2;
    uint64_t v7 = a1;
    unint64_t v8 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_24C84A2C0();
  swift_bridgeObjectRelease();
  if (v25 < v5) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v11 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v10 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
    uint64_t v13 = v12 + v10;
    if (!__OFADD__(v12, v10)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v8 = *v4;
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v12 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v13 = v12 + v10;
  if (__OFADD__(v12, v10)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v8 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v4 = v8;
  uint64_t v28 = v9;
  uint64_t v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    uint64_t v15 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v12 = 1;
  }
  if (v8 >> 62) {
    goto LABEL_39;
  }
  uint64_t v16 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v16 <= v13) {
    uint64_t v16 = v13;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = MEMORY[0x2532FC0B0](v12, v16, 1, v8);
  swift_bridgeObjectRelease();
  unint64_t *v4 = v8;
  uint64_t v15 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  unint64_t v17 = (void *)(v15 + 32 + 8 * v7);
  v6(0);
  swift_arrayDestroy();
  if (v10)
  {
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_24C84A2C0();
      swift_bridgeObjectRelease();
      uint64_t v19 = v26 - v5;
      if (!__OFSUB__(v26, v5))
      {
LABEL_21:
        if (v19 < 0)
        {
LABEL_46:
          uint64_t result = sub_24C84A300();
          __break(1u);
          return result;
        }
        uint64_t v20 = (char *)(v17 + 1);
        unint64_t v21 = (char *)(v15 + 32 + 8 * v5);
        if (v17 + 1 != (void *)v21 || v20 >= &v21[8 * v19]) {
          memmove(v20, v21, 8 * v19);
        }
        if (!(v8 >> 62))
        {
          uint64_t v22 = *(void *)(v15 + 16);
          uint64_t v23 = v22 + v10;
          if (!__OFADD__(v22, v10))
          {
LABEL_27:
            *(void *)(v15 + 16) = v23;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_24C84A2C0();
        swift_bridgeObjectRelease();
        uint64_t v23 = v27 + v10;
        if (!__OFADD__(v27, v10)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v18 = *(void *)(v15 + 16);
      uint64_t v19 = v18 - v5;
      if (!__OFSUB__(v18, v5)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  *unint64_t v17 = v28;
  return sub_24C84A070();
}

uint64_t sub_24C817AE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24C849F30();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_24C817B18(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a7;
  uint64_t v23 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(boxed_opaque_existential_1, a1, a7);
  type metadata accessor for PendingRequest(0);
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = 0;
  v15[3] = 0;
  sub_24C849430();
  *(void *)((char *)v15 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection) = 0;
  uint64_t v16 = (void *)((char *)v15
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  *uint64_t v16 = 0;
  v16[1] = 0;
  unint64_t v17 = (char *)v15 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith;
  v17[32] = 0;
  *(_OWORD *)unint64_t v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  sub_24C7D76C8(&v21, (uint64_t)v15 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  *((unsigned char *)v15 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) = a2;
  v15[4] = a3;
  uint64_t v18 = (void *)((char *)v15
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  uint64_t v19 = *(void *)((char *)v15
                  + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  *uint64_t v18 = a4;
  v18[1] = a5;
  sub_24C7D6F70(v19);
  return v15;
}

uint64_t sub_24C817C3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24C817C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_24C7D77BC(a3, a4, a5);
  }
}

void sub_24C817CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_24C7D76B0(a3, a4, a5);
  }
}

uint64_t sub_24C817D44()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C817D84()
{
  return sub_24C814A94(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_24C817D8C(char *a1)
{
  return sub_24C814BBC(a1, v1, (void (*)(char *))sub_24C815830);
}

uint64_t sub_24C817DBC(unsigned __int16 *a1)
{
  return sub_24C814C30(a1);
}

uint64_t sub_24C817DC4(uint64_t *a1)
{
  return sub_24C814C90(a1);
}

uint64_t sub_24C817DCC(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_24C809B5C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[5 * a2 + 4];
    if (a1 != a2 || &v4[5 * a1 + 4] >= (void *)&v16[40 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[5 * a1 + 4], v16, 40 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_24C84A300();
  __break(1u);
  return result;
}

uint64_t sub_24C817F44(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    unint64_t v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_24C84A2C0();
  swift_bridgeObjectRelease();
  if (v19 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v5 = *v3;
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 - v7;
  if (__OFADD__(v8, v6)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v5 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v5;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v8 = 1;
  }
  if (v5 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9) {
    uint64_t v12 = v9;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = MEMORY[0x2532FC0B0](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  uint64_t v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for PendingRequest(0);
  swift_arrayDestroy();
  if (v6)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_24C84A2C0();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_21:
        if (v14 < 0)
        {
LABEL_46:
          uint64_t result = sub_24C84A300();
          __break(1u);
          return result;
        }
        uint64_t v15 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14) {
          memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
        }
        if (!(v5 >> 62))
        {
          uint64_t v16 = *(void *)(v11 + 16);
          uint64_t v17 = v16 + v6;
          if (!__OFADD__(v16, v6))
          {
LABEL_27:
            *(void *)(v11 + 16) = v17;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_24C84A2C0();
        swift_bridgeObjectRelease();
        uint64_t v17 = v21 + v6;
        if (!__OFADD__(v21, v6)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v14 = v13 - v2;
      if (!__OFSUB__(v13, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_24C84A070();
}

uint64_t objectdestroy_49Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_24C7D76B0(*(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  return MEMORY[0x270FA0238](v0, 57, 7);
}

uint64_t sub_24C818274()
{
  return sub_24C814FF4(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
}

uint64_t sub_24C818288()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C8182C0()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24C818300(uint64_t a1)
{
  return sub_24C8115A8(a1, *(void *)(v1 + 32), *(void (**)(uint64_t *))(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_24C818310(uint64_t a1)
{
  return sub_24C812160(a1);
}

uint64_t sub_24C818318(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24C8183B0(__int16 a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_24C849BD0();
  uint64_t v23 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_24C849BF0();
  uint64_t v15 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(void *)(v6 + 48);
  char v26 = HIBYTE(a1) & 1;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v6;
  *(void *)(v18 + 24) = a4;
  *(void *)(v18 + 32) = a5;
  *(unsigned char *)(v18 + 40) = a1;
  *(unsigned char *)(v18 + 41) = v26;
  *(void *)(v18 + 48) = a2;
  *(void *)(v18 + 56) = a3;
  aBlock[4] = sub_24C830714;
  void aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_167;
  uint64_t v19 = _Block_copy(aBlock);
  sub_24C7D60D0(a2, a3);
  swift_retain();
  swift_retain();
  sub_24C849BE0();
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_24C830654((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v17, v14, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v22);
  return swift_release();
}

uint64_t sub_24C8186A4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_24C849BD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24C849BF0();
  uint64_t v14 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v5 + 48);
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = v5;
  void v17[3] = a3;
  void v17[4] = a4;
  v17[5] = a1;
  v17[6] = a2;
  aBlock[4] = sub_24C8308B0;
  void aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_180;
  uint64_t v18 = _Block_copy(aBlock);
  sub_24C7D60D0(a1, a2);
  swift_retain();
  swift_retain();
  sub_24C849BE0();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_24C830654((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

uint64_t sub_24C81897C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_24C849BD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24C849BF0();
  uint64_t v14 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v5 + 48);
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = v5;
  void v17[3] = a3;
  void v17[4] = a4;
  v17[5] = a1;
  v17[6] = a2;
  aBlock[4] = sub_24C830A40;
  void aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_191;
  uint64_t v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_24C849BE0();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_24C830654((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

uint64_t sub_24C818C50(uint64_t a1, uint64_t (*a2)(long long *), uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6)
{
  __int16 v32 = a4 & 0x1FF;
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_terminated) == 1)
  {
    long long v29 = xmmword_24C84C090;
    LOWORD(v30) = 258;
    return a2(&v29);
  }
  sub_24C849170();
  swift_allocObject();
  sub_24C849160();
  sub_24C830738();
  uint64_t v10 = sub_24C849150();
  unint64_t v12 = v11;
  swift_release();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  void v14[3] = a2;
  v14[4] = a3;
  uint64_t v15 = (void **)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue);
  swift_beginAccess();
  uint64_t v16 = *v15;
  sub_24C7D60D0(v10, v12);
  swift_retain();
  sub_24C7D60D0(v10, v12);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v15 = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v16 = sub_24C809B5C(0, v16[2] + 1, 1, v16);
    *uint64_t v15 = v16;
  }
  unint64_t v19 = v16[2];
  unint64_t v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    uint64_t v16 = sub_24C809B5C((void *)(v18 > 1), v19 + 1, 1, v16);
    *uint64_t v15 = v16;
  }
  void v16[2] = v19 + 1;
  uint64_t v20 = &v16[5 * v19];
  *((_DWORD *)v20 + 8) = 1;
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_24C8307A8;
  v20[8] = v14;
  swift_endAccess();
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_isReady))
  {
    sub_24C7FF2BC(v10, v12, 1);
    sub_24C7D5FEC(v10, v12);
LABEL_13:
    sub_24C7D5FEC(v10, v12);
    return swift_release();
  }
  if (qword_2697EE9F0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_24C849590();
  __swift_project_value_buffer(v21, (uint64_t)qword_2697EF1B0);
  swift_retain_n();
  uint64_t v22 = sub_24C849570();
  os_log_type_t v23 = sub_24C84A110();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(void *)&long long v29 = v28;
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_retain();
    uint64_t v25 = sub_24C7F5824();
    unint64_t v27 = v26;
    swift_release();
    uint64_t v31 = sub_24C7DE68C(v25, v27, (uint64_t *)&v29);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v22, v23, "[Request] Queueing, %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v28, -1, -1);
    MEMORY[0x2532FCCC0](v24, -1, -1);
    sub_24C7D5FEC(v10, v12);

    goto LABEL_13;
  }
  sub_24C7D5FEC(v10, v12);
  swift_release();
  sub_24C7D5FEC(v10, v12);

  return swift_release_n();
}

uint64_t sub_24C819370(uint64_t a1, uint64_t (*a2)(long long *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_terminated) == 1)
  {
    long long v28 = xmmword_24C84C090;
    __int16 v29 = 258;
    return a2(&v28);
  }
  sub_24C849170();
  swift_allocObject();
  sub_24C849160();
  sub_24C8308C8();
  uint64_t v9 = sub_24C849150();
  unint64_t v11 = v10;
  swift_release();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v12;
  v13[3] = a2;
  void v13[4] = a3;
  uint64_t v14 = (void **)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue);
  swift_beginAccess();
  uint64_t v15 = *v14;
  sub_24C7D60D0(v9, v11);
  swift_retain();
  sub_24C7D60D0(v9, v11);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void *v14 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v15 = sub_24C809B5C(0, v15[2] + 1, 1, v15);
    void *v14 = v15;
  }
  unint64_t v18 = v15[2];
  unint64_t v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    uint64_t v15 = sub_24C809B5C((void *)(v17 > 1), v18 + 1, 1, v15);
    void *v14 = v15;
  }
  void v15[2] = v18 + 1;
  unint64_t v19 = &v15[5 * v18];
  *((_DWORD *)v19 + 8) = 3;
  v19[5] = v9;
  v19[6] = v11;
  v19[7] = sub_24C830938;
  v19[8] = v13;
  swift_endAccess();
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_isReady))
  {
    sub_24C7FF2BC(v9, v11, 3);
    sub_24C7D5FEC(v9, v11);
LABEL_13:
    sub_24C7D5FEC(v9, v11);
    return swift_release();
  }
  if (qword_2697EE9F0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_24C849590();
  __swift_project_value_buffer(v20, (uint64_t)qword_2697EF1B0);
  swift_retain_n();
  uint64_t v21 = sub_24C849570();
  os_log_type_t v22 = sub_24C84A110();
  if (os_log_type_enabled(v21, v22))
  {
    os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(void *)&long long v28 = v27;
    *(_DWORD *)os_log_type_t v23 = 136315138;
    swift_retain();
    uint64_t v24 = sub_24C7F5824();
    unint64_t v26 = v25;
    swift_release();
    uint64_t v30 = sub_24C7DE68C(v24, v26, (uint64_t *)&v28);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v21, v22, "[Request] Queueing, %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v27, -1, -1);
    MEMORY[0x2532FCCC0](v23, -1, -1);
    sub_24C7D5FEC(v9, v11);

    goto LABEL_13;
  }
  sub_24C7D5FEC(v9, v11);
  swift_release();
  sub_24C7D5FEC(v9, v11);

  return swift_release_n();
}

uint64_t sub_24C819A6C(uint64_t a1, uint64_t (*a2)(_OWORD *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_terminated) == 1)
  {
    v28[0] = xmmword_24C84C090;
    v28[1] = xmmword_24C84C090;
    char v29 = 1;
    return a2(v28);
  }
  sub_24C849170();
  swift_allocObject();
  sub_24C849160();
  sub_24C830A70();
  uint64_t v9 = sub_24C849150();
  unint64_t v11 = v10;
  swift_release();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v12;
  v13[3] = a2;
  void v13[4] = a3;
  uint64_t v14 = (void **)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_requestQueue);
  swift_beginAccess();
  uint64_t v15 = *v14;
  sub_24C7D60D0(v9, v11);
  swift_retain();
  sub_24C7D60D0(v9, v11);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void *v14 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v15 = sub_24C809B5C(0, v15[2] + 1, 1, v15);
    void *v14 = v15;
  }
  unint64_t v18 = v15[2];
  unint64_t v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    uint64_t v15 = sub_24C809B5C((void *)(v17 > 1), v18 + 1, 1, v15);
    void *v14 = v15;
  }
  void v15[2] = v18 + 1;
  unint64_t v19 = &v15[5 * v18];
  *((_DWORD *)v19 + 8) = 5;
  v19[5] = v9;
  v19[6] = v11;
  v19[7] = sub_24C830AE0;
  v19[8] = v13;
  swift_endAccess();
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo24CosmoSerialChannelClient_isReady))
  {
    sub_24C7FF2BC(v9, v11, 5);
    sub_24C7D5FEC(v9, v11);
LABEL_13:
    sub_24C7D5FEC(v9, v11);
    return swift_release();
  }
  if (qword_2697EE9F0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_24C849590();
  __swift_project_value_buffer(v20, (uint64_t)qword_2697EF1B0);
  swift_retain_n();
  uint64_t v21 = sub_24C849570();
  os_log_type_t v22 = sub_24C84A110();
  if (os_log_type_enabled(v21, v22))
  {
    os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(void *)&v28[0] = v27;
    *(_DWORD *)os_log_type_t v23 = 136315138;
    swift_retain();
    uint64_t v24 = sub_24C7F5824();
    unint64_t v26 = v25;
    swift_release();
    sub_24C7DE68C(v24, v26, (uint64_t *)v28);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v21, v22, "[Request] Queueing, %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v27, -1, -1);
    MEMORY[0x2532FCCC0](v23, -1, -1);
    sub_24C7D5FEC(v9, v11);

    goto LABEL_13;
  }
  sub_24C7D5FEC(v9, v11);
  swift_release();
  sub_24C7D5FEC(v9, v11);

  return swift_release_n();
}

uint64_t sub_24C81A150(uint64_t a1, unint64_t a2, __int16 a3, uint64_t a4, void (*a5)(long long *), uint64_t a6, void (*a7)(void))
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if ((a3 & 0x100) != 0)
    {
      *(void *)&long long v14 = a1;
      *((void *)&v14 + 1) = a2;
      LOBYTE(v15) = a3;
      HIBYTE(v15) = 1;
      sub_24C7D77BC(a1, a2, a3);
      a5(&v14);
      swift_release();
      return sub_24C8307C8(a1, a2, a3, 1);
    }
    else
    {
      sub_24C849140();
      swift_allocObject();
      sub_24C7D60D0(a1, a2);
      sub_24C849130();
      a7();
      sub_24C849120();
      swift_release();
      long long v14 = v13;
      __int16 v15 = 0;
      sub_24C7D60D0(v13, *((unint64_t *)&v13 + 1));
      a5(&v14);
      swift_release();
      sub_24C8307C8(a1, a2, a3, 0);
      sub_24C7D5FEC(v13, *((unint64_t *)&v13 + 1));
      return sub_24C7D5FEC(v13, *((unint64_t *)&v13 + 1));
    }
  }
  return result;
}

uint64_t sub_24C81A8D8(uint64_t a1, unint64_t a2, __int16 a3, uint64_t a4, void (*a5)(long long *))
{
  uint64_t v15 = *MEMORY[0x263EF8340];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if ((a3 & 0x100) != 0)
    {
      *(void *)&long long v12 = a1;
      *((void *)&v12 + 1) = a2;
      long long v13 = a3;
      LOBYTE(v14) = 1;
      sub_24C7D77BC(a1, a2, a3);
      a5(&v12);
      swift_release();
      return sub_24C8307C8(a1, a2, a3, 1);
    }
    else
    {
      sub_24C849140();
      swift_allocObject();
      sub_24C7D60D0(a1, a2);
      sub_24C849130();
      sub_24C830B08();
      sub_24C849120();
      swift_release();
      long long v12 = v10;
      long long v13 = v11;
      LOBYTE(v14) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a5(&v12);
      swift_release();
      sub_24C8307C8(a1, a2, a3, 0);
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_24C81B070(char a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_24C849BD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24C849BF0();
  uint64_t v14 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v5;
  *(void *)(v17 + 24) = a3;
  *(void *)(v17 + 32) = a4;
  *(unsigned char *)(v17 + 40) = a1;
  *(unsigned char *)(v17 + 41) = a2;
  aBlock[4] = sub_24C830DD0;
  void aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_217;
  unint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24C849BE0();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_24C830654((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

uint64_t sub_24C81B34C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v7 = v6;
  uint64_t v11 = sub_24C849BD0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_24C849BF0();
  uint64_t v15 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(v7 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v7;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(unsigned char *)(v18 + 40) = a1;
  aBlock[4] = v22;
  void aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = v23;
  unint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24C849BE0();
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_24C830654((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v17, v14, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v25);
  return swift_release();
}

uint64_t sub_24C81B614(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v24 = a3;
  int v25 = a2;
  uint64_t v8 = sub_24C849BD0();
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_24C849BF0();
  uint64_t v11 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FileRequest(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  sub_24C830314(a1, (uint64_t)v17, type metadata accessor for FileRequest);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = v18 + v16;
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = v24;
  void v20[2] = v5;
  v20[3] = v21;
  uint64_t v20[4] = a4;
  sub_24C8301D0((uint64_t)v17, (uint64_t)v20 + v18, type metadata accessor for FileRequest);
  *((unsigned char *)v20 + v19) = v25;
  aBlock[4] = sub_24C830558;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_154;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24C849BE0();
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_24C830654((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v13, v10, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
  return swift_release();
}

uint64_t sub_24C81B9BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v24 = a3;
  int v25 = a2;
  uint64_t v8 = sub_24C849BD0();
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_24C849BF0();
  uint64_t v11 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RejectFileRequest(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(v5 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  sub_24C830314(a1, (uint64_t)v17, type metadata accessor for RejectFileRequest);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = v18 + v16;
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = v24;
  void v20[2] = v5;
  v20[3] = v21;
  uint64_t v20[4] = a4;
  sub_24C8301D0((uint64_t)v17, (uint64_t)v20 + v18, type metadata accessor for RejectFileRequest);
  *((unsigned char *)v20 + v19) = v25;
  aBlock[4] = sub_24C830394;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_138;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24C849BE0();
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_24C830654((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v13, v10, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
  return swift_release();
}

void sub_24C81BD64(uint64_t a1, void (*a2)(id *), uint64_t a3, char a4)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) == 1)
  {
    sub_24C7D7054();
    uint64_t v6 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v7 = xmmword_24C84C090;
    *(unsigned char *)(v7 + 16) = 2;
    id v28 = v6;
    char v29 = 1;
    a2(&v28);
    sub_24C7D7B98(v28, v29);
    return;
  }
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  uint64_t v12[3] = a2;
  void v12[4] = a3;
  id v13 = v10;
  swift_retain();
  uint64_t v14 = sub_24C82F768(a4 & 1, (uint64_t)v13, (uint64_t)sub_24C830134, (uint64_t)v12, (uint64_t)&type metadata for CloseRequest, (uint64_t (*)(void))sub_24C83017C);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = v14[2];
  v14[2] = sub_24C818310;
  void v14[3] = v15;
  sub_24C7D6F70(v16);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v17 = (unint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  swift_beginAccess();
  unint64_t v18 = *v17;
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v19 < *(void *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config) || (a4 & 1) != 0)
  {
    sub_24C812F68((uint64_t)v14);
  }
  else
  {
LABEL_8:
    sub_24C812334((uint64_t)v14, a4 & 1);
    if (qword_2697EEA00 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_24C849590();
    __swift_project_value_buffer(v20, (uint64_t)qword_2697EF4C8);
    swift_retain_n();
    uint64_t v21 = sub_24C849570();
    os_log_type_t v22 = sub_24C84A110();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v31 = v24;
      *(_DWORD *)uint64_t v23 = 136315650;
      sub_24C7DE68C(0x65736F6C632FLL, 0xE600000000000000, &v31);
      sub_24C84A1A0();
      *(_WORD *)(v23 + 12) = 1024;
      sub_24C84A1A0();
      *(_WORD *)(v23 + 18) = 2080;
      swift_retain();
      uint64_t v25 = CosmoMultiplexChannelClient.description.getter();
      unint64_t v27 = v26;
      swift_release();
      uint64_t v30 = sub_24C7DE68C(v25, v27, &v31);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v21, v22, "[Request] Queued request for path=%s, forceFlush=%{BOOL}d %s", (uint8_t *)v23, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v24, -1, -1);
      MEMORY[0x2532FCCC0](v23, -1, -1);
      swift_release();

      return;
    }

    swift_release_n();
  }
  swift_release();
}

void sub_24C81C1AC(uint64_t a1, void (*a2)(void **), uint64_t a3, char a4)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) == 1)
  {
    sub_24C7D7054();
    uint64_t v6 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v7 = xmmword_24C84C090;
    *(unsigned char *)(v7 + 16) = 2;
    v28[0] = v6;
    char v29 = 1;
    a2(v28);
    sub_24C830CD8(v28[0], (uint64_t)v28[1], v29);
    return;
  }
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  uint64_t v12[3] = a2;
  void v12[4] = a3;
  id v13 = v10;
  swift_retain();
  uint64_t v14 = sub_24C82F768(a4 & 1, (uint64_t)v13, (uint64_t)sub_24C830CCC, (uint64_t)v12, (uint64_t)&type metadata for FileListRequest, (uint64_t (*)(void))sub_24C830CE8);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = v14[2];
  v14[2] = sub_24C818310;
  void v14[3] = v15;
  sub_24C7D6F70(v16);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v17 = (unint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  swift_beginAccess();
  unint64_t v18 = *v17;
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v19 < *(void *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config) || (a4 & 1) != 0)
  {
    sub_24C812F68((uint64_t)v14);
  }
  else
  {
LABEL_8:
    sub_24C812334((uint64_t)v14, a4 & 1);
    if (qword_2697EEA00 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_24C849590();
    __swift_project_value_buffer(v20, (uint64_t)qword_2697EF4C8);
    swift_retain_n();
    uint64_t v21 = sub_24C849570();
    os_log_type_t v22 = sub_24C84A110();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v31 = v24;
      *(_DWORD *)uint64_t v23 = 136315650;
      sub_24C7DE68C(0x73656C69662FLL, 0xE600000000000000, &v31);
      sub_24C84A1A0();
      *(_WORD *)(v23 + 12) = 1024;
      sub_24C84A1A0();
      *(_WORD *)(v23 + 18) = 2080;
      swift_retain();
      uint64_t v25 = CosmoMultiplexChannelClient.description.getter();
      unint64_t v27 = v26;
      swift_release();
      uint64_t v30 = sub_24C7DE68C(v25, v27, &v31);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v21, v22, "[Request] Queued request for path=%s, forceFlush=%{BOOL}d %s", (uint8_t *)v23, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v24, -1, -1);
      MEMORY[0x2532FCCC0](v23, -1, -1);
      swift_release();

      return;
    }

    swift_release_n();
  }
  swift_release();
}

void sub_24C81C5F4(uint64_t a1, void (*a2)(void **), uint64_t a3, char a4, char a5)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) == 1)
  {
    sub_24C7D7054();
    uint64_t v7 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v8 = xmmword_24C84C090;
    *(unsigned char *)(v8 + 16) = 2;
    v30[0] = v7;
    char v31 = 1;
    a2(v30);
    sub_24C830E68(v30[0], (uint64_t)v30[1], (uint64_t)v30[2], v31);
    return;
  }
  uint64_t v12 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  void v14[3] = a2;
  v14[4] = a3;
  id v15 = v12;
  swift_retain();
  uint64_t v16 = sub_24C82F858(a4, a5 & 1, (uint64_t)v15, (uint64_t)sub_24C830E5C, (uint64_t)v14);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = v16[2];
  void v16[2] = sub_24C818310;
  void v16[3] = v17;
  sub_24C7D6F70(v18);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v19 = (unint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  swift_beginAccess();
  unint64_t v20 = *v19;
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v21 < *(void *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config) || (a5 & 1) != 0)
  {
    sub_24C812F68((uint64_t)v16);
  }
  else
  {
LABEL_8:
    sub_24C812334((uint64_t)v16, a5 & 1);
    if (qword_2697EEA00 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_24C849590();
    __swift_project_value_buffer(v22, (uint64_t)qword_2697EF4C8);
    swift_retain_n();
    uint64_t v23 = sub_24C849570();
    os_log_type_t v24 = sub_24C84A110();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v33 = v26;
      *(_DWORD *)uint64_t v25 = 136315650;
      sub_24C7DE68C(0x657361656C2FLL, 0xE600000000000000, &v33);
      sub_24C84A1A0();
      *(_WORD *)(v25 + 12) = 1024;
      sub_24C84A1A0();
      *(_WORD *)(v25 + 18) = 2080;
      swift_retain();
      uint64_t v27 = CosmoMultiplexChannelClient.description.getter();
      unint64_t v29 = v28;
      swift_release();
      uint64_t v32 = sub_24C7DE68C(v27, v29, &v33);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v23, v24, "[Request] Queued request for path=%s, forceFlush=%{BOOL}d %s", (uint8_t *)v25, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v26, -1, -1);
      MEMORY[0x2532FCCC0](v25, -1, -1);
      swift_release();

      return;
    }

    swift_release_n();
  }
  swift_release();
}

void sub_24C81CA2C(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = type metadata accessor for FileRequest(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v42 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF6B0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (uint64_t *)((char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) == 1)
  {
    sub_24C7D7054();
    uint64_t v19 = swift_allocError();
    *(_OWORD *)uint64_t v20 = xmmword_24C84C090;
    *(unsigned char *)(v20 + 16) = 2;
    *uint64_t v18 = v19;
    swift_storeEnumTagMultiPayload();
    a2(v18);
    sub_24C7D7C08((uint64_t)v18, &qword_2697EF6B0);
    return;
  }
  sub_24C830314(a4, (uint64_t)v15, type metadata accessor for FileRequest);
  char v21 = a5;
  uint64_t v22 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v24 = (void *)swift_allocObject();
  void v24[2] = v23;
  v24[3] = a2;
  v24[4] = a3;
  sub_24C830314((uint64_t)v15, (uint64_t)v13, type metadata accessor for FileRequest);
  id v25 = v22;
  char v26 = v21;
  uint64_t v27 = (uint64_t)v25;
  swift_retain();
  swift_retain();
  unint64_t v28 = sub_24C82F954((uint64_t)v13, v21 & 1, v27, (uint64_t)sub_24C830648, (uint64_t)v24);
  sub_24C830238((uint64_t)v15, type metadata accessor for FileRequest);
  swift_release();
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  uint64_t v30 = v28[2];
  _OWORD v28[2] = sub_24C818310;
  void v28[3] = v29;
  sub_24C7D6F70(v30);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) & 1) == 0) {
    goto LABEL_8;
  }
  char v31 = (unint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  swift_beginAccess();
  unint64_t v32 = *v31;
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v33 < *(void *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config) || (v21 & 1) != 0)
  {
    sub_24C812F68((uint64_t)v28);
  }
  else
  {
LABEL_8:
    sub_24C812334((uint64_t)v28, v21 & 1);
    if (qword_2697EEA00 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_24C849590();
    __swift_project_value_buffer(v34, (uint64_t)qword_2697EF4C8);
    swift_retain_n();
    uint64_t v35 = sub_24C849570();
    os_log_type_t v36 = sub_24C84A110();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v44 = v38;
      *(_DWORD *)uint64_t v37 = 136315650;
      uint64_t v43 = sub_24C7DE68C(0x656C69662FLL, 0xE500000000000000, &v44);
      sub_24C84A1A0();
      *(_WORD *)(v37 + 12) = 1024;
      LODWORD(v43) = v26 & 1;
      sub_24C84A1A0();
      *(_WORD *)(v37 + 18) = 2080;
      swift_retain();
      uint64_t v39 = CosmoMultiplexChannelClient.description.getter();
      unint64_t v41 = v40;
      swift_release();
      uint64_t v43 = sub_24C7DE68C(v39, v41, &v44);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v35, v36, "[Request] Queued request for path=%s, forceFlush=%{BOOL}d %s", (uint8_t *)v37, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v38, -1, -1);
      MEMORY[0x2532FCCC0](v37, -1, -1);
      swift_release();

      return;
    }

    swift_release_n();
  }
  swift_release();
}

void sub_24C81CF8C(uint64_t a1, void (*a2)(id *), uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = type metadata accessor for RejectFileRequest(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v39 - v14;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_terminated) == 1)
  {
    sub_24C7D7054();
    uint64_t v16 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v17 = xmmword_24C84C090;
    *(unsigned char *)(v17 + 16) = 2;
    id v40 = v16;
    char v41 = 1;
    a2(&v40);
    sub_24C7D7B98(v40, v41);
    return;
  }
  sub_24C830314(a4, (uint64_t)&v39 - v14, type metadata accessor for RejectFileRequest);
  char v18 = a5;
  uint64_t v19 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_queue);
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  char v21 = (void *)swift_allocObject();
  void v21[2] = v20;
  v21[3] = a2;
  v21[4] = a3;
  sub_24C830314((uint64_t)v15, (uint64_t)v13, type metadata accessor for RejectFileRequest);
  id v22 = v19;
  char v23 = v18;
  uint64_t v24 = (uint64_t)v22;
  swift_retain();
  swift_retain();
  id v25 = sub_24C82FAA4((uint64_t)v13, v18 & 1, v24, (uint64_t)sub_24C8303DC, (uint64_t)v21);
  sub_24C830238((uint64_t)v15, type metadata accessor for RejectFileRequest);
  swift_release();
  uint64_t v26 = swift_allocObject();
  swift_weakInit();
  uint64_t v27 = v25[2];
  void v25[2] = sub_24C818310;
  v25[3] = v26;
  sub_24C7D6F70(v27);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_ready) & 1) == 0) {
    goto LABEL_8;
  }
  unint64_t v28 = (unint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_activeRequests);
  swift_beginAccess();
  unint64_t v29 = *v28;
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_24C84A2C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v30 < *(void *)(a1 + OBJC_IVAR____TtC5Cosmo27CosmoMultiplexChannelClient_config) || (v18 & 1) != 0)
  {
    sub_24C812F68((uint64_t)v25);
  }
  else
  {
LABEL_8:
    sub_24C812334((uint64_t)v25, v18 & 1);
    if (qword_2697EEA00 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_24C849590();
    __swift_project_value_buffer(v31, (uint64_t)qword_2697EF4C8);
    swift_retain_n();
    unint64_t v32 = sub_24C849570();
    os_log_type_t v33 = sub_24C84A110();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v43 = v35;
      *(_DWORD *)uint64_t v34 = 136315650;
      uint64_t v42 = sub_24C7DE68C(0x467463656A65722FLL, 0xEB00000000656C69, &v43);
      sub_24C84A1A0();
      *(_WORD *)(v34 + 12) = 1024;
      LODWORD(v42) = v23 & 1;
      sub_24C84A1A0();
      *(_WORD *)(v34 + 18) = 2080;
      swift_retain();
      uint64_t v36 = CosmoMultiplexChannelClient.description.getter();
      unint64_t v38 = v37;
      swift_release();
      uint64_t v42 = sub_24C7DE68C(v36, v38, &v43);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v32, v33, "[Request] Queued request for path=%s, forceFlush=%{BOOL}d %s", (uint8_t *)v34, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v35, -1, -1);
      MEMORY[0x2532FCCC0](v34, -1, -1);
      swift_release();

      return;
    }

    swift_release_n();
  }
  swift_release();
}

void sub_24C81D49C(uint64_t a1, uint64_t a2, void (*a3)(void **))
{
  uint64_t v5 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF570);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_24C7D7BA4(a1, (uint64_t)v10, &qword_2697EF570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = *(void *)v10;
      uint64_t v12 = *((void *)v10 + 1);
      char v13 = v10[16];
      sub_24C7D7054();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v15 = v11;
      *(void *)(v15 + 8) = v12;
      *(unsigned char *)(v15 + 16) = v13;
      char v18 = v14;
      char v20 = 1;
      a3(&v18);
      swift_release();
      sub_24C830CD8(v18, v19, v20);
    }
    else
    {
      sub_24C8301D0((uint64_t)v10, (uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
      sub_24C7D9B30((uint64_t)v7);
      char v18 = (void *)v16[8];
      uint64_t v19 = v17;
      char v20 = 0;
      swift_bridgeObjectRetain();
      a3(&v18);
      swift_bridgeObjectRelease_n();
      swift_release();
      sub_24C830238((uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
    }
  }
}

void sub_24C81D9B8(uint64_t a1, uint64_t a2, void (*a3)(void **))
{
  uint64_t v5 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF570);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_24C7D7BA4(a1, (uint64_t)v10, &qword_2697EF570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = *(void *)v10;
      uint64_t v12 = *((void *)v10 + 1);
      char v13 = v10[16];
      sub_24C7D7054();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v15 = v11;
      *(void *)(v15 + 8) = v12;
      *(unsigned char *)(v15 + 16) = v13;
      uint64_t v19 = v14;
      char v22 = 1;
      a3(&v19);
      swift_release();
      sub_24C830E68(v19, v20, v21, v22);
    }
    else
    {
      sub_24C8301D0((uint64_t)v10, (uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
      sub_24C7D99B0((uint64_t)v7);
      uint64_t v19 = (void *)v16[8];
      uint64_t v20 = v17;
      uint64_t v21 = v18;
      char v22 = 0;
      swift_bridgeObjectRetain();
      a3(&v19);
      swift_bridgeObjectRelease_n();
      swift_release();
      sub_24C830238((uint64_t)v7, type metadata accessor for CosmoHttpResponseContent);
    }
  }
}

uint64_t sub_24C81DEE0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  v24[5] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF6B0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (void *)((char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for CosmoFileHttpResponse(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF570);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C7D7BA4(a1, (uint64_t)v17, &qword_2697EF570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = *(void *)v17;
      uint64_t v20 = *((void *)v17 + 1);
      char v21 = v17[16];
      sub_24C7D7054();
      uint64_t v22 = swift_allocError();
      *(void *)uint64_t v23 = v19;
      *(void *)(v23 + 8) = v20;
      *(unsigned char *)(v23 + 16) = v21;
      *uint64_t v8 = v22;
      swift_storeEnumTagMultiPayload();
      a3(v8);
      swift_release();
      return sub_24C7D7C08((uint64_t)v8, &qword_2697EF6B0);
    }
    else
    {
      sub_24C8301D0((uint64_t)v17, (uint64_t)v14, type metadata accessor for CosmoHttpResponseContent);
      static CosmoFileHttpResponse._create(from:)((uint64_t)v14, v11);
      sub_24C830314((uint64_t)v11, (uint64_t)v8, type metadata accessor for CosmoFileHttpResponse);
      swift_storeEnumTagMultiPayload();
      a3(v8);
      swift_release();
      sub_24C7D7C08((uint64_t)v8, &qword_2697EF6B0);
      sub_24C830238((uint64_t)v11, type metadata accessor for CosmoFileHttpResponse);
      return sub_24C830238((uint64_t)v14, type metadata accessor for CosmoHttpResponseContent);
    }
  }
  return result;
}

uint64_t sub_24C81E4EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, void (*a5)(uint64_t *__return_ptr, char *), uint64_t (*a6)(uint64_t, void))
{
  uint64_t v10 = type metadata accessor for CosmoHttpResponseContent(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF570);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C7D7BA4(a1, (uint64_t)v15, &qword_2697EF570);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = *(void *)v15;
      uint64_t v18 = *((void *)v15 + 1);
      char v19 = v15[16];
      sub_24C7D7054();
      uint64_t v20 = swift_allocError();
      *(void *)uint64_t v21 = v17;
      *(void *)(v21 + 8) = v18;
      *(unsigned char *)(v21 + 16) = v19;
      uint64_t v24 = v20;
      unsigned __int8 v25 = 1;
      a3(&v24);
      swift_release();
      return a6(v24, v25);
    }
    else
    {
      sub_24C8301D0((uint64_t)v15, (uint64_t)v12, type metadata accessor for CosmoHttpResponseContent);
      a5(&v23, v12);
      uint64_t v24 = v23;
      unsigned __int8 v25 = 0;
      a3(&v24);
      swift_release();
      return sub_24C830238((uint64_t)v12, type metadata accessor for CosmoHttpResponseContent);
    }
  }
  return result;
}

double TransferClient.Configuration.gracefulDisconnectWindowInterval.getter()
{
  return *(double *)v0;
}

Cosmo::TransferClient::Configuration __swiftcall TransferClient.Configuration.init(gracefulDisconnectWindowInterval:)(Cosmo::TransferClient::Configuration gracefulDisconnectWindowInterval)
{
  v1->gracefulDisconnectWindowInterval = gracefulDisconnectWindowInterval.gracefulDisconnectWindowInterval;
  return gracefulDisconnectWindowInterval;
}

uint64_t TransferClient.FileDescriptor.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24C849440();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t TransferClient.FileDescriptor.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TransferClient.FileDescriptor(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for TransferClient.FileDescriptor(uint64_t a1)
{
  return sub_24C7DF000(a1, qword_2697EF648);
}

uint64_t TransferClient.FileDescriptor.size.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for TransferClient.FileDescriptor(0) + 24));
}

uint64_t TransferClient.FileDescriptor.description.getter()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F086F0]), sel_init);
  objc_msgSend(v1, sel_setCountStyle_, 0);
  uint64_t result = type metadata accessor for TransferClient.FileDescriptor(0);
  if ((*(void *)(v0 + *(int *)(result + 24)) & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    id v3 = objc_msgSend(v1, sel_stringFromByteCount_);
    sub_24C849E80();

    sub_24C84A230();
    swift_bridgeObjectRelease();
    sub_24C849440();
    sub_24C830654(&qword_2697EEC60, MEMORY[0x263F07508]);
    sub_24C84A430();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    sub_24C849F80();
    swift_bridgeObjectRetain();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    sub_24C849F80();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    sub_24C849F80();

    return 0xD000000000000012;
  }
  return result;
}

uint64_t sub_24C81ECEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24C849440();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

unint64_t TransferClient.State.description.getter()
{
  unint64_t result = 0x6C616974696E69;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000021;
      break;
    case 2:
      unint64_t result = 0xD000000000000021;
      break;
    case 3:
    case 7:
    case 8:
      unint64_t result = 0xD000000000000020;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000025;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000023;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000023;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000022;
      break;
    case 0xD:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000024;
      break;
    case 0xF:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0x10:
    case 0x11:
      unint64_t result = 0x656E6E6F63736964;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static TransferClient.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TransferClient.State.hash(into:)()
{
  return sub_24C84A4F0();
}

BOOL static TransferClient.State.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t TransferClient.State.hashValue.getter()
{
  return sub_24C84A510();
}

Cosmo::TransferClient::AttestationResult_optional __swiftcall TransferClient.AttestationResult.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_24C84A340();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t TransferClient.AttestationResult.rawValue.getter()
{
  if (*v0) {
    return 0x6572756C696166;
  }
  else {
    return 0x73736563637573;
  }
}

uint64_t sub_24C81F0A4(char *a1, char *a2)
{
  return sub_24C7F2CB0(*a1, *a2);
}

uint64_t sub_24C81F0B0()
{
  return sub_24C84A510();
}

uint64_t sub_24C81F128()
{
  sub_24C849F50();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24C81F184()
{
  return sub_24C84A510();
}

Cosmo::TransferClient::AttestationResult_optional sub_24C81F1F8(Swift::String *a1)
{
  return TransferClient.AttestationResult.init(rawValue:)(*a1);
}

void sub_24C81F204(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x73736563637573;
  if (*v1) {
    uint64_t v2 = 0x6572756C696166;
  }
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

id TransferClient.queue.getter()
{
  return *(id *)(v0 + 16);
}

double TransferClient.config.getter@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + 24);
  *a1 = result;
  return result;
}

uint64_t sub_24C81F250@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24C8495E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24C81F2D0()
{
  return sub_24C8495F0();
}

uint64_t sub_24C81F34C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24C8495E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24C81F3C8()
{
  return swift_endAccess();
}

uint64_t sub_24C81F430(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF680);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF580);
  sub_24C8495D0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_24C81F5A4()
{
  return swift_endAccess();
}

uint64_t sub_24C81F608()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate;
  swift_beginAccess();
  return MEMORY[0x2532FCD70](v1);
}

uint64_t TransferClient.__allocating_init(delegate:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = 0x3FF0000000000000;
  type metadata accessor for TransferClient(0);
  uint64_t v6 = swift_allocObject();
  TransferClient.init(delegate:config:queue:)(a1, a2, &v8, a3);
  return v6;
}

uint64_t TransferClient.__allocating_init(delegate:config:queue:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  TransferClient.init(delegate:config:queue:)(a1, a2, a3, a4);
  return v8;
}

uint64_t type metadata accessor for TransferClient(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EF660);
}

uint64_t TransferClient.init(delegate:config:queue:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v26 = a2;
  uint64_t v7 = sub_24C84A150();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v23 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24C84A120();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_24C849BF0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF580);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a3;
  uint64_t v16 = v4 + OBJC_IVAR____TtC5Cosmo14TransferClient__fileTransfers;
  uint64_t v28 = MEMORY[0x263F8EE78];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF588);
  sub_24C8495B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v16, v14, v11);
  uint64_t v17 = v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate;
  *(void *)(v17 + 8) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_stateAtDisconnect) = 18;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_usePinlessPair) = 0;
  *(_OWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret) = xmmword_24C84AFC0;
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationBrowser) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel) = 0;
  uint64_t v18 = (void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
  *uint64_t v18 = 0;
  v18[1] = 0;
  char v19 = (void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_pinCode);
  void *v19 = 0;
  v19[1] = 0;
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationResult) = 2;
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationCount) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferBrowser) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_localSecIdentity) = 0;
  *(_OWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey) = xmmword_24C84AFC0;
  *(_OWORD *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey) = xmmword_24C84AFC0;
  uint64_t v20 = v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferServiceUUID;
  uint64_t v21 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_filesRequestedCount) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_filesReceivedCount) = 0;
  swift_beginAccess();
  *(void *)(v17 + 8) = v26;
  swift_unknownObjectWeakAssign();
  *(void *)(v4 + 24) = v15;
  if (!a4)
  {
    sub_24C7D5EF8();
    sub_24C849BE0();
    uint64_t v27 = MEMORY[0x263F8EE78];
    sub_24C830654((unint64_t *)&unk_2697EEAE0, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF330);
    sub_24C7D6170(&qword_2697EEAF0, (uint64_t *)&unk_2697EF330);
    sub_24C84A1F0();
    (*(void (**)(char *, void, uint64_t))(v24 + 104))(v23, *MEMORY[0x263F8F130], v25);
    a4 = sub_24C84A170();
  }
  swift_unknownObjectRelease();
  *(void *)(v4 + 16) = a4;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_state) = 0;
  return v4;
}

void sub_24C81FC20(char *a1)
{
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v8 = *a1;
  uint64_t v9 = *(void **)(v1 + 16);
  *uint64_t v7 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v10 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v9)
  {
    char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
    *(unsigned char *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state) = v8;
    if (qword_2697EE9E0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v11 = sub_24C849590();
  __swift_project_value_buffer(v11, (uint64_t)qword_2697F7088);
  uint64_t v12 = sub_24C849570();
  os_log_type_t v13 = sub_24C84A110();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v21 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    LOBYTE(v20) = v2;
    unint64_t v16 = TransferClient.State.description.getter();
    uint64_t v20 = sub_24C7DE68C(v16, v17, &v21);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    LOBYTE(v20) = v8;
    unint64_t v18 = TransferClient.State.description.getter();
    uint64_t v20 = sub_24C7DE68C(v18, v19, &v21);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v12, v13, "[State] Updated, old-state='%s' new-state='%s'", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v15, -1, -1);
    MEMORY[0x2532FCCC0](v14, -1, -1);
  }
}

uint64_t TransferClient.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Cosmo14TransferClient__fileTransfers;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24C7D5FC4(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate);
  sub_24C7D6044(*(void *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret), *(void *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret + 8));
  swift_release();
  swift_release();
  sub_24C7D6F70(*(void *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  sub_24C7D6044(*(void *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey), *(void *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey + 8));
  sub_24C7D6044(*(void *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey), *(void *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey + 8));
  sub_24C7D7C08(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferServiceUUID, &qword_2697EEAF8);
  swift_release();
  return v0;
}

uint64_t TransferClient.__deallocating_deinit()
{
  TransferClient.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t TransferClient.connect(secret:onConnect:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24C849BD0();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24C849BF0();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  os_log_type_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  unint64_t v15 = a1[1];
  unint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v4;
  void v16[3] = a2;
  v16[4] = a3;
  v16[5] = v14;
  v16[6] = v15;
  aBlock[4] = sub_24C820878;
  void aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_6;
  unint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24C7D60D0(v14, v15);
  sub_24C849BE0();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_24C830654((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v13, v10, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  return swift_release();
}

void sub_24C820358(uint64_t a1, void (*a2)(void, void), uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state))
  {
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24C849590();
    __swift_project_value_buffer(v9, (uint64_t)qword_2697F7088);
    swift_retain_n();
    id v10 = sub_24C849570();
    os_log_type_t v11 = sub_24C84A110();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = a2;
      v38[0] = swift_slowAlloc();
      uint64_t v13 = v38[0];
      *(_DWORD *)uint64_t v12 = 136315138;
      LOBYTE(v39) = *(unsigned char *)(a1 + v8);
      unint64_t v14 = TransferClient.State.description.getter();
      uint64_t v39 = sub_24C7DE68C(v14, v15, v38);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v10, v11, "[Connect] Must be invoked while in the initial state, state=%s", v12, 0xCu);
      swift_arrayDestroy();
      uint64_t v16 = v13;
      a2 = v36;
      MEMORY[0x2532FCCC0](v16, -1, -1);
      MEMORY[0x2532FCCC0](v12, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_24C7D6EEC();
    uint64_t v34 = (void *)swift_allocError();
    *uint64_t v35 = xmmword_24C84AFD0;
    a2(v34, 1);
  }
  else
  {
    uint64_t v19 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret);
    uint64_t v20 = *(void *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret);
    unint64_t v21 = *(void *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret + 8);
    uint64_t *v19 = a4;
    v19[1] = a5;
    sub_24C7D60D0(a4, a5);
    sub_24C7D6044(v20, v21);
    uint64_t v22 = (void *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
    uint64_t v23 = *(void *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
    *uint64_t v22 = a2;
    v22[1] = a3;
    swift_retain();
    sub_24C7D6F70(v23);
    *(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_usePinlessPair) = sub_24C8208A0(a4, a5);
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_24C849590();
    __swift_project_value_buffer(v24, (uint64_t)qword_2697F7088);
    sub_24C7D60D0(a4, a5);
    sub_24C7D60D0(a4, a5);
    sub_24C7D60D0(a4, a5);
    sub_24C7D60D0(a4, a5);
    swift_retain();
    uint64_t v25 = sub_24C849570();
    os_log_type_t v26 = sub_24C84A110();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v39 = v37;
      *(_DWORD *)uint64_t v27 = 67109634;
      sub_24C84A1A0();
      swift_release();
      *(_WORD *)(v27 + 8) = 2080;
      uint64_t v28 = SharedSecret.asACCV2CompatibileHex.getter();
      sub_24C7DE68C(v28, v29, &v39);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D5FEC(a4, a5);
      sub_24C7D5FEC(a4, a5);
      *(_WORD *)(v27 + 18) = 2080;
      v38[0] = a4;
      v38[1] = a5;
      __int16 v30 = SharedSecret.protocolVersion.getter();
      if ((v30 & 0x100) != 0)
      {
        unint64_t v33 = 0xE300000000000000;
        uint64_t v31 = 7104878;
      }
      else
      {
        LOBYTE(v38[0]) = v30;
        uint64_t v31 = sub_24C849ED0();
        unint64_t v33 = v32;
      }
      v38[0] = sub_24C7DE68C(v31, v33, &v39);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D5FEC(a4, a5);
      sub_24C7D5FEC(a4, a5);
      _os_log_impl(&dword_24C7BE000, v25, v26, "[Connect] Using pinless-pair=%{BOOL}d, shared-secret=%s, protocol-version=%s", (uint8_t *)v27, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v37, -1, -1);
      MEMORY[0x2532FCCC0](v27, -1, -1);
    }
    else
    {
      swift_release();
      sub_24C7D5FEC(a4, a5);
      sub_24C7D5FEC(a4, a5);
      sub_24C7D5FEC(a4, a5);
      sub_24C7D5FEC(a4, a5);
    }

    sub_24C820988();
  }
}

void sub_24C820878()
{
  sub_24C820358(*(void *)(v0 + 16), *(void (**)(void, void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

BOOL sub_24C8208A0(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (!((a1 ^ (unint64_t)(a1 << 32)) >> 32)) {
        return 0;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(a1 + 16) == *(void *)(a1 + 24)) {
        return 0;
      }
LABEL_8:
      sub_24C7D60D0(a1, a2);
      goto LABEL_9;
    case 3uLL:
      goto LABEL_3;
    default:
      if ((a2 & 0xFF000000000000) != 0)
      {
LABEL_9:
        unsigned int v5 = sub_24C849390();
        sub_24C7D5FEC(a1, a2);
        return v5 > 3;
      }
      else
      {
LABEL_3:
        sub_24C7D5FEC(a1, a2);
        return 0;
      }
  }
}

uint64_t sub_24C820988()
{
  uint64_t v1 = type metadata accessor for NetworkDescriptor();
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v24[-v5];
  uint64_t v7 = sub_24C849C80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  os_log_type_t v11 = *(void **)(v0 + 16);
  *id v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F0E0], v7);
  id v12 = v11;
  char v13 = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v13)
  {
    unint64_t v15 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret);
    unint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret + 8);
    if (v16 >> 60 != 15)
    {
      uint64_t v17 = *v15;
      *(void *)uint64_t v6 = *v15;
      *((void *)v6 + 1) = v16;
      v6[16] = 0;
      swift_storeEnumTagMultiPayload();
      sub_24C830314((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
      type metadata accessor for CosmoBrowser();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = 0;
      *(void *)(v18 + 24) = 0;
      *(void *)(v18 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_browser) = 0;
      sub_24C830314((uint64_t)v4, v18 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_descriptor, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
      sub_24C7D7304(v17, v16);
      id v19 = v12;
      sub_24C7D7304(v17, v16);
      sub_24C830238((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
      *(void *)(v18 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_queue) = v19;
      uint64_t v20 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationBrowser;
      *(void *)(v0 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationBrowser) = v18;
      swift_release();
      uint64_t v21 = *(void *)(v0 + v20);
      if (v21)
      {
        uint64_t v22 = swift_allocObject();
        swift_weakInit();
        swift_beginAccess();
        uint64_t v23 = *(void *)(v21 + 16);
        *(void *)(v21 + 16) = sub_24C830EDC;
        *(void *)(v21 + 24) = v22;
        sub_24C7D6F70(v23);
      }
      char v25 = 1;
      sub_24C81FC20(&v25);
      if (*(void *)(v0 + v20))
      {
        swift_retain();
        sub_24C80BE38();
        swift_release();
        sub_24C7D6044(v17, v16);
        return sub_24C830238((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
      }
      else
      {
        sub_24C830238((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
        return sub_24C7D6044(v17, v16);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24C820CF0(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (v1)
    {
      if (qword_2697EE9E0 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_24C849590();
      __swift_project_value_buffer(v3, (uint64_t)qword_2697F7088);
      swift_retain_n();
      uint64_t v4 = sub_24C849570();
      os_log_type_t v5 = sub_24C84A110();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        uint64_t v7 = swift_slowAlloc();
        uint64_t v14 = v7;
        *(_DWORD *)uint64_t v6 = 136315138;
        unint64_t v8 = TransferClient.State.description.getter();
        sub_24C7DE68C(v8, v9, &v14);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        id v10 = "[AttestationSetup] Advertised attestation-endpoint removed, state=%s";
LABEL_12:
        _os_log_impl(&dword_24C7BE000, v4, v5, v10, v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v7, -1, -1);
        MEMORY[0x2532FCCC0](v6, -1, -1);
        swift_release();

        return;
      }
LABEL_13:

      swift_release_n();
      return;
    }
    if (*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC5Cosmo14TransferClient_state) > 1u)
    {
      if (qword_2697EE9E0 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_24C849590();
      __swift_project_value_buffer(v11, (uint64_t)qword_2697F7088);
      swift_retain_n();
      uint64_t v4 = sub_24C849570();
      os_log_type_t v5 = sub_24C84A110();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        uint64_t v7 = swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 136315138;
        uint64_t v14 = v7;
        unint64_t v12 = TransferClient.State.description.getter();
        sub_24C7DE68C(v12, v13, &v14);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        id v10 = "[AttestationSetup] Ignoring add of file-transfer-endpoint, state=%s";
        goto LABEL_12;
      }
      goto LABEL_13;
    }
    sub_24C82101C();
    swift_release();
  }
}

uint64_t sub_24C82101C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NetworkDescriptor();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  os_log_type_t v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v38 - v6;
  uint64_t v8 = sub_24C849440();
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24C849C80();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (void *)((char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v15 = *(void **)(v1 + 16);
  void *v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  id v45 = v15;
  unint64_t v16 = sub_24C849CA0();
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t))(v12 + 8);
  uint64_t v17 = v12 + 8;
  uint64_t result = v18(v14, v11);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v20 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret);
  unint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret + 8);
  if (v16 >> 60 == 15) {
    return result;
  }
  uint64_t v43 = v2;
  uint64_t v17 = *v20;
  sub_24C7D60D0(*v20, v16);
  if (qword_2697EE9E0 != -1) {
    goto LABEL_14;
  }
LABEL_4:
  uint64_t v21 = sub_24C849590();
  __swift_project_value_buffer(v21, (uint64_t)qword_2697F7088);
  sub_24C7D7304(v17, v16);
  sub_24C7D60D0(v17, v16);
  uint64_t v22 = sub_24C849570();
  os_log_type_t v23 = sub_24C84A110();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    int v41 = v24;
    char v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    v46[1] = v16;
    uint64_t v47 = v40;
    uint64_t v42 = v5;
    *(_DWORD *)char v25 = 136315138;
    v38[1] = v25 + 4;
    uint64_t v39 = v25;
    v46[0] = v17;
    SharedSecret.advertisementIdentifer.getter((uint64_t)v10);
    sub_24C830654(&qword_2697EEC60, MEMORY[0x263F07508]);
    uint64_t v26 = sub_24C84A430();
    unint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v8);
    v46[0] = sub_24C7DE68C(v26, v28, &v47);
    os_log_type_t v5 = v42;
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    sub_24C7D6044(v17, v16);
    sub_24C7D6044(v17, v16);
    unint64_t v29 = v39;
    _os_log_impl(&dword_24C7BE000, v22, (os_log_type_t)v41, "[Connect] Starting attestation-channel with Bonjour attestationServiceUUID=%s", v39, 0xCu);
    uint64_t v30 = v40;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v30, -1, -1);
    MEMORY[0x2532FCCC0](v29, -1, -1);
  }
  else
  {
    sub_24C7D6044(v17, v16);
    sub_24C7D6044(v17, v16);
  }

  *(void *)uint64_t v7 = v17;
  *((void *)v7 + 1) = v16;
  v7[16] = 0;
  swift_storeEnumTagMultiPayload();
  sub_24C830314((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoSerialChannelClient();
  swift_allocObject();
  id v31 = v45;
  id v32 = v45;
  sub_24C7D7304(v17, v16);
  unint64_t v33 = sub_24C7F330C(0xD000000000000013, 0x800000024C850CE0, (uint64_t)v5, v31);
  uint64_t v34 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel;
  *(void *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel) = v33;
  swift_release();
  uint64_t v35 = *(void *)(v1 + v34);
  if (v35)
  {
    uint64_t v36 = swift_allocObject();
    swift_weakInit();
    uint64_t v37 = *(void *)(v35 + 16);
    *(void *)(v35 + 16) = sub_24C830EE4;
    *(void *)(v35 + 24) = v36;
    sub_24C7D6F70(v37);
  }
  LOBYTE(v46[0]) = 2;
  sub_24C81FC20((char *)v46);
  if (*(void *)(v1 + v34))
  {
    swift_retain();
    sub_24C7F3808();
    swift_release();
    sub_24C7D6044(v17, v16);
    return sub_24C830238((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  }
  else
  {
    sub_24C830238((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
    return sub_24C7D6044(v17, v16);
  }
}

uint64_t sub_24C8215D4(char a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C821634(a1 & 1);
    return swift_release();
  }
  return result;
}

void sub_24C821634(char a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_24C849C80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v3 + 16);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F0E0], v5);
  id v10 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
LABEL_8:
    uint64_t v15 = sub_24C849590();
    __swift_project_value_buffer(v15, (uint64_t)qword_2697F7088);
    swift_retain_n();
    unint64_t v16 = sub_24C849570();
    os_log_type_t v17 = sub_24C84A110();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v23 = v19;
      LOBYTE(v22) = *(unsigned char *)(v3 + v2);
      unint64_t v20 = TransferClient.State.description.getter();
      uint64_t v22 = sub_24C7DE68C(v20, v21, &v23);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v16, v17, "Disconnect: Ignoring attestation-channel state change, state=%s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v19, -1, -1);
      MEMORY[0x2532FCCC0](v18, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return;
  }
  if (!*(void *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel)) {
    return;
  }
  uint64_t v2 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  unsigned int v11 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v11 > 0xF)
  {
    if (qword_2697EE9E0 == -1) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
  if (a1)
  {
    if (v11 <= 0xB)
    {
      LOBYTE(v23) = 2;
      sub_24C822B18((unsigned __int8 *)&v23, 0xD00000000000001FLL, 0x800000024C850D00);
    }
  }
  else
  {
    LOBYTE(v23) = 3;
    sub_24C81FC20((char *)&v23);
    uint64_t v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
    uint64_t v13 = *(void (**)(void, void))(v3
                                                + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
    if (v13)
    {
      swift_retain();
      v13(0, 0);
      sub_24C7D6F70((uint64_t)v13);
      uint64_t v14 = *v12;
    }
    else
    {
      uint64_t v14 = 0;
    }
    uint64_t *v12 = 0;
    v12[1] = 0;
    sub_24C7D6F70(v14);
    sub_24C82199C();
  }
}

void sub_24C82199C()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_24C849540();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24C849C80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (uint64_t *)((char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v11 = *(void **)(v2 + 16);
  *id v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F0E0], v7);
  id v12 = v11;
  LOBYTE(v11) = sub_24C849CA0();
  uint64_t v14 = *(void (**)(void *, uint64_t))(v8 + 8);
  uint64_t v13 = v8 + 8;
  v14(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_54:
    swift_once();
LABEL_12:
    uint64_t v18 = sub_24C849590();
    __swift_project_value_buffer(v18, (uint64_t)qword_2697F7088);
    uint64_t v19 = sub_24C849570();
    os_log_type_t v20 = sub_24C84A0F0();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v112[0] = v22;
      *(_DWORD *)unint64_t v21 = 136315138;
      uint64_t v23 = sub_24C824E74();
      uint64_t v113 = sub_24C7DE68C(v23, v24, v112);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      char v25 = "[Initiate SPAKE2] Unexpected state, %s";
LABEL_18:
      _os_log_impl(&dword_24C7BE000, v19, v20, v25, v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v22, -1, -1);
      MEMORY[0x2532FCCC0](v21, -1, -1);
      swift_release_n();

      return;
    }
LABEL_19:

LABEL_50:
    swift_release_n();
    return;
  }
  int v15 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v15 == 3)
  {
LABEL_5:
    swift_retain_n();
    goto LABEL_6;
  }
  if (v15 != 7)
  {
    swift_retain_n();
    goto LABEL_11;
  }
  int v16 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationResult);
  if (v16 == 2) {
    goto LABEL_5;
  }
  if ((v16 & 1) == 0)
  {
    swift_retain_n();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  char v69 = sub_24C84A440();
  swift_retain_n();
  swift_bridgeObjectRelease();
  if (v69)
  {
LABEL_11:
    if (qword_2697EE9E0 == -1) {
      goto LABEL_12;
    }
    goto LABEL_54;
  }
LABEL_6:
  if (!*(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel))
  {
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_24C849590();
    __swift_project_value_buffer(v26, (uint64_t)qword_2697F7088);
    uint64_t v19 = sub_24C849570();
    os_log_type_t v20 = sub_24C84A110();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v112[0] = v22;
      *(_DWORD *)unint64_t v21 = 136315138;
      uint64_t v27 = sub_24C824E74();
      uint64_t v113 = sub_24C7DE68C(v27, v28, v112);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      char v25 = "[Initiate SPAKE2] Could not find attestation-channel, %s";
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_usePinlessPair) == 1)
  {
    unint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret + 8);
    if (v17 >> 60 == 15)
    {
      LOBYTE(v112[0]) = 0;
      swift_retain();
      sub_24C822B18((unsigned __int8 *)v112, 0xD000000000000037, 0x800000024C84F1F0);
LABEL_49:
      swift_release();
      goto LABEL_50;
    }
    uint64_t v48 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationCount;
    uint64_t v49 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationCount);
    BOOL v32 = __OFADD__(v49, 1);
    uint64_t v50 = v49 + 1;
    if (v32)
    {
      __break(1u);
    }
    else
    {
      uint64_t v1 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret);
      *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationCount) = v50;
      swift_retain();
      sub_24C7D7304(v1, v17);
      if (qword_2697EE9E0 == -1)
      {
LABEL_29:
        uint64_t v51 = sub_24C849590();
        __swift_project_value_buffer(v51, (uint64_t)qword_2697F7088);
        sub_24C7D7304(v1, v17);
        sub_24C7D60D0(v1, v17);
        char v52 = sub_24C849570();
        os_log_type_t v53 = sub_24C84A110();
        int v54 = v53;
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v55 = swift_slowAlloc();
          int v106 = v54;
          uint64_t v56 = v55;
          uint64_t v107 = swift_slowAlloc();
          v112[0] = v107;
          *(_DWORD *)uint64_t v56 = 136315394;
          uint64_t v104 = v56 + 4;
          uint64_t v57 = sub_24C837C3C(v1, v17);
          uint64_t v108 = v48;
          uint64_t v58 = v57;
          unint64_t v60 = v59;
          uint64_t v61 = sub_24C849340();
          uint64_t v109 = v4;
          uint64_t v62 = v61;
          os_log_t v105 = v52;
          unint64_t v64 = v63;
          sub_24C7D5FEC(v58, v60);
          uint64_t v113 = sub_24C7DE68C(v62, v64, v112);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          sub_24C7D6044(v1, v17);
          sub_24C7D6044(v1, v17);
          *(_WORD *)(v56 + 12) = 2080;
          uint64_t v65 = sub_24C824E74();
          uint64_t v113 = sub_24C7DE68C(v65, v66, v112);
          uint64_t v48 = v108;
          sub_24C84A1A0();
          uint64_t v4 = v109;
          swift_bridgeObjectRelease();
          os_log_t v67 = v105;
          _os_log_impl(&dword_24C7BE000, v105, (os_log_type_t)v106, "[Initiate SPAKE2] password=%s, %s", (uint8_t *)v56, 0x16u);
          uint64_t v68 = v107;
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v68, -1, -1);
          MEMORY[0x2532FCCC0](v56, -1, -1);
        }
        else
        {
          sub_24C7D6044(v1, v17);
          sub_24C7D6044(v1, v17);
        }
        uint64_t v83 = *(void *)(v2 + v48);
        sub_24C7D60D0(v1, v17);
        uint64_t v84 = sub_24C837C3C(v1, v17);
        unint64_t v86 = v85;
        sub_24C7D6044(v1, v17);
        type metadata accessor for Spake2Verifier(0);
        swift_allocObject();
        uint64_t v87 = sub_24C836004(v84, v86, v83);
        if (!v87)
        {
          LOBYTE(v112[0]) = 0;
          sub_24C822B18((unsigned __int8 *)v112, 0xD00000000000001FLL, 0x800000024C850960);
          sub_24C7D6044(v1, v17);
          goto LABEL_49;
        }
        uint64_t v82 = v87;
        sub_24C7D6044(v1, v17);
        goto LABEL_43;
      }
    }
    swift_once();
    goto LABEL_29;
  }
  unint64_t v29 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_pinCode + 8);
  if (!v29)
  {
    uint64_t v70 = qword_2697EE9E0;
    swift_retain();
    if (v70 != -1) {
      swift_once();
    }
    uint64_t v71 = sub_24C849590();
    __swift_project_value_buffer(v71, (uint64_t)qword_2697F7088);
    uint64_t v72 = sub_24C849570();
    os_log_type_t v73 = sub_24C84A110();
    if (os_log_type_enabled(v72, v73))
    {
      os_log_t v74 = (uint8_t *)swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      v112[0] = v75;
      *(_DWORD *)os_log_t v74 = 136315138;
      uint64_t v76 = sub_24C824E74();
      uint64_t v113 = sub_24C7DE68C(v76, v77, v112);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v72, v73, "[Initiate SPAKE2] Skipping, waiting for auth() to called first, %s", v74, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v75, -1, -1);
      MEMORY[0x2532FCCC0](v74, -1, -1);
      swift_release_n();

      swift_release();
      return;
    }

    goto LABEL_49;
  }
  uint64_t v30 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationCount;
  uint64_t v31 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationCount);
  BOOL v32 = __OFADD__(v31, 1);
  uint64_t v33 = v31 + 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_pinCode);
    *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationCount) = v33;
    uint64_t v34 = qword_2697EE9E0;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v34 == -1) {
      goto LABEL_23;
    }
  }
  swift_once();
LABEL_23:
  uint64_t v35 = sub_24C849590();
  __swift_project_value_buffer(v35, (uint64_t)qword_2697F7088);
  swift_bridgeObjectRetain_n();
  uint64_t v36 = sub_24C849570();
  os_log_type_t v37 = sub_24C84A110();
  int v38 = v37;
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v39 = swift_slowAlloc();
    int v106 = v38;
    uint64_t v40 = v39;
    uint64_t v107 = swift_slowAlloc();
    v112[0] = v107;
    *(_DWORD *)uint64_t v40 = 136315394;
    uint64_t v109 = v30;
    swift_bridgeObjectRetain();
    uint64_t v113 = sub_24C7DE68C(v13, v29, v112);
    uint64_t v108 = v13;
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 12) = 2080;
    uint64_t v41 = sub_24C824E74();
    uint64_t v42 = v4;
    uint64_t v43 = v36;
    uint64_t v44 = v42;
    uint64_t v113 = sub_24C7DE68C(v41, v45, v112);
    uint64_t v13 = v108;
    uint64_t v30 = v109;
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    uint64_t v46 = v43;
    uint64_t v4 = v44;
    _os_log_impl(&dword_24C7BE000, v46, (os_log_type_t)v106, "[Initiate SPAKE2] pin=%s, %s", (uint8_t *)v40, 0x16u);
    uint64_t v47 = v107;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v47, -1, -1);
    MEMORY[0x2532FCCC0](v40, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v78 = *(void *)(v2 + v30);
  v112[0] = v13;
  v112[1] = v29;
  uint64_t v79 = sub_24C80925C();
  unint64_t v81 = v80;
  swift_bridgeObjectRelease();
  type metadata accessor for Spake2Verifier(0);
  swift_allocObject();
  uint64_t v82 = sub_24C836004(v79, v81, v78);
  if (!v82)
  {
    LOBYTE(v112[0]) = 0;
    sub_24C822B18((unsigned __int8 *)v112, 0xD00000000000001FLL, 0x800000024C850960);
    goto LABEL_49;
  }
LABEL_43:
  *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier) = v82;
  swift_retain();
  swift_release();
  uint64_t v88 = v82 + OBJC_IVAR____TtC5Cosmo14Spake2Verifier_verifier;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v88, v3);
  uint64_t v89 = sub_24C849530();
  uint64_t v90 = v4;
  uint64_t v91 = v89;
  unint64_t v93 = v92;
  (*(void (**)(char *, uint64_t))(v90 + 8))(v6, v3);
  sub_24C7D60D0(v91, v93);
  if (qword_2697EE9E0 != -1) {
    swift_once();
  }
  uint64_t v94 = sub_24C849590();
  __swift_project_value_buffer(v94, (uint64_t)qword_2697F7088);
  sub_24C7D60D0(v91, v93);
  sub_24C7D60D0(v91, v93);
  os_log_t v95 = sub_24C849570();
  os_log_type_t v96 = sub_24C84A110();
  if (os_log_type_enabled(v95, v96))
  {
    uint64_t v97 = swift_slowAlloc();
    uint64_t v109 = swift_slowAlloc();
    uint64_t v113 = v109;
    *(_DWORD *)uint64_t v97 = 136315650;
    uint64_t v98 = sub_24C849340();
    uint64_t v111 = sub_24C7DE68C(v98, v99, &v113);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    sub_24C7D5FEC(v91, v93);
    sub_24C7D5FEC(v91, v93);
    *(_WORD *)(v97 + 12) = 256;
    LOBYTE(v111) = 2;
    sub_24C84A1A0();
    *(_WORD *)(v97 + 15) = 2080;
    uint64_t v100 = sub_24C824E74();
    uint64_t v111 = sub_24C7DE68C(v100, v101, &v113);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v95, v96, "[SPAKE2 Share] Sending shareV=%s, protocol-version=%hhu, %s", (uint8_t *)v97, 0x19u);
    uint64_t v102 = v109;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v102, -1, -1);
    MEMORY[0x2532FCCC0](v97, -1, -1);
  }
  else
  {
    sub_24C7D5FEC(v91, v93);
    sub_24C7D5FEC(v91, v93);
  }

  uint64_t v103 = swift_allocObject();
  swift_weakInit();
  sub_24C8183B0(2, v91, v93, (uint64_t)sub_24C83069C, v103);
  swift_release();
  LOBYTE(v113) = 4;
  sub_24C81FC20((char *)&v113);
  swift_release();
  sub_24C7D5FEC(v91, v93);
  swift_release_n();
  sub_24C7D5FEC(v91, v93);
  swift_release();
}

uint64_t sub_24C822B18(unsigned __int8 *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24C849C40();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  int v54 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v55 = (char *)v46 - v12;
  uint64_t v51 = sub_24C849BD0();
  MEMORY[0x270FA5388](v51);
  os_log_type_t v53 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24C849C80();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (void *)((char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v18 = *a1;
  uint64_t v19 = *(void **)(v4 + 16);
  *unint64_t v17 = v19;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F0E0], v14);
  id v52 = v19;
  LOBYTE(v19) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if ((v19 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v50 = v9;
  uint64_t v9 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  if (*(unsigned __int8 *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_state) > 0xFu) {
    return result;
  }
  uint64_t v47 = v8;
  uint64_t v49 = a2;
  if (qword_2697EE9E0 != -1) {
    goto LABEL_16;
  }
LABEL_4:
  uint64_t v21 = sub_24C849590();
  __swift_project_value_buffer(v21, (uint64_t)qword_2697F7088);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v22 = sub_24C849570();
  os_log_type_t v23 = sub_24C84A110();
  BOOL v24 = os_log_type_enabled(v22, v23);
  unint64_t v48 = a3;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    aBlock[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_24C7DE68C(v49, a3, aBlock);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    LOBYTE(v56) = *(unsigned char *)(v4 + v9);
    unint64_t v27 = TransferClient.State.description.getter();
    uint64_t v56 = sub_24C7DE68C(v27, v28, aBlock);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v22, v23, "[Close] Closing, reason='%s', state=%s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v26, -1, -1);
    MEMORY[0x2532FCCC0](v25, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  LOBYTE(aBlock[0]) = 16;
  sub_24C81FC20((char *)aBlock);
  if (*(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient) && v18 == 3)
  {
    swift_retain_n();
    swift_retain();
    unint64_t v29 = sub_24C849570();
    os_log_type_t v30 = sub_24C84A110();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315138;
      aBlock[0] = v32;
      v46[1] = v31 + 4;
      LOBYTE(v56) = *(unsigned char *)(v4 + v9);
      unint64_t v33 = TransferClient.State.description.getter();
      uint64_t v56 = sub_24C7DE68C(v33, v34, aBlock);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v29, v30, "[Close] Sending request to TransferHost, state=%s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v32, -1, -1);
      MEMORY[0x2532FCCC0](v31, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    unint64_t v35 = v48;
    uint64_t v36 = swift_allocObject();
    swift_weakInit();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v36;
    *(unsigned char *)(v37 + 24) = 3;
    uint64_t v38 = v49;
    *(void *)(v37 + 32) = v49;
    *(void *)(v37 + 40) = v35;
    aBlock[4] = (uint64_t)sub_24C830084;
    void aBlock[5] = v37;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_24C7C25B4;
    aBlock[3] = (uint64_t)&block_descriptor_111_0;
    _Block_copy(aBlock);
    uint64_t v56 = MEMORY[0x263F8EE78];
    sub_24C830654((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
    sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
    sub_24C84A1F0();
    sub_24C849C70();
    swift_allocObject();
    uint64_t v39 = sub_24C849C50();
    swift_release();
    swift_release();
    uint64_t v40 = v54;
    sub_24C849C30();
    uint64_t v41 = v55;
    MEMORY[0x2532FBAE0](v40, *(double *)(v4 + 24));
    uint64_t v42 = *(void (**)(char *, uint64_t))(v50 + 8);
    uint64_t v43 = v47;
    v42(v40, v47);
    sub_24C84A140();
    v42(v41, v43);
    uint64_t v44 = swift_allocObject();
    swift_weakInit();
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v44;
    *(void *)(v45 + 24) = v39;
    *(unsigned char *)(v45 + 32) = 3;
    *(void *)(v45 + 40) = v38;
    *(void *)(v45 + 48) = v35;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24C81B34C(1, (uint64_t)sub_24C8300DC, v45, (uint64_t)&unk_26FEF31E8, (uint64_t)sub_24C830108, (uint64_t)&block_descriptor_121_0);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    LOBYTE(aBlock[0]) = v18;
    return sub_24C82FC7C((char *)aBlock);
  }
}

void sub_24C823354(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 17);
  uint64_t v12 = *(void **)(v2 + 16);
  *uint64_t v7 = v12;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v13 = v12;
  LOBYTE(v12) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once();
LABEL_11:
    uint64_t v26 = sub_24C849590();
    __swift_project_value_buffer(v26, (uint64_t)qword_2697F7088);
    unint64_t v27 = sub_24C849570();
    os_log_type_t v28 = sub_24C84A110();
    if (os_log_type_enabled(v27, v28))
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v69[0] = v30;
      *(_DWORD *)unint64_t v29 = 136315138;
      uint64_t v31 = sub_24C824E74();
      uint64_t v71 = sub_24C7DE68C(v31, v32, v69);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      unint64_t v33 = "[SPAKE2 Share Response] Disconnect detected, ignoring, %s";
LABEL_17:
      _os_log_impl(&dword_24C7BE000, v27, v28, v33, v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v30, -1, -1);
      MEMORY[0x2532FCCC0](v29, -1, -1);
      swift_release_n();

      return;
    }
LABEL_18:

LABEL_19:
    swift_release_n();
    return;
  }
  unsigned int v14 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v14 > 0xF)
  {
    uint64_t v25 = qword_2697EE9E0;
    swift_retain_n();
    if (v25 == -1) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
  if (v14 != 4)
  {
    uint64_t v34 = qword_2697EE9E0;
    swift_retain_n();
    if (v34 != -1) {
      swift_once();
    }
    uint64_t v35 = sub_24C849590();
    __swift_project_value_buffer(v35, (uint64_t)qword_2697F7088);
    unint64_t v27 = sub_24C849570();
    os_log_type_t v28 = sub_24C84A0F0();
    if (os_log_type_enabled(v27, v28))
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v69[0] = v30;
      *(_DWORD *)unint64_t v29 = 136315138;
      uint64_t v36 = sub_24C824E74();
      uint64_t v71 = sub_24C7DE68C(v36, v37, v69);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      unint64_t v33 = "[SPAKE2 Share Response] Unexpected state, %s";
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier);
  if (v15)
  {
    if (v11)
    {
      swift_retain_n();
      swift_retain();
      sub_24C830828(v9, v8, v10, 1);
      if (qword_2697EE9E0 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_24C849590();
      __swift_project_value_buffer(v16, (uint64_t)qword_2697F7088);
      sub_24C7D77BC(v9, v8, v10);
      unint64_t v17 = sub_24C849570();
      os_log_type_t v18 = sub_24C84A0F0();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v67 = swift_slowAlloc();
        uint64_t v71 = v67;
        *(_DWORD *)uint64_t v19 = 136315394;
        uint64_t v68 = v15;
        v69[0] = v9;
        v69[1] = v8;
        unsigned __int8 v70 = v10;
        sub_24C7D77BC(v9, v8, v10);
        uint64_t v20 = sub_24C849ED0();
        v69[0] = sub_24C7DE68C(v20, v21, &v71);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C8307C8(v9, v8, v10, 1);
        sub_24C8307C8(v9, v8, v10, 1);
        *(_WORD *)(v19 + 12) = 2080;
        uint64_t v22 = sub_24C824E74();
        v69[0] = sub_24C7DE68C(v22, v23, &v71);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v17, v18, "[SPAKE2 Share Response] Failed to receive Spake2Share-response, error=%s %s", (uint8_t *)v19, 0x16u);
        uint64_t v24 = v67;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v24, -1, -1);
        MEMORY[0x2532FCCC0](v19, -1, -1);
      }
      else
      {
        sub_24C8307C8(v9, v8, v10, 1);
        sub_24C8307C8(v9, v8, v10, 1);
      }

      LOBYTE(v69[0]) = 2;
      sub_24C822B18((unsigned __int8 *)v69, 0xD00000000000001CLL, 0x800000024C8509F0);
      swift_release();
      goto LABEL_19;
    }
    LOBYTE(v69[0]) = 5;
    swift_retain_n();
    swift_retain();
    sub_24C830828(v9, v8, v10, 0);
    sub_24C81FC20((char *)v69);
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_24C849590();
    uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_2697F7088);
    sub_24C830828(v9, v8, v10, 0);
    sub_24C7D60D0(v9, v8);
    uint64_t v40 = sub_24C849570();
    os_log_type_t v41 = sub_24C84A110();
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v68 = v15;
    if (v42)
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      v69[0] = v66;
      *(_DWORD *)uint64_t v43 = 136315394;
      uint64_t v67 = v39;
      uint64_t v44 = sub_24C849340();
      uint64_t v71 = sub_24C7DE68C(v44, v45, v69);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C8307C8(v9, v8, v10, 0);
      sub_24C8307C8(v9, v8, v10, 0);
      *(_WORD *)(v43 + 12) = 2080;
      uint64_t v46 = sub_24C824E74();
      uint64_t v71 = sub_24C7DE68C(v46, v47, v69);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v40, v41, "[SPAKE2 Share Response] shareP=%s, %s", (uint8_t *)v43, 0x16u);
      uint64_t v48 = v66;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v48, -1, -1);
      MEMORY[0x2532FCCC0](v43, -1, -1);
    }
    else
    {
      sub_24C8307C8(v9, v8, v10, 0);
      sub_24C8307C8(v9, v8, v10, 0);
    }

    swift_beginAccess();
    sub_24C7D60D0(v9, v8);
    uint64_t v49 = sub_24C849510();
    unint64_t v51 = v50;
    swift_endAccess();
    sub_24C8307C8(v9, v8, v10, 0);
    sub_24C7D60D0(v49, v51);
    sub_24C7D60D0(v49, v51);
    sub_24C7D60D0(v49, v51);
    id v52 = sub_24C849570();
    os_log_type_t v53 = sub_24C84A110();
    int v54 = v53;
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v55 = swift_slowAlloc();
      LODWORD(v66) = v54;
      uint64_t v56 = v55;
      uint64_t v67 = swift_slowAlloc();
      v69[0] = v67;
      *(_DWORD *)uint64_t v56 = 136315394;
      uint64_t v57 = sub_24C849340();
      uint64_t v71 = sub_24C7DE68C(v57, v58, v69);
      os_log_t v65 = v52;
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D5FEC(v49, v51);
      sub_24C7D5FEC(v49, v51);
      *(_WORD *)(v56 + 12) = 2080;
      uint64_t v59 = sub_24C824E74();
      uint64_t v71 = sub_24C7DE68C(v59, v60, v69);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      os_log_t v61 = v65;
      _os_log_impl(&dword_24C7BE000, v65, (os_log_type_t)v66, "[SPAKE2 Confirm] Sending confirmV=%s %s", (uint8_t *)v56, 0x16u);
      uint64_t v62 = v67;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v62, -1, -1);
      MEMORY[0x2532FCCC0](v56, -1, -1);
    }
    else
    {
      sub_24C7D5FEC(v49, v51);
      sub_24C7D5FEC(v49, v51);
    }
    if (*(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel))
    {
      uint64_t v63 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_24C8186A4(v49, v51, (uint64_t)sub_24C830834, v63);
      swift_release();
      swift_release();
    }
    LOBYTE(v69[0]) = 6;
    sub_24C81FC20((char *)v69);
    sub_24C7D5FEC(v49, v51);
    sub_24C8307C8(v9, v8, v10, 0);
    swift_release_n();
    sub_24C7D5FEC(v49, v51);
    swift_release();
  }
  else
  {
    LOBYTE(v69[0]) = 0;
    swift_retain();
    sub_24C822B18((unsigned __int8 *)v69, 0xD000000000000038, 0x800000024C8509B0);
    swift_release();
  }
}

uint64_t sub_24C8240E4(uint64_t *a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  char v6 = *((unsigned char *)a1 + 16);
  char v7 = *((unsigned char *)a1 + 17);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v9[0] = v4;
    v9[1] = v5;
    char v10 = v6;
    char v11 = v7;
    a3(v9);
    return swift_release();
  }
  return result;
}

void sub_24C824170(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (uint64_t *)((char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 17);
  uint64_t v12 = *(void **)(v2 + 16);
  *char v7 = v12;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v13 = v12;
  LOBYTE(v12) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once();
LABEL_11:
    uint64_t v28 = sub_24C849590();
    __swift_project_value_buffer(v28, (uint64_t)qword_2697F7088);
    unint64_t v29 = sub_24C849570();
    os_log_type_t v30 = sub_24C84A110();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      v63[0] = v32;
      *(_DWORD *)uint64_t v31 = 136315138;
      uint64_t v33 = sub_24C824E74();
      uint64_t v65 = sub_24C7DE68C(v33, v34, v63);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      uint64_t v35 = "[SPAKE2 Confirm Response] Disconnect detected, ignoring, %s";
LABEL_17:
      _os_log_impl(&dword_24C7BE000, v29, v30, v35, v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v32, -1, -1);
      MEMORY[0x2532FCCC0](v31, -1, -1);
      swift_release_n();

      return;
    }
LABEL_18:

    goto LABEL_19;
  }
  unsigned int v14 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v14 > 0xF)
  {
    uint64_t v27 = qword_2697EE9E0;
    swift_retain_n();
    if (v27 == -1) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
  if (v14 != 6)
  {
    uint64_t v36 = qword_2697EE9E0;
    swift_retain_n();
    if (v36 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_24C849590();
    __swift_project_value_buffer(v37, (uint64_t)qword_2697F7088);
    unint64_t v29 = sub_24C849570();
    os_log_type_t v30 = sub_24C84A0F0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      v63[0] = v32;
      *(_DWORD *)uint64_t v31 = 136315138;
      uint64_t v38 = sub_24C824E74();
      uint64_t v65 = sub_24C7DE68C(v38, v39, v63);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      uint64_t v35 = "[SPAKE2 Confirm Response] Unexpected state, %s";
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier);
  if (v15)
  {
    if (v11)
    {
      swift_retain_n();
      swift_retain();
      sub_24C830828(v9, v8, v10, 1);
      if (qword_2697EE9E0 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_24C849590();
      __swift_project_value_buffer(v16, (uint64_t)qword_2697F7088);
      sub_24C7D77BC(v9, v8, v10);
      unint64_t v17 = sub_24C849570();
      os_log_type_t v18 = sub_24C84A0F0();
      int v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v20 = swift_slowAlloc();
        LODWORD(v60) = v19;
        uint64_t v21 = v20;
        uint64_t v61 = swift_slowAlloc();
        uint64_t v65 = v61;
        *(_DWORD *)uint64_t v21 = 136315394;
        v63[0] = v9;
        v63[1] = v8;
        unsigned __int8 v64 = v10;
        sub_24C7D77BC(v9, v8, v10);
        uint64_t v22 = sub_24C849ED0();
        v63[0] = sub_24C7DE68C(v22, v23, &v65);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C8307C8(v9, v8, v10, 1);
        sub_24C8307C8(v9, v8, v10, 1);
        *(_WORD *)(v21 + 12) = 2080;
        uint64_t v24 = sub_24C824E74();
        v63[0] = sub_24C7DE68C(v24, v25, &v65);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v17, (os_log_type_t)v60, "[SPAKE2 Share Confirm] Failed to receive Spake2Confirm-response, error=%s %s", (uint8_t *)v21, 0x16u);
        uint64_t v26 = v61;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v26, -1, -1);
        MEMORY[0x2532FCCC0](v21, -1, -1);
      }
      else
      {
        sub_24C8307C8(v9, v8, v10, 1);
        sub_24C8307C8(v9, v8, v10, 1);
      }

      LOBYTE(v63[0]) = 2;
      sub_24C822B18((unsigned __int8 *)v63, 0xD00000000000001ELL, 0x800000024C850A80);
    }
    else
    {
      LOBYTE(v63[0]) = 7;
      swift_retain_n();
      swift_retain();
      sub_24C830828(v9, v8, v10, 0);
      sub_24C81FC20((char *)v63);
      if (qword_2697EE9E0 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_24C849590();
      uint64_t v41 = __swift_project_value_buffer(v40, (uint64_t)qword_2697F7088);
      sub_24C830828(v9, v8, v10, 0);
      sub_24C7D60D0(v9, v8);
      BOOL v42 = sub_24C849570();
      os_log_type_t v43 = sub_24C84A110();
      BOOL v44 = os_log_type_enabled(v42, v43);
      uint64_t v62 = v15;
      if (v44)
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        v63[0] = v60;
        *(_DWORD *)uint64_t v45 = 136315394;
        uint64_t v46 = sub_24C849340();
        uint64_t v61 = v41;
        uint64_t v65 = sub_24C7DE68C(v46, v47, v63);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C8307C8(v9, v8, v10, 0);
        sub_24C8307C8(v9, v8, v10, 0);
        *(_WORD *)(v45 + 12) = 2080;
        uint64_t v48 = sub_24C824E74();
        uint64_t v65 = sub_24C7DE68C(v48, v49, v63);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v42, v43, "[SPAKE2 Confirm Response] confirmP=%s, %s", (uint8_t *)v45, 0x16u);
        uint64_t v50 = v60;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v50, -1, -1);
        MEMORY[0x2532FCCC0](v45, -1, -1);
      }
      else
      {
        sub_24C8307C8(v9, v8, v10, 0);
        sub_24C8307C8(v9, v8, v10, 0);
      }

      sub_24C7D60D0(v9, v8);
      sub_24C83661C(v9, v8);
      sub_24C8307C8(v9, v8, v10, 0);
      *(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationResult) = 0;
      unint64_t v51 = sub_24C849570();
      os_log_type_t v52 = sub_24C84A110();
      if (os_log_type_enabled(v51, v52))
      {
        os_log_type_t v53 = (uint8_t *)swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        v63[0] = v54;
        *(_DWORD *)os_log_type_t v53 = 136315138;
        uint64_t v61 = (uint64_t)(v53 + 4);
        uint64_t v55 = sub_24C824E74();
        uint64_t v65 = sub_24C7DE68C(v55, v56, v63);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v51, v52, "[SPAKE2 Confirm Response] Seed validated, %s", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v54, -1, -1);
        MEMORY[0x2532FCCC0](v53, -1, -1);
      }

      sub_24C824F6C();
      uint64_t v57 = v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate;
      swift_beginAccess();
      if (MEMORY[0x2532FCD70](v57))
      {
        uint64_t v58 = *(void *)(v57 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 8))(v2, ObjectType, v58);
        sub_24C8307C8(v9, v8, v10, 0);
        swift_release();
        swift_unknownObjectRelease();
        goto LABEL_19;
      }
      sub_24C8307C8(v9, v8, v10, 0);
    }
    swift_release();
LABEL_19:
    swift_release_n();
    return;
  }
  LOBYTE(v63[0]) = 0;
  swift_retain();
  sub_24C822B18((unsigned __int8 *)v63, 0xD00000000000003ALL, 0x800000024C850A40);
  swift_release();
}

uint64_t sub_24C824E74()
{
  return 0x612D747365747461;
}

uint64_t sub_24C824F6C()
{
  uint64_t v4 = v0;
  uint64_t v5 = sub_24C849C80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v4 + 16);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F0E0], v5);
  id v10 = v9;
  uint64_t v11 = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_22:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v11 = *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier);
  if (!v11)
  {
    LOBYTE(v62[0]) = 0;
    return sub_24C822B18((unsigned __int8 *)v62, 0xD000000000000037, 0x800000024C850AA0);
  }
  uint64_t v12 = (void *)*MEMORY[0x263F16FB8];
  swift_retain();
  KeyPair = createKeyPair(v12, 256);
  uint64_t v2 = secIdentityFromKeyPair(KeyPair);
  *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_localSecIdentity) = v2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v13 = publicKeyFromIdentity(v2);
  uint64_t v1 = sub_24C849350();
  unint64_t v3 = v14;

  uint64_t v15 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey);
  uint64_t v16 = *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey);
  unint64_t v17 = *(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey + 8);
  *uint64_t v15 = v1;
  v15[1] = v3;
  sub_24C7D60D0(v1, v3);
  sub_24C7D6044(v16, v17);
  if (qword_2697EE9E0 != -1) {
    goto LABEL_22;
  }
LABEL_4:
  uint64_t v18 = sub_24C849590();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_2697F7088);
  sub_24C7D60D0(v1, v3);
  swift_retain();
  sub_24C7D60D0(v1, v3);
  swift_retain();
  uint64_t v20 = sub_24C849570();
  os_log_type_t v21 = sub_24C84A110();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v59 = v2;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v56 = v19;
    uint64_t v25 = v24;
    v62[0] = v24;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v26 = sub_24C849340();
    uint64_t v57 = v11;
    uint64_t v61 = sub_24C7DE68C(v26, v27, v62);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    sub_24C7D5FEC(v1, v3);
    sub_24C7D5FEC(v1, v3);
    *(_WORD *)(v23 + 12) = 2080;
    LOBYTE(v61) = *(unsigned char *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
    unint64_t v28 = TransferClient.State.description.getter();
    uint64_t v61 = sub_24C7DE68C(v28, v29, v62);
    uint64_t v11 = v57;
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v20, v21, "[FileTransferSetup] Generated localPublicKey=%s, state=%s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v25, -1, -1);
    MEMORY[0x2532FCCC0](v23, -1, -1);
  }
  else
  {
    sub_24C7D5FEC(v1, v3);
    sub_24C7D5FEC(v1, v3);

    swift_release_n();
  }
  uint64_t v31 = sub_24C8353A0(v1, v3);
  unint64_t v58 = v3;
  unint64_t v33 = v32;
  uint64_t v56 = v1;
  if (v32 >> 60 == 15)
  {
    swift_retain_n();
    unint64_t v34 = sub_24C849570();
    os_log_type_t v35 = sub_24C84A0F0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      v62[0] = v37;
      *(_DWORD *)uint64_t v36 = 136315138;
      LOBYTE(v61) = *(unsigned char *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
      unint64_t v38 = TransferClient.State.description.getter();
      uint64_t v61 = sub_24C7DE68C(v38, v39, v62);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v34, v35, "[FileTransferSetup] Spake2Verifier.encrypt() returned nil, %s", v36, 0xCu);
      swift_arrayDestroy();
      uint64_t v40 = v37;
      unint64_t v3 = v58;
      MEMORY[0x2532FCCC0](v40, -1, -1);
      MEMORY[0x2532FCCC0](v36, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v62[0]) = 0;
    sub_24C822B18((unsigned __int8 *)v62, 0xD000000000000025, 0x800000024C850B10);

    swift_unknownObjectRelease();
    sub_24C7D5FEC(v56, v3);
  }
  else
  {
    uint64_t v41 = v31;
    uint64_t v42 = sub_24C849340();
    unint64_t v44 = v43;
    sub_24C7D6044(v41, v33);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v45 = sub_24C849570();
    os_log_type_t v46 = sub_24C84A110();
    BOOL v47 = os_log_type_enabled(v45, v46);
    uint64_t v57 = v11;
    if (v47)
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v49 = v42;
      uint64_t v50 = swift_slowAlloc();
      v62[0] = v50;
      *(_DWORD *)uint64_t v48 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_24C7DE68C(v49, v44, v62);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v48 + 12) = 2080;
      LOBYTE(v61) = *(unsigned char *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
      unint64_t v51 = TransferClient.State.description.getter();
      uint64_t v61 = sub_24C7DE68C(v51, v52, v62);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v45, v46, "[FileTransferSetup] Sending encryptedLocalPublicKey=%s, state=%s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v50, -1, -1);
      MEMORY[0x2532FCCC0](v48, -1, -1);

      uint64_t v42 = v49;
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    unint64_t v53 = v58;
    uint64_t v54 = v56;
    if (*(void *)(v4 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel))
    {
      uint64_t v55 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_24C81897C(v42, v44, (uint64_t)sub_24C8309F0, v55);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    LOBYTE(v62[0]) = 8;
    sub_24C81FC20((char *)v62);

    swift_unknownObjectRelease();
    sub_24C7D5FEC(v54, v53);
  }
  return swift_release();
}

uint64_t sub_24C825A00(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  char v5 = *((unsigned char *)a1 + 32);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v7[0] = v1;
    v7[1] = v2;
    uint64_t v7[2] = v3;
    void v7[3] = v4;
    char v8 = v5;
    sub_24C825A8C((uint64_t)v7);
    return swift_release();
  }
  return result;
}

void sub_24C825A8C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEAF8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v138 - v8;
  uint64_t v10 = sub_24C849440();
  uint64_t v150 = *(void *)(v10 - 8);
  uint64_t v151 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v152 = (char *)&v138 - v14;
  uint64_t v15 = sub_24C849C80();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (uint64_t *)((char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v154 = *(void *)a1;
  uint64_t v155 = v19;
  uint64_t v20 = *(void *)(a1 + 24);
  uint64_t v153 = *(void *)(a1 + 16);
  unint64_t v21 = *(unsigned __int8 *)(a1 + 32);
  BOOL v22 = *(void **)(v2 + 16);
  *uint64_t v18 = v22;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F8F0E0], v15);
  id v23 = v22;
  uint64_t v24 = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if ((v24 & 1) == 0)
  {
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v25 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  unsigned int v26 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  uint64_t v27 = v2;
  if (v26 > 0xF)
  {
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_24C849590();
    __swift_project_value_buffer(v41, (uint64_t)qword_2697F7088);
    swift_retain_n();
    uint64_t v42 = sub_24C849570();
    os_log_type_t v43 = sub_24C84A110();
    if (os_log_type_enabled(v42, v43))
    {
      unint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)unint64_t v44 = 136315138;
      v156[0] = v45;
      LOBYTE(v158[0]) = *(unsigned char *)(v2 + v25);
      unint64_t v46 = TransferClient.State.description.getter();
      v158[0] = sub_24C7DE68C(v46, v47, v156);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v48 = "[FileTransferSetup Response] Disconnect detected, ignoring, state=%s";
LABEL_18:
      _os_log_impl(&dword_24C7BE000, v42, v43, v48, v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v45, -1, -1);
      MEMORY[0x2532FCCC0](v44, -1, -1);

      return;
    }
LABEL_19:

    swift_release_n();
    return;
  }
  if (v26 != 8)
  {
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_24C849590();
    __swift_project_value_buffer(v49, (uint64_t)qword_2697F7088);
    swift_retain_n();
    uint64_t v42 = sub_24C849570();
    os_log_type_t v43 = sub_24C84A0F0();
    if (os_log_type_enabled(v42, v43))
    {
      unint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)unint64_t v44 = 136315138;
      v156[0] = v45;
      LOBYTE(v158[0]) = *(unsigned char *)(v2 + v25);
      unint64_t v50 = TransferClient.State.description.getter();
      v158[0] = sub_24C7DE68C(v50, v51, v156);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      uint64_t v48 = "[FileTransferSetup Response] Unexpected state, state=%s";
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  uint64_t v28 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier);
  uint64_t v148 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  uint64_t v149 = v28;
  if (!v28)
  {
    LOBYTE(v156[0]) = 0;
    sub_24C822B18((unsigned __int8 *)v156, 0xD000000000000046, 0x800000024C850B40);
    return;
  }
  if (v21)
  {
    swift_retain();
    uint64_t v29 = v154;
    uint64_t v30 = v155;
    unsigned __int8 v31 = v153;
    sub_24C830B5C(v154, v155, v153, v20, 1);
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_24C849590();
    __swift_project_value_buffer(v32, (uint64_t)qword_2697F7088);
    swift_retain_n();
    sub_24C830B5C(v29, v30, v31, v20, 1);
    unint64_t v33 = sub_24C849570();
    os_log_type_t v34 = sub_24C84A0F0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      unint64_t v152 = (char *)swift_slowAlloc();
      v158[0] = (uint64_t)v152;
      *(_DWORD *)uint64_t v35 = 136315394;
      v156[0] = v29;
      v156[1] = v30;
      unsigned __int8 v157 = v31;
      sub_24C7D77BC(v29, v30, v31);
      uint64_t v36 = sub_24C849ED0();
      v156[0] = sub_24C7DE68C(v36, v37, v158);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C830BAC(v29, v30, v31, v20, 1);
      sub_24C830BAC(v29, v30, v31, v20, 1);
      *(_WORD *)(v35 + 12) = 2080;
      LOBYTE(v156[0]) = *(unsigned char *)(v27 + v148);
      unint64_t v38 = TransferClient.State.description.getter();
      v156[0] = sub_24C7DE68C(v38, v39, v158);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v33, v34, "[FileTransferSetup Response] Failed to receive file-transfer-setup-response, error=%s state=%s", (uint8_t *)v35, 0x16u);
      uint64_t v40 = v152;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v40, -1, -1);
      MEMORY[0x2532FCCC0](v35, -1, -1);
    }
    else
    {
      sub_24C830BAC(v29, v30, v31, v20, 1);
      sub_24C830BAC(v29, v30, v31, v20, 1);

      swift_release_n();
    }
    LOBYTE(v156[0]) = 2;
    uint64_t v61 = 0xD000000000000022;
    unint64_t v60 = 0x800000024C850B90;
LABEL_29:
    sub_24C822B18((unsigned __int8 *)v156, v61, v60);
LABEL_45:
    swift_release();
    return;
  }
  LOBYTE(v156[0]) = 9;
  uint64_t v52 = v155;
  swift_bridgeObjectRetain();
  unint64_t v53 = v20;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v147 = v2;
  sub_24C81FC20((char *)v156);
  uint64_t v54 = sub_24C8492F0();
  if (v55 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_24C849590();
    __swift_project_value_buffer(v56, (uint64_t)qword_2697F7088);
    uint64_t v57 = sub_24C849570();
    os_log_type_t v58 = sub_24C84A0F0();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v59 = 0;
      _os_log_impl(&dword_24C7BE000, v57, v58, "FileTransferSetup Response] Failed to deserialize encryptedRemotePublicKey from base64", v59, 2u);
      MEMORY[0x2532FCCC0](v59, -1, -1);
    }

    LOBYTE(v156[0]) = 1;
    unint64_t v60 = 0x800000024C84F340;
    uint64_t v61 = 0xD00000000000002DLL;
    goto LABEL_29;
  }
  uint64_t v62 = v54;
  uint64_t v18 = (void *)v55;
  uint64_t v63 = sub_24C8492F0();
  if (v64 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v65 = sub_24C849590();
    __swift_project_value_buffer(v65, (uint64_t)qword_2697F7088);
    uint64_t v66 = sub_24C849570();
    os_log_type_t v67 = sub_24C84A0F0();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v68 = 0;
      _os_log_impl(&dword_24C7BE000, v66, v67, "FileTransferSetup Response] Failed to deserialize fileTransferServiceUUID from base64", v68, 2u);
      MEMORY[0x2532FCCC0](v68, -1, -1);
    }

    LOBYTE(v156[0]) = 1;
    sub_24C822B18((unsigned __int8 *)v156, 0xD00000000000002DLL, 0x800000024C84F340);
    goto LABEL_36;
  }
  uint64_t v69 = v62;
  uint64_t v144 = v63;
  unint64_t v145 = v64;
  if (qword_2697EE9E0 != -1) {
    swift_once();
  }
  uint64_t v70 = sub_24C849590();
  uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)qword_2697F7088);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v72 = v147;
  swift_retain_n();
  uint64_t v143 = v71;
  os_log_type_t v73 = sub_24C849570();
  os_log_type_t v74 = sub_24C84A110();
  LODWORD(v142) = v74;
  BOOL v75 = os_log_type_enabled(v73, v74);
  uint64_t v146 = v69;
  if (v75)
  {
    unint64_t v76 = v52;
    uint64_t v77 = swift_slowAlloc();
    uint64_t v140 = swift_slowAlloc();
    v156[0] = v140;
    *(_DWORD *)uint64_t v77 = 136315650;
    os_log_t v139 = v73;
    swift_bridgeObjectRetain();
    v158[0] = sub_24C7DE68C(v154, v76, v156);
    os_log_t v141 = v18;
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v77 + 12) = 2080;
    swift_bridgeObjectRetain();
    v158[0] = sub_24C7DE68C(v153, v20, v156);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v77 + 22) = 2080;
    LOBYTE(v158[0]) = *(unsigned char *)(v72 + v148);
    unint64_t v78 = TransferClient.State.description.getter();
    v158[0] = sub_24C7DE68C(v78, v79, v156);
    unint64_t v53 = v20;
    uint64_t v62 = v146;
    uint64_t v18 = v141;
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v80 = v139;
    _os_log_impl(&dword_24C7BE000, v139, (os_log_type_t)v142, "[FileTransferSetup Response] Received response, encryptedRemotePublicKey=%s encryptedServiceUUID=%s state=%s", (uint8_t *)v77, 0x20u);
    uint64_t v81 = v140;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v81, -1, -1);
    MEMORY[0x2532FCCC0](v77, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v62 = v69;
  }
  unint64_t v82 = sub_24C8358A8(v62, (unint64_t)v18);
  unint64_t v84 = v83;
  if (v83 >> 60 == 15) {
    goto LABEL_43;
  }
  uint64_t v93 = v82;
  unint64_t v94 = sub_24C8358A8(v144, v145);
  unint64_t v96 = v95;
  if (v95 >> 60 == 15)
  {
    sub_24C7D6044(v93, v84);
LABEL_43:
    unint64_t v85 = v155;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v86 = v147;
    swift_retain_n();
    uint64_t v87 = sub_24C849570();
    os_log_type_t v88 = sub_24C84A0F0();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = swift_slowAlloc();
      unint64_t v152 = (char *)swift_slowAlloc();
      v156[0] = (uint64_t)v152;
      *(_DWORD *)uint64_t v89 = 136315650;
      swift_bridgeObjectRetain();
      v158[0] = sub_24C7DE68C(v154, v85, v156);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      os_log_t v141 = v18;
      *(_WORD *)(v89 + 12) = 2080;
      swift_bridgeObjectRetain();
      v158[0] = sub_24C7DE68C(v153, v53, v156);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v89 + 22) = 2080;
      LOBYTE(v158[0]) = *(unsigned char *)(v86 + v148);
      unint64_t v90 = TransferClient.State.description.getter();
      v158[0] = sub_24C7DE68C(v90, v91, v156);
      uint64_t v18 = v141;
      uint64_t v62 = v146;
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v87, v88, "[FileTransferSetup Response] Spake2Verifier.decrypt() returned nil for encryptedRemotePublicKey=%s encryptedServiceUUID=%s state=%s", (uint8_t *)v89, 0x20u);
      unint64_t v92 = v152;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v92, -1, -1);
      MEMORY[0x2532FCCC0](v89, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    LOBYTE(v156[0]) = 0;
    sub_24C822B18((unsigned __int8 *)v156, 0xD000000000000025, 0x800000024C850BF0);
LABEL_49:
    sub_24C7D6044(v144, v145);
LABEL_36:
    sub_24C7D6044(v62, (unint64_t)v18);
    goto LABEL_45;
  }
  uint64_t v15 = v94;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24C7D7304(v93, v84);
  sub_24C7D7304(v15, v96);
  uint64_t v155 = v96;
  sub_24C805280(v15, v96, (uint64_t)v9);
  unint64_t v21 = v84;
  uint64_t v20 = v93;
  uint64_t v2 = v150;
  uint64_t v24 = v151;
  int v97 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v150 + 48))(v9, 1, v151);
  unint64_t v142 = v21;
  if (v97 == 1)
  {
    uint64_t v153 = v20;
    sub_24C7D7C08((uint64_t)v9, &qword_2697EEAF8);
    uint64_t v98 = v147;
    swift_retain();
    unint64_t v99 = v155;
    sub_24C7D7304(v15, v155);
    swift_retain();
    uint64_t v154 = v15;
    sub_24C7D7304(v15, v99);
    uint64_t v100 = sub_24C849570();
    os_log_type_t v101 = sub_24C84A0F0();
    if (os_log_type_enabled(v100, v101))
    {
      uint64_t v102 = swift_slowAlloc();
      uint64_t v103 = swift_slowAlloc();
      v156[0] = v103;
      *(_DWORD *)uint64_t v102 = 136315394;
      uint64_t v105 = v154;
      unint64_t v104 = v155;
      uint64_t v106 = sub_24C849340();
      v158[0] = sub_24C7DE68C(v106, v107, v156);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C7D6044(v105, v104);
      sub_24C7D6044(v105, v104);
      *(_WORD *)(v102 + 12) = 2080;
      LOBYTE(v158[0]) = *(unsigned char *)(v98 + v148);
      unint64_t v108 = TransferClient.State.description.getter();
      v158[0] = sub_24C7DE68C(v108, v109, v156);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v100, v101, "[FileTransferSetup Response] Could not initialize UUID from decryptedServiceUUIDData=%s state=%s", (uint8_t *)v102, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v103, -1, -1);
      uint64_t v62 = v146;
      MEMORY[0x2532FCCC0](v102, -1, -1);
    }
    else
    {
      uint64_t v134 = v154;
      unint64_t v133 = v155;
      sub_24C7D6044(v154, v155);
      sub_24C7D6044(v134, v133);

      swift_release_n();
    }
    unint64_t v135 = v142;
    uint64_t v136 = v153;
    LOBYTE(v156[0]) = 0;
    sub_24C822B18((unsigned __int8 *)v156, 0xD00000000000001ELL, 0x800000024C850C20);
    sub_24C7D6044(v136, v135);
    sub_24C7D6044(v136, v135);
    sub_24C7D6044(v154, v155);
    goto LABEL_49;
  }
LABEL_56:
  os_log_t v141 = v18;
  sub_24C7D6044(v15, v155);
  os_log_type_t v110 = v152;
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v152, v9, v24);
  uint64_t v111 = v147;
  unint64_t v112 = (uint64_t *)(v147 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey);
  uint64_t v113 = v24;
  uint64_t v114 = *(void *)(v147 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey);
  unint64_t v115 = *(void *)(v147 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey + 8);
  uint64_t *v112 = v20;
  v112[1] = v21;
  sub_24C7D60D0(v20, v21);
  sub_24C7D6044(v114, v115);
  uint64_t v116 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v116(v7, v110, v113);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v113);
  uint64_t v117 = v111 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferServiceUUID;
  swift_beginAccess();
  sub_24C830BFC((uint64_t)v7, v117);
  swift_endAccess();
  uint64_t v118 = v113;
  v116(v13, v110, v113);
  unint64_t v119 = v142;
  swift_retain_n();
  sub_24C7D7304(v20, v119);
  uint64_t v120 = sub_24C849570();
  os_log_type_t v121 = sub_24C84A110();
  int v122 = v121;
  if (os_log_type_enabled(v120, v121))
  {
    uint64_t v123 = swift_slowAlloc();
    uint64_t v155 = swift_slowAlloc();
    v156[0] = v155;
    *(_DWORD *)uint64_t v123 = 136315650;
    LODWORD(v154) = v122;
    uint64_t v124 = sub_24C849340();
    v158[0] = sub_24C7DE68C(v124, v125, v156);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    sub_24C7D6044(v20, v142);
    sub_24C7D6044(v20, v142);
    *(_WORD *)(v123 + 12) = 2080;
    sub_24C830654(&qword_2697EEC60, MEMORY[0x263F07508]);
    uint64_t v126 = sub_24C84A430();
    v158[0] = sub_24C7DE68C(v126, v127, v156);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    os_log_type_t v128 = *(void (**)(char *, uint64_t))(v2 + 8);
    v128(v13, v118);
    *(_WORD *)(v123 + 22) = 2080;
    LOBYTE(v158[0]) = *(unsigned char *)(v111 + v148);
    unint64_t v129 = TransferClient.State.description.getter();
    v158[0] = sub_24C7DE68C(v129, v130, v156);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v120, (os_log_type_t)v154, "[FileTransferSetup Response] Finished decryption, remotePublicKey=%s fileTransferServiceUUID=%s state=%s", (uint8_t *)v123, 0x20u);
    uint64_t v131 = v155;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v131, -1, -1);
    uint64_t v132 = v123;
    unint64_t v119 = v142;
    MEMORY[0x2532FCCC0](v132, -1, -1);
  }
  else
  {
    sub_24C7D6044(v20, v119);
    sub_24C7D6044(v20, v119);
    os_log_type_t v128 = *(void (**)(char *, uint64_t))(v2 + 8);
    v128(v13, v118);

    swift_release_n();
  }
  uint64_t v137 = v146;
  sub_24C8272D0();
  sub_24C7D6044(v20, v119);
  sub_24C7D6044(v144, v145);
  sub_24C7D6044(v137, (unint64_t)v141);
  swift_release();
  v128(v152, v118);
}

void sub_24C8272D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB00);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NetworkDescriptor();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v33 = (uint64_t)&v32 - v10;
  uint64_t v11 = sub_24C849C80();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v1 + 16);
  void *v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  id v16 = v15;
  char v17 = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
LABEL_4:
    uint64_t v18 = sub_24C849590();
    __swift_project_value_buffer(v18, (uint64_t)qword_2697F7088);
    swift_retain_n();
    uint64_t v19 = sub_24C849570();
    os_log_type_t v20 = sub_24C84A0F0();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v34[0] = v22;
      *(_DWORD *)unint64_t v21 = 136315138;
      LOBYTE(v35) = *(unsigned char *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
      unint64_t v23 = TransferClient.State.description.getter();
      uint64_t v35 = sub_24C7DE68C(v23, v24, v34);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v19, v20, "[FileTransferSetup] Failed to setup file-transfer-browser, state=%s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v22, -1, -1);
      MEMORY[0x2532FCCC0](v21, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return;
  }
  sub_24C8277F4((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_24C7D7C08((uint64_t)v4, (uint64_t *)&unk_2697EEB00);
    if (qword_2697EE9E0 == -1) {
      goto LABEL_4;
    }
    goto LABEL_13;
  }
  uint64_t v25 = v33;
  sub_24C8301D0((uint64_t)v4, v33, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  sub_24C830314(v25, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoBrowser();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = 0;
  *(void *)(v26 + 24) = 0;
  *(void *)(v26 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_browser) = 0;
  sub_24C8301D0((uint64_t)v9, v26 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_descriptor, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  *(void *)(v26 + OBJC_IVAR____TtC5Cosmo12CosmoBrowser_queue) = v16;
  uint64_t v27 = OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferBrowser;
  *(void *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferBrowser) = v26;
  id v28 = v16;
  swift_release();
  uint64_t v29 = *(void *)(v1 + v27);
  if (v29)
  {
    uint64_t v30 = swift_allocObject();
    swift_weakInit();
    swift_beginAccess();
    uint64_t v31 = *(void *)(v29 + 16);
    *(void *)(v29 + 16) = sub_24C830C64;
    *(void *)(v29 + 24) = v30;
    sub_24C7D6F70(v31);
  }
  LOBYTE(v35) = 10;
  sub_24C81FC20((char *)&v35);
  if (*(void *)(v1 + v27))
  {
    swift_retain();
    sub_24C80BE38();
    swift_release();
  }
  sub_24C830238(v25, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
}

uint64_t sub_24C8277F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEAF8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24C849440();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24C849C80();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v2 + 16);
  void *v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  id v16 = v15;
  LOBYTE(v15) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_localSecIdentity);
  if (v17)
  {
    unint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey + 8);
    if (v18 >> 60 != 15)
    {
      unint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey + 8);
      if (v19 >> 60 != 15)
      {
        uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_remotePublicKey);
        uint64_t v38 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_localPublicKey);
        uint64_t v39 = v20;
        uint64_t v21 = v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferServiceUUID;
        swift_beginAccess();
        sub_24C7D7BA4(v21, (uint64_t)v6, &qword_2697EEAF8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
        {
          uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
          v31(v10, v6, v7);
          uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC0);
          uint64_t v33 = (char *)(a1 + *(int *)(v32 + 96));
          uint64_t v34 = *(int *)(v32 + 112);
          *(unsigned char *)a1 = 0;
          uint64_t v35 = v38;
          *(void *)(a1 + 8) = v39;
          *(void *)(a1 + 16) = v19;
          *(void *)(a1 + 24) = v35;
          *(void *)(a1 + 32) = v18;
          *(void *)(a1 + 40) = v17;
          v31(v33, v10, v7);
          *(unsigned char *)(a1 + v34) = 1;
          uint64_t v36 = type metadata accessor for NetworkDescriptor();
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a1, 0, 1, v36);
          swift_unknownObjectRetain();
          sub_24C7D7304(v35, v18);
          return sub_24C7D7304(v39, v19);
        }
        sub_24C7D7C08((uint64_t)v6, &qword_2697EEAF8);
      }
    }
  }
  if (qword_2697EE9E0 != -1) {
    goto LABEL_14;
  }
LABEL_8:
  uint64_t v22 = sub_24C849590();
  __swift_project_value_buffer(v22, (uint64_t)qword_2697F7088);
  swift_retain_n();
  unint64_t v23 = sub_24C849570();
  os_log_type_t v24 = sub_24C84A0F0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v41 = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    LOBYTE(v40) = *(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
    unint64_t v27 = TransferClient.State.description.getter();
    uint64_t v40 = sub_24C7DE68C(v27, v28, &v41);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v23, v24, "[FileTransferSetup] Unexpected, missing needed value, state=%s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v26, -1, -1);
    MEMORY[0x2532FCCC0](v25, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v29 = type metadata accessor for NetworkDescriptor();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a1, 1, 1, v29);
}

void sub_24C827D30(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (v1)
    {
      if (qword_2697EE9E0 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_24C849590();
      __swift_project_value_buffer(v3, (uint64_t)qword_2697F7088);
      swift_retain_n();
      uint64_t v4 = sub_24C849570();
      os_log_type_t v5 = sub_24C84A110();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        uint64_t v7 = swift_slowAlloc();
        uint64_t v14 = v7;
        *(_DWORD *)uint64_t v6 = 136315138;
        unint64_t v8 = TransferClient.State.description.getter();
        sub_24C7DE68C(v8, v9, &v14);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        uint64_t v10 = "[FileTransferSetup] Advertised file-transfer-endpoint removed, state=%s";
LABEL_12:
        _os_log_impl(&dword_24C7BE000, v4, v5, v10, v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v7, -1, -1);
        MEMORY[0x2532FCCC0](v6, -1, -1);
        swift_release();

        return;
      }
LABEL_13:

      swift_release_n();
      return;
    }
    if (*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC5Cosmo14TransferClient_state) > 0xAu)
    {
      if (qword_2697EE9E0 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_24C849590();
      __swift_project_value_buffer(v11, (uint64_t)qword_2697F7088);
      swift_retain_n();
      uint64_t v4 = sub_24C849570();
      os_log_type_t v5 = sub_24C84A110();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        uint64_t v7 = swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 136315138;
        uint64_t v14 = v7;
        unint64_t v12 = TransferClient.State.description.getter();
        sub_24C7DE68C(v12, v13, &v14);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        uint64_t v10 = "[FileTransferSetup] Ignoring add of file-transfer-endpoint, state=%s";
        goto LABEL_12;
      }
      goto LABEL_13;
    }
    sub_24C82805C();
    swift_release();
  }
}

void sub_24C82805C()
{
  uint64_t v1 = v0;
  uint64_t v39 = type metadata accessor for CosmoMultiplexChannelClient.Configuration(0);
  MEMORY[0x270FA5388](v39);
  uint64_t v3 = (uint64_t *)((char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB00);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NetworkDescriptor();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v40 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = sub_24C849C80();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v16 = (uint64_t *)((char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)(v1 + 16);
  *id v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8F0E0], v13);
  id v38 = v17;
  LOBYTE(v17) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
LABEL_4:
    uint64_t v18 = sub_24C849590();
    __swift_project_value_buffer(v18, (uint64_t)qword_2697F7088);
    swift_retain_n();
    unint64_t v19 = sub_24C849570();
    os_log_type_t v20 = sub_24C84A0F0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v41[0] = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      LOBYTE(v42) = *(unsigned char *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
      unint64_t v23 = TransferClient.State.description.getter();
      uint64_t v42 = sub_24C7DE68C(v23, v24, v41);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v19, v20, "[FileTransferSetup] Failed to setup file-transfer-client, state=%s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v22, -1, -1);
      MEMORY[0x2532FCCC0](v21, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return;
  }
  sub_24C8277F4((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_24C7D7C08((uint64_t)v6, (uint64_t *)&unk_2697EEB00);
    if (qword_2697EE9E0 == -1) {
      goto LABEL_4;
    }
    goto LABEL_13;
  }
  uint64_t v25 = (uint64_t)v12;
  sub_24C8301D0((uint64_t)v6, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  id v26 = objc_msgSend(self, sel_defaultManager);
  id v27 = objc_msgSend(v26, sel_temporaryDirectory);

  unint64_t v28 = (void *)((char *)v3 + *(int *)(v39 + 20));
  type metadata accessor for CosmoHttpConnection.Configuration(0);
  sub_24C849290();

  *unint64_t v28 = 15;
  *uint64_t v3 = 5;
  uint64_t v29 = v40;
  sub_24C830314((uint64_t)v12, v40, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
  type metadata accessor for CosmoMultiplexChannelClient(0);
  swift_allocObject();
  id v30 = v38;
  id v31 = v38;
  uint64_t v32 = CosmoMultiplexChannelClient.init(config:name:descriptor:queue:)((uint64_t)v3, 0xD000000000000014, 0x800000024C850C40, v29, v30);
  uint64_t v33 = OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient;
  *(void *)(v1 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient) = v32;
  swift_release();
  uint64_t v34 = *(void *)(v1 + v33);
  if (v34)
  {
    uint64_t v35 = swift_allocObject();
    swift_weakInit();
    swift_beginAccess();
    uint64_t v36 = *(void *)(v34 + 16);
    *(void *)(v34 + 16) = sub_24C830C6C;
    *(void *)(v34 + 24) = v35;
    sub_24C7D6F70(v36);
  }
  LOBYTE(v42) = 11;
  sub_24C81FC20((char *)&v42);
  if (*(void *)(v1 + v33))
  {
    swift_retain();
    sub_24C80F6D4();
    swift_release();
  }
  sub_24C830238(v25, (uint64_t (*)(void))type metadata accessor for NetworkDescriptor);
}

uint64_t sub_24C828638(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v3 = v1;
    sub_24C8286A4(&v3);
    return swift_release();
  }
  return result;
}

void sub_24C8286A4(char *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_24C849C80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v51[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v9 = *a1;
  uint64_t v10 = *(void **)(v3 + 16);
  *uint64_t v8 = v10;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F0E0], v5);
  id v11 = v10;
  LOBYTE(v10) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_36:
    swift_once();
LABEL_7:
    uint64_t v15 = sub_24C849590();
    __swift_project_value_buffer(v15, (uint64_t)qword_2697F7088);
    swift_retain_n();
    id v16 = sub_24C849570();
    os_log_type_t v17 = sub_24C84A0D0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      v51[0] = v19;
      LOBYTE(v52) = *(unsigned char *)(v3 + v2);
      unint64_t v20 = TransferClient.State.description.getter();
      uint64_t v52 = sub_24C7DE68C(v20, v21, v51);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v16, v17, "Disconnect detected, ignoring file-transfer-client state change, state=%s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v19, -1, -1);
      MEMORY[0x2532FCCC0](v18, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return;
  }
  uint64_t v12 = OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient;
  if (!*(void *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient)) {
    return;
  }
  uint64_t v2 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  if (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_state) > 0xFu)
  {
    if (qword_2697EE9E0 == -1) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
  if (v9)
  {
    LOBYTE(v51[0]) = 2;
    uint64_t v13 = 0xD000000000000020;
    unint64_t v14 = 0x800000024C850C60;
LABEL_29:
    sub_24C822B18((unsigned __int8 *)v51, v13, v14);
    return;
  }
  LOBYTE(v51[0]) = 12;
  sub_24C81FC20((char *)v51);
  int v22 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_stateAtDisconnect);
  if (v22 != 18)
  {
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_24C849590();
    __swift_project_value_buffer(v33, (uint64_t)qword_2697F7088);
    swift_retain_n();
    uint64_t v34 = sub_24C849570();
    os_log_type_t v35 = sub_24C84A110();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      v51[0] = v37;
      *(_DWORD *)uint64_t v36 = 136315394;
      LOBYTE(v52) = v22;
      unint64_t v38 = TransferClient.State.description.getter();
      uint64_t v52 = sub_24C7DE68C(v38, v39, v51);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      LOBYTE(v52) = *(unsigned char *)(v3 + v2);
      unint64_t v40 = TransferClient.State.description.getter();
      uint64_t v52 = sub_24C7DE68C(v40, v41, v51);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v34, v35, "Client invoked disconnect in state=%s, satisfying now, state=%s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v37, -1, -1);
      MEMORY[0x2532FCCC0](v36, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v51[0]) = 3;
    unint64_t v14 = 0x800000024C8508A0;
    uint64_t v13 = 0xD00000000000001ALL;
    goto LABEL_29;
  }
  sub_24C828F9C();
  unint64_t v23 = *(void *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret + 8);
  if (v23 >> 60 == 15
    || (v51[0] = *(void *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_sharedSecret),
        v51[1] = v23,
        int v24 = SharedSecret.protocolVersion.getter(),
        (v24 & 0x100) != 0))
  {
    int v24 = 2;
  }
  if (qword_2697EE9E0 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_24C849590();
  __swift_project_value_buffer(v25, (uint64_t)qword_2697F7088);
  swift_retain_n();
  id v26 = sub_24C849570();
  os_log_type_t v27 = sub_24C84A110();
  BOOL v28 = os_log_type_enabled(v26, v27);
  HIDWORD(v50) = v24;
  if (v28)
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v51[0] = v30;
    *(_DWORD *)uint64_t v29 = 16777730;
    LOBYTE(v52) = v24;
    sub_24C84A1A0();
    *(_WORD *)(v29 + 5) = 2080;
    LOBYTE(v52) = *(unsigned char *)(v3 + v2);
    unint64_t v31 = TransferClient.State.description.getter();
    uint64_t v52 = sub_24C7DE68C(v31, v32, v51);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v26, v27, "[Lease] Sending lease-request with version=%hhu, state=%s", (uint8_t *)v29, 0xFu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v30, -1, -1);
    MEMORY[0x2532FCCC0](v29, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  if (*(void *)(v3 + v12))
  {
    uint64_t v42 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_24C81B070(SBYTE4(v50), 0, (uint64_t)sub_24C830C74, v42);
    swift_release();
    swift_release();
  }
  swift_retain_n();
  os_log_type_t v43 = sub_24C849570();
  os_log_type_t v44 = sub_24C84A110();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 136315138;
    v51[0] = v46;
    LOBYTE(v52) = *(unsigned char *)(v3 + v2);
    unint64_t v47 = TransferClient.State.description.getter();
    uint64_t v52 = sub_24C7DE68C(v47, v48, v51);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v43, v44, "[FileList] Requesting list, state=%s", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v46, -1, -1);
    MEMORY[0x2532FCCC0](v45, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  if (*(void *)(v3 + v12))
  {
    uint64_t v49 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_24C81B34C(0, (uint64_t)sub_24C830C7C, v49, (uint64_t)&unk_26FEF3558, (uint64_t)sub_24C830CA0, (uint64_t)&block_descriptor_205);
    swift_release();
    swift_release();
  }
  LOBYTE(v51[0]) = 13;
  sub_24C81FC20((char *)v51);
}

uint64_t sub_24C828F9C()
{
  uint64_t v3 = v0;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v3 + 16);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v9 = v8;
  LOBYTE(v8) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v2 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationBrowser;
  if (!*(void *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationBrowser)) {
    return result;
  }
  uint64_t v1 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel;
  if (!*(void *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationChannel)) {
    return result;
  }
  uint64_t v11 = qword_2697EE9E0;
  swift_retain();
  swift_retain();
  if (v11 != -1) {
    goto LABEL_10;
  }
LABEL_5:
  uint64_t v12 = sub_24C849590();
  __swift_project_value_buffer(v12, (uint64_t)qword_2697F7088);
  uint64_t v13 = sub_24C849570();
  os_log_type_t v14 = sub_24C84A110();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_24C7BE000, v13, v14, "[Attestation] Closing Browser and attestation-channel", v15, 2u);
    MEMORY[0x2532FCCC0](v15, -1, -1);
  }

  sub_24C80D408();
  *(void *)(v3 + v2) = 0;
  swift_release();
  sub_24C7F3AD8();
  *(void *)(v3 + v1) = 0;
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24C8291D0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  char v4 = *((unsigned char *)a1 + 24);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v6[0] = v1;
    v6[1] = v2;
    void v6[2] = v3;
    char v7 = v4;
    sub_24C829254((uint64_t)v6);
    return swift_release();
  }
  return result;
}

void sub_24C829254(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  uint64_t v12 = *(void **)(v2 + 16);
  *char v7 = v12;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v13 = v12;
  LOBYTE(v12) = sub_24C849CA0();
  uint64_t v15 = *(void (**)(void *, uint64_t))(v5 + 8);
  uint64_t v14 = v5 + 8;
  v15(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_27:
    swift_once();
LABEL_9:
    uint64_t v27 = sub_24C849590();
    __swift_project_value_buffer(v27, (uint64_t)qword_2697F7088);
    swift_retain_n();
    BOOL v28 = sub_24C849570();
    os_log_type_t v29 = sub_24C84A110();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      uint64_t v47 = v31;
      LOBYTE(v46) = *(unsigned char *)(v2 + v14);
      unint64_t v32 = TransferClient.State.description.getter();
      uint64_t v46 = sub_24C7DE68C(v32, v33, &v47);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v28, v29, "[Lease] Disconnect detected, ignoring, state=%s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v31, -1, -1);
      MEMORY[0x2532FCCC0](v30, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return;
  }
  uint64_t v14 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Cosmo14TransferClient_state) > 0xFu)
  {
    if (qword_2697EE9E0 == -1) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
  if (v11)
  {
    id v16 = v9;
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_24C849590();
    __swift_project_value_buffer(v17, (uint64_t)qword_2697F7088);
    sub_24C830ECC(v9, v8, v10, 1);
    swift_retain();
    sub_24C830ECC(v9, v8, v10, 1);
    swift_retain();
    uint64_t v18 = sub_24C849570();
    os_log_type_t v19 = sub_24C84A0F0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = (uint64_t)v9;
      uint64_t v47 = v45;
      *(_DWORD *)uint64_t v20 = 136315394;
      id v21 = v9;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
      uint64_t v22 = sub_24C849ED0();
      uint64_t v46 = sub_24C7DE68C(v22, v23, &v47);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C830E68(v9, v8, v10, 1);
      sub_24C830E68(v9, v8, v10, 1);
      *(_WORD *)(v20 + 12) = 2080;
      LOBYTE(v46) = *(unsigned char *)(v2 + v14);
      unint64_t v24 = TransferClient.State.description.getter();
      uint64_t v46 = sub_24C7DE68C(v24, v25, &v47);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v18, v19, "[Lease] Failed to receive response, error=%s, state=%s", (uint8_t *)v20, 0x16u);
      uint64_t v26 = v45;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v26, -1, -1);
      MEMORY[0x2532FCCC0](v20, -1, -1);
    }
    else
    {
      sub_24C830E68(v9, v8, v10, 1);
      sub_24C830E68(v9, v8, v10, 1);

      swift_release_n();
    }
    LOBYTE(v47) = 2;
    sub_24C822B18((unsigned __int8 *)&v47, 0xD000000000000016, 0x800000024C850CC0);
    sub_24C830E68(v9, v8, v10, 1);
  }
  else
  {
    if (v10) {
      uint64_t v34 = v8;
    }
    else {
      uint64_t v34 = 16718;
    }
    if (v10) {
      unint64_t v35 = v10;
    }
    else {
      unint64_t v35 = 0xE200000000000000;
    }
    uint64_t v36 = qword_2697EE9E0;
    swift_bridgeObjectRetain();
    if (v36 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_24C849590();
    __swift_project_value_buffer(v37, (uint64_t)qword_2697F7088);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    unint64_t v38 = sub_24C849570();
    os_log_type_t v39 = sub_24C84A110();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v47 = v41;
      *(_DWORD *)uint64_t v40 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_24C7DE68C(v34, v35, &v47);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v40 + 12) = 2080;
      LOBYTE(v46) = *(unsigned char *)(v2 + v14);
      unint64_t v42 = TransferClient.State.description.getter();
      uint64_t v46 = sub_24C7DE68C(v42, v43, &v47);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v38, v39, "[Lease] Remote TransferHost ended lease with reason=%s, state=%s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v41, -1, -1);
      MEMORY[0x2532FCCC0](v40, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    LOBYTE(v47) = 5;
    sub_24C822B18((unsigned __int8 *)&v47, v34, v35);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_24C8299AC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  char v3 = *((unsigned char *)a1 + 16);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v5[0] = v1;
    v5[1] = v2;
    char v6 = v3;
    sub_24C829A28((uint64_t)v5);
    return swift_release();
  }
  return result;
}

void sub_24C829A28(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_24C849C80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  uint64_t v12 = *(void **)(v3 + 16);
  *uint64_t v8 = v12;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F0E0], v5);
  id v13 = v12;
  LOBYTE(v12) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v2 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  unsigned int v14 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v14 > 0xF)
  {
    if (qword_2697EE9E0 == -1)
    {
LABEL_10:
      uint64_t v26 = sub_24C849590();
      __swift_project_value_buffer(v26, (uint64_t)qword_2697F7088);
      swift_retain_n();
      uint64_t v27 = sub_24C849570();
      os_log_type_t v28 = sub_24C84A110();
      if (!os_log_type_enabled(v27, v28)) {
        goto LABEL_28;
      }
      os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v29 = 136315138;
      uint64_t v55 = v30;
      LOBYTE(v54) = *(unsigned char *)(v3 + v2);
      unint64_t v31 = TransferClient.State.description.getter();
      uint64_t v54 = sub_24C7DE68C(v31, v32, &v55);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      unint64_t v33 = "[FileList] Disconnect detected, ignoring, state=%s";
LABEL_16:
      _os_log_impl(&dword_24C7BE000, v27, v28, v33, v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v30, -1, -1);
      MEMORY[0x2532FCCC0](v29, -1, -1);

      return;
    }
LABEL_32:
    swift_once();
    goto LABEL_10;
  }
  if (v14 != 13)
  {
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_24C849590();
    __swift_project_value_buffer(v34, (uint64_t)qword_2697F7088);
    swift_retain_n();
    uint64_t v27 = sub_24C849570();
    os_log_type_t v28 = sub_24C84A0F0();
    if (!os_log_type_enabled(v27, v28)) {
      goto LABEL_28;
    }
    os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v29 = 136315138;
    uint64_t v55 = v30;
    LOBYTE(v54) = *(unsigned char *)(v3 + v2);
    unint64_t v35 = TransferClient.State.description.getter();
    uint64_t v54 = sub_24C7DE68C(v35, v36, &v55);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    unint64_t v33 = "[FileList] Unexpected state, state=%s";
    goto LABEL_16;
  }
  if (v11)
  {
    id v15 = v10;
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_24C849590();
    __swift_project_value_buffer(v16, (uint64_t)qword_2697F7088);
    sub_24C830D3C(v10, v9, 1);
    swift_retain();
    sub_24C830D3C(v10, v9, 1);
    swift_retain();
    uint64_t v17 = sub_24C849570();
    os_log_type_t v18 = sub_24C84A0F0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v54 = (uint64_t)v10;
      uint64_t v55 = v20;
      *(_DWORD *)uint64_t v19 = 136315394;
      id v21 = v10;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
      uint64_t v22 = sub_24C849ED0();
      uint64_t v54 = sub_24C7DE68C(v22, v23, &v55);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C830CD8(v10, v9, 1);
      sub_24C830CD8(v10, v9, 1);
      *(_WORD *)(v19 + 12) = 2080;
      LOBYTE(v54) = *(unsigned char *)(v3 + v2);
      unint64_t v24 = TransferClient.State.description.getter();
      uint64_t v54 = sub_24C7DE68C(v24, v25, &v55);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v17, v18, "[FileList] Failed to receive file-list-request-response, error=%s state=%s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v20, -1, -1);
      MEMORY[0x2532FCCC0](v19, -1, -1);
    }
    else
    {
      sub_24C830CD8(v10, v9, 1);
      sub_24C830CD8(v10, v9, 1);

      swift_release_n();
    }
    LOBYTE(v55) = 2;
    sub_24C822B18((unsigned __int8 *)&v55, 0xD000000000000024, 0x800000024C850C90);
    sub_24C830CD8(v10, v9, 1);
    return;
  }
  LOBYTE(v55) = 14;
  swift_bridgeObjectRetain();
  sub_24C81FC20((char *)&v55);
  uint64_t v37 = *(void *)(v9 + 16);
  if (!v37)
  {
    sub_24C830CD8(v10, v9, 0);
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_24C849590();
    __swift_project_value_buffer(v48, (uint64_t)qword_2697F7088);
    swift_retain_n();
    uint64_t v27 = sub_24C849570();
    os_log_type_t v28 = sub_24C84A0F0();
    if (os_log_type_enabled(v27, v28))
    {
      os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v29 = 136315138;
      uint64_t v55 = v30;
      LOBYTE(v54) = *(unsigned char *)(v3 + v2);
      unint64_t v49 = TransferClient.State.description.getter();
      uint64_t v54 = sub_24C7DE68C(v49, v50, &v55);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      unint64_t v33 = "[FileList] Received empty-list, state=%s";
      goto LABEL_16;
    }
LABEL_28:

    swift_release_n();
    return;
  }
  if (qword_2697EE9E0 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_24C849590();
  __swift_project_value_buffer(v38, (uint64_t)qword_2697F7088);
  sub_24C830D3C(v10, v9, 0);
  swift_retain();
  sub_24C830D3C(v10, v9, 0);
  swift_retain();
  os_log_type_t v39 = sub_24C849570();
  os_log_type_t v40 = sub_24C84A110();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v54 = v37;
    uint64_t v55 = v53;
    *(_DWORD *)uint64_t v41 = 134218498;
    sub_24C84A1A0();
    *(_WORD *)(v41 + 12) = 2080;
    uint64_t v52 = v41 + 14;
    sub_24C849440();
    sub_24C830654(&qword_2697EF030, MEMORY[0x263F07508]);
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_24C849E10();
    unint64_t v44 = v43;
    sub_24C830CD8(v10, v9, 0);
    uint64_t v54 = sub_24C7DE68C(v42, v44, &v55);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    sub_24C830CD8(v10, v9, 0);
    sub_24C830CD8(v10, v9, 0);
    *(_WORD *)(v41 + 22) = 2080;
    LOBYTE(v54) = *(unsigned char *)(v3 + v2);
    unint64_t v45 = TransferClient.State.description.getter();
    uint64_t v54 = sub_24C7DE68C(v45, v46, &v55);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v39, v40, "[FileList] Received list, count=%ld list=%s, state=%s", (uint8_t *)v41, 0x20u);
    uint64_t v47 = v53;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v47, -1, -1);
    MEMORY[0x2532FCCC0](v41, -1, -1);
  }
  else
  {
    sub_24C830CD8(v10, v9, 0);
    sub_24C830CD8(v10, v9, 0);

    swift_release_n();
  }
  uint64_t v51 = sub_24C82A4BC(v9);
  sub_24C830CD8(v10, v9, 0);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v55 = v51;
  swift_retain();
  sub_24C8495F0();
}

uint64_t sub_24C82A4BC(uint64_t a1)
{
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF718);
  uint64_t v3 = MEMORY[0x270FA5388](v64);
  uint64_t v57 = (uint64_t)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v56 = (char *)v48 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v55 = (char *)v48 - v7;
  uint64_t v8 = type metadata accessor for TransferClient.FileDescriptor(0);
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v63 = (uint64_t)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (!v10) {
    return v11;
  }
  v48[1] = v1;
  uint64_t v65 = MEMORY[0x263F8EE78];
  sub_24C82F39C(0, v10, 0);
  uint64_t result = sub_24C82FBF4(a1);
  unint64_t v14 = result;
  uint64_t v15 = 0;
  uint64_t v16 = a1 + 64;
  uint64_t v58 = a1 + 80;
  uint64_t v51 = a1 + 64;
  uint64_t v52 = a1;
  int64_t v49 = v10;
  uint64_t v50 = v13;
  while ((v14 & 0x8000000000000000) == 0 && (uint64_t)v14 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v18 = v14 >> 6;
    if ((*(void *)(v16 + 8 * (v14 >> 6)) & (1 << v14)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v13) {
      goto LABEL_26;
    }
    uint64_t v59 = v15;
    uint64_t v60 = 1 << v14;
    uint64_t v19 = (uint64_t)v55;
    uint64_t v20 = &v55[*(int *)(v64 + 48)];
    uint64_t v21 = *(void *)(a1 + 48);
    uint64_t v22 = sub_24C849440();
    uint64_t v23 = *(void *)(v22 - 8);
    unint64_t v24 = *(void (**)(uint64_t, unint64_t, uint64_t))(v23 + 16);
    v24(v19, v21 + *(void *)(v23 + 72) * v14, v22);
    uint64_t v61 = (void (*)(uint64_t, uint64_t, uint64_t))v24;
    unint64_t v62 = v14;
    unint64_t v25 = (uint64_t *)(*(void *)(a1 + 56) + 24 * v14);
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    uint64_t v28 = v25[2];
    *(void *)uint64_t v20 = *v25;
    *((void *)v20 + 1) = v27;
    *((void *)v20 + 2) = v28;
    uint64_t v29 = (uint64_t)v56;
    v24((uint64_t)v56, v19, v22);
    uint64_t v30 = v64;
    unint64_t v31 = (void *)(v29 + *(int *)(v64 + 48));
    *unint64_t v31 = v26;
    v31[1] = v27;
    v31[2] = v28;
    uint64_t v32 = v57;
    sub_24C830D4C(v29, v57);
    swift_bridgeObjectRetain_n();
    uint64_t v33 = v63;
    sub_24C7D7C08(v19, &qword_2697EF718);
    uint64_t v34 = (uint64_t *)(v32 + *(int *)(v30 + 48));
    uint64_t v35 = *v34;
    uint64_t v36 = v34[1];
    uint64_t v37 = v34[2];
    v61(v33, v32, v22);
    uint64_t v38 = v54;
    os_log_type_t v39 = (void *)(v33 + *(int *)(v54 + 20));
    *os_log_type_t v39 = v35;
    v39[1] = v36;
    *(void *)(v33 + *(int *)(v38 + 24)) = v37;
    swift_bridgeObjectRetain();
    sub_24C7D7C08(v32, &qword_2697EF718);
    uint64_t v11 = v65;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_24C82F39C(0, *(void *)(v11 + 16) + 1, 1);
      uint64_t v11 = v65;
    }
    unint64_t v41 = *(void *)(v11 + 16);
    unint64_t v40 = *(void *)(v11 + 24);
    a1 = v52;
    int64_t v42 = v62;
    if (v41 >= v40 >> 1)
    {
      sub_24C82F39C(v40 > 1, v41 + 1, 1);
      uint64_t v11 = v65;
    }
    *(void *)(v11 + 16) = v41 + 1;
    uint64_t result = sub_24C8301D0(v63, v11+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v41, type metadata accessor for TransferClient.FileDescriptor);
    unint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
    if (v42 >= (uint64_t)v14) {
      goto LABEL_27;
    }
    uint64_t v16 = v51;
    uint64_t v43 = *(void *)(v51 + 8 * v18);
    if ((v43 & v60) == 0) {
      goto LABEL_28;
    }
    LODWORD(v13) = v50;
    if (*(_DWORD *)(a1 + 36) != v50) {
      goto LABEL_29;
    }
    unint64_t v44 = v43 & (-2 << (v42 & 0x3F));
    if (v44)
    {
      unint64_t v14 = __clz(__rbit64(v44)) | v42 & 0xFFFFFFFFFFFFFFC0;
      int64_t v17 = v49;
    }
    else
    {
      unint64_t v45 = v18 + 1;
      unint64_t v46 = (v14 + 63) >> 6;
      int64_t v17 = v49;
      if (v18 + 1 < v46)
      {
        unint64_t v47 = *(void *)(v51 + 8 * v45);
        if (v47)
        {
LABEL_22:
          unint64_t v14 = __clz(__rbit64(v47)) + (v45 << 6);
        }
        else
        {
          while (v46 - 2 != v18)
          {
            unint64_t v47 = *(void *)(v58 + 8 * v18++);
            if (v47)
            {
              unint64_t v45 = v18 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v15 = v59 + 1;
    if (v59 + 1 == v17) {
      return v11;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

Cosmo::PinCode __swiftcall TransferClient.auth()()
{
  static PinCode.random(length:)(4, v5);
  v4[0] = v5[0];
  v4[1] = v5[1];
  v0.value._countAndFlagsBits = (uint64_t)v4;
  TransferClient.auth(pinCode:)(v0);
  uint64_t v1 = swift_bridgeObjectRelease();
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

Cosmo::PinCode __swiftcall TransferClient.auth(pinCode:)(Cosmo::PinCode pinCode)
{
  countAndFlagsBits = (uint64_t *)pinCode.value._countAndFlagsBits;
  uint64_t v22 = v1;
  uint64_t v4 = sub_24C849BD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24C849BF0();
  uint64_t v8 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  int64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *countAndFlagsBits;
  uint64_t v12 = countAndFlagsBits[1];
  v19[1] = *(void *)(v2 + 16);
  uint64_t v20 = v11;
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v2;
  v13[3] = v11;
  void v13[4] = v12;
  aBlock[4] = sub_24C82B494;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_8_0;
  unint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24C849BE0();
  uint64_t v23 = MEMORY[0x263F8EE78];
  sub_24C830654((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v10, v7, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  swift_release();
  uint64_t v15 = v22;
  *uint64_t v22 = v20;
  v15[1] = v12;
  uint64_t v16 = swift_bridgeObjectRetain();
  result.value._object = v17;
  result.value._countAndFlagsBits = v16;
  return result;
}

void sub_24C82AC9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_pinCode);
  void *v4 = a2;
  v4[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = OBJC_IVAR____TtC5Cosmo14TransferClient_attestationResult;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationResult) != 2)
  {
    sub_24C84A230();
    swift_bridgeObjectRelease();
    uint64_t v26 = 0xD000000000000018;
    unint64_t v27 = 0x800000024C850940;
    sub_24C849F80();
    swift_bridgeObjectRelease();
    sub_24C849F80();
  }
  sub_24C84A230();
  swift_bridgeObjectRelease();
  uint64_t v26 = 0x3D6E69702D77656ELL;
  unint64_t v27 = 0xE800000000000000;
  swift_bridgeObjectRetain();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  if (v4[1])
  {
    swift_bridgeObjectRetain();
    sub_24C849ED0();
  }
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C849F80();
  uint64_t v6 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  TransferClient.State.description.getter();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  uint64_t v8 = v26;
  unint64_t v7 = v27;
  unsigned int v9 = *(unsigned __int8 *)(a1 + v6);
  if (v9 > 2)
  {
    if (v9 != 3)
    {
      if (v9 != 7) {
        goto LABEL_17;
      }
      int v17 = *(unsigned __int8 *)(a1 + v5);
      if (v17 != 2)
      {
        if ((v17 & 1) == 0) {
          goto LABEL_29;
        }
        if (sub_24C84A440())
        {
          unsigned int v9 = *(unsigned __int8 *)(a1 + v6);
LABEL_17:
          if (v9 - 4 <= 2)
          {
            if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_usePinlessPair) == 1) {
              goto LABEL_7;
            }
            if (qword_2697EE9E0 != -1) {
              swift_once();
            }
            uint64_t v18 = sub_24C849590();
            __swift_project_value_buffer(v18, (uint64_t)qword_2697F7088);
            swift_bridgeObjectRetain();
            uint64_t v19 = sub_24C849570();
            os_log_type_t v20 = sub_24C84A110();
            if (os_log_type_enabled(v19, v20))
            {
              uint64_t v21 = (uint8_t *)swift_slowAlloc();
              uint64_t v22 = swift_slowAlloc();
              uint64_t v26 = v22;
              *(_DWORD *)uint64_t v21 = 136315138;
              swift_bridgeObjectRetain();
              sub_24C7DE68C(v8, v7, &v26);
              sub_24C84A1A0();
              swift_bridgeObjectRelease_n();
              uint64_t v23 = "[Auth] Queuing PIN in case we need to re-attest, %s";
LABEL_33:
              _os_log_impl(&dword_24C7BE000, v19, v20, v23, v21, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2532FCCC0](v22, -1, -1);
              MEMORY[0x2532FCCC0](v21, -1, -1);

              return;
            }
LABEL_34:

            swift_bridgeObjectRelease_n();
            return;
          }
LABEL_29:
          if (qword_2697EE9E0 != -1) {
            swift_once();
          }
          uint64_t v25 = sub_24C849590();
          __swift_project_value_buffer(v25, (uint64_t)qword_2697F7088);
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_24C849570();
          os_log_type_t v20 = sub_24C84A110();
          if (os_log_type_enabled(v19, v20))
          {
            uint64_t v21 = (uint8_t *)swift_slowAlloc();
            uint64_t v22 = swift_slowAlloc();
            uint64_t v26 = v22;
            *(_DWORD *)uint64_t v21 = 136315138;
            swift_bridgeObjectRetain();
            sub_24C7DE68C(v8, v7, &v26);
            sub_24C84A1A0();
            swift_bridgeObjectRelease_n();
            uint64_t v23 = "[Auth] Ignoring, %s";
            goto LABEL_33;
          }
          goto LABEL_34;
        }
      }
    }
    swift_bridgeObjectRelease();
    sub_24C82199C();
    return;
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_usePinlessPair) != 1)
  {
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_24C849590();
    __swift_project_value_buffer(v24, (uint64_t)qword_2697F7088);
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_24C849570();
    os_log_type_t v20 = sub_24C84A110();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      swift_bridgeObjectRetain();
      sub_24C7DE68C(v8, v7, &v26);
      sub_24C84A1A0();
      swift_bridgeObjectRelease_n();
      uint64_t v23 = "[Auth] Queuing PIN until attestation-channel is available, %s";
      goto LABEL_33;
    }
    goto LABEL_34;
  }
LABEL_7:
  swift_bridgeObjectRelease();
  if (qword_2697EE9E0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_24C849590();
  __swift_project_value_buffer(v10, (uint64_t)qword_2697F7088);
  swift_retain_n();
  uint64_t v11 = sub_24C849570();
  os_log_type_t v12 = sub_24C84A110();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v26 = v14;
    unint64_t v15 = TransferClient.State.description.getter();
    sub_24C7DE68C(v15, v16, &v26);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v11, v12, "[Auth] Ignoring, using PIN-less pair, state=%s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v14, -1, -1);
    MEMORY[0x2532FCCC0](v13, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_24C82B478()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EEA0], 40);
}

void sub_24C82B494()
{
  sub_24C82AC9C(v0[2], v0[3], v0[4]);
}

uint64_t TransferClient.requestFile(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C82C730(a1, a2, a3, (uint64_t)&unk_26FEF2F38, (uint64_t)sub_24C82BDAC, (uint64_t)&block_descriptor_14_0);
}

void sub_24C82B4C8(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF6A8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t *)&v61[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for FileRequest(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = &v61[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for TransferClient.FileDescriptor(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14 - 8);
  int v17 = &v61[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  unsigned int v19 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v19 > 0xF) {
    return;
  }
  uint64_t v66 = a3;
  if ((v19 & 0xFE) != 0xE) {
    goto LABEL_9;
  }
  swift_getKeyPath();
  uint64_t v64 = v8;
  swift_getKeyPath();
  uint64_t v65 = a2;
  sub_24C8495E0();
  swift_release();
  a2 = v65;
  swift_release();
  uint64_t v20 = *(void *)(v67 + 16);
  swift_bridgeObjectRelease();
  if (!v20)
  {
LABEL_9:
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_24C849590();
    __swift_project_value_buffer(v24, (uint64_t)qword_2697F7088);
    swift_retain_n();
    uint64_t v25 = sub_24C849570();
    os_log_type_t v26 = sub_24C84A0F0();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v65 = a2;
      uint64_t v29 = v28;
      *(_DWORD *)unint64_t v27 = 136315138;
      uint64_t v67 = v28;
      LOBYTE(v69) = *(unsigned char *)(a1 + v18);
      unint64_t v30 = TransferClient.State.description.getter();
      uint64_t v69 = sub_24C7DE68C(v30, v31, &v67);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v25, v26, "[Request] Must be invoked after having received the file-list, state=%s", v27, 0xCu);
      swift_arrayDestroy();
      uint64_t v32 = v29;
      a2 = v65;
      MEMORY[0x2532FCCC0](v32, -1, -1);
      MEMORY[0x2532FCCC0](v27, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_24C7D6EEC();
    uint64_t v33 = swift_allocError();
    *uint64_t v34 = xmmword_24C84AFD0;
    *uint64_t v10 = v33;
    swift_storeEnumTagMultiPayload();
    a2(v10);
LABEL_17:
    sub_24C7D7C08((uint64_t)v10, &qword_2697EF6A8);
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24C8495E0();
  swift_release();
  swift_release();
  uint64_t v21 = *(void *)(v67 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    uint64_t v67 = 0;
    unint64_t v68 = 0xE000000000000000;
    sub_24C84A230();
    sub_24C849F80();
    sub_24C849440();
    sub_24C830654(&qword_2697EEC60, MEMORY[0x263F07508]);
    sub_24C84A430();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    uint64_t v35 = v67;
    unint64_t v36 = v68;
    sub_24C7D6EEC();
    uint64_t v37 = swift_allocError();
    uint64_t *v38 = v35;
    v38[1] = v36;
    *uint64_t v10 = v37;
    swift_storeEnumTagMultiPayload();
    v65(v10);
    goto LABEL_17;
  }
  uint64_t v22 = v67 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v23 = *(void *)(v15 + 72);
  swift_bridgeObjectRetain();
  while ((sub_24C849400() & 1) == 0)
  {
    v22 += v23;
    if (!--v21)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v39 = OBJC_IVAR____TtC5Cosmo14TransferClient_filesRequestedCount;
  uint64_t v40 = *(void *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_filesRequestedCount);
  BOOL v41 = __OFADD__(v40, 1);
  uint64_t v42 = v40 + 1;
  if (v41)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_filesRequestedCount) = v42;
    if (*(unsigned char *)(a1 + v18) != 15)
    {
      LOBYTE(v67) = 15;
      sub_24C81FC20((char *)&v67);
    }
    if (qword_2697EE9E0 == -1) {
      goto LABEL_23;
    }
  }
  swift_once();
LABEL_23:
  uint64_t v43 = sub_24C849590();
  __swift_project_value_buffer(v43, (uint64_t)qword_2697F7088);
  sub_24C830314(a4, (uint64_t)v17, type metadata accessor for TransferClient.FileDescriptor);
  swift_retain_n();
  unint64_t v44 = sub_24C849570();
  os_log_type_t v45 = sub_24C84A110();
  int v46 = v45;
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v47 = swift_slowAlloc();
    os_log_t v63 = v44;
    uint64_t v48 = v47;
    uint64_t v64 = swift_slowAlloc();
    uint64_t v67 = v64;
    *(_DWORD *)uint64_t v48 = 136315650;
    int v62 = v46;
    uint64_t v49 = TransferClient.FileDescriptor.description.getter();
    uint64_t v69 = sub_24C7DE68C(v49, v50, &v67);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    sub_24C830238((uint64_t)v17, type metadata accessor for TransferClient.FileDescriptor);
    *(_WORD *)(v48 + 12) = 2048;
    uint64_t v51 = *(void *)(a1 + v39);
    swift_release();
    uint64_t v69 = v51;
    sub_24C84A1A0();
    swift_release();
    *(_WORD *)(v48 + 22) = 2080;
    LOBYTE(v69) = *(unsigned char *)(a1 + v18);
    unint64_t v52 = TransferClient.State.description.getter();
    uint64_t v69 = sub_24C7DE68C(v52, v53, &v67);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v54 = v63;
    _os_log_impl(&dword_24C7BE000, v63, (os_log_type_t)v62, "[Request] Requesting file=%s, files-requested-count=%ld state=%s", (uint8_t *)v48, 0x20u);
    uint64_t v55 = v64;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v55, -1, -1);
    MEMORY[0x2532FCCC0](v48, -1, -1);
  }
  else
  {
    swift_release();
    sub_24C830238((uint64_t)v17, type metadata accessor for TransferClient.FileDescriptor);

    swift_release_n();
  }
  uint64_t v57 = v65;
  uint64_t v56 = v66;
  if (*(void *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient))
  {
    uint64_t v58 = sub_24C849440();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v13, a4, v58);
    uint64_t v59 = swift_allocObject();
    swift_weakInit();
    uint64_t v60 = (void *)swift_allocObject();
    v60[2] = v59;
    v60[3] = v57;
    v60[4] = v56;
    swift_retain();
    swift_retain();
    sub_24C81B614((uint64_t)v13, 0, (uint64_t)sub_24C830440, (uint64_t)v60);
    swift_release();
    swift_release();
    sub_24C830238((uint64_t)v13, type metadata accessor for FileRequest);
  }
}

uint64_t sub_24C82BDAC()
{
  return sub_24C82D410((uint64_t (*)(uint64_t, uint64_t, uint64_t, char *))sub_24C82B4C8);
}

uint64_t sub_24C82BDC4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v60 = a3;
  uint64_t v6 = type metadata accessor for CosmoFileHttpResponse(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v56 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF6B0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (void **)((char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF6A8);
  MEMORY[0x270FA5388](v15);
  int v17 = (uint64_t *)((char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_24C7D6EEC();
    uint64_t v36 = swift_allocError();
    *uint64_t v37 = 0xD000000000000017;
    v37[1] = 0x800000024C850900;
    *int v17 = v36;
    swift_storeEnumTagMultiPayload();
    v60(v17);
    return sub_24C7D7C08((uint64_t)v17, &qword_2697EF6A8);
  }
  uint64_t v19 = Strong;
  uint64_t v58 = a4;
  uint64_t v59 = v15;
  sub_24C7D7BA4(a1, (uint64_t)v14, &qword_2697EF6B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = *v14;
    uint64_t v21 = qword_2697EE9E0;
    swift_retain_n();
    if (v21 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_24C849590();
    __swift_project_value_buffer(v22, (uint64_t)qword_2697F7088);
    swift_retain();
    id v23 = v20;
    swift_retain();
    id v24 = v20;
    uint64_t v25 = sub_24C849570();
    os_log_type_t v26 = sub_24C84A0F0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v61 = (uint64_t)v20;
      uint64_t v62 = v28;
      *(_DWORD *)uint64_t v27 = 136315650;
      id v29 = v20;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
      uint64_t v30 = sub_24C849ED0();
      uint64_t v61 = sub_24C7DE68C(v30, v31, &v62);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v27 + 12) = 2080;
      unint64_t v32 = sub_24C82C5FC();
      uint64_t v61 = sub_24C7DE68C(v32, v33, &v62);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2080;
      LOBYTE(v61) = *(unsigned char *)(v19 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
      unint64_t v34 = TransferClient.State.description.getter();
      uint64_t v61 = sub_24C7DE68C(v34, v35, &v62);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v25, v26, "[Request] Received error=%s, %s state=%s", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v28, -1, -1);
      MEMORY[0x2532FCCC0](v27, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    *int v17 = (uint64_t)v20;
    swift_storeEnumTagMultiPayload();
    id v53 = v20;
    v60(v17);
    swift_release_n();

    swift_release();
    return sub_24C7D7C08((uint64_t)v17, &qword_2697EF6A8);
  }
  sub_24C8301D0((uint64_t)v14, (uint64_t)v11, type metadata accessor for CosmoFileHttpResponse);
  uint64_t v38 = *(void *)(v19 + OBJC_IVAR____TtC5Cosmo14TransferClient_filesReceivedCount);
  BOOL v39 = __OFADD__(v38, 1);
  uint64_t v40 = v38 + 1;
  if (v39)
  {
    __break(1u);
    goto LABEL_18;
  }
  *(void *)(v19 + OBJC_IVAR____TtC5Cosmo14TransferClient_filesReceivedCount) = v40;
  uint64_t v41 = qword_2697EE9E0;
  swift_retain_n();
  if (v41 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v42 = sub_24C849590();
  __swift_project_value_buffer(v42, (uint64_t)qword_2697F7088);
  sub_24C830314((uint64_t)v11, (uint64_t)v9, type metadata accessor for CosmoFileHttpResponse);
  swift_retain_n();
  uint64_t v43 = sub_24C849570();
  os_log_type_t v44 = sub_24C84A110();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    uint64_t v62 = v57;
    *(_DWORD *)uint64_t v45 = 136315650;
    sub_24C8492C0();
    sub_24C830654(&qword_2697EF6C0, MEMORY[0x263F06EA8]);
    uint64_t v46 = sub_24C84A430();
    uint64_t v61 = sub_24C7DE68C(v46, v47, &v62);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    sub_24C830238((uint64_t)v9, type metadata accessor for CosmoFileHttpResponse);
    *(_WORD *)(v45 + 12) = 2080;
    unint64_t v48 = sub_24C82C5FC();
    uint64_t v61 = sub_24C7DE68C(v48, v49, &v62);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 22) = 2080;
    LOBYTE(v61) = *(unsigned char *)(v19 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
    unint64_t v50 = TransferClient.State.description.getter();
    uint64_t v61 = sub_24C7DE68C(v50, v51, &v62);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v43, v44, "[Request] Received file-response at file=%s, %s state=%s", (uint8_t *)v45, 0x20u);
    uint64_t v52 = v57;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v52, -1, -1);
    MEMORY[0x2532FCCC0](v45, -1, -1);
  }
  else
  {
    sub_24C830238((uint64_t)v9, type metadata accessor for CosmoFileHttpResponse);

    swift_release_n();
  }
  uint64_t v55 = sub_24C8492C0();
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v17, v11, v55);
  swift_storeEnumTagMultiPayload();
  v60(v17);
  swift_release_n();
  sub_24C7D7C08((uint64_t)v17, &qword_2697EF6A8);
  return sub_24C830238((uint64_t)v11, type metadata accessor for CosmoFileHttpResponse);
}

unint64_t sub_24C82C5FC()
{
  return 0xD000000000000016;
}

uint64_t TransferClient.markAsRejected(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C82C730(a1, a2, a3, (uint64_t)&unk_26FEF2F88, (uint64_t)sub_24C82D3F8, (uint64_t)&block_descriptor_20);
}

uint64_t sub_24C82C730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a6;
  uint64_t v26 = a2;
  uint64_t v27 = a5;
  uint64_t v25 = a4;
  uint64_t v7 = v6;
  uint64_t v10 = sub_24C849BD0();
  uint64_t v31 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_24C849BF0();
  uint64_t v13 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TransferClient.FileDescriptor(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(v7 + 16);
  sub_24C830314(a1, (uint64_t)v19, type metadata accessor for TransferClient.FileDescriptor);
  unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v21 = (void *)swift_allocObject();
  uint64_t v22 = v26;
  void v21[2] = v7;
  v21[3] = v22;
  v21[4] = a3;
  sub_24C8301D0((uint64_t)v19, (uint64_t)v21 + v20, type metadata accessor for TransferClient.FileDescriptor);
  aBlock[4] = v27;
  void aBlock[5] = v21;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = v29;
  id v23 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24C849BE0();
  uint64_t v32 = MEMORY[0x263F8EE78];
  sub_24C830654((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v15, v12, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v30);
  return swift_release();
}

void sub_24C82CAB0(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for RejectFileRequest(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for TransferClient.FileDescriptor(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v15 = &v55[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v55[-v16];
  uint64_t v18 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  unsigned int v19 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v19 > 0xF) {
    return;
  }
  uint64_t v61 = v10;
  uint64_t v62 = a2;
  if ((v19 & 0xFE) != 0xE
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        sub_24C8495E0(),
        swift_release(),
        swift_release(),
        uint64_t v20 = *(void *)(v63 + 16),
        swift_bridgeObjectRelease(),
        !v20))
  {
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_24C849590();
    __swift_project_value_buffer(v25, (uint64_t)qword_2697F7088);
    swift_retain_n();
    uint64_t v26 = sub_24C849570();
    os_log_type_t v27 = sub_24C84A0F0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v63 = v29;
      LOBYTE(v65) = *(unsigned char *)(a1 + v18);
      unint64_t v30 = TransferClient.State.description.getter();
      uint64_t v65 = sub_24C7DE68C(v30, v31, &v63);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v26, v27, "[Reject] Ignoring, no file-list received, state=%s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v29, -1, -1);
      MEMORY[0x2532FCCC0](v28, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_24C7D6EEC();
    uint64_t v32 = swift_allocError();
    unint64_t v33 = (void *)v32;
    *unint64_t v34 = xmmword_24C84AFD0;
LABEL_17:
    v62(v32, 1);

    return;
  }
  uint64_t v60 = a3;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24C8495E0();
  swift_release();
  swift_release();
  uint64_t v21 = *(void *)(v63 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    uint64_t v63 = 0;
    unint64_t v64 = 0xE000000000000000;
    sub_24C84A230();
    sub_24C849F80();
    sub_24C849440();
    sub_24C830654(&qword_2697EEC60, MEMORY[0x263F07508]);
    sub_24C84A430();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    uint64_t v35 = v63;
    unint64_t v36 = v64;
    sub_24C7D6EEC();
    uint64_t v32 = swift_allocError();
    unint64_t v33 = (void *)v32;
    *uint64_t v37 = v35;
    v37[1] = v36;
    goto LABEL_17;
  }
  uint64_t v22 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v58 = ~v22;
  uint64_t v59 = v22;
  uint64_t v23 = v63 + ((v22 + 32) & ~v22);
  uint64_t v24 = *(void *)(v12 + 72);
  swift_bridgeObjectRetain();
  while ((sub_24C849400() & 1) == 0)
  {
    v23 += v24;
    if (!--v21)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease_n();
  if (qword_2697EE9E0 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_24C849590();
  __swift_project_value_buffer(v38, (uint64_t)qword_2697F7088);
  sub_24C830314(a4, (uint64_t)v17, type metadata accessor for TransferClient.FileDescriptor);
  swift_retain_n();
  BOOL v39 = sub_24C849570();
  os_log_type_t v40 = sub_24C84A110();
  int v41 = v40;
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    uint64_t v63 = v57;
    *(_DWORD *)uint64_t v42 = 136315394;
    int v56 = v41;
    uint64_t v43 = TransferClient.FileDescriptor.description.getter();
    uint64_t v65 = sub_24C7DE68C(v43, v44, &v63);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    sub_24C830238((uint64_t)v17, type metadata accessor for TransferClient.FileDescriptor);
    *(_WORD *)(v42 + 12) = 2080;
    LOBYTE(v65) = *(unsigned char *)(a1 + v18);
    unint64_t v45 = TransferClient.State.description.getter();
    uint64_t v65 = sub_24C7DE68C(v45, v46, &v63);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v39, (os_log_type_t)v56, "[Reject] Rejecting file=%s, state=%s", (uint8_t *)v42, 0x16u);
    uint64_t v47 = v57;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v47, -1, -1);
    MEMORY[0x2532FCCC0](v42, -1, -1);
  }
  else
  {
    sub_24C830238((uint64_t)v17, type metadata accessor for TransferClient.FileDescriptor);

    swift_release_n();
  }
  uint64_t v49 = (uint64_t)v61;
  unint64_t v48 = v62;
  if (*(void *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient))
  {
    uint64_t v50 = sub_24C849440();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v49, a4, v50);
    unint64_t v51 = v48;
    uint64_t v52 = swift_allocObject();
    swift_weakInit();
    sub_24C830314(a4, (uint64_t)v15, type metadata accessor for TransferClient.FileDescriptor);
    uint64_t v53 = (v59 + 40) & v58;
    os_log_t v54 = (void *)swift_allocObject();
    v54[2] = v52;
    v54[3] = v51;
    v54[4] = v60;
    sub_24C8301D0((uint64_t)v15, (uint64_t)v54 + v53, type metadata accessor for TransferClient.FileDescriptor);
    swift_retain();
    swift_retain();
    sub_24C81B9BC(v49, 0, (uint64_t)sub_24C83029C, (uint64_t)v54);
    swift_release();
    swift_release();
    sub_24C830238(v49, type metadata accessor for RejectFileRequest);
  }
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v1 = *(void *)(type metadata accessor for TransferClient.FileDescriptor(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  swift_release();
  uint64_t v6 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24C82D3F8()
{
  return sub_24C82D410((uint64_t (*)(uint64_t, uint64_t, uint64_t, char *))sub_24C82CAB0);
}

uint64_t sub_24C82D410(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v2 = *(void *)(type metadata accessor for TransferClient.FileDescriptor(0) - 8);
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = (char *)v1 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3, v4, v5, v6);
}

void sub_24C82D48C(uint64_t a1, uint64_t a2, void (*a3)(void, void), uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for TransferClient.FileDescriptor(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = *(void **)a1;
  char v15 = *(unsigned char *)(a1 + 8);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = Strong;
    if (v15)
    {
      id v18 = v14;
      if (qword_2697EE9E0 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_24C849590();
      __swift_project_value_buffer(v19, (uint64_t)qword_2697F7088);
      sub_24C830314(a5, (uint64_t)v11, type metadata accessor for TransferClient.FileDescriptor);
      swift_retain();
      sub_24C7D7B8C(v14, 1);
      swift_retain();
      sub_24C7D7B8C(v14, 1);
      uint64_t v20 = sub_24C849570();
      os_log_type_t v21 = sub_24C84A0F0();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        unint64_t v45 = a3;
        uint64_t v24 = v23;
        uint64_t v47 = v23;
        *(_DWORD *)uint64_t v22 = 136315650;
        uint64_t v25 = TransferClient.FileDescriptor.description.getter();
        uint64_t v46 = sub_24C7DE68C(v25, v26, &v47);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C830238((uint64_t)v11, type metadata accessor for TransferClient.FileDescriptor);
        *(_WORD *)(v22 + 12) = 2080;
        uint64_t v46 = (uint64_t)v14;
        id v27 = v14;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
        uint64_t v28 = sub_24C849ED0();
        uint64_t v46 = sub_24C7DE68C(v28, v29, &v47);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C7D7B98(v14, 1);
        sub_24C7D7B98(v14, 1);
        *(_WORD *)(v22 + 22) = 2080;
        LOBYTE(v46) = *(unsigned char *)(v17 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
        unint64_t v30 = TransferClient.State.description.getter();
        uint64_t v46 = sub_24C7DE68C(v30, v31, &v47);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v20, v21, "[Reject] Failed to reject file=%s, error=%s state=%s", (uint8_t *)v22, 0x20u);
        swift_arrayDestroy();
        uint64_t v32 = v24;
        a3 = v45;
        MEMORY[0x2532FCCC0](v32, -1, -1);
        MEMORY[0x2532FCCC0](v22, -1, -1);
      }
      else
      {
        sub_24C830238((uint64_t)v11, type metadata accessor for TransferClient.FileDescriptor);
        sub_24C7D7B98(v14, 1);
        sub_24C7D7B98(v14, 1);

        swift_release_n();
      }
      id v44 = v14;
      a3(v14, 1);
      swift_release();
      sub_24C7D7B98(v14, 1);
      sub_24C7D7B98(v14, 1);
    }
    else
    {
      if (qword_2697EE9E0 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_24C849590();
      __swift_project_value_buffer(v35, (uint64_t)qword_2697F7088);
      sub_24C830314(a5, (uint64_t)v13, type metadata accessor for TransferClient.FileDescriptor);
      swift_retain_n();
      unint64_t v36 = sub_24C849570();
      os_log_type_t v37 = sub_24C84A110();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v47 = v39;
        *(_DWORD *)uint64_t v38 = 136315394;
        uint64_t v40 = TransferClient.FileDescriptor.description.getter();
        uint64_t v46 = sub_24C7DE68C(v40, v41, &v47);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C830238((uint64_t)v13, type metadata accessor for TransferClient.FileDescriptor);
        *(_WORD *)(v38 + 12) = 2080;
        LOBYTE(v46) = *(unsigned char *)(v17 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
        unint64_t v42 = TransferClient.State.description.getter();
        uint64_t v46 = sub_24C7DE68C(v42, v43, &v47);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v36, v37, "[Reject] Host rejected file=%s, state=(%s)", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v39, -1, -1);
        MEMORY[0x2532FCCC0](v38, -1, -1);
      }
      else
      {
        sub_24C830238((uint64_t)v13, type metadata accessor for TransferClient.FileDescriptor);

        swift_release_n();
      }
      a3(0, 0);
      swift_release();
    }
  }
  else
  {
    sub_24C7D6EEC();
    unint64_t v33 = (void *)swift_allocError();
    *unint64_t v34 = 0xD000000000000017;
    v34[1] = 0x800000024C850900;
    a3(v33, 1);
  }
}

Swift::Void __swiftcall TransferClient.disconnect()()
{
  uint64_t v1 = sub_24C849BD0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24C849BF0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = *(void *)(v0 + 16);
  aBlock[4] = sub_24C82DFB8;
  uint64_t v12 = v0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_23_0;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  sub_24C849BE0();
  v10[1] = MEMORY[0x263F8EE78];
  sub_24C830654((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v8, v4, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
}

void sub_24C82DDA0(uint64_t a1)
{
  uint64_t v1 = OBJC_IVAR____TtC5Cosmo14TransferClient_state;
  unsigned int v2 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_state);
  if (v2 <= 0xF)
  {
    if (v2 - 3 > 8)
    {
      LOBYTE(v11) = 3;
      sub_24C822B18((unsigned __int8 *)&v11, 0xD00000000000001ALL, 0x800000024C8508A0);
    }
    else
    {
      if (qword_2697EE9E0 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_24C849590();
      __swift_project_value_buffer(v4, (uint64_t)qword_2697F7088);
      swift_retain_n();
      uint64_t v5 = sub_24C849570();
      os_log_type_t v6 = sub_24C84A110();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        uint64_t v8 = swift_slowAlloc();
        *(_DWORD *)uint64_t v7 = 136315138;
        uint64_t v11 = v8;
        unint64_t v9 = TransferClient.State.description.getter();
        sub_24C7DE68C(v9, v10, &v11);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v5, v6, "[Disconnect] Queueing disconnect until file-transfer-channel established, state=%s", v7, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v8, -1, -1);
        MEMORY[0x2532FCCC0](v7, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      *(unsigned char *)(a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_stateAtDisconnect) = *(unsigned char *)(a1 + v1);
    }
  }
}

void sub_24C82DFB8()
{
  sub_24C82DDA0(v0);
}

uint64_t sub_24C82DFC0()
{
  return sub_24C830654(&qword_2697EF030, MEMORY[0x263F07508]);
}

unint64_t sub_24C82E00C()
{
  unint64_t result = qword_2697EF630;
  if (!qword_2697EF630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF630);
  }
  return result;
}

unint64_t sub_24C82E064()
{
  unint64_t result = qword_2697EF638;
  if (!qword_2697EF638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF638);
  }
  return result;
}

uint64_t sub_24C82E0C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2532FCD70](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_24C82E11C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of TransferClientDelegate.attestationPassed(transferClient:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of TransferClientDelegate.attestationFailed(transferClient:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of TransferClientDelegate.closed(reason:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for TransferClient.Configuration()
{
  return &type metadata for TransferClient.Configuration;
}

uint64_t *initializeBufferWithCopyOfBuffer for TransferClient.FileDescriptor(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24C849440();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *unint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TransferClient.FileDescriptor(uint64_t a1)
{
  uint64_t v2 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TransferClient.FileDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TransferClient.FileDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for TransferClient.FileDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for TransferClient.FileDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for TransferClient.FileDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24C82E58C);
}

uint64_t sub_24C82E58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24C849440();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TransferClient.FileDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24C82E664);
}

uint64_t sub_24C82E664(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24C849440();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24C82E724()
{
  uint64_t result = sub_24C849440();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TransferClient.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TransferClient.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *uint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C82E924);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransferClient.State()
{
  return &type metadata for TransferClient.State;
}

unsigned char *storeEnumTagSinglePayload for TransferClient.AttestationResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C82EA28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransferClient.AttestationResult()
{
  return &type metadata for TransferClient.AttestationResult;
}

uint64_t sub_24C82EA60()
{
  return type metadata accessor for TransferClient(0);
}

void sub_24C82EA68()
{
  sub_24C82EC6C();
  if (v0 <= 0x3F)
  {
    sub_24C82ECC8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for TransferClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TransferClient);
}

uint64_t dispatch thunk of TransferClient.fileTransfers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of TransferClient.$fileTransfers.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of TransferClient.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of TransferClient.__allocating_init(delegate:config:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 792))();
}

void sub_24C82EC6C()
{
  if (!qword_2697EF670)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2697EF588);
    unint64_t v0 = sub_24C849600();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2697EF670);
    }
  }
}

void sub_24C82ECC8()
{
  if (!qword_2697EEB40)
  {
    sub_24C849440();
    unint64_t v0 = sub_24C84A180();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2697EEB40);
    }
  }
}

uint64_t sub_24C82ED20(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_2697EE9E0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24C849590();
    __swift_project_value_buffer(v4, (uint64_t)qword_2697F7088);
    swift_retain_n();
    uint64_t v5 = sub_24C849570();
    os_log_type_t v6 = sub_24C84A110();
    if (os_log_type_enabled(v5, v6))
    {
      BOOL v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v11 = v8;
      *(_DWORD *)BOOL v7 = 136315138;
      unint64_t v9 = TransferClient.State.description.getter();
      sub_24C7DE68C(v9, v10, &v11);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v5, v6, "[Close] Failsafe triggered, state=%s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v8, -1, -1);
      MEMORY[0x2532FCCC0](v7, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v11) = a2;
    sub_24C82FC7C((char *)&v11);
    return swift_release();
  }
  return result;
}

void sub_24C82EF20(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_24C849C60();
    if (v6)
    {
      id v7 = v5;
      if (qword_2697EE9E0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_24C849590();
      __swift_project_value_buffer(v8, (uint64_t)qword_2697F7088);
      swift_retain();
      sub_24C7D7B8C(v5, 1);
      swift_retain();
      sub_24C7D7B8C(v5, 1);
      unint64_t v9 = sub_24C849570();
      os_log_type_t v10 = sub_24C84A0F0();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        uint64_t v25 = v12;
        *(_DWORD *)uint64_t v11 = 136315394;
        id v13 = v5;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
        uint64_t v14 = sub_24C849ED0();
        sub_24C7DE68C(v14, v15, &v25);
        sub_24C84A1A0();
        swift_bridgeObjectRelease();
        sub_24C7D7B98(v5, 1);
        sub_24C7D7B98(v5, 1);
        *(_WORD *)(v11 + 12) = 2080;
        unint64_t v16 = TransferClient.State.description.getter();
        sub_24C7DE68C(v16, v17, &v25);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v9, v10, "[Close] Failed to receive ack from TransferHost, error=%s, state=%s", (uint8_t *)v11, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v12, -1, -1);
        MEMORY[0x2532FCCC0](v11, -1, -1);
      }
      else
      {
        sub_24C7D7B98(v5, 1);
        sub_24C7D7B98(v5, 1);

        swift_release_n();
      }
      LOBYTE(v25) = a4;
      sub_24C82FC7C((char *)&v25);
      swift_release();
      sub_24C7D7B98(v5, 1);
    }
    else
    {
      if (qword_2697EE9E0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_24C849590();
      __swift_project_value_buffer(v18, (uint64_t)qword_2697F7088);
      swift_retain_n();
      uint64_t v19 = sub_24C849570();
      os_log_type_t v20 = sub_24C84A110();
      if (os_log_type_enabled(v19, v20))
      {
        os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        uint64_t v25 = v22;
        *(_DWORD *)os_log_type_t v21 = 136315138;
        unint64_t v23 = TransferClient.State.description.getter();
        sub_24C7DE68C(v23, v24, &v25);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v19, v20, "[Close] TransferHost acked request, state=%s", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v22, -1, -1);
        MEMORY[0x2532FCCC0](v21, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      LOBYTE(v25) = a4;
      sub_24C82FC7C((char *)&v25);
      swift_release();
    }
  }
}

uint64_t sub_24C82F37C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24C82F3BC(a1, a2, a3, *v3);
  *int v3 = (char *)result;
  return result;
}

uint64_t sub_24C82F39C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24C82F528(a1, a2, a3, (void *)*v3);
  *int v3 = result;
  return result;
}

uint64_t sub_24C82F3BC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF3D8);
    os_log_type_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    os_log_type_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  id v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24C84A300();
  __break(1u);
  return result;
}

uint64_t sub_24C82F528(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    id v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF720);
  uint64_t v10 = *(void *)(type metadata accessor for TransferClient.FileDescriptor(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  id v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for TransferClient.FileDescriptor(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  os_log_type_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_24C84A300();
  __break(1u);
  return result;
}

void *sub_24C82F768(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v17 = a5;
  uint64_t v18 = a6();
  type metadata accessor for PendingRequest(0);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = 0;
  v10[3] = 0;
  sub_24C849430();
  *(void *)((char *)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection) = 0;
  uint64_t v11 = (void *)((char *)v10
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  void *v11 = 0;
  v11[1] = 0;
  unint64_t v12 = (char *)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith;
  v12[32] = 0;
  *(_OWORD *)unint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  sub_24C7D76C8(&v16, (uint64_t)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  *((unsigned char *)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) = a1;
  v10[4] = a2;
  id v13 = (void *)((char *)v10
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  uint64_t v14 = *(void *)((char *)v10
                  + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  void *v13 = a3;
  v13[1] = a4;
  sub_24C7D6F70(v14);
  return v10;
}

void *sub_24C82F858(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v17 = &type metadata for LeaseRequest;
  unint64_t v18 = sub_24C830E78();
  LOBYTE(v16) = a1;
  type metadata accessor for PendingRequest(0);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = 0;
  v10[3] = 0;
  sub_24C849430();
  *(void *)((char *)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection) = 0;
  uint64_t v11 = (void *)((char *)v10
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  void *v11 = 0;
  v11[1] = 0;
  unint64_t v12 = (char *)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith;
  v12[32] = 0;
  *(_OWORD *)unint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  sub_24C7D76C8(&v16, (uint64_t)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  *((unsigned char *)v10 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) = a2;
  v10[4] = a3;
  id v13 = (void *)((char *)v10
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  uint64_t v14 = *(void *)((char *)v10
                  + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  void *v13 = a4;
  v13[1] = a5;
  sub_24C7D6F70(v14);
  return v10;
}

void *sub_24C82F954(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v18 = type metadata accessor for FileRequest(0);
  uint64_t v19 = sub_24C830654(&qword_2697EF6B8, (void (*)(uint64_t))type metadata accessor for FileRequest);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
  sub_24C8301D0(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for FileRequest);
  type metadata accessor for PendingRequest(0);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = 0;
  void v11[3] = 0;
  sub_24C849430();
  *(void *)((char *)v11 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection) = 0;
  unint64_t v12 = (void *)((char *)v11
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  void *v12 = 0;
  v12[1] = 0;
  id v13 = (char *)v11 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith;
  v13[32] = 0;
  *(_OWORD *)id v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  sub_24C7D76C8(&v17, (uint64_t)v11 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  *((unsigned char *)v11 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) = a2;
  v11[4] = a3;
  uint64_t v14 = (void *)((char *)v11
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  uint64_t v15 = *(void *)((char *)v11
                  + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  void *v14 = a4;
  v14[1] = a5;
  sub_24C7D6F70(v15);
  return v11;
}

void *sub_24C82FAA4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v18 = type metadata accessor for RejectFileRequest(0);
  uint64_t v19 = sub_24C830654(&qword_2697EF6A0, (void (*)(uint64_t))type metadata accessor for RejectFileRequest);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
  sub_24C8301D0(a1, (uint64_t)boxed_opaque_existential_1, type metadata accessor for RejectFileRequest);
  type metadata accessor for PendingRequest(0);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = 0;
  void v11[3] = 0;
  sub_24C849430();
  *(void *)((char *)v11 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_connection) = 0;
  unint64_t v12 = (void *)((char *)v11
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  void *v12 = 0;
  v12[1] = 0;
  id v13 = (char *)v11 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_stopCalledWith;
  v13[32] = 0;
  *(_OWORD *)id v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  sub_24C7D76C8(&v17, (uint64_t)v11 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_requestMessage);
  *((unsigned char *)v11 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_forceFlush) = a2;
  v11[4] = a3;
  uint64_t v14 = (void *)((char *)v11
                 + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  uint64_t v15 = *(void *)((char *)v11
                  + OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_responseCompletion);
  void *v14 = a4;
  v14[1] = a5;
  sub_24C7D6F70(v15);
  return v11;
}

uint64_t sub_24C82FBF4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_24C82FC7C(char *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_24C849C80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  char v9 = *a1;
  unint64_t v10 = *(void **)(v3 + 16);
  *(void *)unint64_t v8 = v10;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F0E0], v5);
  id v11 = v10;
  LOBYTE(v10) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_state) > 0x10u) {
    return result;
  }
  v27[0] = 17;
  sub_24C81FC20(v27);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_stateAtDisconnect) = 18;
  uint64_t v2 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
  unint64_t v8 = *(char **)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_onAttestationChannelConnected);
  if (v8)
  {
    uint64_t v13 = qword_2697EE9E0;
    swift_retain();
    if (v13 == -1)
    {
LABEL_5:
      uint64_t v14 = sub_24C849590();
      __swift_project_value_buffer(v14, (uint64_t)qword_2697F7088);
      uint64_t v15 = sub_24C849570();
      os_log_type_t v16 = sub_24C84A110();
      if (os_log_type_enabled(v15, v16))
      {
        long long v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v17 = 0;
        _os_log_impl(&dword_24C7BE000, v15, v16, "[Close] Found incomplete onConnect() lambda, completing with error", v17, 2u);
        MEMORY[0x2532FCCC0](v17, -1, -1);
      }

      sub_24C7D6EEC();
      uint64_t v18 = (void *)swift_allocError();
      _OWORD *v19 = xmmword_24C84CD00;
      ((void (*)(void *, uint64_t))v8)(v18, 1);

      sub_24C7D6F70((uint64_t)v8);
      uint64_t v20 = *v2;
      goto LABEL_9;
    }
LABEL_17:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v20 = 0;
LABEL_9:
  *uint64_t v2 = 0;
  v2[1] = 0;
  sub_24C7D6F70(v20);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_attestationResult) = 2;
  sub_24C828F9C();
  uint64_t v21 = OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferBrowser;
  if (*(void *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferBrowser))
  {
    swift_retain();
    sub_24C80D408();
    swift_release();
  }
  *(void *)(v3 + v21) = 0;
  swift_release();
  uint64_t v22 = OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient;
  if (*(void *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_fileTransferClient))
  {
    swift_retain();
    sub_24C80F948();
    swift_release();
  }
  *(void *)(v3 + v22) = 0;
  swift_release();
  *(void *)(v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_spake2Verifier) = 0;
  swift_release();
  uint64_t v23 = v3 + OBJC_IVAR____TtC5Cosmo14TransferClient_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2532FCD70](v23);
  if (result)
  {
    uint64_t v24 = *(void *)(v23 + 8);
    uint64_t ObjectType = swift_getObjectType();
    HIBYTE(v26) = v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 24))((char *)&v26 + 7, ObjectType, v24);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24C83000C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24C830044()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24C830084()
{
  return sub_24C82ED20(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_24C830094()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_24C8300DC(uint64_t a1)
{
  sub_24C82EF20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_24C8300EC()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EED8], 41);
}

void sub_24C830108()
{
  sub_24C81BD64(*(void *)(v0 + 16), *(void (**)(id *))(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_24C830118()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EED8], 40);
}

uint64_t sub_24C830134(uint64_t a1)
{
  return sub_24C81E4EC(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(void *)(v1 + 32), (void (*)(uint64_t *__return_ptr, char *))sub_24C7D997C, (uint64_t (*)(uint64_t, void))sub_24C7D7B98);
}

unint64_t sub_24C83017C()
{
  unint64_t result = qword_2697EF690;
  if (!qword_2697EF690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF690);
  }
  return result;
}

uint64_t sub_24C8301D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24C830238(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_24C83029C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TransferClient.FileDescriptor(0) - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = (void (*)(void, void))v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  sub_24C82D48C(a1, v4, v5, v6, v7);
}

uint64_t sub_24C830314(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24C83037C()
{
  return objectdestroy_134Tm(type metadata accessor for RejectFileRequest);
}

uint64_t sub_24C830394()
{
  return sub_24C830584(type metadata accessor for RejectFileRequest, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t))sub_24C81CF8C);
}

uint64_t sub_24C8303C0()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EED8], 40);
}

uint64_t sub_24C8303DC(uint64_t a1)
{
  return sub_24C81E4EC(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(void *)(v1 + 32), (void (*)(uint64_t *__return_ptr, char *))sub_24C7D9CB0, (uint64_t (*)(uint64_t, void))sub_24C830EF0);
}

uint64_t sub_24C830424()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EED8], 40);
}

uint64_t sub_24C830440(uint64_t a1)
{
  return sub_24C82BDC4(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24C83044C()
{
  return objectdestroy_134Tm(type metadata accessor for FileRequest);
}

uint64_t objectdestroy_134Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(a1(0) - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  swift_release();
  uint64_t v7 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v1 + v4, v7);
  return MEMORY[0x270FA0238](v1, v6, v5);
}

uint64_t sub_24C830558()
{
  return sub_24C830584(type metadata accessor for FileRequest, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t))sub_24C81CA2C);
}

uint64_t sub_24C830584(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *((void *)v2 + 2);
  uint64_t v6 = *((void *)v2 + 3);
  uint64_t v7 = *((void *)v2 + 4);
  uint64_t v8 = v2[v4 + *(void *)(v3 + 64)];
  return a2(v5, v6, v7, &v2[v4], v8);
}

uint64_t sub_24C83062C()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EED8], 40);
}

uint64_t sub_24C830648(uint64_t a1)
{
  return sub_24C81DEE0(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24C830654(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24C83069C(uint64_t *a1)
{
  return sub_24C8240E4(a1, v1, (void (*)(void *))sub_24C823354);
}

uint64_t sub_24C8306CC()
{
  swift_release();
  swift_release();
  sub_24C7D5FEC(*(void *)(v0 + 48), *(void *)(v0 + 56));
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24C830714()
{
  return sub_24C818C50(*(void *)(v0 + 16), *(uint64_t (**)(long long *))(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40) | (unsigned __int16)(*(unsigned __int8 *)(v0 + 41) << 8), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

unint64_t sub_24C830738()
{
  unint64_t result = qword_2697EF6C8;
  if (!qword_2697EF6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF6C8);
  }
  return result;
}

uint64_t sub_24C83078C()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EED8], 40);
}

uint64_t sub_24C8307A8(uint64_t a1)
{
  return sub_24C830958(a1, (void (*)(void))sub_24C8307D4);
}

uint64_t sub_24C8307C8(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if (a4) {
    return sub_24C7D76B0(a1, a2, a3);
  }
  else {
    return sub_24C7D5FEC(a1, a2);
  }
}

unint64_t sub_24C8307D4()
{
  unint64_t result = qword_2697EF6D0;
  if (!qword_2697EF6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF6D0);
  }
  return result;
}

uint64_t sub_24C830828(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if (a4) {
    return sub_24C7D77BC(a1, a2, a3);
  }
  else {
    return sub_24C7D60D0(a1, a2);
  }
}

uint64_t sub_24C830834(uint64_t *a1)
{
  return sub_24C8240E4(a1, v1, (void (*)(void *))sub_24C824170);
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_release();
  sub_24C7D5FEC(*(void *)(v0 + 40), *(void *)(v0 + 48));
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24C8308B0()
{
  return sub_24C830A58((uint64_t (*)(void, void, void, void, void))sub_24C819370);
}

unint64_t sub_24C8308C8()
{
  unint64_t result = qword_2697EF6E8;
  if (!qword_2697EF6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF6E8);
  }
  return result;
}

uint64_t sub_24C83091C()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EED8], 40);
}

uint64_t sub_24C830938(uint64_t a1)
{
  return sub_24C830958(a1, (void (*)(void))sub_24C83099C);
}

uint64_t sub_24C830958(uint64_t a1, void (*a2)(void))
{
  return sub_24C81A150(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 17) << 8), *(void *)(v2 + 16), *(void (**)(long long *))(v2 + 24), *(void *)(v2 + 32), a2);
}

unint64_t sub_24C83099C()
{
  unint64_t result = qword_2697EF6F0;
  if (!qword_2697EF6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF6F0);
  }
  return result;
}

uint64_t sub_24C8309F0(uint64_t *a1)
{
  return sub_24C825A00(a1);
}

uint64_t sub_24C8309F8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24C830A40()
{
  return sub_24C830A58((uint64_t (*)(void, void, void, void, void))sub_24C819A6C);
}

uint64_t sub_24C830A58(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

unint64_t sub_24C830A70()
{
  unint64_t result = qword_2697EF6F8;
  if (!qword_2697EF6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF6F8);
  }
  return result;
}

uint64_t sub_24C830AC4()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EED8], 40);
}

uint64_t sub_24C830AE0(uint64_t a1)
{
  return sub_24C81A8D8(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (unsigned __int16)(*(unsigned __int8 *)(a1 + 17) << 8), *(void *)(v1 + 16), *(void (**)(long long *))(v1 + 24));
}

unint64_t sub_24C830B08()
{
  unint64_t result = qword_2697EF700;
  if (!qword_2697EF700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF700);
  }
  return result;
}

uint64_t sub_24C830B5C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return sub_24C7D77BC(a1, a2, a3);
  }
  else
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_24C830BAC(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return sub_24C7D76B0(a1, a2, a3);
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24C830BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEAF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_24C830C64(char *a1)
{
}

uint64_t sub_24C830C6C(char *a1)
{
  return sub_24C828638(a1);
}

uint64_t sub_24C830C74(uint64_t *a1)
{
  return sub_24C8291D0(a1);
}

uint64_t sub_24C830C7C(uint64_t *a1)
{
  return sub_24C8299AC(a1);
}

uint64_t sub_24C830C84()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EED8], 41);
}

void sub_24C830CA0()
{
  sub_24C81C1AC(*(void *)(v0 + 16), *(void (**)(void **))(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_24C830CB0()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EED8], 40);
}

void sub_24C830CCC(uint64_t a1)
{
  sub_24C81D49C(a1, *(void *)(v1 + 16), *(void (**)(void **))(v1 + 24));
}

void sub_24C830CD8(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_24C830CE8()
{
  unint64_t result = qword_2697EF710;
  if (!qword_2697EF710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF710);
  }
  return result;
}

id sub_24C830D3C(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_24C830D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24C830DB4()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EED8], 42);
}

void sub_24C830DD0()
{
  sub_24C81C5F4(*(void *)(v0 + 16), *(void (**)(void **))(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(unsigned char *)(v0 + 41));
}

uint64_t sub_24C830DE4()
{
  return objectdestroy_4Tm(MEMORY[0x263F8EED8], 40);
}

uint64_t objectdestroy_4Tm(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 32));
  return MEMORY[0x270FA0238](v2, a2, 7);
}

void sub_24C830E5C(uint64_t a1)
{
  sub_24C81D9B8(a1, *(void *)(v1 + 16), *(void (**)(void **))(v1 + 24));
}

void sub_24C830E68(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_24C830E78()
{
  unint64_t result = qword_2697EF728;
  if (!qword_2697EF728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF728);
  }
  return result;
}

id sub_24C830ECC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_24C830EDC(char *a1)
{
}

uint64_t sub_24C830EE4(char a1)
{
  return sub_24C8215D4(a1 & 1);
}

void *CosmoSerialChannelHost.__allocating_init(name:descriptor:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_allocObject();
  uint64_t v8 = sub_24C833DE8(a1, a2, a3, a4);

  return v8;
}

uint64_t sub_24C830FD4()
{
  uint64_t v0 = sub_24C849590();
  __swift_allocate_value_buffer(v0, qword_2697EF730);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2697EF730);
  if (qword_2697EE9C8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2697F7040);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

Cosmo::CosmoSerialChannelHost::State_optional __swiftcall CosmoSerialChannelHost.State.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_24C84A340();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t CosmoSerialChannelHost.State.rawValue.getter()
{
  if (*v0) {
    return 0x6164696C61766E69;
  }
  else {
    return 0x7964616572;
  }
}

Cosmo::CosmoSerialChannelHost::State_optional sub_24C831140(Swift::String *a1)
{
  return CosmoSerialChannelHost.State.init(rawValue:)(*a1);
}

uint64_t sub_24C83114C@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_24C7F2264;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_24C7D6E3C(v4);
}

uint64_t sub_24C8311E0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24C7F223C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  sub_24C7D6E3C(v3);
  return sub_24C7D6F70(v8);
}

void *CosmoSerialChannelHost.init(name:descriptor:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = sub_24C833DE8(a1, a2, a3, a4);

  return v5;
}

uint64_t sub_24C8312CC()
{
  return sub_24C8315F4((uint64_t)sub_24C8346C0, (uint64_t)&block_descriptor_38);
}

uint64_t sub_24C8312EC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_listener);
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v3 = v1[2];
  v1[2] = sub_24C8346C8;
  v1[3] = v2;
  sub_24C7D6F70(v3);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v5 = v1[4];
  v1[4] = sub_24C8346F8;
  v1[5] = v4;
  sub_24C7D6F70(v5);
  if (qword_2697EEA08 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_24C849590();
  __swift_project_value_buffer(v6, (uint64_t)qword_2697EF730);
  swift_retain_n();
  uint64_t v7 = sub_24C849570();
  os_log_type_t v8 = sub_24C84A110();
  if (os_log_type_enabled(v7, v8))
  {
    char v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)char v9 = 136315138;
    swift_retain();
    uint64_t v11 = CosmoSerialChannelHost.description.getter();
    unint64_t v13 = v12;
    swift_release();
    sub_24C7DE68C(v11, v13, &v15);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v7, v8, "[Start] Listener starting, %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v10, -1, -1);
    MEMORY[0x2532FCCC0](v9, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return sub_24C801820();
}

uint64_t sub_24C831574(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C831D84(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C8315D4()
{
  return sub_24C8315F4((uint64_t)sub_24C8346A4, (uint64_t)&block_descriptor_35);
}

uint64_t sub_24C8315F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_24C849BD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  os_log_type_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24C849BF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + 48);
  aBlock[4] = a1;
  uint64_t v17 = v2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = a2;
  unint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_24C849BE0();
  v15[1] = MEMORY[0x263F8EE78];
  sub_24C7F5C3C((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_24C831874(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v8 = *a1;
  uint64_t v9 = *(void **)(v2 + 48);
  *uint64_t v7 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v10 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_19:
    swift_once();
LABEL_4:
    uint64_t v11 = sub_24C849590();
    __swift_project_value_buffer(v11, (uint64_t)qword_2697EF730);
    swift_retain_n();
    unint64_t v12 = sub_24C849570();
    os_log_type_t v13 = sub_24C84A110();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v32[0] = v15;
      *(_DWORD *)uint64_t v14 = 136315394;
      LOBYTE(v31) = v8;
      uint64_t v16 = sub_24C849ED0();
      uint64_t v31 = sub_24C7DE68C(v16, v17, v32);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      swift_retain();
      uint64_t v18 = CosmoSerialChannelHost.description.getter();
      unint64_t v20 = v19;
      swift_release();
      uint64_t v31 = sub_24C7DE68C(v18, v20, v32);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v12, v13, "Listener invalidated, state=%s %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v15, -1, -1);
      MEMORY[0x2532FCCC0](v14, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t result = swift_beginAccess();
    unint64_t v30 = *(void (**)(uint64_t *))(v2 + 16);
    if (v30)
    {
      LOBYTE(v31) = 1;
LABEL_16:
      swift_retain();
      v30(&v31);
      return sub_24C7D6F70((uint64_t)v30);
    }
    return result;
  }
  if (v8)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_ready) = 0;
    *(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_terminated) = 1;
    if (qword_2697EEA08 == -1) {
      goto LABEL_4;
    }
    goto LABEL_19;
  }
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_ready) = 1;
  if (qword_2697EEA08 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_24C849590();
  __swift_project_value_buffer(v21, (uint64_t)qword_2697EF730);
  swift_retain_n();
  uint64_t v22 = sub_24C849570();
  os_log_type_t v23 = sub_24C84A110();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v32[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_retain();
    uint64_t v26 = CosmoSerialChannelHost.description.getter();
    unint64_t v28 = v27;
    swift_release();
    uint64_t v31 = sub_24C7DE68C(v26, v28, v32);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v22, v23, "Listener ready, %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v25, -1, -1);
    MEMORY[0x2532FCCC0](v24, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t result = swift_beginAccess();
  unint64_t v30 = *(void (**)(uint64_t *))(v2 + 16);
  if (v30)
  {
    LOBYTE(v31) = 0;
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_24C831D84(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (void *)((char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v8 = *(void **)(v2 + 48);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v9 = v8;
  LOBYTE(v8) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v10 = OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection;
  if (*(void *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection))
  {
    if (qword_2697EEA08 == -1)
    {
LABEL_4:
      uint64_t v11 = sub_24C849590();
      __swift_project_value_buffer(v11, (uint64_t)qword_2697EF730);
      swift_retain_n();
      unint64_t v12 = sub_24C849570();
      os_log_type_t v13 = sub_24C84A110();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        v37[0] = v15;
        *(_DWORD *)uint64_t v14 = 136315138;
        swift_retain();
        uint64_t v16 = CosmoSerialChannelHost.description.getter();
        unint64_t v18 = v17;
        swift_release();
        uint64_t v36 = sub_24C7DE68C(v16, v18, v37);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v12, v13, "Ignoring incoming connection, %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v15, -1, -1);
        MEMORY[0x2532FCCC0](v14, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      return sub_24C7FEC34();
    }
LABEL_15:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_acceptedConnectionCount);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_17;
  }
  *(void *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_acceptedConnectionCount) = v21;
  if (qword_2697EEA08 != -1) {
LABEL_17:
  }
    swift_once();
  uint64_t v22 = sub_24C849590();
  __swift_project_value_buffer(v22, (uint64_t)qword_2697EF730);
  swift_retain_n();
  os_log_type_t v23 = sub_24C849570();
  os_log_type_t v24 = sub_24C84A110();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v37[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    v35[1] = v25 + 4;
    swift_retain();
    uint64_t v27 = CosmoSerialChannelHost.description.getter();
    unint64_t v29 = v28;
    swift_release();
    uint64_t v36 = sub_24C7DE68C(v27, v29, v37);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v23, v24, "Received incoming channel, %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v26, -1, -1);
    MEMORY[0x2532FCCC0](v25, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  *(void *)(v2 + v10) = a1;
  swift_retain();
  swift_release();
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v32 = a1[2];
  a1[2] = sub_24C83466C;
  a1[3] = v31;
  sub_24C7D6F70(v32);
  uint64_t v33 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v34 = a1[4];
  a1[4] = sub_24C83469C;
  a1[5] = v33;
  sub_24C7D6F70(v34);
  return sub_24C7FBF60();
}

uint64_t sub_24C8322B4(char *a1, uint64_t a2, void (*a3)(char *))
{
  char v4 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v6 = v4;
    a3(&v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C832328(unsigned int a1, uint64_t a2, unint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C832808(a1, a2, a3);
    return swift_release();
  }
  return result;
}

void sub_24C8323A4(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v8 = *a1;
  id v9 = *(void **)(v2 + 48);
  *uint64_t v7 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v10 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v8)
  {
    if (qword_2697EEA08 == -1)
    {
LABEL_4:
      uint64_t v11 = sub_24C849590();
      __swift_project_value_buffer(v11, (uint64_t)qword_2697EF730);
      swift_retain_n();
      unint64_t v12 = sub_24C849570();
      os_log_type_t v13 = sub_24C84A110();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v29 = v15;
        *(_DWORD *)uint64_t v14 = 136315138;
        swift_retain();
        uint64_t v16 = CosmoSerialChannelHost.description.getter();
        unint64_t v18 = v17;
        swift_release();
        uint64_t v28 = sub_24C7DE68C(v16, v18, &v29);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v12, v13, "Channel closed, %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v15, -1, -1);
        MEMORY[0x2532FCCC0](v14, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      uint64_t v27 = OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection;
      if (*(void *)(v2 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection))
      {
        swift_retain();
        sub_24C7FEC34();
        swift_release();
      }
      *(void *)(v2 + v27) = 0;
      swift_release();
      return;
    }
LABEL_16:
    swift_once();
    goto LABEL_4;
  }
  if (qword_2697EEA08 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_24C849590();
  __swift_project_value_buffer(v19, (uint64_t)qword_2697EF730);
  swift_retain_n();
  BOOL v20 = sub_24C849570();
  os_log_type_t v21 = sub_24C84A110();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v29 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    swift_retain();
    uint64_t v24 = CosmoSerialChannelHost.description.getter();
    unint64_t v26 = v25;
    swift_release();
    uint64_t v28 = sub_24C7DE68C(v24, v26, &v29);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v20, v21, "Channel ready, %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v23, -1, -1);
    MEMORY[0x2532FCCC0](v22, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_24C832808(unsigned int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24C849C80();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (void *)((char *)&v34[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = *(void **)(v4 + 48);
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v13 = v12;
  LOBYTE(v12) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_12;
  }
  uint64_t v14 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_handlers);
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (*(void *)(v15 + 16))
  {
    unint64_t v16 = sub_24C8057F8(a1);
    if (v17)
    {
      unint64_t v18 = *(void (**)(uint64_t *, void *))(*(void *)(v15 + 56) + 16 * v16);
      if (a3 >> 60 == 15) {
        uint64_t v19 = 0;
      }
      else {
        uint64_t v19 = a2;
      }
      if (a3 >> 60 == 15) {
        unint64_t v20 = 0xC000000000000000;
      }
      else {
        unint64_t v20 = a3;
      }
      uint64_t v21 = swift_allocObject();
      swift_weakInit();
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v21;
      *(_DWORD *)(v22 + 24) = a1;
      uint64_t v35 = v19;
      unint64_t v36 = v20;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = sub_24C83454C;
      *(void *)(v23 + 24) = v22;
      v34[0] = sub_24C834594;
      v34[1] = v23;
      swift_retain();
      sub_24C7D7304(a2, a3);
      swift_retain();
      swift_retain();
      v18(&v35, v34);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return sub_24C7D5FEC(v19, v20);
    }
  }
  if (qword_2697EEA08 != -1) {
    goto LABEL_17;
  }
LABEL_12:
  uint64_t v25 = sub_24C849590();
  __swift_project_value_buffer(v25, (uint64_t)qword_2697EF730);
  swift_retain_n();
  unint64_t v26 = sub_24C849570();
  os_log_type_t v27 = sub_24C84A0F0();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v35 = v29;
    *(_DWORD *)uint64_t v28 = 67109378;
    LODWORD(v34[0]) = a1;
    sub_24C84A1A0();
    *(_WORD *)(v28 + 8) = 2080;
    swift_retain();
    uint64_t v30 = CosmoSerialChannelHost.description.getter();
    unint64_t v32 = v31;
    swift_release();
    v34[0] = sub_24C7DE68C(v30, v32, &v35);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v26, v27, "No handler registered for incoming messageType=%u, %s", (uint8_t *)v28, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v29, -1, -1);
    MEMORY[0x2532FCCC0](v28, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v35 = 0;
  unint64_t v36 = 0xE000000000000000;
  sub_24C84A230();
  swift_bridgeObjectRelease();
  uint64_t v35 = 0xD00000000000001BLL;
  unint64_t v36 = 0x800000024C850DE0;
  LODWORD(v34[0]) = a1;
  sub_24C84A430();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  sub_24C8335D4(v35, v36);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24C832C94(void *a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, int a6)
{
  int v24 = a6;
  uint64_t v10 = sub_24C849BD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24C849BF0();
  uint64_t v25 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    uint64_t v22 = *(void *)(result + 48);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a1;
    *(void *)(v19 + 24) = a2;
    *(void *)(v19 + 32) = a3;
    uint64_t v23 = v14;
    char v20 = a4 & 1;
    *(unsigned char *)(v19 + 40) = a4 & 1;
    *(void *)(v19 + 48) = v18;
    *(_DWORD *)(v19 + 56) = v24;
    aBlock[4] = sub_24C834628;
    void aBlock[5] = v19;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_24C7C25B4;
    aBlock[3] = &block_descriptor_7;
    uint64_t v21 = _Block_copy(aBlock);
    sub_24C834658(a1, a2, a3, v20);
    swift_retain();
    sub_24C849BE0();
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_24C7F5C3C((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
    sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
    sub_24C84A1F0();
    MEMORY[0x2532FBFB0](0, v16, v13, v21);
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v23);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_24C832FB8(id a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  if (a4)
  {
    id v8 = a1;
    if (qword_2697EEA08 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24C849590();
    __swift_project_value_buffer(v9, (uint64_t)qword_2697EF730);
    sub_24C834658(a1, a2, a3, 1);
    swift_retain();
    sub_24C834658(a1, a2, a3, 1);
    swift_retain();
    uint64_t v10 = sub_24C849570();
    os_log_type_t v11 = sub_24C84A110();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v33 = v31;
      *(_DWORD *)uint64_t v12 = 136315394;
      os_log_type_t type = v11;
      id v13 = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
      uint64_t v14 = sub_24C849ED0();
      sub_24C7DE68C(v14, v15, &v33);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C834614(a1, a2, a3, 1);
      sub_24C834614(a1, a2, a3, 1);
      *(_WORD *)(v12 + 12) = 2080;
      swift_retain();
      uint64_t v16 = CosmoSerialChannelHost.description.getter();
      unint64_t v18 = v17;
      swift_release();
      sub_24C7DE68C(v16, v18, &v33);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v10, type, "Handler completed with error=%s, %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v31, -1, -1);
      MEMORY[0x2532FCCC0](v12, -1, -1);
    }
    else
    {
      sub_24C834614(a1, a2, a3, 1);
      sub_24C834614(a1, a2, a3, 1);

      swift_release_n();
    }
    uint64_t v33 = 0;
    unint64_t v34 = 0xE000000000000000;
    sub_24C84A230();
    swift_bridgeObjectRelease();
    uint64_t v33 = 0xD000000000000018;
    unint64_t v34 = 0x800000024C850E00;
    sub_24C84A430();
    sub_24C849F80();
    swift_bridgeObjectRelease();
    sub_24C849F80();
    sub_24C8335D4(v33, v34);
    swift_bridgeObjectRelease();
    id v19 = a1;
    uint64_t v20 = a2;
    unint64_t v21 = a3;
    char v22 = 1;
    goto LABEL_12;
  }
  if (*(void *)(a5 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection))
  {
    sub_24C834658(a1, a2, a3, 0);
    swift_retain();
    sub_24C7FF2BC(a2, a3, (int)a1);
    swift_release();
    sub_24C834614(a1, a2, a3, 0);
    return;
  }
  sub_24C7D60D0(a2, a3);
  sub_24C7D60D0(a2, a3);
  if (qword_2697EEA08 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_24C849590();
  __swift_project_value_buffer(v23, (uint64_t)qword_2697EF730);
  swift_retain_n();
  oslog = sub_24C849570();
  os_log_type_t v24 = sub_24C84A0F0();
  if (os_log_type_enabled(oslog, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v33 = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    swift_retain();
    uint64_t v27 = CosmoSerialChannelHost.description.getter();
    unint64_t v29 = v28;
    swift_release();
    sub_24C7DE68C(v27, v29, &v33);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, oslog, v24, "No channel to write response on, %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v26, -1, -1);
    MEMORY[0x2532FCCC0](v25, -1, -1);

    sub_24C834614(a1, a2, a3, 0);
    id v19 = a1;
    uint64_t v20 = a2;
    unint64_t v21 = a3;
    char v22 = 0;
LABEL_12:
    sub_24C834614(v19, v20, v21, v22);
    return;
  }
  sub_24C834614(a1, a2, a3, 0);
  swift_release_n();
  sub_24C834614(a1, a2, a3, 0);
}

void sub_24C8335D4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24C849C80();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v3 + 48);
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F0E0], v6);
  id v11 = v10;
  LOBYTE(v10) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    if (qword_2697EEA08 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v12 = sub_24C849590();
  __swift_project_value_buffer(v12, (uint64_t)qword_2697EF730);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v13 = sub_24C849570();
  os_log_type_t v14 = sub_24C84A110();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v22 = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_24C7DE68C(a1, a2, &v22);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    swift_retain();
    uint64_t v17 = CosmoSerialChannelHost.description.getter();
    unint64_t v19 = v18;
    swift_release();
    uint64_t v21 = sub_24C7DE68C(v17, v19, &v22);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v13, v14, "[Close] Closing, reason='%s' %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v16, -1, -1);
    MEMORY[0x2532FCCC0](v15, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection;
  if (*(void *)(v3 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection))
  {
    swift_retain();
    sub_24C7FEC34();
    swift_release();
  }
  *(void *)(v3 + v20) = 0;
  swift_release();
  sub_24C803ED0();
}

uint64_t CosmoSerialChannelHost.deinit()
{
  sub_24C7D6F70(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();

  sub_24C7F5BE0(v0 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_descriptor);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CosmoSerialChannelHost.__deallocating_deinit()
{
  sub_24C7D6F70(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();

  sub_24C7F5BE0(v0 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_descriptor);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t CosmoSerialChannelHost.description.getter()
{
  return 0x3D656D616ELL;
}

uint64_t sub_24C833DC4()
{
  return CosmoSerialChannelHost.description.getter();
}

void *sub_24C833DE8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24C84A150();
  uint64_t v25 = *(void *)(v13 - 8);
  uint64_t v26 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24C84A120();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_24C849BF0();
  MEMORY[0x270FA5388](v17 - 8);
  void v4[2] = 0;
  v4[3] = 0;
  *(void *)((char *)v4 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_incomingConnection) = 0;
  *(void *)((char *)v4 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_handlers) = MEMORY[0x263F8EE80];
  *((unsigned char *)v4 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_ready) = 0;
  *((unsigned char *)v4 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_terminated) = 0;
  *(void *)((char *)v4 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_acceptedConnectionCount) = 0;
  void v4[4] = a1;
  v4[5] = a2;
  if (a4)
  {
    unint64_t v18 = a4;
  }
  else
  {
    void v24[2] = sub_24C7D5EF8();
    sub_24C849BE0();
    uint64_t v27 = MEMORY[0x263F8EE78];
    v24[1] = sub_24C7F5C3C((unint64_t *)&unk_2697EEAE0, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF330);
    sub_24C7D6170(&qword_2697EEAF0, (uint64_t *)&unk_2697EF330);
    a4 = 0;
    sub_24C84A1F0();
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v15, *MEMORY[0x263F8F130], v26);
    unint64_t v18 = (void *)sub_24C84A170();
  }
  v5[6] = v18;
  sub_24C7F5C84(a3, (uint64_t)v5 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_descriptor);
  sub_24C7F5C84(a3, (uint64_t)v12);
  type metadata accessor for CosmoListener();
  uint64_t v19 = a3;
  uint64_t v20 = (_OWORD *)swift_allocObject();
  v20[1] = 0u;
  void v20[2] = 0u;
  v20[3] = 0u;
  *(void *)((char *)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_listener) = 0;
  *((unsigned char *)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_restarting) = 0;
  sub_24C7F5C84((uint64_t)v12, (uint64_t)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor);
  id v21 = a4;
  id v22 = v18;
  sub_24C7F5BE0((uint64_t)v12);
  *(void *)((char *)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue) = v22;
  sub_24C7F5BE0(v19);
  *(void *)((char *)v5 + OBJC_IVAR____TtC5Cosmo22CosmoSerialChannelHost_listener) = v20;
  return v5;
}

unint64_t sub_24C8341A0()
{
  unint64_t result = qword_2697EF770;
  if (!qword_2697EF770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF770);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CosmoSerialChannelHost.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C8342C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoSerialChannelHost.State()
{
  return &type metadata for CosmoSerialChannelHost.State;
}

uint64_t sub_24C834300()
{
  return type metadata accessor for CosmoSerialChannelHost();
}

uint64_t type metadata accessor for CosmoSerialChannelHost()
{
  uint64_t result = qword_2697EF778;
  if (!qword_2697EF778) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24C834354()
{
  uint64_t result = type metadata accessor for NetworkDescriptor();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for CosmoSerialChannelHost(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CosmoSerialChannelHost);
}

uint64_t dispatch thunk of CosmoSerialChannelHost.listenerStateChangedCallback.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of CosmoSerialChannelHost.listenerStateChangedCallback.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of CosmoSerialChannelHost.listenerStateChangedCallback.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of CosmoSerialChannelHost.__allocating_init(name:descriptor:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t sub_24C8344DC()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24C834514()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 28, 7);
}

uint64_t sub_24C83454C(void *a1, uint64_t a2, unint64_t a3, char a4)
{
  return sub_24C832C94(a1, a2, a3, a4 & 1, *(void *)(v4 + 16), *(_DWORD *)(v4 + 24));
}

uint64_t sub_24C83455C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C834594(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 16))(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

uint64_t sub_24C8345CC()
{
  sub_24C834614(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  return MEMORY[0x270FA0238](v0, 60, 7);
}

void sub_24C834614(void *a1, uint64_t a2, unint64_t a3, char a4)
{
  if (a4) {

  }
  else {
    sub_24C7D5FEC(a2, a3);
  }
}

void sub_24C834628()
{
  sub_24C832FB8(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

id sub_24C834658(void *a1, uint64_t a2, unint64_t a3, char a4)
{
  if (a4) {
    return a1;
  }
  else {
    return (id)sub_24C7D60D0(a2, a3);
  }
}

uint64_t sub_24C83466C(char *a1)
{
  return sub_24C8322B4(a1, v1, (void (*)(char *))sub_24C8323A4);
}

uint64_t sub_24C83469C(unsigned int a1, uint64_t a2, unint64_t a3)
{
  return sub_24C832328(a1, a2, a3);
}

void sub_24C8346A4()
{
}

uint64_t sub_24C8346C0()
{
  return sub_24C8312EC(v0);
}

uint64_t sub_24C8346C8(char *a1)
{
  return sub_24C8322B4(a1, v1, (void (*)(char *))sub_24C831874);
}

uint64_t sub_24C8346F8(void *a1)
{
  return sub_24C831574(a1);
}

uint64_t sub_24C834718()
{
  uint64_t result = sub_24C84A430();
  qword_2697EF788 = result;
  unk_2697EF790 = v1;
  return result;
}

uint64_t static Constants.Test.PinCode.getter@<X0>(void *a1@<X8>)
{
  if (qword_2697EEA10 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_2697EF790;
  *a1 = qword_2697EF788;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24C8347D8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEAF8);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24C849440();
  __swift_allocate_value_buffer(v3, qword_2697EF798);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_2697EF798);
  sub_24C8493E0();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t static Constants.Test.serviceUUID.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2697EEA18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24C849440();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2697EF798);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_24C8349B0(uint64_t a1)
{
  return sub_24C834AC8(a1, 0xD000000000000084, 0x800000024C850F00, &qword_2697EF7B0, &qword_2697EF7B8);
}

uint64_t static Constants.Test.KeyPair.Foo.serializedKeyPair.getter()
{
  return sub_24C834B3C(&qword_2697EEA20, &qword_2697EF7B0, &qword_2697EF7B8);
}

uint64_t sub_24C834A00(uint64_t a1)
{
  return sub_24C834AC8(a1, 0xD00000000000007CLL, 0x800000024C850E80, &qword_2697EF7C0, &qword_2697EF7C8);
}

uint64_t static Constants.Test.KeyPair.Foo.serializedPublicKey.getter()
{
  return sub_24C834B3C(&qword_2697EEA28, &qword_2697EF7C0, &qword_2697EF7C8);
}

uint64_t sub_24C834A50(uint64_t a1)
{
  return sub_24C834AC8(a1, 0xD000000000000084, 0x800000024C850F00, &qword_2697EF7D0, &qword_2697EF7D8);
}

uint64_t static Constants.Test.KeyPair.Bar.serializedKeyPair.getter()
{
  return sub_24C834B3C(&qword_2697EEA30, &qword_2697EF7D0, &qword_2697EF7D8);
}

uint64_t sub_24C834AA0(uint64_t a1)
{
  return sub_24C834AC8(a1, 0xD00000000000007CLL, 0x800000024C850E80, &qword_2697EF7E0, &qword_2697EF7E8);
}

uint64_t sub_24C834AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t result = sub_24C8492F0();
  if (v8 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    *a4 = result;
    *a5 = v8;
  }
  return result;
}

uint64_t static Constants.Test.KeyPair.Bar.serializedPublicKey.getter()
{
  return sub_24C834B3C(&qword_2697EEA38, &qword_2697EF7E0, &qword_2697EF7E8);
}

uint64_t sub_24C834B3C(void *a1, uint64_t *a2, unint64_t *a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = *a2;
  sub_24C7D60D0(v5, *a3);
  return v5;
}

uint64_t sub_24C834B94()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF340);
  __swift_allocate_value_buffer(v0, qword_2697EF7F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2697EF7F0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF170);
  return sub_24C849550();
}

uint64_t static Constants.Parsing.outNameRegex.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24C834CF0(&qword_2697EEA40, (uint64_t *)&unk_2697EF340, (uint64_t)qword_2697EF7F0, a1);
}

uint64_t sub_24C834C40()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF360);
  __swift_allocate_value_buffer(v0, qword_2697EF808);
  __swift_project_value_buffer(v0, (uint64_t)qword_2697EF808);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF190);
  return sub_24C849550();
}

uint64_t static Constants.Parsing.inNameRegex.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24C834CF0(&qword_2697EEA48, (uint64_t *)&unk_2697EF360, (uint64_t)qword_2697EF808, a1);
}

uint64_t sub_24C834CF0@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v9(a4, v8, v7);
}

uint64_t static Constants.Bonjour.domain.getter()
{
  return 0x6C61636F6CLL;
}

uint64_t static Constants.Bonjour.tcpServiceType.getter()
{
  return 0x63746F6D736F635FLL;
}

uint64_t static Constants.Bonjour.quicServiceType.getter()
{
  return 0x75716F6D736F635FLL;
}

ValueMetadata *type metadata accessor for Constants()
{
  return &type metadata for Constants;
}

ValueMetadata *type metadata accessor for Constants.Test()
{
  return &type metadata for Constants.Test;
}

ValueMetadata *type metadata accessor for Constants.Test.KeyPair()
{
  return &type metadata for Constants.Test.KeyPair;
}

ValueMetadata *type metadata accessor for Constants.Test.KeyPair.Foo()
{
  return &type metadata for Constants.Test.KeyPair.Foo;
}

ValueMetadata *type metadata accessor for Constants.Test.KeyPair.Bar()
{
  return &type metadata for Constants.Test.KeyPair.Bar;
}

ValueMetadata *type metadata accessor for Constants.Parsing()
{
  return &type metadata for Constants.Parsing;
}

ValueMetadata *type metadata accessor for Constants.Bonjour()
{
  return &type metadata for Constants.Bonjour;
}

uint64_t sub_24C834E58()
{
  uint64_t result = sub_24C807F74(0xD00000000000001CLL, 0x800000024C851060);
  qword_2697F7140 = result;
  *(void *)algn_2697F7148 = v1;
  return result;
}

uint64_t sub_24C834E94()
{
  uint64_t result = sub_24C807F74(0x746E65696C63uLL, 0xE600000000000000);
  qword_2697F7150 = result;
  *(void *)algn_2697F7158 = v1;
  return result;
}

uint64_t sub_24C834EC8()
{
  uint64_t result = sub_24C807F74(0x726576726573uLL, 0xE600000000000000);
  qword_2697F7160 = result;
  *(void *)algn_2697F7168 = v1;
  return result;
}

uint64_t sub_24C834EFC()
{
  uint64_t result = sub_24C807F74(0x69746E6568747561uLL, 0xED0000726F746163);
  *(void *)&xmmword_2697F7170 = result;
  *((void *)&xmmword_2697F7170 + 1) = v1;
  return result;
}

uint64_t sub_24C834F40()
{
  uint64_t result = sub_24C807F74(0x79656BuLL, 0xE300000000000000);
  *(void *)&xmmword_2697F7180 = result;
  *((void *)&xmmword_2697F7180 + 1) = v1;
  return result;
}

uint64_t sub_24C834F70()
{
  uint64_t result = sub_24C807F74(0x65636E6F6EuLL, 0xE500000000000000);
  qword_2697F7190 = result;
  *(void *)algn_2697F7198 = v1;
  return result;
}

uint64_t sub_24C834FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  unint64_t v28 = a5;
  uint64_t v32 = a2;
  uint64_t v26 = a1;
  uint64_t v7 = sub_24C849D30();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  unint64_t v29 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v26 - v13;
  sub_24C849480();
  uint64_t v27 = v5;
  long long v31 = v34;
  sub_24C7D60D0(v34, *((unint64_t *)&v34 + 1));
  sub_24C849D20();
  if (qword_2697EEA70 != -1) {
    swift_once();
  }
  long long v34 = xmmword_2697F7180;
  sub_24C849DE0();
  sub_24C837E4C(&qword_2697EF280, MEMORY[0x263F047F8]);
  sub_24C7FAA18();
  uint64_t v35 = v12;
  sub_24C849DC0();
  if (qword_2697EEA78 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_2697F7190;
  unint64_t v16 = *(void *)algn_2697F7198;
  uint64_t v17 = a4;
  *(void *)&long long v34 = a4;
  unint64_t v18 = (unint64_t)v28;
  *((void *)&v34 + 1) = v28;
  sub_24C7D60D0(qword_2697F7190, *(unint64_t *)algn_2697F7198);
  sub_24C7D60D0(v17, v18);
  sub_24C837A18(v15, v16);
  sub_24C7D5FEC(v15, v16);
  long long v19 = v34;
  long long v33 = v34;
  uint64_t v20 = v29;
  sub_24C849DC0();
  sub_24C7D5FEC(v19, *((unint64_t *)&v19 + 1));
  uint64_t v21 = v27;
  sub_24C849D10();
  uint64_t v22 = v30;
  unint64_t v28 = v14;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v30 + 8);
  v23(v20, v7);
  long long v24 = v34;
  sub_24C7D60D0(v34, *((unint64_t *)&v34 + 1));
  sub_24C849D70();
  if (v21)
  {
    sub_24C7D5FEC(v24, *((unint64_t *)&v24 + 1));
    sub_24C7D5FEC(v31, *((unint64_t *)&v31 + 1));
    v23(v35, v7);
    return ((uint64_t (*)(char *, uint64_t))v23)(v28, v7);
  }
  else
  {
    v23(v28, v7);
    sub_24C7D5FEC(v31, *((unint64_t *)&v31 + 1));
    sub_24C7D5FEC(v24, *((unint64_t *)&v24 + 1));
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v26, v35, v7);
  }
}

uint64_t sub_24C8353A0(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v43 = a1;
  uint64_t v3 = sub_24C849DB0();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v42 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF870);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = sub_24C849D80();
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v45 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF878);
  MEMORY[0x270FA5388](v14 - 8);
  unint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24C849D30();
  MEMORY[0x270FA5388](v17);
  uint64_t v49 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v2;
  uint64_t v20 = v2 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey;
  uint64_t v22 = v21;
  swift_beginAccess();
  sub_24C7D7BA4(v20, (uint64_t)v16, &qword_2697EF878);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17) == 1)
  {
    uint64_t v23 = &qword_2697EF878;
    uint64_t v24 = (uint64_t)v16;
LABEL_5:
    sub_24C7D7C08(v24, v23);
    return 0;
  }
  uint64_t v26 = v42;
  uint64_t v25 = v43;
  uint64_t v38 = v8;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v49, v16, v17);
  uint64_t v27 = v17;
  uint64_t v28 = v19 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce;
  swift_beginAccess();
  sub_24C7D7BA4(v28, (uint64_t)v10, &qword_2697EF870);
  uint64_t v29 = v44;
  uint64_t v30 = v22;
  uint64_t v31 = v45;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v10, 1, v45) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v49, v27);
    uint64_t v23 = &qword_2697EF870;
    uint64_t v24 = (uint64_t)v10;
    goto LABEL_5;
  }
  uint64_t v37 = v27;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v13, v10, v31);
  uint64_t v47 = v25;
  uint64_t v48 = v41;
  uint64_t v33 = (uint64_t)v38;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v38, v13, v31);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v33, 0, 1, v31);
  sub_24C7FAA18();
  long long v34 = v26;
  uint64_t v35 = v46;
  sub_24C849D60();
  sub_24C7D7C08(v33, &qword_2697EF870);
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v31);
  }
  else
  {
    uint64_t v36 = v31;
    uint64_t v31 = sub_24C849D90();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v40);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v36);
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v49, v37);
  return v31;
}

unint64_t sub_24C8358A8(uint64_t a1, unint64_t a2)
{
  unint64_t v28 = a2;
  uint64_t v29 = a1;
  uint64_t v3 = sub_24C849DB0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  uint64_t v27 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF870);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF878);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24C849D30();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v2 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey;
  swift_beginAccess();
  sub_24C7D7BA4(v17, (uint64_t)v12, &qword_2697EF878);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    uint64_t v18 = &qword_2697EF878;
    uint64_t v19 = (uint64_t)v12;
LABEL_5:
    sub_24C7D7C08(v19, v18);
    return 0;
  }
  uint64_t v20 = v29;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  uint64_t v21 = v2 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce;
  swift_beginAccess();
  sub_24C7D7BA4(v21, (uint64_t)v9, &qword_2697EF870);
  uint64_t v22 = sub_24C849D80();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v9, 1, v22) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v18 = &qword_2697EF870;
    uint64_t v19 = (uint64_t)v9;
    goto LABEL_5;
  }
  sub_24C7D7C08((uint64_t)v9, &qword_2697EF870);
  unint64_t v23 = v28;
  sub_24C7D60D0(v20, v28);
  uint64_t v24 = v30;
  sub_24C835C80(v20, v23);
  if (!v24)
  {
    unint64_t v23 = sub_24C849D50();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v26);
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v23;
}

uint64_t sub_24C835C80(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x24C835DF0);
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if (v4 > 27)
      {
        sub_24C7D60D0(a1, a2);
        sub_24C80849C(a1, a2);
        sub_24C849DA0();
        return sub_24C7D5FEC(a1, a2);
      }
      else
      {
LABEL_7:
        uint64_t v8 = sub_24C849CB0();
        sub_24C837E4C(&qword_2697EF880, MEMORY[0x263F04548]);
        swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, *MEMORY[0x263F04538], v8);
        swift_willThrow();
        return sub_24C7D5FEC(a1, a2);
      }
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_24C835E00()
{
  sub_24C7D7C08(v0 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey, &qword_2697EF878);
  sub_24C7D7C08(v0 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce, &qword_2697EF870);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_24C835E84()
{
  return type metadata accessor for Spake2Peer(0);
}

uint64_t type metadata accessor for Spake2Peer(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EF820);
}

void sub_24C835EAC()
{
  sub_24C835FB0(319, &qword_2697EF830, MEMORY[0x263F04620]);
  if (v0 <= 0x3F)
  {
    sub_24C835FB0(319, &qword_2697EF838, MEMORY[0x263F046D8]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_24C835FB0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24C84A180();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_24C836004(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v32 = sub_24C8494A0();
  uint64_t v8 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24C849540();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v38 = 0x3D74706D65747461;
  unint64_t v39 = 0xE800000000000000;
  uint64_t v37 = a3;
  uint64_t v33 = v4;
  swift_retain();
  sub_24C84A430();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_24C807F74(v38, v39);
  unint64_t v16 = v15;
  uint64_t v34 = a1;
  unint64_t v35 = a2;
  sub_24C7D60D0(a1, a2);
  if (qword_2697EEA50 != -1) {
    swift_once();
  }
  sub_24C7D60D0(qword_2697F7140, *(unint64_t *)algn_2697F7148);
  uint64_t v36 = v14;
  sub_24C7D60D0(v14, v16);
  if (qword_2697EEA60 != -1) {
    swift_once();
  }
  unint64_t v17 = v16;
  sub_24C7D60D0(qword_2697F7160, *(unint64_t *)algn_2697F7168);
  if (qword_2697EEA58 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_2697F7150;
  unint64_t v19 = *(void *)algn_2697F7158;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F388C8], v32);
  sub_24C7D60D0(v18, v19);
  uint64_t v21 = v34;
  unint64_t v20 = v35;
  uint64_t v22 = v36;
  sub_24C849520();
  sub_24C7D5FEC(v21, v20);
  sub_24C7D5FEC(v22, v17);
  uint64_t v23 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v33 + OBJC_IVAR____TtC5Cosmo14Spake2Verifier_verifier, v13, v31);
  swift_release();
  uint64_t v24 = v23 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey;
  uint64_t v25 = sub_24C849D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  uint64_t v26 = v23 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce;
  uint64_t v27 = sub_24C849D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  return v23;
}

uint64_t sub_24C83661C(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF870);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v47 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)&v43 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF878);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v44 = (char *)&v43 - v10;
  uint64_t v48 = sub_24C849D80();
  uint64_t v51 = *(void *)(v48 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v48);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = sub_24C849D30();
  uint64_t v50 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v43 - v20;
  uint64_t v22 = sub_24C849490();
  uint64_t v49 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v25 = v54;
  sub_24C849500();
  uint64_t result = swift_endAccess();
  if (!v25)
  {
    uint64_t v43 = v21;
    uint64_t v52 = v16;
    uint64_t v53 = v2;
    os_log_t v54 = v15;
    if (qword_2697EEA60 != -1) {
      swift_once();
    }
    uint64_t v27 = v19;
    sub_24C834FA4((uint64_t)v19, (uint64_t)v13, (uint64_t)v24, qword_2697F7160, *(char **)algn_2697F7168);
    uint64_t v29 = v50;
    uint64_t v28 = v51;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v22);
    uint64_t v30 = v13;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    uint64_t v32 = v43;
    uint64_t v33 = v52;
    v31(v43, v27, v52);
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v34(v54, v30, v48);
    uint64_t v35 = (uint64_t)v44;
    v31(v44, v32, v33);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v35, 0, 1, v33);
    uint64_t v36 = v45;
    sub_24C7D7828(v35, v45, &qword_2697EF878);
    uint64_t v37 = v53;
    uint64_t v38 = v53 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey;
    swift_beginAccess();
    sub_24C7D75BC(v36, v38, &qword_2697EF878);
    swift_endAccess();
    uint64_t v39 = (uint64_t)v46;
    uint64_t v40 = v48;
    v34(v46, v54, v48);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v39, 0, 1, v40);
    uint64_t v41 = v47;
    sub_24C7D7828(v39, v47, &qword_2697EF870);
    uint64_t v42 = v37 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce;
    swift_beginAccess();
    sub_24C7D75BC(v41, v42, &qword_2697EF870);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_24C836B54()
{
  return sub_24C837744(&OBJC_IVAR____TtC5Cosmo14Spake2Verifier_verifier, MEMORY[0x263F388D8]);
}

uint64_t sub_24C836B74()
{
  return sub_24C8377D0(&OBJC_IVAR____TtC5Cosmo14Spake2Verifier_verifier, MEMORY[0x263F388D8]);
}

uint64_t sub_24C836B94()
{
  return type metadata accessor for Spake2Verifier(0);
}

uint64_t type metadata accessor for Spake2Verifier(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EF848);
}

uint64_t sub_24C836BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C8378F0(a1, a2, a3, MEMORY[0x263F388D8]);
}

uint64_t sub_24C836BD4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v32 = sub_24C8494A0();
  uint64_t v8 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24C8494F0();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v38 = 0x3D74706D65747461;
  unint64_t v39 = 0xE800000000000000;
  uint64_t v37 = a3;
  uint64_t v33 = v4;
  swift_retain();
  sub_24C84A430();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_24C807F74(v38, v39);
  unint64_t v16 = v15;
  uint64_t v34 = a1;
  unint64_t v35 = a2;
  sub_24C7D60D0(a1, a2);
  if (qword_2697EEA50 != -1) {
    swift_once();
  }
  sub_24C7D60D0(qword_2697F7140, *(unint64_t *)algn_2697F7148);
  uint64_t v36 = v14;
  sub_24C7D60D0(v14, v16);
  if (qword_2697EEA60 != -1) {
    swift_once();
  }
  unint64_t v17 = v16;
  sub_24C7D60D0(qword_2697F7160, *(unint64_t *)algn_2697F7168);
  if (qword_2697EEA58 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_2697F7150;
  unint64_t v19 = *(void *)algn_2697F7158;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F388C8], v32);
  sub_24C7D60D0(v18, v19);
  uint64_t v21 = v34;
  unint64_t v20 = v35;
  uint64_t v22 = v36;
  sub_24C8494D0();
  sub_24C7D5FEC(v21, v20);
  sub_24C7D5FEC(v22, v17);
  uint64_t v23 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v33 + OBJC_IVAR____TtC5Cosmo12Spake2Prover_prover, v13, v31);
  swift_release();
  uint64_t v24 = v23 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey;
  uint64_t v25 = sub_24C849D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  uint64_t v26 = v23 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce;
  uint64_t v27 = sub_24C849D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  return v23;
}

uint64_t sub_24C8371EC(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF870);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v47 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)&v43 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF878);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v44 = (char *)&v43 - v10;
  uint64_t v48 = sub_24C849D80();
  uint64_t v51 = *(void *)(v48 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v48);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = sub_24C849D30();
  uint64_t v50 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v43 - v20;
  uint64_t v22 = sub_24C849490();
  uint64_t v49 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v25 = v54;
  sub_24C8494B0();
  uint64_t result = swift_endAccess();
  if (!v25)
  {
    uint64_t v43 = v21;
    uint64_t v52 = v16;
    uint64_t v53 = v2;
    os_log_t v54 = v15;
    if (qword_2697EEA58 != -1) {
      swift_once();
    }
    uint64_t v27 = v19;
    sub_24C834FA4((uint64_t)v19, (uint64_t)v13, (uint64_t)v24, qword_2697F7150, *(char **)algn_2697F7158);
    uint64_t v29 = v50;
    uint64_t v28 = v51;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v22);
    uint64_t v30 = v13;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    uint64_t v32 = v43;
    uint64_t v33 = v52;
    v31(v43, v27, v52);
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v34(v54, v30, v48);
    uint64_t v35 = (uint64_t)v44;
    v31(v44, v32, v33);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v35, 0, 1, v33);
    uint64_t v36 = v45;
    sub_24C7D7828(v35, v45, &qword_2697EF878);
    uint64_t v37 = v53;
    uint64_t v38 = v53 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey;
    swift_beginAccess();
    sub_24C7D75BC(v36, v38, &qword_2697EF878);
    swift_endAccess();
    uint64_t v39 = (uint64_t)v46;
    uint64_t v40 = v48;
    v34(v46, v54, v48);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v39, 0, 1, v40);
    uint64_t v41 = v47;
    sub_24C7D7828(v39, v47, &qword_2697EF870);
    uint64_t v42 = v37 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce;
    swift_beginAccess();
    sub_24C7D75BC(v41, v42, &qword_2697EF870);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_24C837724()
{
  return sub_24C837744(&OBJC_IVAR____TtC5Cosmo12Spake2Prover_prover, MEMORY[0x263F388D0]);
}

uint64_t sub_24C837744(void *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = v2 + *a1;
  uint64_t v4 = a2(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  return v5(v3, v4);
}

uint64_t sub_24C8377B0()
{
  return sub_24C8377D0(&OBJC_IVAR____TtC5Cosmo12Spake2Prover_prover, MEMORY[0x263F388D0]);
}

uint64_t sub_24C8377D0(void *a1, uint64_t (*a2)(void))
{
  sub_24C7D7C08(v2 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedSymmetricKey, &qword_2697EF878);
  sub_24C7D7C08(v2 + OBJC_IVAR____TtC5Cosmo10Spake2Peer_derivedNonce, &qword_2697EF870);
  uint64_t v5 = v2 + *a1;
  uint64_t v6 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = *(unsigned int *)(*(void *)v2 + 48);
  uint64_t v8 = *(unsigned __int16 *)(*(void *)v2 + 52);
  return MEMORY[0x270FA0228](v2, v7, v8);
}

uint64_t sub_24C8378B0()
{
  return type metadata accessor for Spake2Prover(0);
}

uint64_t type metadata accessor for Spake2Prover(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EF860);
}

uint64_t sub_24C8378D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C8378F0(a1, a2, a3, MEMORY[0x263F388D0]);
}

uint64_t sub_24C8378F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24C837984(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24C8491E0();
  if (!result || (uint64_t result = sub_24C849210(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_24C849200();
      return sub_24C849320();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24C837A18(uint64_t a1, unint64_t a2)
{
  v10[5] = *MEMORY[0x263EF8340];
  v10[3] = MEMORY[0x263F06F78];
  v10[4] = MEMORY[0x263F06F68];
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v10, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_24C7D60D0(a1, a2);
      sub_24C7D60D0(v5, v6);
      sub_24C837984((int)v5, v5 >> 32);
      sub_24C7D5FEC(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_24C7D60D0(a1, a2);
      swift_retain();
      swift_retain();
      sub_24C837984(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_24C7D60D0(a1, a2);
      sub_24C849320();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_24C837C3C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_24C849D30();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v13[-v9];
  *(void *)&long long v14 = a1;
  *((void *)&v14 + 1) = a2;
  sub_24C7D60D0(a1, a2);
  sub_24C849D20();
  if (qword_2697EEA68 != -1) {
    swift_once();
  }
  long long v14 = xmmword_2697F7170;
  sub_24C849DE0();
  sub_24C837E4C(&qword_2697EF280, MEMORY[0x263F047F8]);
  sub_24C7FAA18();
  sub_24C849DC0();
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  sub_24C849D10();
  v11(v10, v4);
  return v14;
}

uint64_t sub_24C837E4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FileTransferMetadata.init(name:size:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t FileListRequest.Response.init(fileTransferMetadata:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = 200;
  *(void *)(a2 + 8) = result;
  return result;
}

uint64_t _s5Cosmo11FileRequestV4fileAC10Foundation4UUIDV_tcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24C849440();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t sub_24C837F28()
{
  return sub_24C84A510();
}

uint64_t sub_24C837F70()
{
  return sub_24C84A500();
}

uint64_t sub_24C837F9C()
{
  return sub_24C84A510();
}

uint64_t sub_24C837FE0@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24C83D558(*a1);
  *a2 = result;
  return result;
}

void sub_24C83800C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_24C838018(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EFAA8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83E538();
  sub_24C84A540();
  LOBYTE(v14) = 0;
  sub_24C84A3D0();
  if (!v4)
  {
    uint64_t v14 = a3;
    uint64_t v15 = v13;
    char v16 = 1;
    sub_24C83E58C();
    sub_24C84A3F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_24C8381A0()
{
  return 0x506572616873;
}

uint64_t sub_24C8381B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x506572616873 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24C84A440();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24C838244(uint64_t a1)
{
  unint64_t v2 = sub_24C83E5E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C838280(uint64_t a1)
{
  unint64_t v2 = sub_24C83E5E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_24C8382BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_24C83874C(a1, &qword_2697EFAC0, (void (*)(void))sub_24C83E5E0, a2);
}

uint64_t sub_24C8382F8(void *a1)
{
  return sub_24C83848C(a1, *v1, v1[1], &qword_2697EFB20, (void (*)(void))sub_24C83E5E0);
}

uint64_t sub_24C838340()
{
  if (*v0) {
    return 0x566572616873;
  }
  else {
    return 0x6C6F636F746F7270;
  }
}

uint64_t sub_24C838384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24C83D568(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24C8383AC(uint64_t a1)
{
  unint64_t v2 = sub_24C83E538();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C8383E8(uint64_t a1)
{
  unint64_t v2 = sub_24C83E538();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24C838424@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_24C83D678(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result;
    *(unsigned char *)(a2 + 1) = BYTE1(result) & 1;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_24C83845C(void *a1)
{
  return sub_24C838018(a1, *v1 | (v1[1] << 8), *((void *)v1 + 1), *((void *)v1 + 2));
}

uint64_t sub_24C83848C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v14 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_24C84A540();
  uint64_t v15 = a2;
  uint64_t v16 = v14;
  sub_24C83E58C();
  sub_24C84A3F0();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_24C8385E8()
{
  return 0x506D7269666E6F63;
}

uint64_t sub_24C838600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x506D7269666E6F63 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24C84A440();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24C838698(uint64_t a1)
{
  unint64_t v2 = sub_24C83E6DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C8386D4(uint64_t a1)
{
  unint64_t v2 = sub_24C83E6DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_24C838710@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_24C83874C(a1, &qword_2697EFAE8, (void (*)(void))sub_24C83E6DC, a2);
}

void *sub_24C83874C@<X0>(void *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, void *a4@<X8>)
{
  uint64_t result = sub_24C83D838(a1, a2, a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
  }
  return result;
}

uint64_t sub_24C838784(void *a1)
{
  return sub_24C83848C(a1, *v1, v1[1], &qword_2697EFB30, (void (*)(void))sub_24C83E6DC);
}

uint64_t sub_24C8387C4()
{
  return 0x566D7269666E6F63;
}

uint64_t sub_24C8387DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x566D7269666E6F63 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24C84A440();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24C838874(uint64_t a1)
{
  unint64_t v2 = sub_24C83E688();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C8388B0(uint64_t a1)
{
  unint64_t v2 = sub_24C83E688();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_24C8388EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_24C83874C(a1, &qword_2697EFB28, (void (*)(void))sub_24C83E688, a2);
}

uint64_t sub_24C838928(void *a1)
{
  return sub_24C83848C(a1, *v1, v1[1], &qword_2697EFAD8, (void (*)(void))sub_24C83E688);
}

uint64_t sub_24C838968(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EFB40);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83E784();
  sub_24C84A540();
  char v14 = 0;
  sub_24C84A3E0();
  if (!v5)
  {
    char v13 = 1;
    sub_24C84A3E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_24C838ADC()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_24C838B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24C83D9BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24C838B44(uint64_t a1)
{
  unint64_t v2 = sub_24C83E784();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C838B80(uint64_t a1)
{
  unint64_t v2 = sub_24C83E784();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24C838BBC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24C83DAA8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_24C838BEC(void *a1)
{
  return sub_24C838968(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_24C838C0C()
{
  return 0xD000000000000012;
}

uint64_t sub_24C838C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24C83DCB0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24C838C54(uint64_t a1)
{
  unint64_t v2 = sub_24C83E730();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C838C90(uint64_t a1)
{
  unint64_t v2 = sub_24C83E730();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24C838CCC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EFB38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83E730();
  sub_24C84A530();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = sub_24C84A370();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_24C838E44(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EFAF8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83E730();
  sub_24C84A540();
  sub_24C84A3E0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t static LeaseRequest.path.getter()
{
  return 0x657361656C2FLL;
}

uint64_t LeaseRequest.Response.status.getter()
{
  return *v0;
}

uint64_t LeaseRequest.Response.status.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*LeaseRequest.Response.status.modify())()
{
  return nullsub_1;
}

uint64_t sub_24C838FC0()
{
  if (*v0) {
    return 0x6E6F73616572;
  }
  else {
    return 0x737574617473;
  }
}

uint64_t sub_24C838FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24C83DD38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24C839014(uint64_t a1)
{
  unint64_t v2 = sub_24C839200();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C839050(uint64_t a1)
{
  unint64_t v2 = sub_24C839200();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LeaseRequest.Response.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF888);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v10[0] = *(void *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C839200();
  sub_24C84A540();
  char v12 = 0;
  sub_24C84A410();
  if (!v2)
  {
    char v11 = 1;
    sub_24C84A3C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24C839200()
{
  unint64_t result = qword_2697EF890;
  if (!qword_2697EF890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF890);
  }
  return result;
}

uint64_t LeaseRequest.Response.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF898);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C839200();
  sub_24C84A530();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v16 = 0;
  int v9 = sub_24C84A3A0();
  char v15 = 1;
  uint64_t v10 = sub_24C84A350();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_DWORD *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24C839410@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LeaseRequest.Response.init(from:)(a1, a2);
}

uint64_t sub_24C839428(void *a1)
{
  return LeaseRequest.Response.encode(to:)(a1);
}

uint64_t sub_24C839440()
{
  return 0x6E6F6973726576;
}

uint64_t sub_24C839458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24C84A440();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24C8394F0(uint64_t a1)
{
  unint64_t v2 = sub_24C83969C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C83952C(uint64_t a1)
{
  unint64_t v2 = sub_24C83969C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LeaseRequest.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF8A0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83969C();
  sub_24C84A540();
  sub_24C84A400();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_24C83969C()
{
  unint64_t result = qword_2697EF8A8;
  if (!qword_2697EF8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF8A8);
  }
  return result;
}

uint64_t LeaseRequest.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF8B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83969C();
  sub_24C84A530();
  if (!v2)
  {
    char v9 = sub_24C84A390();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24C839840()
{
  return 0x657361656C2FLL;
}

uint64_t sub_24C839854@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return LeaseRequest.init(from:)(a1, a2);
}

uint64_t sub_24C83986C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF8A0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83969C();
  sub_24C84A540();
  sub_24C84A400();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t FileTransferMetadata.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FileTransferMetadata.size.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_24C8399D8()
{
  if (*v0) {
    return 1702521203;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_24C8399FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24C83DE1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24C839A24(uint64_t a1)
{
  unint64_t v2 = sub_24C839C10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C839A60(uint64_t a1)
{
  unint64_t v2 = sub_24C839C10();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FileTransferMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF8B8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C839C10();
  sub_24C84A540();
  char v11 = 0;
  uint64_t v7 = v9[1];
  sub_24C84A3E0();
  if (!v7)
  {
    char v10 = 1;
    sub_24C84A420();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_24C839C10()
{
  unint64_t result = qword_2697EF8C0;
  if (!qword_2697EF8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF8C0);
  }
  return result;
}

uint64_t FileTransferMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF8C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C839C10();
  sub_24C84A530();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v16 = 0;
  uint64_t v9 = sub_24C84A370();
  uint64_t v11 = v10;
  char v15 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24C84A3B0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24C839E44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FileTransferMetadata.init(from:)(a1, a2);
}

uint64_t sub_24C839E5C(void *a1)
{
  return FileTransferMetadata.encode(to:)(a1);
}

uint64_t static FileListRequest.path.getter()
{
  return 0x73656C69662FLL;
}

uint64_t FileListRequest.Response.status.getter()
{
  return *v0;
}

uint64_t FileListRequest.Response.status.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FileListRequest.Response.status.modify())()
{
  return nullsub_1;
}

uint64_t FileListRequest.Response.fileTransferMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24C839EC0()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0x737574617473;
  }
}

uint64_t sub_24C839EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24C83DEF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24C839F24(uint64_t a1)
{
  unint64_t v2 = sub_24C83A130();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C839F60(uint64_t a1)
{
  unint64_t v2 = sub_24C83A130();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FileListRequest.Response.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF8D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(void *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83A130();
  sub_24C84A540();
  char v11 = 0;
  sub_24C84A410();
  if (!v2)
  {
    v9[1] = v9[0];
    char v10 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF8E0);
    sub_24C83A184();
    sub_24C84A3F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24C83A130()
{
  unint64_t result = qword_2697EF8D8;
  if (!qword_2697EF8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF8D8);
  }
  return result;
}

unint64_t sub_24C83A184()
{
  unint64_t result = qword_2697EF8E8;
  if (!qword_2697EF8E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2697EF8E0);
    sub_24C83A514(&qword_2697EF8F0, MEMORY[0x263F07508]);
    sub_24C83A230();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF8E8);
  }
  return result;
}

unint64_t sub_24C83A230()
{
  unint64_t result = qword_2697EF8F8;
  if (!qword_2697EF8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF8F8);
  }
  return result;
}

uint64_t FileListRequest.Response.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF900);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83A130();
  sub_24C84A530();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v14 = 0;
  int v9 = sub_24C84A3A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF8E0);
  char v13 = 1;
  sub_24C83A468();
  sub_24C84A380();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v12[1];
  *(_DWORD *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_24C83A468()
{
  unint64_t result = qword_2697EF908;
  if (!qword_2697EF908)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2697EF8E0);
    sub_24C83A514(&qword_2697EF910, MEMORY[0x263F07508]);
    sub_24C83A55C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF908);
  }
  return result;
}

uint64_t sub_24C83A514(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24C83A55C()
{
  unint64_t result = qword_2697EF918;
  if (!qword_2697EF918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF918);
  }
  return result;
}

uint64_t sub_24C83A5B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FileListRequest.Response.init(from:)(a1, a2);
}

uint64_t sub_24C83A5C8(void *a1)
{
  return FileListRequest.Response.encode(to:)(a1);
}

uint64_t sub_24C83A5E0()
{
  return 0;
}

uint64_t sub_24C83A5EC(uint64_t a1)
{
  unint64_t v2 = sub_24C83A6A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C83A628(uint64_t a1)
{
  unint64_t v2 = sub_24C83A6A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FileListRequest.encode(to:)(void *a1)
{
  return sub_24C83BCB0(a1, &qword_2697EF920, (void (*)(void))sub_24C83A6A0);
}

unint64_t sub_24C83A6A0()
{
  unint64_t result = qword_2697EF928;
  if (!qword_2697EF928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF928);
  }
  return result;
}

uint64_t FileListRequest.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_24C83A71C()
{
  return 0x73656C69662FLL;
}

uint64_t sub_24C83A730(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_24C83A758(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83C17C(a1, a2, a3, &qword_2697EF920, (void (*)(void))sub_24C83A6A0);
}

uint64_t static FileRequest.path.getter()
{
  return 0x656C69662FLL;
}

uint64_t static FileRequest.method.getter()
{
  return sub_24C849F90();
}

uint64_t sub_24C83A7B8()
{
  return 1701603686;
}

uint64_t sub_24C83A7CC(uint64_t a1)
{
  unint64_t v2 = sub_24C83A880();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C83A808(uint64_t a1)
{
  unint64_t v2 = sub_24C83A880();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FileRequest.encode(to:)(void *a1)
{
  return sub_24C83AF1C(a1, &qword_2697EF930, (void (*)(void))sub_24C83A880);
}

unint64_t sub_24C83A880()
{
  unint64_t result = qword_2697EF938;
  if (!qword_2697EF938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF938);
  }
  return result;
}

uint64_t FileRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_24C849440();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF940);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FileRequest(0);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83A880();
  sub_24C84A530();
  if (!v2)
  {
    sub_24C83A514(&qword_2697EF910, MEMORY[0x263F07508]);
    sub_24C84A380();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_24C83B3A4((uint64_t)v11, v15, type metadata accessor for FileRequest);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for FileRequest(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EF9A0);
}

uint64_t sub_24C83AB88()
{
  return 0x656C69662FLL;
}

uint64_t sub_24C83AB9C()
{
  return sub_24C849F90();
}

uint64_t sub_24C83ABAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FileRequest.init(from:)(a1, a2);
}

uint64_t sub_24C83ABC4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83B480(a1, a2, a3, &qword_2697EF930, (void (*)(void))sub_24C83A880);
}

uint64_t static RejectFileRequest.path.getter()
{
  return 0x467463656A65722FLL;
}

uint64_t RejectFileRequest.Response.status.getter()
{
  return *v0;
}

uint64_t (*RejectFileRequest.Response.status.modify())()
{
  return nullsub_1;
}

uint64_t sub_24C83AC48(uint64_t a1)
{
  unint64_t v2 = sub_24C83ACFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C83AC84(uint64_t a1)
{
  unint64_t v2 = sub_24C83ACFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RejectFileRequest.Response.encode(to:)(void *a1)
{
  return sub_24C83B708(a1, &qword_2697EF948, (void (*)(void))sub_24C83ACFC);
}

unint64_t sub_24C83ACFC()
{
  unint64_t result = qword_2697EF950;
  if (!qword_2697EF950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF950);
  }
  return result;
}

uint64_t RejectFileRequest.Response.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24C83B8D8(a1, &qword_2697EF958, (void (*)(void))sub_24C83ACFC, a2);
}

uint64_t sub_24C83AD8C@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return RejectFileRequest.Response.init(from:)(a1, a2);
}

uint64_t sub_24C83ADA4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83BA8C(a1, a2, a3, &qword_2697EF948, (void (*)(void))sub_24C83ACFC);
}

uint64_t sub_24C83ADE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701603686 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24C84A440();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24C83AE68(uint64_t a1)
{
  unint64_t v2 = sub_24C83B09C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C83AEA4(uint64_t a1)
{
  unint64_t v2 = sub_24C83B09C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RejectFileRequest.encode(to:)(void *a1)
{
  return sub_24C83AF1C(a1, &qword_2697EF960, (void (*)(void))sub_24C83B09C);
}

uint64_t sub_24C83AF1C(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_24C84A540();
  sub_24C849440();
  sub_24C83A514(&qword_2697EF8F0, MEMORY[0x263F07508]);
  sub_24C84A3F0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24C83B09C()
{
  unint64_t result = qword_2697EF968;
  if (!qword_2697EF968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF968);
  }
  return result;
}

uint64_t RejectFileRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_24C849440();
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EF970);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RejectFileRequest(0);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83B09C();
  sub_24C84A530();
  if (!v2)
  {
    sub_24C83A514(&qword_2697EF910, MEMORY[0x263F07508]);
    sub_24C84A380();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_24C83B3A4((uint64_t)v11, v15, type metadata accessor for RejectFileRequest);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for RejectFileRequest(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EF9B0);
}

uint64_t sub_24C83B3A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24C83B40C()
{
  return 0x467463656A65722FLL;
}

uint64_t sub_24C83B42C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RejectFileRequest.init(from:)(a1, a2);
}

uint64_t sub_24C83B444(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83B480(a1, a2, a3, &qword_2697EF960, (void (*)(void))sub_24C83B09C);
}

uint64_t sub_24C83B480(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_24C84A540();
  sub_24C849440();
  sub_24C83A514(&qword_2697EF8F0, MEMORY[0x263F07508]);
  sub_24C84A3F0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t static CloseRequest.path.getter()
{
  return 0x65736F6C632FLL;
}

uint64_t static CloseRequest.method.getter()
{
  return sub_24C849F90();
}

uint64_t CloseRequest.Response.status.getter()
{
  return *v0;
}

uint64_t CloseRequest.Response.status.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*CloseRequest.Response.status.modify())()
{
  return nullsub_1;
}

uint64_t sub_24C83B654(uint64_t a1)
{
  unint64_t v2 = sub_24C83B848();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C83B690(uint64_t a1)
{
  unint64_t v2 = sub_24C83B848();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CloseRequest.Response.encode(to:)(void *a1)
{
  return sub_24C83B708(a1, &qword_2697EF978, (void (*)(void))sub_24C83B848);
}

uint64_t sub_24C83B708(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v10 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10();
  sub_24C84A540();
  sub_24C84A410();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_24C83B848()
{
  unint64_t result = qword_2697EF980;
  if (!qword_2697EF980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF980);
  }
  return result;
}

uint64_t CloseRequest.Response.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_24C83B8D8(a1, &qword_2697EF988, (void (*)(void))sub_24C83B848, a2);
}

uint64_t sub_24C83B8D8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, _DWORD *a4@<X8>)
{
  uint64_t v13 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v14 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_24C84A530();
  if (!v4)
  {
    int v10 = sub_24C84A3A0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v7);
    _DWORD *v13 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24C83BA38@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return CloseRequest.Response.init(from:)(a1, a2);
}

uint64_t sub_24C83BA50(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83BA8C(a1, a2, a3, &qword_2697EF978, (void (*)(void))sub_24C83B848);
}

uint64_t sub_24C83BA8C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v12 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12();
  sub_24C84A540();
  sub_24C84A410();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_24C83BBCC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24C83BBFC(uint64_t a1)
{
  unint64_t v2 = sub_24C83BDD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24C83BC38(uint64_t a1)
{
  unint64_t v2 = sub_24C83BDD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CloseRequest.encode(to:)(void *a1)
{
  return sub_24C83BCB0(a1, &qword_2697EF990, (void (*)(void))sub_24C83BDD0);
}

uint64_t sub_24C83BCB0(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_24C84A540();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_24C83BDD0()
{
  unint64_t result = qword_2697EF998;
  if (!qword_2697EF998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF998);
  }
  return result;
}

uint64_t CloseRequest.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_24C83BE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83C104(a1, a2, a3, (uint64_t (*)(void))sub_24C7E0670, (uint64_t (*)(void))sub_24C7E061C);
}

uint64_t sub_24C83BE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83C104(a1, a2, a3, (uint64_t (*)(void))sub_24C7D7F20, (uint64_t (*)(void))sub_24C7E05C8);
}

uint64_t sub_24C83BEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83C104(a1, a2, a3, (uint64_t (*)(void))sub_24C7E0574, (uint64_t (*)(void))sub_24C7E0520);
}

uint64_t sub_24C83BED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83C104(a1, a2, a3, (uint64_t (*)(void))sub_24C7D7744, (uint64_t (*)(void))sub_24C7E04CC);
}

uint64_t sub_24C83BF04()
{
  return sub_24C83A514(&qword_2697EED40, (void (*)(uint64_t))type metadata accessor for CosmoFileHttpResponse);
}

uint64_t sub_24C83BF4C(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_24C83A514(&qword_2697EED38, (void (*)(uint64_t))type metadata accessor for FileRequest);
  uint64_t result = sub_24C83A514(&qword_2697EEF18, (void (*)(uint64_t))type metadata accessor for FileRequest);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_24C83BFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83C104(a1, a2, a3, (uint64_t (*)(void))sub_24C7E0478, (uint64_t (*)(void))sub_24C7E0424);
}

uint64_t sub_24C83C000(uint64_t a1)
{
  *(void *)(a1 + 16) = sub_24C83A514(&qword_2697EED10, (void (*)(uint64_t))type metadata accessor for RejectFileRequest);
  uint64_t result = sub_24C83A514(&qword_2697EEF00, (void (*)(uint64_t))type metadata accessor for RejectFileRequest);
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_24C83C084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83C104(a1, a2, a3, (uint64_t (*)(void))sub_24C7E0368, (uint64_t (*)(void))sub_24C7E0314);
}

uint64_t sub_24C83C0B4()
{
  return 0x65736F6C632FLL;
}

uint64_t sub_24C83C0C8()
{
  return sub_24C849F90();
}

uint64_t sub_24C83C0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83C104(a1, a2, a3, (uint64_t (*)(void))sub_24C7D7CC4, (uint64_t (*)(void))sub_24C7E02C0);
}

uint64_t sub_24C83C104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 16) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_24C83C140(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83C17C(a1, a2, a3, &qword_2697EF990, (void (*)(void))sub_24C83BDD0);
}

uint64_t sub_24C83C17C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_24C84A540();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

ValueMetadata *type metadata accessor for LeaseRequest()
{
  return &type metadata for LeaseRequest;
}

uint64_t destroy for LeaseRequest.Response()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s5Cosmo12LeaseRequestV8ResponseVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LeaseRequest.Response(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LeaseRequest.Response(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LeaseRequest.Response(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LeaseRequest.Response(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LeaseRequest.Response()
{
  return &type metadata for LeaseRequest.Response;
}

void *sub_24C83C450(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FileTransferMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for FileTransferMetadata(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for FileTransferMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FileTransferMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileTransferMetadata()
{
  return &type metadata for FileTransferMetadata;
}

ValueMetadata *type metadata accessor for FileListRequest()
{
  return &type metadata for FileListRequest;
}

uint64_t initializeBufferWithCopyOfBuffer for FileListRequest.Response(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FileListRequest.Response(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FileListRequest.Response(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FileListRequest.Response()
{
  return &type metadata for FileListRequest.Response;
}

uint64_t getEnumTagSinglePayload for FileRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t storeEnumTagSinglePayload for FileRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t _s5Cosmo11FileRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24C849440();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t _s5Cosmo11FileRequestVwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_24C849440();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t _s5Cosmo11FileRequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s5Cosmo11FileRequestVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s5Cosmo11FileRequestVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s5Cosmo11FileRequestVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RejectFileRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24C83C958);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24C849440();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RejectFileRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24C83C9DC);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24C849440();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24C83CA50()
{
  uint64_t result = sub_24C849440();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RejectFileRequest.Response()
{
  return &type metadata for RejectFileRequest.Response;
}

ValueMetadata *type metadata accessor for CloseRequest()
{
  return &type metadata for CloseRequest;
}

ValueMetadata *type metadata accessor for CloseRequest.Response()
{
  return &type metadata for CloseRequest.Response;
}

ValueMetadata *type metadata accessor for CloseRequest.CodingKeys()
{
  return &type metadata for CloseRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for CloseRequest.Response.CodingKeys()
{
  return &type metadata for CloseRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for RejectFileRequest.CodingKeys()
{
  return &type metadata for RejectFileRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for RejectFileRequest.Response.CodingKeys()
{
  return &type metadata for RejectFileRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for FileRequest.CodingKeys()
{
  return &type metadata for FileRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for FileListRequest.CodingKeys()
{
  return &type metadata for FileListRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for FileListRequest.Response.CodingKeys()
{
  return &type metadata for FileListRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for FileTransferMetadata.CodingKeys()
{
  return &type metadata for FileTransferMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for LeaseRequest.CodingKeys()
{
  return &type metadata for LeaseRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for LeaseRequest.Response.CodingKeys()
{
  return &type metadata for LeaseRequest.Response.CodingKeys;
}

unint64_t sub_24C83CBBC()
{
  unint64_t result = qword_2697EF9C0;
  if (!qword_2697EF9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF9C0);
  }
  return result;
}

unint64_t sub_24C83CC14()
{
  unint64_t result = qword_2697EF9C8;
  if (!qword_2697EF9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF9C8);
  }
  return result;
}

unint64_t sub_24C83CC6C()
{
  unint64_t result = qword_2697EF9D0;
  if (!qword_2697EF9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF9D0);
  }
  return result;
}

unint64_t sub_24C83CCC4()
{
  unint64_t result = qword_2697EF9D8;
  if (!qword_2697EF9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF9D8);
  }
  return result;
}

unint64_t sub_24C83CD1C()
{
  unint64_t result = qword_2697EF9E0;
  if (!qword_2697EF9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF9E0);
  }
  return result;
}

unint64_t sub_24C83CD74()
{
  unint64_t result = qword_2697EF9E8;
  if (!qword_2697EF9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF9E8);
  }
  return result;
}

unint64_t sub_24C83CDCC()
{
  unint64_t result = qword_2697EF9F0;
  if (!qword_2697EF9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF9F0);
  }
  return result;
}

unint64_t sub_24C83CE24()
{
  unint64_t result = qword_2697EF9F8;
  if (!qword_2697EF9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EF9F8);
  }
  return result;
}

unint64_t sub_24C83CE7C()
{
  unint64_t result = qword_2697EFA00;
  if (!qword_2697EFA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA00);
  }
  return result;
}

unint64_t sub_24C83CED4()
{
  unint64_t result = qword_2697EFA08;
  if (!qword_2697EFA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA08);
  }
  return result;
}

unint64_t sub_24C83CF2C()
{
  unint64_t result = qword_2697EFA10;
  if (!qword_2697EFA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA10);
  }
  return result;
}

unint64_t sub_24C83CF84()
{
  unint64_t result = qword_2697EFA18;
  if (!qword_2697EFA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA18);
  }
  return result;
}

unint64_t sub_24C83CFDC()
{
  unint64_t result = qword_2697EFA20;
  if (!qword_2697EFA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA20);
  }
  return result;
}

unint64_t sub_24C83D034()
{
  unint64_t result = qword_2697EFA28;
  if (!qword_2697EFA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA28);
  }
  return result;
}

unint64_t sub_24C83D08C()
{
  unint64_t result = qword_2697EFA30;
  if (!qword_2697EFA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA30);
  }
  return result;
}

unint64_t sub_24C83D0E4()
{
  unint64_t result = qword_2697EFA38;
  if (!qword_2697EFA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA38);
  }
  return result;
}

unint64_t sub_24C83D13C()
{
  unint64_t result = qword_2697EFA40;
  if (!qword_2697EFA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA40);
  }
  return result;
}

unint64_t sub_24C83D194()
{
  unint64_t result = qword_2697EFA48;
  if (!qword_2697EFA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA48);
  }
  return result;
}

unint64_t sub_24C83D1EC()
{
  unint64_t result = qword_2697EFA50;
  if (!qword_2697EFA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA50);
  }
  return result;
}

unint64_t sub_24C83D244()
{
  unint64_t result = qword_2697EFA58;
  if (!qword_2697EFA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA58);
  }
  return result;
}

unint64_t sub_24C83D29C()
{
  unint64_t result = qword_2697EFA60;
  if (!qword_2697EFA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA60);
  }
  return result;
}

unint64_t sub_24C83D2F4()
{
  unint64_t result = qword_2697EFA68;
  if (!qword_2697EFA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA68);
  }
  return result;
}

unint64_t sub_24C83D34C()
{
  unint64_t result = qword_2697EFA70;
  if (!qword_2697EFA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA70);
  }
  return result;
}

unint64_t sub_24C83D3A4()
{
  unint64_t result = qword_2697EFA78;
  if (!qword_2697EFA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA78);
  }
  return result;
}

unint64_t sub_24C83D3FC()
{
  unint64_t result = qword_2697EFA80;
  if (!qword_2697EFA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA80);
  }
  return result;
}

unint64_t sub_24C83D454()
{
  unint64_t result = qword_2697EFA88;
  if (!qword_2697EFA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA88);
  }
  return result;
}

unint64_t sub_24C83D4AC()
{
  unint64_t result = qword_2697EFA90;
  if (!qword_2697EFA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA90);
  }
  return result;
}

unint64_t sub_24C83D504()
{
  unint64_t result = qword_2697EFA98;
  if (!qword_2697EFA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFA98);
  }
  return result;
}

uint64_t sub_24C83D558(uint64_t result)
{
  if (result >= 7) {
    return 7;
  }
  else {
    return result;
  }
}

uint64_t sub_24C83D568(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6F636F746F7270 && a2 == 0xEF6E6F6973726556;
  if (v2 || (sub_24C84A440() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x566572616873 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24C84A440();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24C83D678(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EFB18);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83E538();
  sub_24C84A530();
  if (v1) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v9[16] = 0;
  __int16 v7 = sub_24C84A360();
  v9[15] = 1;
  sub_24C83E634();
  sub_24C84A380();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7 & 0x1FF;
}

void *sub_24C83D838(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v13 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  uint64_t v10 = v9;
  sub_24C84A530();
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    sub_24C83E634();
    sub_24C84A380();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
    uint64_t v10 = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v10;
}

uint64_t sub_24C83D9BC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024C8510A0 || (sub_24C84A440() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024C8510C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24C84A440();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24C83DAA8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EFB08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24C83E784();
  sub_24C84A530();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_24C84A370();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_24C84A370();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_24C83DCB0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000024C8510A0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_24C84A440();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_24C83DD38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_24C84A440() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24C84A440();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24C83DE1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_24C84A440() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24C84A440();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24C83DEF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_24C84A440() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024C851080)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24C84A440();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t destroy for FileChannelSetupRequest.Response()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FileChannelSetupRequest.Response(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FileChannelSetupRequest.Response(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for FileChannelSetupRequest.Response(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FileChannelSetupRequest.Response(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FileChannelSetupRequest.Response(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileChannelSetupRequest.Response()
{
  return &type metadata for FileChannelSetupRequest.Response;
}

ValueMetadata *type metadata accessor for FileChannelSetupRequest()
{
  return &type metadata for FileChannelSetupRequest;
}

ValueMetadata *type metadata accessor for Spake2ConfirmRequest.Response()
{
  return &type metadata for Spake2ConfirmRequest.Response;
}

ValueMetadata *type metadata accessor for Spake2ConfirmRequest()
{
  return &type metadata for Spake2ConfirmRequest;
}

ValueMetadata *type metadata accessor for Spake2ShareRequest.Response()
{
  return &type metadata for Spake2ShareRequest.Response;
}

uint64_t destroy for Spake2ShareRequest(uint64_t a1)
{
  return sub_24C7D5FEC(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t _s5Cosmo18Spake2ShareRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_24C7D60D0(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for Spake2ShareRequest(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_24C7D60D0(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  sub_24C7D5FEC(v5, v6);
  return a1;
}

uint64_t assignWithTake for Spake2ShareRequest(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_24C7D5FEC(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Spake2ShareRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Spake2ShareRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Spake2ShareRequest()
{
  return &type metadata for Spake2ShareRequest;
}

unint64_t sub_24C83E3A0()
{
  unint64_t result = qword_2697EFAA0;
  if (!qword_2697EFAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFAA0);
  }
  return result;
}

uint64_t sub_24C83E3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83E4FC(a1, a2, a3, (uint64_t (*)(void))sub_24C7D7000, (uint64_t (*)(void))sub_24C830738);
}

uint64_t sub_24C83E420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83E4FC(a1, a2, a3, (uint64_t (*)(void))sub_24C8307D4, (uint64_t (*)(void))sub_24C7D7164);
}

uint64_t sub_24C83E44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83E4FC(a1, a2, a3, (uint64_t (*)(void))sub_24C7D71E4, (uint64_t (*)(void))sub_24C8308C8);
}

uint64_t sub_24C83E478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83E4FC(a1, a2, a3, (uint64_t (*)(void))sub_24C83099C, (uint64_t (*)(void))sub_24C7D72B0);
}

uint64_t sub_24C83E4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83E4FC(a1, a2, a3, (uint64_t (*)(void))sub_24C7D73F0, (uint64_t (*)(void))sub_24C830A70);
}

uint64_t sub_24C83E4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24C83E4FC(a1, a2, a3, (uint64_t (*)(void))sub_24C830B08, (uint64_t (*)(void))sub_24C7D7568);
}

uint64_t sub_24C83E4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24C83E538()
{
  unint64_t result = qword_2697EFAB0;
  if (!qword_2697EFAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFAB0);
  }
  return result;
}

unint64_t sub_24C83E58C()
{
  unint64_t result = qword_2697EFAB8;
  if (!qword_2697EFAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFAB8);
  }
  return result;
}

unint64_t sub_24C83E5E0()
{
  unint64_t result = qword_2697EFAC8;
  if (!qword_2697EFAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFAC8);
  }
  return result;
}

unint64_t sub_24C83E634()
{
  unint64_t result = qword_2697EFAD0;
  if (!qword_2697EFAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFAD0);
  }
  return result;
}

unint64_t sub_24C83E688()
{
  unint64_t result = qword_2697EFAE0;
  if (!qword_2697EFAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFAE0);
  }
  return result;
}

unint64_t sub_24C83E6DC()
{
  unint64_t result = qword_2697EFAF0;
  if (!qword_2697EFAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFAF0);
  }
  return result;
}

unint64_t sub_24C83E730()
{
  unint64_t result = qword_2697EFB00;
  if (!qword_2697EFB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB00);
  }
  return result;
}

unint64_t sub_24C83E784()
{
  unint64_t result = qword_2697EFB10;
  if (!qword_2697EFB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB10);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileChannelSetupRequest.Response.CodingKeys()
{
  return &type metadata for FileChannelSetupRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for FileChannelSetupRequest.CodingKeys()
{
  return &type metadata for FileChannelSetupRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for Spake2ConfirmRequest.Response.CodingKeys()
{
  return &type metadata for Spake2ConfirmRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for Spake2ConfirmRequest.CodingKeys()
{
  return &type metadata for Spake2ConfirmRequest.CodingKeys;
}

unsigned char *_s5Cosmo12CloseRequestV8ResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24C83E8B4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Spake2ShareRequest.Response.CodingKeys()
{
  return &type metadata for Spake2ShareRequest.Response.CodingKeys;
}

unsigned char *_s5Cosmo15FileListRequestV8ResponseV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C83E9B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Spake2ShareRequest.CodingKeys()
{
  return &type metadata for Spake2ShareRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AttestationMessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C83EABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttestationMessageType()
{
  return &type metadata for AttestationMessageType;
}

unint64_t sub_24C83EAF8()
{
  unint64_t result = qword_2697EFB48;
  if (!qword_2697EFB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB48);
  }
  return result;
}

unint64_t sub_24C83EB50()
{
  unint64_t result = qword_2697EFB50;
  if (!qword_2697EFB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB50);
  }
  return result;
}

unint64_t sub_24C83EBA8()
{
  unint64_t result = qword_2697EFB58;
  if (!qword_2697EFB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB58);
  }
  return result;
}

unint64_t sub_24C83EC00()
{
  unint64_t result = qword_2697EFB60;
  if (!qword_2697EFB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB60);
  }
  return result;
}

unint64_t sub_24C83EC58()
{
  unint64_t result = qword_2697EFB68;
  if (!qword_2697EFB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB68);
  }
  return result;
}

unint64_t sub_24C83ECB0()
{
  unint64_t result = qword_2697EFB70;
  if (!qword_2697EFB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB70);
  }
  return result;
}

unint64_t sub_24C83ED08()
{
  unint64_t result = qword_2697EFB78;
  if (!qword_2697EFB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB78);
  }
  return result;
}

unint64_t sub_24C83ED60()
{
  unint64_t result = qword_2697EFB80;
  if (!qword_2697EFB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB80);
  }
  return result;
}

unint64_t sub_24C83EDB8()
{
  unint64_t result = qword_2697EFB88;
  if (!qword_2697EFB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB88);
  }
  return result;
}

unint64_t sub_24C83EE10()
{
  unint64_t result = qword_2697EFB90;
  if (!qword_2697EFB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB90);
  }
  return result;
}

unint64_t sub_24C83EE68()
{
  unint64_t result = qword_2697EFB98;
  if (!qword_2697EFB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFB98);
  }
  return result;
}

unint64_t sub_24C83EEC0()
{
  unint64_t result = qword_2697EFBA0;
  if (!qword_2697EFBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFBA0);
  }
  return result;
}

unint64_t sub_24C83EF18()
{
  unint64_t result = qword_2697EFBA8;
  if (!qword_2697EFBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFBA8);
  }
  return result;
}

unint64_t sub_24C83EF70()
{
  unint64_t result = qword_2697EFBB0;
  if (!qword_2697EFBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFBB0);
  }
  return result;
}

unint64_t sub_24C83EFC8()
{
  unint64_t result = qword_2697EFBB8;
  if (!qword_2697EFBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFBB8);
  }
  return result;
}

unint64_t sub_24C83F020()
{
  unint64_t result = qword_2697EFBC0;
  if (!qword_2697EFBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFBC0);
  }
  return result;
}

unint64_t sub_24C83F078()
{
  unint64_t result = qword_2697EFBC8;
  if (!qword_2697EFBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFBC8);
  }
  return result;
}

unint64_t sub_24C83F0D0()
{
  unint64_t result = qword_2697EFBD0;
  if (!qword_2697EFBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFBD0);
  }
  return result;
}

unint64_t sub_24C83F128()
{
  unint64_t result = qword_2697EFBD8;
  if (!qword_2697EFBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFBD8);
  }
  return result;
}

void *CosmoMultiplexChannelHost.__allocating_init(name:descriptor:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_allocObject();
  uint64_t v8 = sub_24C847F24(a1, a2, a3, a4);

  return v8;
}

uint64_t sub_24C83F224(uint64_t a1, unint64_t a2)
{
  return sub_24C83F230(a1, a2, &OBJC_IVAR____TtC5CosmoP33_53B1A2E2A23EBDAF1F157FD9DF690B8514PendingRequest_id);
}

uint64_t sub_24C83F230(uint64_t result, unint64_t a2, void *a3)
{
  uint64_t v5 = result;
  if (a2 >> 62) {
    goto LABEL_21;
  }
  for (i = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10); i; unint64_t result = swift_bridgeObjectRelease())
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      MEMORY[0x2532FC0A0](0, a2);
    }
    else
    {
      if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      swift_retain();
    }
    v5 += *a3;
    char v7 = sub_24C849400();
    swift_release();
    if (v7) {
      return 0;
    }
    for (uint64_t j = 0; ; ++j)
    {
      unint64_t v8 = j + 1;
      if (__OFADD__(j, 1)) {
        break;
      }
      if (v8 == i) {
        return 0;
      }
      if ((a2 & 0xC000000000000001) != 0)
      {
        MEMORY[0x2532FC0A0](j + 1, a2);
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_19;
        }
        if (v8 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_20;
        }
        swift_retain();
      }
      char v10 = sub_24C849400();
      swift_release();
      if (v10) {
        return v8;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t i = sub_24C84A2C0();
  }
  return 0;
}

uint64_t sub_24C83F3D8(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_24C847A84(v3);
    unint64_t v3 = v5;
    *uint64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v7 - 1 - a1;
    if (v9 >= 0)
    {
      uint64_t v10 = v6 + 8 * a1;
      uint64_t v11 = *(void *)(v10 + 32);
      memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * v9);
      *(void *)(v6 + 16) = v8;
      sub_24C84A070();
      return v11;
    }
  }
  uint64_t result = sub_24C84A300();
  __break(1u);
  return result;
}

uint64_t sub_24C83F4BC()
{
  uint64_t v0 = sub_24C849590();
  __swift_allocate_value_buffer(v0, qword_2697EFBE0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2697EFBE0);
  if (qword_2697EE9D0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2697F7058);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

Cosmo::CosmoMultiplexChannelHost::State_optional __swiftcall CosmoMultiplexChannelHost.State.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_24C84A340();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t CosmoMultiplexChannelHost.State.rawValue.getter()
{
  if (*v0) {
    return 0x6164696C61766E69;
  }
  else {
    return 0x7964616572;
  }
}

Cosmo::CosmoMultiplexChannelHost::State_optional sub_24C83F628(Swift::String *a1)
{
  return CosmoMultiplexChannelHost.State.init(rawValue:)(*a1);
}

uint64_t sub_24C83F634@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    unint64_t v7 = sub_24C7F2264;
  }
  else
  {
    unint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_24C7D6E3C(v4);
}

uint64_t sub_24C83F6C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24C7F223C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 16);
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  sub_24C7D6E3C(v3);
  return sub_24C7D6F70(v8);
}

void *CosmoMultiplexChannelHost.init(name:descriptor:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = sub_24C847F24(a1, a2, a3, a4);

  return v5;
}

uint64_t sub_24C83F7B4()
{
  return sub_24C83FAC8((uint64_t)sub_24C8482C8, (uint64_t)&block_descriptor_8);
}

uint64_t sub_24C83F7D4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_listener);
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v3 = v1[2];
  v1[2] = sub_24C848FAC;
  v1[3] = v2;
  sub_24C7D6F70(v3);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = v1[6];
  v1[6] = sub_24C848FDC;
  v1[7] = v4;
  sub_24C7D6F70(v5);
  if (qword_2697EEA80 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_24C849590();
  __swift_project_value_buffer(v6, (uint64_t)qword_2697EFBE0);
  swift_retain_n();
  uint64_t v7 = sub_24C849570();
  os_log_type_t v8 = sub_24C84A110();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_retain();
    uint64_t v11 = CosmoMultiplexChannelHost.description.getter();
    unint64_t v13 = v12;
    swift_release();
    sub_24C7DE68C(v11, v13, &v15);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v7, v8, "[Start] Listener starting, %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v10, -1, -1);
    MEMORY[0x2532FCCC0](v9, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  return sub_24C801820();
}

uint64_t sub_24C83FA48(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C841B48(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C83FAA8()
{
  return sub_24C83FAC8((uint64_t)sub_24C8482E8, (uint64_t)&block_descriptor_3_1);
}

uint64_t sub_24C83FAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_24C849BD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  os_log_type_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24C849BF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + 48);
  aBlock[4] = a1;
  uint64_t v17 = v2;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = a2;
  unint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  sub_24C849BE0();
  v15[1] = MEMORY[0x263F8EE78];
  sub_24C848FE4((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_24C83FD48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v24 = a6;
  uint64_t v25 = a7;
  uint64_t v14 = sub_24C849BD0();
  uint64_t v28 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_24C849BF0();
  uint64_t v17 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  unint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(v8 + 48);
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = v25;
  void v20[2] = v24;
  v20[3] = v21;
  uint64_t v20[4] = a1;
  v20[5] = v8;
  v20[6] = a2;
  v20[7] = a3;
  v20[8] = a4;
  v20[9] = a5;
  aBlock[4] = sub_24C848354;
  void aBlock[5] = v20;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24C7C25B4;
  aBlock[3] = &block_descriptor_6_0;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_24C7D6E3C(a4);
  sub_24C849BE0();
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_24C848FE4((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
  sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
  sub_24C84A1F0();
  MEMORY[0x2532FBFB0](0, v19, v16, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v27);
  return swift_release();
}

void sub_24C840038(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  sub_24C849140();
  swift_allocObject();
  sub_24C849130();
  sub_24C849120();
  if (v6)
  {
    swift_release();
    uint64_t v36 = a6;
    switch(a2 >> 62)
    {
      case 1uLL:
        if (a1 >> 32 < (int)a1) {
          __break(1u);
        }
        sub_24C7D60D0(a1, a2);
        uint64_t v13 = sub_24C845A54((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24C817AE0);
        unint64_t v15 = v19;
        if (v19) {
          goto LABEL_6;
        }
        goto LABEL_11;
      case 2uLL:
        uint64_t v11 = *(void *)(a1 + 16);
        uint64_t v12 = *(void *)(a1 + 24);
        sub_24C7D60D0(a1, a2);
        swift_retain();
        swift_retain();
        uint64_t v13 = sub_24C845A54(v11, v12, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24C817AE0);
        unint64_t v15 = v14;
        swift_release();
        swift_release();
        if (v15)
        {
LABEL_6:
          sub_24C7D5FEC(a1, a2);
          uint64_t v16 = v13;
          goto LABEL_18;
        }
LABEL_11:
        uint64_t v39 = a1;
        unint64_t v40 = a2;
        sub_24C7D60D0(a1, a2);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEC70);
        if (swift_dynamicCast())
        {
          sub_24C7D76C8(v37, (uint64_t)v41);
          __swift_project_boxed_opaque_existential_1(v41, v42);
          if (sub_24C84A320())
          {
            sub_24C7D5FEC(a1, a2);
            __swift_project_boxed_opaque_existential_1(v41, v42);
            sub_24C84A310();
            unint64_t v15 = *((void *)&v37[0] + 1);
            uint64_t v16 = *(void *)&v37[0];
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
            goto LABEL_18;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
        }
        else
        {
          uint64_t v38 = 0;
          memset(v37, 0, sizeof(v37));
          sub_24C7D7C08((uint64_t)v37, &qword_2697EF6E0);
        }
        uint64_t v17 = sub_24C8479D0(a1, a2);
LABEL_17:
        uint64_t v16 = v17;
        unint64_t v15 = v18;
        sub_24C7D5FEC(a1, a2);
LABEL_18:
        if (qword_2697EEA80 != -1) {
          swift_once();
        }
        uint64_t v20 = sub_24C849590();
        __swift_project_value_buffer(v20, (uint64_t)qword_2697EFBE0);
        id v21 = v6;
        swift_retain();
        id v22 = v6;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_24C849570();
        os_log_type_t v24 = sub_24C84A0F0();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = swift_slowAlloc();
          uint64_t v35 = swift_slowAlloc();
          v41[0] = v35;
          *(_DWORD *)uint64_t v25 = 136315906;
          swift_bridgeObjectRetain();
          *(void *)&v37[0] = sub_24C7DE68C(v16, v15, v41);
          sub_24C84A1A0();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v25 + 12) = 2080;
          uint64_t v26 = (*(uint64_t (**)(uint64_t))(v36 + 48))(a5);
          *(void *)&v37[0] = sub_24C7DE68C(v26, v27, v41);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v25 + 22) = 2080;
          *(void *)&v37[0] = v6;
          id v28 = v6;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF0E0);
          uint64_t v29 = sub_24C849ED0();
          *(void *)&v37[0] = sub_24C7DE68C(v29, v30, v41);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();

          *(_WORD *)(v25 + 32) = 2080;
          swift_retain();
          uint64_t v31 = CosmoMultiplexChannelHost.description.getter();
          unint64_t v33 = v32;
          swift_release();
          *(void *)&v37[0] = sub_24C7DE68C(v31, v33, v41);
          sub_24C84A1A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24C7BE000, v23, v24, "[Respond] Failed to deserialize request from body=%s, type=%s error=%s %s", (uint8_t *)v25, 0x2Au);
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v35, -1, -1);
          MEMORY[0x2532FCCC0](v25, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();

          swift_release_n();
        }
        sub_24C7D7054();
        swift_allocError();
        *(_OWORD *)uint64_t v34 = xmmword_24C84AFF0;
        *(unsigned char *)(v34 + 16) = 2;
        swift_willThrow();

        break;
      case 3uLL:
        memset(v41, 0, 14);
        goto LABEL_8;
      default:
        v41[0] = a1;
        LOWORD(v41[1]) = a2;
        BYTE2(v41[1]) = BYTE2(a2);
        BYTE3(v41[1]) = BYTE3(a2);
        BYTE4(v41[1]) = BYTE4(a2);
        BYTE5(v41[1]) = BYTE5(a2);
LABEL_8:
        uint64_t v17 = sub_24C849F30();
        goto LABEL_17;
    }
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_24C84072C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 48))(a7, a8);
  unint64_t v15 = v14;
  if (qword_2697EEA80 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_24C849590();
  __swift_project_value_buffer(v16, (uint64_t)qword_2697EFBE0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v17 = sub_24C849570();
  os_log_type_t v18 = sub_24C84A110();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v30 = a3;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    v36[0] = v29;
    *(_DWORD *)uint64_t v19 = 136315394;
    swift_bridgeObjectRetain();
    sub_24C7DE68C(v13, v15, v36);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2080;
    swift_retain();
    uint64_t v20 = CosmoMultiplexChannelHost.description.getter();
    unint64_t v31 = v15;
    unint64_t v22 = v21;
    swift_release();
    sub_24C7DE68C(v20, v22, v36);
    sub_24C84A1A0();
    swift_release_n();
    unint64_t v15 = v31;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v17, v18, "[Respond] Registered handler for path=%s, %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v29, -1, -1);
    uint64_t v23 = v19;
    a3 = v30;
    MEMORY[0x2532FCCC0](v23, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  os_log_type_t v24 = (void *)swift_allocObject();
  void v24[2] = a7;
  void v24[3] = a8;
  v24[4] = a1;
  v24[5] = a2;
  void v24[6] = a3;
  unsigned char v24[7] = a4;
  uint64_t v25 = (void *)swift_allocObject();
  void v25[2] = a7;
  v25[3] = a8;
  v25[4] = a5;
  v25[5] = a6;
  v25[6] = a1;
  v25[7] = a2;
  uint64_t v26 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
  swift_beginAccess();
  swift_retain_n();
  swift_retain();
  sub_24C7D6E3C(a5);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v35 = *v26;
  *uint64_t v26 = 0x8000000000000000;
  sub_24C846A20((uint64_t)sub_24C848EB8, (uint64_t)v24, (uint64_t)sub_24C848F30, (uint64_t)v25, v13, v15, isUniquelyReferenced_nonNull_native);
  *uint64_t v26 = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_24C840AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *, uint64_t (*)(uint64_t a1), void *), uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v29 = a7;
  uint64_t v12 = *(void *)(a9 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](a1);
  unint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  os_log_type_t v18 = (char *)&v28 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  unint64_t v21 = (char *)&v28 - v20;
  sub_24C840038(v19, v22, v23, v24, a9, a10);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v21, v18, a9);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v21, a9);
  uint64_t v25 = (void *)swift_allocObject();
  void v25[2] = a9;
  v25[3] = a10;
  v25[4] = a3;
  v25[5] = a4;
  swift_retain();
  v29(v15, sub_24C848FA0, v25);
  swift_release();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  v26(v15, a9);
  return ((uint64_t (*)(char *, uint64_t))v26)(v21, a9);
}

uint64_t sub_24C840D08(uint64_t a1, void (*a2)(long long *))
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v15 - v6;
  sub_24C7D7054();
  uint64_t v8 = sub_24C84A520();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v15 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v15 - v9, a1, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    char v12 = v10[16];
    long long v15 = *(_OWORD *)v10;
    char v16 = v12;
    char v19 = 1;
    a2(&v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, AssociatedTypeWitness);
    uint64_t v17 = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v15);
    (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(boxed_opaque_existential_1, v7, AssociatedTypeWitness);
    char v19 = 0;
    a2(&v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  }
  return sub_24C7D7C08((uint64_t)&v15, &qword_2697EECC8);
}

uint64_t sub_24C840F70(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, void (*a6)(void, void, void, void), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v62 = a8;
  int v57 = a5;
  uint64_t v58 = a4;
  uint64_t v59 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_24C84A180();
  uint64_t v52 = *(void *)(v15 - 8);
  uint64_t v53 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  int v56 = (char *)&v48 - v17;
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v51 = (char *)&v48 - v18;
  sub_24C7D7054();
  uint64_t v19 = sub_24C84A520();
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)&v48 - v21;
  uint64_t v61 = *(void *)(a10 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v23);
  if (a6)
  {
    uint64_t v49 = v28;
    uint64_t v50 = result;
    os_log_t v54 = (char *)&v48 - v27;
    uint64_t v60 = a6;
    swift_retain();
    sub_24C840038(a1, a2, v62, a9, a10, a11);
    uint64_t v29 = v61;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v54, v25, a10);
    sub_24C7D7BA4(v59, (uint64_t)&v71, &qword_2697EECC8);
    if (v73)
    {
      char v30 = v72;
      *(_OWORD *)unint64_t v22 = v71;
      v22[16] = v30;
      uint64_t v31 = v50;
LABEL_6:
      swift_storeEnumTagMultiPayload();
      uint64_t v38 = v54;
      uint64_t v39 = v60;
      v60(v54, v22, v58, v57 & 1);
      sub_24C7D6F70((uint64_t)v39);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v22, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v38, a10);
    }
    sub_24C7D76C8(&v71, (uint64_t)v70);
    sub_24C7D76E0((uint64_t)v70, (uint64_t)v69);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECD0);
    unint64_t v32 = v56;
    char v33 = swift_dynamicCast();
    uint64_t v34 = v55;
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
    if (v33)
    {
      v35(v32, 0, 1, AssociatedTypeWitness);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
      uint64_t v37 = v51;
      v36(v51, v32, AssociatedTypeWitness);
      v36(v22, v37, AssociatedTypeWitness);
      uint64_t v31 = v50;
      goto LABEL_6;
    }
    v35(v32, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v53);
    if (qword_2697EEA80 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_24C849590();
    __swift_project_value_buffer(v40, (uint64_t)qword_2697EFBE0);
    sub_24C7D76E0((uint64_t)v70, (uint64_t)v69);
    uint64_t v41 = sub_24C849570();
    os_log_type_t v42 = sub_24C84A0F0();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v68 = v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      sub_24C7D76E0((uint64_t)v69, (uint64_t)v67);
      sub_24C7D7BA4((uint64_t)v67, (uint64_t)&v65, &qword_2697EECD8);
      uint64_t v48 = a10;
      if (v66)
      {
        sub_24C7D76C8(&v65, (uint64_t)v64);
        sub_24C7D76E0((uint64_t)v64, (uint64_t)&v63);
        uint64_t v45 = sub_24C849ED0();
        unint64_t v47 = v46;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
      }
      else
      {
        unint64_t v47 = 0xE300000000000000;
        uint64_t v45 = 7104878;
      }
      sub_24C7D7C08((uint64_t)v67, &qword_2697EECD8);
      v67[0] = sub_24C7DE68C(v45, v47, &v68);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
      _os_log_impl(&dword_24C7BE000, v41, v42, "[Respond] Could not cast %s into response type", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v44, -1, -1);
      MEMORY[0x2532FCCC0](v43, -1, -1);
      sub_24C7D6F70((uint64_t)v60);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v54, v48);
    }
    else
    {
      sub_24C7D6F70((uint64_t)v60);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v54, a10);
    }
  }
  return result;
}

uint64_t sub_24C841638(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v8 = *a1;
  uint64_t v9 = *(void **)(v2 + 48);
  *uint64_t v7 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v10 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_19:
    swift_once();
LABEL_4:
    uint64_t v11 = sub_24C849590();
    __swift_project_value_buffer(v11, (uint64_t)qword_2697EFBE0);
    swift_retain_n();
    char v12 = sub_24C849570();
    os_log_type_t v13 = sub_24C84A110();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v32[0] = v15;
      *(_DWORD *)uint64_t v14 = 136315394;
      LOBYTE(v31) = v8;
      uint64_t v16 = sub_24C849ED0();
      uint64_t v31 = sub_24C7DE68C(v16, v17, v32);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      swift_retain();
      uint64_t v18 = CosmoMultiplexChannelHost.description.getter();
      unint64_t v20 = v19;
      swift_release();
      uint64_t v31 = sub_24C7DE68C(v18, v20, v32);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v12, v13, "Listener invalidated, state=%s %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v15, -1, -1);
      MEMORY[0x2532FCCC0](v14, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t result = swift_beginAccess();
    char v30 = *(void (**)(uint64_t *))(v2 + 16);
    if (v30)
    {
      LOBYTE(v31) = 1;
LABEL_16:
      swift_retain();
      v30(&v31);
      return sub_24C7D6F70((uint64_t)v30);
    }
    return result;
  }
  if (v8)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_ready) = 0;
    *(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_terminated) = 1;
    if (qword_2697EEA80 == -1) {
      goto LABEL_4;
    }
    goto LABEL_19;
  }
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_ready) = 1;
  if (qword_2697EEA80 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_24C849590();
  __swift_project_value_buffer(v21, (uint64_t)qword_2697EFBE0);
  swift_retain_n();
  unint64_t v22 = sub_24C849570();
  os_log_type_t v23 = sub_24C84A110();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v32[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_retain();
    uint64_t v26 = CosmoMultiplexChannelHost.description.getter();
    unint64_t v28 = v27;
    swift_release();
    uint64_t v31 = sub_24C7DE68C(v26, v28, v32);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v22, v23, "Listener ready, %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v25, -1, -1);
    MEMORY[0x2532FCCC0](v24, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t result = swift_beginAccess();
  char v30 = *(void (**)(uint64_t *))(v2 + 16);
  if (v30)
  {
    LOBYTE(v31) = 0;
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_24C841B48(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v30[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v8 = *(void **)(v2 + 48);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v9 = v8;
  LOBYTE(v8) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_acceptedStreamCount);
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (!v11)
    {
      *(void *)(v2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_acceptedStreamCount) = v12;
      if (qword_2697EEA80 == -1) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  swift_once();
LABEL_4:
  uint64_t v13 = sub_24C849590();
  __swift_project_value_buffer(v13, (uint64_t)qword_2697EFBE0);
  swift_retain_n();
  swift_retain_n();
  uint64_t v14 = sub_24C849570();
  os_log_type_t v15 = sub_24C84A110();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    v30[0] = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_name);
    unint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtC5Cosmo19CosmoHttpConnection_name + 8);
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_24C7DE68C(v18, v19, v30);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    swift_retain();
    uint64_t v20 = CosmoMultiplexChannelHost.description.getter();
    unint64_t v22 = v21;
    swift_release();
    uint64_t v29 = sub_24C7DE68C(v20, v22, v30);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v14, v15, "Received incoming stream, name=%s, %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v17, -1, -1);
    MEMORY[0x2532FCCC0](v16, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  type metadata accessor for PendingResponse(0);
  swift_allocObject();
  swift_retain();
  swift_retain();
  os_log_type_t v23 = sub_24C842930(a1, v2);
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  uint64_t v25 = v23[2];
  void v23[2] = sub_24C848E08;
  void v23[3] = v24;
  sub_24C7D6F70(v25);
  uint64_t v26 = (void *)(v2 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_activeResponses);
  swift_beginAccess();
  uint64_t v27 = swift_retain();
  MEMORY[0x2532FBEA0](v27);
  if (*(void *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_24C84A080();
  }
  sub_24C84A0A0();
  sub_24C84A070();
  swift_endAccess();
  sub_24C842AE8();
  return swift_release();
}

uint64_t sub_24C841F7C(uint64_t a1)
{
  uint64_t v2 = sub_24C849C80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    int v8 = *(void **)(result + 48);
    *uint64_t v5 = v8;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
    id v9 = v8;
    LOBYTE(v8) = sub_24C849CA0();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
    if (v8)
    {
      uint64_t v10 = (unint64_t *)(v7 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_activeResponses);
      swift_beginAccess();
      unint64_t v11 = *v10;
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_24C83F230(a1, v11, &OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_id);
      char v14 = v13;
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        swift_beginAccess();
        sub_24C83F3D8(v12);
        swift_endAccess();
        swift_release();
      }
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_24C842150(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24C849C80();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v3 + 48);
  *id v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F0E0], v6);
  id v11 = v10;
  LOBYTE(v10) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    if (qword_2697EEA80 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v12 = sub_24C849590();
  __swift_project_value_buffer(v12, (uint64_t)qword_2697EFBE0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  char v13 = sub_24C849570();
  os_log_type_t v14 = sub_24C84A110();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v27[0] = v25;
    *(_DWORD *)uint64_t v15 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_24C7DE68C(a1, a2, v27);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    swift_retain();
    uint64_t v16 = CosmoMultiplexChannelHost.description.getter();
    unint64_t v18 = v17;
    swift_release();
    uint64_t v26 = sub_24C7DE68C(v16, v18, v27);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v13, v14, "[Close] Closing, reason='%s' %s", (uint8_t *)v15, 0x16u);
    uint64_t v19 = v25;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v19, -1, -1);
    MEMORY[0x2532FCCC0](v15, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_activeResponses);
  swift_beginAccess();
  uint64_t v21 = *v20;
  if (!((unint64_t)*v20 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v22) {
      goto LABEL_8;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    sub_24C803ED0();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_24C84A2C0();
  if (!v22) {
    goto LABEL_17;
  }
LABEL_8:
  if (v22 >= 1)
  {
    for (uint64_t i = 0; i != v22; ++i)
    {
      if ((v21 & 0xC000000000000001) != 0) {
        MEMORY[0x2532FC0A0](i, v21);
      }
      else {
        swift_retain();
      }
      sub_24C842D60(a1, a2);
      swift_release();
    }
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t CosmoMultiplexChannelHost.deinit()
{
  sub_24C7D6F70(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();

  sub_24C7F5BE0(v0 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_descriptor);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CosmoMultiplexChannelHost.__deallocating_deinit()
{
  sub_24C7D6F70(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();

  sub_24C7F5BE0(v0 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_descriptor);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t CosmoMultiplexChannelHost.description.getter()
{
  return 0x3D656D616ELL;
}

uint64_t sub_24C84290C()
{
  return CosmoMultiplexChannelHost.description.getter();
}

void *sub_24C842930(uint64_t a1, uint64_t a2)
{
  v2[2] = 0;
  v2[3] = 0;
  sub_24C849430();
  swift_weakInit();
  uint64_t v5 = (void *)((char *)v2
                + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData) = xmmword_24C84AFC0;
  *((unsigned char *)v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse) = 0;
  *(void *)((char *)v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_stream) = a1;
  swift_weakAssign();
  uint64_t v6 = *(void **)(a2 + 48);
  v2[4] = v6;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = sub_24C848E10;
  *(void *)(a1 + 24) = v7;
  swift_retain();
  id v9 = v6;
  swift_retain();
  sub_24C7D6F70(v8);
  swift_release();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_24C842A74(char *a1, uint64_t a2, void (*a3)(char *))
{
  char v4 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v6 = v4;
    a3(&v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C842AE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24C849C80();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v6 = *(void **)(v1 + 32);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    id v9 = *(void **)(v1 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_stream);
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    uint64_t v11 = v9[4];
    v9[4] = sub_24C848DF8;
    v9[5] = v10;
    sub_24C7D6F70(v11);
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    uint64_t v13 = v9[10];
    v9[10] = sub_24C848E00;
    v9[11] = v12;
    sub_24C7D6F70(v13);
    return sub_24C7E2A9C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24C842C84(uint64_t *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24C843D58(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C842CE4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  char v3 = *((unsigned char *)a1 + 16);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v5[0] = v1;
    v5[1] = v2;
    char v6 = v3;
    sub_24C8452C4((uint64_t)v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_24C842D60(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v60 = a1;
  uint64_t v5 = sub_24C849C80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = *(void **)(v2 + 32);
  *uint64_t v8 = v9;
  uint64_t v10 = *(void (**)(void *))(v6 + 104);
  unsigned int v59 = *MEMORY[0x263F8F0E0];
  v10(v8);
  id v11 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t))(v6 + 8);
  uint64_t result = v12(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (!*(void *)(v3 + 16)) {
    return result;
  }
  int v56 = (void (*)(void))v10;
  id v57 = v11;
  uint64_t v58 = v12;
  uint64_t v65 = 0;
  unint64_t v66 = 0xE000000000000000;
  sub_24C84A230();
  swift_bridgeObjectRelease();
  uint64_t v65 = 0x43205D706F74535BLL;
  unint64_t v66 = 0xEF20676E69736F6CLL;
  uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_stream);
  uint64_t v15 = swift_retain();
  uint64_t v61 = v14;
  sub_24C7E2D34(v15);
  swift_release();
  sub_24C849F80();
  swift_bridgeObjectRelease();
  id v11 = (id)v65;
  uint64_t v10 = (void (*)(void *))v66;
  if (*(void *)(v3 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData + 8) >> 60 == 15
    || (*(unsigned char *)(v3 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse) & 1) != 0)
  {
    if (qword_2697EEA80 == -1)
    {
LABEL_6:
      uint64_t v16 = sub_24C849590();
      __swift_project_value_buffer(v16, (uint64_t)qword_2697EFBE0);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      unint64_t v17 = sub_24C849570();
      os_log_type_t v18 = sub_24C84A110();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        uint64_t v65 = v20;
        *(_DWORD *)uint64_t v19 = 136315650;
        swift_bridgeObjectRetain();
        v62[0] = sub_24C7DE68C((uint64_t)v11, (unint64_t)v10, &v65);
        sub_24C84A1A0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v19 + 12) = 2080;
        swift_bridgeObjectRetain();
        v62[0] = sub_24C7DE68C(v60, a2, &v65);
        sub_24C84A1A0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v19 + 22) = 2080;
        swift_retain();
        uint64_t v21 = sub_24C845730();
        unint64_t v23 = v22;
        swift_release();
        v62[0] = sub_24C7DE68C(v21, v23, &v65);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v17, v18, "%s, reason='%s' %s", (uint8_t *)v19, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v20, -1, -1);
        MEMORY[0x2532FCCC0](v19, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      return sub_24C7E4B0C();
    }
LABEL_22:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v60 = OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse;
  if (qword_2697EEA80 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_24C849590();
  __swift_project_value_buffer(v24, (uint64_t)qword_2697EFBE0);
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_24C849570();
  os_log_type_t v26 = sub_24C84A110();
  int v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v28 = swift_slowAlloc();
    int v55 = v27;
    uint64_t v29 = v28;
    uint64_t v54 = swift_slowAlloc();
    uint64_t v65 = v54;
    *(_DWORD *)uint64_t v29 = 136315394;
    swift_bridgeObjectRetain();
    v62[0] = sub_24C7DE68C((uint64_t)v11, (unint64_t)v10, &v65);
    sub_24C84A1A0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 12) = 2080;
    uint64_t v53 = v29 + 14;
    swift_retain();
    uint64_t v30 = sub_24C845730();
    unint64_t v32 = v31;
    swift_release();
    v62[0] = sub_24C7DE68C(v30, v32, &v65);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    uint64_t v33 = v54;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v33, -1, -1);
    MEMORY[0x2532FCCC0](v29, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v34 = *(void *)(v3 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler);
  uint64_t v35 = (void (*)(void *, void, uint64_t))v56;
  if (v34)
  {
    uint64_t v36 = *(void *)(v3
                    + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler
                    + 8);
    uint64_t v37 = (void *)swift_allocObject();
    long long v37[2] = v34;
    uint64_t v37[3] = v36;
    v37[4] = v3;
    uint64_t v67 = &type metadata for CosmoInternalServerErrorHttpResponse;
    unint64_t v68 = sub_24C8489C0();
    LODWORD(v65) = 500;
    uint64_t v38 = v57;
    *uint64_t v8 = v57;
    v35(v8, v59, v5);
    sub_24C7D6E3C(v34);
    id v39 = v38;
    swift_retain();
    sub_24C7D6E3C(v34);
    char v40 = sub_24C849CA0();
    uint64_t result = v58(v8, v5);
    if (v40)
    {
      *(unsigned char *)(v3 + v60) = 1;
      uint64_t v41 = v67;
      unint64_t v42 = v68;
      uint64_t v43 = __swift_project_boxed_opaque_existential_1(&v65, (uint64_t)v67);
      uint64_t v63 = v41;
      uint64_t v44 = *(void *)(v42 + 8);
      uint64_t v64 = v44;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v62);
      (*((void (**)(uint64_t *, void *, ValueMetadata *))v41[-1].Description + 2))(boxed_opaque_existential_1, v43, v41);
      sub_24C7EF950((uint64_t)boxed_opaque_existential_1, (uint64_t)sub_24C848DE8, (uint64_t)v37, v61, (uint64_t)v41, v44);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
      sub_24C7D6F70(v34);
      return swift_release();
    }
    __break(1u);
  }
  else
  {
    uint64_t v67 = &type metadata for CosmoInternalServerErrorHttpResponse;
    unint64_t v68 = sub_24C8489C0();
    LODWORD(v65) = 500;
    unint64_t v46 = v57;
    *uint64_t v8 = v57;
    v35(v8, v59, v5);
    id v47 = v46;
    LOBYTE(v46) = sub_24C849CA0();
    uint64_t result = v58(v8, v5);
    if (v46)
    {
      *(unsigned char *)(v3 + v60) = 1;
      uint64_t v48 = v67;
      unint64_t v49 = v68;
      uint64_t v50 = __swift_project_boxed_opaque_existential_1(&v65, (uint64_t)v67);
      uint64_t v63 = v48;
      uint64_t v51 = *(void *)(v49 + 8);
      uint64_t v64 = v51;
      uint64_t v52 = __swift_allocate_boxed_opaque_existential_1(v62);
      (*((void (**)(uint64_t *, void *, ValueMetadata *))v48[-1].Description + 2))(v52, v50, v48);
      sub_24C7EF950((uint64_t)v52, 0, 0, v61, (uint64_t)v48, v51);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24C843614(uint64_t a1, char a2, void (*a3)(uint64_t, unint64_t, long long *, uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v7 = a2 & 1;
  uint64_t v8 = *(void *)(a5 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData);
  unint64_t v9 = *(void *)(a5 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData + 8);
  if (v9 >> 60 == 15) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = *(void *)(a5 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData);
  }
  if (v9 >> 60 == 15) {
    unint64_t v11 = 0xC000000000000000;
  }
  else {
    unint64_t v11 = *(void *)(a5 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData + 8);
  }
  long long v13 = xmmword_24C84CA80;
  char v14 = 2;
  char v15 = 1;
  sub_24C7D7304(v8, v9);
  a3(v10, v11, &v13, a1, v7);
  sub_24C7D5FEC(v10, v11);
  return sub_24C7D7C08((uint64_t)&v13, &qword_2697EECC8);
}

void sub_24C8436D4(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v8 = *a1;
  unint64_t v9 = (void *)v2[4];
  *uint64_t v7 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v10 = v9;
  LOBYTE(v9) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_26:
    swift_once();
LABEL_8:
    uint64_t v13 = sub_24C849590();
    __swift_project_value_buffer(v13, (uint64_t)qword_2697EFBE0);
    swift_retain_n();
    char v14 = sub_24C849570();
    os_log_type_t v15 = sub_24C84A110();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(void *)&long long v53 = v17;
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v18 = swift_retain();
      uint64_t v19 = sub_24C7E2D34(v18);
      unint64_t v21 = v20;
      swift_release();
      uint64_t v52 = sub_24C7DE68C(v19, v21, (uint64_t *)&v53);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      swift_retain();
      uint64_t v22 = sub_24C845730();
      unint64_t v24 = v23;
      swift_release();
      uint64_t v52 = sub_24C7DE68C(v22, v24, (uint64_t *)&v53);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v14, v15, "%s ready, awaiting request, %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v17, -1, -1);
      MEMORY[0x2532FCCC0](v16, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return;
  }
  if (!v8)
  {
    if (qword_2697EEA80 == -1) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
  unint64_t v11 = (void (*)(uint64_t *))v2[2];
  if (v11)
  {
    uint64_t v12 = *(uint64_t *)((char *)v2
                     + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler);
    if (v12
      && (*((unsigned char *)v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse) & 1) == 0)
    {
      uint64_t v25 = *(uint64_t *)((char *)v2
                       + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler
                       + 8);
      sub_24C7D6E3C(v2[2]);
      uint64_t v50 = v25;
      uint64_t v51 = (void (*)(uint64_t, unint64_t, long long *, void *, uint64_t))v12;
      sub_24C7D6E3C(v12);
      if (qword_2697EEA80 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_24C849590();
      __swift_project_value_buffer(v26, (uint64_t)qword_2697EFBE0);
      swift_retain_n();
      int v27 = sub_24C849570();
      os_log_type_t v28 = sub_24C84A110();
      int v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        *(void *)&long long v53 = v49;
        *(_DWORD *)uint64_t v30 = 136315394;
        int v48 = v29;
        uint64_t v31 = swift_retain();
        uint64_t v32 = sub_24C7E2D34(v31);
        unint64_t v34 = v33;
        swift_release();
        uint64_t v52 = sub_24C7DE68C(v32, v34, (uint64_t *)&v53);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        swift_retain();
        uint64_t v35 = sub_24C845730();
        unint64_t v37 = v36;
        swift_release();
        uint64_t v52 = sub_24C7DE68C(v35, v37, (uint64_t *)&v53);
        sub_24C84A1A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24C7BE000, v27, (os_log_type_t)v48, "%s invalidated before sending response, %s", (uint8_t *)v30, 0x16u);
        uint64_t v38 = v49;
        swift_arrayDestroy();
        MEMORY[0x2532FCCC0](v38, -1, -1);
        MEMORY[0x2532FCCC0](v30, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      uint64_t v39 = *(uint64_t *)((char *)v2
                       + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData);
      unint64_t v40 = *(uint64_t *)((char *)v2
                       + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData
                       + 8);
      if (v40 >> 60 == 15) {
        uint64_t v41 = 0;
      }
      else {
        uint64_t v41 = *(uint64_t *)((char *)v2
      }
                         + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData);
      if (v40 >> 60 == 15) {
        unint64_t v42 = 0xC000000000000000;
      }
      else {
        unint64_t v42 = *(uint64_t *)((char *)v2
      }
                         + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData
                         + 8);
      long long v53 = xmmword_24C84CA80;
      char v54 = 2;
      char v55 = 1;
      sub_24C7D7054();
      uint64_t v43 = (void *)swift_allocError();
      *(_OWORD *)uint64_t v44 = xmmword_24C84EBD0;
      *(unsigned char *)(v44 + 16) = 2;
      sub_24C7D7304(v39, v40);
      uint64_t v45 = (uint64_t)v51;
      v51(v41, v42, &v53, v43, 1);
      sub_24C7D6F70(v45);

      sub_24C7D5FEC(v41, v42);
      sub_24C7D7C08((uint64_t)&v53, &qword_2697EECC8);
    }
    else
    {
      swift_retain();
    }
    v11(v2);
    sub_24C7D6F70((uint64_t)v11);
    uint64_t v46 = v2[2];
    v2[2] = 0;
    v2[3] = 0;
    sub_24C7D6F70(v46);
  }
}

void sub_24C843D58(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (void *)((char *)v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v8 = *(void **)(v1 + 32);
  *uint64_t v7 = v8;
  int v9 = *MEMORY[0x263F8F0E0];
  id v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, *MEMORY[0x263F8F0E0], v4);
  id v100 = v8;
  LOBYTE(v8) = sub_24C849CA0();
  unint64_t v11 = *(void (**)(void *, uint64_t))(v5 + 8);
  v11(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_37:
    swift_once();
LABEL_4:
    uint64_t v18 = sub_24C849590();
    __swift_project_value_buffer(v18, (uint64_t)qword_2697EFBE0);
    swift_retain_n();
    uint64_t v19 = sub_24C849570();
    os_log_type_t v20 = sub_24C84A110();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v102[0] = v22;
      *(_DWORD *)uint64_t v21 = 136315394;
      v101[0] = sub_24C7DE68C(0xD000000000000015, 0x800000024C851240, v102);
      sub_24C84A1A0();
      *(_WORD *)(v21 + 12) = 2080;
      swift_retain();
      uint64_t v23 = sub_24C845730();
      unint64_t v25 = v24;
      swift_release();
      v101[0] = sub_24C7DE68C(v23, v25, v102);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v19, v20, "%s ignoring request, already sent response, %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v22, -1, -1);
      MEMORY[0x2532FCCC0](v21, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return;
  }
  uint64_t v97 = (uint64_t)v11;
  uint64_t v98 = v10;
  LODWORD(v99) = v9;
  uint64_t v12 = a1[2];
  unint64_t v13 = a1[3];
  char v14 = (NSObject **)(v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData);
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData);
  unint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData + 8);
  NSObject *v14 = v12;
  v14[1] = v13;
  sub_24C7D7304((uint64_t)v12, v13);
  sub_24C7D6044(v15, v16);
  uint64_t v17 = OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse))
  {
    if (qword_2697EEA80 == -1) {
      goto LABEL_4;
    }
    goto LABEL_37;
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v27 = *a1;
    os_log_t v94 = v12;
    uint64_t v95 = v27;
    uint64_t v28 = a1[1];
    uint64_t v96 = Strong;
    int v29 = (uint64_t *)(Strong + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers);
    swift_beginAccess();
    uint64_t v30 = *v29;
    if (*(void *)(v30 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_24C805780(v95, v28);
      if (v32)
      {
        uint64_t v33 = *(void *)(v30 + 56) + 32 * v31;
        unint64_t v34 = *(void (**)(void *, uint64_t, uint64_t))(v33 + 8);
        unint64_t v99 = *(void (**)(uint64_t, unint64_t, uint64_t (*)(uint64_t), uint64_t))v33;
        uint64_t v35 = *(void *)(v33 + 16);
        unint64_t v36 = *(void **)(v33 + 24);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v37 = (void *)(v2
                       + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler);
        uint64_t v38 = *(void *)(v2
                        + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler);
        *unint64_t v37 = v35;
        v37[1] = v36;
        id v100 = v36;
        swift_retain();
        sub_24C7D6F70(v38);
        if (qword_2697EEA80 != -1) {
          swift_once();
        }
        uint64_t v39 = sub_24C849590();
        __swift_project_value_buffer(v39, (uint64_t)qword_2697EFBE0);
        swift_retain_n();
        sub_24C848A68((uint64_t)a1);
        swift_retain();
        sub_24C848A68((uint64_t)a1);
        unint64_t v40 = sub_24C849570();
        os_log_type_t v41 = sub_24C84A110();
        int v42 = v41;
        BOOL v43 = os_log_type_enabled(v40, v41);
        os_log_t v44 = v94;
        if (v43)
        {
          uint64_t v45 = swift_slowAlloc();
          uint64_t v97 = swift_slowAlloc();
          v102[0] = v97;
          *(_DWORD *)uint64_t v45 = 136315650;
          LODWORD(v95) = v42;
          uint64_t v46 = swift_retain();
          uint64_t v47 = sub_24C7E2D34(v46);
          uint64_t v98 = v34;
          unint64_t v49 = v48;
          swift_release();
          v101[0] = sub_24C7DE68C(v47, v49, v102);
          sub_24C84A1A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v45 + 12) = 2080;
          sub_24C848A68((uint64_t)a1);
          uint64_t v50 = sub_24C7E0F18();
          unint64_t v52 = v51;
          sub_24C848AB8((uint64_t)a1);
          v101[0] = sub_24C7DE68C(v50, v52, v102);
          sub_24C84A1A0();
          swift_bridgeObjectRelease();
          sub_24C848AB8((uint64_t)a1);
          sub_24C848AB8((uint64_t)a1);
          *(_WORD *)(v45 + 22) = 2080;
          swift_retain();
          uint64_t v53 = sub_24C845730();
          unint64_t v55 = v54;
          swift_release();
          v101[0] = sub_24C7DE68C(v53, v55, v102);
          sub_24C84A1A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24C7BE000, v40, (os_log_type_t)v95, "%s received request=%s, %s", (uint8_t *)v45, 0x20u);
          uint64_t v56 = v97;
          swift_arrayDestroy();
          MEMORY[0x2532FCCC0](v56, -1, -1);
          MEMORY[0x2532FCCC0](v45, -1, -1);
        }
        else
        {
          swift_release_n();
          sub_24C848AB8((uint64_t)a1);
          sub_24C848AB8((uint64_t)a1);

          swift_release_n();
        }
        if (v13 >> 60 == 15) {
          uint64_t v85 = 0;
        }
        else {
          uint64_t v85 = (uint64_t)v44;
        }
        if (v13 >> 60 == 15) {
          unint64_t v86 = 0xC000000000000000;
        }
        else {
          unint64_t v86 = v13;
        }
        uint64_t v87 = swift_allocObject();
        swift_weakInit();
        uint64_t v88 = swift_allocObject();
        *(void *)(v88 + 16) = v87;
        long long v89 = *((_OWORD *)a1 + 1);
        *(_OWORD *)(v88 + 24) = *(_OWORD *)a1;
        *(_OWORD *)(v88 + 40) = v89;
        *(void *)(v88 + 56) = a1[4];
        sub_24C7D7304((uint64_t)v44, v13);
        sub_24C848A68((uint64_t)a1);
        swift_retain();
        v99(v85, v86, sub_24C848BF4, v88);
        swift_release();
        swift_release();
        swift_release();
        sub_24C7D5FEC(v85, v86);
        swift_release();
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    unint64_t v93 = v28;
    if (qword_2697EEA80 != -1) {
      swift_once();
    }
    uint64_t v65 = sub_24C849590();
    __swift_project_value_buffer(v65, (uint64_t)qword_2697EFBE0);
    sub_24C848A68((uint64_t)a1);
    unint64_t v66 = sub_24C849570();
    os_log_type_t v67 = sub_24C84A0F0();
    int v68 = v67;
    os_log_t v94 = v66;
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v69 = swift_slowAlloc();
      int v91 = v68;
      uint64_t v70 = v69;
      uint64_t v92 = swift_slowAlloc();
      v102[0] = v92;
      *(_DWORD *)uint64_t v70 = 136315394;
      v101[0] = sub_24C7DE68C(0xD000000000000015, 0x800000024C851240, v102);
      sub_24C84A1A0();
      *(_WORD *)(v70 + 12) = 2080;
      v90[1] = v70 + 14;
      unint64_t v71 = v93;
      swift_bridgeObjectRetain();
      v101[0] = sub_24C7DE68C(v95, v71, v102);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      sub_24C848AB8((uint64_t)a1);
      os_log_t v72 = v94;
      _os_log_impl(&dword_24C7BE000, v94, (os_log_type_t)v91, "%s no handler found for path=%s", (uint8_t *)v70, 0x16u);
      uint64_t v73 = v92;
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v73, -1, -1);
      MEMORY[0x2532FCCC0](v70, -1, -1);
    }
    else
    {
      sub_24C848AB8((uint64_t)a1);
    }
    uint64_t v74 = v99;
    unint64_t v76 = (void (*)(void *, uint64_t))v97;
    BOOL v75 = v98;
    uint64_t v77 = v100;
    uint64_t v103 = &type metadata for CosmoNotFoundHttpResponse;
    unint64_t v104 = sub_24C848B08();
    LODWORD(v102[0]) = 404;
    *uint64_t v7 = v77;
    v75(v7, v74, v4);
    id v78 = v77;
    LOBYTE(v74) = sub_24C849CA0();
    v76(v7, v4);
    if (v74)
    {
      *(unsigned char *)(v2 + v17) = 1;
      uint64_t v79 = *(void *)(v2 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_stream);
      os_log_t v80 = v103;
      unint64_t v81 = v104;
      unint64_t v82 = __swift_project_boxed_opaque_existential_1(v102, (uint64_t)v103);
      v101[3] = (uint64_t)v80;
      uint64_t v83 = *(void *)(v81 + 8);
      v101[4] = v83;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v101);
      (*((void (**)(uint64_t *, void *, ValueMetadata *))v80[-1].Description + 2))(boxed_opaque_existential_1, v82, v80);
      sub_24C7EF950((uint64_t)boxed_opaque_existential_1, 0, 0, v79, (uint64_t)v80, v83);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v101);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
LABEL_35:
      swift_release();
      return;
    }
    __break(1u);
    goto LABEL_39;
  }
  if (qword_2697EEA80 != -1) {
LABEL_39:
  }
    swift_once();
  uint64_t v57 = sub_24C849590();
  __swift_project_value_buffer(v57, (uint64_t)qword_2697EFBE0);
  swift_retain_n();
  uint64_t v58 = sub_24C849570();
  os_log_type_t v59 = sub_24C84A0F0();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    v102[0] = v61;
    *(_DWORD *)uint64_t v60 = 136315394;
    v101[0] = sub_24C7DE68C(0xD000000000000015, 0x800000024C851240, v102);
    sub_24C84A1A0();
    *(_WORD *)(v60 + 12) = 2080;
    swift_retain();
    uint64_t v62 = sub_24C845730();
    unint64_t v64 = v63;
    swift_release();
    v101[0] = sub_24C7DE68C(v62, v64, v102);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v61, -1, -1);
    MEMORY[0x2532FCCC0](v60, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  sub_24C842D60(0xD000000000000028, 0x800000024C851210);
}

uint64_t sub_24C8449E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24C849BD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24C849BF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    v18[1] = *(void *)(result + 32);
    sub_24C7D7BA4(a1, (uint64_t)v20, &qword_2697EECC8);
    uint64_t v15 = swift_allocObject();
    sub_24C848C80((uint64_t)v20, v15 + 16);
    long long v16 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v15 + 72) = *(_OWORD *)a3;
    *(void *)(v15 + 64) = v14;
    *(_OWORD *)(v15 + 88) = v16;
    *(void *)(v15 + 104) = *(void *)(a3 + 32);
    aBlock[4] = sub_24C848CE8;
    void aBlock[5] = v15;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_24C7C25B4;
    aBlock[3] = &block_descriptor_61;
    uint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    sub_24C848A68(a3);
    sub_24C849BE0();
    SecKeyRef v18[2] = MEMORY[0x263F8EE78];
    sub_24C848FE4((unint64_t *)&unk_2697EF0A0, MEMORY[0x263F8F030]);
    v18[0] = v9;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EEB10);
    sub_24C7D6170((unint64_t *)&unk_2697EF0B0, (uint64_t *)&unk_2697EEB10);
    sub_24C84A1F0();
    MEMORY[0x2532FBFB0](0, v12, v8, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, void))(v10 + 8))(v12, v18[0]);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24C844D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24C7D7BA4(a1, (uint64_t)&v39, &qword_2697EECC8);
  if (v41)
  {
    long long v6 = v39;
    unsigned __int8 v7 = v40;
    if (v40 < 2u)
    {
LABEL_4:
      unint64_t v37 = &type metadata for CosmoInternalServerErrorHttpResponse;
      unint64_t v38 = sub_24C8489C0();
      sub_24C7D76B0(v6, *((uint64_t *)&v6 + 1), v7);
      int v8 = 500;
    }
    else
    {
      switch((uint64_t)v39)
      {
        case 4:
          unint64_t v37 = &type metadata for CosmoBadRequestHttpResponse;
          unint64_t v38 = sub_24C848A14();
          int v8 = 400;
          break;
        case 5:
          unint64_t v37 = &type metadata for CosmoNotFoundHttpResponse;
          unint64_t v38 = sub_24C848B08();
          int v8 = 404;
          break;
        default:
          goto LABEL_4;
      }
    }
    LODWORD(v36[0]) = v8;
    if (qword_2697EEA80 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24C849590();
    __swift_project_value_buffer(v9, (uint64_t)qword_2697EFBE0);
    sub_24C7D76E0((uint64_t)v36, (uint64_t)v35);
    swift_retain_n();
    uint64_t v10 = sub_24C849570();
    os_log_type_t v11 = sub_24C84A110();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v34 = v13;
      *(_DWORD *)uint64_t v12 = 136315394;
      sub_24C7D76E0((uint64_t)v35, (uint64_t)v33);
      sub_24C7D7BA4((uint64_t)v33, (uint64_t)&v31, &qword_2697EECD8);
      uint64_t v28 = v13;
      if (v32)
      {
        sub_24C7D76C8(&v31, (uint64_t)v30);
        sub_24C7D76E0((uint64_t)v30, (uint64_t)v29);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECD0);
        uint64_t v14 = sub_24C849ED0();
        unint64_t v16 = v15;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      }
      else
      {
        unint64_t v16 = 0xE300000000000000;
        uint64_t v14 = 7104878;
      }
      sub_24C7D7C08((uint64_t)v33, &qword_2697EECD8);
      v33[0] = sub_24C7DE68C(v14, v16, &v34);
      sub_24C84A1A0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      *(_WORD *)(v12 + 12) = 2080;
      swift_retain();
      uint64_t v23 = sub_24C845730();
      unint64_t v25 = v24;
      swift_release();
      v33[0] = sub_24C7DE68C(v23, v25, &v34);
      sub_24C84A1A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24C7BE000, v10, v11, "HTTP stream sending response=%s, %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2532FCCC0](v28, -1, -1);
      MEMORY[0x2532FCCC0](v12, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);

      swift_release_n();
    }
    sub_24C7D7BA4(a1, (uint64_t)v35, &qword_2697EECC8);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    long long v26 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v17 + 24) = *(_OWORD *)a3;
    *(_OWORD *)(v17 + 40) = v26;
    *(void *)(v17 + 56) = *(void *)(a3 + 32);
    sub_24C848C80((uint64_t)v35, v17 + 64);
    uint64_t v19 = v37;
    uint64_t v20 = v38;
    uint64_t v21 = __swift_project_boxed_opaque_existential_1(v36, (uint64_t)v37);
    swift_retain();
    sub_24C848A68(a3);
    uint64_t v22 = sub_24C848CFC;
  }
  else
  {
    sub_24C7D76C8(&v39, (uint64_t)v36);
    sub_24C7D7BA4(a1, (uint64_t)v35, &qword_2697EECC8);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    long long v18 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v17 + 24) = *(_OWORD *)a3;
    *(_OWORD *)(v17 + 40) = v18;
    *(void *)(v17 + 56) = *(void *)(a3 + 32);
    sub_24C848C80((uint64_t)v35, v17 + 64);
    uint64_t v19 = v37;
    uint64_t v20 = v38;
    uint64_t v21 = __swift_project_boxed_opaque_existential_1(v36, (uint64_t)v37);
    swift_retain();
    sub_24C848A68(a3);
    uint64_t v22 = sub_24C84904C;
  }
  sub_24C847D10((uint64_t)v21, (uint64_t)v22, v17, a2, (uint64_t)v19, v20);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

uint64_t sub_24C8451D4(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3
                                                                                   + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler);
  if (v5)
  {
    uint64_t v7 = result;
    uint64_t v8 = a2 & 1;
    uint64_t v9 = *(void *)(a4 + 16);
    unint64_t v10 = *(void *)(a4 + 24);
    if (v10 >> 60 == 15) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = *(void *)(a4 + 16);
    }
    if (v10 >> 60 == 15) {
      unint64_t v12 = 0xC000000000000000;
    }
    else {
      unint64_t v12 = *(void *)(a4 + 24);
    }
    sub_24C7D6E3C(*(void *)(a3
                            + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler));
    sub_24C7D7304(v9, v10);
    v5(v11, v12, a5, v7, v8);
    sub_24C7D6F70((uint64_t)v5);
    return sub_24C7D5FEC(v11, v12);
  }
  return result;
}

uint64_t sub_24C8452C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24C849C80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)a1;
  uint64_t v8 = *(void **)(a1 + 8);
  char v10 = *(unsigned char *)(a1 + 16);
  uint64_t v11 = *(void **)(v2 + 32);
  *uint64_t v7 = v11;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F0E0], v4);
  id v12 = v11;
  LOBYTE(v11) = sub_24C849CA0();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v11)
  {
    if (qword_2697EEA80 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v13 = sub_24C849590();
  __swift_project_value_buffer(v13, (uint64_t)qword_2697EFBE0);
  swift_retain_n();
  sub_24C7ED424(v9, v8, v10);
  swift_retain();
  sub_24C7ED424(v9, v8, v10);
  uint64_t v14 = sub_24C849570();
  os_log_type_t v15 = sub_24C84A0F0();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = v35;
    *(_DWORD *)uint64_t v17 = 136315650;
    HIDWORD(v34) = v16;
    uint64_t v18 = swift_retain();
    uint64_t v19 = sub_24C7E2D34(v18);
    unint64_t v21 = v20;
    swift_release();
    v37[0] = sub_24C7DE68C(v19, v21, &v36);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    v37[0] = v9;
    v37[1] = v8;
    char v38 = v10;
    sub_24C7ED424(v9, v8, v10);
    uint64_t v22 = sub_24C849ED0();
    v37[0] = sub_24C7DE68C(v22, v23, &v36);
    sub_24C84A1A0();
    swift_bridgeObjectRelease();
    sub_24C7ED45C(v9, v8, v10);
    sub_24C7ED45C(v9, v8, v10);
    *(_WORD *)(v17 + 22) = 2080;
    swift_retain();
    uint64_t v24 = sub_24C845730();
    unint64_t v26 = v25;
    swift_release();
    v37[0] = sub_24C7DE68C(v24, v26, &v36);
    sub_24C84A1A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24C7BE000, v14, BYTE4(v34), "%s encountered error=%s while receiving request, %s", (uint8_t *)v17, 0x20u);
    uint64_t v27 = v35;
    swift_arrayDestroy();
    MEMORY[0x2532FCCC0](v27, -1, -1);
    MEMORY[0x2532FCCC0](v17, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_24C7ED45C(v9, v8, v10);
    sub_24C7ED45C(v9, v8, v10);

    swift_release_n();
  }
  if ((v10 - 1) >= 2u)
  {
    int v28 = 400;
    int v29 = &type metadata for CosmoBadRequestHttpResponse;
    unint64_t v30 = sub_24C848A14();
  }
  else
  {
    int v28 = 500;
    int v29 = &type metadata for CosmoInternalServerErrorHttpResponse;
    unint64_t v30 = sub_24C8489C0();
  }
  uint64_t v31 = v30;
  long long v39 = v29;
  unint64_t v40 = v30;
  LODWORD(v37[0]) = v28;
  uint64_t v32 = __swift_project_boxed_opaque_existential_1(v37, (uint64_t)v29);
  sub_24C847D10((uint64_t)v32, 0, 0, v2, (uint64_t)v29, v31);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

uint64_t sub_24C845730()
{
  return 0;
}

uint64_t sub_24C84591C()
{
  sub_24C7D6F70(*(void *)(v0 + 16));

  uint64_t v1 = v0 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_id;
  uint64_t v2 = sub_24C849440();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_weakDestroy();
  swift_release();
  sub_24C7D6F70(*(void *)(v0
                          + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_completionHandler));
  sub_24C7D6044(*(void *)(v0 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData), *(void *)(v0 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_requestData + 8));
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_24C845A14()
{
  return sub_24C849400();
}

uint64_t sub_24C845A30()
{
  return sub_24C845730();
}

uint64_t sub_24C845A54(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_24C8491E0();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_24C849210();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_24C849200();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_24C847B00(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

uint64_t sub_24C845B04(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EFC88);
  char v40 = a2;
  uint64_t v6 = sub_24C84A2E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v39 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v13++, 1)) {
      goto LABEL_40;
    }
    if (v13 >= v38) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v39 + 8 * v13);
    if (!v24)
    {
      int64_t v25 = v13 + 1;
      if (v13 + 1 >= v38)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v37;
        if ((v40 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v24 = *(void *)(v39 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          int64_t v13 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            break;
          }
          if (v13 >= v38) {
            goto LABEL_31;
          }
          unint64_t v24 = *(void *)(v39 + 8 * v13);
          ++v25;
          if (v24) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_21:
    unint64_t v26 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v5 + 56) + 32 * v21;
    uint64_t v30 = *(void *)v29;
    long long v41 = *(_OWORD *)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 24);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    sub_24C84A4E0();
    sub_24C849F50();
    uint64_t result = sub_24C84A510();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v16 == v33;
        if (v16 == v33) {
          unint64_t v16 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v11 + 8 * v16);
      }
      while (v35 == -1);
      unint64_t v17 = __clz(__rbit64(~v35)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v28;
    v18[1] = v27;
    uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
    *(void *)uint64_t v19 = v30;
    *(_OWORD *)(v19 + 8) = v41;
    *(void *)(v19 + 24) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24C845E30(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EFC98);
  uint64_t result = sub_24C84A2E0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    uint64_t v30 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        if (__OFADD__(v8++, 1)) {
          goto LABEL_40;
        }
        if (v8 >= v13)
        {
LABEL_31:
          if ((a2 & 1) == 0)
          {
            uint64_t result = swift_release();
            uint64_t v3 = v30;
            goto LABEL_38;
          }
          uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
          if (v29 >= 64) {
            bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          }
          else {
            *uint64_t v9 = -1 << v29;
          }
          uint64_t v3 = v30;
          *(void *)(v5 + 16) = 0;
          break;
        }
        unint64_t v22 = v9[v8];
        if (!v22)
        {
          int64_t v23 = v8 + 1;
          if (v8 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v22 = v9[v23];
          if (!v22)
          {
            while (1)
            {
              int64_t v8 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                break;
              }
              if (v8 >= v13) {
                goto LABEL_31;
              }
              unint64_t v22 = v9[v8];
              ++v23;
              if (v22) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
            return result;
          }
          ++v8;
        }
LABEL_20:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v24 = *(unsigned int *)(*(void *)(v5 + 48) + 4 * v20);
      long long v31 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = MEMORY[0x2532FC320](*(void *)(v7 + 40), v24, 4);
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v18) = v24;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24C8460E0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = sub_24C8492C0();
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  unint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24C849440();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EFC90);
  int v50 = a2;
  uint64_t v12 = sub_24C84A2E0();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_39;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  os_log_t v44 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int v42 = v2;
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v45 = v5 + 16;
  uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v48 = v5;
  uint64_t v49 = v8;
  unint64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  unint64_t v51 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v21++, 1)) {
      goto LABEL_41;
    }
    if (v21 >= v43) {
      break;
    }
    unint64_t v26 = v44;
    unint64_t v27 = v44[v21];
    if (!v27)
    {
      int64_t v28 = v21 + 1;
      if (v21 + 1 >= v43)
      {
LABEL_32:
        swift_release();
        uint64_t v3 = v42;
        if ((v50 & 1) == 0) {
          goto LABEL_39;
        }
        goto LABEL_35;
      }
      unint64_t v27 = v44[v28];
      if (!v27)
      {
        while (1)
        {
          int64_t v21 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            break;
          }
          if (v21 >= v43) {
            goto LABEL_32;
          }
          unint64_t v27 = v44[v21];
          ++v28;
          if (v27) {
            goto LABEL_19;
          }
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v21;
    }
LABEL_19:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_20:
    uint64_t v29 = *(void *)(v49 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v50)
    {
      (*v18)(v10, v30, v7);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      (*v46)(v10, v30, v7);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_24C848FE4(&qword_2697EF030, MEMORY[0x263F07508]);
    uint64_t result = sub_24C849E20();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v7);
    uint64_t result = (*v51)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v26 = v44;
  if ((v50 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_35:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_24C8465C4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_24C849440();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EFCA0);
  int v48 = a2;
  uint64_t v10 = sub_24C84A2E0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  unint64_t v51 = v8;
  uint64_t v52 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  os_log_t v44 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int v42 = v2;
  int64_t v43 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v49 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v46 = v6;
  for (i = v9; ; uint64_t v9 = i)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v43) {
      break;
    }
    unint64_t v24 = v44;
    unint64_t v25 = v44[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v25 = v44[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v44[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v43) {
              goto LABEL_34;
            }
            unint64_t v25 = v44[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v48)
    {
      (*v49)(v51, v28, v52);
      uint64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 24 * v22);
      uint64_t v30 = v29[1];
      uint64_t v50 = *v29;
      uint64_t v31 = v29[2];
    }
    else
    {
      (*v45)(v51, v28, v52);
      uint64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 24 * v22);
      uint64_t v30 = v32[1];
      uint64_t v50 = *v32;
      uint64_t v31 = v32[2];
      swift_bridgeObjectRetain();
    }
    sub_24C848FE4(&qword_2697EF030, MEMORY[0x263F07508]);
    uint64_t result = sub_24C849E20();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v49)(*(void *)(v11 + 48) + v27 * v19, v51, v52);
    unint64_t v20 = (void *)(*(void *)(v11 + 56) + 24 * v19);
    void *v20 = v50;
    v20[1] = v30;
    void v20[2] = v31;
    ++*(void *)(v11 + 16);
    uint64_t v6 = v46;
  }
  swift_release();
  uint64_t v3 = v42;
  unint64_t v24 = v44;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_24C846A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_24C805780(a5, a6);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_24C846FD8();
LABEL_7:
    int64_t v23 = (void *)*v8;
    if (v21)
    {
LABEL_8:
      unint64_t v24 = (void *)(v23[7] + 32 * v17);
      *unint64_t v24 = a1;
      v24[1] = a2;
      void v24[2] = a3;
      void v24[3] = a4;
      swift_release();
      return swift_release();
    }
    goto LABEL_13;
  }
  sub_24C845B04(v20, a7 & 1);
  unint64_t v26 = sub_24C805780(a5, a6);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_19:
    uint64_t result = sub_24C84A460();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  int64_t v23 = (void *)*v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_13:
  v23[(v17 >> 6) + 8] |= 1 << v17;
  unint64_t v28 = (uint64_t *)(v23[6] + 16 * v17);
  *unint64_t v28 = a5;
  v28[1] = a6;
  uint64_t v29 = (void *)(v23[7] + 32 * v17);
  *uint64_t v29 = a1;
  v29[1] = a2;
  v29[2] = a3;
  v29[3] = a4;
  uint64_t v30 = v23[2];
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  void v23[2] = v32;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24C846BE0(uint64_t a1, uint64_t a2, unsigned int a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24C8057F8(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 < result || (a4 & 1) == 0)
  {
    if (v17 < result || (a4 & 1) != 0)
    {
      sub_24C845E30(result, a4 & 1);
      uint64_t result = sub_24C8057F8(a3);
      if ((v16 & 1) != (v20 & 1))
      {
LABEL_17:
        uint64_t result = sub_24C84A460();
        __break(1u);
        return result;
      }
      unint64_t v12 = result;
      uint64_t v18 = (void *)*v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t result = (uint64_t)sub_24C8471A8();
  }
  uint64_t v18 = (void *)*v5;
  if ((v16 & 1) == 0)
  {
LABEL_13:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_DWORD *)(v18[6] + 4 * v12) = a3;
    char v21 = (void *)(v18[7] + 16 * v12);
    *char v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      SecKeyRef v18[2] = v24;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  BOOL v19 = (void *)(v18[7] + 16 * v12);
  void *v19 = a1;
  v19[1] = a2;
  return swift_release();
}

uint64_t sub_24C846D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v10 = sub_24C849440();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v14 = (void *)*v5;
  unint64_t v16 = sub_24C805840(a4);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v6;
    if (v20)
    {
LABEL_8:
      BOOL v23 = (uint64_t *)(v22[7] + 24 * v16);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v25 = v28;
      *BOOL v23 = a1;
      v23[1] = v25;
      void v23[2] = v29;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_24C8476DC();
    goto LABEL_7;
  }
  sub_24C8465C4(v19, a5 & 1);
  unint64_t v26 = sub_24C805840(a4);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_14:
    uint64_t result = sub_24C84A460();
    __break(1u);
    return result;
  }
  unint64_t v16 = v26;
  uint64_t v22 = *v6;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  return sub_24C846F04(v16, (uint64_t)v13, a1, v28, v29, v22);
}

uint64_t sub_24C846F04(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a6[6];
  uint64_t v13 = sub_24C849440();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  char v15 = (void *)(a6[7] + 24 * a1);
  *char v15 = a3;
  v15[1] = a4;
  void v15[2] = a5;
  uint64_t v16 = a6[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a6[2] = v18;
  }
  return result;
}

void *sub_24C846FD8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EFC88);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24C84A2D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    if (!v28) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    BOOL v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 24);
    uint64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    long long v25 = *(_OWORD *)(v21 + 8);
    *uint64_t v24 = v19;
    v24[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(_OWORD *)(v26 + 8) = v25;
    *(void *)(v26 + 24) = v23;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v29 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_24C8471A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EFC98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24C84A2D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    if (!v21) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

char *sub_24C84733C()
{
  uint64_t v1 = v0;
  uint64_t v39 = sub_24C8492C0();
  uint64_t v43 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  BOOL v38 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_24C849440();
  uint64_t v42 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  char v36 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2697EFC90);
  uint64_t v4 = *v0;
  uint64_t v5 = sub_24C84A2D0();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = (char *)swift_release();
LABEL_25:
    *uint64_t v1 = v6;
    return result;
  }
  uint64_t result = (char *)(v5 + 64);
  uint64_t v8 = (char *)(v4 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  uint64_t v30 = v1;
  uint64_t v31 = v4 + 64;
  if (v6 != v4 || result >= &v8[8 * v9]) {
    uint64_t result = (char *)memmove(result, v8, 8 * v9);
  }
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(v4 + 16);
  uint64_t v40 = v4;
  uint64_t v41 = v6;
  *(void *)(v6 + 16) = v11;
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  int64_t v44 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v15 = v43;
  uint64_t v35 = v42 + 16;
  uint64_t v16 = v42;
  uint64_t v33 = v42 + 32;
  uint64_t v34 = v43 + 16;
  uint64_t v32 = v43 + 32;
  int v17 = v36;
  uint64_t v18 = v38;
  uint64_t v19 = v41;
  while (1)
  {
    if (v14)
    {
      uint64_t v45 = (v14 - 1) & v14;
      unint64_t v20 = __clz(__rbit64(v14)) | (v10 << 6);
      uint64_t v21 = v40;
      goto LABEL_9;
    }
    BOOL v27 = __OFADD__(v10++, 1);
    uint64_t v21 = v40;
    if (v27) {
      goto LABEL_27;
    }
    if (v10 >= v44)
    {
LABEL_24:
      uint64_t result = (char *)swift_release();
      uint64_t v1 = v30;
      uint64_t v6 = v41;
      goto LABEL_25;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v10);
    if (!v28) {
      break;
    }
LABEL_21:
    uint64_t v45 = (v28 - 1) & v28;
    unint64_t v20 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v16 + 72) * v20;
    uint64_t v23 = v37;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v17, *(void *)(v21 + 48) + v22, v37);
    unint64_t v24 = *(void *)(v15 + 72) * v20;
    unint64_t v25 = *(void *)(v21 + 56) + v24;
    uint64_t v26 = v39;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v18, v25, v39);
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(void *)(v19 + 48) + v22, v17, v23);
    uint64_t result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(void *)(v19 + 56) + v24, v18, v26);
    unint64_t v14 = v45;
  }
  int64_t v29 = v10 + 1;
  if (v10 + 1 >= v44) {
    goto LABEL_24;
  }
  unint64_t v28 = *(void *)(v31 + 8 * v29);
  if (v28)
  {
    ++v10;
    goto LABEL_21;
  }
  uint64_t v6 = v41;
  while (1)
  {
    int64_t v10 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v10 >= v44)
    {
      uint64_t result = (char *)swift_release();
      uint64_t v1 = v30;
      goto LABEL_25;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v10);
    ++v29;
    if (v28) {
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24C8476DC()
{
  uint64_t v40 = sub_24C849440();
  uint64_t v42 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v39 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EFCA0);
  uint64_t v34 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24C84A2D0();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v43 = v3;
  if (!v4)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v32 = v43;
    uint64_t v31 = v34;
LABEL_25:
    *uint64_t v31 = v32;
    return result;
  }
  uint64_t v5 = v3;
  uint64_t result = (void *)(v3 + 64);
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
  {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
    uint64_t v5 = v43;
  }
  int64_t v8 = 0;
  *(void *)(v5 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v41 = v2;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 64);
  uint64_t v35 = v2 + 64;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v43;
  uint64_t v37 = v42 + 32;
  uint64_t v38 = v42 + 16;
  uint64_t v13 = v42;
  unint64_t v14 = v39;
  uint64_t v15 = v40;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v44 = v8;
      unint64_t v17 = v16 | (v8 << 6);
      uint64_t v18 = v41;
      goto LABEL_9;
    }
    int64_t v27 = v8 + 1;
    uint64_t v18 = v41;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v36) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v35 + 8 * v27);
    int64_t v29 = v8 + 1;
    if (!v28)
    {
      int64_t v29 = v27 + 1;
      if (v27 + 1 >= v36) {
        goto LABEL_23;
      }
      unint64_t v28 = *(void *)(v35 + 8 * v29);
      if (!v28) {
        break;
      }
    }
LABEL_22:
    unint64_t v11 = (v28 - 1) & v28;
    int64_t v44 = v29;
    unint64_t v17 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v13 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v14, *(void *)(v18 + 48) + v19, v15);
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v21 = 24 * v17;
    unint64_t v22 = (uint64_t *)(v20 + 24 * v17);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v25 = v22[2];
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v12 + 48) + v19, v14, v15);
    uint64_t v26 = (void *)(*(void *)(v12 + 56) + v21);
    *uint64_t v26 = v23;
    v26[1] = v24;
    long long v26[2] = v25;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    int64_t v8 = v44;
  }
  int64_t v30 = v27 + 2;
  if (v30 >= v36)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v31 = v34;
    uint64_t v32 = v43;
    goto LABEL_25;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v30);
  if (v28)
  {
    int64_t v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v29 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v29 >= v36) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v35 + 8 * v29);
    ++v30;
    if (v28) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24C8479D0(uint64_t a1, unint64_t a2)
{
  sub_24C7D60D0(a1, a2);
  sub_24C847B54(a1, a2);
  sub_24C7D5FEC(a1, a2);
  uint64_t v4 = sub_24C849F30();
  swift_release();
  return v4;
}

uint64_t sub_24C847A48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24C849F30();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_24C847A84(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24C84A2C0();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x2532FC0B0);
}

void *sub_24C847B00(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

void *sub_24C847B54(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_24C849370();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = (void *)MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2697EEF50);
          int64_t v8 = (void *)swift_allocObject();
          size_t v12 = _swift_stdlib_malloc_size(v8);
          v8[2] = v9;
          void v8[3] = 2 * v12 - 64;
        }
        sub_24C7D60D0(a1, a2);
        uint64_t v13 = sub_24C8492E0();
        sub_24C7D5FEC(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x24C847D00);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_24C847D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_24C849C80();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (uint64_t *)((char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_1, a1, a5);
  unint64_t v17 = *(void **)(a4 + 32);
  *uint64_t v15 = v17;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F0E0], v12);
  id v18 = v17;
  LOBYTE(v17) = sub_24C849CA0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v17)
  {
    *(unsigned char *)(a4 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_sentResponse) = 1;
    uint64_t v20 = *(void *)(a4 + OBJC_IVAR____TtC5CosmoP33_0223C41AA06A946641CC9494FD9F743D15PendingResponse_stream);
    uint64_t v21 = v28;
    uint64_t v22 = v29;
    uint64_t v23 = __swift_project_boxed_opaque_existential_1(v27, v28);
    void v26[3] = v21;
    uint64_t v24 = *(void *)(v22 + 8);
    v26[4] = v24;
    uint64_t v25 = __swift_allocate_boxed_opaque_existential_1(v26);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v25, v23, v21);
    sub_24C7EF950((uint64_t)v25, a2, a3, v20, v21, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_24C847F24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v27 = a3;
  uint64_t v9 = type metadata accessor for NetworkDescriptor();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24C84A150();
  uint64_t v25 = *(void *)(v12 - 8);
  uint64_t v26 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24C84A120();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_24C849BF0();
  MEMORY[0x270FA5388](v16 - 8);
  void v4[2] = 0;
  v4[3] = 0;
  *(void *)((char *)v4 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_handlers) = MEMORY[0x263F8EE80];
  *((unsigned char *)v4 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_ready) = 0;
  *((unsigned char *)v4 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_terminated) = 0;
  *(void *)((char *)v4 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_acceptedStreamCount) = 0;
  uint64_t v17 = MEMORY[0x263F8EE78];
  *(void *)((char *)v4 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_activeResponses) = MEMORY[0x263F8EE78];
  void v4[4] = a1;
  v4[5] = a2;
  if (a4)
  {
    id v18 = a4;
  }
  else
  {
    v24[1] = sub_24C7D5EF8();
    sub_24C849BE0();
    uint64_t v28 = v17;
    sub_24C848FE4((unint64_t *)&unk_2697EEAE0, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2697EF330);
    sub_24C7D6170(&qword_2697EEAF0, (uint64_t *)&unk_2697EF330);
    sub_24C84A1F0();
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v14, *MEMORY[0x263F8F130], v26);
    id v18 = (void *)sub_24C84A170();
  }
  v5[6] = v18;
  uint64_t v19 = v27;
  sub_24C7F5C84(v27, (uint64_t)v5 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_descriptor);
  sub_24C7F5C84(v19, (uint64_t)v11);
  type metadata accessor for CosmoListener();
  uint64_t v20 = (_OWORD *)swift_allocObject();
  v20[1] = 0u;
  void v20[2] = 0u;
  v20[3] = 0u;
  *(void *)((char *)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_listener) = 0;
  *((unsigned char *)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_restarting) = 0;
  sub_24C7F5C84((uint64_t)v11, (uint64_t)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_descriptor);
  id v21 = a4;
  id v22 = v18;
  sub_24C7F5BE0((uint64_t)v11);
  *(void *)((char *)v20 + OBJC_IVAR____TtC5Cosmo13CosmoListener_queue) = v22;
  sub_24C7F5BE0(v19);
  *(void *)((char *)v5 + OBJC_IVAR____TtC5Cosmo25CosmoMultiplexChannelHost_listener) = v20;
  return v5;
}

uint64_t sub_24C8482C8()
{
  return sub_24C83F7D4(v0);
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

void sub_24C8482E8()
{
}

uint64_t sub_24C848304()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 64)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 80, 7);
}

uint64_t sub_24C848354()
{
  return sub_24C84072C(v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[2], v0[3]);
}

unint64_t sub_24C84836C()
{
  unint64_t result = qword_2697EFC18;
  if (!qword_2697EFC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFC18);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CosmoMultiplexChannelHost.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24C848494);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoMultiplexChannelHost.State()
{
  return &type metadata for CosmoMultiplexChannelHost.State;
}

uint64_t sub_24C8484CC()
{
  return type metadata accessor for CosmoMultiplexChannelHost(0);
}

uint64_t type metadata accessor for CosmoMultiplexChannelHost(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EFC20);
}

uint64_t sub_24C8484F4()
{
  uint64_t result = type metadata accessor for NetworkDescriptor();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CosmoMultiplexChannelHost(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CosmoMultiplexChannelHost);
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.listenerStateChangedCallback.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.listenerStateChangedCallback.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.listenerStateChangedCallback.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.__allocating_init(name:descriptor:queue:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of CosmoMultiplexChannelHost.respond<A>(for:handler:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t sub_24C8486FC()
{
  return type metadata accessor for PendingResponse(0);
}

uint64_t type metadata accessor for PendingResponse(uint64_t a1)
{
  return sub_24C7DF000(a1, (uint64_t *)&unk_2697EFC60);
}

uint64_t sub_24C848724()
{
  uint64_t result = sub_24C849440();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for CosmoMultiplexChannelHost.Handler()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for CosmoMultiplexChannelHost.Handler(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CosmoMultiplexChannelHost.Handler(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CosmoMultiplexChannelHost.Handler(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CosmoMultiplexChannelHost.Handler(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CosmoMultiplexChannelHost.Handler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CosmoMultiplexChannelHost.Handler()
{
  return &type metadata for CosmoMultiplexChannelHost.Handler;
}

unint64_t sub_24C8489C0()
{
  unint64_t result = qword_2697EFC70;
  if (!qword_2697EFC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFC70);
  }
  return result;
}

unint64_t sub_24C848A14()
{
  unint64_t result = qword_2697EFC78;
  if (!qword_2697EFC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFC78);
  }
  return result;
}

uint64_t sub_24C848A68(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_24C7D7304(v2, v3);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_24C848AB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_24C7D6044(v2, v3);
  swift_unknownObjectRelease();
  return a1;
}

unint64_t sub_24C848B08()
{
  unint64_t result = qword_2697EFC80;
  if (!qword_2697EFC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2697EFC80);
  }
  return result;
}

uint64_t sub_24C848B5C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24C848B94()
{
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 48);
  if (v1 >> 60 != 15) {
    sub_24C7D5FEC(*(void *)(v0 + 40), v1);
  }
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24C848BF4(uint64_t a1)
{
  return sub_24C8449E4(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_24C848C00()
{
  if (*(unsigned char *)(v0 + 56)) {
    sub_24C7D76B0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  }
  else {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 96);
  if (v1 >> 60 != 15) {
    sub_24C7D5FEC(*(void *)(v0 + 88), v1);
  }
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_24C848C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2697EECC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24C848CE8()
{
  return sub_24C844D0C(v0 + 16, *(void *)(v0 + 64), v0 + 72);
}

uint64_t sub_24C848CFC(uint64_t a1, char a2)
{
  return sub_24C8451D4(a1, a2 & 1, *(void *)(v2 + 16), v2 + 24, v2 + 64);
}

uint64_t objectdestroy_63Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 48);
  if (v1 >> 60 != 15) {
    sub_24C7D5FEC(*(void *)(v0 + 40), v1);
  }
  swift_unknownObjectRelease();
  if (*(unsigned char *)(v0 + 104)) {
    sub_24C7D76B0(*(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));
  }
  else {
    __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  }
  return MEMORY[0x270FA0238](v0, 105, 7);
}

uint64_t sub_24C848DA8()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24C848DE8(uint64_t a1, char a2)
{
  return sub_24C843614(a1, a2 & 1, *(void (**)(uint64_t, unint64_t, long long *, uint64_t, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_24C848DF8(uint64_t *a1)
{
  return sub_24C842C84(a1);
}

uint64_t sub_24C848E00(uint64_t *a1)
{
  return sub_24C842CE4(a1);
}

uint64_t sub_24C848E08(uint64_t a1)
{
  return sub_24C841F7C(a1);
}

uint64_t sub_24C848E10(char *a1)
{
  return sub_24C842A74(a1, v1, (void (*)(char *))sub_24C8436D4);
}

uint64_t sub_24C848E40()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24C848E78()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24C848EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24C840AD8(a1, a2, a3, a4, *(void *)(v4 + 32), *(void *)(v4 + 40), *(void (**)(char *, uint64_t (*)(uint64_t), void *))(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_24C848EE8()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24C848F30(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_24C840F70(a1, a2, a3, a4, a5 & 1, *(void (**)(void, void, void, void))(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 16), *(void *)(v5 + 24));
}

uint64_t sub_24C848F68()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24C848FA0(uint64_t a1)
{
  return sub_24C840D08(a1, *(void (**)(long long *))(v1 + 32));
}

uint64_t sub_24C848FAC(char *a1)
{
  return sub_24C842A74(a1, v1, (void (*)(char *))sub_24C841638);
}

uint64_t sub_24C848FDC(uint64_t a1)
{
  return sub_24C83FA48(a1);
}

uint64_t sub_24C848FE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void secIdentityFromKeyPair_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_24C7BE000, v0, v1, "SecGenerateSelfSignedCertificate failed", v2, v3, v4, v5, v6);
}

void secIdentityFromKeyPair_cold_2()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_24C7BE000, v0, v1, "SecIdentityCreate failed", v2, v3, v4, v5, v6);
}

void secIdentityFromKeyPair_cold_3()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_24C7BE000, v0, v1, "sec_identity_create failed", v2, v3, v4, v5, v6);
}

void publicKeyFromIdentity_cold_1()
{
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_0(&dword_24C7BE000, v0, v1, "SecIdentityCopyPrivateKey failed", v2, v3, v4, v5, v6);
}

uint64_t sub_24C849120()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_24C849130()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_24C849140()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_24C849150()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_24C849160()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_24C849170()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_24C849180()
{
  return MEMORY[0x270EEE0C0]();
}

uint64_t sub_24C849190()
{
  return MEMORY[0x270EEE200]();
}

uint64_t sub_24C8491A0()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_24C8491B0()
{
  return MEMORY[0x270EEE298]();
}

uint64_t sub_24C8491C0()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_24C8491D0()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_24C8491E0()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_24C8491F0()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_24C849200()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_24C849210()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_24C849220()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_24C849230()
{
  return MEMORY[0x270EEEA60]();
}

uint64_t sub_24C849240()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_24C849250()
{
  return MEMORY[0x270EEFBC0]();
}

uint64_t sub_24C849260()
{
  return MEMORY[0x270EEFCE0]();
}

uint64_t sub_24C849270()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_24C849280()
{
  return MEMORY[0x270EEFD70]();
}

uint64_t sub_24C849290()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_24C8492A0()
{
  return MEMORY[0x270EEFE68]();
}

uint64_t sub_24C8492B0()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_24C8492C0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24C8492D0()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_24C8492E0()
{
  return MEMORY[0x270EF0048]();
}

uint64_t sub_24C8492F0()
{
  return MEMORY[0x270EF0060]();
}

uint64_t sub_24C849300()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_24C849310()
{
  return MEMORY[0x270EF0090]();
}

uint64_t sub_24C849320()
{
  return MEMORY[0x270EF00B0]();
}

uint64_t sub_24C849330()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_24C849340()
{
  return MEMORY[0x270EF0130]();
}

uint64_t sub_24C849350()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_24C849360()
{
  return MEMORY[0x270EF01E0]();
}

uint64_t sub_24C849370()
{
  return MEMORY[0x270EF0238]();
}

uint64_t sub_24C849380()
{
  return MEMORY[0x270EF0248]();
}

uint64_t sub_24C849390()
{
  return MEMORY[0x270EF02A8]();
}

uint64_t sub_24C8493A0()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_24C8493B0()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_24C8493C0()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_24C8493D0()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24C8493E0()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_24C8493F0()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_24C849400()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_24C849410()
{
  return MEMORY[0x270EF0CE0]();
}

uint64_t sub_24C849420()
{
  return MEMORY[0x270EF0CF0]();
}

uint64_t sub_24C849430()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24C849440()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24C849450()
{
  return MEMORY[0x270FA06B8]();
}

uint64_t sub_24C849460()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_24C849470()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_24C849480()
{
  return MEMORY[0x270F24BA8]();
}

uint64_t sub_24C849490()
{
  return MEMORY[0x270F24BD0]();
}

uint64_t sub_24C8494A0()
{
  return MEMORY[0x270F24E20]();
}

uint64_t sub_24C8494B0()
{
  return MEMORY[0x270F24E28]();
}

uint64_t sub_24C8494C0()
{
  return MEMORY[0x270F24E30]();
}

uint64_t sub_24C8494D0()
{
  return MEMORY[0x270F24E38]();
}

uint64_t sub_24C8494E0()
{
  return MEMORY[0x270F24E40]();
}

uint64_t sub_24C8494F0()
{
  return MEMORY[0x270F24E48]();
}

uint64_t sub_24C849500()
{
  return MEMORY[0x270F24E50]();
}

uint64_t sub_24C849510()
{
  return MEMORY[0x270F24E58]();
}

uint64_t sub_24C849520()
{
  return MEMORY[0x270F24E60]();
}

uint64_t sub_24C849530()
{
  return MEMORY[0x270F24E68]();
}

uint64_t sub_24C849540()
{
  return MEMORY[0x270F24E70]();
}

uint64_t sub_24C849550()
{
  return MEMORY[0x270FA2A68]();
}

uint64_t sub_24C849560()
{
  return MEMORY[0x270FA2AB8]();
}

uint64_t sub_24C849570()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24C849580()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24C849590()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24C8495A0()
{
  return MEMORY[0x270FA08E0]();
}

uint64_t sub_24C8495B0()
{
  return MEMORY[0x270EE3DA8]();
}

uint64_t sub_24C8495C0()
{
  return MEMORY[0x270EE3DB0]();
}

uint64_t sub_24C8495D0()
{
  return MEMORY[0x270EE3DB8]();
}

uint64_t sub_24C8495E0()
{
  return MEMORY[0x270EE3DD8]();
}

uint64_t sub_24C8495F0()
{
  return MEMORY[0x270EE3DE0]();
}

uint64_t sub_24C849600()
{
  return MEMORY[0x270EE3DF0]();
}

uint64_t sub_24C849610()
{
  return MEMORY[0x270EF7118]();
}

uint64_t sub_24C849620()
{
  return MEMORY[0x270EF7128]();
}

uint64_t sub_24C849630()
{
  return MEMORY[0x270EF7140]();
}

uint64_t sub_24C849640()
{
  return MEMORY[0x270EF7148]();
}

uint64_t sub_24C849650()
{
  return MEMORY[0x270EF7160]();
}

uint64_t sub_24C849660()
{
  return MEMORY[0x270EF7188]();
}

uint64_t sub_24C849670()
{
  return MEMORY[0x270EF7190]();
}

uint64_t sub_24C849680()
{
  return MEMORY[0x270EF7198]();
}

uint64_t sub_24C849690()
{
  return MEMORY[0x270EF71A0]();
}

uint64_t sub_24C8496A0()
{
  return MEMORY[0x270EF71A8]();
}

uint64_t sub_24C8496B0()
{
  return MEMORY[0x270EF71B0]();
}

uint64_t sub_24C8496C0()
{
  return MEMORY[0x270EF71C0]();
}

uint64_t sub_24C8496D0()
{
  return MEMORY[0x270EF71C8]();
}

uint64_t sub_24C8496E0()
{
  return MEMORY[0x270EF71D0]();
}

uint64_t sub_24C8496F0()
{
  return MEMORY[0x270EF71D8]();
}

uint64_t sub_24C849700()
{
  return MEMORY[0x270EF7210]();
}

uint64_t sub_24C849710()
{
  return MEMORY[0x270EF7220]();
}

uint64_t sub_24C849720()
{
  return MEMORY[0x270EF7230]();
}

uint64_t sub_24C849730()
{
  return MEMORY[0x270EF7268]();
}

uint64_t sub_24C849740()
{
  return MEMORY[0x270EF72E8]();
}

uint64_t sub_24C849750()
{
  return MEMORY[0x270EF72F0]();
}

uint64_t sub_24C849760()
{
  return MEMORY[0x270EF7300]();
}

uint64_t sub_24C849770()
{
  return MEMORY[0x270EF7308]();
}

uint64_t sub_24C849780()
{
  return MEMORY[0x270EF7310]();
}

uint64_t sub_24C849790()
{
  return MEMORY[0x270EF7320]();
}

uint64_t sub_24C8497A0()
{
  return MEMORY[0x270EF7328]();
}

uint64_t sub_24C8497B0()
{
  return MEMORY[0x270EF7330]();
}

uint64_t sub_24C8497C0()
{
  return MEMORY[0x270EF7338]();
}

uint64_t sub_24C8497D0()
{
  return MEMORY[0x270EF7340]();
}

uint64_t sub_24C8497E0()
{
  return MEMORY[0x270EF7348]();
}

uint64_t sub_24C8497F0()
{
  return MEMORY[0x270EF7350]();
}

uint64_t sub_24C849800()
{
  return MEMORY[0x270EF7358]();
}

uint64_t sub_24C849810()
{
  return MEMORY[0x270EF7360]();
}

uint64_t sub_24C849820()
{
  return MEMORY[0x270EF7430]();
}

uint64_t sub_24C849830()
{
  return MEMORY[0x270EF7438]();
}

uint64_t sub_24C849840()
{
  return MEMORY[0x270EF7440]();
}

uint64_t sub_24C849850()
{
  return MEMORY[0x270EF7448]();
}

uint64_t sub_24C849860()
{
  return MEMORY[0x270EF7450]();
}

uint64_t sub_24C849870()
{
  return MEMORY[0x270EF7458]();
}

uint64_t sub_24C849880()
{
  return MEMORY[0x270EF7460]();
}

uint64_t sub_24C849890()
{
  return MEMORY[0x270EF7468]();
}

uint64_t sub_24C8498A0()
{
  return MEMORY[0x270EF7478]();
}

uint64_t sub_24C8498B0()
{
  return MEMORY[0x270EF7480]();
}

uint64_t sub_24C8498C0()
{
  return MEMORY[0x270EF7488]();
}

uint64_t sub_24C8498D0()
{
  return MEMORY[0x270EF7498]();
}

uint64_t sub_24C8498E0()
{
  return MEMORY[0x270EF74B8]();
}

uint64_t sub_24C8498F0()
{
  return MEMORY[0x270EF74C8]();
}

uint64_t sub_24C849900()
{
  return MEMORY[0x270EF74E0]();
}

uint64_t sub_24C849910()
{
  return MEMORY[0x270EF74E8]();
}

uint64_t sub_24C849920()
{
  return MEMORY[0x270EF74F8]();
}

uint64_t sub_24C849930()
{
  return MEMORY[0x270EF7510]();
}

uint64_t sub_24C849940()
{
  return MEMORY[0x270EF7518]();
}

uint64_t sub_24C849950()
{
  return MEMORY[0x270EF75B8]();
}

uint64_t sub_24C849960()
{
  return MEMORY[0x270EF75D8]();
}

uint64_t sub_24C849970()
{
  return MEMORY[0x270EF7600]();
}

uint64_t sub_24C849980()
{
  return MEMORY[0x270EF7608]();
}

uint64_t sub_24C849990()
{
  return MEMORY[0x270EF7610]();
}

uint64_t sub_24C8499A0()
{
  return MEMORY[0x270EF7618]();
}

uint64_t sub_24C8499B0()
{
  return MEMORY[0x270EF7620]();
}

uint64_t sub_24C8499C0()
{
  return MEMORY[0x270EF7628]();
}

uint64_t sub_24C8499D0()
{
  return MEMORY[0x270EF7648]();
}

uint64_t sub_24C8499E0()
{
  return MEMORY[0x270EF7650]();
}

uint64_t sub_24C8499F0()
{
  return MEMORY[0x270EF7658]();
}

uint64_t sub_24C849A00()
{
  return MEMORY[0x270EF7660]();
}

uint64_t sub_24C849A10()
{
  return MEMORY[0x270EF7668]();
}

uint64_t sub_24C849A20()
{
  return MEMORY[0x270EF7670]();
}

uint64_t sub_24C849A30()
{
  return MEMORY[0x270EF7690]();
}

uint64_t sub_24C849A40()
{
  return MEMORY[0x270EF7698]();
}

uint64_t sub_24C849A50()
{
  return MEMORY[0x270EF76A0]();
}

uint64_t sub_24C849A60()
{
  return MEMORY[0x270EF76A8]();
}

uint64_t sub_24C849A70()
{
  return MEMORY[0x270EF76B8]();
}

uint64_t sub_24C849A80()
{
  return MEMORY[0x270EF76C0]();
}

uint64_t sub_24C849A90()
{
  return MEMORY[0x270EF76C8]();
}

uint64_t sub_24C849AA0()
{
  return MEMORY[0x270EF76D0]();
}

uint64_t sub_24C849AB0()
{
  return MEMORY[0x270EF76D8]();
}

uint64_t sub_24C849AC0()
{
  return MEMORY[0x270EF76E0]();
}

uint64_t sub_24C849AD0()
{
  return MEMORY[0x270EF76E8]();
}

uint64_t sub_24C849AE0()
{
  return MEMORY[0x270EF76F0]();
}

uint64_t sub_24C849AF0()
{
  return MEMORY[0x270EF76F8]();
}

uint64_t sub_24C849B00()
{
  return MEMORY[0x270EF77D8]();
}

uint64_t sub_24C849B10()
{
  return MEMORY[0x270EF77E0]();
}

uint64_t sub_24C849B20()
{
  return MEMORY[0x270EF7838]();
}

uint64_t sub_24C849B30()
{
  return MEMORY[0x270EF7850]();
}

uint64_t sub_24C849B40()
{
  return MEMORY[0x270EF7858]();
}

uint64_t sub_24C849B50()
{
  return MEMORY[0x270EF7860]();
}

uint64_t sub_24C849B60()
{
  return MEMORY[0x270EF7868]();
}

uint64_t sub_24C849B70()
{
  return MEMORY[0x270EF7870]();
}

uint64_t sub_24C849B80()
{
  return MEMORY[0x270EF7888]();
}

uint64_t sub_24C849B90()
{
  return MEMORY[0x270EF78A0]();
}

uint64_t sub_24C849BA0()
{
  return MEMORY[0x270EF78B0]();
}

uint64_t sub_24C849BB0()
{
  return MEMORY[0x270EF78B8]();
}

uint64_t sub_24C849BC0()
{
  return MEMORY[0x270EF78C0]();
}

uint64_t sub_24C849BD0()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_24C849BE0()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_24C849BF0()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_24C849C00()
{
  return MEMORY[0x270FA0A58]();
}

uint64_t sub_24C849C10()
{
  return MEMORY[0x270FA0A68]();
}

uint64_t sub_24C849C20()
{
  return MEMORY[0x270FA0A78]();
}

uint64_t sub_24C849C30()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t sub_24C849C40()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_24C849C50()
{
  return MEMORY[0x270FA0B60]();
}

uint64_t sub_24C849C60()
{
  return MEMORY[0x270FA0B70]();
}

uint64_t sub_24C849C70()
{
  return MEMORY[0x270FA0B98]();
}

uint64_t sub_24C849C80()
{
  return MEMORY[0x270FA0BA8]();
}

uint64_t sub_24C849C90()
{
  return MEMORY[0x270FA0BC8]();
}

uint64_t sub_24C849CA0()
{
  return MEMORY[0x270FA0BF0]();
}

uint64_t sub_24C849CB0()
{
  return MEMORY[0x270EEA9E8]();
}

uint64_t sub_24C849CC0()
{
  return MEMORY[0x270EEAA78]();
}

uint64_t sub_24C849CD0()
{
  return MEMORY[0x270EEAA80]();
}

uint64_t sub_24C849CE0()
{
  return MEMORY[0x270EEAA98]();
}

uint64_t sub_24C849CF0()
{
  return MEMORY[0x270EEAAA0]();
}

uint64_t sub_24C849D00()
{
  return MEMORY[0x270EEAAA8]();
}

uint64_t sub_24C849D10()
{
  return MEMORY[0x270EEAAF0]();
}

uint64_t sub_24C849D20()
{
  return MEMORY[0x270EEAB00]();
}

uint64_t sub_24C849D30()
{
  return MEMORY[0x270EEAB30]();
}

uint64_t sub_24C849D40()
{
  return MEMORY[0x270EEAC18]();
}

uint64_t sub_24C849D50()
{
  return MEMORY[0x270EEAC48]();
}

uint64_t sub_24C849D60()
{
  return MEMORY[0x270EEAC60]();
}

uint64_t sub_24C849D70()
{
  return MEMORY[0x270EEAC70]();
}

uint64_t sub_24C849D80()
{
  return MEMORY[0x270EEAC88]();
}

uint64_t sub_24C849D90()
{
  return MEMORY[0x270EEACB8]();
}

uint64_t sub_24C849DA0()
{
  return MEMORY[0x270EEACC8]();
}

uint64_t sub_24C849DB0()
{
  return MEMORY[0x270EEACD8]();
}

uint64_t sub_24C849DC0()
{
  return MEMORY[0x270EEAD30]();
}

uint64_t sub_24C849DD0()
{
  return MEMORY[0x270EEAD48]();
}

uint64_t sub_24C849DE0()
{
  return MEMORY[0x270EEB090]();
}

uint64_t sub_24C849DF0()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_24C849E00()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_24C849E10()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_24C849E20()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_24C849E30()
{
  return MEMORY[0x270FA2B38]();
}

uint64_t sub_24C849E40()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24C849E50()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24C849E60()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_24C849E70()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_24C849E80()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24C849E90()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_24C849EA0()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_24C849EB0()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_24C849EC0()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_24C849ED0()
{
  return MEMORY[0x270F9D600]();
}

uint64_t sub_24C849EE0()
{
  return MEMORY[0x270F9D610]();
}

uint64_t sub_24C849EF0()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_24C849F00()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_24C849F10()
{
  return MEMORY[0x270F9D678]();
}

uint64_t sub_24C849F20()
{
  return MEMORY[0x270F9D680]();
}

uint64_t sub_24C849F30()
{
  return MEMORY[0x270F9D6B0]();
}

uint64_t sub_24C849F40()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_24C849F50()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24C849F60()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_24C849F70()
{
  return MEMORY[0x270F9D788]();
}

uint64_t sub_24C849F80()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24C849F90()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_24C849FA0()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_24C849FB0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24C849FC0()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_24C849FD0()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_24C849FF0()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_24C84A000()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_24C84A010()
{
  return MEMORY[0x270F9D8D8]();
}

uint64_t sub_24C84A020()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_24C84A030()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_24C84A040()
{
  return MEMORY[0x270F9D910]();
}

uint64_t sub_24C84A050()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_24C84A060()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_24C84A070()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_24C84A080()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_24C84A090()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_24C84A0A0()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_24C84A0B0()
{
  return MEMORY[0x270F9DDA0]();
}

uint64_t sub_24C84A0C0()
{
  return MEMORY[0x270EF1CE0]();
}

uint64_t sub_24C84A0D0()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_24C84A0E0()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_24C84A0F0()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_24C84A100()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_24C84A110()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_24C84A120()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_24C84A130()
{
  return MEMORY[0x270FA0C78]();
}

uint64_t sub_24C84A140()
{
  return MEMORY[0x270FA0C90]();
}

uint64_t sub_24C84A150()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_24C84A160()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_24C84A170()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_24C84A180()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24C84A190()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_24C84A1A0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24C84A1B0()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24C84A1C0()
{
  return MEMORY[0x270EF2478]();
}

uint64_t sub_24C84A1D0()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_24C84A1E0()
{
  return MEMORY[0x270EF25A0]();
}

uint64_t sub_24C84A1F0()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_24C84A200()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_24C84A220()
{
  return MEMORY[0x270F9E9A0]();
}

uint64_t sub_24C84A230()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_24C84A240()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24C84A250()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_24C84A260()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_24C84A270()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24C84A280()
{
  return MEMORY[0x270F9EB30]();
}

uint64_t sub_24C84A290()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_24C84A2A0()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24C84A2B0()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_24C84A2C0()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_24C84A2D0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_24C84A2E0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24C84A2F0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24C84A300()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24C84A310()
{
  return MEMORY[0x270F9F0D8]();
}

uint64_t sub_24C84A320()
{
  return MEMORY[0x270F9F0E0]();
}

uint64_t sub_24C84A340()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_24C84A350()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_24C84A360()
{
  return MEMORY[0x270F9F2C8]();
}

uint64_t sub_24C84A370()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24C84A380()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24C84A390()
{
  return MEMORY[0x270F9F340]();
}

uint64_t sub_24C84A3A0()
{
  return MEMORY[0x270F9F350]();
}

uint64_t sub_24C84A3B0()
{
  return MEMORY[0x270F9F358]();
}

uint64_t sub_24C84A3C0()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_24C84A3D0()
{
  return MEMORY[0x270F9F400]();
}

uint64_t sub_24C84A3E0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24C84A3F0()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24C84A400()
{
  return MEMORY[0x270F9F480]();
}

uint64_t sub_24C84A410()
{
  return MEMORY[0x270F9F490]();
}

uint64_t sub_24C84A420()
{
  return MEMORY[0x270F9F498]();
}

uint64_t sub_24C84A430()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24C84A440()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24C84A450()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_24C84A460()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24C84A470()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_24C84A480()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24C84A490()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24C84A4A0()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24C84A4B0()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24C84A4C0()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_24C84A4D0()
{
  return MEMORY[0x270F9FC30]();
}

uint64_t sub_24C84A4E0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24C84A4F0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24C84A500()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_24C84A510()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24C84A520()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_24C84A530()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24C84A540()
{
  return MEMORY[0x270F9FD98]();
}

void CFRelease(CFTypeRef cf)
{
}

uint64_t SecGenerateSelfSignedCertificate()
{
  return MEMORY[0x270EFD940]();
}

OSStatus SecIdentityCopyPrivateKey(SecIdentityRef identityRef, SecKeyRef *privateKeyRef)
{
  return MEMORY[0x270EFD950](identityRef, privateKeyRef);
}

uint64_t SecIdentityCreate()
{
  return MEMORY[0x270EFD958]();
}

CFDataRef SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x270EFD9B0](key, error);
}

SecKeyRef SecKeyCopyPublicKey(SecKeyRef key)
{
  return (SecKeyRef)MEMORY[0x270EFD9D8](key);
}

uint64_t SecKeyCopySubjectPublicKeyInfo()
{
  return MEMORY[0x270EFD9E0]();
}

SecKeyRef SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x270EFDA40](parameters, error);
}

SecKeyRef SecKeyCreateWithData(CFDataRef keyData, CFDictionaryRef attributes, CFErrorRef *error)
{
  return (SecKeyRef)MEMORY[0x270EFDA60](keyData, attributes, error);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x270EFDC20](rnd, count, bytes);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x270EDA498](__b, *(void *)&__c, __len);
}

uint64_t nw_array_append()
{
  return MEMORY[0x270EF7A50]();
}

uint64_t nw_array_create()
{
  return MEMORY[0x270EF7A78]();
}

nw_protocol_metadata_t nw_content_context_copy_protocol_metadata(nw_content_context_t context, nw_protocol_definition_t protocol)
{
  return (nw_protocol_metadata_t)MEMORY[0x270EF7D40](context, protocol);
}

nw_content_context_t nw_content_context_create(const char *context_identifier)
{
  return (nw_content_context_t)MEMORY[0x270EF7D50](context_identifier);
}

void nw_content_context_set_is_final(nw_content_context_t context, BOOL is_final)
{
}

void nw_content_context_set_metadata_for_protocol(nw_content_context_t context, nw_protocol_metadata_t protocol_metadata)
{
}

nw_endpoint_t nw_endpoint_create_bonjour_service(const char *name, const char *type, const char *domain)
{
  return (nw_endpoint_t)MEMORY[0x270EF7E98](name, type, domain);
}

uint64_t nw_http3_create_options()
{
  return MEMORY[0x270EF81F0]();
}

uint64_t nw_http_create_metadata_for_request()
{
  return MEMORY[0x270EF8200]();
}

uint64_t nw_http_create_metadata_for_response()
{
  return MEMORY[0x270EF8210]();
}

uint64_t nw_http_fields_append()
{
  return MEMORY[0x270EF8228]();
}

uint64_t nw_http_fields_copy_value_by_name()
{
  return MEMORY[0x270EF8230]();
}

uint64_t nw_http_fields_enumerate()
{
  return MEMORY[0x270EF8248]();
}

uint64_t nw_http_metadata_copy_request()
{
  return MEMORY[0x270EF8268]();
}

uint64_t nw_http_metadata_copy_response()
{
  return MEMORY[0x270EF8278]();
}

uint64_t nw_http_request_access_method()
{
  return MEMORY[0x270EF8298]();
}

uint64_t nw_http_request_access_path()
{
  return MEMORY[0x270EF82A8]();
}

uint64_t nw_http_request_create()
{
  return MEMORY[0x270EF82C0]();
}

uint64_t nw_http_response_copy()
{
  return MEMORY[0x270EF82E0]();
}

uint64_t nw_http_response_copy_header_fields()
{
  return MEMORY[0x270EF82F0]();
}

uint64_t nw_http_response_create_well_known()
{
  return MEMORY[0x270EF8300]();
}

uint64_t nw_http_response_get_status_code()
{
  return MEMORY[0x270EF8310]();
}

uint64_t nw_listener_set_advertise_endpoints()
{
  return MEMORY[0x270EF8438]();
}

nw_protocol_stack_t nw_parameters_copy_default_protocol_stack(nw_parameters_t parameters)
{
  return (nw_protocol_stack_t)MEMORY[0x270EF84F8](parameters);
}

nw_parameters_t nw_parameters_create_quic(nw_parameters_configure_protocol_block_t configure_quic)
{
  return (nw_parameters_t)MEMORY[0x270EF8540](configure_quic);
}

uint64_t nw_parameters_set_attach_protocol_listener()
{
  return MEMORY[0x270EF8600]();
}

uint64_t nw_protocol_copy_http_definition()
{
  return MEMORY[0x270EF8B38]();
}

void nw_protocol_stack_prepend_application_protocol(nw_protocol_stack_t stack, nw_protocol_options_t protocol)
{
}

sec_protocol_options_t nw_quic_copy_sec_protocol_options(nw_protocol_options_t options)
{
  return (sec_protocol_options_t)MEMORY[0x270EF92E0](options);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x270EDA9A0](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

SecIdentityRef sec_identity_copy_ref(sec_identity_t identity)
{
  return (SecIdentityRef)MEMORY[0x270EFDE90](identity);
}

sec_identity_t sec_identity_create(SecIdentityRef identity)
{
  return (sec_identity_t)MEMORY[0x270EFDE98](identity);
}

void sec_protocol_options_add_pre_shared_key(sec_protocol_options_t options, dispatch_data_t psk, dispatch_data_t psk_identity)
{
}

void sec_protocol_options_add_tls_application_protocol(sec_protocol_options_t options, const char *application_protocol)
{
}

void sec_protocol_options_append_tls_ciphersuite(sec_protocol_options_t options, tls_ciphersuite_t ciphersuite)
{
}

uint64_t sec_protocol_options_clear_tls_application_protocols()
{
  return MEMORY[0x270EFDF08]();
}

uint64_t sec_protocol_options_set_client_raw_public_key_certificates()
{
  return MEMORY[0x270EFDF28]();
}

void sec_protocol_options_set_local_identity(sec_protocol_options_t options, sec_identity_t identity)
{
}

void sec_protocol_options_set_peer_authentication_required(sec_protocol_options_t options, BOOL peer_authentication_required)
{
}

uint64_t sec_protocol_options_set_server_raw_public_key_certificates()
{
  return MEMORY[0x270EFDF70]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x270FA0408]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x270FA0418]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x270FA0570]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x270FA0630]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}