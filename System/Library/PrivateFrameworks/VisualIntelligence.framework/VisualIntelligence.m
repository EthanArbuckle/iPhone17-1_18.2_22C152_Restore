uint64_t VISParseSessionConfigReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;

  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          while (1)
          {
            v20 = *v3;
            v21 = *(void *)(a2 + v20);
            if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
              break;
            }
            v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
            *(void *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0) {
              goto LABEL_50;
            }
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              v19 = 0;
              goto LABEL_52;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_50:
          if (*(unsigned char *)(a2 + *v5)) {
            v19 = 0;
          }
LABEL_52:
          objc_msgSend(a1, "setEnable_object_detection:", v19 != 0);
          continue;
        case 2u:
          v24 = 0;
          v25 = 0;
          v26 = 0;
          while (2)
          {
            v27 = *v3;
            v28 = *(void *)(a2 + v27);
            if (v28 == -1 || v28 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(unsigned char *)(*(void *)(a2 + *v7) + v28);
              *(void *)(a2 + v27) = v28 + 1;
              v26 |= (unint64_t)(v29 & 0x7F) << v24;
              if (v29 < 0)
              {
                v24 += 7;
                v14 = v25++ >= 9;
                if (v14)
                {
                  v26 = 0;
                  goto LABEL_56;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            v26 = 0;
          }
LABEL_56:
          objc_msgSend(a1, "setEnable_object_tracking:", v26 != 0);
          continue;
        case 3u:
          v30 = 0;
          v31 = 0;
          v32 = 0;
          while (2)
          {
            v33 = *v3;
            v34 = *(void *)(a2 + v33);
            if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
            {
              *(unsigned char *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
              *(void *)(a2 + v33) = v34 + 1;
              v32 |= (unint64_t)(v35 & 0x7F) << v30;
              if (v35 < 0)
              {
                v30 += 7;
                v14 = v31++ >= 9;
                if (v14)
                {
                  v32 = 0;
                  goto LABEL_60;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v5)) {
            v32 = 0;
          }
LABEL_60:
          objc_msgSend(a1, "setEnable_text_detection:", v32 != 0);
          continue;
        case 4u:
          v36 = 0;
          v37 = 0;
          v38 = 0;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        v39 = *v3;
        v40 = *(void *)(a2 + v39);
        if (v40 == -1 || v40 >= *(void *)(a2 + *v4)) {
          break;
        }
        v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
        *(void *)(a2 + v39) = v40 + 1;
        v38 |= (unint64_t)(v41 & 0x7F) << v36;
        if ((v41 & 0x80) == 0) {
          goto LABEL_62;
        }
        v36 += 7;
        v14 = v37++ >= 9;
        if (v14)
        {
          v38 = 0;
          goto LABEL_64;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_62:
      if (*(unsigned char *)(a2 + *v5)) {
        v38 = 0;
      }
LABEL_64:
      objc_msgSend(a1, "setUse_vi_detector:", v38 != 0);
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t VISTextDetectionPostProcessConfigReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_82;
            }
            v20 += 7;
            BOOL v16 = v21++ >= 9;
            if (v16)
            {
              uint64_t v22 = 0;
              goto LABEL_84;
            }
          }
          *(unsigned char *)(a2 + *v6) = 1;
LABEL_82:
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v22 = 0;
          }
LABEL_84:
          objc_msgSend(a1, "setEnable_text_bounding_box_merge:", v22 != 0);
          continue;
        case 2u:
          uint64_t v28 = *v4;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v29);
            *(void *)(a2 + v28) = v29 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setText_merge_iou_threshold:", a3);
          continue;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v32 = 0;
          while (2)
          {
            uint64_t v33 = *v4;
            uint64_t v34 = *(void *)(a2 + v33);
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v8) + v34);
              *(void *)(a2 + v33) = v35;
              v32 |= (unint64_t)(v36 & 0x7F) << v30;
              if (v36 < 0)
              {
                v30 += 7;
                BOOL v16 = v31++ >= 9;
                if (v16)
                {
                  uint64_t v32 = 0;
                  goto LABEL_88;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v32 = 0;
          }
LABEL_88:
          objc_msgSend(a1, "setEnable_text_bounding_box_suppress:", v32 != 0);
          continue;
        case 4u:
          char v37 = 0;
          unsigned int v38 = 0;
          uint64_t v39 = 0;
          while (2)
          {
            uint64_t v40 = *v4;
            uint64_t v41 = *(void *)(a2 + v40);
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v43 = *(unsigned char *)(*(void *)(a2 + *v8) + v41);
              *(void *)(a2 + v40) = v42;
              v39 |= (unint64_t)(v43 & 0x7F) << v37;
              if (v43 < 0)
              {
                v37 += 7;
                BOOL v16 = v38++ >= 9;
                if (v16)
                {
                  uint64_t v39 = 0;
                  goto LABEL_92;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v39 = 0;
          }
LABEL_92:
          objc_msgSend(a1, "setEnable_text_font_size_suppress:", v39 != 0);
          continue;
        case 5u:
          uint64_t v44 = *v4;
          unint64_t v45 = *(void *)(a2 + v44);
          if (v45 <= 0xFFFFFFFFFFFFFFFBLL && v45 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v45);
            *(void *)(a2 + v44) = v45 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setFont_size_suppress_threshold:", a3);
          continue;
        case 6u:
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          while (2)
          {
            uint64_t v49 = *v4;
            uint64_t v50 = *(void *)(a2 + v49);
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v52 = *(unsigned char *)(*(void *)(a2 + *v8) + v50);
              *(void *)(a2 + v49) = v51;
              v48 |= (unint64_t)(v52 & 0x7F) << v46;
              if (v52 < 0)
              {
                v46 += 7;
                BOOL v16 = v47++ >= 9;
                if (v16)
                {
                  uint64_t v48 = 0;
                  goto LABEL_96;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v48 = 0;
          }
LABEL_96:
          objc_msgSend(a1, "setEnable_text_confidence_suppress:", v48 != 0);
          continue;
        case 7u:
          uint64_t v53 = *v4;
          unint64_t v54 = *(void *)(a2 + v53);
          if (v54 <= 0xFFFFFFFFFFFFFFFBLL && v54 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v54);
            *(void *)(a2 + v53) = v54 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setText_confidence_suppress_threshold:", a3);
          continue;
        case 8u:
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v57 = 0;
          while (2)
          {
            uint64_t v58 = *v4;
            uint64_t v59 = *(void *)(a2 + v58);
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v61 = *(unsigned char *)(*(void *)(a2 + *v8) + v59);
              *(void *)(a2 + v58) = v60;
              v57 |= (unint64_t)(v61 & 0x7F) << v55;
              if (v61 < 0)
              {
                v55 += 7;
                BOOL v16 = v56++ >= 9;
                if (v16)
                {
                  uint64_t v57 = 0;
                  goto LABEL_100;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v57 = 0;
          }
LABEL_100:
          objc_msgSend(a1, "setEnable_text_bbox_size_suppress:", v57 != 0);
          continue;
        case 9u:
          uint64_t v62 = *v4;
          unint64_t v63 = *(void *)(a2 + v62);
          if (v63 <= 0xFFFFFFFFFFFFFFFBLL && v63 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v63);
            *(void *)(a2 + v62) = v63 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setText_bbox_size_suppress_threshold:", a3);
          continue;
        case 0xAu:
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v66 = 0;
          break;
        case 0xBu:
          uint64_t v71 = *v4;
          unint64_t v72 = *(void *)(a2 + v71);
          if (v72 <= 0xFFFFFFFFFFFFFFFBLL && v72 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v72);
            *(void *)(a2 + v71) = v72 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setText_suppress_iou_threshold:", a3);
          continue;
        case 0xCu:
          uint64_t v73 = *v4;
          unint64_t v74 = *(void *)(a2 + v73);
          if (v74 <= 0xFFFFFFFFFFFFFFFBLL && v74 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v74);
            *(void *)(a2 + v73) = v74 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setPadding_for_text_result_merge:", a3);
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v67 = *v4;
        uint64_t v68 = *(void *)(a2 + v67);
        unint64_t v69 = v68 + 1;
        if (v68 == -1 || v69 > *(void *)(a2 + *v5)) {
          break;
        }
        char v70 = *(unsigned char *)(*(void *)(a2 + *v8) + v68);
        *(void *)(a2 + v67) = v69;
        v66 |= (unint64_t)(v70 & 0x7F) << v64;
        if ((v70 & 0x80) == 0) {
          goto LABEL_102;
        }
        v64 += 7;
        BOOL v16 = v65++ >= 9;
        if (v16)
        {
          uint64_t v66 = 0;
          goto LABEL_104;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_102:
      if (*(unsigned char *)(a2 + *v6)) {
        uint64_t v66 = 0;
      }
LABEL_104:
      objc_msgSend(a1, "setEnable_text_negative_objects_suppress:", v66 != 0);
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t VISDeviceStateConfigReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)(a2 + v23);
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)(a2 + *v5)) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)(a2 + *v8) + v24);
            *(void *)(a2 + v23) = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_45;
            }
            v20 += 7;
            BOOL v16 = v21++ >= 9;
            if (v16)
            {
              uint64_t v27 = 0;
              goto LABEL_48;
            }
          }
          *(unsigned char *)(a2 + *v6) = 1;
LABEL_45:
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v27 = 0;
          }
          else {
            uint64_t v27 = v22;
          }
LABEL_48:
          objc_msgSend(a1, "setFrame_count:", v27);
          continue;
        case 2u:
          uint64_t v29 = *v4;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v30);
            *(void *)(a2 + v29) = v30 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setAnchor_depth:", a3);
          continue;
        case 3u:
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          break;
        case 4u:
          uint64_t v38 = *v4;
          unint64_t v39 = *(void *)(a2 + v38);
          if (v39 <= 0xFFFFFFFFFFFFFFFBLL && v39 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v39);
            *(void *)(a2 + v38) = v39 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setCamera_small_movement_threshold:", a3);
          continue;
        case 5u:
          uint64_t v40 = *v4;
          unint64_t v41 = *(void *)(a2 + v40);
          if (v41 <= 0xFFFFFFFFFFFFFFFBLL && v41 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v41);
            *(void *)(a2 + v40) = v41 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setCamera_large_movement_threshold:", a3);
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v34 = *v4;
        uint64_t v35 = *(void *)(a2 + v34);
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)(a2 + *v5)) {
          break;
        }
        char v37 = *(unsigned char *)(*(void *)(a2 + *v8) + v35);
        *(void *)(a2 + v34) = v36;
        v33 |= (unint64_t)(v37 & 0x7F) << v31;
        if ((v37 & 0x80) == 0) {
          goto LABEL_50;
        }
        v31 += 7;
        BOOL v16 = v32++ >= 9;
        if (v16)
        {
          uint64_t v33 = 0;
          goto LABEL_52;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_50:
      if (*(unsigned char *)(a2 + *v6)) {
        uint64_t v33 = 0;
      }
LABEL_52:
      objc_msgSend(a1, "setSet_zero_state_as_stable:", v33 != 0);
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t VISParseStateConfigReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        while (1)
        {
          uint64_t v26 = *v3;
          unint64_t v27 = *(void *)(a2 + v26);
          if (v27 == -1 || v27 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v28 = *(unsigned char *)(*(void *)(a2 + *v7) + v27);
          *(void *)(a2 + v26) = v27 + 1;
          v25 |= (unint64_t)(v28 & 0x7F) << v23;
          if ((v28 & 0x80) == 0) {
            goto LABEL_41;
          }
          v23 += 7;
          BOOL v14 = v24++ >= 9;
          if (v14)
          {
            uint64_t v29 = 0;
            goto LABEL_44;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_41:
        uint64_t v29 = *(unsigned char *)(a2 + *v5) ? 0 : v25;
LABEL_44:
        objc_msgSend(a1, "setFrame_count:", v29);
      }
      else if ((v10 >> 3) == 2)
      {
        char v17 = 0;
        unsigned int v18 = 0;
        uint64_t v19 = 0;
        while (1)
        {
          uint64_t v20 = *v3;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 == -1 || v21 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v22 = *(unsigned char *)(*(void *)(a2 + *v7) + v21);
          *(void *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0) {
            goto LABEL_37;
          }
          v17 += 7;
          BOOL v14 = v18++ >= 9;
          if (v14)
          {
            uint64_t v19 = 0;
            goto LABEL_39;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v19 = 0;
        }
LABEL_39:
        objc_msgSend(a1, "setDebug_option_always_parse:", v19 != 0);
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t VISObjectConsolidationConfigReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
            *(void *)(a2 + v20) = v21 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setFrame_object_iou_threshold:", a3);
          continue;
        case 2u:
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (2)
          {
            uint64_t v26 = *v4;
            uint64_t v27 = *(void *)(a2 + v26);
            unint64_t v28 = v27 + 1;
            if (v27 == -1 || v28 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v8) + v27);
              *(void *)(a2 + v26) = v28;
              v25 |= (unint64_t)(v29 & 0x7F) << v23;
              if (v29 < 0)
              {
                v23 += 7;
                BOOL v16 = v24++ >= 9;
                if (v16)
                {
                  uint64_t v25 = 0;
                  goto LABEL_93;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v25 = 0;
          }
LABEL_93:
          objc_msgSend(a1, "setEnable_packaged_products:", v25 != 0);
          continue;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v32 = 0;
          while (2)
          {
            uint64_t v33 = *v4;
            uint64_t v34 = *(void *)(a2 + v33);
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v8) + v34);
              *(void *)(a2 + v33) = v35;
              v32 |= (unint64_t)(v36 & 0x7F) << v30;
              if (v36 < 0)
              {
                v30 += 7;
                BOOL v16 = v31++ >= 9;
                if (v16)
                {
                  uint64_t v32 = 0;
                  goto LABEL_97;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v32 = 0;
          }
LABEL_97:
          objc_msgSend(a1, "setEnable_text_from_object_detection:", v32 != 0);
          continue;
        case 4u:
          uint64_t v37 = *v4;
          unint64_t v38 = *(void *)(a2 + v37);
          if (v38 <= 0xFFFFFFFFFFFFFFFBLL && v38 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v38);
            *(void *)(a2 + v37) = v38 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setNearest_object_distance_threshold:", a3);
          continue;
        case 5u:
          uint64_t v39 = *v4;
          unint64_t v40 = *(void *)(a2 + v39);
          if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v40);
            *(void *)(a2 + v39) = v40 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setObject_distance_update_threshold:", a3);
          continue;
        case 6u:
          uint64_t v41 = *v4;
          unint64_t v42 = *(void *)(a2 + v41);
          if (v42 <= 0xFFFFFFFFFFFFFFFBLL && v42 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v42);
            *(void *)(a2 + v41) = v42 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setAdaptive_object_distance_threshold_ratio:", a3);
          continue;
        case 7u:
          uint64_t v43 = *v4;
          unint64_t v44 = *(void *)(a2 + v43);
          if (v44 <= 0xFFFFFFFFFFFFFFFBLL && v44 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v44);
            *(void *)(a2 + v43) = v44 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setMinimal_adaptive_object_distance_threshold:", a3);
          continue;
        case 8u:
          uint64_t v45 = *v4;
          unint64_t v46 = *(void *)(a2 + v45);
          if (v46 <= 0xFFFFFFFFFFFFFFFBLL && v46 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v46);
            *(void *)(a2 + v45) = v46 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setNearest_object_iou_threshold:", a3);
          continue;
        case 9u:
          uint64_t v47 = *v4;
          unint64_t v48 = *(void *)(a2 + v47);
          if (v48 <= 0xFFFFFFFFFFFFFFFBLL && v48 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v48);
            *(void *)(a2 + v47) = v48 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setObject_iou_update_threshold:", a3);
          continue;
        case 0xAu:
          uint64_t v49 = *v4;
          unint64_t v50 = *(void *)(a2 + v49);
          if (v50 <= 0xFFFFFFFFFFFFFFFBLL && v50 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v50);
            *(void *)(a2 + v49) = v50 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setLabel_prob_dist_threshold:", a3);
          continue;
        case 0xBu:
          uint64_t v51 = *v4;
          unint64_t v52 = *(void *)(a2 + v51);
          if (v52 <= 0xFFFFFFFFFFFFFFFBLL && v52 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v52);
            *(void *)(a2 + v51) = v52 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setSharpness_threshold:", a3);
          continue;
        case 0xCu:
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          break;
        case 0xDu:
          uint64_t v60 = *v4;
          unint64_t v61 = *(void *)(a2 + v60);
          if (v61 <= 0xFFFFFFFFFFFFFFFBLL && v61 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v61);
            *(void *)(a2 + v60) = v61 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setTracked_decay_rate:", a3);
          continue;
        case 0xEu:
          uint64_t v62 = *v4;
          unint64_t v63 = *(void *)(a2 + v62);
          if (v63 <= 0xFFFFFFFFFFFFFFFBLL && v63 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v63);
            *(void *)(a2 + v62) = v63 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setBoundary_object_padding_threshold:", a3);
          continue;
        case 0xFu:
          uint64_t v64 = *v4;
          unint64_t v65 = *(void *)(a2 + v64);
          if (v65 <= 0xFFFFFFFFFFFFFFFBLL && v65 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v65);
            *(void *)(a2 + v64) = v65 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setBoundary_object_size_threshold:", a3);
          continue;
        case 0x10u:
          uint64_t v66 = *v4;
          unint64_t v67 = *(void *)(a2 + v66);
          if (v67 <= 0xFFFFFFFFFFFFFFFBLL && v67 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v67);
            *(void *)(a2 + v66) = v67 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setNormal_decay_rate:", a3);
          continue;
        case 0x11u:
          uint64_t v68 = *v4;
          unint64_t v69 = *(void *)(a2 + v68);
          if (v69 <= 0xFFFFFFFFFFFFFFFBLL && v69 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v69);
            *(void *)(a2 + v68) = v69 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setDepth_distance_threshold:", a3);
          continue;
        case 0x12u:
          uint64_t v70 = *v4;
          unint64_t v71 = *(void *)(a2 + v70);
          if (v71 <= 0xFFFFFFFFFFFFFFFBLL && v71 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v71);
            *(void *)(a2 + v70) = v71 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setReticle_padding:", a3);
          continue;
        case 0x13u:
          uint64_t v72 = *v4;
          unint64_t v73 = *(void *)(a2 + v72);
          if (v73 <= 0xFFFFFFFFFFFFFFFBLL && v73 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v73);
            *(void *)(a2 + v72) = v73 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setPixel_distance_threshold:", a3);
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v56 = *v4;
        uint64_t v57 = *(void *)(a2 + v56);
        unint64_t v58 = v57 + 1;
        if (v57 == -1 || v58 > *(void *)(a2 + *v5)) {
          break;
        }
        char v59 = *(unsigned char *)(*(void *)(a2 + *v8) + v57);
        *(void *)(a2 + v56) = v58;
        v55 |= (unint64_t)(v59 & 0x7F) << v53;
        if ((v59 & 0x80) == 0) {
          goto LABEL_99;
        }
        v53 += 7;
        BOOL v16 = v54++ >= 9;
        if (v16)
        {
          uint64_t v55 = 0;
          goto LABEL_101;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_99:
      if (*(unsigned char *)(a2 + *v6)) {
        uint64_t v55 = 0;
      }
LABEL_101:
      objc_msgSend(a1, "setEnable_visual_distance:", v55 != 0);
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t VISTextConsolidationConfigReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
            *(void *)(a2 + v20) = v21 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setMatch_cost_threshold:", a3);
          continue;
        case 2u:
          uint64_t v23 = *v4;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 <= 0xFFFFFFFFFFFFFFFBLL && v24 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v24);
            *(void *)(a2 + v23) = v24 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setFont_size_start_reporting_threshold:", a3);
          continue;
        case 3u:
          uint64_t v25 = *v4;
          unint64_t v26 = *(void *)(a2 + v25);
          if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v26);
            *(void *)(a2 + v25) = v26 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setFont_size_stop_reporting_threshold:", a3);
          continue;
        case 4u:
          uint64_t v27 = *v4;
          unint64_t v28 = *(void *)(a2 + v27);
          if (v28 <= 0xFFFFFFFFFFFFFFFBLL && v28 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v28);
            *(void *)(a2 + v27) = v28 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setAngular_offset_exponential_smoothing:", a3);
          continue;
        case 5u:
          uint64_t v29 = *v4;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 <= 0xFFFFFFFFFFFFFFFBLL && v30 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v30);
            *(void *)(a2 + v29) = v30 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setModel_aspect_ratio:", a3);
          continue;
        case 6u:
          uint64_t v31 = *v4;
          unint64_t v32 = *(void *)(a2 + v31);
          if (v32 <= 0xFFFFFFFFFFFFFFFBLL && v32 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v32);
            *(void *)(a2 + v31) = v32 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setConfidence_threshold:", a3);
          continue;
        case 7u:
          uint64_t v33 = *v4;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 <= 0xFFFFFFFFFFFFFFFBLL && v34 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v34);
            *(void *)(a2 + v33) = v34 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setConfidence_filter_ratio:", a3);
          continue;
        case 8u:
          uint64_t v35 = *v4;
          unint64_t v36 = *(void *)(a2 + v35);
          if (v36 <= 0xFFFFFFFFFFFFFFFBLL && v36 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v36);
            *(void *)(a2 + v35) = v36 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setConfidence_hysteresis_value_lag:", a3);
          continue;
        case 9u:
          uint64_t v37 = *v4;
          unint64_t v38 = *(void *)(a2 + v37);
          if (v38 <= 0xFFFFFFFFFFFFFFFBLL && v38 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v38);
            *(void *)(a2 + v37) = v38 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setConfidence_hysteresis_temporal_lag_before_confident:", a3);
          continue;
        case 0xAu:
          uint64_t v39 = *v4;
          unint64_t v40 = *(void *)(a2 + v39);
          if (v40 <= 0xFFFFFFFFFFFFFFFBLL && v40 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v40);
            *(void *)(a2 + v39) = v40 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setConfidence_hysteresis_temporal_lag_before_not_confident:", a3);
          continue;
        case 0xBu:
          char v41 = 0;
          unsigned int v42 = 0;
          uint64_t v43 = 0;
          break;
        case 0xCu:
          uint64_t v48 = *v4;
          unint64_t v49 = *(void *)(a2 + v48);
          if (v49 <= 0xFFFFFFFFFFFFFFFBLL && v49 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v49);
            *(void *)(a2 + v48) = v49 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setGeo_cost_depth_threshold:", a3);
          continue;
        case 0xDu:
          uint64_t v50 = *v4;
          unint64_t v51 = *(void *)(a2 + v50);
          if (v51 <= 0xFFFFFFFFFFFFFFFBLL && v51 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v51);
            *(void *)(a2 + v50) = v51 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setWorld_position_update_distance_threshold:", a3);
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v44 = *v4;
        uint64_t v45 = *(void *)(a2 + v44);
        unint64_t v46 = v45 + 1;
        if (v45 == -1 || v46 > *(void *)(a2 + *v5)) {
          break;
        }
        char v47 = *(unsigned char *)(*(void *)(a2 + *v8) + v45);
        *(void *)(a2 + v44) = v46;
        v43 |= (unint64_t)(v47 & 0x7F) << v41;
        if ((v47 & 0x80) == 0) {
          goto LABEL_65;
        }
        v41 += 7;
        BOOL v16 = v42++ >= 9;
        if (v16)
        {
          uint64_t v43 = 0;
          goto LABEL_67;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_65:
      if (*(unsigned char *)(a2 + *v6)) {
        uint64_t v43 = 0;
      }
LABEL_67:
      objc_msgSend(a1, "setEnable_smoothed_transformation:", v43 != 0);
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t VISObjectTrackingConfigReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
            *(void *)(a2 + v20) = v21 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setConfidence_for_cache_update:", a3);
          continue;
        case 2u:
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          break;
        case 3u:
          uint64_t v31 = *v4;
          unint64_t v32 = *(void *)(a2 + v31);
          if (v32 <= 0xFFFFFFFFFFFFFFFBLL && v32 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v32);
            *(void *)(a2 + v31) = v32 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setGeo_distance_threshold:", a3);
          continue;
        case 4u:
          uint64_t v33 = *v4;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 <= 0xFFFFFFFFFFFFFFFBLL && v34 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v34);
            *(void *)(a2 + v33) = v34 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setReticle_padding:", a3);
          continue;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v26 = *v4;
        uint64_t v27 = *(void *)(a2 + v26);
        unint64_t v28 = v27 + 1;
        if (v27 == -1 || v28 > *(void *)(a2 + *v5)) {
          break;
        }
        char v29 = *(unsigned char *)(*(void *)(a2 + *v8) + v27);
        *(void *)(a2 + v26) = v28;
        v25 |= (unint64_t)(v29 & 0x7F) << v23;
        if ((v29 & 0x80) == 0) {
          goto LABEL_38;
        }
        v23 += 7;
        BOOL v16 = v24++ >= 9;
        if (v16)
        {
          uint64_t v30 = 0;
          goto LABEL_41;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_38:
      uint64_t v30 = *(unsigned char *)(a2 + *v6) ? 0 : v25;
LABEL_41:
      objc_msgSend(a1, "setMax_tracked_object_count:", v30);
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t VISBoxScorerConfigReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v5))
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v3;
          uint64_t v12 = *(void *)(a2 + v11);
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
          *(void *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_12;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            uint64_t v16 = *v5;
            int v17 = *(unsigned __int8 *)(a2 + v16);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
        uint64_t v16 = *v5;
        int v17 = *(unsigned __int8 *)(a2 + v16);
        if (*(unsigned char *)(a2 + v16)) {
          unint64_t v10 = 0;
        }
LABEL_14:
        if (v17) {
          BOOL v18 = 1;
        }
        else {
          BOOL v18 = (v10 & 7) == 4;
        }
        if (!v18)
        {
          switch((v10 >> 3))
          {
            case 1u:
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              break;
            case 2u:
              uint64_t v28 = *v3;
              unint64_t v29 = *(void *)(a2 + v28);
              if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)(a2 + *v4))
              {
                double v30 = *(double *)(*(void *)(a2 + *v7) + v29);
                *(void *)(a2 + v28) = v29 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                double v30 = 0.0;
              }
              [a1 setXmean:v30];
              goto LABEL_48;
            case 3u:
              uint64_t v31 = *v3;
              unint64_t v32 = *(void *)(a2 + v31);
              if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)(a2 + *v4))
              {
                double v33 = *(double *)(*(void *)(a2 + *v7) + v32);
                *(void *)(a2 + v31) = v32 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                double v33 = 0.0;
              }
              [a1 setYmean:v33];
              goto LABEL_48;
            case 4u:
              uint64_t v34 = *v3;
              unint64_t v35 = *(void *)(a2 + v34);
              if (v35 <= 0xFFFFFFFFFFFFFFF7 && v35 + 8 <= *(void *)(a2 + *v4))
              {
                double v36 = *(double *)(*(void *)(a2 + *v7) + v35);
                *(void *)(a2 + v34) = v35 + 8;
              }
              else
              {
                *(unsigned char *)(a2 + v16) = 1;
                double v36 = 0.0;
              }
              [a1 setStd:v36];
              goto LABEL_48;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_48:
              if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
                return *(unsigned char *)(a2 + *v5) == 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v22 = *v3;
            uint64_t v23 = *(void *)(a2 + v22);
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)(a2 + *v4)) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_38;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v26 = 0;
              goto LABEL_41;
            }
          }
          *(unsigned char *)(a2 + *v5) = 1;
LABEL_38:
          if (*(unsigned char *)(a2 + *v5)) {
            uint64_t v26 = 0;
          }
          else {
            uint64_t v26 = v21;
          }
LABEL_41:
          [a1 setGranularity:v26];
          goto LABEL_48;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t VISObjectSelectionConfigReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v6)) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        uint64_t v12 = *v4;
        uint64_t v13 = *(void *)(a2 + v12);
        unint64_t v14 = v13 + 1;
        if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
          break;
        }
        char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
        *(void *)(a2 + v12) = v14;
        v11 |= (unint64_t)(v15 & 0x7F) << v9;
        if ((v15 & 0x80) == 0) {
          goto LABEL_12;
        }
        v9 += 7;
        BOOL v16 = v10++ >= 9;
        if (v16)
        {
          unint64_t v11 = 0;
          uint64_t v17 = *v6;
          int v18 = *(unsigned __int8 *)(a2 + v17);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
      uint64_t v17 = *v6;
      int v18 = *(unsigned __int8 *)(a2 + v17);
      if (*(unsigned char *)(a2 + v17)) {
        unint64_t v11 = 0;
      }
LABEL_14:
      if (v18 || (v11 & 7) == 4) {
        break;
      }
      switch((v11 >> 3))
      {
        case 1u:
          uint64_t v20 = *v4;
          unint64_t v21 = *(void *)(a2 + v20);
          if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
            *(void *)(a2 + v20) = v21 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setUnknown_label_threshold:", a3);
          continue;
        case 2u:
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (2)
          {
            uint64_t v26 = *v4;
            uint64_t v27 = *(void *)(a2 + v26);
            unint64_t v28 = v27 + 1;
            if (v27 == -1 || v28 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v29 = *(unsigned char *)(*(void *)(a2 + *v8) + v27);
              *(void *)(a2 + v26) = v28;
              v25 |= (unint64_t)(v29 & 0x7F) << v23;
              if (v29 < 0)
              {
                v23 += 7;
                BOOL v16 = v24++ >= 9;
                if (v16)
                {
                  uint64_t v25 = 0;
                  goto LABEL_54;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v25 = 0;
          }
LABEL_54:
          objc_msgSend(a1, "setEnable_text_state_selection:", v25 != 0);
          continue;
        case 3u:
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v32 = 0;
          while (2)
          {
            uint64_t v33 = *v4;
            uint64_t v34 = *(void *)(a2 + v33);
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)(a2 + *v5))
            {
              *(unsigned char *)(a2 + *v6) = 1;
            }
            else
            {
              char v36 = *(unsigned char *)(*(void *)(a2 + *v8) + v34);
              *(void *)(a2 + v33) = v35;
              v32 |= (unint64_t)(v36 & 0x7F) << v30;
              if (v36 < 0)
              {
                v30 += 7;
                BOOL v16 = v31++ >= 9;
                if (v16)
                {
                  uint64_t v37 = 0;
                  goto LABEL_59;
                }
                continue;
              }
            }
            break;
          }
          if (*(unsigned char *)(a2 + *v6)) {
            uint64_t v37 = 0;
          }
          else {
            uint64_t v37 = v32;
          }
LABEL_59:
          objc_msgSend(a1, "setMax_number_of_text_entities:", v37);
          continue;
        case 4u:
          uint64_t v38 = *v4;
          unint64_t v39 = *(void *)(a2 + v38);
          if (v39 <= 0xFFFFFFFFFFFFFFFBLL && v39 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v39);
            *(void *)(a2 + v38) = v39 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setText_book_world_distance_threshold:", a3);
          continue;
        case 5u:
          uint64_t v40 = *v4;
          unint64_t v41 = *(void *)(a2 + v40);
          if (v41 <= 0xFFFFFFFFFFFFFFFBLL && v41 + 4 <= *(void *)(a2 + *v5))
          {
            LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v41);
            *(void *)(a2 + v40) = v41 + 4;
          }
          else
          {
            *(unsigned char *)(a2 + v17) = 1;
            a3 = 0.0;
          }
          objc_msgSend(a1, "setBounding_box_padding_for_cropping:", a3);
          continue;
        case 6u:
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v44 = 0;
          break;
        default:
          uint64_t result = PBReaderSkipValueWithTag();
          if (!result) {
            return result;
          }
          continue;
      }
      while (1)
      {
        uint64_t v45 = *v4;
        uint64_t v46 = *(void *)(a2 + v45);
        unint64_t v47 = v46 + 1;
        if (v46 == -1 || v47 > *(void *)(a2 + *v5)) {
          break;
        }
        char v48 = *(unsigned char *)(*(void *)(a2 + *v8) + v46);
        *(void *)(a2 + v45) = v47;
        v44 |= (unint64_t)(v48 & 0x7F) << v42;
        if ((v48 & 0x80) == 0) {
          goto LABEL_61;
        }
        v42 += 7;
        BOOL v16 = v43++ >= 9;
        if (v16)
        {
          uint64_t v44 = 0;
          goto LABEL_63;
        }
      }
      *(unsigned char *)(a2 + *v6) = 1;
LABEL_61:
      if (*(unsigned char *)(a2 + *v6)) {
        uint64_t v44 = 0;
      }
LABEL_63:
      objc_msgSend(a1, "setEnable_object_selection:", v44 != 0);
    }
    while (*(void *)(a2 + *v4) < *(void *)(a2 + *v5));
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t VISLabeledPRPointReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v6))
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          uint64_t v12 = *v4;
          uint64_t v13 = *(void *)(a2 + v12);
          unint64_t v14 = v13 + 1;
          if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
          *(void *)(a2 + v12) = v14;
          v11 |= (unint64_t)(v15 & 0x7F) << v9;
          if ((v15 & 0x80) == 0) {
            goto LABEL_12;
          }
          v9 += 7;
          if (v10++ >= 9)
          {
            unint64_t v11 = 0;
            uint64_t v17 = *v6;
            int v18 = *(unsigned __int8 *)(a2 + v17);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        if (*(unsigned char *)(a2 + v17)) {
          unint64_t v11 = 0;
        }
LABEL_14:
        if (v18) {
          BOOL v19 = 1;
        }
        else {
          BOOL v19 = (v11 & 7) == 4;
        }
        if (!v19)
        {
          switch((v11 >> 3))
          {
            case 1u:
              uint64_t v20 = *v4;
              unint64_t v21 = *(void *)(a2 + v20);
              if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
                *(void *)(a2 + v20) = v21 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setConfidence:a3];
              goto LABEL_39;
            case 2u:
              uint64_t v26 = *v4;
              unint64_t v27 = *(void *)(a2 + v26);
              if (v27 <= 0xFFFFFFFFFFFFFFFBLL && v27 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v27);
                *(void *)(a2 + v26) = v27 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setPrecision:a3];
              goto LABEL_39;
            case 3u:
              uint64_t v22 = *v4;
              unint64_t v23 = *(void *)(a2 + v22);
              if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v23);
                *(void *)(a2 + v22) = v23 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setRecall:a3];
              goto LABEL_39;
            case 4u:
              unsigned int v24 = PBReaderReadString();
              [a1 setLabel:v24];
              goto LABEL_27;
            case 5u:
              unsigned int v24 = PBReaderReadString();
              objc_msgSend(a1, "setReadable_label:", v24);
LABEL_27:

              goto LABEL_39;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_39:
              if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
                return *(unsigned char *)(a2 + *v6) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t VISOperatingPointSelectorsReadFrom(void *a1, uint64_t a2, double a3)
{
  v4 = (int *)MEMORY[0x1E4F940E8];
  v5 = (int *)MEMORY[0x1E4F940E0];
  v6 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    char v8 = (int *)MEMORY[0x1E4F940B8];
    while (2)
    {
      if (!*(unsigned char *)(a2 + *v6))
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          uint64_t v12 = *v4;
          uint64_t v13 = *(void *)(a2 + v12);
          unint64_t v14 = v13 + 1;
          if (v13 == -1 || v14 > *(void *)(a2 + *v5)) {
            break;
          }
          char v15 = *(unsigned char *)(*(void *)(a2 + *v8) + v13);
          *(void *)(a2 + v12) = v14;
          v11 |= (unint64_t)(v15 & 0x7F) << v9;
          if ((v15 & 0x80) == 0) {
            goto LABEL_12;
          }
          v9 += 7;
          if (v10++ >= 9)
          {
            unint64_t v11 = 0;
            uint64_t v17 = *v6;
            int v18 = *(unsigned __int8 *)(a2 + v17);
            goto LABEL_14;
          }
        }
        *(unsigned char *)(a2 + *v6) = 1;
LABEL_12:
        uint64_t v17 = *v6;
        int v18 = *(unsigned __int8 *)(a2 + v17);
        if (*(unsigned char *)(a2 + v17)) {
          unint64_t v11 = 0;
        }
LABEL_14:
        if (v18) {
          BOOL v19 = 1;
        }
        else {
          BOOL v19 = (v11 & 7) == 4;
        }
        if (!v19)
        {
          switch((v11 >> 3))
          {
            case 1u:
              uint64_t v20 = *v4;
              unint64_t v21 = *(void *)(a2 + v20);
              if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v21);
                *(void *)(a2 + v20) = v21 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setConfidence:a3];
              goto LABEL_41;
            case 2u:
              uint64_t v27 = *v4;
              unint64_t v28 = *(void *)(a2 + v27);
              if (v28 <= 0xFFFFFFFFFFFFFFFBLL && v28 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v28);
                *(void *)(a2 + v27) = v28 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setPrecision:a3];
              goto LABEL_41;
            case 3u:
              uint64_t v22 = *v4;
              unint64_t v23 = *(void *)(a2 + v22);
              if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v23);
                *(void *)(a2 + v22) = v23 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              [a1 setRecall:a3];
              goto LABEL_41;
            case 4u:
              uint64_t v24 = *v4;
              unint64_t v25 = *(void *)(a2 + v24);
              if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(void *)(a2 + *v5))
              {
                LODWORD(a3) = *(_DWORD *)(*(void *)(a2 + *v8) + v25);
                *(void *)(a2 + v24) = v25 + 4;
              }
              else
              {
                *(unsigned char *)(a2 + v17) = 1;
                a3 = 0.0;
              }
              objc_msgSend(a1, "setF_beta:", a3);
              goto LABEL_41;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_41:
              if (*(void *)(a2 + *v4) >= *(void *)(a2 + *v5)) {
                return *(unsigned char *)(a2 + *v6) == 0;
              }
              continue;
          }
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + *v6) == 0;
}

uint64_t VISOperatingPointsCollectionReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(VISSelectedOperatingPoint);
        if (!PBReaderPlaceMark() || !VISSelectedOperatingPointReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        if (v17) {
          objc_msgSend(a1, "addPoints:", v17, 0, 0);
        }
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

BOOL VISSelectedOperatingPointReadFrom(void *a1, uint64_t a2)
{
  v3 = (int *)MEMORY[0x1E4F940E8];
  v4 = (int *)MEMORY[0x1E4F940E0];
  v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    v7 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (*(unsigned char *)(a2 + *v5)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
      if ((v10 >> 3) == 2) {
        break;
      }
      if ((v10 >> 3) == 1)
      {
        uint64_t v17 = objc_alloc_init(VISOperatingPointSelectors);
        if (!PBReaderPlaceMark() || (VISOperatingPointSelectorsReadFrom(v17, a2, v18) & 1) == 0) {
          goto LABEL_31;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSelector:", v17, 0, 0);
LABEL_26:

        goto LABEL_28;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_28:
      if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
        return *(unsigned char *)(a2 + *v5) == 0;
      }
    }
    uint64_t v17 = objc_alloc_init(VISLabeledPRPoint);
    if (!PBReaderPlaceMark() || (VISLabeledPRPointReadFrom(v17, a2, v19) & 1) == 0)
    {
LABEL_31:

      return 0;
    }
    PBReaderRecallMark();
    objc_msgSend(a1, "setSelected:", v17, 0, 0);
    goto LABEL_26;
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

id _VISharedAnalytics()
{
  if (_VISharedAnalytics_onceToken[0] != -1) {
    dispatch_once(_VISharedAnalytics_onceToken, &__block_literal_global);
  }
  v0 = (void *)_VISharedAnalytics_analytics;
  return v0;
}

void VIAnalyticsLogStartEntryPoint(uint64_t a1, void *a2)
{
}

void VIAnalyticsLogStartEntryPointWithEvent(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  id v5 = a2;
  if (!a3)
  {
    if (+[VILogger shouldLogMessage])
    {
      v6 = +[VILogger log];
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        int v8 = 138412290;
        id v9 = v5;
        _os_log_impl(&dword_1DCCF9000, v6, OS_LOG_TYPE_ERROR, "VIAnalyticsLogStartEntryPointWithEvent passed SFViewAppearEventUnknown from %@", (uint8_t *)&v8, 0xCu);
      }
    }
    a3 = 28;
  }
  v7 = +[VIAEntryPointEvent startEventWithQueryID:a1 viewAppearEvent:a3 originatingApplication:v5];
  +[VIAnalytics logEvent:v7];
}

void VIAnalyticsLogEndEntryPoint(uint64_t a1)
{
  id v1 = +[VIAEntryPointEvent endEventWithOriginatingApplication:a1];
  +[VIAnalytics logEvent:v1];
}

void VIAnalyticsLogCacheHit(uint64_t a1, uint64_t a2, void *a3)
{
  v16[3] = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  v15[0] = @"com.apple.argos.cache_hit_context_key.query_id";
  v6 = [NSNumber numberWithUnsignedLongLong:a1];
  v16[0] = v6;
  v15[1] = @"com.apple.argos.cache_hit_context_key.cached_result_query_id";
  v7 = [NSNumber numberWithUnsignedLongLong:a2];
  v15[2] = @"com.apple.argos.cache_hit_context_key.application_id";
  v16[1] = v7;
  v16[2] = v5;
  int v8 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v16 forKeys:v15 count:3];

  id v12 = 0;
  id v9 = +[VIACacheHitContext contextWithDictionary:v8 error:&v12];
  id v10 = v12;
  if (v9)
  {
    uint64_t v11 = [[VIACacheHitEvent alloc] initWithContext:v9];
    +[VIAnalytics logEvent:v11];
  }
  else
  {
    if (!+[VILogger shouldLogMessage]) {
      goto LABEL_4;
    }
    uint64_t v11 = +[VILogger log];
    if (os_log_type_enabled(&v11->super, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      id v14 = v10;
      _os_log_impl(&dword_1DCCF9000, &v11->super, OS_LOG_TYPE_ERROR, "Could not create VIACacheHitContext: %{public}@", buf, 0xCu);
    }
  }

LABEL_4:
}

void VIAnalyticsLogCacheHitWithContext(void *a1)
{
  id v1 = a1;
  v2 = [[VIACacheHitEvent alloc] initWithContext:v1];

  +[VIAnalytics logEvent:v2];
}

__CVBuffer *VIRotateCVPixelBufferUsingVTSessionToUp(__CVBuffer *a1, int a2)
{
  switch(a2)
  {
    case 0:
      if (+[VILogger shouldLogMessage])
      {
        v3 = +[VILogger log];
        if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_1DCCF9000, v3, OS_LOG_TYPE_ERROR, "Invalid from orientation", buf, 2u);
        }
      }
      return a1;
    case 1:
      return a1;
    case 2:
      int v4 = 0;
      goto LABEL_15;
    case 3:
      int v4 = 0;
      goto LABEL_15;
    case 4:
      int v4 = 0;
      goto LABEL_15;
    case 5:
      int v4 = 1;
      goto LABEL_15;
    case 6:
      int v4 = 1;
      goto LABEL_15;
    case 7:
      int v4 = 1;
      goto LABEL_15;
    case 8:
      int v4 = 1;
      goto LABEL_15;
    default:
      int v4 = 0;
LABEL_15:
      id v5 = 0;
      if (!VTPixelRotationSessionCreateWithRotationAndFlip())
      {
        size_t Width = CVPixelBufferGetWidth(a1);
        size_t Height = CVPixelBufferGetHeight(a1);
        BOOL v8 = v4 == 0;
        if (v4) {
          size_t v9 = Height;
        }
        else {
          size_t v9 = Width;
        }
        if (v8) {
          size_t Width = Height;
        }
        OSType PixelFormatType = CVPixelBufferGetPixelFormatType(a1);
        id v5 = VICreateCVPixelBufferWithFormat(v9, Width, PixelFormatType);
        if (v5 && VTPixelRotationSessionRotateImage(0, a1, v5))
        {
          CVPixelBufferRelease(v5);
          id v5 = 0;
        }
        CFRelease(0);
      }
      return v5;
  }
}

void sub_1DCD098EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1DCD09A90(_Unwind_Exception *a1)
{
  int v4 = v3;

  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
}

void sub_1DCD0A290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1DCD0A484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15)
{
  if (__p) {
    operator delete(__p);
  }
  if (a14) {
    operator delete(a14);
  }

  _Unwind_Resume(a1);
}

void sub_1DCD0A57C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1DCD0A678(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *std::vector<long long>::vector(void *a1, unint64_t a2, void *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<long long>::__vallocate[abi:ne180100](a1, a2);
    v6 = (void *)a1[1];
    v7 = &v6[a2];
    uint64_t v8 = 8 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 8;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_1DCD0A744(_Unwind_Exception *exception_object)
{
  v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<long long>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::vector<long long>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void std::vector<long long>::__throw_length_error[abi:ne180100]()
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a2);
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E6CB16A0, MEMORY[0x1E4FBA1C8]);
}

void sub_1DCD0A83C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

void *std::vector<float>::vector(void *a1, unint64_t a2, _DWORD *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<float>::__vallocate[abi:ne180100](a1, a2);
    v6 = (_DWORD *)a1[1];
    v7 = &v6[a2];
    uint64_t v8 = 4 * a2;
    do
    {
      *v6++ = *a3;
      v8 -= 4;
    }
    while (v8);
    a1[1] = v7;
  }
  return a1;
}

void sub_1DCD0A920(_Unwind_Exception *exception_object)
{
  v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<float>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    std::vector<long long>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<float>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<float>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(4 * a2);
}

void *std::vector<float>::vector(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<float>::__vallocate[abi:ne180100](a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_1DCD0AA14(_Unwind_Exception *exception_object)
{
  v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

size_t VIPixelBufferSize(__CVBuffer *a1)
{
  size_t Width = CVPixelBufferGetWidth(a1);
  CVPixelBufferGetHeight(a1);
  return Width;
}

id VIImageDomainInfoFromKeys(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  v2 = objc_opt_new();
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v15;
    double v7 = *MEMORY[0x1E4F1DAD8];
    double v8 = *(double *)(MEMORY[0x1E4F1DAD8] + 8);
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v15 != v6) {
          objc_enumerationMutation(v3);
        }
        BYTE4(v13) = 0;
        LODWORD(v13) = 1;
        id v10 = -[VIImageRegionDomainInfo initWithDomainKey:labelName:glyphName:displayLabel:displayMessage:hasFocalPoint:focalPoint:isCornerGlyph:ocrResultsRequired:barcodeResultsRequired:isLowConfidence:shouldShowDynamicGlyph:]([VIImageRegionDomainInfo alloc], "initWithDomainKey:labelName:glyphName:displayLabel:displayMessage:hasFocalPoint:focalPoint:isCornerGlyph:ocrResultsRequired:barcodeResultsRequired:isLowConfidence:shouldShowDynamicGlyph:", *(void *)(*((void *)&v14 + 1) + 8 * i), 0, 0, 0, 0, 0, v7, v8, v13);
        [v2 addObject:v10];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v5);
  }

  uint64_t v11 = (void *)[v2 copy];
  return v11;
}

id VIImageDomainKeysFromInfo(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  v2 = objc_opt_new();
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        double v8 = objc_msgSend(*(id *)(*((void *)&v11 + 1) + 8 * i), "domainKey", (void)v11);
        [v2 addObject:v8];
      }
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  size_t v9 = (void *)[v2 copy];
  return v9;
}

CVPixelBufferRef VICreateCVPixelBufferWithFormat(size_t a1, size_t a2, OSType a3)
{
  v25[2] = *MEMORY[0x1E4F143B8];
  CVPixelBufferRef pixelBufferOut = 0;
  uint64_t v6 = *MEMORY[0x1E4F24C98];
  v24[0] = *MEMORY[0x1E4F24D20];
  v24[1] = v6;
  v25[0] = MEMORY[0x1E4F1CC08];
  v25[1] = &unk_1F3857820;
  CFDictionaryRef v7 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v25 forKeys:v24 count:2];
  CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CVReturn v9 = CVPixelBufferCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], a1, a2, a3, v7, &pixelBufferOut);
  if (CVPixelBufferIsPlanar(pixelBufferOut) && ((a2 | a1) & 1) != 0)
  {
    CVPixelBufferRelease(pixelBufferOut);
    CVPixelBufferRef pixelBufferOut = 0;
    if (a1 == 1) {
      size_t v10 = 2;
    }
    else {
      size_t v10 = a1 & 0xFFFFFFFFFFFFFFFELL;
    }
    if (a2 == 1) {
      size_t v11 = 2;
    }
    else {
      size_t v11 = a2 & 0xFFFFFFFFFFFFFFFELL;
    }
    if (+[VILogger shouldLogMessage])
    {
      long long v12 = +[VILogger log];
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134218752;
        size_t v17 = a1;
        __int16 v18 = 2048;
        size_t v19 = a2;
        __int16 v20 = 2048;
        size_t v21 = v10;
        __int16 v22 = 2048;
        size_t v23 = v11;
        _os_log_impl(&dword_1DCCF9000, v12, OS_LOG_TYPE_ERROR, "VIImageScaler: requested to create odd size planar image %zu x %zu, closest even image is allocated %zu x %zu", buf, 0x2Au);
      }
    }
    CVReturn v9 = CVPixelBufferCreate(v8, v10, v11, a3, v7, &pixelBufferOut);
  }
  if (v9) {
    CVPixelBufferRef v13 = 0;
  }
  else {
    CVPixelBufferRef v13 = pixelBufferOut;
  }

  return v13;
}

uint64_t _VTModifyPixelBufferWithColor(__CVBuffer *a1, unsigned int a2)
{
  CVPixelBufferLockBaseAddress(a1, 0);
  size_t Height = CVPixelBufferGetHeight(a1);
  size_t BytesPerRow = CVPixelBufferGetBytesPerRow(a1);
  if ((BytesPerRow & 0x3F) != 0)
  {
    if (+[VILogger shouldLogMessage])
    {
      uint64_t v6 = +[VILogger log];
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        v14[0] = 0;
        _os_log_impl(&dword_1DCCF9000, v6, OS_LOG_TYPE_ERROR, "VIImageScaler: Failed to modify PixelBuffer: only 64 byte aligned buffers are supported", (uint8_t *)v14, 2u);
      }
    }
    return 4294945519;
  }
  else
  {
    size_t v8 = BytesPerRow;
    BaseAddress = (char *)CVPixelBufferGetBaseAddress(a1);
    if (Height)
    {
      uint64_t v10 = 0;
      *(int32x2_t *)&long long v11 = vdup_n_s32(a2);
      *((void *)&v11 + 1) = v11;
      do
      {
        if (v8)
        {
          for (size_t i = 0; i < v8; i += 64)
          {
            CVPixelBufferRef v13 = &BaseAddress[i];
            *(_OWORD *)CVPixelBufferRef v13 = v11;
            *((_OWORD *)v13 + 1) = v11;
            *((_OWORD *)v13 + 2) = v11;
            *((_OWORD *)v13 + 3) = v11;
          }
        }
        ++v10;
        BaseAddress += 64 * (v8 >> 6);
      }
      while (v10 != Height);
    }
    CVPixelBufferUnlockBaseAddress(a1, 0);
    return 0;
  }
}

double VIRectIntegral(__CVBuffer *a1, int a2, double a3, double a4, double a5, double a6)
{
  int IsPlanar = CVPixelBufferIsPlanar(a1);
  CVPixelBufferRef v13 = _CGRectIntegralEven;
  if (!IsPlanar) {
    CVPixelBufferRef v13 = (double (*)(double, double, double, double))MEMORY[0x1E4F1DB18];
  }
  double v14 = v13(a3, a4, a5, a6);
  if (a2)
  {
    VIPixelBufferSize(a1);
    if (CVPixelBufferIsPlanar(a1)) {
      __asm { FMOV            V1.2D, #0.5 }
    }
    if (v14 < 0.0) {
      return 0.0;
    }
  }
  return v14;
}

void sub_1DCD13A28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t VIvnCropScaleToVi(unint64_t a1)
{
  if (a1 < 3) {
    return a1 + 1;
  }
  else {
    return 0;
  }
}

void VIPredictionInNormalizedImageCoordinates(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, CGFloat a10, CGFloat a11, CGFloat a12, CGFloat a13)
{
  v60.origin.x = a10;
  v60.origin.y = a11;
  v60.size.double width = a12;
  v60.size.double height = a13;
  v58.origin.x = 0.0;
  v58.origin.y = 0.0;
  v58.size.double width = 1.0;
  v58.size.double height = 1.0;
  CGRect v59 = CGRectIntersection(v58, v60);
  double width = v59.size.width;
  double height = v59.size.height;
  if (!CGRectIsNull(v59))
  {
    double v29 = a6 * width / (a7 * height);
    double v30 = a8 / a9;
    double v31 = a4;
    double v32 = a5;
    switch(a1)
    {
      case 1:
        BOOL v33 = v30 <= v29;
        float v46 = v29 / v30;
        float v47 = 0.0;
        float v48 = v30 / v29;
        float v49 = (float)(v48 + -1.0) * 0.5;
        if (v33)
        {
          float v49 = 0.0;
          float v47 = (float)(v46 + -1.0) * 0.5;
          float v48 = 1.0;
          float v50 = v46;
        }
        else
        {
          float v50 = 1.0;
        }
        v55[0] = 1.0 / v50;
        v55[1] = 0.0;
        v55[2] = 0.0;
        v55[3] = 1.0 / v48;
        v55[4] = (float)(v47 / v50);
        v55[5] = (float)(v49 / v48);
        uint64_t v45 = (CGAffineTransform *)v55;
        goto LABEL_18;
      case 2:
      case 4:
        BOOL v33 = v30 <= v29;
        float v34 = v29 / v30;
        float v35 = (float)(v34 + -1.0) * -0.5;
        double v36 = v34;
        double v37 = v35;
        double v38 = 1.0;
        double v39 = 0.0;
        float v40 = v30 / v29;
        double v41 = v40;
        double v42 = (float)((float)(v40 + -1.0) * -0.5);
        if (v33) {
          double v43 = v37;
        }
        else {
          double v43 = 0.0;
        }
        if (v33)
        {
          double v44 = v36;
        }
        else
        {
          double v39 = v42;
          double v44 = 1.0;
        }
        if (!v33) {
          double v38 = v41;
        }
        if (a1 == 2)
        {
          *(double *)uint64_t v57 = v38;
          v57[1] = 0;
          v57[2] = 0;
          *(double *)&v57[3] = v44;
          *(double *)&v57[4] = v39;
          *(double *)&v57[5] = v43;
          uint64_t v45 = (CGAffineTransform *)v57;
        }
        else
        {
          v56.a = v38;
          v56.b = 0.0;
          v56.c = 0.0;
          v56.d = v44;
          v56.tx = 0.0;
          v56.ty = 0.0;
          uint64_t v45 = &v56;
        }
LABEL_18:
        double v51 = a2;
        double v52 = a3;
        CGRectApplyAffineTransform(*(CGRect *)(&v31 - 2), v45);
        break;
      default:
        return;
    }
  }
}

double _CGRectIntegralEven(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v8 = floor(a1 * 0.5);
  double v9 = round(v8 + v8);
  CGFloat v10 = a1;
  CGRectGetMaxX(*(CGRect *)(&a2 - 1));
  v12.origin.x = a1;
  v12.origin.y = a2;
  v12.size.double width = a3;
  v12.size.double height = a4;
  CGRectGetMaxY(v12);
  return v9;
}

id _VIServiceNilInputError()
{
  v5[2] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *MEMORY[0x1E4F285A0];
  v4[0] = *MEMORY[0x1E4F28568];
  v4[1] = v0;
  v5[0] = @"Unsatisfied parameters.";
  v5[1] = @"Please check for nil input parameters.";
  id v1 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v5 forKeys:v4 count:2];
  v2 = [MEMORY[0x1E4F28C58] errorWithDomain:@"com.apple.argos.objective_c" code:-1 userInfo:v1];

  return v2;
}

uint64_t VIObjectIsEqual(unint64_t a1, uint64_t a2)
{
  if (a1 | a2) {
    return [(id)a1 isEqual:a2];
  }
  else {
    return 1;
  }
}

BOOL VICompareFloat(float a1, float a2)
{
  float v2 = vabds_f32(a1, a2);
  return v2 < (float)(fabsf(a1 + a2) * 0.00000011921) || v2 < 1.1755e-38;
}

BOOL VICompareDouble(double a1, double a2)
{
  double v2 = vabdd_f64(a1, a2);
  return v2 < fabs(a1 + a2) * 2.22044605e-16 || v2 < 2.22507386e-308;
}

BOOL VICompareUInt64(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

BOOL VICompareCGRect(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8 = vabdd_f64(a1, a5);
  double v9 = fabs(a1 + a5) * 2.22044605e-16;
  if (v8 >= 2.22507386e-308 && v8 >= v9) {
    return 0;
  }
  double v11 = vabdd_f64(a2, a6);
  double v12 = fabs(a2 + a6) * 2.22044605e-16;
  if (v11 >= 2.22507386e-308 && v11 >= v12) {
    return 0;
  }
  double v14 = vabdd_f64(a3, a7);
  double v15 = fabs(a3 + a7) * 2.22044605e-16;
  if (v14 >= 2.22507386e-308 && v14 >= v15) {
    return 0;
  }
  double v17 = vabdd_f64(a4, a8);
  return v17 < fabs(a4 + a8) * 2.22044605e-16 || v17 < 2.22507386e-308;
}

uint64_t VICompactMapArray(void *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  uint64_t v4 = a2;
  uint64_t v5 = objc_opt_new();
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v6 = v3;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v15;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v6);
        }
        double v11 = v4[2](v4, *(void *)(*((void *)&v14 + 1) + 8 * v10));
        if (v11) {
          objc_msgSend(v5, "addObject:", v11, (void)v14);
        }

        ++v10;
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v8);
  }

  uint64_t v12 = [v5 copy];
  return v12;
}

uint64_t VIFlatMapArray(void *a1, void *a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  uint64_t v4 = a2;
  uint64_t v5 = objc_opt_new();
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v6 = v3;
  uint64_t v7 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)v15;
    do
    {
      uint64_t v10 = 0;
      do
      {
        if (*(void *)v15 != v9) {
          objc_enumerationMutation(v6);
        }
        double v11 = v4[2](v4, *(void *)(*((void *)&v14 + 1) + 8 * v10));
        if (v11) {
          objc_msgSend(v5, "addObjectsFromArray:", v11, (void)v14);
        }

        ++v10;
      }
      while (v8 != v10);
      uint64_t v8 = [v6 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v8);
  }

  uint64_t v12 = [v5 copy];
  return v12;
}

double VIFlipOriginNormalizedRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MinX = CGRectGetMinX(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.double width = a3;
  v10.size.double height = a4;
  CGRectGetMaxY(v10);
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.double width = a3;
  v11.size.double height = a4;
  CGRectGetWidth(v11);
  v12.origin.x = a1;
  v12.origin.y = a2;
  v12.size.double width = a3;
  v12.size.double height = a4;
  CGRectGetHeight(v12);
  return MinX;
}

id _VIQueryContextMapperError(uint64_t a1, void *a2)
{
  v12[2] = *MEMORY[0x1E4F143B8];
  id v3 = NSString;
  id v4 = a2;
  uint64_t v5 = [v3 stringWithFormat:@"Unsatisfied value type for key: %@", a1];
  id v6 = [NSString stringWithFormat:@"The expected type is: %@", v4];

  uint64_t v7 = *MEMORY[0x1E4F285A0];
  v11[0] = *MEMORY[0x1E4F28568];
  v11[1] = v7;
  v12[0] = v5;
  v12[1] = v6;
  uint64_t v8 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v12 forKeys:v11 count:2];
  uint64_t v9 = [MEMORY[0x1E4F28C58] errorWithDomain:@"com.apple.argos.query_context.error_domain" code:2 userInfo:v8];

  return v9;
}

id _VIQueryContextMapperStringValueParseError(uint64_t a1)
{
  v8[2] = *MEMORY[0x1E4F143B8];
  id v1 = [NSString stringWithFormat:@"Unsatisfied value string format for key: %@", a1];
  double v2 = [NSString stringWithFormat:@"The value with error is: %@", 0];
  uint64_t v3 = *MEMORY[0x1E4F285A0];
  v7[0] = *MEMORY[0x1E4F28568];
  v7[1] = v3;
  v8[0] = v1;
  v8[1] = v2;
  id v4 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v8 forKeys:v7 count:2];
  uint64_t v5 = [MEMORY[0x1E4F28C58] errorWithDomain:@"com.apple.argos.query_context.error_domain" code:3 userInfo:v4];

  return v5;
}

__CFString *_VITeamIDToUse(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  if ([a2 count])
  {
    if ([v6 length]
      && ([MEMORY[0x1E4F1CAD0] setWithArray:&unk_1F3857838],
          uint64_t v7 = objc_claimAutoreleasedReturnValue(),
          char v8 = [v7 containsObject:v6],
          v7,
          (v8 & 1) != 0))
    {
      uint64_t v9 = @"argosinternal";
    }
    else
    {
      uint64_t v9 = (__CFString *)v5;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }

  return v9;
}

void sub_1DCD1B640(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1DCD1BC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

id VIACacheHitContextMapperError(uint64_t a1, void *a2)
{
  v12[2] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = NSString;
  id v4 = a2;
  id v5 = [v3 stringWithFormat:@"Unsatisfied value type for key: %@", a1];
  id v6 = [NSString stringWithFormat:@"The expected type is: %@", v4];

  uint64_t v7 = *MEMORY[0x1E4F285A0];
  v11[0] = *MEMORY[0x1E4F28568];
  v11[1] = v7;
  v12[0] = v5;
  v12[1] = v6;
  char v8 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v12 forKeys:v11 count:2];
  uint64_t v9 = [MEMORY[0x1E4F28C58] errorWithDomain:@"com.apple.argos.cache_hit_context.error_domain" code:2 userInfo:v8];

  return v9;
}

id VIACacheHitContextMapperMissingValueError(uint64_t a1)
{
  v6[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = [NSString stringWithFormat:@"Missing required value for key: %@", a1];
  uint64_t v5 = *MEMORY[0x1E4F28568];
  v6[0] = v1;
  double v2 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v6 forKeys:&v5 count:1];
  uint64_t v3 = [MEMORY[0x1E4F28C58] errorWithDomain:@"com.apple.argos.cache_hit_context.error_domain" code:3 userInfo:v2];

  return v3;
}

id _descriptionForFloatArray(void *a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  id v2 = objc_alloc_init(MEMORY[0x1E4F28E78]);
  [v2 appendString:@"["];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v3 = v1;
  uint64_t v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = 0;
    uint64_t v7 = *(void *)v12;
    do
    {
      for (uint64_t i = 0; i != v5; ++i)
      {
        if (*(void *)v12 != v7) {
          objc_enumerationMutation(v3);
        }
        [*(id *)(*((void *)&v11 + 1) + 8 * i) floatValue];
        objc_msgSend(v2, "appendFormat:", @"%0.8f", v9);
        if (v6 + 1 + i < (unint64_t)[v3 count]) {
          [v2 appendString:@", "];
        }
      }
      v6 += v5;
      uint64_t v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }

  [v2 appendString:@"]"];
  return v2;
}

__CVBuffer *VIRescaleCVPixelBufferUsingVTSession(__CVBuffer *a1, double a2)
{
  id v3 = a1;
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  double Width = (double)CVPixelBufferGetWidth(a1);
  size_t Height = CVPixelBufferGetHeight(v3);
  double v6 = (double)Height;
  if (Width >= (double)Height) {
    double v7 = (double)Height;
  }
  else {
    double v7 = Width;
  }
  if (v7 > a2)
  {
    VTPixelTransferSessionRef pixelTransferSessionOut = 0;
    char v8 = 0;
    if (!VTPixelTransferSessionCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], &pixelTransferSessionOut))
    {
      char v8 = VICreateCVPixelBufferWithFormat((int)(a2 / v7 * Width), (int)(a2 / v7 * v6), 0x42475241u);
      VTPixelTransferSessionRef v9 = pixelTransferSessionOut;
      if (v8)
      {
        if (VTPixelTransferSessionTransferImage(pixelTransferSessionOut, v3, v8))
        {
          CVPixelBufferRelease(v8);
          char v8 = 0;
        }
        else if (+[VILogger shouldLogMessage])
        {
          CGRect v10 = +[VILogger log];
          if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
          {
            size_t v11 = CVPixelBufferGetWidth(v3);
            size_t v12 = CVPixelBufferGetHeight(v3);
            OSType PixelFormatType = CVPixelBufferGetPixelFormatType(v3);
            OSType v14 = CVPixelBufferGetPixelFormatType(v8);
            *(_DWORD *)buf = 134219264;
            size_t v18 = v11;
            __int16 v19 = 2048;
            size_t v20 = v12;
            __int16 v21 = 1024;
            OSType v22 = PixelFormatType;
            __int16 v23 = 2048;
            uint64_t v24 = (int)(a2 / v7 * Width);
            __int16 v25 = 2048;
            uint64_t v26 = (int)(a2 / v7 * v6);
            __int16 v27 = 1024;
            OSType v28 = v14;
            _os_log_impl(&dword_1DCCF9000, v10, OS_LOG_TYPE_DEBUG, "VIPrescaling (w, h, pixtype): from (%zu, %zu, %d) to (%zu, %zu, %d)", buf, 0x36u);
          }
        }
        VTPixelTransferSessionRef v9 = pixelTransferSessionOut;
      }
      CFRelease(v9);
    }
    return v8;
  }
  return v3;
}

void _HashItem(void *a1, void *a2)
{
  id v3 = (void *)MEMORY[0x1E4F1CA58];
  id v4 = a1;
  uint64_t v5 = [v3 dataWithLength:32];
  id v6 = v4;
  double v7 = (const void *)[v6 bytes];
  CC_LONG v8 = [v6 length];

  id v9 = v5;
  CC_SHA256(v7, v8, (unsigned __int8 *)[v9 mutableBytes]);
  id v11 = v9;
  CGRect v10 = (void *)[v11 bytes];
  *a2 = *v10;
  a2[1] = v10[1];
}

id VIAllVisualSearchDomains()
{
  v8[18] = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)MEMORY[0x1E4F1CA80];
  v8[0] = @"com.apple.argos.domain_key.art";
  v8[1] = @"com.apple.argos.domain_key.book";
  v8[2] = @"com.apple.argos.domain_key.cats";
  void v8[3] = @"com.apple.argos.domain_key.dogs";
  v8[4] = @"com.apple.argos.domain_key.nature";
  v8[5] = @"com.apple.argos.domain_key.media";
  v8[6] = @"com.apple.argos.domain_key.landmark";
  v8[7] = @"com.apple.argos.domain_key.object2D";
  v8[8] = @"com.apple.argos.domain_key.album";
  v8[9] = @"com.apple.argos.domain_key.animals";
  v8[10] = @"com.apple.argos.domain_key.naturalLandmark";
  v8[11] = @"com.apple.argos.domain_key.sculpture";
  v8[12] = @"com.apple.argos.domain_key.skyline";
  v8[13] = @"com.apple.argos.domain_key.insects";
  v8[14] = @"com.apple.argos.domain_key.birds";
  v8[15] = @"com.apple.argos.domain_key.reptiles";
  v8[16] = @"com.apple.argos.domain_key.mammals";
  v8[17] = @"com.apple.argos.domain_key.storefront";
  id v1 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:18];
  id v2 = [v0 setWithArray:v1];

  if (+[VIFeatureFlags isVisualLookUpDawnDomainsEnabled])
  {
    v7[0] = @"com.apple.argos.domain_key.food";
    v7[1] = @"com.apple.argos.domain_key.laundryCareSymbol";
    void v7[2] = @"com.apple.argos.domain_key.autoSymbol";
    v7[3] = @"com.apple.argos.domain_key.brandLogoSymbol";
    v7[4] = @"com.apple.argos.domain_key.signSymbol";
    id v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v7 count:5];
    [v2 addObjectsFromArray:v3];
  }
  if (+[VIFeatureFlags isVisualLookUpDawnDomainsCPEnabled])
  {
    v6[0] = @"com.apple.argos.domain_key.apparel";
    v6[1] = @"com.apple.argos.domain_key.accessories";
    id v4 = [MEMORY[0x1E4F1C978] arrayWithObjects:v6 count:2];
    [v2 addObjectsFromArray:v4];
  }
  return v2;
}

uint64_t VIIsSettingsEnabledForLookup()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x1E4F1CB18]) initWithSuiteName:@"com.apple.spotlightui"];
  id v1 = [v0 objectForKey:@"SBSearchDisabledDomains"];
  uint64_t v2 = [v1 containsObject:@"DOMAIN_PARSEC"] ^ 1;

  return v2;
}

void type metadata accessor for CGImagePropertyOrientation(uint64_t a1)
{
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
}

void type metadata accessor for VNImageCropAndScaleOption(uint64_t a1)
{
}

void type metadata accessor for VIQueryContextImageType(uint64_t a1)
{
}

void type metadata accessor for VISuggestionType(uint64_t a1)
{
}

void type metadata accessor for VTPixelTransferSession(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for R1Interval(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for R1Interval(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for VNBarcodeSymbology(uint64_t a1)
{
}

void type metadata accessor for CKContainerEnvironment(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for ImageHandler(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for NormalizedRect(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NormalizedRect(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_1DCD1F8F0(uint64_t a1, uint64_t a2)
{
  return sub_1DCD1FFEC(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1DCD1F914(uint64_t a1, uint64_t a2)
{
  return sub_1DCD1FFEC(a1, a2, MEMORY[0x1E4FBB198]);
}

_DWORD *sub_1DCD1F938@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_1DCD1F948(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_1DCD1F954@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1DCD1F964(uint64_t a1, id *a2)
{
  uint64_t result = sub_1DD0483E8();
  *a2 = 0;
  return result;
}

uint64_t sub_1DCD1F9DC(uint64_t a1, id *a2)
{
  char v3 = sub_1DD0483F8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1DCD1FA5C@<X0>(uint64_t *a1@<X8>)
{
  sub_1DD048408();
  uint64_t v2 = sub_1DD0483D8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_1DCD1FAA4(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

BOOL sub_1DCD1FAB8(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_1DCD1FACC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1DCD1FAD8(uint64_t a1)
{
  uint64_t v2 = sub_1DCD1FE10((unint64_t *)&qword_1EAB02360, type metadata accessor for CIImageRepresentationOption);
  uint64_t v3 = sub_1DCD1FE10((unint64_t *)&unk_1EAB02368, type metadata accessor for CIImageRepresentationOption);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DCD1FB94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DD0483D8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DCD1FBDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DD048408();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DCD1FC08(uint64_t a1)
{
  uint64_t v2 = sub_1DCD1FE10((unint64_t *)&qword_1EBE82C10, type metadata accessor for VNImageOption);
  uint64_t v3 = sub_1DCD1FE10(&qword_1EAB02388, type metadata accessor for VNImageOption);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DCD1FCC4(uint64_t a1)
{
  uint64_t v2 = sub_1DCD1FE10(&qword_1EAB02330, type metadata accessor for VNBarcodeSymbology);
  uint64_t v3 = sub_1DCD1FE10(&qword_1EAB02338, type metadata accessor for VNBarcodeSymbology);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DCD1FD80()
{
  return sub_1DCD1FE10(&qword_1EAB022F0, type metadata accessor for VNBarcodeSymbology);
}

uint64_t sub_1DCD1FDC8()
{
  return sub_1DCD1FE10(&qword_1EAB022F8, type metadata accessor for VNBarcodeSymbology);
}

uint64_t sub_1DCD1FE10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCD1FE58()
{
  return sub_1DCD1FE10(&qword_1EAB02300, type metadata accessor for VNBarcodeSymbology);
}

uint64_t sub_1DCD1FEA0(uint64_t a1)
{
  uint64_t v2 = sub_1DCD1FE10(&qword_1EAB02320, type metadata accessor for VISuggestionType);
  uint64_t v3 = sub_1DCD1FE10(&qword_1EAB02328, type metadata accessor for VISuggestionType);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1DCD1FF5C()
{
  return sub_1DCD1FE10(&qword_1EAB02308, type metadata accessor for VISuggestionType);
}

uint64_t sub_1DCD1FFA4()
{
  return sub_1DCD1FE10(&qword_1EAB02310, type metadata accessor for VISuggestionType);
}

uint64_t sub_1DCD1FFEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1DD048408();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1DCD20030()
{
  sub_1DD048408();
  sub_1DD0484F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCD20084()
{
  sub_1DD048408();
  sub_1DD0490B8();
  sub_1DD0484F8();
  uint64_t v0 = sub_1DD049108();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DCD200F8()
{
  uint64_t v0 = sub_1DD048408();
  uint64_t v2 = v1;
  if (v0 == sub_1DD048408() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1DD048FA8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1DCD20184()
{
  return sub_1DCD1FE10(&qword_1EAB02318, type metadata accessor for VISuggestionType);
}

void type metadata accessor for CIImageRepresentationOption(uint64_t a1)
{
}

uint64_t sub_1DCD201E0()
{
  return sub_1DCD1FE10(&qword_1EAB02348, type metadata accessor for CIImageRepresentationOption);
}

uint64_t sub_1DCD20228()
{
  return sub_1DCD1FE10(&qword_1EAB02350, type metadata accessor for CIImageRepresentationOption);
}

uint64_t sub_1DCD20270()
{
  return sub_1DCD1FE10(&qword_1EAB02358, type metadata accessor for CIImageRepresentationOption);
}

void type metadata accessor for VNImageOption(uint64_t a1)
{
}

void sub_1DCD202CC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1DCD20314()
{
  return sub_1DCD1FE10(&qword_1EAB02378, type metadata accessor for VNImageOption);
}

uint64_t sub_1DCD2035C()
{
  return sub_1DCD1FE10(&qword_1EAB02380, type metadata accessor for VNImageOption);
}

uint64_t sub_1DCD203A4()
{
  return sub_1DCD1FE10(&qword_1EBE82C18, type metadata accessor for VNImageOption);
}

VisualIntelligence::OntologyGraph __swiftcall OntologyGraph.init(definitionFilePath:bundle:useTrialDefaults:)(Swift::String_optional definitionFilePath, NSBundle_optional bundle, Swift::Bool useTrialDefaults)
{
  Class isa = bundle.value.super.isa;
  char v5 = v3;
  if (bundle.is_nil)
  {
    swift_bridgeObjectRelease();
    char v6 = sub_1DCDE82EC();
    type metadata accessor for TrialWrapper();
    swift_initStackObject();
    sub_1DCFD946C((v6 & 1) == 0);
    sub_1DCFD9704(7, 0, 1852797802, 0xE400000000000000);
    sub_1DCD204D4(v7, 0, (int64_t)&v9);
    swift_release();
  }
  else
  {
    sub_1DCD204D4(0, bundle.value.super.isa, (int64_t)&v9);
  }
  void *v5 = v9;
  return result;
}

void sub_1DCD204D4(uint64_t a1@<X3>, void *a2@<X4>, int64_t a3@<X8>)
{
  v76[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v71 = a2;
  if (a1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    int64_t v70 = a3;
    CGRect v10 = a2;
    if (a2)
    {
      id v11 = a2;
    }
    else
    {
      type metadata accessor for VisualIntelligenceService(0);
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v11 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    }
    id v13 = v10;
    OSType v14 = (void *)sub_1DD0483D8();
    swift_bridgeObjectRelease();
    long long v15 = (void *)sub_1DD0483D8();
    id v16 = objc_msgSend(v11, sel_pathForResource_ofType_, v14, v15);

    if (v16)
    {
      sub_1DD048408();
    }
    else
    {
    }
    a3 = v70;
  }
  sub_1DD0463C8();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_1DD046488();
  unint64_t v19 = v18;
  uint64_t v21 = sub_1DCF47ED8(v17, v18);
  unint64_t v23 = v22;
  sub_1DCD21954(v17, v19);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v24 = self;
  __int16 v25 = (void *)sub_1DD0464D8();
  v76[0] = 0;
  id v26 = objc_msgSend(v24, sel_JSONObjectWithData_options_error_, v25, 2, v76);

  if (!v26)
  {
    id v59 = v76[0];
    CGRect v60 = (void *)sub_1DD046378();

    swift_willThrow();
    sub_1DCD21954(v21, v23);

LABEL_11:
    size_t v20 = (void *)sub_1DCDB7EB0(MEMORY[0x1E4FBC860]);

    goto LABEL_12;
  }
  id v27 = v76[0];
  sub_1DD048AC8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84FE8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1DCD21954(v21, v23);
    goto LABEL_11;
  }
  unint64_t v28 = sub_1DCD20C08(v75);
  swift_bridgeObjectRelease();
  if (v28 >> 62) {
    goto LABEL_68;
  }
  uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
  uint64_t v61 = v21;
  unint64_t v62 = v23;
  unint64_t v65 = v28;
  if (v29)
  {
    unint64_t v30 = 0;
    unint64_t v67 = v28 & 0xC000000000000001;
    unint64_t v63 = v28 + 32;
    uint64_t v64 = v28 & 0xFFFFFFFFFFFFFF8;
    size_t v20 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v66 = v29;
    int64_t v70 = a3;
    while (1)
    {
      if (v67)
      {
        unint64_t v31 = v30;
        uint64_t v32 = MEMORY[0x1E01AE890](v30, v65);
      }
      else
      {
        if (v30 >= *(void *)(v64 + 16)) {
          goto LABEL_67;
        }
        unint64_t v31 = v30;
        uint64_t v32 = swift_retain();
      }
      unint64_t v28 = v32;
      BOOL v33 = __OFADD__(v31, 1);
      unint64_t v34 = v31 + 1;
      if (v33)
      {
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1DD048CC8();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      uint64_t v68 = v32;
      unint64_t v69 = v34;
      uint64_t v35 = sub_1DCD21524();
      a3 = 0;
      uint64_t v36 = *(void *)(v35 + 64);
      uint64_t v72 = v35 + 64;
      uint64_t v37 = 1 << *(unsigned char *)(v35 + 32);
      if (v37 < 64) {
        uint64_t v38 = ~(-1 << v37);
      }
      else {
        uint64_t v38 = -1;
      }
      unint64_t v39 = v38 & v36;
      int64_t v73 = (unint64_t)(v37 + 63) >> 6;
      uint64_t v74 = v35;
      while (1)
      {
        if (v39)
        {
          unint64_t v40 = __clz(__rbit64(v39));
          v39 &= v39 - 1;
          unint64_t v41 = v40 | (a3 << 6);
          goto LABEL_47;
        }
        int64_t v42 = a3 + 1;
        if (__OFADD__(a3, 1)) {
          goto LABEL_64;
        }
        if (v42 >= v73) {
          break;
        }
        unint64_t v43 = *(void *)(v72 + 8 * v42);
        ++a3;
        if (!v43)
        {
          a3 = v42 + 1;
          if (v42 + 1 >= v73) {
            break;
          }
          unint64_t v43 = *(void *)(v72 + 8 * a3);
          if (!v43)
          {
            a3 = v42 + 2;
            if (v42 + 2 >= v73) {
              break;
            }
            unint64_t v43 = *(void *)(v72 + 8 * a3);
            if (!v43)
            {
              int64_t v44 = v42 + 3;
              if (v44 >= v73) {
                break;
              }
              unint64_t v43 = *(void *)(v72 + 8 * v44);
              if (!v43)
              {
                while (1)
                {
                  a3 = v44 + 1;
                  if (__OFADD__(v44, 1)) {
                    goto LABEL_65;
                  }
                  if (a3 >= v73) {
                    goto LABEL_19;
                  }
                  unint64_t v43 = *(void *)(v72 + 8 * a3);
                  ++v44;
                  if (v43) {
                    goto LABEL_46;
                  }
                }
              }
              a3 = v44;
            }
          }
        }
LABEL_46:
        unint64_t v39 = (v43 - 1) & v43;
        unint64_t v41 = __clz(__rbit64(v43)) + (a3 << 6);
LABEL_47:
        uint64_t v45 = (uint64_t *)(*(void *)(v74 + 48) + 16 * v41);
        uint64_t v21 = *v45;
        uint64_t v46 = v45[1];
        unint64_t v23 = *(void *)(*(void *)(v74 + 56) + 8 * v41);
        swift_retain_n();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v76[0] = v20;
        unint64_t v28 = (unint64_t)v20;
        unint64_t v49 = sub_1DCEAD1A4(v21, v46);
        uint64_t v50 = v20[2];
        BOOL v51 = (v48 & 1) == 0;
        uint64_t v52 = v50 + v51;
        if (__OFADD__(v50, v51))
        {
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        char v53 = v48;
        if (v20[3] >= v52)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            size_t v20 = v76[0];
            if (v48) {
              goto LABEL_29;
            }
          }
          else
          {
            unint64_t v28 = (unint64_t)v76;
            sub_1DCE8805C();
            size_t v20 = v76[0];
            if (v53) {
              goto LABEL_29;
            }
          }
        }
        else
        {
          sub_1DCE7D2D0(v52, isUniquelyReferenced_nonNull_native);
          unint64_t v28 = (unint64_t)v76[0];
          unint64_t v54 = sub_1DCEAD1A4(v21, v46);
          if ((v53 & 1) != (v55 & 1))
          {
            sub_1DD049028();
            __break(1u);
            return;
          }
          unint64_t v49 = v54;
          size_t v20 = v76[0];
          if (v53)
          {
LABEL_29:
            unint64_t v28 = v20[7];
            swift_release();
            *(void *)(v28 + 8 * v49) = v23;
            goto LABEL_30;
          }
        }
        v20[(v49 >> 6) + 8] |= 1 << v49;
        CGAffineTransform v56 = (uint64_t *)(v20[6] + 16 * v49);
        *CGAffineTransform v56 = v21;
        v56[1] = v46;
        *(void *)(v20[7] + 8 * v49) = v23;
        uint64_t v57 = v20[2];
        BOOL v33 = __OFADD__(v57, 1);
        uint64_t v58 = v57 + 1;
        if (v33) {
          goto LABEL_63;
        }
        v20[2] = v58;
        swift_bridgeObjectRetain();
LABEL_30:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_19:
      swift_release();
      swift_release();
      unint64_t v30 = v69;
      a3 = v70;
      if (v69 == v66) {
        goto LABEL_61;
      }
    }
  }
  size_t v20 = (void *)MEMORY[0x1E4FBC868];
LABEL_61:
  sub_1DCD21954(v61, v62);

  swift_bridgeObjectRelease();
LABEL_12:
  *(void *)a3 = v20;
}

uint64_t sub_1DCD20C08(uint64_t a1)
{
  uint64_t v65 = sub_1DD048068();
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v72 = MEMORY[0x1E4FBC860];
  uint64_t v64 = *(void *)(a1 + 16);
  if (v64)
  {
    uint64_t v6 = (void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    unint64_t v62 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v63 = a1 + 32;
    v55[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v8 = &OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__ontologyBoxScoreThresholds;
    uint64_t v57 = "coarseCategoryDistribution";
    unint64_t v56 = 0x80000001DD067880;
    *(void *)&long long v9 = 136315138;
    long long v60 = v9;
    uint64_t v58 = MEMORY[0x1E4FBC840] + 8;
    id v59 = v4;
    uint64_t v61 = v6;
    while (1)
    {
      uint64_t v10 = *(void *)(v63 + 8 * v7);
      uint64_t v11 = *(void *)(v10 + 16);
      swift_bridgeObjectRetain();
      if (v11)
      {
        unint64_t v12 = sub_1DCEAD1A4(0x64695F676BLL, 0xE500000000000000);
        if (v13)
        {
          sub_1DCD21A28(*(void *)(v10 + 56) + 32 * v12, (uint64_t)&v70);
          if (swift_dynamicCast())
          {
            uint64_t v14 = v7;
            unint64_t v15 = v69;
            if (*(void *)(v10 + 16))
            {
              uint64_t v16 = v68;
              unint64_t v17 = sub_1DCEAD1A4(1701667182, 0xE400000000000000);
              if (v18)
              {
                sub_1DCD21A28(*(void *)(v10 + 56) + 32 * v17, (uint64_t)&v70);
                if (swift_dynamicCast())
                {
                  unint64_t v19 = v69;
                  if (*(void *)(v10 + 16))
                  {
                    uint64_t v20 = v68;
                    unint64_t v21 = sub_1DCEAD1A4(0x6E6572646C696863, 0xE800000000000000);
                    if (v22)
                    {
                      sub_1DCD21A28(*(void *)(v10 + 56) + 32 * v21, (uint64_t)&v70);
                      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84FE8);
                      if (swift_dynamicCast())
                      {
                        swift_bridgeObjectRelease();
                        unint64_t v23 = v19;
                        unint64_t v24 = sub_1DCD20C08(v68);
                        swift_bridgeObjectRelease();
                        uint64_t v70 = v20;
                        unint64_t v71 = v23;
                        uint64_t v68 = 0x20646E6120;
                        unint64_t v69 = 0xE500000000000000;
                        uint64_t v66 = 32;
                        unint64_t v67 = 0xE100000000000000;
                        sub_1DCD21A84();
                        uint64_t v70 = sub_1DD048A68();
                        unint64_t v71 = v25;
                        uint64_t v68 = 2106912;
                        unint64_t v69 = 0xE300000000000000;
                        uint64_t v66 = 32;
                        unint64_t v67 = 0xE100000000000000;
                        sub_1DD048A68();
                        swift_bridgeObjectRelease();
                        sub_1DD048488();
                        swift_bridgeObjectRelease();
                        uint64_t v26 = sub_1DCD21AD8();
                        uint64_t v28 = v27;
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        type metadata accessor for OntologyGraph.Node();
                        uint64_t v29 = (void *)swift_allocObject();
                        swift_weakInit();
                        v29[2] = v26;
                        v29[3] = v28;
                        v29[4] = v16;
                        v29[5] = v15;
                        v29[6] = v24;
                        swift_weakAssign();
                        if (v24 >> 62)
                        {
                          swift_bridgeObjectRetain();
                          uint64_t result = sub_1DD048CC8();
                          uint64_t v30 = result;
                          if (result)
                          {
LABEL_14:
                            if (v30 < 1)
                            {
                              __break(1u);
                              return result;
                            }
                            for (uint64_t i = 0; i != v30; ++i)
                            {
                              if ((v24 & 0xC000000000000001) != 0) {
                                MEMORY[0x1E01AE890](i, v24);
                              }
                              else {
                                swift_retain();
                              }
                              swift_weakAssign();
                              swift_release();
                            }
                          }
                        }
                        else
                        {
                          uint64_t v30 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
                          uint64_t result = swift_bridgeObjectRetain();
                          if (v30) {
                            goto LABEL_14;
                          }
                        }
                        swift_bridgeObjectRelease();
                        uint64_t v54 = swift_retain();
                        MEMORY[0x1E01AE350](v54);
                        if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
                          sub_1DD0486E8();
                        sub_1DD048708();
                        sub_1DD0486D8();
                        swift_release();
                        uint64_t v6 = v61;
                        uint64_t v7 = v14;
                        uint64_t v8 = &OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__ontologyBoxScoreThresholds;
                        goto LABEL_42;
                      }
                    }
                  }
                  swift_bridgeObjectRelease();
                }
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v7 = v14;
          }
        }
      }
      if (v8[50] != -1) {
        swift_once();
      }
      if (byte_1EBE87188 != 1)
      {
LABEL_37:
        unint64_t v41 = qword_1EBE871A8;
        if (qword_1EBE871C8 != -1)
        {
          swift_once();
          unint64_t v41 = qword_1EBE871A8;
        }
        goto LABEL_39;
      }
      id v32 = objc_msgSend(self, sel_mainBundle);
      id v33 = objc_msgSend(v32, sel_bundleIdentifier);

      if (v33)
      {
        uint64_t v34 = sub_1DD048408();
        uint64_t v36 = v35;

        if (v34 == 0xD00000000000002BLL && v36 == v56)
        {
          swift_bridgeObjectRelease();
LABEL_30:
          uint64_t v38 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            uint64_t v38 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_34;
        }
        char v37 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v37) {
          goto LABEL_30;
        }
      }
      uint64_t v38 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v38 = &qword_1EBE871E8;
      }
LABEL_34:
      unint64_t v39 = *(void **)(*v38 + 32);
      swift_retain();
      unint64_t v40 = (void *)sub_1DD0483D8();
      LODWORD(v39) = objc_msgSend(v39, sel_BOOLForKey_, v40);
      swift_release();

      if (!v39) {
        goto LABEL_37;
      }
      unint64_t v41 = qword_1EAB02B70;
      if (qword_1EAB01C80 != -1)
      {
        swift_once();
        unint64_t v41 = qword_1EAB02B70;
      }
LABEL_39:
      uint64_t v42 = v65;
      uint64_t v43 = __swift_project_value_buffer(v65, (uint64_t)v41);
      (*v6)(v4, v43, v42);
      swift_bridgeObjectRetain();
      int64_t v44 = sub_1DD048048();
      os_log_type_t v45 = sub_1DD048858();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        uint64_t v70 = v47;
        *(_DWORD *)uint64_t v46 = v60;
        swift_bridgeObjectRetain();
        uint64_t v48 = v7;
        uint64_t v49 = sub_1DD0482E8();
        unint64_t v51 = v50;
        swift_bridgeObjectRelease();
        uint64_t v52 = v49;
        uint64_t v7 = v48;
        uint64_t v8 = &OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__ontologyBoxScoreThresholds;
        *(void *)(v46 + 4) = sub_1DCED7FA0(v52, v51, &v70);
        swift_bridgeObjectRelease_n();
        uint64_t v53 = v65;
        uint64_t v4 = v59;
        uint64_t v6 = v61;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DCCF9000, v44, v45, "Incorrect ontology definitions. Current value: %s", (uint8_t *)v46, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v47, -1, -1);
        MEMORY[0x1E01B07E0](v46, -1, -1);

        (*v62)(v4, v53);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*v62)(v4, v65);
      }
LABEL_42:
      if (++v7 == v64)
      {
        swift_bridgeObjectRelease();
        return v72;
      }
    }
  }
  return result;
}

uint64_t sub_1DCD21524()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v49 = v4;
  sub_1DCE854A8(v1, v2, v3, isUniquelyReferenced_nonNull_native);
  uint64_t v6 = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(v1 + 48);
  if (v7 >> 62) {
    goto LABEL_50;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v8)
  {
    unint64_t v9 = 0;
    unint64_t v43 = v7;
    unint64_t v44 = v7 & 0xC000000000000001;
    uint64_t v41 = v7 & 0xFFFFFFFFFFFFFF8;
    uint64_t v42 = v8;
    while (1)
    {
      if (v44)
      {
        uint64_t v10 = MEMORY[0x1E01AE890](v9, v7);
        BOOL v11 = __OFADD__(v9, 1);
        unint64_t v12 = v9 + 1;
        if (v11) {
          break;
        }
        goto LABEL_11;
      }
      if (v9 >= *(void *)(v41 + 16)) {
        goto LABEL_49;
      }
      uint64_t v10 = swift_retain();
      BOOL v11 = __OFADD__(v9, 1);
      unint64_t v12 = v9 + 1;
      if (v11) {
        break;
      }
LABEL_11:
      unint64_t v45 = v12;
      unint64_t v7 = v10;
      uint64_t v13 = sub_1DCD21524();
      int64_t v14 = 0;
      uint64_t v46 = v13 + 64;
      uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
      if (v15 < 64) {
        uint64_t v16 = ~(-1 << v15);
      }
      else {
        uint64_t v16 = -1;
      }
      unint64_t v17 = v16 & *(void *)(v13 + 64);
      int64_t v47 = (unint64_t)(v15 + 63) >> 6;
      uint64_t v48 = v13;
      while (1)
      {
        if (v17)
        {
          unint64_t v19 = __clz(__rbit64(v17));
          v17 &= v17 - 1;
          unint64_t v20 = v19 | (v14 << 6);
          goto LABEL_33;
        }
        int64_t v21 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_46;
        }
        if (v21 >= v47) {
          break;
        }
        unint64_t v22 = *(void *)(v46 + 8 * v21);
        ++v14;
        if (!v22)
        {
          int64_t v14 = v21 + 1;
          if (v21 + 1 >= v47) {
            break;
          }
          unint64_t v22 = *(void *)(v46 + 8 * v14);
          if (!v22)
          {
            int64_t v14 = v21 + 2;
            if (v21 + 2 >= v47) {
              break;
            }
            unint64_t v22 = *(void *)(v46 + 8 * v14);
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v47) {
                break;
              }
              unint64_t v22 = *(void *)(v46 + 8 * v23);
              if (!v22)
              {
                while (1)
                {
                  int64_t v14 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_47;
                  }
                  if (v14 >= v47) {
                    goto LABEL_4;
                  }
                  unint64_t v22 = *(void *)(v46 + 8 * v14);
                  ++v23;
                  if (v22) {
                    goto LABEL_32;
                  }
                }
              }
              int64_t v14 = v23;
            }
          }
        }
LABEL_32:
        unint64_t v17 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v14 << 6);
LABEL_33:
        unint64_t v24 = (uint64_t *)(*(void *)(v48 + 48) + 16 * v20);
        uint64_t v26 = *v24;
        uint64_t v25 = v24[1];
        uint64_t v27 = *(void *)(*(void *)(v48 + 56) + 8 * v20);
        swift_retain_n();
        swift_bridgeObjectRetain();
        char v28 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v49 = v6;
        unint64_t v7 = (unint64_t)v6;
        unint64_t v30 = sub_1DCEAD1A4(v26, v25);
        uint64_t v31 = v6[2];
        BOOL v32 = (v29 & 1) == 0;
        uint64_t v33 = v31 + v32;
        if (__OFADD__(v31, v32))
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
        char v34 = v29;
        if (v6[3] >= v33)
        {
          if (v28)
          {
            uint64_t v6 = v49;
            if (v29) {
              goto LABEL_15;
            }
          }
          else
          {
            unint64_t v7 = (unint64_t)&v49;
            sub_1DCE8805C();
            uint64_t v6 = v49;
            if (v34) {
              goto LABEL_15;
            }
          }
        }
        else
        {
          sub_1DCE7D2D0(v33, v28);
          unint64_t v7 = (unint64_t)v49;
          unint64_t v35 = sub_1DCEAD1A4(v26, v25);
          if ((v34 & 1) != (v36 & 1))
          {
            uint64_t result = sub_1DD049028();
            __break(1u);
            return result;
          }
          unint64_t v30 = v35;
          uint64_t v6 = v49;
          if (v34)
          {
LABEL_15:
            uint64_t v18 = v6[7];
            unint64_t v7 = 8 * v30;
            swift_release();
            *(void *)(v18 + 8 * v30) = v27;
            goto LABEL_16;
          }
        }
        v6[(v30 >> 6) + 8] |= 1 << v30;
        char v37 = (uint64_t *)(v6[6] + 16 * v30);
        *char v37 = v26;
        v37[1] = v25;
        *(void *)(v6[7] + 8 * v30) = v27;
        uint64_t v38 = v6[2];
        BOOL v11 = __OFADD__(v38, 1);
        uint64_t v39 = v38 + 1;
        if (v11) {
          goto LABEL_45;
        }
        void v6[2] = v39;
        swift_bridgeObjectRetain();
LABEL_16:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_4:
      swift_release();
      swift_release();
      unint64_t v7 = v43;
      unint64_t v9 = v45;
      if (v45 == v42) {
        goto LABEL_51;
      }
    }
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
LABEL_51:
  swift_bridgeObjectRelease();
  return (uint64_t)v6;
}

void *sub_1DCD2192C()
{
  uint64_t result = (void *)sub_1DCDB7FCC((uint64_t)&unk_1F38350F0);
  off_1EBE84A38 = result;
  return result;
}

uint64_t sub_1DCD21954(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1DCD21A28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1DCD21A84()
{
  unint64_t result = qword_1EBE84EB8;
  if (!qword_1EBE84EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84EB8);
  }
  return result;
}

uint64_t sub_1DCD21AD8()
{
  sub_1DCD21A84();
  uint64_t v0 = sub_1DD048AA8();
  int64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x1E4FBC860];
    int64_t v15 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v15) {
      goto LABEL_19;
    }
    goto LABEL_7;
  }
  uint64_t v31 = MEMORY[0x1E4FBC860];
  sub_1DCFC4948(0, v1, 0);
  uint64_t v3 = v31;
  uint64_t v4 = (uint64_t *)(v0 + 56);
  do
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    uint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    uint64_t v9 = MEMORY[0x1E01AE180](v5, v6, v7, v8);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    unint64_t v13 = *(void *)(v31 + 16);
    unint64_t v12 = *(void *)(v31 + 24);
    if (v13 >= v12 >> 1) {
      sub_1DCFC4948(v12 > 1, v13 + 1, 1);
    }
    *(void *)(v31 + 16) = v13 + 1;
    uint64_t v14 = v31 + 16 * v13;
    *(void *)(v14 + 32) = v9;
    *(void *)(v14 + 40) = v11;
    v4 += 4;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  int64_t v15 = *(void *)(v31 + 16);
  if (v15)
  {
LABEL_7:
    sub_1DCFC4948(0, v15, 0);
    uint64_t v16 = v2;
    unint64_t v17 = (uint64_t *)(v3 + 40);
    do
    {
      uint64_t v18 = *(v17 - 1);
      uint64_t v19 = *v17;
      uint64_t v20 = qword_1EBE84A40;
      swift_bridgeObjectRetain();
      if (v20 != -1) {
        swift_once();
      }
      int64_t v21 = off_1EBE84A38;
      if (*((void *)off_1EBE84A38 + 2))
      {
        swift_bridgeObjectRetain();
        unint64_t v22 = sub_1DCEAD1A4(v18, v19);
        uint64_t v23 = v19;
        if (v24)
        {
          uint64_t v25 = (uint64_t *)(v21[7] + 16 * v22);
          uint64_t v18 = *v25;
          uint64_t v23 = v25[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v19 = v23;
      }
      unint64_t v27 = *(void *)(v16 + 16);
      unint64_t v26 = *(void *)(v16 + 24);
      if (v27 >= v26 >> 1) {
        sub_1DCFC4948(v26 > 1, v27 + 1, 1);
      }
      v17 += 2;
      *(void *)(v16 + 16) = v27 + 1;
      uint64_t v28 = v16 + 16 * v27;
      *(void *)(v28 + 32) = v18;
      *(void *)(v28 + 40) = v19;
      --v15;
    }
    while (v15);
  }
LABEL_19:
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84FF0);
  sub_1DCD21D8C();
  uint64_t v29 = sub_1DD048398();
  swift_bridgeObjectRelease();
  return v29;
}

unint64_t sub_1DCD21D8C()
{
  unint64_t result = qword_1EBE84FF8;
  if (!qword_1EBE84FF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE84FF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84FF8);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t *sub_1DCD21E30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(a3 + 28);
    unint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84C08);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *unint64_t v13 = *v14;
      *(void *)(v13 + 4) = *(void *)(v14 + 4);
      v13[12] = v14[12];
      *((_DWORD *)v13 + 4) = *((_DWORD *)v14 + 4);
      v11(&v13[*(int *)(v15 + 36)], &v14[*(int *)(v15 + 36)], v10);
      uint64_t v19 = *(int *)(v15 + 40);
      __dst = &v13[v19];
      uint64_t v20 = &v14[v19];
      uint64_t v21 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84BF0);
        memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v24 = v20[1];
        void *__dst = *v20;
        __dst[1] = v24;
        *((_DWORD *)__dst + 4) = *((_DWORD *)v20 + 4);
        uint64_t v25 = *(int *)(v21 + 24);
        uint64_t v28 = (char *)__dst + v25;
        unint64_t v26 = (char *)v20 + v25;
        swift_bridgeObjectRetain();
        v11(v28, v26, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t sub_1DCD22120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    v12(v6 + *(int *)(v7 + 36), v5);
    uint64_t v9 = v6 + *(int *)(v7 + 40);
    uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10);
    if (!result)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = v9 + *(int *)(v10 + 24);
      return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
    }
  }
  return result;
}

void *sub_1DCD22294(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)a1 + v11;
  unint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84C08);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    *(void *)(v12 + 4) = *(void *)(v13 + 4);
    v12[12] = v13[12];
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    v10(&v12[*(int *)(v14 + 36)], &v13[*(int *)(v14 + 36)], v9);
    uint64_t v17 = *(int *)(v14 + 40);
    __dst = &v12[v17];
    uint64_t v18 = &v13[v17];
    uint64_t v19 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84BF0);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = v18[1];
      void *__dst = *v18;
      __dst[1] = v22;
      *((_DWORD *)__dst + 4) = *((_DWORD *)v18 + 4);
      uint64_t v23 = *(int *)(v19 + 24);
      unint64_t v26 = (char *)__dst + v23;
      uint64_t v24 = (char *)v18 + v23;
      swift_bridgeObjectRetain();
      v10(v26, v24, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *sub_1DCD22534(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v43 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (uint64_t)a1 + v11;
  unint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16((uint64_t)v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      *(unsigned char *)uint64_t v12 = *v13;
      *(_DWORD *)(v12 + 4) = *((_DWORD *)v13 + 1);
      *(_DWORD *)(v12 + 8) = *((_DWORD *)v13 + 2);
      *(unsigned char *)(v12 + 12) = v13[12];
      *(_DWORD *)(v12 + 16) = *((_DWORD *)v13 + 4);
      ((void (*)(uint64_t, char *, uint64_t))v10)(v12 + *(int *)(v14 + 36), &v13[*(int *)(v14 + 36)], v45);
      uint64_t v27 = *(int *)(v14 + 40);
      uint64_t v28 = v12 + v27;
      uint64_t v29 = &v13[v27];
      uint64_t v30 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
      uint64_t v31 = *(void *)(v30 - 8);
      BOOL v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
      int v33 = v32(v28, 1, v30);
      int v34 = v32((uint64_t)v29, 1, v30);
      if (v33)
      {
        if (!v34)
        {
          *(void *)uint64_t v28 = *(void *)v29;
          *(void *)(v28 + 8) = *((void *)v29 + 1);
          *(_DWORD *)(v28 + 16) = *((_DWORD *)v29 + 4);
          uint64_t v35 = *(int *)(v30 + 24);
          uint64_t v36 = v28 + v35;
          char v37 = &v29[v35];
          uint64_t v38 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 16);
          swift_bridgeObjectRetain();
          v38(v36, v37, v45);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          return a1;
        }
      }
      else
      {
        if (!v34)
        {
          *(void *)uint64_t v28 = *(void *)v29;
          *(void *)(v28 + 8) = *((void *)v29 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(v28 + 16) = *((_DWORD *)v29 + 4);
          ((void (*)(uint64_t, char *, uint64_t))v10)(v28 + *(int *)(v30 + 24), &v29[*(int *)(v30 + 24)], v45);
          return a1;
        }
        sub_1DCD22A08(v28, type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold);
      }
      size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84BF0) - 8) + 64);
      uint64_t v25 = (void *)v28;
      unint64_t v26 = v29;
      goto LABEL_8;
    }
    sub_1DCD22A08(v12, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
LABEL_7:
    size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84C08) - 8) + 64);
    uint64_t v25 = (void *)v12;
    unint64_t v26 = v13;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }
  if (v17) {
    goto LABEL_7;
  }
  *(unsigned char *)uint64_t v12 = *v13;
  *(_DWORD *)(v12 + 4) = *((_DWORD *)v13 + 1);
  *(_DWORD *)(v12 + 8) = *((_DWORD *)v13 + 2);
  *(unsigned char *)(v12 + 12) = v13[12];
  *(_DWORD *)(v12 + 16) = *((_DWORD *)v13 + 4);
  unint64_t v44 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 16);
  v44(v12 + *(int *)(v14 + 36), &v13[*(int *)(v14 + 36)], v45);
  uint64_t v18 = *(int *)(v14 + 40);
  uint64_t v19 = (void *)(v12 + v18);
  uint64_t v20 = &v13[v18];
  uint64_t v21 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84BF0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *(void *)v20;
    v19[1] = *((void *)v20 + 1);
    *((_DWORD *)v19 + 4) = *((_DWORD *)v20 + 4);
    uint64_t v39 = *(int *)(v21 + 24);
    uint64_t v42 = (char *)v19 + v39;
    unint64_t v40 = &v20[v39];
    swift_bridgeObjectRetain();
    v44((uint64_t)v42, v40, v45);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1DCD22A08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1DCD22A68(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)a1 + v11;
  unint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84C08);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    *(void *)(v12 + 4) = *(void *)(v13 + 4);
    v12[12] = v13[12];
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    v10(&v12[*(int *)(v14 + 36)], &v13[*(int *)(v14 + 36)], v9);
    uint64_t v17 = *(int *)(v14 + 40);
    __dst = &v12[v17];
    uint64_t v18 = &v13[v17];
    uint64_t v19 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84BF0);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)v18;
      __dst[4] = v18[4];
      v10((char *)__dst + *(int *)(v19 + 24), (char *)v18 + *(int *)(v19 + 24), v9);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *sub_1DCD22CF0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v38 + 40);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (uint64_t)a1 + v11;
  unint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16((uint64_t)v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      uint64_t v27 = (void (*)(uint64_t, char *, uint64_t))v10;
      *(unsigned char *)uint64_t v12 = *v13;
      *(void *)(v12 + 4) = *(void *)(v13 + 4);
      *(unsigned char *)(v12 + 12) = v13[12];
      *(_DWORD *)(v12 + 16) = *((_DWORD *)v13 + 4);
      ((void (*)(uint64_t, char *, uint64_t))v10)(v12 + *(int *)(v14 + 36), &v13[*(int *)(v14 + 36)], v40);
      uint64_t v28 = *(int *)(v14 + 40);
      uint64_t v29 = v12 + v28;
      uint64_t v30 = &v13[v28];
      uint64_t v31 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
      uint64_t v32 = *(void *)(v31 - 8);
      int v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
      int v34 = v33(v29, 1, v31);
      int v35 = v33((uint64_t)v30, 1, v31);
      if (v34)
      {
        if (!v35)
        {
          *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
          *(_DWORD *)(v29 + 16) = *((_DWORD *)v30 + 4);
          (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v29 + *(int *)(v31 + 24), &v30[*(int *)(v31 + 24)], v40);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
          return a1;
        }
      }
      else
      {
        if (!v35)
        {
          uint64_t v37 = *((void *)v30 + 1);
          *(void *)uint64_t v29 = *(void *)v30;
          *(void *)(v29 + 8) = v37;
          swift_bridgeObjectRelease();
          *(_DWORD *)(v29 + 16) = *((_DWORD *)v30 + 4);
          v27(v29 + *(int *)(v31 + 24), &v30[*(int *)(v31 + 24)], v40);
          return a1;
        }
        sub_1DCD22A08(v29, type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold);
      }
      size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84BF0) - 8) + 64);
      uint64_t v25 = (void *)v29;
      unint64_t v26 = v30;
      goto LABEL_8;
    }
    sub_1DCD22A08(v12, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
LABEL_7:
    size_t v24 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84C08) - 8) + 64);
    uint64_t v25 = (void *)v12;
    unint64_t v26 = v13;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }
  if (v17) {
    goto LABEL_7;
  }
  *(unsigned char *)uint64_t v12 = *v13;
  *(void *)(v12 + 4) = *(void *)(v13 + 4);
  *(unsigned char *)(v12 + 12) = v13[12];
  *(_DWORD *)(v12 + 16) = *((_DWORD *)v13 + 4);
  uint64_t v39 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 32);
  v39(v12 + *(int *)(v14 + 36), &v13[*(int *)(v14 + 36)], v40);
  uint64_t v18 = *(int *)(v14 + 40);
  uint64_t v19 = (_DWORD *)(v12 + v18);
  uint64_t v20 = &v13[v18];
  uint64_t v21 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84BF0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    v19[4] = *((_DWORD *)v20 + 4);
    v39((uint64_t)v19 + *(int *)(v21 + 24), &v20[*(int *)(v21 + 24)], v40);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1DCD23188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD2319C);
}

uint64_t sub_1DCD2319C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84C08);
    unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 28);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_1DCD2329C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD232B0);
}

uint64_t sub_1DCD232B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84C08);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 28);
    return v15(v17, a2, a2, v16);
  }
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig()
{
  uint64_t result = qword_1EBE87030;
  if (!qword_1EBE87030) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DCD23408()
{
  sub_1DD047BF8();
  if (v0 <= 0x3F)
  {
    sub_1DCD234E0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1DCD234E0()
{
  if (!qword_1EBE86CB8)
  {
    type metadata accessor for Argos_Protos_Queryflow_RefineConfig(255);
    unint64_t v0 = sub_1DD048A08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBE86CB8);
    }
  }
}

uint64_t sub_1DCD23538()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9CAC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9CAC0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04E760;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  void *v5 = 1;
  *(void *)unint64_t v6 = "version";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "refine_config";
  *((void *)v10 + 1) = 13;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "whole_image_fallback_detector_threshold";
  *(void *)(v11 + 8) = 39;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCD23748()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_1DD047D38();
          break;
        case 2:
          sub_1DCD23810();
          break;
        case 1:
          sub_1DD047DC8();
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCD23810()
{
  return sub_1DD047DF8();
}

uint64_t sub_1DCD238C0()
{
  if (!*(_DWORD *)v0 || (uint64_t result = sub_1DD047F98(), !v1))
  {
    uint64_t result = sub_1DCD239A0(v0);
    if (!v1)
    {
      if (*(float *)(v0 + 4) != 0.0) {
        sub_1DD047F38();
      }
      type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCD239A0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84C08);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
  sub_1DCD2414C(a1 + *(int *)(v9 + 28), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_1DCD2479C((uint64_t)v4, (uint64_t *)&unk_1EBE84C08);
  }
  sub_1DCD241B4((uint64_t)v4, (uint64_t)v8);
  sub_1DCD247F8(&qword_1EBE84BF8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
  sub_1DD047FC8();
  return sub_1DCD22A08((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
}

uint64_t sub_1DCD23B88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  sub_1DD047BE8();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(v4, 1, 1, v5);
}

unint64_t sub_1DCD23C10()
{
  return 0xD000000000000029;
}

uint64_t sub_1DCD23C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1DCD23CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

void (*sub_1DCD23D10())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t sub_1DCD23D38()
{
  return sub_1DCD23748();
}

uint64_t sub_1DCD23D50()
{
  return sub_1DCD238C0();
}

uint64_t sub_1DCD23D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCD247F8(&qword_1EAB02400, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCD23DEC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBE85F08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DD048008();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBE9CAC0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1DCD23E94(uint64_t a1)
{
  uint64_t v2 = sub_1DCD247F8((unint64_t *)&qword_1EBE85F10, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCD23F00()
{
  return sub_1DD049108();
}

uint64_t sub_1DCD23F58()
{
  sub_1DCD247F8((unint64_t *)&qword_1EBE85F10, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig);
  return sub_1DD047E68();
}

uint64_t sub_1DCD23FD4()
{
  return sub_1DD049108();
}

uint64_t sub_1DCD2402C()
{
  return sub_1DCD247F8(&qword_1EAB023F0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig);
}

uint64_t sub_1DCD24074()
{
  return sub_1DCD247F8((unint64_t *)&qword_1EBE85F10, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig);
}

uint64_t sub_1DCD240BC()
{
  return sub_1DCD247F8(&qword_1EAB023F8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig);
}

uint64_t sub_1DCD24104()
{
  return sub_1DCD247F8(&qword_1EBE85F18, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig);
}

uint64_t sub_1DCD2414C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD241B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1DCD2427C(float *a1, float *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  uint64_t v51 = *(void *)(v10 - 8);
  uint64_t v52 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02408);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84C08);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v43 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v43 - v22;
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    goto LABEL_11;
  }
  size_t v24 = a1;
  int64_t v47 = v12;
  uint64_t v48 = v21;
  uint64_t v45 = v9;
  uint64_t v46 = v7;
  uint64_t v25 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
  sub_1DCD2414C((uint64_t)a1 + *(int *)(v25 + 28), (uint64_t)v23);
  unint64_t v26 = a2;
  sub_1DCD2414C((uint64_t)a2 + *(int *)(v25 + 28), (uint64_t)v20);
  uint64_t v27 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_1DCD2414C((uint64_t)v23, (uint64_t)v15);
  sub_1DCD2414C((uint64_t)v20, v27);
  uint64_t v28 = v52;
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  if (v29((uint64_t)v15, 1, v52) == 1)
  {
    uint64_t v51 = v25;
    sub_1DCD2479C((uint64_t)v20, (uint64_t *)&unk_1EBE84C08);
    sub_1DCD2479C((uint64_t)v23, (uint64_t *)&unk_1EBE84C08);
    if (v29(v27, 1, v28) == 1)
    {
      sub_1DCD2479C((uint64_t)v15, (uint64_t *)&unk_1EBE84C08);
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  unint64_t v44 = a2;
  uint64_t v30 = v48;
  sub_1DCD2414C((uint64_t)v15, v48);
  if (v29(v27, 1, v28) == 1)
  {
    sub_1DCD2479C((uint64_t)v20, (uint64_t *)&unk_1EBE84C08);
    sub_1DCD2479C((uint64_t)v23, (uint64_t *)&unk_1EBE84C08);
    sub_1DCD22A08(v30, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
LABEL_7:
    sub_1DCD2479C((uint64_t)v15, &qword_1EAB02408);
LABEL_11:
    char v40 = 0;
    return v40 & 1;
  }
  uint64_t v51 = v25;
  uint64_t v31 = (uint64_t)v47;
  sub_1DCD241B4(v27, (uint64_t)v47);
  char v32 = sub_1DCDFB040(v30, v31);
  sub_1DCD22A08(v31, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
  sub_1DCD2479C((uint64_t)v20, (uint64_t *)&unk_1EBE84C08);
  sub_1DCD2479C((uint64_t)v23, (uint64_t *)&unk_1EBE84C08);
  sub_1DCD22A08(v30, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
  sub_1DCD2479C((uint64_t)v15, (uint64_t *)&unk_1EBE84C08);
  unint64_t v26 = v44;
  if ((v32 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_9:
  if (v24[1] != v26[1]) {
    goto LABEL_11;
  }
  uint64_t v33 = v50;
  uint64_t v34 = v51;
  uint64_t v35 = v49;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  uint64_t v37 = v45;
  v36(v45, (char *)v24 + *(int *)(v51 + 24), v50);
  uint64_t v38 = (char *)v26 + *(int *)(v34 + 24);
  uint64_t v39 = v46;
  v36(v46, v38, v33);
  sub_1DCD247F8(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
  char v40 = sub_1DD0483B8();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v35 + 8);
  v41(v39, v33);
  v41(v37, v33);
  return v40 & 1;
}

uint64_t sub_1DCD2479C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD247F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCD24840()
{
  sub_1DCD21A84();
  uint64_t v0 = sub_1DD048A48();
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1DCD248D4(uint64_t a1, uint64_t a2)
{
  if (sub_1DD048BB8() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v6 & 1) == 0)
    {
      if (sub_1DD048BB8() == a1 && v8 == a2)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        char v9 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v9)
        {
          return 2;
        }
        else if (sub_1DD048BB8() == a1 && v10 == a2)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
        else
        {
          char v11 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v11)
          {
            return 1;
          }
          else
          {
            sub_1DCD21A84();
            if (sub_1DD048A98())
            {
              return 3;
            }
            else if (sub_1DD048A98())
            {
              return 4;
            }
            else if (sub_1DD048A98())
            {
              return 5;
            }
            else if (sub_1DD048A98())
            {
              return 6;
            }
            else
            {
              return 7;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1DCD24B84(void *a1)
{
  if (a1[2] != 3) {
    return 0;
  }
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1DCD24840();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = a1[8];
  uint64_t v8 = a1[9];
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1DCD24840();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_22;
  }
  uint64_t v20 = v7;
  uint64_t v21 = v4;
  uint64_t v13 = a1[12];
  uint64_t v12 = a1[13];
  swift_bridgeObjectRetain();
  uint64_t v19 = v13;
  uint64_t v14 = sub_1DCD24840();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (!v16)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if ((v21 != v9 || v6 != v11) && (sub_1DD048FA8() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  if (v9 == v14 && v11 == v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v17 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_13:
  if (v2 == v20 && v3 == v8
    || (sub_1DD048FA8() & 1) != 0
    || v20 == v19 && v8 == v12
    || (sub_1DD048FA8() & 1) != 0
    || v2 == v19 && v3 == v12
    || (sub_1DD048FA8() & 1) != 0)
  {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1DCD24E28(void *a1, char a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    char v85 = a2;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(a3 + 56);
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v9 = *(v6 - 3);
      uint64_t v8 = *(v6 - 2);
      uint64_t v10 = *(v6 - 1);
      uint64_t v11 = *v6;
      swift_bridgeObjectRetain();
      if (sub_1DCD248D4(v9, v8) == 4) {
        break;
      }
      uint64_t result = sub_1DCD248D4(v9, v8);
      if (result != 5)
      {
        uint64_t result = sub_1DCD248D4(v9, v8);
        if (result != 6) {
          goto LABEL_7;
        }
      }
      if (v5 >= v7[2]) {
        goto LABEL_80;
      }
      if (*(void *)(v7[v5 + 4] + 16))
      {
        sub_1DCD21A84();
        swift_bridgeObjectRetain();
        uint64_t v16 = (void *)sub_1DD048A48();
        if (v16[2])
        {
          uint64_t v86 = v16[4];
          uint64_t v88 = v5;
          uint64_t v17 = v16[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v18 = (void *)sub_1DD048A48();
          if (v18[2])
          {
            uint64_t v20 = v18[4];
            uint64_t v19 = v18[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v86 == v20 && v17 == v19)
            {
              swift_bridgeObjectRelease_n();
LABEL_24:
              uint64_t result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
              {
                uint64_t result = (uint64_t)sub_1DCEC1BC4(v7);
                uint64_t v7 = (void *)result;
              }
              if (v88 >= v7[2]) {
                goto LABEL_84;
              }
              v92 = v7;
              uint64_t v22 = v7 + 4;
              uint64_t v23 = (void *)v22[v88];
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v22[v88] = v23;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                uint64_t v23 = sub_1DCE9D55C(0, v23[2] + 1, 1, v23);
                v22[v88] = v23;
              }
              unint64_t v26 = v23[2];
              unint64_t v25 = v23[3];
              if (v26 >= v25 >> 1)
              {
                uint64_t v23 = sub_1DCE9D55C((void *)(v25 > 1), v26 + 1, 1, v23);
                v22[v88] = v23;
              }
              uint64_t v7 = v92;
              v23[2] = v26 + 1;
              uint64_t v27 = &v23[4 * v26];
              v27[4] = v9;
              v27[5] = v8;
              v27[6] = v10;
              v27[7] = v11;
              uint64_t v5 = v88;
              goto LABEL_4;
            }
            char v21 = sub_1DD048FA8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v21) {
              goto LABEL_24;
            }
            swift_bridgeObjectRelease();
            uint64_t v5 = v88;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v5 = v88;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
LABEL_4:
      v6 += 4;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        a2 = v85;
        goto LABEL_35;
      }
    }
    uint64_t v5 = v7[2];
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A78);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1DD04E910;
    *(void *)(v12 + 32) = v9;
    *(void *)(v12 + 40) = v8;
    *(void *)(v12 + 48) = v10;
    *(void *)(v12 + 56) = v11;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_1DCE9D66C(0, v7[2] + 1, 1, v7);
    }
    unint64_t v14 = v7[2];
    unint64_t v13 = v7[3];
    if (v14 >= v13 >> 1) {
      uint64_t v7 = sub_1DCE9D66C((void *)(v13 > 1), v14 + 1, 1, v7);
    }
    void v7[2] = v14 + 1;
    v7[v14 + 4] = v12;
    goto LABEL_4;
  }
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
LABEL_35:
  uint64_t v90 = v7[2];
  if (!v90)
  {
    uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
LABEL_76:
    swift_bridgeObjectRelease();
    return (uint64_t)v29;
  }
  char v89 = a2 & 1;
  v93 = v7;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  uint64_t v29 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v31 = v93[v28 + 4];
    if (*(void *)(v31 + 16) == 1) {
      break;
    }
    uint64_t v43 = (void *)swift_bridgeObjectRetain();
    sub_1DCD24B84(v43);
    uint64_t v45 = v44;
    double v47 = v46;
    swift_bridgeObjectRelease();
    if (!v45) {
      goto LABEL_39;
    }
    if (!a1)
    {
      swift_bridgeObjectRetain();
      uint64_t v87 = 0;
      id v49 = 0;
LABEL_65:
      unint64_t v53 = 0xE000000000000000;
      goto LABEL_66;
    }
    id v48 = a1;
    swift_bridgeObjectRetain();
    id v49 = objc_msgSend(v48, sel_queryID);
    id v50 = objc_msgSend(v48, sel_applicationIdentifier);
    if (!v50)
    {
      uint64_t v87 = 0;
      goto LABEL_65;
    }
    uint64_t v51 = v50;
    uint64_t v87 = sub_1DD048408();
    unint64_t v53 = v52;

LABEL_66:
    double v69 = v47;
    sub_1DD048488();
    unint64_t v70 = sub_1DCD21A84();
    swift_bridgeObjectRetain();
    unint64_t v82 = v70;
    unint64_t v84 = v70;
    unint64_t v80 = v70;
    uint64_t v78 = MEMORY[0x1E4FBB1A0];
    sub_1DD048A68();
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease();
    double v71 = v69 * 1000000.0;
    if ((~COERCE__INT64(v69 * 1000000.0) & 0x7FF0000000000000) == 0) {
      goto LABEL_81;
    }
    if (v71 <= -1.0) {
      goto LABEL_82;
    }
    if (v71 >= 1.84467441e19) {
      goto LABEL_83;
    }
    unint64_t v72 = (unint64_t)v71;
    id v73 = objc_allocWithZone(MEMORY[0x1E4F99F60]);
    uint64_t v74 = (void *)sub_1DD0483D8();
    swift_bridgeObjectRelease();
    id v66 = objc_msgSend(v73, sel_initWithEvent_timeInterval_queryId_, v74, v72, v49, v78, v80, v82, v84);

    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v29 = sub_1DCE9D43C(0, v29[2] + 1, 1, v29);
    }
    unint64_t v76 = v29[2];
    unint64_t v75 = v29[3];
    if (v76 >= v75 >> 1) {
      uint64_t v29 = sub_1DCE9D43C((void *)(v75 > 1), v76 + 1, 1, v29);
    }
    v29[2] = v76 + 1;
    uint64_t v30 = &v29[5 * v76];
    v30[4] = v49;
    v30[5] = v87;
LABEL_38:
    v30[6] = v53;
    v30[7] = v66;
    *((unsigned char *)v30 + 64) = v89;
LABEL_39:
    if (v90 == ++v28)
    {
      swift_bridgeObjectRelease();
      goto LABEL_76;
    }
  }
  uint64_t v32 = *(void *)(v31 + 32);
  uint64_t v33 = *(void *)(v31 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v34 = sub_1DCD248D4(v32, v33);
  swift_bridgeObjectRelease();
  if (v34)
  {
    uint64_t v35 = *(void *)(v31 + 32);
    uint64_t v36 = *(void *)(v31 + 40);
    swift_bridgeObjectRetain();
    int v37 = sub_1DCD248D4(v35, v36);
    swift_bridgeObjectRelease();
    if (v37 != 2)
    {
      uint64_t v38 = *(void *)(v31 + 32);
      uint64_t v39 = *(void *)(v31 + 40);
      swift_bridgeObjectRetain();
      int v40 = sub_1DCD248D4(v38, v39);
      swift_bridgeObjectRelease();
      if (v40 != 1)
      {
        uint64_t v41 = *(void *)(v31 + 32);
        uint64_t v42 = *(void *)(v31 + 40);
        swift_bridgeObjectRetain();
        LOBYTE(v41) = sub_1DCD248D4(v41, v42);
        swift_bridgeObjectRelease();
        if (v41 != 3)
        {
          swift_bridgeObjectRelease();
          goto LABEL_39;
        }
      }
    }
  }
  double v54 = *(double *)(v31 + 48);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  if (a1)
  {
    id v55 = a1;
    id v56 = objc_msgSend(v55, sel_queryID);
    id v57 = objc_msgSend(v55, sel_applicationIdentifier);
    if (v57)
    {
      uint64_t v58 = v57;
      uint64_t v59 = sub_1DD048408();
      unint64_t v53 = v60;

      goto LABEL_57;
    }
    uint64_t v59 = 0;
  }
  else
  {
    uint64_t v59 = 0;
    id v56 = 0;
  }
  unint64_t v53 = 0xE000000000000000;
LABEL_57:
  sub_1DD048488();
  unint64_t v61 = sub_1DCD21A84();
  swift_bridgeObjectRetain();
  unint64_t v81 = v61;
  unint64_t v83 = v61;
  unint64_t v79 = v61;
  uint64_t v77 = MEMORY[0x1E4FBB1A0];
  sub_1DD048A68();
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease();
  double v62 = v54 * 1000000.0;
  if ((~COERCE__INT64(v54 * 1000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v62 <= -1.0) {
      goto LABEL_78;
    }
    if (v62 >= 1.84467441e19) {
      goto LABEL_79;
    }
    unint64_t v63 = (unint64_t)v62;
    id v64 = objc_allocWithZone(MEMORY[0x1E4F99F60]);
    uint64_t v65 = (void *)sub_1DD0483D8();
    swift_bridgeObjectRelease();
    id v66 = objc_msgSend(v64, sel_initWithEvent_timeInterval_queryId_, v65, v63, v56, v77, v79, v81, v83);

    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v29 = sub_1DCE9D43C(0, v29[2] + 1, 1, v29);
    }
    unint64_t v68 = v29[2];
    unint64_t v67 = v29[3];
    if (v68 >= v67 >> 1) {
      uint64_t v29 = sub_1DCE9D43C((void *)(v67 > 1), v68 + 1, 1, v29);
    }
    v29[2] = v68 + 1;
    uint64_t v30 = &v29[5 * v68];
    v30[4] = v56;
    v30[5] = v59;
    goto LABEL_38;
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1DCD2581C@<X0>(uint64_t result@<X0>, int64x2_t *a2@<X8>)
{
  int64x2_t v2 = vdupq_n_s64(0x1EuLL);
  v2.i64[0] = (uint64_t)"ObjectDetector Model Execution";
  unint64_t v3 = 0xEF6E6F6974636574;
  unint64_t v4 = 0x65447463656A626FLL;
  switch((char)result)
  {
    case 1:
      int64x2_t v2 = vdupq_n_s64(0x20uLL);
      v2.i64[0] = (uint64_t)"DomainPrediction Model Execution";
      unint64_t v3 = 0x80000001DD066960;
      unint64_t v4 = 0xD000000000000010;
      break;
    case 2:
      int64x2_t v2 = vdupq_n_s64(0x17uLL);
      v2.i64[0] = (uint64_t)"Unified Model Execution";
      unint64_t v3 = 0xE700000000000000;
      unint64_t v4 = 0x64656966696E75;
      break;
    case 3:
      int64x2_t v2 = vdupq_n_s64(0x1BuLL);
      v2.i64[0] = (uint64_t)"Natureworld Model Execution";
      unint64_t v3 = 0xEB00000000646C72;
      unint64_t v4 = 0x6F7765727574616ELL;
      break;
    case 4:
      int64x2_t v2 = vdupq_n_s64(0x17uLL);
      v2.i64[0] = (uint64_t)"Apparel Model Execution";
      unint64_t v3 = 0xE700000000000000;
      unint64_t v4 = 0x6C657261707061;
      break;
    case 5:
      int64x2_t v2 = vdupq_n_s64(0x14uLL);
      v2.i64[0] = (uint64_t)"Food Model Execution";
      unint64_t v3 = 0xE400000000000000;
      unint64_t v4 = 1685024614;
      break;
    case 6:
      int64x2_t v2 = vdupq_n_s64(0x1AuLL);
      v2.i64[0] = (uint64_t)"SignSymbol Model Execution";
      unint64_t v3 = 0xEA00000000006C6FLL;
      unint64_t v4 = 0x626D79536E676973;
      break;
    default:
      break;
  }
  a2->i64[0] = v4;
  a2->i64[1] = v3;
  a2[1] = v2;
  a2[2].i8[0] = 2;
  return result;
}

uint64_t sub_1DCD259B0@<X0>(uint64_t result@<X0>, int64x2_t *a2@<X8>)
{
  int64x2_t v2 = vdupq_n_s64(0x1CuLL);
  v2.i64[0] = (uint64_t)"ObjectDetector Model Loading";
  unint64_t v3 = 0xEF6E6F6974636574;
  unint64_t v4 = 0x65447463656A626FLL;
  switch((char)result)
  {
    case 1:
      int64x2_t v2 = vdupq_n_s64(0x1EuLL);
      v2.i64[0] = (uint64_t)"DomainPrediction Model Loading";
      unint64_t v3 = 0x80000001DD066960;
      unint64_t v4 = 0xD000000000000010;
      break;
    case 2:
      int64x2_t v2 = vdupq_n_s64(0x15uLL);
      v2.i64[0] = (uint64_t)"Unified Model Loading";
      unint64_t v3 = 0xE700000000000000;
      unint64_t v4 = 0x64656966696E75;
      break;
    case 3:
      int64x2_t v2 = vdupq_n_s64(0x19uLL);
      v2.i64[0] = (uint64_t)"Natureworld Model Loading";
      unint64_t v3 = 0xEB00000000646C72;
      unint64_t v4 = 0x6F7765727574616ELL;
      break;
    case 4:
      int64x2_t v2 = vdupq_n_s64(0x15uLL);
      v2.i64[0] = (uint64_t)"Apparel Model Loading";
      unint64_t v3 = 0xE700000000000000;
      unint64_t v4 = 0x6C657261707061;
      break;
    case 5:
      int64x2_t v2 = vdupq_n_s64(0x12uLL);
      v2.i64[0] = (uint64_t)"Food Model Loading";
      unint64_t v3 = 0xE400000000000000;
      unint64_t v4 = 1685024614;
      break;
    case 6:
      int64x2_t v2 = vdupq_n_s64(0x18uLL);
      v2.i64[0] = (uint64_t)"SignSymbol Model Loading";
      unint64_t v3 = 0xEA00000000006C6FLL;
      unint64_t v4 = 0x626D79536E676973;
      break;
    default:
      break;
  }
  a2->i64[0] = v4;
  a2->i64[1] = v3;
  a2[1] = v2;
  a2[2].i8[0] = 2;
  return result;
}

uint64_t sub_1DCD25B44@<X0>(uint64_t result@<X0>, int64x2_t *a2@<X8>)
{
  int64x2_t v2 = vdupq_n_s64(0x25uLL);
  v2.i64[0] = (uint64_t)"ObjectDetector Model Preprocess Input";
  unint64_t v3 = 0xEF6E6F6974636574;
  unint64_t v4 = 0x65447463656A626FLL;
  switch((char)result)
  {
    case 1:
      int64x2_t v2 = vdupq_n_s64(0x27uLL);
      v2.i64[0] = (uint64_t)"DomainPrediction Model Preprocess Input";
      unint64_t v3 = 0x80000001DD066960;
      unint64_t v4 = 0xD000000000000010;
      break;
    case 2:
      int64x2_t v2 = vdupq_n_s64(0x1EuLL);
      v2.i64[0] = (uint64_t)"Unified Model Preprocess Input";
      unint64_t v3 = 0xE700000000000000;
      unint64_t v4 = 0x64656966696E75;
      break;
    case 3:
      int64x2_t v2 = vdupq_n_s64(0x22uLL);
      v2.i64[0] = (uint64_t)"Natureworld Model Preprocess Input";
      unint64_t v3 = 0xEB00000000646C72;
      unint64_t v4 = 0x6F7765727574616ELL;
      break;
    case 4:
      int64x2_t v2 = vdupq_n_s64(0x1EuLL);
      v2.i64[0] = (uint64_t)"Apparel Model Preprocess Input";
      unint64_t v3 = 0xE700000000000000;
      unint64_t v4 = 0x6C657261707061;
      break;
    case 5:
      int64x2_t v2 = vdupq_n_s64(0x1BuLL);
      v2.i64[0] = (uint64_t)"Food Model Preprocess Input";
      unint64_t v3 = 0xE400000000000000;
      unint64_t v4 = 1685024614;
      break;
    case 6:
      int64x2_t v2 = vdupq_n_s64(0x21uLL);
      v2.i64[0] = (uint64_t)"SignSymbol Model Preprocess Input";
      unint64_t v3 = 0xEA00000000006C6FLL;
      unint64_t v4 = 0x626D79536E676973;
      break;
    default:
      break;
  }
  a2->i64[0] = v4;
  a2->i64[1] = v3;
  a2[1] = v2;
  a2[2].i8[0] = 2;
  return result;
}

uint64_t sub_1DCD25CD8@<X0>(uint64_t result@<X0>, int64x2_t *a2@<X8>)
{
  int64x2_t v2 = vdupq_n_s64(0x28uLL);
  v2.i64[0] = (uint64_t)"ObjectDetector Model Postprocess Results";
  unint64_t v3 = 0xEF6E6F6974636574;
  unint64_t v4 = 0x65447463656A626FLL;
  switch((char)result)
  {
    case 1:
      int64x2_t v2 = vdupq_n_s64(0x2AuLL);
      v2.i64[0] = (uint64_t)"DomainPrediction Model Postprocess Results";
      unint64_t v3 = 0x80000001DD066960;
      unint64_t v4 = 0xD000000000000010;
      break;
    case 2:
      int64x2_t v2 = vdupq_n_s64(0x21uLL);
      v2.i64[0] = (uint64_t)"Unified Model Postprocess Results";
      unint64_t v3 = 0xE700000000000000;
      unint64_t v4 = 0x64656966696E75;
      break;
    case 3:
      int64x2_t v2 = vdupq_n_s64(0x25uLL);
      v2.i64[0] = (uint64_t)"Natureworld Model Postprocess Results";
      unint64_t v3 = 0xEB00000000646C72;
      unint64_t v4 = 0x6F7765727574616ELL;
      break;
    case 4:
      int64x2_t v2 = vdupq_n_s64(0x21uLL);
      v2.i64[0] = (uint64_t)"Apparel Model Postprocess Results";
      unint64_t v3 = 0xE700000000000000;
      unint64_t v4 = 0x6C657261707061;
      break;
    case 5:
      int64x2_t v2 = vdupq_n_s64(0x1EuLL);
      v2.i64[0] = (uint64_t)"Food Model Postprocess Results";
      unint64_t v3 = 0xE400000000000000;
      unint64_t v4 = 1685024614;
      break;
    case 6:
      int64x2_t v2 = vdupq_n_s64(0x24uLL);
      v2.i64[0] = (uint64_t)"SignSymbol Model Postprocess Results";
      unint64_t v3 = 0xEA00000000006C6FLL;
      unint64_t v4 = 0x626D79536E676973;
      break;
    default:
      break;
  }
  a2->i64[0] = v4;
  a2->i64[1] = v3;
  a2[1] = v2;
  a2[2].i8[0] = 2;
  return result;
}

void *sub_1DCD25E6C(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    unint64_t v4 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DD046478();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (void *)((char *)v4 + v14);
    uint64_t v19 = (void *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)v4 + v21) = *(void *)((char *)a2 + v21);
    uint64_t v22 = a3[11];
    *(void *)((char *)v4 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *(void *)((char *)v4 + v22) = *(void *)((char *)a2 + v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DCD25FD0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1DD046478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void *sub_1DCD26094(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DD046478();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  uint64_t v21 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_1DCD261AC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD046478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1DCD26308(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD046478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  return a1;
}

void *sub_1DCD263D0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DD046478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_release();
  return a1;
}

uint64_t sub_1DCD264E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD264F4);
}

uint64_t sub_1DCD264F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD046478();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCD265A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD265B8);
}

uint64_t sub_1DCD265B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD046478();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MLModelInfo(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86BE0);
}

uint64_t sub_1DCD26680()
{
  uint64_t result = sub_1DD046478();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCD2674C(char a1)
{
  uint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      return 0x676E697070616DLL;
    case 2:
      return 0x617461646174656DLL;
    case 3:
      unsigned int v3 = 1299472739;
      return v3 | 0x6970706100000000;
    case 4:
      unsigned int v3 = 1298624356;
      return v3 | 0x6970706100000000;
    case 5:
      unsigned int v4 = 1952542563;
      goto LABEL_9;
    case 6:
      unsigned int v4 = 1919508840;
LABEL_9:
      uint64_t result = v4 | 0x7070614D00000000;
      break;
    case 7:
      uint64_t result = 0x4D736C616D696E61;
      break;
    case 8:
      uint64_t result = 0x614D65727574616ELL;
      break;
    case 9:
      uint64_t result = 0xD000000000000015;
      break;
    case 10:
      uint64_t result = 0x614C657372616F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCD268BC(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1DCD2674C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1DCD2674C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1DD048FA8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DCD26948()
{
  char v1 = *v0;
  sub_1DD0490B8();
  sub_1DCD2674C(v1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  return sub_1DD049108();
}

uint64_t sub_1DCD269AC()
{
  sub_1DCD2674C(*v0);
  sub_1DD0484F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCD26A00()
{
  char v1 = *v0;
  sub_1DD0490B8();
  sub_1DCD2674C(v1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  return sub_1DD049108();
}

uint64_t sub_1DCD26A60@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCD28850();
  *a1 = result;
  return result;
}

uint64_t sub_1DCD26A90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCD2674C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DCD26ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v9, &qword_1EBE85DB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1DCD2479C((uint64_t)v9, &qword_1EBE85DB0);
    uint64_t result = sub_1DCD26C9C(a2, a3);
    if (!v3) {
      return result;
    }

    uint64_t v15 = 1;
  }
  else
  {
    sub_1DCD28900((uint64_t)v9, (uint64_t)v13, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
    sub_1DCD28900((uint64_t)v13, a3, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
    uint64_t v15 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, v15, 1, v10);
}

uint64_t sub_1DCD26C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v56 = sub_1DD048068();
  uint64_t v3 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v55 = (uint64_t)v49 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DD046478();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19.n128_f64[0] = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v49 - v20;
  if (*(void *)(a1 + 16) && (uint64_t v22 = sub_1DCEAD428(0), (v23 & 1) != 0))
  {
    double v54 = v21;
    size_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v24(v13, *(void *)(a1 + 56) + *(void *)(v15 + 72) * v22, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      unint64_t v53 = (void (*)(char *, char *, uint64_t))v24;
      unint64_t v25 = v54;
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v54, v13, v14);
      unint64_t v26 = v57;
      sub_1DCDC277C();
      if (v26)
      {

        uint64_t v27 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(v28 + 56);
        id v57 = (void *)v27;
        uint64_t v51 = v28 + 56;
        unint64_t v52 = v29;
        ((void (*)(char *, uint64_t, uint64_t))v29)(v10, 1, 1);
        sub_1DCD2479C((uint64_t)v10, &qword_1EBE85DB0);
        uint64_t v30 = v55;
        sub_1DCDB40EC(v55);
        v53(v17, v25, v14);
        uint64_t v31 = sub_1DD048048();
        os_log_type_t v32 = sub_1DD048858();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = (uint8_t *)swift_slowAlloc();
          unint64_t v53 = (void (*)(char *, char *, uint64_t))swift_slowAlloc();
          unint64_t v60 = v53;
          *(_DWORD *)uint64_t v33 = 136315138;
          v49[1] = v33 + 4;
          id v50 = v33;
          sub_1DCD28968();
          uint64_t v34 = sub_1DD048F78();
          uint64_t v59 = sub_1DCED7FA0(v34, v35, (uint64_t *)&v60);
          sub_1DD048A28();
          swift_bridgeObjectRelease();
          uint64_t v36 = *(void (**)(char *, uint64_t))(v15 + 8);
          v36(v17, v14);
          int v37 = v50;
          _os_log_impl(&dword_1DCCF9000, v31, v32, "unable to load Model Description from file %s", v50, 0xCu);
          uint64_t v38 = v53;
          swift_arrayDestroy();
          MEMORY[0x1E01B07E0](v38, -1, -1);
          MEMORY[0x1E01B07E0](v37, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v55, v56);
          v36(v25, v14);
        }
        else
        {

          id v48 = *(void (**)(char *, uint64_t))(v15 + 8);
          v48(v17, v14);
          (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v30, v56);
          v48(v25, v14);
        }
        return v52(v58, 1, 1, v57);
      }
      else
      {
        uint64_t v44 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
        uint64_t v45 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56);
        v45(v10, 0, 1, v44);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v25, v14);
        uint64_t v46 = (uint64_t)v10;
        uint64_t v47 = v58;
        sub_1DCD28900(v46, v58, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
        return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v45)(v47, 0, 1, v44);
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56))(v13, 1, 1, v14, v19);
  }
  sub_1DCD2479C((uint64_t)v13, &qword_1EBE848E0);
  sub_1DCDB40EC((uint64_t)v5);
  uint64_t v39 = sub_1DD048048();
  os_log_type_t v40 = sub_1DD048858();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl(&dword_1DCCF9000, v39, v40, "missing model Specification", v41, 2u);
    MEMORY[0x1E01B07E0](v41, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v56);
  uint64_t v42 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v58, 1, 1, v42);
}

uint64_t sub_1DCD27368@<X0>(uint64_t a1@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v1 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v59 = (char *)v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v58 = (uint64_t)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v55 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v60 = (uint64_t)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v55 - v11;
  uint64_t v13 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v61 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v55 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (void *)((char *)v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DF8);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v62 = (uint64_t)v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  uint64_t v64 = *(void *)(v66 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v66);
  unint64_t v26 = (char *)v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)v55 - v27;
  type metadata accessor for MLModelInfo(0);
  sub_1DCFE2930((uint64_t)v21);
  uint64_t v56 = v16;
  id v57 = v28;
  uint64_t v29 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v21, 1, v29) == 1)
  {
    sub_1DCD2479C((uint64_t)v21, &qword_1EBE85DB0);
    uint64_t v30 = v62;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v62, 1, 1, v66);
    uint64_t v31 = v63;
LABEL_3:
    os_log_type_t v32 = &qword_1EBE85DF8;
LABEL_4:
    sub_1DCD2479C(v30, v32);
    goto LABEL_5;
  }
  uint64_t v35 = *v21;
  swift_bridgeObjectRetain();
  sub_1DCD2800C((uint64_t)v21, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
  uint64_t v36 = *(void *)(v35 + 16);
  if (v36)
  {
    uint64_t v37 = v35 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
    uint64_t v38 = (unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
    uint64_t v65 = *(void *)(v64 + 72);
    v55[1] = v35;
    swift_bridgeObjectRetain();
    uint64_t v39 = v13;
    do
    {
      sub_1DCD2806C(v37, (uint64_t)v26, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      sub_1DCD2889C((uint64_t)&v26[*(int *)(v66 + 28)], (uint64_t)v12, &qword_1EBE85B60);
      if ((*v38)(v12, 1, v39) == 1)
      {
        uint64_t v40 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v18, 1, 1, v40);
        v18[*(int *)(v39 + 20)] = 0;
        sub_1DD047BE8();
        sub_1DCD2479C((uint64_t)v12, &qword_1EBE85B60);
      }
      else
      {
        sub_1DCD28900((uint64_t)v12, (uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_FeatureType);
      }
      sub_1DCD2889C((uint64_t)v18, (uint64_t)v7, &qword_1EBE85B28);
      sub_1DCD2800C((uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_FeatureType);
      uint64_t v41 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v7, 1, v41) == 1)
      {
        sub_1DCD2479C((uint64_t)v7, &qword_1EBE85B28);
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        sub_1DCD2800C((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
        if (EnumCaseMultiPayload != 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v30 = v62;
          sub_1DCD28900((uint64_t)v26, v62, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
          uint64_t v43 = 0;
          uint64_t v31 = v63;
          goto LABEL_18;
        }
      }
      sub_1DCD2800C((uint64_t)v26, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      v37 += v65;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
    uint64_t v43 = 1;
    uint64_t v30 = v62;
    uint64_t v31 = v63;
LABEL_18:
    uint64_t v44 = (uint64_t)v57;
    uint64_t v45 = v66;
    uint64_t v46 = v61;
  }
  else
  {
    uint64_t v43 = 1;
    uint64_t v30 = v62;
    uint64_t v31 = v63;
    uint64_t v44 = (uint64_t)v57;
    uint64_t v39 = v13;
    uint64_t v46 = v61;
    uint64_t v45 = v66;
  }
  uint64_t v47 = v64;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v30, v43, 1, v45);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v30, 1, v45) == 1) {
    goto LABEL_3;
  }
  sub_1DCD28900(v30, v44, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
  uint64_t v48 = v46;
  uint64_t v49 = v60;
  sub_1DCD2889C(v44 + *(int *)(v45 + 28), v60, &qword_1EBE85B60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v49, 1, v39) == 1)
  {
    uint64_t v50 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    uint64_t v51 = (uint64_t)v56;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v56, 1, 1, v50);
    *(unsigned char *)(v51 + *(int *)(v39 + 20)) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C(v49, &qword_1EBE85B60);
  }
  else
  {
    uint64_t v51 = (uint64_t)v56;
    sub_1DCD28900(v49, (uint64_t)v56, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  }
  uint64_t v30 = v58;
  uint64_t v52 = (uint64_t)v59;
  sub_1DCD2889C(v51, v58, &qword_1EBE85B28);
  sub_1DCD2800C(v51, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  uint64_t v53 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v30, 1, v53) == 1)
  {
    sub_1DCD2800C(v44, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    os_log_type_t v32 = &qword_1EBE85B28;
    goto LABEL_4;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DCD28900(v30, v52, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    sub_1DCD28900(v44, v31, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    uint64_t v54 = type metadata accessor for MLModelImageInput(0);
    sub_1DCD28900(v52, v31 + *(int *)(v54 + 20), type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v31, 0, 1, v54);
  }
  sub_1DCD2800C(v44, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
  sub_1DCD2800C(v30, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
LABEL_5:
  uint64_t v33 = type metadata accessor for MLModelImageInput(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 1, 1, v33);
}

double sub_1DCD27D54()
{
  uint64_t v0 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (uint64_t *)((char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85808);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  sub_1DCD27368((uint64_t)&v14 - v7);
  uint64_t v9 = type metadata accessor for MLModelImageInput(0);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (v10(v8, 1, v9) == 1)
  {
    sub_1DCD2479C((uint64_t)v8, &qword_1EBE85808);
    double v11 = 0.0;
  }
  else
  {
    sub_1DCD2806C((uint64_t)&v8[*(int *)(v9 + 20)], (uint64_t)v2, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    sub_1DCD2800C((uint64_t)v8, type metadata accessor for MLModelImageInput);
    uint64_t v12 = *v2;
    sub_1DCD2800C((uint64_t)v2, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    double v11 = (double)v12;
  }
  sub_1DCD27368((uint64_t)v6);
  if (v10(v6, 1, v9) == 1)
  {
    sub_1DCD2479C((uint64_t)v6, &qword_1EBE85808);
  }
  else
  {
    sub_1DCD2806C((uint64_t)&v6[*(int *)(v9 + 20)], (uint64_t)v2, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    sub_1DCD2800C((uint64_t)v6, type metadata accessor for MLModelImageInput);
    sub_1DCD2800C((uint64_t)v2, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  }
  return v11;
}

uint64_t type metadata accessor for MLModelImageInput(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE857F8);
}

uint64_t sub_1DCD27FD4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCD2800C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD2806C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD280D4()
{
  uint64_t v0 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v3 = (void *)((char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MLModelInfo(0);
  sub_1DCFE2930((uint64_t)v6);
  uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) == 1)
  {
    sub_1DCD2479C((uint64_t)v6, &qword_1EBE85DB0);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = *((void *)v6 + 1);
  swift_bridgeObjectRetain();
  sub_1DCD2800C((uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
  int64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  v19[0] = MEMORY[0x1E4FBC860];
  sub_1DCFC4948(0, v11, 0);
  uint64_t v12 = v10 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v13 = *(void *)(v1 + 72);
  uint64_t v8 = v19[0];
  do
  {
    sub_1DCD2806C(v12, (uint64_t)v3, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    uint64_t v15 = *v3;
    uint64_t v14 = v3[1];
    swift_bridgeObjectRetain();
    sub_1DCD2800C((uint64_t)v3, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DCFC4948(0, *(void *)(v8 + 16) + 1, 1);
      uint64_t v8 = v19[0];
    }
    unint64_t v17 = *(void *)(v8 + 16);
    unint64_t v16 = *(void *)(v8 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_1DCFC4948(v16 > 1, v17 + 1, 1);
      uint64_t v8 = v19[0];
    }
    *(void *)(v8 + 16) = v17 + 1;
    uint64_t v18 = v8 + 16 * v17;
    *(void *)(v18 + 32) = v15;
    *(void *)(v18 + 40) = v14;
    v12 += v13;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1DCD283D8()
{
  uint64_t v0 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v33 - v5);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MLModelInfo(0);
  sub_1DCFE2930((uint64_t)v9);
  uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10) == 1)
  {
    sub_1DCD2479C((uint64_t)v9, &qword_1EBE85DB0);
    return sub_1DCDB80F0(MEMORY[0x1E4FBC860]);
  }
  uint64_t v13 = *((void *)v9 + 1);
  swift_bridgeObjectRetain();
  sub_1DCD2800C((uint64_t)v9, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
  int64_t v11 = (void *)sub_1DCDB80F0(MEMORY[0x1E4FBC860]);
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v15 = v13 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v16 = *(void *)(v1 + 72);
  uint64_t v33 = v13;
  swift_bridgeObjectRetain();
  uint64_t v34 = v6;
  while (1)
  {
    sub_1DCD2806C(v15, (uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    uint64_t v18 = *v6;
    uint64_t v17 = v6[1];
    uint64_t v19 = (uint64_t)v3;
    sub_1DCD2806C((uint64_t)v6, (uint64_t)v3, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v35 = v11;
    unint64_t v22 = sub_1DCEAD1A4(v18, v17);
    uint64_t v23 = v11[2];
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v26 = v21;
    if (v11[3] >= v25)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1DCE88214();
      }
    }
    else
    {
      sub_1DCE7D5E8(v25, isUniquelyReferenced_nonNull_native);
      unint64_t v27 = sub_1DCEAD1A4(v18, v17);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_21;
      }
      unint64_t v22 = v27;
    }
    uint64_t v3 = (char *)v19;
    int64_t v11 = v35;
    if (v26)
    {
      sub_1DCD287EC(v19, v35[7] + v22 * v16);
    }
    else
    {
      v35[(v22 >> 6) + 8] |= 1 << v22;
      uint64_t v29 = (uint64_t *)(v11[6] + 16 * v22);
      *uint64_t v29 = v18;
      v29[1] = v17;
      sub_1DCD28900(v19, v11[7] + v22 * v16, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      uint64_t v30 = v11[2];
      BOOL v31 = __OFADD__(v30, 1);
      uint64_t v32 = v30 + 1;
      if (v31) {
        goto LABEL_20;
      }
      void v11[2] = v32;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v34;
    sub_1DCD2800C((uint64_t)v34, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    v15 += v16;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  unint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCD287EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD28850()
{
  unint64_t v0 = sub_1DD048D38();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DCD2889C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD28900(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DCD28968()
{
  unint64_t result = qword_1EBE86B80;
  if (!qword_1EBE86B80)
  {
    sub_1DD046478();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86B80);
  }
  return result;
}

uint64_t *sub_1DCD289C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = (char *)v4 + v9;
  int64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1DD047BF8();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = v10;
  uint64_t v15 = v12;
  v13(v14, v11, v12);
  uint64_t v16 = *(int *)(v8 + 28);
  uint64_t v17 = (uint64_t *)((char *)v4 + v16);
  uint64_t v18 = (uint64_t *)((char *)a2 + v16);
  uint64_t v19 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v20 = *(void *)(v19 - 8);
  v122 = v13;
  if (!(*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v23 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v18, 1, v23))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
      memcpy(v17, v18, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_21:
      *((unsigned char *)v17 + *(int *)(v19 + 20)) = *((unsigned char *)v18 + *(int *)(v19 + 20));
      v13((char *)v17 + *(int *)(v19 + 24), (char *)v18 + *(int *)(v19 + 24), v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_22;
    }
    uint64_t v115 = v24;
    uint64_t v116 = v20;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v118 = v15;
      uint64_t v26 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v26;
      *((unsigned char *)v17 + 16) = *((unsigned char *)v18 + 16);
      uint64_t v113 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v27 = *(int *)(v113 + 24);
      v106 = (void *)((char *)v17 + v27);
      char v28 = (void *)((char *)v18 + v27);
      uint64_t v29 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      uint64_t v102 = *(void *)(v29 - 8);
      v104 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v102 + 48);
      swift_bridgeObjectRetain();
      v110 = v28;
      uint64_t v30 = v28;
      BOOL v31 = (void *)v29;
      if (v104(v30, 1, v29))
      {
        uint64_t v32 = v23;
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
        memcpy(v106, v110, *(void *)(*(void *)(v33 - 8) + 64));
        uint64_t v15 = v118;
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        void *v106 = *v110;
        uint64_t v15 = v118;
        __dst = v31;
        uint64_t v32 = v23;
        if (EnumCaseMultiPayload == 1) {
          uint64_t v48 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
        }
        else {
          uint64_t v48 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
        }
        uint64_t v49 = *(int *)(v48 + 20);
        uint64_t v50 = (char *)v106 + v49;
        uint64_t v51 = (char *)v110 + v49;
        swift_bridgeObjectRetain();
        v122(v50, v51, v118);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, void *))(v102 + 56))(v106, 0, 1, __dst);
      }
    }
    else
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      uint64_t v34 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v35 = *(int *)(v34 + 24);
      v111 = (char *)v17 + v35;
      uint64_t v113 = v34;
      uint64_t v36 = (char *)v18 + v35;
      uint64_t v37 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      uint64_t v105 = *(void *)(v37 - 8);
      v107 = v36;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v36, 1, v37))
      {
        uint64_t v103 = v37;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v122(v111, v36, v15);
          uint64_t v40 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v41 = *(int *)(v40 + 20);
          uint64_t v98 = v40;
          __dsta = &v111[v41];
          uint64_t v42 = &v36[v41];
          uint64_t v43 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v44 = *(void *)(v43 - 8);
          __src = v42;
          v97 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
          uint64_t v45 = v42;
          uint64_t v46 = v43;
          uint64_t v95 = v44;
          if (v97(v45, 1, v43))
          {
            uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(__dsta, __src, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            char *__dsta = *(_OWORD *)__src;
            v122((char *)__dsta + *(int *)(v46 + 24), &__src[*(int *)(v46 + 24)], v15);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))((char *)__dsta, 0, 1, v46);
          }
          uint64_t v90 = (char *)v107;
          uint64_t v91 = v46;
          uint64_t v92 = *(int *)(v98 + 24);
          v109 = &v111[v92];
          v93 = &v90[v92];
          uint64_t v32 = v23;
          if (v97(&v90[v92], 1, v91))
          {
            uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v109, v93, *(void *)(*(void *)(v94 - 8) + 64));
          }
          else
          {
            char *v109 = *v93;
            v122((char *)v109 + *(int *)(v91 + 24), (char *)v93 + *(int *)(v91 + 24), v15);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))((char *)v109, 0, 1, v91);
          }
          uint64_t v87 = v111;
          uint64_t v52 = v113;
        }
        else
        {
          uint64_t v32 = v23;
          uint64_t v87 = v111;
          *(void *)v111 = *v107;
          uint64_t v88 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          __dstb = &v111[v88];
          char v89 = (char *)v107 + v88;
          swift_bridgeObjectRetain();
          v122(__dstb, v89, v15);
          uint64_t v52 = v113;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))((char *)v87, 0, 1, v103);
        goto LABEL_20;
      }
      uint64_t v32 = v23;
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
      memcpy(v111, v36, *(void *)(*(void *)(v38 - 8) + 64));
    }
    uint64_t v52 = v113;
LABEL_20:
    uint64_t v53 = *(int *)(v52 + 28);
    uint64_t v54 = (char *)v17 + v53;
    uint64_t v55 = (char *)v18 + v53;
    *(void *)uint64_t v54 = *(void *)v55;
    v54[8] = v55[8];
    v122((char *)v17 + *(int *)(v52 + 32), (char *)v18 + *(int *)(v52 + 32), v15);
    uint64_t v13 = v122;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v115 + 56))(v17, 0, 1, v32);
    uint64_t v20 = v116;
    goto LABEL_21;
  }
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
  memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_22:
  uint64_t v56 = *(int *)(a3 + 20);
  id v57 = (char *)v4 + v56;
  uint64_t v58 = (char *)a2 + v56;
  *(_OWORD *)((char *)v4 + v56) = *(_OWORD *)((char *)a2 + v56);
  uint64_t v59 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  uint64_t v60 = v59[6];
  uint64_t v61 = &v57[v60];
  uint64_t v62 = &v58[v60];
  uint64_t v63 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
  {
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    uint64_t v66 = v122;
  }
  else
  {
    uint64_t v119 = v15;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v122(v61, v62, v15);
      uint64_t v117 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v67 = *(int *)(v117 + 20);
      v121 = &v61[v67];
      unint64_t v68 = &v62[v67];
      uint64_t v69 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      uint64_t v70 = *(void *)(v69 - 8);
      v112 = v68;
      v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
      double v71 = v68;
      uint64_t v72 = v69;
      v108 = (void (**)(char *, void, uint64_t, uint64_t))v70;
      if (v114(v71, 1, v69))
      {
        uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v121, v112, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v121 = *(_OWORD *)v112;
        v122(&v121[*(int *)(v72 + 24)], &v112[*(int *)(v72 + 24)], v119);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v121, 0, 1, v72);
      }
      uint64_t v78 = *(int *)(v117 + 24);
      unint64_t v79 = &v61[v78];
      unint64_t v80 = &v62[v78];
      if (v114(v80, 1, v72))
      {
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
        uint64_t v15 = v119;
      }
      else
      {
        *(_OWORD *)unint64_t v79 = *(_OWORD *)v80;
        v122(&v79[*(int *)(v72 + 24)], &v80[*(int *)(v72 + 24)], v119);
        uint64_t v82 = v72;
        uint64_t v15 = v119;
        v108[7](v79, 0, 1, v82);
      }
    }
    else
    {
      *(void *)uint64_t v61 = *(void *)v62;
      uint64_t v74 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      unint64_t v75 = &v61[v74];
      unint64_t v76 = &v62[v74];
      swift_bridgeObjectRetain();
      uint64_t v77 = v75;
      uint64_t v15 = v119;
      v122(v77, v76, v119);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
    uint64_t v66 = v122;
  }
  uint64_t v83 = v59[7];
  unint64_t v84 = &v57[v83];
  char v85 = &v58[v83];
  *(void *)unint64_t v84 = *(void *)v85;
  v84[8] = v85[8];
  v66(&v57[v59[8]], &v58[v59[8]], v15);
  return v4;
}

uint64_t sub_1DCD29568(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  uint64_t v5 = a1 + *(int *)(v4 + 24);
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v35(v5, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 28);
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
    {
LABEL_18:
      v35(v7 + *(int *)(v8 + 24), v6);
      goto LABEL_19;
    }
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v11 = v7 + *(int *)(v10 + 24);
      uint64_t v12 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (EnumCaseMultiPayload == 1) {
          uint64_t v14 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
        }
        else {
          uint64_t v14 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
        }
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v11 = v7 + *(int *)(v10 + 24);
      uint64_t v15 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v11, 1, v15))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v35(v11, v6);
          uint64_t v34 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v16 = v11 + *(int *)(v34 + 20);
          uint64_t v17 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v18 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
          uint64_t v33 = v16;
          uint64_t v19 = v16;
          uint64_t v20 = *v18;
          if (!(*v18)(v19, 1, v17)) {
            v35(v33 + *(int *)(v17 + 24), v6);
          }
          v11 += *(int *)(v34 + 24);
          if (v20(v11, 1, v17)) {
            goto LABEL_17;
          }
          uint64_t v21 = *(int *)(v17 + 24);
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v14 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
LABEL_15:
        uint64_t v21 = *(int *)(v14 + 20);
LABEL_16:
        v35(v11 + v21, v6);
      }
    }
LABEL_17:
    v35(v7 + *(int *)(v10 + 32), v6);
    goto LABEL_18;
  }
LABEL_19:
  uint64_t v22 = a1 + *(int *)(a2 + 20);
  uint64_t v23 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  uint64_t v24 = v22 + *(int *)(v23 + 24);
  uint64_t v25 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25)) {
    goto LABEL_27;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
    goto LABEL_26;
  }
  v35(v24, v6);
  uint64_t v26 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  uint64_t v27 = v24 + *(int *)(v26 + 20);
  uint64_t v28 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48);
  if (!v29(v27, 1, v28)) {
    v35(v27 + *(int *)(v28 + 24), v6);
  }
  v24 += *(int *)(v26 + 24);
  if (!v29(v24, 1, v28))
  {
    uint64_t v30 = *(int *)(v28 + 24);
LABEL_26:
    v35(v24 + v30, v6);
  }
LABEL_27:
  uint64_t v31 = v22 + *(int *)(v23 + 32);
  return ((uint64_t (*)(uint64_t, uint64_t))v35)(v31, v6);
}

void *sub_1DCD29A6C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1DD047BF8();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = v9;
  uint64_t v14 = v11;
  v12(v13, v10, v11);
  uint64_t v15 = *(int *)(v7 + 28);
  uint64_t v117 = a1;
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v116 = v12;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
      memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v107 = v22;
      uint64_t v109 = v19;
      __src = (void *)v21;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v111 = v14;
        uint64_t v24 = v17[1];
        *uint64_t v16 = *v17;
        v16[1] = v24;
        *((unsigned char *)v16 + 16) = *((unsigned char *)v17 + 16);
        uint64_t v25 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
        uint64_t v26 = *(int *)(v25 + 24);
        __dst = (void *)((char *)v16 + v26);
        v104 = (int *)v25;
        uint64_t v27 = (void *)((char *)v17 + v26);
        uint64_t v28 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
        uint64_t v29 = *(void *)(v28 - 8);
        uint64_t v30 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v29 + 48);
        uint64_t v31 = v27;
        uint64_t v32 = v28;
        swift_bridgeObjectRetain();
        if (v30(v31, 1, v32))
        {
          uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
          memcpy(__dst, v31, *(void *)(*(void *)(v33 - 8) + 64));
          uint64_t v14 = v111;
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v100 = v31;
          void *__dst = *v31;
          uint64_t v14 = v111;
          if (EnumCaseMultiPayload == 1) {
            uint64_t v51 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
          }
          else {
            uint64_t v51 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
          }
          uint64_t v52 = *(int *)(v51 + 20);
          uint64_t v53 = (char *)__dst + v52;
          v101 = (char *)v100 + v52;
          swift_bridgeObjectRetain();
          v116(v53, v101, v111);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v32);
        }
      }
      else
      {
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        v104 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
        uint64_t v34 = v104[6];
        uint64_t v35 = (void *)((char *)v16 + v34);
        uint64_t v36 = (void *)((char *)v17 + v34);
        uint64_t v37 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
        uint64_t v38 = *(unsigned int (***)(void *, uint64_t, uint64_t))(v37 - 8);
        if (v38[6](v36, 1, v37))
        {
          uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
          memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          __dsta = v38;
          uint64_t v112 = v37;
          uint64_t v41 = v36;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v42 = v35;
            v116((char *)v35, (char *)v36, v14);
            uint64_t v43 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
            uint64_t v44 = *(int *)(v43 + 20);
            uint64_t v98 = (_OWORD *)((char *)v35 + v44);
            uint64_t v45 = (_OWORD *)((char *)v36 + v44);
            uint64_t v46 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
            uint64_t v47 = *(void *)(v46 - 8);
            v97 = v45;
            uint64_t v48 = v45;
            uint64_t v49 = v46;
            v99 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v47 + 48);
            uint64_t v96 = v47;
            if (v99(v48, 1, v46))
            {
              uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(v98, v97, *(void *)(*(void *)(v50 - 8) + 64));
            }
            else
            {
              *uint64_t v98 = *v97;
              v116((char *)v98 + *(int *)(v49 + 24), (char *)v97 + *(int *)(v49 + 24), v14);
              (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v47 + 56))(v98, 0, 1, v49);
            }
            uint64_t v59 = *(int *)(v43 + 24);
            uint64_t v60 = (_OWORD *)((char *)v42 + v59);
            uint64_t v61 = (_OWORD *)((char *)v41 + v59);
            uint64_t v58 = (void (**)(void *, void, uint64_t, void))__dsta;
            if (v99(v61, 1, v49))
            {
              uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
            }
            else
            {
              *uint64_t v60 = *v61;
              v116((char *)v60 + *(int *)(v49 + 24), (char *)v61 + *(int *)(v49 + 24), v14);
              (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v96 + 56))(v60, 0, 1, v49);
            }
            uint64_t v57 = v112;
          }
          else
          {
            uint64_t v42 = v35;
            *uint64_t v35 = *v36;
            uint64_t v54 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                         + 20);
            uint64_t v55 = (char *)v35 + v54;
            uint64_t v56 = (char *)v36 + v54;
            swift_bridgeObjectRetain();
            v116(v55, v56, v14);
            uint64_t v57 = v112;
            uint64_t v58 = (void (**)(void *, void, uint64_t, void))__dsta;
          }
          swift_storeEnumTagMultiPayload();
          v58[7](v42, 0, 1, v57);
        }
      }
      uint64_t v63 = v104[7];
      uint64_t v64 = (char *)v16 + v63;
      uint64_t v65 = (char *)v17 + v63;
      *(void *)uint64_t v64 = *(void *)v65;
      v64[8] = v65[8];
      v116((char *)v16 + v104[8], (char *)v17 + v104[8], v14);
      uint64_t v12 = v116;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, void *))(v107 + 56))(v16, 0, 1, __src);
      uint64_t v19 = v109;
    }
    *((unsigned char *)v16 + *(int *)(v18 + 20)) = *((unsigned char *)v17 + *(int *)(v18 + 20));
    v12((char *)v16 + *(int *)(v18 + 24), (char *)v17 + *(int *)(v18 + 24), v14);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v66 = *(int *)(a3 + 20);
  uint64_t v67 = (char *)v117 + v66;
  unint64_t v68 = (char *)a2 + v66;
  *(_OWORD *)((char *)v117 + v66) = *(_OWORD *)((char *)a2 + v66);
  uint64_t v69 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  uint64_t v70 = v69[6];
  double v71 = &v67[v70];
  uint64_t v72 = &v68[v70];
  uint64_t v73 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  uint64_t v74 = *(void *)(v73 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
  {
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    unint64_t v76 = v116;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v116(v71, v72, v14);
      uint64_t v110 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v113 = v14;
      uint64_t v77 = *(int *)(v110 + 20);
      uint64_t v115 = &v71[v77];
      uint64_t v78 = &v72[v77];
      uint64_t v79 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      uint64_t v80 = *(void *)(v79 - 8);
      v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
      uint64_t v105 = v80;
      if (v108(v78, 1, v79))
      {
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v115, v78, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v115 = *(_OWORD *)v78;
        v116(&v115[*(int *)(v79 + 24)], &v78[*(int *)(v79 + 24)], v113);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v115, 0, 1, v79);
      }
      uint64_t v87 = *(int *)(v110 + 24);
      uint64_t v88 = &v71[v87];
      char v89 = &v72[v87];
      if (v108(v89, 1, v79))
      {
        uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
        uint64_t v14 = v113;
      }
      else
      {
        *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
        v116(&v88[*(int *)(v79 + 24)], &v89[*(int *)(v79 + 24)], v113);
        uint64_t v91 = v79;
        uint64_t v14 = v113;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v88, 0, 1, v91);
      }
    }
    else
    {
      *(void *)double v71 = *(void *)v72;
      uint64_t v82 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      uint64_t v83 = v14;
      unint64_t v84 = &v71[v82];
      char v85 = &v72[v82];
      swift_bridgeObjectRetain();
      uint64_t v86 = v84;
      uint64_t v14 = v83;
      v116(v86, v85, v83);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
    unint64_t v76 = v116;
  }
  uint64_t v92 = v69[7];
  v93 = &v67[v92];
  uint64_t v94 = &v68[v92];
  *(void *)v93 = *(void *)v94;
  v93[8] = v94[8];
  v76(&v67[v69[8]], &v68[v69[8]], v14);
  return v117;
}

void *sub_1DCD2A5C0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a2;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = v3[2];
  a1[3] = v3[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)v3 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v254 = *(void *)(v9 - 8);
  v258 = *(void (**)(char *, char *, uint64_t))(v254 + 24);
  v258(v7, v8, v9);
  uint64_t v10 = *(int *)(v5 + 28);
  uint64_t v11 = (uint64_t)a1 + v10;
  uint64_t v12 = (char *)v3 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15((uint64_t)v12, 1, v13);
  uint64_t v259 = v9;
  if (!v16)
  {
    if (v17)
    {
      sub_1DCD2800C(v11, type metadata accessor for Argos_Protos_MLModel_FeatureType);
      goto LABEL_7;
    }
    v238 = v3;
    uint64_t v24 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    uint64_t v25 = *(void **)(v24 - 8);
    uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v25[6];
    int v27 = v26(v11, 1, v24);
    int v28 = v26((uint64_t)v12, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v228 = v25;
          *(void *)uint64_t v11 = *(void *)v12;
          uint64_t v29 = *((void *)v12 + 1);
          *(unsigned char *)(v11 + 16) = v12[16];
          *(void *)(v11 + 8) = v29;
          uint64_t v30 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
          uint64_t v31 = *(int *)(v30 + 24);
          __dst = (void *)(v11 + v31);
          v248 = (int *)v30;
          uint64_t v32 = &v12[v31];
          uint64_t v33 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
          uint64_t v34 = *(void *)(v33 - 8);
          uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
          uint64_t v36 = v33;
          swift_bridgeObjectRetain();
          if (v35(v32, 1, v36))
          {
            uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
            memcpy(__dst, v32, *(void *)(*(void *)(v37 - 8) + 64));
            uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            void *__dst = *(void *)v32;
            if (EnumCaseMultiPayload == 1) {
              uint64_t v81 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
            }
            else {
              uint64_t v81 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
            }
            v211 = (char *)__dst + v81;
            uint64_t v82 = &v32[v81];
            uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
            swift_bridgeObjectRetain();
            v38(v211, v82, v259);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v36);
          }
          uint64_t v63 = v248;
          uint64_t v25 = v228;
        }
        else
        {
          *(void *)uint64_t v11 = *(void *)v12;
          *(void *)(v11 + 8) = *((void *)v12 + 1);
          uint64_t v63 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
          uint64_t v64 = v63[6];
          uint64_t v65 = (void *)(v11 + v64);
          uint64_t v66 = &v12[v64];
          uint64_t v67 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
          unint64_t v68 = *(unsigned int (***)(void *, uint64_t))(v67 - 8);
          __dstc = (void *)v67;
          if (((unsigned int (**)(char *, uint64_t))v68)[6](v66, 1))
          {
            uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
            memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
            uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
          }
          else
          {
            v222 = v68;
            v252 = v63;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v231 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
              v231((char *)v65, v66, v259);
              uint64_t v90 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
              uint64_t v91 = *(int *)(v90 + 20);
              v216 = v65;
              uint64_t v206 = v90;
              v212 = (void *)((char *)v65 + v91);
              uint64_t v92 = &v66[v91];
              uint64_t v93 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
              uint64_t v94 = *(void *)(v93 - 8);
              __srca = v92;
              v201 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48);
              uint64_t v95 = v92;
              uint64_t v96 = v93;
              uint64_t v195 = v94;
              if (v201(v95, 1, v93))
              {
                uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                memcpy(v212, __srca, *(void *)(*(void *)(v97 - 8) + 64));
              }
              else
              {
                void *v212 = *(void *)__srca;
                v212[1] = *((void *)__srca + 1);
                v231((char *)v212 + *(int *)(v96 + 24), &__srca[*(int *)(v96 + 24)], v259);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(v212, 0, 1, v96);
              }
              uint64_t v173 = *(int *)(v206 + 24);
              v174 = (void *)((char *)v216 + v173);
              v175 = &v66[v173];
              if (v201(v175, 1, v96))
              {
                uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                memcpy(v174, v175, *(void *)(*(void *)(v176 - 8) + 64));
              }
              else
              {
                void *v174 = *(void *)v175;
                v174[1] = *((void *)v175 + 1);
                v231((char *)v174 + *(int *)(v96 + 24), &v175[*(int *)(v96 + 24)], v259);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v195 + 56))(v174, 0, 1, v96);
              }
              uint64_t v63 = v252;
              uint64_t v65 = v216;
            }
            else
            {
              *uint64_t v65 = *(void *)v66;
              uint64_t v102 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                            + 20);
              v232 = (char *)v65 + v102;
              v217 = &v66[v102];
              uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
              swift_bridgeObjectRetain();
              v104 = v232;
              v231 = v103;
              v103((char *)v104, v217, v259);
            }
            swift_storeEnumTagMultiPayload();
            (*((void (**)(void *, void, uint64_t, void *))v222 + 7))(v65, 0, 1, __dstc);
            uint64_t v38 = v231;
          }
        }
        uint64_t v183 = v63[7];
        uint64_t v184 = v11 + v183;
        v185 = &v12[v183];
        uint64_t v186 = *(void *)v185;
        *(unsigned char *)(v184 + 8) = v185[8];
        *(void *)uint64_t v184 = v186;
        v38((char *)(v11 + v63[8]), &v12[v63[8]], v259);
        uint64_t v9 = v259;
        swift_storeEnumTagMultiPayload();
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v25[7])(v11, 0, 1, v24);
LABEL_98:
        uint64_t v3 = v238;
        goto LABEL_99;
      }
    }
    else
    {
      if (!v28)
      {
        if (a1 != v3)
        {
          sub_1DCD2800C(v11, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(void *)uint64_t v11 = *(void *)v12;
            uint64_t v53 = *((void *)v12 + 1);
            *(unsigned char *)(v11 + 16) = v12[16];
            *(void *)(v11 + 8) = v53;
            uint64_t v54 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
            uint64_t v55 = *(int *)(v54 + 24);
            __dstb = (int *)v54;
            v250 = (void *)(v11 + v55);
            uint64_t v56 = &v12[v55];
            uint64_t v57 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
            uint64_t v58 = *(void *)(v57 - 8);
            uint64_t v59 = *(unsigned int (**)(char *, uint64_t, void *))(v58 + 48);
            uint64_t v60 = (void *)v57;
            swift_bridgeObjectRetain();
            if (v59(v56, 1, v60))
            {
              uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
              memcpy(v250, v56, *(void *)(*(void *)(v61 - 8) + 64));
              uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
              uint64_t v9 = v259;
            }
            else
            {
              v234 = v60;
              int v162 = swift_getEnumCaseMultiPayload();
              void *v250 = *(void *)v56;
              if (v162 == 1) {
                uint64_t v163 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
              }
              else {
                uint64_t v163 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0)
              }
                              + 20);
              v225 = (char *)v250 + v163;
              v164 = &v56[v163];
              uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
              swift_bridgeObjectRetain();
              uint64_t v9 = v259;
              v62(v225, v164, v259);
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, void, uint64_t, void *))(v58 + 56))(v250, 0, 1, v234);
            }
            uint64_t v3 = v238;
            uint64_t v177 = __dstb[7];
            uint64_t v178 = v11 + v177;
            v179 = &v12[v177];
            uint64_t v180 = *(void *)v179;
            *(unsigned char *)(v178 + 8) = v179[8];
            *(void *)uint64_t v178 = v180;
            v62((char *)(v11 + __dstb[8]), &v12[__dstb[8]], v9);
            swift_storeEnumTagMultiPayload();
            goto LABEL_99;
          }
          *(void *)uint64_t v11 = *(void *)v12;
          *(void *)(v11 + 8) = *((void *)v12 + 1);
          v251 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
          uint64_t v83 = v251[6];
          unint64_t v84 = (void *)(v11 + v83);
          char v85 = &v12[v83];
          uint64_t v86 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
          uint64_t v87 = *(void *)(v86 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
          {
            uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
            memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
            char v89 = *(void (**)(uint64_t, char *, uint64_t))(v254 + 16);
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              __dstf = *(void (**)(uint64_t, char *, uint64_t))(v254 + 16);
              __dstf((uint64_t)v84, v85, v259);
              uint64_t v165 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
              uint64_t v166 = *(int *)(v165 + 20);
              v235 = v84;
              uint64_t v219 = v165;
              v226 = (void *)((char *)v84 + v166);
              v167 = &v85[v166];
              uint64_t v168 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
              uint64_t v169 = *(void *)(v168 - 8);
              v203 = v167;
              v208 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v169 + 48);
              v170 = v167;
              uint64_t v171 = v168;
              __srcb = (void *)v169;
              if (v208(v170, 1, v168))
              {
                uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                memcpy(v226, v203, *(void *)(*(void *)(v172 - 8) + 64));
              }
              else
              {
                void *v226 = *(void *)v203;
                v226[1] = *((void *)v203 + 1);
                __dstf((uint64_t)v226 + *(int *)(v171 + 24), &v203[*(int *)(v171 + 24)], v259);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v169 + 56))(v226, 0, 1, v171);
              }
              uint64_t v187 = *(int *)(v219 + 24);
              v188 = (void *)((char *)v235 + v187);
              v189 = &v85[v187];
              if (v208(v189, 1, v171))
              {
                uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                memcpy(v188, v189, *(void *)(*(void *)(v190 - 8) + 64));
              }
              else
              {
                void *v188 = *(void *)v189;
                v188[1] = *((void *)v189 + 1);
                __dstf((uint64_t)v188 + *(int *)(v171 + 24), &v189[*(int *)(v171 + 24)], v259);
                (*((void (**)(void *, void, uint64_t, uint64_t))__srcb + 7))(v188, 0, 1, v171);
              }
              unint64_t v84 = v235;
            }
            else
            {
              *unint64_t v84 = *(void *)v85;
              uint64_t v181 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                            + 20);
              v227 = &v85[v181];
              v236 = (char *)v84 + v181;
              v182 = *(void (**)(uint64_t, char *, uint64_t))(v254 + 16);
              swift_bridgeObjectRetain();
              __dstf = v182;
              v182((uint64_t)v236, v227, v259);
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
            char v89 = __dstf;
          }
          uint64_t v191 = v251[7];
          uint64_t v192 = v11 + v191;
          v193 = &v12[v191];
          uint64_t v194 = *(void *)v193;
          *(unsigned char *)(v192 + 8) = v193[8];
          *(void *)uint64_t v192 = v194;
          uint64_t v9 = v259;
          v89(v11 + v251[8], &v12[v251[8]], v259);
          swift_storeEnumTagMultiPayload();
          goto LABEL_98;
        }
LABEL_99:
        *(unsigned char *)(v11 + *(int *)(v13 + 20)) = v12[*(int *)(v13 + 20)];
        v258((char *)(v11 + *(int *)(v13 + 24)), &v12[*(int *)(v13 + 24)], v9);
        goto LABEL_8;
      }
      sub_1DCD2800C(v11, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    }
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
    memcpy((void *)v11, v12, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_99;
  }
  if (v17)
  {
LABEL_7:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
    memcpy((void *)v11, v12, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_8:
    uint64_t v23 = a3;
    goto LABEL_56;
  }
  uint64_t v18 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  uint64_t v19 = *(unsigned int (***)(void, uint64_t, uint64_t))(v18 - 8);
  v237 = v3;
  if (!((unsigned int (**)(char *, uint64_t, uint64_t))v19)[6](v12, 1, v18))
  {
    v249 = (void (**)(uint64_t, void, uint64_t, uint64_t))v19;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      uint64_t v39 = *((void *)v12 + 1);
      *(unsigned char *)(v11 + 16) = v12[16];
      *(void *)(v11 + 8) = v39;
      __dsta = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v40 = __dsta[6];
      v229 = (void *)(v11 + v40);
      uint64_t v41 = &v12[v40];
      uint64_t v42 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      uint64_t v214 = *(void *)(v42 - 8);
      uint64_t v43 = *(unsigned int (**)(char *, uint64_t, void *))(v214 + 48);
      uint64_t v44 = (void *)v42;
      swift_bridgeObjectRetain();
      if (!v43(v41, 1, v44))
      {
        v209 = v44;
        int v70 = swift_getEnumCaseMultiPayload();
        void *v229 = *(void *)v41;
        if (v70 == 1) {
          uint64_t v71 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        }
        else {
          uint64_t v71 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        }
        v204 = (char *)v229 + v71;
        v221 = &v41[v71];
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
        swift_bridgeObjectRetain();
        v21(v204, v221, v259);
        uint64_t v52 = __dsta;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, void *))(v214 + 56))(v229, 0, 1, v209);
        goto LABEL_54;
      }
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
      memcpy(v229, v41, *(void *)(*(void *)(v45 - 8) + 64));
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
    }
    else
    {
      v220 = (void *)v18;
      *(void *)uint64_t v11 = *(void *)v12;
      *(void *)(v11 + 8) = *((void *)v12 + 1);
      __dsta = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v47 = __dsta[6];
      v230 = (void *)(v11 + v47);
      uint64_t v48 = &v12[v47];
      uint64_t v49 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      uint64_t v50 = *(void *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      {
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
        memcpy(v230, v48, *(void *)(*(void *)(v51 - 8) + 64));
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
        uint64_t v52 = __dsta;
        uint64_t v18 = (uint64_t)v220;
LABEL_54:
        uint64_t v105 = v52[7];
        uint64_t v106 = v11 + v105;
        uint64_t v107 = &v12[v105];
        uint64_t v108 = *(void *)v107;
        *(unsigned char *)(v106 + 8) = v107[8];
        *(void *)uint64_t v106 = v108;
        v21((char *)(v11 + v52[8]), &v12[v52[8]], v259);
        uint64_t v9 = v259;
        swift_storeEnumTagMultiPayload();
        v249[7](v11, 0, 1, v18);
        goto LABEL_55;
      }
      v210 = (void *)v49;
      uint64_t v215 = v50;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
        v21((char *)v230, v48, v259);
        uint64_t v205 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        uint64_t v72 = *(int *)(v205 + 20);
        v196 = (void *)((char *)v230 + v72);
        __src = v48;
        uint64_t v73 = &v48[v72];
        uint64_t v74 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        uint64_t v75 = *(void *)(v74 - 8);
        v200 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
        if (v200(v73, 1, v74))
        {
          uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v196, v73, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          void *v196 = *(void *)v73;
          v196[1] = *((void *)v73 + 1);
          v21((char *)v196 + *(int *)(v74 + 24), &v73[*(int *)(v74 + 24)], v259);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v196, 0, 1, v74);
        }
        uint64_t v98 = *(int *)(v205 + 24);
        v99 = (void *)((char *)v230 + v98);
        v100 = &__src[v98];
        if (v200(&__src[v98], 1, v74))
        {
          uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
        }
        else
        {
          void *v99 = *(void *)v100;
          v99[1] = *((void *)v100 + 1);
          v21((char *)v99 + *(int *)(v74 + 24), &v100[*(int *)(v74 + 24)], v259);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v75 + 56))(v99, 0, 1, v74);
        }
        uint64_t v77 = v230;
      }
      else
      {
        uint64_t v77 = v230;
        void *v230 = *(void *)v48;
        uint64_t v78 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        v202 = (char *)v230 + v78;
        uint64_t v79 = &v48[v78];
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
        swift_bridgeObjectRetain();
        v21(v202, v79, v259);
      }
      uint64_t v18 = (uint64_t)v220;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, void *))(v215 + 56))(v77, 0, 1, v210);
    }
    uint64_t v52 = __dsta;
    goto LABEL_54;
  }
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  memcpy((void *)v11, v12, *(void *)(*(void *)(v20 - 8) + 64));
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
LABEL_55:
  uint64_t v23 = a3;
  *(unsigned char *)(v11 + *(int *)(v13 + 20)) = v12[*(int *)(v13 + 20)];
  v21((char *)(v11 + *(int *)(v13 + 24)), &v12[*(int *)(v13 + 24)], v9);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  uint64_t v3 = v237;
LABEL_56:
  uint64_t v109 = *(int *)(v23 + 20);
  v257 = a1;
  uint64_t v110 = (char *)a1 + v109;
  uint64_t v111 = (char *)v3 + v109;
  *(void *)uint64_t v110 = *(void *)((char *)v3 + v109);
  *((void *)v110 + 1) = *(void *)((char *)v3 + v109 + 8);
  uint64_t v112 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  uint64_t v113 = *(int *)(v112 + 24);
  v114 = &v110[v113];
  uint64_t v115 = &v111[v113];
  uint64_t v116 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  __dstd = *(void **)(v116 - 8);
  uint64_t v117 = (uint64_t (*)(void *, uint64_t, uint64_t))__dstd[6];
  uint64_t v118 = v114;
  LODWORD(v114) = v117(v114, 1, v116);
  v253 = (void *)v116;
  int v119 = v117(v115, 1, v116);
  if (v114)
  {
    if (!v119)
    {
      uint64_t v120 = v112;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v121 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
        v121(v118, v115, v259);
        v223 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        uint64_t v122 = v223[5];
        v213 = &v118[v122];
        v123 = &v115[v122];
        uint64_t v124 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        uint64_t v125 = *(void *)(v124 - 8);
        uint64_t v239 = v124;
        v218 = *(unsigned int (**)(char *, uint64_t))(v125 + 48);
        v126 = __dstd;
        v207 = v121;
        if (v218(v123, 1))
        {
          uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v213, v123, *(void *)(*(void *)(v127 - 8) + 64));
          uint64_t v128 = v259;
        }
        else
        {
          char *v213 = *(void *)v123;
          v213[1] = *((void *)v123 + 1);
          uint64_t v142 = *(int *)(v239 + 24);
          v143 = &v123[v142];
          uint64_t v128 = v259;
          v121((char *)v213 + v142, v143, v259);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))((char *)v213, 0, 1, v239);
        }
        v141 = v253;
        uint64_t v144 = v223[6];
        v145 = &v118[v144];
        v146 = &v115[v144];
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v218)(v146, 1, v239))
        {
          uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
        }
        else
        {
          char *v145 = *(void *)v146;
          v145[1] = *((void *)v146 + 1);
          v207((char *)v145 + *(int *)(v239 + 24), &v146[*(int *)(v239 + 24)], v128);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))((char *)v145, 0, 1, v239);
        }
        v130 = v257;
      }
      else
      {
        *(void *)uint64_t v118 = *(void *)v115;
        uint64_t v137 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        v138 = &v118[v137];
        v139 = &v115[v137];
        v140 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
        swift_bridgeObjectRetain();
        v140(v138, v139, v259);
        uint64_t v128 = v259;
        v130 = v257;
        v126 = __dstd;
        v141 = v253;
      }
      swift_storeEnumTagMultiPayload();
      ((void (*)(char *, void, uint64_t, void *))v126[7])(v118, 0, 1, v141);
      goto LABEL_76;
    }
LABEL_63:
    uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
    memcpy(v118, v115, *(void *)(*(void *)(v129 - 8) + 64));
    v130 = v257;
    uint64_t v128 = v259;
    uint64_t v120 = v112;
    goto LABEL_76;
  }
  if (v119)
  {
    sub_1DCD2800C((uint64_t)v118, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    goto LABEL_63;
  }
  v130 = v257;
  BOOL v131 = v257 == v3;
  uint64_t v128 = v259;
  uint64_t v120 = v112;
  if (!v131)
  {
    sub_1DCD2800C((uint64_t)v118, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v132 = *(void (**)(void *, char *, uint64_t))(v254 + 16);
      v132(v118, v115, v259);
      __dste = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v133 = __dste[5];
      v233 = &v118[v133];
      v134 = &v115[v133];
      uint64_t v135 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      v224 = *(void **)(v135 - 8);
      v240 = (unsigned int (*)(char *, uint64_t, uint64_t))v224[6];
      if (v240(v134, 1, v135))
      {
        uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v233, v134, *(void *)(*(void *)(v136 - 8) + 64));
        uint64_t v128 = v259;
      }
      else
      {
        char *v233 = *(void *)v134;
        v233[1] = *((void *)v134 + 1);
        uint64_t v156 = *(int *)(v135 + 24);
        v157 = &v134[v156];
        uint64_t v128 = v259;
        v132((void *)((char *)v233 + v156), v157, v259);
        ((void (*)(char *, void, uint64_t, uint64_t))v224[7])((char *)v233, 0, 1, v135);
      }
      uint64_t v158 = __dste[6];
      v159 = &v118[v158];
      v160 = &v115[v158];
      if (v240(v160, 1, v135))
      {
        uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v159, v160, *(void *)(*(void *)(v161 - 8) + 64));
      }
      else
      {
        char *v159 = *(void *)v160;
        v159[1] = *((void *)v160 + 1);
        v132((void *)((char *)v159 + *(int *)(v135 + 24)), &v160[*(int *)(v135 + 24)], v128);
        ((void (*)(char *, void, uint64_t, uint64_t))v224[7])((char *)v159, 0, 1, v135);
      }
      v130 = v257;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *(void *)uint64_t v118 = *(void *)v115;
      uint64_t v148 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      v149 = &v118[v148];
      v150 = &v115[v148];
      v255 = *(void (**)(char *, char *, uint64_t))(v254 + 16);
      swift_bridgeObjectRetain();
      v255(v149, v150, v259);
      swift_storeEnumTagMultiPayload();
      v130 = v257;
    }
  }
LABEL_76:
  uint64_t v151 = *(int *)(v120 + 28);
  v152 = &v110[v151];
  v153 = &v111[v151];
  uint64_t v154 = *(void *)v153;
  v152[8] = v153[8];
  *(void *)v152 = v154;
  v258(&v110[*(int *)(v120 + 32)], &v111[*(int *)(v120 + 32)], v128);
  return v130;
}

_OWORD *sub_1DCD2C248(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v5 = a1;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (char *)v5 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1DD047BF8();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(v7 + 28);
  uint64_t v14 = (void *)((char *)v5 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v95 = v12;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v89 = v17;
    uint64_t v91 = a3;
    uint64_t v19 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
      memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v85 = v20;
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *uint64_t v14 = *v15;
      uint64_t v93 = v11;
      unint64_t v84 = (void *)v19;
      if (EnumCaseMultiPayload == 1)
      {
        v14[1] = v15[1];
        *((unsigned char *)v14 + 16) = *((unsigned char *)v15 + 16);
        uint64_t v82 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
        uint64_t v23 = v82[6];
        uint64_t v24 = (void *)((char *)v14 + v23);
        uint64_t v25 = (void *)((char *)v15 + v23);
        uint64_t v26 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
        uint64_t v27 = *(void *)(v26 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
          memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          int v35 = swift_getEnumCaseMultiPayload();
          *uint64_t v24 = *v25;
          if (v35 == 1) {
            uint64_t v36 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
          }
          else {
            uint64_t v36 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
          }
          v95((char *)v24 + *(int *)(v36 + 20), (char *)v25 + *(int *)(v36 + 20), v93);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
      }
      else
      {
        v14[1] = v15[1];
        uint64_t v82 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
        uint64_t v29 = v82[6];
        uint64_t v30 = (void *)((char *)v14 + v29);
        uint64_t v31 = (void *)((char *)v15 + v29);
        uint64_t v32 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
        uint64_t v33 = *(void *)(v32 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
          memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v87 = v5;
            v95((char *)v30, (char *)v31, v93);
            uint64_t v37 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
            uint64_t v38 = *(int *)(v37 + 20);
            uint64_t v79 = v37;
            __dst = (_OWORD *)((char *)v30 + v38);
            uint64_t v39 = (_OWORD *)((char *)v31 + v38);
            uint64_t v40 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
            uint64_t v77 = *(void *)(v40 - 8);
            uint64_t v81 = v40;
            uint64_t v78 = *(unsigned int (**)(_OWORD *, uint64_t))(v77 + 48);
            if (v78(v39, 1))
            {
              uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(__dst, v39, *(void *)(*(void *)(v41 - 8) + 64));
            }
            else
            {
              _OWORD *__dst = *v39;
              v95((char *)__dst + *(int *)(v81 + 24), (char *)v39 + *(int *)(v81 + 24), v93);
              (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v77 + 56))(__dst, 0, 1, v81);
            }
            uint64_t v43 = *(int *)(v79 + 24);
            uint64_t v44 = (_OWORD *)((char *)v30 + v43);
            uint64_t v45 = (_OWORD *)((char *)v31 + v43);
            if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v78)(v45, 1, v81))
            {
              uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
            }
            else
            {
              *uint64_t v44 = *v45;
              v95((char *)v44 + *(int *)(v81 + 24), (char *)v45 + *(int *)(v81 + 24), v93);
              (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v77 + 56))(v44, 0, 1, v81);
            }
            uint64_t v5 = v87;
          }
          else
          {
            *uint64_t v30 = *v31;
            uint64_t v42 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
            v95((char *)v30 + *(int *)(v42 + 20), (char *)v31 + *(int *)(v42 + 20), v93);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
      }
      uint64_t v47 = v82[7];
      uint64_t v48 = (char *)v14 + v47;
      uint64_t v49 = (char *)v15 + v47;
      *(void *)uint64_t v48 = *(void *)v49;
      v48[8] = v49[8];
      uint64_t v11 = v93;
      uint64_t v12 = v95;
      v95((char *)v14 + v82[8], (char *)v15 + v82[8], v93);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, void *))(v85 + 56))(v14, 0, 1, v84);
    }
    a3 = v91;
    *((unsigned char *)v14 + *(int *)(v16 + 20)) = *((unsigned char *)v15 + *(int *)(v16 + 20));
    v12((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v14, 0, 1, v16);
  }
  uint64_t v50 = a3[5];
  uint64_t v51 = (char *)v5 + v50;
  uint64_t v52 = (char *)a2 + v50;
  *(_OWORD *)((char *)v5 + v50) = *(_OWORD *)((char *)a2 + v50);
  uint64_t v53 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  uint64_t v54 = v53[6];
  uint64_t v55 = &v51[v54];
  uint64_t v56 = &v52[v54];
  uint64_t v57 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  uint64_t v58 = *(void *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v88 = v5;
      v95(v55, v56, v11);
      uint64_t v60 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v61 = *(int *)(v60 + 20);
      uint64_t v90 = v60;
      uint64_t v92 = &v55[v61];
      uint64_t v94 = v11;
      uint64_t v62 = &v56[v61];
      uint64_t v63 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      uint64_t v64 = *(void *)(v63 - 8);
      uint64_t v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
      uint64_t v83 = v64;
      if (v86(v62, 1, v63))
      {
        uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v92, v62, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v92 = *(_OWORD *)v62;
        v95(&v92[*(int *)(v63 + 24)], &v62[*(int *)(v63 + 24)], v94);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v92, 0, 1, v63);
      }
      uint64_t v67 = v63;
      uint64_t v68 = *(int *)(v90 + 24);
      uint64_t v69 = &v55[v68];
      int v70 = &v56[v68];
      if (v86(v70, 1, v67))
      {
        uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
        uint64_t v5 = v88;
        uint64_t v11 = v94;
      }
      else
      {
        *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
        v95(&v69[*(int *)(v67 + 24)], &v70[*(int *)(v67 + 24)], v94);
        uint64_t v72 = v69;
        uint64_t v11 = v94;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v72, 0, 1, v67);
        uint64_t v5 = v88;
      }
    }
    else
    {
      *(void *)uint64_t v55 = *(void *)v56;
      uint64_t v66 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
      v95(&v55[*(int *)(v66 + 20)], &v56[*(int *)(v66 + 20)], v11);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  uint64_t v73 = v53[7];
  uint64_t v74 = &v51[v73];
  uint64_t v75 = &v52[v73];
  *(void *)uint64_t v74 = *(void *)v75;
  v74[8] = v75[8];
  v95(&v51[v53[8]], &v52[v53[8]], v11);
  return v5;
}

void *sub_1DCD2CCE4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1DD047BF8();
  uint64_t v12 = *(void *)(v11 - 8);
  v230 = *(void (**)(char *, char *, uint64_t))(v12 + 40);
  v230(v9, v10, v11);
  uint64_t v13 = *(int *)(v7 + 28);
  uint64_t v14 = (uint64_t)a1 + v13;
  v231 = a2;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18((uint64_t)v15, 1, v16);
  uint64_t v234 = v11;
  uint64_t v227 = v12;
  if (!v19)
  {
    if (v20)
    {
      sub_1DCD2800C(v14, type metadata accessor for Argos_Protos_MLModel_FeatureType);
      goto LABEL_7;
    }
    uint64_t v28 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    uint64_t v29 = *(void **)(v28 - 8);
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v29[6];
    int v31 = v30(v14, 1, v28);
    int v32 = v30((uint64_t)v15, 1, v28);
    if (v31)
    {
      if (!v32)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *(void *)uint64_t v14 = *(void *)v15;
        if (EnumCaseMultiPayload == 1)
        {
          *(void *)(v14 + 8) = *((void *)v15 + 1);
          *(unsigned char *)(v14 + 16) = v15[16];
          v221 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
          uint64_t v34 = v221[6];
          int v35 = (void *)(v14 + v34);
          uint64_t v36 = &v15[v34];
          uint64_t v37 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
          uint64_t v38 = *(void *)(v37 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
          {
            uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
            memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
            uint64_t v40 = v221;
            uint64_t v41 = *(void (**)(uint64_t, char *, uint64_t))(v227 + 32);
          }
          else
          {
            int v80 = swift_getEnumCaseMultiPayload();
            v216 = (char *)v35;
            *int v35 = *(void *)v36;
            uint64_t v81 = (void **)(v227 + 32);
            if (v80 == 1) {
              uint64_t v82 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
            }
            else {
              uint64_t v82 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
            }
            v203 = (void (*)(uint64_t, char *, uint64_t))*v81;
            ((void (*)(char *, char *, uint64_t))*v81)(&v216[*(int *)(v82 + 20)], &v36[*(int *)(v82 + 20)], v234);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v216, 0, 1, v37);
            uint64_t v40 = v221;
            uint64_t v41 = v203;
          }
        }
        else
        {
          __dstb = v29;
          *(void *)(v14 + 8) = *((void *)v15 + 1);
          uint64_t v40 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
          uint64_t v65 = v40[6];
          uint64_t v215 = (void *)(v14 + v65);
          uint64_t v66 = &v15[v65];
          uint64_t v67 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
          uint64_t v68 = *(void *)(v67 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
          {
            uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
            memcpy(v215, v66, *(void *)(*(void *)(v69 - 8) + 64));
            uint64_t v41 = *(void (**)(uint64_t, char *, uint64_t))(v227 + 32);
            uint64_t v29 = __dstb;
          }
          else
          {
            uint64_t v196 = v68;
            uint64_t v198 = v67;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v204 = *(void (**)(uint64_t, char *, uint64_t))(v227 + 32);
              v204((uint64_t)v215, v66, v234);
              uint64_t v190 = v66;
              v193 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
              uint64_t v90 = v193[5];
              v185 = (_OWORD *)((char *)v215 + v90);
              uint64_t v91 = &v66[v90];
              uint64_t v92 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
              uint64_t v93 = *(void *)(v92 - 8);
              v188 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
              if (v188(v91, 1, v92))
              {
                uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                memcpy(v185, v91, *(void *)(*(void *)(v94 - 8) + 64));
              }
              else
              {
                _OWORD *v185 = *(_OWORD *)v91;
                v204((uint64_t)v185 + *(int *)(v92 + 24), &v91[*(int *)(v92 + 24)], v234);
                (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v93 + 56))(v185, 0, 1, v92);
              }
              uint64_t v163 = v193[6];
              v164 = (_OWORD *)((char *)v215 + v163);
              uint64_t v165 = &v190[v163];
              if (v188(&v190[v163], 1, v92))
              {
                uint64_t v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
              }
              else
              {
                _OWORD *v164 = *(_OWORD *)v165;
                v204((uint64_t)v164 + *(int *)(v92 + 24), &v165[*(int *)(v92 + 24)], v234);
                (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v93 + 56))(v164, 0, 1, v92);
              }
              uint64_t v101 = v215;
            }
            else
            {
              uint64_t v99 = *(void *)v66;
              v100 = v66;
              uint64_t v101 = v215;
              *uint64_t v215 = v99;
              uint64_t v102 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
              v204 = *(void (**)(uint64_t, char *, uint64_t))(v227 + 32);
              v204((uint64_t)v215 + *(int *)(v102 + 20), &v100[*(int *)(v102 + 20)], v234);
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v196 + 56))(v101, 0, 1, v198);
            uint64_t v41 = v204;
            uint64_t v29 = __dstb;
          }
        }
        uint64_t v173 = v40[7];
        uint64_t v174 = v14 + v173;
        v175 = &v15[v173];
        *(void *)uint64_t v174 = *(void *)v175;
        *(unsigned char *)(v174 + 8) = v175[8];
        v41(v14 + v40[8], &v15[v40[8]], v234);
        uint64_t v11 = v234;
        swift_storeEnumTagMultiPayload();
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v29[7])(v14, 0, 1, v28);
        goto LABEL_97;
      }
    }
    else
    {
      if (!v32)
      {
        uint64_t v26 = v231;
        if (a1 != v231)
        {
          sub_1DCD2800C(v14, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
          int v57 = swift_getEnumCaseMultiPayload();
          *(void *)uint64_t v14 = *(void *)v15;
          if (v57 == 1)
          {
            *(void *)(v14 + 8) = *((void *)v15 + 1);
            *(unsigned char *)(v14 + 16) = v15[16];
            v223 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
            uint64_t v58 = v223[6];
            uint64_t v59 = (void *)(v14 + v58);
            uint64_t v60 = &v15[v58];
            uint64_t v61 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
            uint64_t v62 = *(void *)(v61 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
            {
              uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
              memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
              uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v227 + 32);
            }
            else
            {
              int v153 = swift_getEnumCaseMultiPayload();
              *uint64_t v59 = *(void *)v60;
              uint64_t v154 = (void (**)(char *, char *, uint64_t))(v227 + 32);
              uint64_t v219 = v59;
              if (v153 == 1) {
                uint64_t v167 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
              }
              else {
                uint64_t v167 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0)
              }
                              + 20);
              uint64_t v168 = (char *)v59 + v167;
              uint64_t v64 = *v154;
              (*v154)(v168, &v60[v167], v234);
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v219, 0, 1, v61);
              uint64_t v26 = v231;
            }
            uint64_t v169 = v223[7];
            uint64_t v170 = v14 + v169;
            uint64_t v171 = &v15[v169];
            *(void *)uint64_t v170 = *(void *)v171;
            *(unsigned char *)(v170 + 8) = v171[8];
            uint64_t v11 = v234;
            v64((char *)(v14 + v223[8]), &v15[v223[8]], v234);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            *(void *)(v14 + 8) = *((void *)v15 + 1);
            v224 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
            uint64_t v83 = v224[6];
            unint64_t v84 = (void *)(v14 + v83);
            uint64_t v85 = &v15[v83];
            uint64_t v86 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
            uint64_t v87 = *(void *)(v86 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
            {
              uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
              memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
              uint64_t v89 = *(void (**)(uint64_t, char *, uint64_t))(v227 + 32);
            }
            else
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v220 = *(void (**)(uint64_t, char *, uint64_t))(v227 + 32);
                v220((uint64_t)v84, v85, v234);
                uint64_t v155 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
                uint64_t v156 = *(int *)(v155 + 20);
                __dste = v84;
                uint64_t v201 = v155;
                v207 = (_OWORD *)((char *)v84 + v156);
                v157 = &v85[v156];
                uint64_t v158 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
                uint64_t v159 = *(void *)(v158 - 8);
                uint64_t v191 = v157;
                uint64_t v194 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48);
                v160 = v157;
                uint64_t v161 = v158;
                uint64_t v186 = v159;
                if (v194(v160, 1, v158))
                {
                  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                  memcpy(v207, v191, *(void *)(*(void *)(v162 - 8) + 64));
                }
                else
                {
                  _OWORD *v207 = *(_OWORD *)v191;
                  v220((uint64_t)v207 + *(int *)(v161 + 24), &v191[*(int *)(v161 + 24)], v234);
                  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v159 + 56))(v207, 0, 1, v161);
                }
                uint64_t v176 = *(int *)(v201 + 24);
                uint64_t v177 = (_OWORD *)((char *)__dste + v176);
                uint64_t v178 = &v85[v176];
                if (v194(v178, 1, v161))
                {
                  uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                  memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
                }
                else
                {
                  *uint64_t v177 = *(_OWORD *)v178;
                  v220((uint64_t)v177 + *(int *)(v161 + 24), &v178[*(int *)(v161 + 24)], v234);
                  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v186 + 56))(v177, 0, 1, v161);
                }
                uint64_t v26 = v231;
                unint64_t v84 = __dste;
              }
              else
              {
                *unint64_t v84 = *(void *)v85;
                uint64_t v172 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
                v220 = *(void (**)(uint64_t, char *, uint64_t))(v227 + 32);
                v220((uint64_t)v84 + *(int *)(v172 + 20), &v85[*(int *)(v172 + 20)], v234);
              }
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
              uint64_t v89 = v220;
            }
            uint64_t v180 = v224[7];
            uint64_t v181 = v14 + v180;
            v182 = &v15[v180];
            *(void *)uint64_t v181 = *(void *)v182;
            *(unsigned char *)(v181 + 8) = v182[8];
            uint64_t v11 = v234;
            v89(v14 + v224[8], &v15[v224[8]], v234);
            swift_storeEnumTagMultiPayload();
          }
        }
        goto LABEL_98;
      }
      sub_1DCD2800C(v14, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    }
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
    memcpy((void *)v14, v15, *(void *)(*(void *)(v49 - 8) + 64));
LABEL_97:
    uint64_t v26 = v231;
LABEL_98:
    *(unsigned char *)(v14 + *(int *)(v16 + 20)) = v15[*(int *)(v16 + 20)];
    v230((char *)(v14 + *(int *)(v16 + 24)), &v15[*(int *)(v16 + 24)], v11);
    goto LABEL_8;
  }
  if (v20)
  {
LABEL_7:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
    memcpy((void *)v14, v15, *(void *)(*(void *)(v25 - 8) + 64));
    uint64_t v26 = a2;
LABEL_8:
    uint64_t v27 = a3;
    goto LABEL_55;
  }
  uint64_t v21 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  uint64_t v22 = *(unsigned int (***)(void, uint64_t, uint64_t))(v21 - 8);
  if (!((unsigned int (**)(char *, uint64_t, uint64_t))v22)[6](v15, 1, v21))
  {
    int v42 = swift_getEnumCaseMultiPayload();
    *(void *)uint64_t v14 = *(void *)v15;
    v222 = (void (**)(uint64_t, void, uint64_t, uint64_t))v22;
    if (v42 == 1)
    {
      *(void *)(v14 + 8) = *((void *)v15 + 1);
      *(unsigned char *)(v14 + 16) = v15[16];
      uint64_t v43 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v44 = *(int *)(v43 + 24);
      __dst = (void *)(v14 + v44);
      uint64_t v214 = (int *)v43;
      uint64_t v45 = &v15[v44];
      uint64_t v46 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      uint64_t v47 = *(void *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
        memcpy(__dst, v45, *(void *)(*(void *)(v48 - 8) + 64));
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v227 + 32);
      }
      else
      {
        int v70 = swift_getEnumCaseMultiPayload();
        void *__dst = *(void *)v45;
        if (v70 == 1) {
          uint64_t v77 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
        }
        else {
          uint64_t v77 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
        }
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v227 + 32);
        v24((char *)__dst + *(int *)(v77 + 20), &v45[*(int *)(v77 + 20)], v234);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
      }
    }
    else
    {
      v202 = (void *)v21;
      *(void *)(v14 + 8) = *((void *)v15 + 1);
      uint64_t v50 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v51 = *(int *)(v50 + 24);
      __dsta = (void *)(v14 + v51);
      uint64_t v214 = (int *)v50;
      uint64_t v52 = &v15[v51];
      uint64_t v53 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      uint64_t v54 = *(void *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
        memcpy(__dsta, v52, *(void *)(*(void *)(v55 - 8) + 64));
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        uint64_t v56 = v214;
        uint64_t v21 = (uint64_t)v202;
LABEL_53:
        uint64_t v104 = v56[7];
        uint64_t v105 = v14 + v104;
        uint64_t v106 = &v15[v104];
        *(void *)uint64_t v105 = *(void *)v106;
        *(unsigned char *)(v105 + 8) = v106[8];
        v24((char *)(v14 + v56[8]), &v15[v56[8]], v234);
        uint64_t v11 = v234;
        swift_storeEnumTagMultiPayload();
        v222[7](v14, 0, 1, v21);
        goto LABEL_54;
      }
      uint64_t v195 = v53;
      uint64_t v197 = v54;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v24((char *)__dsta, v52, v234);
        uint64_t v71 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        uint64_t v72 = *(int *)(v71 + 20);
        v189 = (int *)v71;
        uint64_t v192 = (_OWORD *)((char *)__dsta + v72);
        uint64_t v187 = v52;
        uint64_t v73 = &v52[v72];
        uint64_t v74 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        uint64_t v75 = *(void *)(v74 - 8);
        uint64_t v184 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
        uint64_t v183 = v75;
        if (v184(v73, 1, v74))
        {
          uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v192, v73, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          *uint64_t v192 = *(_OWORD *)v73;
          v24((char *)v192 + *(int *)(v74 + 24), &v73[*(int *)(v74 + 24)], v234);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v75 + 56))(v192, 0, 1, v74);
        }
        uint64_t v95 = v189[6];
        uint64_t v96 = (_OWORD *)((char *)__dsta + v95);
        uint64_t v97 = &v187[v95];
        if (v184(&v187[v95], 1, v74))
        {
          uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          *uint64_t v96 = *(_OWORD *)v97;
          v24((char *)v96 + *(int *)(v74 + 24), &v97[*(int *)(v74 + 24)], v234);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v183 + 56))(v96, 0, 1, v74);
        }
        uint64_t v79 = __dsta;
      }
      else
      {
        void *__dsta = *(void *)v52;
        uint64_t v78 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v24((char *)__dsta + *(int *)(v78 + 20), &v52[*(int *)(v78 + 20)], v234);
        uint64_t v79 = __dsta;
      }
      uint64_t v21 = (uint64_t)v202;
      uint64_t v103 = v79;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v197 + 56))(v103, 0, 1, v195);
    }
    uint64_t v56 = v214;
    goto LABEL_53;
  }
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  memcpy((void *)v14, v15, *(void *)(*(void *)(v23 - 8) + 64));
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
LABEL_54:
  uint64_t v27 = a3;
  *(unsigned char *)(v14 + *(int *)(v16 + 20)) = v15[*(int *)(v16 + 20)];
  v24((char *)(v14 + *(int *)(v16 + 24)), &v15[*(int *)(v16 + 24)], v11);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  uint64_t v26 = v231;
LABEL_55:
  uint64_t v107 = *(int *)(v27 + 20);
  v229 = a1;
  uint64_t v108 = (char *)a1 + v107;
  uint64_t v109 = (char *)v26 + v107;
  *(_OWORD *)((char *)a1 + v107) = *(_OWORD *)((char *)v26 + v107);
  uint64_t v110 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  uint64_t v111 = v110[6];
  uint64_t v112 = &v108[v111];
  uint64_t v113 = &v109[v111];
  uint64_t v114 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  uint64_t v115 = *(void *)(v114 - 8);
  uint64_t v116 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
  int v117 = v116(v112, 1, v114);
  int v118 = v116(v113, 1, v114);
  if (v117)
  {
    if (!v118)
    {
      uint64_t v119 = v234;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v199 = *(void (**)(char *, char *, uint64_t))(v227 + 32);
        v199(v112, v113, v234);
        uint64_t v120 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        uint64_t v121 = *(int *)(v120 + 20);
        v217 = (int *)v120;
        v225 = &v112[v121];
        uint64_t v122 = &v113[v121];
        uint64_t v123 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        uint64_t v205 = *(void **)(v123 - 8);
        uint64_t v232 = v123;
        __dstc = (unsigned int (*)(char *, uint64_t))v205[6];
        if (__dstc(v122, 1))
        {
          uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v225, v122, *(void *)(*(void *)(v124 - 8) + 64));
          uint64_t v125 = v205;
        }
        else
        {
          *(_OWORD *)v225 = *(_OWORD *)v122;
          v199(&v225[*(int *)(v232 + 24)], &v122[*(int *)(v232 + 24)], v234);
          uint64_t v125 = v205;
          ((void (*)(char *, void, uint64_t, uint64_t))v205[7])(v225, 0, 1, v232);
        }
        uint64_t v136 = v217[6];
        uint64_t v137 = &v112[v136];
        v138 = &v113[v136];
        if (((unsigned int (*)(char *, uint64_t, uint64_t))__dstc)(v138, 1, v232))
        {
          uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
          uint64_t v127 = v229;
          uint64_t v119 = v234;
LABEL_74:
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
          goto LABEL_75;
        }
        *(_OWORD *)uint64_t v137 = *(_OWORD *)v138;
        v199(&v137[*(int *)(v232 + 24)], &v138[*(int *)(v232 + 24)], v234);
        v141 = v137;
        uint64_t v119 = v234;
        ((void (*)(char *, void, uint64_t, uint64_t))v125[7])(v141, 0, 1, v232);
      }
      else
      {
        *(void *)uint64_t v112 = *(void *)v113;
        uint64_t v135 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
        (*(void (**)(char *, char *, uint64_t))(v227 + 32))(&v112[*(int *)(v135 + 20)], &v113[*(int *)(v135 + 20)], v234);
      }
      uint64_t v127 = v229;
      goto LABEL_74;
    }
    goto LABEL_62;
  }
  if (v118)
  {
    sub_1DCD2800C((uint64_t)v112, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
LABEL_62:
    uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
    memcpy(v112, v113, *(void *)(*(void *)(v126 - 8) + 64));
    uint64_t v127 = v229;
    uint64_t v119 = v234;
    goto LABEL_75;
  }
  uint64_t v127 = v229;
  uint64_t v119 = v234;
  if (v229 != v231)
  {
    sub_1DCD2800C((uint64_t)v112, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v206 = *(void (**)(char *, char *, uint64_t))(v227 + 32);
      v206(v112, v113, v234);
      uint64_t v128 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v129 = *(int *)(v128 + 20);
      v218 = (int *)v128;
      v226 = &v112[v129];
      v130 = &v113[v129];
      uint64_t v131 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      uint64_t v132 = *(void *)(v131 - 8);
      uint64_t v233 = v131;
      __dstd = *(unsigned int (**)(char *, uint64_t))(v132 + 48);
      uint64_t v200 = v132;
      if (__dstd(v130, 1))
      {
        uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v226, v130, *(void *)(*(void *)(v133 - 8) + 64));
        uint64_t v134 = v233;
        uint64_t v119 = v234;
      }
      else
      {
        *(_OWORD *)v226 = *(_OWORD *)v130;
        uint64_t v146 = *(int *)(v233 + 24);
        uint64_t v147 = &v130[v146];
        uint64_t v119 = v234;
        v206(&v226[v146], v147, v234);
        uint64_t v148 = *(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56);
        uint64_t v134 = v233;
        v148(v226, 0, 1, v233);
      }
      uint64_t v149 = v218[6];
      v150 = &v112[v149];
      uint64_t v151 = &v113[v149];
      if (((unsigned int (*)(char *, uint64_t, uint64_t))__dstd)(v151, 1, v134))
      {
        uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v150, v151, *(void *)(*(void *)(v152 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v150 = *(_OWORD *)v151;
        v206(&v150[*(int *)(v134 + 24)], &v151[*(int *)(v134 + 24)], v119);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v200 + 56))(v150, 0, 1, v134);
      }
      uint64_t v127 = v229;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *(void *)uint64_t v112 = *(void *)v113;
      uint64_t v140 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
      (*(void (**)(char *, char *, uint64_t))(v227 + 32))(&v112[*(int *)(v140 + 20)], &v113[*(int *)(v140 + 20)], v234);
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_75:
  uint64_t v142 = v110[7];
  v143 = &v108[v142];
  uint64_t v144 = &v109[v142];
  *(void *)v143 = *(void *)v144;
  v143[8] = v144[8];
  v230(&v108[v110[8]], &v109[v110[8]], v119);
  return v127;
}

uint64_t sub_1DCD2E794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD2E7A8);
}

uint64_t sub_1DCD2E7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DCD2E8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD2E8B4);
}

uint64_t sub_1DCD2E8B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1DCD2E9B8()
{
  uint64_t result = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MLModelAssetRole(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MLModelAssetRole(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD2EBE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

uint64_t sub_1DCD2EC10(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1DCD2EC18(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MLModelAssetRole()
{
  return &type metadata for MLModelAssetRole;
}

unint64_t sub_1DCD2EC34()
{
  unint64_t result = qword_1EBE84AF8;
  if (!qword_1EBE84AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84AF8);
  }
  return result;
}

uint64_t sub_1DCD2EC88@<X0>(long long *a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v61 = a4;
  uint64_t v50 = a3;
  uint64_t v63 = a2;
  uint64_t v5 = sub_1DD048068();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v64 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = a1[5];
  long long v8 = a1[7];
  long long v93 = a1[6];
  long long v94 = v8;
  long long v9 = a1[7];
  v95[0] = a1[8];
  *(_OWORD *)((char *)v95 + 13) = *(long long *)((char *)a1 + 141);
  long long v10 = a1[1];
  long long v11 = a1[3];
  long long v89 = a1[2];
  long long v90 = v11;
  long long v12 = a1[3];
  long long v13 = a1[5];
  long long v91 = a1[4];
  long long v92 = v13;
  long long v14 = a1[1];
  long long v87 = *a1;
  long long v88 = v14;
  long long v78 = v87;
  long long v79 = v10;
  long long v82 = v91;
  long long v83 = v7;
  uint64_t v62 = v89;
  uint64_t v51 = *((void *)&v14 + 1);
  uint64_t v65 = *((void *)&v90 + 1);
  uint64_t v52 = v90;
  uint64_t v15 = *((void *)&v91 + 1);
  uint64_t v16 = *((void *)&v92 + 1);
  uint64_t v17 = v92;
  long long v18 = v93;
  uint64_t v53 = v91;
  uint64_t v54 = *((void *)&v95[0] + 1);
  uint64_t v19 = *(void *)&v95[1];
  long long v80 = v89;
  long long v81 = v12;
  long long v20 = a1[8];
  *(_OWORD *)((char *)v86 + 13) = *(long long *)((char *)a1 + 141);
  long long v85 = v9;
  v86[0] = v20;
  long long v84 = v93;
  uint64_t v21 = *v63;
  int v57 = v87;
  uint64_t v63 = (uint64_t *)sub_1DCD9C35C(v87);
  uint64_t v23 = v22;
  sub_1DCD32CC8((uint64_t)&v87);
  uint64_t v60 = v15;
  uint64_t v24 = v62;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v59 = v17;
  sub_1DCD32D4C(v17, v16);
  uint64_t v58 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v17) = sub_1DCD7C560((uint64_t)v63, v23, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v25 = *((void *)&v87 + 1);
    uint64_t v26 = v88;
    char v27 = BYTE8(v89);
    int v28 = DWORD2(v94);
    char v29 = BYTE14(v94);
    int v48 = HIBYTE(v94);
    int v49 = BYTE13(v94);
    int v46 = BYTE1(v95[0]);
    int v47 = LOBYTE(v95[0]);
    int v30 = DWORD2(v95[1]);
    LODWORD(v63) = BYTE12(v95[1]);
    BYTE12(v85) = 0;
    uint64_t v31 = v94;
    sub_1DCDB40EC(v64);
    LOBYTE(v69) = v57;
    *((void *)&v69 + 1) = v25;
    *(void *)&long long v70 = v26;
    *((void *)&v70 + 1) = v51;
    *(void *)&long long v71 = v24;
    BYTE8(v71) = v27;
    *(void *)&long long v72 = v52;
    *((void *)&v72 + 1) = v65;
    uint64_t v32 = v59;
    *(void *)&long long v73 = v53;
    *((void *)&v73 + 1) = v60;
    *(void *)&long long v74 = v59;
    *((void *)&v74 + 1) = v16;
    long long v75 = v18;
    *(void *)&long long v76 = v31;
    DWORD2(v76) = v28;
    BYTE12(v76) = 0;
    BYTE13(v76) = v49;
    BYTE14(v76) = v29;
    HIBYTE(v76) = v48;
    LOBYTE(v77[0]) = v47;
    BYTE1(v77[0]) = v46;
    *((void *)&v77[0] + 1) = v54;
    *(void *)&v77[1] = v58;
    DWORD2(v77[1]) = v30;
    BYTE12(v77[1]) = (_BYTE)v63;
    sub_1DCD32CC8((uint64_t)&v69);
    swift_bridgeObjectRelease();
    sub_1DCD32D90(v32, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCD32CC8((uint64_t)&v69);
    uint64_t v33 = sub_1DD048048();
    os_log_type_t v34 = sub_1DD048848();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v68 = v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v37 = v50;
      swift_beginAccess();
      long long v38 = v37[1];
      long long v66 = *v37;
      long long v67 = v38;
      uint64_t v39 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v66 = sub_1DCED7FA0(v39, v40, &v68);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      uint64_t v41 = sub_1DCD9C35C(v57);
      *(void *)&long long v66 = sub_1DCED7FA0(v41, v42, &v68);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD32DD4((uint64_t)&v69);
      sub_1DCD32DD4((uint64_t)&v69);
      _os_log_impl(&dword_1DCCF9000, v33, v34, "%s unselects %s because this region contains a known person and satisfies person_image_level_supression_rule.", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v36, -1, -1);
      MEMORY[0x1E01B07E0](v35, -1, -1);
    }
    else
    {
      sub_1DCD32DD4((uint64_t)&v69);
      sub_1DCD32DD4((uint64_t)&v69);
    }

    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v64, v56);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1DCD32D90(v59, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v43 = v61;
  swift_beginAccess();
  long long v75 = v84;
  long long v76 = v85;
  v77[0] = v86[0];
  *(_OWORD *)((char *)v77 + 13) = *(_OWORD *)((char *)v86 + 13);
  long long v71 = v80;
  long long v72 = v81;
  long long v73 = v82;
  long long v74 = v83;
  long long v69 = v78;
  long long v70 = v79;
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v69);
  return sub_1DCD32C3C((uint64_t)&v69, v43);
}

unint64_t sub_1DCD2F1F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v6 - 8);
  long long v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  long long v12 = (char *)&v48 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v50 = (uint64_t)&v48 - v15;
  uint64_t v55 = *(void *)(a1 + 16);
  if (!v55) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v48 = a1;
  unint64_t v49 = v16;
  uint64_t v54 = a1 + v16;
  uint64_t v58 = *(void *)(v14 + 72);
  uint64_t v52 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v53 = (void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  unint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v61 = a2;
  uint64_t v62 = v12;
  uint64_t v51 = v8;
  do
  {
    unint64_t v59 = v18;
    uint64_t v60 = v17;
    sub_1DCD32EB8(v54 + v58 * v17, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v19 = *(void *)(*((void *)v12 + 6) + 16);
    if (v19)
    {
      long long v20 = (_OWORD *)swift_bridgeObjectRetain();
      long long v21 = v20[9];
      long long v71 = v20[8];
      long long v72 = v21;
      v73[0] = v20[10];
      *(_OWORD *)((char *)v73 + 13) = *(_OWORD *)((char *)v20 + 173);
      long long v22 = v20[5];
      long long v67 = v20[4];
      long long v68 = v22;
      long long v23 = v20[7];
      long long v69 = v20[6];
      long long v70 = v23;
      long long v24 = v20[2];
      long long v25 = v20[3];
      long long v76 = v20;
      uint64_t v26 = v19 - 1;
      uint64_t v27 = 12;
      int v28 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        v66[2] = v24;
        v66[3] = v25;
        v65[6] = v71;
        v65[7] = v72;
        v66[0] = v73[0];
        *(_OWORD *)((char *)v66 + 13) = *(_OWORD *)((char *)v73 + 13);
        v65[2] = v67;
        v65[3] = v68;
        v65[4] = v69;
        v65[5] = v70;
        v65[0] = v24;
        v65[1] = v25;
        uint64_t v29 = v3;
        sub_1DCD2EC88(v65, a2, (long long *)v12, (uint64_t)v63);
        sub_1DCD32C3C((uint64_t)v63, (uint64_t)v74);
        sub_1DCD32C3C((uint64_t)v74, (uint64_t)v75);
        if (sub_1DCD32CA4((uint64_t)v75) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v28 = sub_1DCE9D680(0, v28[2] + 1, 1, v28);
          }
          unint64_t v31 = v28[2];
          unint64_t v30 = v28[3];
          if (v31 >= v30 >> 1) {
            int v28 = sub_1DCE9D680((void *)(v30 > 1), v31 + 1, 1, v28);
          }
          sub_1DCD32C3C((uint64_t)v74, (uint64_t)v63);
          v28[2] = v31 + 1;
          uint64_t v32 = &v28[20 * v31];
          long long v33 = v63[1];
          v32[2] = v63[0];
          v32[3] = v33;
          long long v34 = v63[5];
          long long v36 = v63[2];
          long long v35 = v63[3];
          v32[6] = v63[4];
          v32[7] = v34;
          v32[4] = v36;
          v32[5] = v35;
          long long v37 = v63[7];
          long long v38 = v64[0];
          long long v39 = v63[6];
          *(_OWORD *)((char *)v32 + 173) = *(_OWORD *)((char *)v64 + 13);
          v32[9] = v37;
          v32[10] = v38;
          v32[8] = v39;
          uint64_t v3 = v29;
          a2 = v61;
          long long v12 = v62;
        }
        if (!v26) {
          break;
        }
        long long v40 = v76[v27 + 7];
        long long v71 = v76[v27 + 6];
        long long v72 = v40;
        v73[0] = v76[v27 + 8];
        *(_OWORD *)((char *)v73 + 13) = *(_OWORD *)((char *)&v76[v27 + 8] + 13);
        long long v41 = v76[v27 + 3];
        long long v67 = v76[v27 + 2];
        long long v68 = v41;
        long long v42 = v76[v27 + 5];
        long long v69 = v76[v27 + 4];
        long long v70 = v42;
        long long v24 = v76[v27];
        long long v25 = v76[v27 + 1];
        v27 += 10;
        --v26;
      }
      swift_bridgeObjectRelease();
      long long v8 = v51;
    }
    else
    {
      int v28 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_beginAccess();
    *((void *)v12 + 6) = v28;
    swift_bridgeObjectRelease();
    sub_1DCD32EB8((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v43 = v57;
    (*v53)(v8, 0, 1, v57);
    sub_1DCD32E58((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((*v52)(v8, 1, v43) == 1)
    {
      sub_1DCD2479C((uint64_t)v8, &qword_1EBE855F0);
      unint64_t v18 = v59;
    }
    else
    {
      uint64_t v44 = v50;
      sub_1DCD32F64((uint64_t)v8, v50, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCD32F64(v44, v56, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      unint64_t v18 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v18 = sub_1DCE9D7A0(0, *(void *)(v18 + 16) + 1, 1, v18);
      }
      unint64_t v46 = *(void *)(v18 + 16);
      unint64_t v45 = *(void *)(v18 + 24);
      if (v46 >= v45 >> 1) {
        unint64_t v18 = sub_1DCE9D7A0(v45 > 1, v46 + 1, 1, v18);
      }
      *(void *)(v18 + 16) = v46 + 1;
      sub_1DCD32F64(v56, v18 + v49 + v46 * v58, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      long long v12 = v62;
    }
    uint64_t v17 = v60 + 1;
  }
  while (v60 + 1 != v55);
  swift_bridgeObjectRelease();
  return v18;
}

void sub_1DCD2F778(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1DCD742D8(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1DCD2F820(v5);
  *a1 = v3;
}

void sub_1DCD2F820(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v132 = *(void *)(v4 - 8);
  uint64_t v133 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v129 = (uint64_t)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v139 = (uint64_t)&v124 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v136 = (uint64_t)&v124 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v135 = (uint64_t)&v124 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_1DD048F68();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      sub_1DCD302D0(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v126 = v13;
  if (v12 < 2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    unint64_t v131 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      long long v20 = (char *)MEMORY[0x1E4FBC860];
LABEL_105:
      int v117 = v20;
      uint64_t v125 = v18;
      if (v21 >= 2)
      {
        uint64_t v118 = *a1;
        do
        {
          unint64_t v119 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v118) {
            goto LABEL_147;
          }
          uint64_t v120 = *(void *)&v117[16 * v119 + 32];
          uint64_t v121 = *(void *)&v117[16 * v21 + 24];
          sub_1DCD30590(v118 + *(void *)(v132 + 72) * v120, v118 + *(void *)(v132 + 72) * *(void *)&v117[16 * v21 + 16], v118 + *(void *)(v132 + 72) * v121, v131);
          if (v2) {
            break;
          }
          if (v121 < v120) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v117 = sub_1DCD729EC((uint64_t)v117);
          }
          if (v119 >= *((void *)v117 + 2)) {
            goto LABEL_137;
          }
          uint64_t v122 = &v117[16 * v119 + 32];
          *(void *)uint64_t v122 = v120;
          *((void *)v122 + 1) = v121;
          unint64_t v123 = *((void *)v117 + 2);
          if (v21 > v123) {
            goto LABEL_138;
          }
          memmove(&v117[16 * v21 + 16], &v117[16 * v21 + 32], 16 * (v123 - v21));
          *((void *)v117 + 2) = v123 - 1;
          unint64_t v21 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v125 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v125 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1DD0486F8();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v132 + 80);
    uint64_t v125 = v16;
    unint64_t v131 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  long long v20 = (char *)MEMORY[0x1E4FBC860];
  v138 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    uint64_t v130 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v33 = v19 + 1;
      goto LABEL_25;
    }
    uint64_t v128 = *a1;
    uint64_t v140 = *(void *)(v132 + 72);
    uint64_t v24 = v140;
    uint64_t v25 = v135;
    sub_1DCD32EB8(v128 + v140 * v23, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v26 = v128 + v24 * v22;
    uint64_t v27 = v136;
    sub_1DCD32EB8(v26, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    float v28 = *(float *)(v25 + 72);
    float v29 = *(float *)(v27 + 72);
    sub_1DCD32E58(v27, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v30 = v25;
    uint64_t v31 = v128;
    sub_1DCD32E58(v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v32 = v140;
    uint64_t v33 = v22 + 2;
    if (v22 + 2 >= v12)
    {
LABEL_22:
      if (v29 >= v28) {
        goto LABEL_25;
      }
LABEL_43:
      if (v33 < v22) {
        goto LABEL_141;
      }
      if (v22 < v33)
      {
        uint64_t v134 = v12;
        uint64_t v127 = v20;
        uint64_t v55 = 0;
        uint64_t v56 = v32 * (v33 - 1);
        uint64_t v57 = v22;
        uint64_t v58 = v33 * v32;
        uint64_t v59 = v57;
        uint64_t v60 = v57 * v32;
        do
        {
          if (v59 != v33 + v55 - 1)
          {
            uint64_t v62 = v128;
            if (!v128) {
              goto LABEL_146;
            }
            unint64_t v63 = v128 + v60;
            uint64_t v137 = v128 + v56;
            sub_1DCD32F64(v128 + v60, v129, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            if (v60 < v56 || v63 >= v62 + v58)
            {
              uint64_t v61 = v137;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v61 = v137;
              if (v60 != v56) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1DCD32F64(v129, v61, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            uint64_t v32 = v140;
          }
          ++v59;
          --v55;
          v56 -= v32;
          v58 -= v32;
          v60 += v32;
        }
        while (v59 < v33 + v55);
        a1 = v138;
        long long v20 = v127;
        uint64_t v22 = v130;
        uint64_t v12 = v134;
      }
      goto LABEL_25;
    }
    uint64_t v124 = v2;
    uint64_t v127 = v20;
    uint64_t v137 = v140 * v23;
    uint64_t v134 = v140 * v33;
    while (1)
    {
      uint64_t v34 = v33;
      uint64_t v35 = v135;
      sub_1DCD32EB8(v31 + v134, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v36 = v136;
      sub_1DCD32EB8(v31 + v137, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      BOOL v37 = *(float *)(v36 + 72) >= *(float *)(v35 + 72);
      sub_1DCD32E58(v36, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCD32E58(v35, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v29 < v28 == v37) {
        break;
      }
      ++v33;
      uint64_t v32 = v140;
      v31 += v140;
      if (v12 == v34 + 1)
      {
        uint64_t v33 = v12;
        long long v20 = v127;
        uint64_t v2 = v124;
        uint64_t v22 = v130;
        goto LABEL_22;
      }
    }
    long long v20 = v127;
    uint64_t v2 = v124;
    uint64_t v22 = v130;
    uint64_t v32 = v140;
    if (v29 < v28) {
      goto LABEL_43;
    }
LABEL_25:
    if (v33 < v12)
    {
      if (__OFSUB__(v33, v22)) {
        goto LABEL_139;
      }
      if (v33 - v22 < v126) {
        break;
      }
    }
LABEL_57:
    if (v33 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      long long v20 = sub_1DCD71FDC(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v66 = *((void *)v20 + 2);
    unint64_t v65 = *((void *)v20 + 3);
    unint64_t v21 = v66 + 1;
    if (v66 >= v65 >> 1) {
      long long v20 = sub_1DCD71FDC((char *)(v65 > 1), v66 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    long long v67 = v20 + 32;
    long long v68 = &v20[16 * v66 + 32];
    uint64_t v69 = v137;
    *(void *)long long v68 = v22;
    *((void *)v68 + 1) = v69;
    if (v66)
    {
      while (1)
      {
        unint64_t v70 = v21 - 1;
        if (v21 >= 4)
        {
          long long v75 = &v67[16 * v21];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_123;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_124;
          }
          unint64_t v82 = v21 - 2;
          long long v83 = &v67[16 * v21 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_126;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_129;
          }
          if (v87 >= v78)
          {
            uint64_t v105 = &v67[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_133;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v99 = *((void *)v20 + 4);
            uint64_t v100 = *((void *)v20 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_88;
          }
          uint64_t v72 = *((void *)v20 + 4);
          uint64_t v71 = *((void *)v20 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_125;
        }
        unint64_t v82 = v21 - 2;
        long long v88 = &v67[16 * v21 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_128;
        }
        long long v94 = &v67[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_131;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_132;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_94:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v93) {
          goto LABEL_127;
        }
        uint64_t v101 = &v67[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_130;
        }
        if (v104 < v92) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v110 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v111 = v20;
        uint64_t v112 = &v67[16 * v109];
        uint64_t v113 = *(void *)v112;
        uint64_t v114 = &v67[16 * v70];
        uint64_t v115 = *((void *)v114 + 1);
        sub_1DCD30590(v110 + *(void *)(v132 + 72) * *(void *)v112, v110 + *(void *)(v132 + 72) * *(void *)v114, v110 + *(void *)(v132 + 72) * v115, v131);
        if (v2) {
          goto LABEL_116;
        }
        if (v115 < v113) {
          goto LABEL_120;
        }
        if (v70 > *((void *)v111 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v112 = v113;
        *(void *)&v67[16 * v109 + 8] = v115;
        unint64_t v116 = *((void *)v111 + 2);
        if (v70 >= v116) {
          goto LABEL_122;
        }
        long long v20 = v111;
        unint64_t v21 = v116 - 1;
        memmove(&v67[16 * v70], v114 + 16, 16 * (v116 - 1 - v70));
        *((void *)v111 + 2) = v116 - 1;
        a1 = v138;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v19 = v137;
    if (v137 >= v12)
    {
      uint64_t v18 = v125;
      goto LABEL_105;
    }
  }
  if (__OFADD__(v22, v126)) {
    goto LABEL_142;
  }
  if (v22 + v126 >= v12) {
    uint64_t v38 = v12;
  }
  else {
    uint64_t v38 = v22 + v126;
  }
  if (v38 >= v22)
  {
    if (v33 != v38)
    {
      uint64_t v127 = v20;
      uint64_t v128 = v38;
      uint64_t v124 = v2;
      uint64_t v39 = *(void *)(v132 + 72);
      uint64_t v140 = v39 * (v33 - 1);
      uint64_t v134 = v39;
      uint64_t v40 = v33 * v39;
      do
      {
        uint64_t v42 = 0;
        uint64_t v43 = v22;
        uint64_t v137 = v33;
        while (1)
        {
          uint64_t v44 = v138;
          uint64_t v45 = *v138;
          uint64_t v46 = v40;
          uint64_t v47 = v40 + v42 + *v138;
          uint64_t v48 = v135;
          sub_1DCD32EB8(v47, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v49 = v140 + v42 + v45;
          uint64_t v50 = v136;
          sub_1DCD32EB8(v49, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          float v51 = *(float *)(v48 + 72);
          float v52 = *(float *)(v50 + 72);
          sub_1DCD32E58(v50, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD32E58(v48, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v52 >= v51) {
            break;
          }
          uint64_t v53 = *v44;
          if (!*v44) {
            goto LABEL_144;
          }
          uint64_t v40 = v46;
          uint64_t v54 = v53 + v140 + v42;
          sub_1DCD32F64(v53 + v46 + v42, v139, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          swift_arrayInitWithTakeFrontToBack();
          sub_1DCD32F64(v139, v54, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          v42 -= v134;
          ++v43;
          uint64_t v41 = v137;
          if (v137 == v43) {
            goto LABEL_36;
          }
        }
        uint64_t v41 = v137;
        uint64_t v40 = v46;
LABEL_36:
        uint64_t v33 = v41 + 1;
        v140 += v134;
        v40 += v134;
        uint64_t v22 = v130;
      }
      while (v33 != v128);
      uint64_t v33 = v128;
      uint64_t v2 = v124;
      a1 = v138;
      long long v20 = v127;
    }
    goto LABEL_57;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_1DD048C98();
  __break(1u);
}

void sub_1DCD302D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (float *)((char *)&v24 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (float *)((char *)&v24 - v13);
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v32 = v15 * (v29 - 1);
    uint64_t v28 = v15;
    uint64_t v31 = v15 * v29;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v26;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = a4;
      sub_1DCD32EB8(v31 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCD32EB8(v32 + v16 + v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      float v20 = v14[18];
      float v21 = v10[18];
      sub_1DCD32E58((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCD32E58((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v21 >= v20)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v25) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v23 = v22 + v32 + v16;
      sub_1DCD32F64(v22 + v31 + v16, v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_arrayInitWithTakeFrontToBack();
      sub_1DCD32F64(v30, v23, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      v16 -= v28;
      ++v17;
      a4 = v19;
      if (v29 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DCD30590(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v40);
  uint64_t v9 = (float *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (float *)((char *)&v38 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      unint64_t v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v31 = a3 - v14;
          sub_1DCD32EB8(v29 - v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          unint64_t v32 = a2 - v14;
          sub_1DCD32EB8(a2 - v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          float v33 = v12[18];
          float v34 = v9[18];
          sub_1DCD32E58((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD32E58((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v34 >= v33)
          {
            unint64_t v35 = v41;
            v41 -= v14;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 -= v14;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v32;
          a3 -= v14;
        }
        while (v32 > v39);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1DCD32EB8(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCD32EB8(a4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        float v22 = v12[18];
        float v23 = v9[18];
        sub_1DCD32E58((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCD32E58((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v24 = v43;
        if (v23 >= v22)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_67:
    sub_1DCD720D8(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD30A64(char *a1, uint64_t a2, float *a3, uint64_t *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v56 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v55 - v11;
  uint64_t v13 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v58 = (uint64_t)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (float *)((char *)&v55 - v16);
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (float *)((char *)&v55 - v19);
  uint64_t v59 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction(0);
  MEMORY[0x1F4188790](v59);
  uint64_t v57 = (uint64_t)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  unint64_t v24 = (float *)((char *)&v55 - v23);
  MEMORY[0x1F4188790](v25);
  unint64_t v27 = (float *)((char *)&v55 - v26);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (uint64_t *)((char *)&v55 - v29);
  char v31 = *a1;
  uint64_t v55 = *a4;
  uint64_t v32 = *(void *)(*(void *)a3 + 16);
  sub_1DCD32EB8((uint64_t)a3, (uint64_t)&v55 - v29, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
  if (v32)
  {
    float v33 = (void *)*v30;
    uint64_t v34 = sub_1DCD9C35C(v31);
    LOBYTE(v33) = sub_1DCF8C928(v34, v35, v33);
    swift_bridgeObjectRelease();
    sub_1DCD32E58((uint64_t)v30, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
    if ((v33 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    sub_1DCD32E58((uint64_t)v30, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
  }
  float v36 = a3[3];
  sub_1DCD32EB8((uint64_t)a3, (uint64_t)v27, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
  sub_1DCD32EB8(a2, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  if (v36 == 0.0)
  {
    sub_1DCD32E58((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD32E58((uint64_t)v27, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
    uint64_t v37 = v59;
  }
  else
  {
    float v38 = v27[3];
    sub_1DCD32E58((uint64_t)v27, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
    float v39 = v20[19];
    sub_1DCD32E58((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v37 = v59;
    if (v39 < v38) {
      return 0;
    }
  }
  float v40 = a3[2];
  sub_1DCD32EB8((uint64_t)a3, (uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
  sub_1DCD32EB8(a2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  if (v40 == 0.0)
  {
    sub_1DCD32E58((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD32E58((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
    goto LABEL_11;
  }
  float v41 = v24[2];
  sub_1DCD32E58((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
  float v42 = v17[19];
  sub_1DCD32E58((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  if (v41 >= v42)
  {
LABEL_11:
    sub_1DCD2889C((uint64_t)a3 + *(int *)(v37 + 32), (uint64_t)v12, &qword_1EBE84E08);
    uint64_t v43 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
    uint64_t v44 = *(void *)(v43 - 8);
    uint64_t v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
    int v46 = v45(v12, 1, v43);
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE84E08);
    uint64_t v47 = v58;
    sub_1DCD32EB8(a2, v58, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v48 = v57;
    sub_1DCD32EB8((uint64_t)a3, v57, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
    if (v46 == 1)
    {
      sub_1DCD32E58(v48, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
      sub_1DCD32E58(v47, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851D8);
      unint64_t v49 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1DD04E910;
      uint64_t v51 = v50 + v49;
      uint64_t v52 = v56;
      sub_1DCD2889C(v48 + *(int *)(v59 + 32), v56, &qword_1EBE84E08);
      if (v45((char *)v52, 1, v43) == 1)
      {
        *(void *)uint64_t v51 = 0;
        *(void *)(v51 + 8) = 0xE000000000000000;
        *(_DWORD *)(v51 + 16) = 0;
        *(_WORD *)(v51 + 20) = 0;
        sub_1DD047BE8();
        sub_1DCD2479C(v52, &qword_1EBE84E08);
      }
      else
      {
        sub_1DCD32F64(v52, v51, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
      }
      uint64_t v60 = v55;
      sub_1DCDD51EC(v50, &v60, (uint64_t)v61);
      swift_bridgeObjectRelease();
      sub_1DCD32E58(v48, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
      uint64_t v53 = v62;
      sub_1DCD32F20(v61[0], v61[1], v61[2], v61[3], v61[4], v61[5], v62);
      sub_1DCD32E58(v47, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (!v53) {
        return 0;
      }
    }
    return 1;
  }
  return 0;
}

void sub_1DCD31124(unint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, double *a5)
{
  uint64_t v162 = a5;
  uint64_t v152 = (uint64_t *)a4;
  unint64_t v153 = a1;
  uint64_t v148 = a2;
  uint64_t v143 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule(0);
  MEMORY[0x1F4188790](v143);
  uint64_t v133 = (uint64_t)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_1DD048068();
  unint64_t v7 = *(void *)(v132 - 8);
  MEMORY[0x1F4188790](v132);
  uint64_t v129 = (char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition(0);
  uint64_t v135 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (_DWORD *)((char *)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (float *)((char *)&v119 - v13);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE860D0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v125 = (uint64_t)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v138 = (uint64_t)&v119 - v18;
  uint64_t v142 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction(0);
  unint64_t v19 = *(void *)(v142 - 8);
  MEMORY[0x1F4188790](v142);
  uint64_t v124 = (uint64_t *)((char *)&v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21);
  uint64_t v137 = (uint64_t *)((char *)&v119 - v22);
  uint64_t v23 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v131 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (double *)((char *)&v119 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (double *)((char *)&v119 - v27);
  MEMORY[0x1F4188790](v29);
  char v31 = (char *)&v119 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v158 = (uint64_t)&v119 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v150 = (uint64_t)&v119 - v35;
  uint64_t v156 = (unint64_t *)a3;
  uint64_t v36 = *a3;
  uint64_t v37 = *(void *)(*a3 + 16);
  if (v37)
  {
    double v136 = *v162;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_89;
    }
    while (1)
    {
      *uint64_t v156 = v36;
      v141 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
      unint64_t v19 = 0;
      uint64_t v127 = (void (**)(char *, uint64_t))(v7 + 8);
      uint64_t v128 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      uint64_t v126 = (char *)&v164 + 8;
      uint64_t v121 = "coarseCategoryDistribution";
      unint64_t v120 = 0x80000001DD067880;
      *(void *)&long long v38 = 136315650;
      long long v123 = v38;
      uint64_t v122 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v134 = v31;
      uint64_t v130 = v37;
      while (1)
      {
        if (v19 == v37) {
          goto LABEL_84;
        }
        unint64_t v7 = *v156;
        if (v19 >= *(void *)(*v156 + 16)) {
          break;
        }
        unint64_t v155 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
        uint64_t v37 = *(void *)(v131 + 72);
        uint64_t v154 = v37 * v19;
        unint64_t v39 = v7 + v155 + v37 * v19;
        uint64_t v36 = v153;
        if ((*(unsigned char *)(v39 + 104) & 1) == 0)
        {
          uint64_t v151 = *(void *)(*(void *)(v39 + 48) + 16);
          if (v151)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v7 = sub_1DCEC1BEC(v7);
            }
            unint64_t v40 = 0;
            *uint64_t v156 = v7;
            unint64_t v41 = v36;
            uint64_t v140 = v37 * v36;
            unint64_t v146 = v19;
            do
            {
              if (v19 == v41 && v40 == v148) {
                goto LABEL_14;
              }
              if (v19 >= *(void *)(*v156 + 16))
              {
                __break(1u);
LABEL_79:
                __break(1u);
LABEL_80:
                __break(1u);
LABEL_81:
                __break(1u);
LABEL_82:
                __break(1u);
LABEL_83:
                __break(1u);
LABEL_84:
                __break(1u);
                goto LABEL_85;
              }
              if ((v40 & 0x8000000000000000) != 0) {
                goto LABEL_79;
              }
              uint64_t v42 = *v156 + v155 + v154;
              uint64_t v43 = *(void *)(v42 + 48);
              if (v40 >= *(void *)(v43 + 16)) {
                goto LABEL_80;
              }
              uint64_t v149 = v40;
              uint64_t v144 = 160 * v40;
              uint64_t v44 = (_OWORD *)(v43 + 160 * v40);
              long long v45 = v44[3];
              v173[0] = v44[2];
              v173[1] = v45;
              long long v46 = v44[4];
              long long v47 = v44[5];
              long long v48 = v44[7];
              v173[4] = v44[6];
              v173[5] = v48;
              v173[2] = v46;
              v173[3] = v47;
              long long v49 = v44[8];
              long long v50 = v44[9];
              long long v51 = v44[10];
              *(_OWORD *)((char *)v175 + 13) = *(_OWORD *)((char *)v44 + 173);
              long long v174 = v50;
              v175[0] = v51;
              v173[6] = v49;
              long long v170 = v44[8];
              long long v171 = v44[9];
              v172[0] = v44[10];
              *(_OWORD *)((char *)v172 + 13) = *(_OWORD *)((char *)v44 + 173);
              long long v166 = v44[4];
              long long v167 = v44[5];
              long long v168 = v44[6];
              long long v169 = v44[7];
              long long v164 = v44[2];
              long long v165 = v44[3];
              sub_1DCD32EB8(v42, v150, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              uint64_t v52 = v138;
              sub_1DCD2889C((uint64_t)v152 + *(int *)(v143 + 28), v138, &qword_1EBE860D0);
              uint64_t v53 = v142;
              uint64_t v139 = *v141;
              if (v139(v52, 1, v142) == 1)
              {
                uint64_t v54 = v137;
                *uint64_t v137 = MEMORY[0x1E4FBC860];
                v54[1] = 0;
                sub_1DCD32CC8((uint64_t)v173);
                sub_1DD047BE8();
                unint64_t v19 = v146;
                uint64_t v55 = (char *)v54 + *(int *)(v53 + 32);
                uint64_t v56 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 1, 1, v56);
                unint64_t v7 = (unint64_t)v54;
                char v31 = v134;
                sub_1DCD2479C(v52, &qword_1EBE860D0);
              }
              else
              {
                unint64_t v7 = (unint64_t)v137;
                sub_1DCD32F64(v52, (uint64_t)v137, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
                sub_1DCD32CC8((uint64_t)v173);
              }
              double v163 = v136;
              uint64_t v37 = v150;
              uint64_t v36 = sub_1DCD30A64((char *)&v164, v150, (float *)v7, (uint64_t *)&v163);
              sub_1DCD32E58(v7, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
              sub_1DCD32E58(v37, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              if ((v153 & 0x8000000000000000) != 0) {
                goto LABEL_81;
              }
              unint64_t v57 = *v156;
              unint64_t v7 = *(void *)(*v156 + 16);
              if (v7 <= v153) {
                goto LABEL_82;
              }
              uint64_t v37 = v57 + v155;
              sub_1DCD32EB8(v57 + v155 + v140, v158, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              if (v19 >= v7) {
                goto LABEL_83;
              }
              int v147 = v36;
              sub_1DCD32EB8(v37 + v154, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              uint64_t v58 = *(void *)(*v152 + 16);
              if (v58)
              {
                uint64_t v59 = v135;
                uint64_t v60 = *v152
                    + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
                uint64_t v145 = *v152;
                swift_bridgeObjectRetain();
                uint64_t v61 = *(void *)(v59 + 72);
                uint64_t v62 = v58 - 1;
                while (1)
                {
                  uint64_t v63 = v62;
                  sub_1DCD32EB8(v60, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
                  float v64 = *v14;
                  sub_1DCD32F64((uint64_t)v14, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
                  sub_1DCD32EB8(v158, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  sub_1DCD32EB8((uint64_t)v31, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  if (v64 == 0.0) {
                    break;
                  }
                  LODWORD(v162) = *v11;
                  CGFloat v65 = *v28;
                  CGFloat v66 = v28[1];
                  CGFloat v67 = v28[2];
                  CGFloat v68 = v28[3];
                  CGFloat v69 = v25[1];
                  os_log_t v161 = *(os_log_t *)v25;
                  CGFloat v70 = v25[2];
                  CGFloat v71 = v25[3];
                  v176.origin.CGFloat x = v65;
                  v176.origin.CGFloat y = v66;
                  v176.size.double width = v67;
                  v176.size.double height = v68;
                  double Width = CGRectGetWidth(v176);
                  CGFloat v159 = v65;
                  v177.origin.CGFloat x = v65;
                  CGFloat v73 = v66;
                  os_log_t v74 = v161;
                  v177.origin.CGFloat y = v73;
                  v177.size.double width = v67;
                  v177.size.double height = v68;
                  CGFloat v75 = Width * CGRectGetHeight(v177);
                  *(void *)&v178.origin.CGFloat x = v74;
                  v178.origin.CGFloat y = v69;
                  v178.size.double width = v70;
                  v178.size.double height = v71;
                  CGFloat v160 = CGRectGetWidth(v178);
                  *(void *)&v179.origin.CGFloat x = v74;
                  v179.origin.CGFloat y = v69;
                  v179.size.double width = v70;
                  v179.size.double height = v71;
                  double Height = CGRectGetHeight(v179);
                  CGFloat v157 = v75;
                  if (v75 <= 0.0 || (double v77 = v160 * Height, v77 <= 0.0))
                  {
                    float v82 = 0.0;
                  }
                  else
                  {
                    CGFloat v160 = v77;
                    v180.origin.CGFloat x = v159;
                    v180.origin.CGFloat y = v73;
                    v180.size.double width = v67;
                    v180.size.double height = v68;
                    *(void *)&v184.origin.CGFloat x = v74;
                    v184.origin.CGFloat y = v69;
                    v184.size.double width = v70;
                    v184.size.double height = v71;
                    CGRect v181 = CGRectIntersection(v180, v184);
                    CGFloat x = v181.origin.x;
                    CGFloat y = v181.origin.y;
                    CGFloat v80 = v181.size.width;
                    CGFloat v81 = v181.size.height;
                    float v82 = 0.0;
                    if (!CGRectIsNull(v181))
                    {
                      v182.origin.CGFloat x = x;
                      v182.origin.CGFloat y = y;
                      v182.size.double width = v80;
                      v182.size.double height = v81;
                      double v83 = CGRectGetWidth(v182);
                      v183.origin.CGFloat x = x;
                      v183.origin.CGFloat y = y;
                      v183.size.double width = v80;
                      v183.size.double height = v81;
                      double v84 = v83 * CGRectGetHeight(v183);
                      double v85 = v157;
                      if (v160 < v157) {
                        double v85 = v160;
                      }
                      float v82 = v84 / v85;
                    }
                  }
                  sub_1DCD32E58((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  sub_1DCD32E58((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  sub_1DCD32E58((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
                  uint64_t v37 = v82 >= *(float *)&v162;
                  if (v82 < *(float *)&v162)
                  {
                    uint64_t v62 = v63 - 1;
                    v60 += v61;
                    if (v63) {
                      continue;
                    }
                  }
                  goto LABEL_41;
                }
                sub_1DCD32E58((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                sub_1DCD32E58((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                sub_1DCD32E58((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.SuppressCondition);
                uint64_t v37 = 1;
LABEL_41:
                swift_bridgeObjectRelease();
                unint64_t v19 = v146;
              }
              else
              {
                uint64_t v37 = 1;
              }
              unint64_t v7 = BYTE12(v174);
              uint64_t v36 = (uint64_t)type metadata accessor for VisualUnderstanding.ImageRegion;
              sub_1DCD32E58((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              sub_1DCD32E58(v158, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              if ((v7 & 1) == 0)
              {
                sub_1DCD32DD4((uint64_t)v173);
                unint64_t v41 = v153;
LABEL_13:
                unint64_t v40 = v149;
                goto LABEL_14;
              }
              if ((v147 & 1) == 0 || (v37 & 1) == 0)
              {
                unint64_t v7 = v153;
                sub_1DCD32DD4((uint64_t)v173);
                unint64_t v41 = v7;
                goto LABEL_13;
              }
              if (v19 >= *(void *)(*v156 + 16)) {
                goto LABEL_86;
              }
              uint64_t v86 = (uint64_t *)(*v156 + v155 + v154);
              uint64_t v87 = *v86;
              uint64_t v88 = v86[1];
              uint64_t v89 = v86[2];
              uint64_t v90 = v86[3];
              if (qword_1EBE87190 != -1) {
                swift_once();
              }
              if (byte_1EBE87188 != 1)
              {
LABEL_62:
                uint64_t v100 = qword_1EBE871A8;
                uint64_t v101 = v132;
                uint64_t v102 = v129;
                if (qword_1EBE871C8 != -1)
                {
                  swift_once();
                  uint64_t v100 = qword_1EBE871A8;
                }
                goto LABEL_64;
              }
              id v91 = objc_msgSend(self, sel_mainBundle);
              id v92 = objc_msgSend(v91, sel_bundleIdentifier);

              if (v92)
              {
                uint64_t v93 = sub_1DD048408();
                uint64_t v95 = v94;

                if (v93 == 0xD00000000000002BLL && v95 == v120)
                {
                  swift_bridgeObjectRelease();
LABEL_55:
                  uint64_t v97 = (uint64_t *)&off_1EAB02A48;
                  if (qword_1EAB01C28 != -1)
                  {
                    swift_once();
                    uint64_t v97 = (uint64_t *)&off_1EAB02A48;
                  }
                  goto LABEL_59;
                }
                char v96 = sub_1DD048FA8();
                swift_bridgeObjectRelease();
                if (v96) {
                  goto LABEL_55;
                }
              }
              uint64_t v97 = &qword_1EBE871E8;
              if (qword_1EBE871A0 != -1)
              {
                swift_once();
                uint64_t v97 = &qword_1EBE871E8;
              }
LABEL_59:
              BOOL v98 = *(void **)(*v97 + 32);
              swift_retain();
              uint64_t v99 = (void *)sub_1DD0483D8();
              LODWORD(v98) = objc_msgSend(v98, sel_BOOLForKey_, v99);
              swift_release();

              unint64_t v19 = v146;
              if (!v98) {
                goto LABEL_62;
              }
              uint64_t v100 = qword_1EAB02B70;
              uint64_t v101 = v132;
              uint64_t v102 = v129;
              if (qword_1EAB01C80 != -1)
              {
                swift_once();
                uint64_t v100 = qword_1EAB02B70;
              }
LABEL_64:
              uint64_t v103 = __swift_project_value_buffer(v101, (uint64_t)v100);
              (*v128)(v102, v103, v101);
              uint64_t v37 = v133;
              sub_1DCD32EB8((uint64_t)v152, v133, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
              sub_1DCD32CC8((uint64_t)v173);
              uint64_t v36 = sub_1DD048048();
              LODWORD(v162) = sub_1DD048848();
              if (os_log_type_enabled((os_log_t)v36, (os_log_type_t)v162))
              {
                os_log_t v161 = (os_log_t)v36;
                LODWORD(v159) = LOBYTE(v173[0]);
                uint64_t v104 = swift_slowAlloc();
                CGFloat v160 = COERCE_DOUBLE(swift_slowAlloc());
                double v163 = v160;
                *(_DWORD *)uint64_t v104 = v123;
                *(void *)&long long v164 = v87;
                *((void *)&v164 + 1) = v88;
                *(void *)&long long v165 = v89;
                *((void *)&v165 + 1) = v90;
                uint64_t v105 = NormalizedRect.loggingDescription.getter();
                *(void *)&long long v164 = sub_1DCED7FA0(v105, v106, (uint64_t *)&v163);
                sub_1DD048A28();
                swift_bridgeObjectRelease();
                *(_WORD *)(v104 + 12) = 2080;
                uint64_t v107 = sub_1DCD9C35C(SLOBYTE(v159));
                *(void *)&long long v164 = sub_1DCED7FA0(v107, v108, (uint64_t *)&v163);
                sub_1DD048A28();
                swift_bridgeObjectRelease();
                sub_1DCD32DD4((uint64_t)v173);
                sub_1DCD32DD4((uint64_t)v173);
                *(_WORD *)(v104 + 22) = 2080;
                uint64_t v109 = v125;
                sub_1DCD2889C(v133 + *(int *)(v143 + 28), v125, &qword_1EBE860D0);
                uint64_t v110 = v142;
                if (v139(v109, 1, v142) == 1)
                {
                  uint64_t v111 = v124;
                  *uint64_t v124 = MEMORY[0x1E4FBC860];
                  v111[1] = 0;
                  sub_1DD047BE8();
                  uint64_t v112 = (char *)v111 + *(int *)(v110 + 32);
                  uint64_t v113 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v112, 1, 1, v113);
                  sub_1DCD2479C(v109, &qword_1EBE860D0);
                }
                else
                {
                  uint64_t v111 = v124;
                  sub_1DCD32F64(v109, (uint64_t)v124, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
                }
                *(void *)&CGFloat v159 = v104 + 24;
                uint64_t v114 = *v111;
                swift_bridgeObjectRetain();
                sub_1DCD32E58((uint64_t)v111, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
                uint64_t v36 = MEMORY[0x1E01AE380](v114, MEMORY[0x1E4FBB1A0]);
                unint64_t v116 = v115;
                swift_bridgeObjectRelease();
                *(void *)&long long v164 = sub_1DCED7FA0(v36, v116, (uint64_t *)&v163);
                sub_1DD048A28();
                swift_bridgeObjectRelease();
                sub_1DCD32E58(v133, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
                os_log_t v117 = v161;
                _os_log_impl(&dword_1DCCF9000, v161, (os_log_type_t)v162, "%s drops %s due to suppression rules of %s", (uint8_t *)v104, 0x20u);
                uint64_t v37 = *(void *)&v160;
                swift_arrayDestroy();
                MEMORY[0x1E01B07E0](v37, -1, -1);
                MEMORY[0x1E01B07E0](v104, -1, -1);

                (*v127)(v129, v132);
                unint64_t v19 = v146;
              }
              else
              {
                sub_1DCD32DD4((uint64_t)v173);
                sub_1DCD32DD4((uint64_t)v173);
                sub_1DCD32E58(v37, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);

                (*v127)(v102, v132);
              }
              unint64_t v7 = *v156;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v7 = sub_1DCEC1BEC(v7);
              }
              if (v19 >= *(void *)(v7 + 16)) {
                goto LABEL_87;
              }
              uint64_t v37 = v7 + v155 + v154;
              uint64_t v36 = *(void *)(v37 + 48);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v37 + 48) = v36;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                uint64_t v36 = (uint64_t)sub_1DCEC1BD8((void *)v36);
                *(void *)(v37 + 48) = v36;
              }
              unint64_t v40 = v149;
              if (v149 >= *(void *)(v36 + 16)) {
                goto LABEL_88;
              }
              *(unsigned char *)(v36 + v144 + 156) = 0;
              *uint64_t v156 = v7;
              unint64_t v41 = v153;
LABEL_14:
              ++v40;
            }
            while (v40 != v151);
          }
        }
        ++v19;
        uint64_t v37 = v130;
        if (v19 == v130) {
          return;
        }
      }
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      uint64_t v36 = sub_1DCEC1BEC(v36);
    }
  }
}

uint64_t sub_1DCD32358(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE860D0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v63 = (uint64_t)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction(0);
  uint64_t v10 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v12 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v56 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v58 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule(0);
  uint64_t v15 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v17 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v68 = (uint64_t)v51 - v19;
  uint64_t v20 = *a4;
  *(void *)&v81[0] = sub_1DCE58258(a1, a3);
  swift_bridgeObjectRetain();
  sub_1DCD2F778((void **)v81);
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)&v81[0];
  v83[0] = *(void *)&v81[0];
  uint64_t v52 = *(void *)(a2 + 16);
  if (v52)
  {
    uint64_t v54 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v53 = *(void *)(v15 + 72);
    uint64_t v59 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v60 = v20;
    v51[1] = a2;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v23 = (uint64_t)v58;
    uint64_t v24 = v68;
    while (1)
    {
      uint64_t v55 = v22;
      sub_1DCD32EB8(v54 + v53 * v22, v24, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
      uint64_t v57 = *(void *)(v83[0] + 16);
      if (v57) {
        break;
      }
LABEL_3:
      uint64_t v22 = v55 + 1;
      uint64_t v24 = v68;
      sub_1DCD32E58(v68, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
      if (v22 == v52) {
        goto LABEL_25;
      }
    }
    unint64_t v25 = 0;
    while (1)
    {
      if (v25 >= *(void *)(v83[0] + 16))
      {
        __break(1u);
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      unint64_t v67 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      unint64_t v66 = *(void *)(v56 + 72) * v25;
      unint64_t v26 = v83[0] + v67 + v66;
      if ((*(unsigned char *)(v26 + 104) & 1) == 0)
      {
        uint64_t v65 = *(void *)(*(void *)(v26 + 48) + 16);
        if (v65) {
          break;
        }
      }
LABEL_6:
      if (++v25 == v57) {
        goto LABEL_3;
      }
    }
    uint64_t v27 = 0;
    unint64_t v28 = 0;
    unint64_t v64 = v25;
    while (v25 < *(void *)(v83[0] + 16))
    {
      uint64_t v29 = v83[0] + v67 + v66;
      uint64_t v30 = *(void *)(v29 + 48);
      if (v28 >= *(void *)(v30 + 16)) {
        goto LABEL_23;
      }
      int v31 = *(unsigned __int8 *)(v30 + v27 + 156);
      sub_1DCD32EB8(v68, (uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
      if (v31 == 1)
      {
        uint64_t v32 = *(void *)(v29 + 48);
        if (v28 >= *(void *)(v32 + 16)) {
          goto LABEL_24;
        }
        uint64_t v33 = (_OWORD *)(v32 + v27);
        long long v34 = v33[3];
        v81[0] = v33[2];
        v81[1] = v34;
        long long v35 = v33[4];
        long long v36 = v33[5];
        long long v37 = v33[7];
        v81[4] = v33[6];
        v81[5] = v37;
        v81[2] = v35;
        v81[3] = v36;
        long long v38 = v33[8];
        long long v39 = v33[9];
        long long v40 = v33[10];
        *(_OWORD *)((char *)v82 + 13) = *(_OWORD *)((char *)v33 + 173);
        v81[7] = v39;
        v82[0] = v40;
        v81[6] = v38;
        long long v41 = v33[9];
        long long v78 = v33[8];
        long long v79 = v41;
        v80[0] = v33[10];
        *(_OWORD *)((char *)v80 + 13) = *(_OWORD *)((char *)v33 + 173);
        long long v42 = v33[5];
        long long v74 = v33[4];
        long long v75 = v42;
        long long v43 = v33[7];
        long long v76 = v33[6];
        long long v77 = v43;
        long long v44 = v33[3];
        long long v72 = v33[2];
        long long v73 = v44;
        sub_1DCD32EB8(v29, v23, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v45 = v63;
        sub_1DCD2889C((uint64_t)&v17[*(int *)(v61 + 24)], v63, &qword_1EBE860D0);
        uint64_t v46 = v62;
        if ((*v59)(v45, 1, v62) == 1)
        {
          *(void *)uint64_t v12 = MEMORY[0x1E4FBC860];
          *((void *)v12 + 1) = 0;
          sub_1DCD32CC8((uint64_t)v81);
          sub_1DD047BE8();
          uint64_t v23 = (uint64_t)v58;
          long long v47 = &v12[*(int *)(v46 + 32)];
          uint64_t v48 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 1, 1, v48);
          sub_1DCD2479C(v45, &qword_1EBE860D0);
        }
        else
        {
          sub_1DCD32F64(v45, (uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
          sub_1DCD32CC8((uint64_t)v81);
        }
        uint64_t v49 = v60;
        uint64_t v69 = v60;
        char v50 = sub_1DCD30A64((char *)&v72, v23, (float *)v12, &v69);
        sub_1DCD32E58((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule.DomainRestriction);
        sub_1DCD32E58(v23, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        v70[6] = v78;
        v70[7] = v79;
        v71[0] = v80[0];
        *(_OWORD *)((char *)v71 + 13) = *(_OWORD *)((char *)v80 + 13);
        v70[2] = v74;
        v70[3] = v75;
        v70[4] = v76;
        v70[5] = v77;
        v70[0] = v72;
        v70[1] = v73;
        sub_1DCD32DD4((uint64_t)v70);
        sub_1DCD32E58((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
        unint64_t v25 = v64;
        if (v50)
        {
          uint64_t v69 = v49;
          sub_1DCD31124(v64, v28, v83, v68, (double *)&v69);
        }
      }
      else
      {
        sub_1DCD32E58((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.DomainSuppressionRule);
      }
      ++v28;
      v27 += 160;
      if (v65 == v28) {
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRelease();
    return v83[0];
  }
  return result;
}

unint64_t sub_1DCD32A30(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule(0) - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a2;
  uint64_t v11 = a2[7];
  uint64_t v32 = MEMORY[0x1E4FBC870];
  uint64_t v30 = *(void *)(a3 + 16);
  if (v30)
  {
    uint64_t v26 = a1;
    uint64_t v27 = v11;
    uint64_t v12 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v28 = *(void *)(v7 + 72);
    uint64_t v29 = a3 + ((v12 + 32) & ~v12);
    BOOL v14 = v10 == 1 || v11 == 0;
    uint64_t v25 = a3;
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    do
    {
      sub_1DCD32EB8(v29 + v28 * v15, (uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule);
      uint64_t v16 = MEMORY[0x1E4FBC860];
      if (!v14)
      {
        uint64_t v16 = v27;
        swift_bridgeObjectRetain();
      }
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        int v18 = *((_DWORD *)v9 + 4);
        uint64_t v19 = (int *)(v16 + 52);
        do
        {
          int v20 = *v19;
          v19 += 14;
          if (v20 >= v18)
          {
            uint64_t v21 = *(void *)v9;
            uint64_t v22 = *((void *)v9 + 1);
            swift_bridgeObjectRetain();
            sub_1DCF5156C(&v31, v21, v22);
            swift_bridgeObjectRelease();
          }
          --v17;
        }
        while (v17);
      }
      ++v15;
      swift_bridgeObjectRelease();
      sub_1DCD32E58((uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.PersonImageLevelSupressionRule);
    }
    while (v15 != v30);
    swift_bridgeObjectRelease();
    a1 = v26;
  }
  unint64_t v23 = sub_1DCD2F1F4(a1, &v32);
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1DCD32C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD32CA4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 32);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1DCD32CC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCD32D4C(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCD32D4C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DCD32D90(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCD32DD4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCD32D90(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCD32E58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD32EB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD32F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCD32F64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD32FCC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v30 = sub_1DD048068();
  uint64_t v5 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v29 - v9;
  uint64_t v11 = sub_1DD047C38();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v32 = type metadata accessor for Argos_Protos_Queryflow_RichLabelThresholdConfig(0);
  MEMORY[0x1F4188790](v32);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(self, sel_defaultManager);
  uint64_t v15 = (void *)sub_1DD0483D8();
  id v16 = objc_msgSend(v14, sel_contentsAtPath_, v15);

  if (v16)
  {
    v29[3] = v7;
    v29[4] = a1;
    uint64_t v17 = sub_1DD0464E8();
    unint64_t v19 = v18;

    uint64_t v24 = sub_1DCF47ED8(v17, v19);
    uint64_t v25 = v17;
    unint64_t v27 = v26;
    sub_1DCD21954(v25, v19);

    uint64_t v35 = v24;
    unint64_t v36 = v27;
    uint64_t v34 = 0;
    memset(v33, 0, sizeof(v33));
    sub_1DCD33F64(v24, v27);
    sub_1DD047C28();
    sub_1DCD33FBC();
    sub_1DD047E38();
    sub_1DCD21954(v24, v27);
    return sub_1DCD34014((uint64_t)v13, (uint64_t)v31);
  }
  else
  {

    sub_1DCDB40EC((uint64_t)v10);
    swift_bridgeObjectRetain_n();
    int v20 = sub_1DD048048();
    os_log_type_t v21 = sub_1DD048858();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(void *)&v33[0] = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1DCED7FA0(a1, a2, (uint64_t *)v33);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v20, v21, "Failed to load rich label threshold at path %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v23, -1, -1);
      MEMORY[0x1E01B07E0](v22, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v30);
    *uint64_t v31 = MEMORY[0x1E4FBC860];
    return sub_1DD047BE8();
  }
}

unint64_t sub_1DCD33610(uint64_t a1, unint64_t a2, float a3)
{
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v37 - v11;
  swift_bridgeObjectRetain();
  uint64_t v37 = a1;
  unint64_t v13 = sub_1DCEBBF08(1uLL, a1, a2);
  unint64_t v15 = v14;
  unint64_t v17 = v16;
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (!((v13 ^ v15) >> 14))
  {
    swift_bridgeObjectRelease();
LABEL_11:
    sub_1DCDB40EC((uint64_t)v12);
    sub_1DCDB4300((uint64_t)v9);
    uint64_t v28 = v38;
    uint64_t v29 = v39 + 8;
    uint64_t v30 = *(void (**)(char *, uint64_t))(v39 + 8);
    v30(v12, v38);
    swift_bridgeObjectRetain_n();
    uint64_t v31 = sub_1DD048048();
    os_log_type_t v32 = sub_1DD048848();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v39 = v29;
      uint64_t v35 = v34;
      uint64_t v41 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1DCED7FA0(v37, a2, &v41);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v31, v32, "Rich label failed to convert KGID %s", v33, 0xCu);
      unsigned __int8 v26 = 1;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v35, -1, -1);
      MEMORY[0x1E01B07E0](v33, -1, -1);

      v30(v9, v28);
      float v27 = 0.0;
      return LODWORD(v27) | ((unint64_t)v26 << 32);
    }

    swift_bridgeObjectRelease_n();
    v30(v9, v28);
    goto LABEL_14;
  }
  uint64_t v20 = sub_1DCE52B8C(v13, v15, v17, v19, 10);
  if ((v20 & 0x10000000000) != 0) {
    uint64_t v20 = sub_1DCD4F368(v13, v15, v17, v19, 10);
  }
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if ((v21 & 0x100000000) != 0) {
    goto LABEL_11;
  }
  swift_retain();
  uint64_t v22 = sub_1DCFE2DA4();
  swift_release();
  if (!v22[2] || (unint64_t v23 = sub_1DCEAD480(v21), (v24 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (a3 > 0.0)
    {
      unsigned __int8 v26 = 0;
      float v27 = a3;
      return LODWORD(v27) | ((unint64_t)v26 << 32);
    }
LABEL_14:
    float v27 = 0.0;
    unsigned __int8 v26 = 1;
    return LODWORD(v27) | ((unint64_t)v26 << 32);
  }
  int v25 = *(_DWORD *)(v22[7] + 4 * v23);
  swift_bridgeObjectRelease();
  unsigned __int8 v26 = 0;
  float v27 = (float)v25 / 100.0;
  return LODWORD(v27) | ((unint64_t)v26 << 32);
}

uint64_t sub_1DCD339D8()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RichLabelThresholdMapper()
{
  return self;
}

void *sub_1DCD33A34()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DCFD9704(33, 0, 25200, 0xE200000000000000);
  uint64_t v5 = v4;
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = v3;
  v6[3] = v5;
  v6[4] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE862B0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 24) = 0;
  *(unsigned char *)(v7 + 32) = -1;
  *(void *)(v7 + 56) = 0;
  *(void *)(v7 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  *(void *)(v7 + 80) = v8;
  *(void *)(v7 + 40) = sub_1DCD33E5C;
  *(void *)(v7 + 48) = v6;
  swift_retain();
  swift_retain();
  sub_1DCD33E90(0);
  *(void *)(v7 + 72) = 4;
  swift_release();
  uint64_t v9 = sub_1DCF31D08();
  swift_release();
  v1[2] = v9;
  return v1;
}

uint64_t sub_1DCD33B70(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (unsigned int *)((char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_RichLabelThresholdConfig(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (void *)((char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (void *)sub_1DCDBC43C(MEMORY[0x1E4FBC860]);
  sub_1DCD32FCC(a1, a2, v10);
  uint64_t v12 = *v10;
  uint64_t v13 = *(void *)(*v10 + 16);
  if (!v13)
  {
LABEL_17:
    sub_1DCD33F04((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RichLabelThresholdConfig);
    return (uint64_t)v11;
  }
  v32[1] = *v10;
  uint64_t v33 = v10;
  uint64_t v14 = v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v15 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1DCD33EA0(v14, (uint64_t)v7);
    unsigned int v17 = *v7;
    unsigned int v16 = v7[1];
    sub_1DCD33F04((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v34 = v11;
    unint64_t v20 = sub_1DCEAD480(v17);
    uint64_t v21 = v11[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    char v24 = v19;
    if (v11[3] >= v23)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v11 = v34;
        if (v19) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1DCE883D8();
        uint64_t v11 = v34;
        if (v24) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1DCE7D904(v23, isUniquelyReferenced_nonNull_native);
      unint64_t v25 = sub_1DCEAD480(v17);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_20;
      }
      unint64_t v20 = v25;
      uint64_t v11 = v34;
      if (v24)
      {
LABEL_3:
        *(_DWORD *)(v11[7] + 4 * v20) = v16;
        goto LABEL_4;
      }
    }
    v11[(v20 >> 6) + 8] |= 1 << v20;
    uint64_t v27 = 4 * v20;
    *(_DWORD *)(v11[6] + v27) = v17;
    *(_DWORD *)(v11[7] + v27) = v16;
    uint64_t v28 = v11[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_19;
    }
    void v11[2] = v30;
LABEL_4:
    swift_bridgeObjectRelease();
    v14 += v15;
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = v33;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCD33E24()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1DCD33E5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCD33B70(*(void *)(v1 + 16), *(void *)(v1 + 24));
  *a1 = result;
  return result;
}

uint64_t sub_1DCD33E90(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCD33EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RichLabelThreshold(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD33F04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD33F64(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_1DCD33FBC()
{
  unint64_t result = qword_1EBE86178;
  if (!qword_1EBE86178)
  {
    type metadata accessor for Argos_Protos_Queryflow_RichLabelThresholdConfig(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86178);
  }
  return result;
}

uint64_t sub_1DCD34014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RichLabelThresholdConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD34078(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v192 = (uint64_t)&v191 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = sub_1DD048068();
  uint64_t v10 = *(void *)(v215 - 8);
  MEMORY[0x1F4188790](v215);
  uint64_t v198 = (char *)&v191 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  v213 = (char *)&v191 - v13;
  uint64_t v194 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v14 = *(void *)(v194 - 8);
  MEMORY[0x1F4188790](v194);
  uint64_t v197 = (uint64_t)&v191 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v211 = (uint64_t)&v191 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v206 = (char *)&v191 - v19;
  MEMORY[0x1F4188790](v20);
  v204 = (double *)((char *)&v191 - v21);
  MEMORY[0x1F4188790](v22);
  v208 = (double *)((char *)&v191 - v23);
  MEMORY[0x1F4188790](v24);
  char v26 = (char *)&v191 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v196 = (uint64_t)&v191 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v203 = (uint64_t)&v191 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v207 = (uint64_t)&v191 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v218 = (uint64_t)&v191 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (double *)((char *)&v191 - v36);
  double v38 = COERCE_DOUBLE(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868B8));
  uint64_t v39 = *(void *)(*(void *)&v38 - 8);
  MEMORY[0x1F4188790](*(void *)&v38);
  uint64_t v219 = (char *)&v191 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868C0);
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v229 = (uint64_t)&v191 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v43);
  *(void *)&CGFloat v230 = (char *)&v191 - v44;
  long long v232 = *a2;
  uint64_t v45 = *((void *)a2 + 2);
  uint64_t v46 = *((void *)a2 + 3);
  v238[0] = 0x6C46206573726150;
  v238[1] = 0xEA0000000000776FLL;
  v238[2] = "VI: Region Merging";
  v238[3] = 18;
  char v239 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  uint64_t v195 = sub_1DCEA469C((uint64_t)v238, a3);
  swift_release();
  type metadata accessor for RegionMergingProcessor();
  long long v236 = v232;
  *(void *)&long long v237 = v45;
  *((void *)&v237 + 1) = v46;
  uint64_t v47 = *(void *)(v4 + OBJC_IVAR____TtC18VisualIntelligence22RegionMergingProcessor_boxScorer);
  uint64_t v220 = v4 + OBJC_IVAR____TtC18VisualIntelligence22RegionMergingProcessor_config;
  *(void *)&long long v236 = sub_1DCDC51B4(a1, (uint64_t *)&v236, v47, v4 + OBJC_IVAR____TtC18VisualIntelligence22RegionMergingProcessor_config);
  uint64_t v193 = v236;
  swift_bridgeObjectRetain();
  sub_1DCD35CB4((void **)&v236);
  uint64_t v48 = MEMORY[0x1E4FBC870];
  uint64_t v235 = MEMORY[0x1E4FBC870];
  uint64_t v49 = (void (**)(uint64_t, uint64_t, uint64_t, double))(v39 + 56);
  v225 = *(char **)(v236 + 16);
  v224 = (unsigned int (**)(CGFloat, uint64_t, double))(v39 + 48);
  v217 = (void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v216 = (void (**)(char *, uint64_t))(v10 + 8);
  v202 = (char *)&v236 + 8;
  uint64_t v226 = v236;
  swift_retain();
  char v50 = 0;
  double v212 = MEMORY[0x1E4FBC860];
  *(void *)&long long v51 = 136315394;
  long long v205 = v51;
  uint64_t v201 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v52 = v14;
  uint64_t v209 = v14;
  uint64_t v53 = (void (**)(uint64_t, uint64_t, uint64_t, double))(v39 + 56);
  CGFloat v231 = v38;
  uint64_t v54 = v229;
  uint64_t v200 = v26;
  v199 = v49;
LABEL_2:
  uint64_t v55 = v48 + 56;
  CGFloat v56 = v230;
  while (1)
  {
    if (v50 == v225)
    {
      uint64_t v57 = 1;
      *(void *)&long long v232 = v225;
      goto LABEL_9;
    }
    if (((unint64_t)v50 & 0x8000000000000000) != 0) {
      goto LABEL_117;
    }
    if ((unint64_t)v50 >= *(void *)(v226 + 16)) {
      break;
    }
    uint64_t v58 = (uint64_t)&v219[*(int *)(*(void *)&v231 + 48)];
    sub_1DCD36E7C(v226+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * (void)v50, v58);
    uint64_t v59 = v54 + *(int *)(*(void *)&v231 + 48);
    *(void *)uint64_t v54 = v50;
    uint64_t v60 = v58;
    CGFloat v56 = v230;
    sub_1DCD36EE0(v60, v59);
    uint64_t v57 = 0;
    *(void *)&long long v232 = v50 + 1;
    double v38 = v231;
LABEL_9:
    (*v53)(v54, v57, 1, COERCE_DOUBLE(*(void *)&v38));
    sub_1DCD36F44(v54, *(uint64_t *)&v56);
    if ((*v224)(COERCE_CGFLOAT(*(void *)&v56), 1, COERCE_DOUBLE(*(void *)&v38)) == 1)
    {
      swift_release_n();
      uint64_t v122 = *(void *)(v193 + 16);
      if (v122)
      {
        uint64_t v123 = v193 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
        uint64_t v124 = *(void *)(v52 + 72);
        swift_bridgeObjectRetain();
        uint64_t v37 = v208;
        while (1)
        {
          sub_1DCD36E7C(v123, (uint64_t)v26);
          if (v26[104] == 1) {
            break;
          }
          sub_1DCD37070((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          v123 += v124;
          if (!--v122)
          {
            swift_bridgeObjectRelease();
            uint64_t v125 = 1;
            goto LABEL_68;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v126 = v192;
        sub_1DCD36EE0((uint64_t)v26, v192);
        uint64_t v125 = 0;
      }
      else
      {
        uint64_t v125 = 1;
        uint64_t v37 = v208;
LABEL_68:
        uint64_t v126 = v192;
      }
      uint64_t v127 = v194;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v126, v125, 1, v194);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v128 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v126, 1, v127) == 1;
      uint64_t v129 = v204;
      if (v128)
      {
        sub_1DCD36FAC(v126);
        double v38 = v212;
        goto LABEL_113;
      }
      uint64_t v130 = v196;
      sub_1DCD36EE0(v126, v196);
      sub_1DCD36E7C(v130, (uint64_t)v37);
      unint64_t v131 = *(void *)&v212;
      double v132 = *(double *)(*(void *)&v212 + 16);
      if (v132 == 0.0)
      {
        swift_bridgeObjectRelease();
        double v38 = MEMORY[0x1E4FBC860];
LABEL_109:
        swift_beginAccess();
        sub_1DCD36E7C((uint64_t)v37, v197);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_121;
        }
        goto LABEL_110;
      }
      uint64_t v133 = (float *)(*(void *)(v220
                                 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20))
                     + 36);
      unint64_t v227 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
      uint64_t v134 = v131 + v227;
      swift_beginAccess();
      swift_beginAccess();
      v225 = (char *)&v236 + 8;
      double v38 = MEMORY[0x1E4FBC860];
      uint64_t v135 = *(void *)(v52 + 72);
      *(double *)&v223 = COERCE_DOUBLE("coarseCategoryDistribution");
      CGFloat v222 = COERCE_DOUBLE(0x80000001DD067880);
      v224 = (unsigned int (**)(CGFloat, uint64_t, double))(MEMORY[0x1E4FBC840] + 8);
      double v136 = (long long *)v206;
      uint64_t v137 = v198;
      uint64_t v226 = v135;
      v228 = v133;
      while (1)
      {
        sub_1DCD36E7C(v134, (uint64_t)v129);
        CGFloat v139 = *v37;
        CGFloat v140 = v37[1];
        CGFloat v141 = v37[2];
        CGFloat v142 = v37[3];
        CGFloat v143 = v129[1];
        *(double *)&long long v232 = *v129;
        CGFloat v144 = v129[2];
        CGFloat v145 = v129[3];
        v248.origin.CGFloat x = v139;
        v248.origin.CGFloat y = v140;
        v248.size.double width = v141;
        v248.size.double height = v142;
        double Width = CGRectGetWidth(v248);
        CGFloat v230 = v139;
        v249.origin.CGFloat x = v139;
        CGFloat v147 = v140;
        CGFloat v148 = *(double *)&v232;
        v249.origin.CGFloat y = v147;
        v249.size.double width = v141;
        v249.size.double height = v142;
        double v149 = Width * CGRectGetHeight(v249);
        v250.origin.CGFloat x = v148;
        v250.origin.CGFloat y = v143;
        v250.size.double width = v144;
        v250.size.double height = v145;
        CGFloat v231 = CGRectGetWidth(v250);
        v251.origin.CGFloat x = v148;
        v251.origin.CGFloat y = v143;
        v251.size.double width = v144;
        v251.size.double height = v145;
        double Height = CGRectGetHeight(v251);
        float v151 = 0.0;
        *(double *)&uint64_t v229 = v149;
        if (v149 > 0.0)
        {
          double v152 = v231 * Height;
          if (v231 * Height > 0.0)
          {
            v252.origin.CGFloat x = v230;
            v252.origin.CGFloat y = v147;
            v252.size.double width = v141;
            v252.size.double height = v142;
            v257.origin.CGFloat x = v148;
            v257.origin.CGFloat y = v143;
            v257.size.double width = v144;
            v257.size.double height = v145;
            CGRect v253 = CGRectIntersection(v252, v257);
            CGFloat x = v253.origin.x;
            CGFloat y = v253.origin.y;
            CGFloat v155 = v253.size.width;
            CGFloat v156 = v253.size.height;
            BOOL IsNull = CGRectIsNull(v253);
            float v151 = 0.0;
            if (!IsNull)
            {
              v254.origin.CGFloat x = x;
              v254.origin.CGFloat y = y;
              v254.size.double width = v155;
              v254.size.double height = v156;
              double v158 = CGRectGetWidth(v254);
              v255.origin.CGFloat x = x;
              v255.origin.CGFloat y = y;
              v255.size.double width = v155;
              v255.size.double height = v156;
              CGFloat v159 = CGRectGetHeight(v255);
              float v151 = v158 * v159 / (*(double *)&v229 + v152 - v158 * v159);
            }
          }
        }
        if (*v133 >= v151)
        {
          sub_1DCD36E7C((uint64_t)v129, v211);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v38 = COERCE_DOUBLE(sub_1DCE9D7A0(0, *(void *)(*(void *)&v38 + 16) + 1, 1, *(unint64_t *)&v38));
          }
          unint64_t v167 = *(void *)(*(void *)&v38 + 16);
          unint64_t v166 = *(void *)(*(void *)&v38 + 24);
          if (v167 >= v166 >> 1) {
            double v38 = COERCE_DOUBLE(sub_1DCE9D7A0(v166 > 1, v167 + 1, 1, *(unint64_t *)&v38));
          }
          *(void *)(*(void *)&v38 + 16) = v167 + 1;
          sub_1DCD36EE0(v211, *(void *)&v38 + v227 + v167 * v135);
          sub_1DCD37070((uint64_t)v129, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          double v136 = (long long *)v206;
          goto LABEL_77;
        }
        if (qword_1EBE87190 != -1) {
          swift_once();
        }
        if (byte_1EBE87188 != 1)
        {
LABEL_103:
          uint64_t v172 = qword_1EBE871A8;
          if (qword_1EBE871C8 != -1)
          {
            swift_once();
            uint64_t v172 = qword_1EBE871A8;
          }
          goto LABEL_105;
        }
        double v160 = v38;
        id v161 = objc_msgSend(self, sel_mainBundle);
        id v162 = objc_msgSend(v161, sel_bundleIdentifier);

        if (v162)
        {
          uint64_t v163 = sub_1DD048408();
          uint64_t v165 = v164;

          if (v163 == 0xD00000000000002BLL && v165 == *(void *)&v222)
          {
            swift_bridgeObjectRelease();
LABEL_96:
            long long v169 = (uint64_t *)&off_1EAB02A48;
            if (qword_1EAB01C28 != -1)
            {
              swift_once();
              long long v169 = (uint64_t *)&off_1EAB02A48;
            }
            goto LABEL_100;
          }
          char v168 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v168) {
            goto LABEL_96;
          }
        }
        long long v169 = &qword_1EBE871E8;
        if (qword_1EBE871A0 != -1)
        {
          swift_once();
          long long v169 = &qword_1EBE871E8;
        }
LABEL_100:
        long long v170 = *(void **)(*v169 + 32);
        swift_retain();
        long long v171 = (void *)sub_1DD0483D8();
        LODWORD(v170) = objc_msgSend(v170, sel_BOOLForKey_, v171);
        swift_release();

        double v136 = (long long *)v206;
        double v38 = v160;
        if (!v170) {
          goto LABEL_103;
        }
        uint64_t v172 = qword_1EAB02B70;
        if (qword_1EAB01C80 != -1)
        {
          swift_once();
          uint64_t v172 = qword_1EAB02B70;
        }
LABEL_105:
        uint64_t v173 = v215;
        uint64_t v174 = __swift_project_value_buffer(v215, (uint64_t)v172);
        (*v217)(v137, v174, v173);
        sub_1DCD36E7C((uint64_t)v129, (uint64_t)v136);
        v175 = sub_1DD048048();
        os_log_type_t v176 = sub_1DD048848();
        if (os_log_type_enabled(v175, v176))
        {
          uint64_t v177 = swift_slowAlloc();
          *(double *)&long long v232 = v38;
          uint64_t v178 = v177;
          uint64_t v179 = swift_slowAlloc();
          uint64_t v233 = v179;
          *(_DWORD *)uint64_t v178 = v205;
          long long v180 = v136[1];
          long long v236 = *v136;
          long long v237 = v180;
          uint64_t v181 = NormalizedRect.loggingDescription.getter();
          *(void *)&long long v236 = sub_1DCED7FA0(v181, v182, &v233);
          CGFloat v231 = v132;
          sub_1DD048A28();
          swift_bridgeObjectRelease();
          sub_1DCD37070((uint64_t)v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          *(_WORD *)(v178 + 12) = 2080;
          long long v183 = *((_OWORD *)v208 + 1);
          long long v236 = *(_OWORD *)v208;
          long long v237 = v183;
          uint64_t v184 = NormalizedRect.loggingDescription.getter();
          *(void *)&long long v236 = sub_1DCED7FA0(v184, v185, &v233);
          double v132 = v231;
          uint64_t v37 = v208;
          sub_1DD048A28();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DCCF9000, v175, v176, "Merge from %s to %s", (uint8_t *)v178, 0x16u);
          swift_arrayDestroy();
          uint64_t v186 = v179;
          uint64_t v137 = v198;
          MEMORY[0x1E01B07E0](v186, -1, -1);
          uint64_t v187 = v178;
          double v38 = *(double *)&v232;
          MEMORY[0x1E01B07E0](v187, -1, -1);
        }
        else
        {
          sub_1DCD37070((uint64_t)v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        }

        (*v216)(v137, v173);
        uint64_t v138 = v218;
        uint64_t v129 = v204;
        sub_1DCF22040((uint64_t)v204, (uint64_t)v37, v218);
        sub_1DCD37070((uint64_t)v129, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCD3700C(v138, (uint64_t)v37);
        uint64_t v133 = v228;
        uint64_t v135 = v226;
LABEL_77:
        v134 += v135;
        --*(void *)&v132;
        if (v132 == 0.0)
        {
          swift_bridgeObjectRelease();
          uint64_t v52 = v209;
          goto LABEL_109;
        }
      }
    }
    CGFloat v61 = v56;
    uint64_t v62 = **(void **)&v56;
    sub_1DCD36EE0(*(void *)&v61 + *(int *)(*(void *)&v38 + 48), (uint64_t)v37);
    swift_beginAccess();
    if (((_BYTE)v37[13] & 1) == 0)
    {
      if (!*(void *)(v48 + 16)) {
        goto LABEL_18;
      }
      uint64_t v63 = sub_1DD0490A8();
      uint64_t v64 = -1 << *(unsigned char *)(v48 + 32);
      unint64_t v65 = v63 & ~v64;
      if (((*(void *)(v55 + ((v65 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v65) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v66 = *(void *)(v48 + 48);
      if (*(void *)(v66 + 8 * v65) != v62)
      {
        uint64_t v67 = ~v64;
        while (1)
        {
          unint64_t v65 = (v65 + 1) & v67;
          if (((*(void *)(v55 + ((v65 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v65) & 1) == 0) {
            break;
          }
          if (*(void *)(v66 + 8 * v65) == v62) {
            goto LABEL_3;
          }
        }
LABEL_18:
        uint64_t v68 = v62 + 1;
        if (__OFADD__(v62, 1)) {
          goto LABEL_119;
        }
        uint64_t v69 = v226;
        uint64_t v70 = *(void *)(v226 + 16);
        if (v70 < v68) {
          goto LABEL_120;
        }
        CGFloat v71 = v213;
        uint64_t v72 = v52;
        uint64_t v73 = v215;
        if (v68 != v70)
        {
          v228 = (float *)(v226
                         + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80)));
          uint64_t v52 = v62 + 1;
          uint64_t v210 = v62 + 1;
          unint64_t v227 = v70;
          while (1)
          {
            if (v52 >= v70)
            {
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
              goto LABEL_118;
            }
            if (v68 < 0) {
              goto LABEL_115;
            }
            if ((unint64_t)v52 >= *(void *)(v69 + 16)) {
              goto LABEL_116;
            }
            uint64_t v80 = (uint64_t)v228 + *(void *)(v72 + 72) * v52;
            if ((*(unsigned char *)(v80 + 104) & 1) == 0)
            {
              uint64_t v81 = v235;
              if (!*(void *)(v235 + 16)) {
                goto LABEL_41;
              }
              uint64_t v82 = sub_1DD0490A8();
              uint64_t v70 = v227;
              uint64_t v83 = -1 << *(unsigned char *)(v81 + 32);
              unint64_t v84 = v82 & ~v83;
              if (((*(void *)(v81 + 56 + ((v84 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v84) & 1) == 0) {
                goto LABEL_41;
              }
              uint64_t v85 = *(void *)(v81 + 48);
              if (*(void *)(v85 + 8 * v84) != v52) {
                break;
              }
            }
LABEL_29:
            ++v52;
            uint64_t v54 = v229;
            if (v52 == v70) {
              goto LABEL_21;
            }
          }
          uint64_t v86 = ~v83;
          while (1)
          {
            unint64_t v84 = (v84 + 1) & v86;
            if (((*(void *)(v81 + 56 + ((v84 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v84) & 1) == 0) {
              break;
            }
            if (*(void *)(v85 + 8 * v84) == v52) {
              goto LABEL_29;
            }
          }
LABEL_41:
          CGFloat v87 = *v37;
          CGFloat v88 = v37[1];
          CGFloat v89 = v37[2];
          CGFloat v90 = v37[3];
          CGFloat v91 = *(double *)(v80 + 8);
          v223 = *(const char **)v80;
          CGFloat v92 = *(double *)(v80 + 16);
          CGFloat v93 = *(double *)(v80 + 24);
          v240.origin.CGFloat x = v87;
          v240.origin.CGFloat y = v88;
          v240.size.double width = v89;
          v240.size.double height = v90;
          double v94 = CGRectGetWidth(v240);
          CGFloat v221 = v87;
          v241.origin.CGFloat x = v87;
          CGFloat v95 = v88;
          CGFloat v96 = *(double *)&v223;
          v241.origin.CGFloat y = v95;
          v241.size.double width = v89;
          v241.size.double height = v90;
          double v97 = v94 * CGRectGetHeight(v241);
          v242.origin.CGFloat x = v96;
          v242.origin.CGFloat y = v91;
          v242.size.double width = v92;
          v242.size.double height = v93;
          CGFloat v222 = CGRectGetWidth(v242);
          v243.origin.CGFloat x = v96;
          v243.origin.CGFloat y = v91;
          v243.size.double width = v92;
          v243.size.double height = v93;
          double v98 = CGRectGetHeight(v243);
          if (v97 <= 0.0 || (double v99 = v222 * v98, v99 <= 0.0))
          {
            float v104 = 0.0;
          }
          else
          {
            double v214 = v99;
            CGFloat v222 = v97;
            v244.origin.CGFloat x = v221;
            v244.origin.CGFloat y = v95;
            v244.size.double width = v89;
            v244.size.double height = v90;
            v256.origin.CGFloat x = v96;
            v256.origin.CGFloat y = v91;
            v256.size.double width = v92;
            v256.size.double height = v93;
            CGRect v245 = CGRectIntersection(v244, v256);
            CGFloat v100 = v245.origin.x;
            CGFloat v101 = v245.origin.y;
            CGFloat v102 = v245.size.width;
            CGFloat v103 = v245.size.height;
            float v104 = 0.0;
            if (!CGRectIsNull(v245))
            {
              v246.origin.CGFloat x = v100;
              v246.origin.CGFloat y = v101;
              v246.size.double width = v102;
              v246.size.double height = v103;
              double v105 = CGRectGetWidth(v246);
              v247.origin.CGFloat x = v100;
              v247.origin.CGFloat y = v101;
              v247.size.double width = v102;
              v247.size.double height = v103;
              CGFloat v106 = CGRectGetHeight(v247);
              float v104 = v105 * v106 / (v222 + v214 - v105 * v106);
            }
          }
          uint64_t v107 = *(void *)(v220 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20));
          swift_beginAccess();
          uint64_t v70 = v227;
          if (*(float *)(v107 + 32) < v104)
          {
            sub_1DCF5171C((uint64_t *)&v236, v52);
            if (qword_1EBE87190 != -1) {
              swift_once();
            }
            if (byte_1EBE87188 != 1) {
              goto LABEL_58;
            }
            if (sub_1DCDE82EC())
            {
              unint64_t v108 = (uint64_t *)&off_1EAB02A48;
              if (qword_1EAB01C28 != -1)
              {
                swift_once();
                unint64_t v108 = (uint64_t *)&off_1EAB02A48;
              }
            }
            else
            {
              unint64_t v108 = &qword_1EBE871E8;
              if (qword_1EBE871A0 != -1)
              {
                swift_once();
                unint64_t v108 = &qword_1EBE871E8;
              }
            }
            uint64_t v109 = *(void **)(*v108 + 32);
            swift_retain();
            uint64_t v110 = (void *)sub_1DD0483D8();
            LODWORD(v109) = objc_msgSend(v109, sel_BOOLForKey_, v110);
            swift_release();

            CGFloat v71 = v213;
            if (v109)
            {
              uint64_t v111 = qword_1EAB02B70;
              if (qword_1EAB01C80 != -1)
              {
                swift_once();
                uint64_t v111 = qword_1EAB02B70;
              }
            }
            else
            {
LABEL_58:
              uint64_t v111 = qword_1EBE871A8;
              if (qword_1EBE871C8 != -1)
              {
                swift_once();
                uint64_t v111 = qword_1EBE871A8;
              }
            }
            uint64_t v112 = __swift_project_value_buffer(v73, (uint64_t)v111);
            (*v217)(v71, v112, v73);
            swift_retain_n();
            uint64_t v113 = sub_1DD048048();
            os_log_type_t v114 = sub_1DD048848();
            if (os_log_type_enabled(v113, v114))
            {
              uint64_t v115 = swift_slowAlloc();
              *(double *)&v223 = COERCE_DOUBLE(swift_slowAlloc());
              uint64_t v234 = v223;
              *(_DWORD *)uint64_t v115 = v205;
              long long v236 = *(_OWORD *)v80;
              long long v237 = *(_OWORD *)(v80 + 16);
              uint64_t v116 = NormalizedRect.loggingDescription.getter();
              *(void *)&long long v236 = sub_1DCED7FA0(v116, v117, (uint64_t *)&v234);
              sub_1DD048A28();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v115 + 12) = 2080;
              long long v118 = *((_OWORD *)v37 + 1);
              long long v236 = *(_OWORD *)v37;
              long long v237 = v118;
              uint64_t v119 = NormalizedRect.loggingDescription.getter();
              *(void *)&long long v236 = sub_1DCED7FA0(v119, v120, (uint64_t *)&v234);
              uint64_t v72 = v209;
              sub_1DD048A28();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1DCCF9000, v113, v114, "Merge from %s to %s", (uint8_t *)v115, 0x16u);
              uint64_t v121 = v223;
              swift_arrayDestroy();
              CGFloat v71 = v213;
              MEMORY[0x1E01B07E0](v121, -1, -1);
              MEMORY[0x1E01B07E0](v115, -1, -1);

              uint64_t v73 = v215;
              (*v216)(v71, v215);
            }
            else
            {

              swift_release_n();
              (*v216)(v71, v73);
              uint64_t v72 = v209;
            }
            uint64_t v68 = v210;
            uint64_t v78 = v207;
            sub_1DCD36E7C(v80, v207);
            uint64_t v79 = v218;
            sub_1DCF22040(v78, (uint64_t)v37, v218);
            sub_1DCD37070(v78, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            sub_1DCD3700C(v79, (uint64_t)v37);
            double v38 = v231;
            uint64_t v69 = v226;
            uint64_t v70 = v227;
          }
          goto LABEL_29;
        }
LABEL_21:
        sub_1DCD36E7C((uint64_t)v37, v203);
        *(double *)&unint64_t v74 = v212;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          *(double *)&unint64_t v74 = COERCE_DOUBLE(sub_1DCE9D7A0(0, *(void *)(v74 + 16) + 1, 1, v74));
        }
        char v26 = v200;
        uint64_t v53 = v199;
        double v212 = *(double *)&v74;
        unint64_t v76 = *(void *)(v74 + 16);
        unint64_t v75 = *(void *)(v74 + 24);
        if (v76 >= v75 >> 1) {
          double v212 = COERCE_DOUBLE(sub_1DCE9D7A0(v75 > 1, v76 + 1, 1, *(unint64_t *)&v212));
        }
        unint64_t v77 = *(void *)&v212;
        *(void *)(*(void *)&v212 + 16) = v76 + 1;
        uint64_t v52 = v72;
        sub_1DCD36EE0(v203, v77+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(void *)(v72 + 72) * v76);
        sub_1DCD37070((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v48 = v235;
        char v50 = (char *)v232;
        goto LABEL_2;
      }
    }
LABEL_3:
    sub_1DCD37070((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    CGFloat v56 = v230;
    char v50 = (char *)v232;
  }
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  double v38 = COERCE_DOUBLE(sub_1DCE9D7A0(0, *(void *)(*(void *)&v38 + 16) + 1, 1, *(unint64_t *)&v38));
LABEL_110:
  unint64_t v189 = *(void *)(*(void *)&v38 + 16);
  unint64_t v188 = *(void *)(*(void *)&v38 + 24);
  if (v189 >= v188 >> 1) {
    double v38 = COERCE_DOUBLE(sub_1DCE9D7A0(v188 > 1, v189 + 1, 1, *(unint64_t *)&v38));
  }
  *(void *)(*(void *)&v38 + 16) = v189 + 1;
  sub_1DCD36EE0(v197, *(void *)&v38+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v189);
  sub_1DCD37070(v196, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  sub_1DCD37070((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_113:
  sub_1DCEA3DA4();
  swift_release();
  return *(void *)&v38;
}

uint64_t sub_1DCD35B3C()
{
  sub_1DCD37070(v0 + OBJC_IVAR____TtC18VisualIntelligence22RegionMergingProcessor_config, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCD35BC4()
{
  return type metadata accessor for RegionMergingProcessor();
}

uint64_t type metadata accessor for RegionMergingProcessor()
{
  uint64_t result = qword_1EBE86ED0;
  if (!qword_1EBE86ED0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCD35C18()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1DCD35CB4(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1DCD742D8(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1DCD35D5C(v5);
  *a1 = v3;
}

void sub_1DCD35D5C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v133 = *(void *)(v4 - 8);
  uint64_t v134 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v130 = (uint64_t)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v140 = (uint64_t)&v125 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v137 = (uint64_t)&v125 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v136 = (uint64_t)&v125 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_1DD048F68();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_142;
    }
    if (v12) {
      sub_1DCD36770(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_150;
  }
  uint64_t v128 = v13;
  if (v12 < 2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    unint64_t v132 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v20 = (char *)MEMORY[0x1E4FBC860];
LABEL_107:
      uint64_t v127 = v18;
      if (v21 >= 2)
      {
        uint64_t v119 = *a1;
        do
        {
          unint64_t v120 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_137;
          }
          if (!v119) {
            goto LABEL_149;
          }
          uint64_t v121 = *(void *)&v20[16 * v120 + 32];
          uint64_t v122 = *(void *)&v20[16 * v21 + 24];
          sub_1DCD369E0(v119 + *(void *)(v133 + 72) * v121, v119 + *(void *)(v133 + 72) * *(void *)&v20[16 * v21 + 16], v119 + *(void *)(v133 + 72) * v122, v132);
          if (v2) {
            break;
          }
          if (v122 < v121) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_1DCD729EC((uint64_t)v20);
          }
          if (v120 >= *((void *)v20 + 2)) {
            goto LABEL_139;
          }
          uint64_t v123 = &v20[16 * v120 + 32];
          *(void *)uint64_t v123 = v121;
          *((void *)v123 + 1) = v122;
          unint64_t v124 = *((void *)v20 + 2);
          if (v21 > v124) {
            goto LABEL_140;
          }
          memmove(&v20[16 * v21 + 16], &v20[16 * v21 + 32], 16 * (v124 - v21));
          *((void *)v20 + 2) = v124 - 1;
          unint64_t v21 = v124 - 1;
        }
        while (v124 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(void *)(v127 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v127 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1DD0486F8();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v133 + 80);
    uint64_t v127 = v16;
    unint64_t v132 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v20 = (char *)MEMORY[0x1E4FBC860];
  CGFloat v139 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    if (v19 + 1 >= v12)
    {
      uint64_t v31 = v19 + 1;
    }
    else
    {
      uint64_t v129 = *a1;
      uint64_t v24 = v129;
      uint64_t v25 = *(void *)(v133 + 72);
      uint64_t v131 = v19;
      uint64_t v26 = v136;
      sub_1DCD36E7C(v129 + v25 * v23, v136);
      uint64_t v27 = v137;
      sub_1DCD36E7C(v24 + v25 * v131, v137);
      float v28 = *(float *)(v26 + 76);
      float v29 = *(float *)(v27 + 76);
      sub_1DCD37070(v27, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v30 = v26;
      uint64_t v22 = v131;
      sub_1DCD37070(v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v31 = v22 + 2;
      uint64_t v141 = v25;
      if (v22 + 2 >= v12)
      {
        uint64_t v37 = v25;
        if (v29 >= v28) {
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v126 = v2;
        uint64_t v138 = v25 * v23;
        uint64_t v32 = v129;
        uint64_t v135 = v25 * v31;
        while (1)
        {
          uint64_t v33 = v31;
          uint64_t v34 = v136;
          sub_1DCD36E7C(v32 + v135, v136);
          uint64_t v35 = v137;
          sub_1DCD36E7C(v32 + v138, v137);
          BOOL v36 = *(float *)(v35 + 76) >= *(float *)(v34 + 76);
          sub_1DCD37070(v35, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD37070(v34, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v29 < v28 == v36) {
            break;
          }
          ++v31;
          uint64_t v37 = v141;
          v32 += v141;
          if (v12 == v33 + 1)
          {
            uint64_t v31 = v12;
            a1 = v139;
            uint64_t v2 = v126;
            uint64_t v22 = v131;
            if (v29 < v28) {
              goto LABEL_27;
            }
            goto LABEL_40;
          }
        }
        a1 = v139;
        uint64_t v2 = v126;
        uint64_t v22 = v131;
        uint64_t v37 = v141;
        if (v29 >= v28) {
          goto LABEL_40;
        }
      }
LABEL_27:
      if (v31 < v22) {
        goto LABEL_143;
      }
      if (v22 < v31)
      {
        uint64_t v135 = v12;
        uint64_t v125 = v20;
        uint64_t v38 = 0;
        uint64_t v39 = v37 * (v31 - 1);
        uint64_t v40 = v22;
        uint64_t v41 = v31 * v37;
        uint64_t v42 = v40;
        uint64_t v43 = v40 * v37;
        do
        {
          if (v42 != v31 + v38 - 1)
          {
            uint64_t v45 = v129;
            if (!v129) {
              goto LABEL_148;
            }
            unint64_t v46 = v129 + v43;
            uint64_t v138 = v129 + v39;
            sub_1DCD36EE0(v129 + v43, v130);
            if (v43 < v39 || v46 >= v45 + v41)
            {
              uint64_t v44 = v138;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v44 = v138;
              if (v43 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1DCD36EE0(v130, v44);
            a1 = v139;
            uint64_t v37 = v141;
          }
          ++v42;
          --v38;
          v39 -= v37;
          v41 -= v37;
          v43 += v37;
        }
        while (v42 < v31 + v38);
        uint64_t v20 = v125;
        uint64_t v22 = v131;
        uint64_t v12 = v135;
      }
    }
LABEL_40:
    if (v31 < v12)
    {
      if (__OFSUB__(v31, v22)) {
        goto LABEL_141;
      }
      if (v31 - v22 < v128) {
        break;
      }
    }
LABEL_58:
    if (v31 < v22) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v138 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v20 = sub_1DCD71FDC(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v68 = *((void *)v20 + 2);
    unint64_t v67 = *((void *)v20 + 3);
    unint64_t v21 = v68 + 1;
    if (v68 >= v67 >> 1) {
      uint64_t v20 = sub_1DCD71FDC((char *)(v67 > 1), v68 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    uint64_t v69 = v20 + 32;
    uint64_t v70 = &v20[16 * v68 + 32];
    uint64_t v71 = v138;
    *(void *)uint64_t v70 = v22;
    *((void *)v70 + 1) = v71;
    if (v68)
    {
      while (1)
      {
        unint64_t v72 = v21 - 1;
        if (v21 >= 4)
        {
          unint64_t v77 = &v69[16 * v21];
          uint64_t v78 = *((void *)v77 - 8);
          uint64_t v79 = *((void *)v77 - 7);
          BOOL v83 = __OFSUB__(v79, v78);
          uint64_t v80 = v79 - v78;
          if (v83) {
            goto LABEL_125;
          }
          uint64_t v82 = *((void *)v77 - 6);
          uint64_t v81 = *((void *)v77 - 5);
          BOOL v83 = __OFSUB__(v81, v82);
          uint64_t v75 = v81 - v82;
          char v76 = v83;
          if (v83) {
            goto LABEL_126;
          }
          unint64_t v84 = v21 - 2;
          uint64_t v85 = &v69[16 * v21 - 32];
          uint64_t v87 = *(void *)v85;
          uint64_t v86 = *((void *)v85 + 1);
          BOOL v83 = __OFSUB__(v86, v87);
          uint64_t v88 = v86 - v87;
          if (v83) {
            goto LABEL_128;
          }
          BOOL v83 = __OFADD__(v75, v88);
          uint64_t v89 = v75 + v88;
          if (v83) {
            goto LABEL_131;
          }
          if (v89 >= v80)
          {
            uint64_t v107 = &v69[16 * v72];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v83 = __OFSUB__(v108, v109);
            uint64_t v110 = v108 - v109;
            if (v83) {
              goto LABEL_135;
            }
            BOOL v100 = v75 < v110;
            goto LABEL_95;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v101 = *((void *)v20 + 4);
            uint64_t v102 = *((void *)v20 + 5);
            BOOL v83 = __OFSUB__(v102, v101);
            uint64_t v94 = v102 - v101;
            char v95 = v83;
            goto LABEL_89;
          }
          uint64_t v74 = *((void *)v20 + 4);
          uint64_t v73 = *((void *)v20 + 5);
          BOOL v83 = __OFSUB__(v73, v74);
          uint64_t v75 = v73 - v74;
          char v76 = v83;
        }
        if (v76) {
          goto LABEL_127;
        }
        unint64_t v84 = v21 - 2;
        CGFloat v90 = &v69[16 * v21 - 32];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v93 = __OFSUB__(v91, v92);
        uint64_t v94 = v91 - v92;
        char v95 = v93;
        if (v93) {
          goto LABEL_130;
        }
        CGFloat v96 = &v69[16 * v72];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v83 = __OFSUB__(v97, v98);
        uint64_t v99 = v97 - v98;
        if (v83) {
          goto LABEL_133;
        }
        if (__OFADD__(v94, v99)) {
          goto LABEL_134;
        }
        if (v94 + v99 >= v75)
        {
          BOOL v100 = v75 < v99;
LABEL_95:
          if (v100) {
            unint64_t v72 = v84;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v95) {
          goto LABEL_129;
        }
        CGFloat v103 = &v69[16 * v72];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v83 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v83) {
          goto LABEL_132;
        }
        if (v106 < v94) {
          goto LABEL_15;
        }
LABEL_97:
        unint64_t v111 = v72 - 1;
        if (v72 - 1 >= v21)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v112 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        uint64_t v113 = v20;
        os_log_type_t v114 = &v69[16 * v111];
        uint64_t v115 = *(void *)v114;
        uint64_t v116 = &v69[16 * v72];
        uint64_t v117 = *((void *)v116 + 1);
        sub_1DCD369E0(v112 + *(void *)(v133 + 72) * *(void *)v114, v112 + *(void *)(v133 + 72) * *(void *)v116, v112 + *(void *)(v133 + 72) * v117, v132);
        if (v2) {
          goto LABEL_118;
        }
        if (v117 < v115) {
          goto LABEL_122;
        }
        if (v72 > *((void *)v113 + 2)) {
          goto LABEL_123;
        }
        *(void *)os_log_type_t v114 = v115;
        *(void *)&v69[16 * v111 + 8] = v117;
        unint64_t v118 = *((void *)v113 + 2);
        if (v72 >= v118) {
          goto LABEL_124;
        }
        uint64_t v20 = v113;
        unint64_t v21 = v118 - 1;
        memmove(&v69[16 * v72], v116 + 16, 16 * (v118 - 1 - v72));
        *((void *)v113 + 2) = v118 - 1;
        a1 = v139;
        if (v118 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v19 = v138;
    if (v138 >= v12)
    {
      uint64_t v18 = v127;
      goto LABEL_107;
    }
  }
  if (__OFADD__(v22, v128)) {
    goto LABEL_144;
  }
  if (v22 + v128 >= v12) {
    uint64_t v47 = v12;
  }
  else {
    uint64_t v47 = v22 + v128;
  }
  if (v47 >= v22)
  {
    if (v31 != v47)
    {
      uint64_t v131 = v22;
      uint64_t v125 = v20;
      uint64_t v126 = v2;
      uint64_t v48 = *(void *)(v133 + 72);
      uint64_t v49 = v48 * (v31 - 1);
      uint64_t v135 = v48;
      uint64_t v50 = v31 * v48;
      uint64_t v129 = v47;
      do
      {
        uint64_t v52 = 0;
        uint64_t v53 = v131;
        uint64_t v138 = v31;
        while (1)
        {
          uint64_t v141 = v53;
          uint64_t v54 = *a1;
          uint64_t v55 = v50;
          uint64_t v56 = v50 + v52 + *a1;
          uint64_t v57 = a1;
          uint64_t v58 = v136;
          sub_1DCD36E7C(v56, v136);
          uint64_t v59 = v49;
          uint64_t v60 = v49 + v52 + v54;
          uint64_t v61 = v137;
          sub_1DCD36E7C(v60, v137);
          float v62 = *(float *)(v58 + 76);
          float v63 = *(float *)(v61 + 76);
          sub_1DCD37070(v61, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD37070(v58, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v63 >= v62) {
            break;
          }
          uint64_t v64 = *v57;
          if (!*v57) {
            goto LABEL_146;
          }
          uint64_t v50 = v55;
          uint64_t v49 = v59;
          uint64_t v65 = v64 + v59 + v52;
          sub_1DCD36EE0(v64 + v55 + v52, v140);
          swift_arrayInitWithTakeFrontToBack();
          sub_1DCD36EE0(v140, v65);
          v52 -= v135;
          uint64_t v53 = v141 + 1;
          uint64_t v51 = v138;
          a1 = v139;
          if (v138 == v141 + 1) {
            goto LABEL_51;
          }
        }
        uint64_t v51 = v138;
        a1 = v57;
        uint64_t v49 = v59;
        uint64_t v50 = v55;
LABEL_51:
        uint64_t v31 = v51 + 1;
        v49 += v135;
        v50 += v135;
      }
      while (v31 != v129);
      uint64_t v31 = v129;
      uint64_t v20 = v125;
      uint64_t v2 = v126;
      uint64_t v22 = v131;
    }
    goto LABEL_58;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  sub_1DD048C98();
  __break(1u);
}

void sub_1DCD36770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (float *)((char *)&v23 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (float *)((char *)&v23 - v13);
  uint64_t v28 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v31 = v15 * (v28 - 1);
    uint64_t v27 = v15;
    uint64_t v30 = v15 * v28;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v25;
    while (1)
    {
      uint64_t v18 = *a4;
      sub_1DCD36E7C(v30 + v16 + *a4, (uint64_t)v14);
      sub_1DCD36E7C(v31 + v16 + v18, (uint64_t)v10);
      float v19 = v14[19];
      float v20 = v10[19];
      sub_1DCD37070((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCD37070((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v20 >= v19)
      {
LABEL_4:
        v31 += v27;
        v30 += v27;
        if (++v28 == v24) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v21 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v22 = v21 + v31 + v16;
      sub_1DCD36EE0(v21 + v30 + v16, v29);
      swift_arrayInitWithTakeFrontToBack();
      sub_1DCD36EE0(v29, v22);
      v16 -= v27;
      if (v28 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DCD369E0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v40);
  uint64_t v9 = (float *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (float *)((char *)&v38 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      unint64_t v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v31 = a3 - v14;
          sub_1DCD36E7C(v29 - v14, (uint64_t)v12);
          unint64_t v32 = a2 - v14;
          sub_1DCD36E7C(a2 - v14, (uint64_t)v9);
          float v33 = v12[19];
          float v34 = v9[19];
          sub_1DCD37070((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD37070((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v34 >= v33)
          {
            unint64_t v35 = v41;
            v41 -= v14;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 -= v14;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v32;
          a3 -= v14;
        }
        while (v32 > v39);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1DCD36E7C(a2, (uint64_t)v12);
        sub_1DCD36E7C(a4, (uint64_t)v9);
        float v22 = v12[19];
        float v23 = v9[19];
        sub_1DCD37070((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCD37070((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v24 = v43;
        if (v23 >= v22)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_67:
    sub_1DCD720D8(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD36E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD36EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD36F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD36FAC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCD3700C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD37070(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD370D0(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE863F8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v33 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v29 = (uint64_t)&v26 - v10;
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold(0) - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v27 = v1;
    uint64_t v28 = v7;
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v17 = *(void *)(v12 + 72);
    unint64_t v31 = (void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v32 = v17;
    uint64_t v30 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v26 = a1;
    swift_bridgeObjectRetain();
    unint64_t v34 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v18 = sub_1DCD37DF4(v16, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
      MEMORY[0x1F4188790](v18);
      *(&v26 - 2) = (uint64_t)v14;
      sub_1DCD37EC4();
      sub_1DD047E78();
      (*v31)(v5, 0, 1, v6);
      sub_1DCD37F1C((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationLabelThreshold);
      if ((*v30)(v5, 1, v6) == 1)
      {
        sub_1DCD37F7C((uint64_t)v5);
      }
      else
      {
        uint64_t v19 = v29;
        sub_1DCD37FDC((uint64_t)v5, v29, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
        sub_1DCD37FDC(v19, v33, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
        unint64_t v20 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v20 = sub_1DCE9E074(0, *(void *)(v20 + 16) + 1, 1, v20);
        }
        unint64_t v22 = *(void *)(v20 + 16);
        unint64_t v21 = *(void *)(v20 + 24);
        if (v22 >= v21 >> 1) {
          unint64_t v20 = sub_1DCE9E074(v21 > 1, v22 + 1, 1, v20);
        }
        *(void *)(v20 + 16) = v22 + 1;
        unint64_t v23 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
        unint64_t v34 = v20;
        sub_1DCD37FDC(v33, v20 + v23 + *(void *)(v28 + 72) * v22, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
      }
      v16 += v32;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    if (*(void *)(v27 + 8)) {
      goto LABEL_12;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v34 = MEMORY[0x1E4FBC860];
  if (!*(void *)(v1 + 8)) {
    goto LABEL_14;
  }
LABEL_12:
  uint64_t v24 = sub_1DCDD5398(v34);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1DCD37500@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (int *)type metadata accessor for GeoFenceDomainAssignmentRule();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  MEMORY[0x1F4188790](v19 - 8);
  unint64_t v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v53 = *a2;
  uint64_t v22 = *a3;
  sub_1DCD37CF0(a1, (uint64_t)v21);
  uint64_t v23 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule.OneOf_Rule(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v21, 1, v23);
  if (result == 1)
  {
    *(void *)(a5 + 32) = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        unint64_t v25 = (int *)type metadata accessor for ObjectDetectionDomainAssignmentRule();
        *(void *)(a5 + 24) = v25;
        *(void *)(a5 + 32) = &off_1F383C790;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule;
        goto LABEL_16;
      case 2u:
        unint64_t v25 = (int *)type metadata accessor for FusionDomainAssignmentRule();
        *(void *)(a5 + 24) = v25;
        *(void *)(a5 + 32) = &off_1F383C090;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_FusionDomainAssignmentRule;
        goto LABEL_16;
      case 3u:
        unint64_t v25 = (int *)type metadata accessor for URLMatchDomainAssignmentRule();
        *(void *)(a5 + 24) = v25;
        *(void *)(a5 + 32) = &off_1F383C3D8;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_UrlMatchDomainAssignmentRule;
        goto LABEL_16;
      case 4u:
        unint64_t v25 = (int *)type metadata accessor for BoxScoreDomainAssignmentRule();
        *(void *)(a5 + 24) = v25;
        *(void *)(a5 + 32) = &off_1F383C1C0;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule;
        goto LABEL_16;
      case 5u:
        unint64_t v25 = (int *)type metadata accessor for OverlapRegionDomainAssignmentRule();
        *(void *)(a5 + 24) = v25;
        *(void *)(a5 + 32) = &off_1F383C6C0;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_OverlapRegionDomainAssignmentRule;
        goto LABEL_16;
      case 6u:
        unint64_t v25 = (int *)type metadata accessor for PetsHeadTorsoDomainAssignmentRule();
        *(void *)(a5 + 24) = v25;
        *(void *)(a5 + 32) = &off_1F383C6E0;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule;
        goto LABEL_16;
      case 7u:
        unint64_t v25 = (int *)type metadata accessor for NestedNatureDomainAssignmentRule();
        *(void *)(a5 + 24) = v25;
        *(void *)(a5 + 32) = &off_1F383C6A0;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule;
        goto LABEL_16;
      case 8u:
        sub_1DCD37FDC((uint64_t)v21, (uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
        sub_1DCD37DF4((uint64_t)v18, (uint64_t)v15, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
        uint64_t v28 = a1 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule(0) + 20);
        uint64_t v29 = *(void *)v28;
        char v30 = *(unsigned char *)(v28 + 8);
        *(void *)(a5 + 24) = v10;
        *(void *)(a5 + 32) = &off_1F383C3B8;
        uint64_t v52 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
        v12[v10[5]] = v53;
        sub_1DCD37DF4((uint64_t)v15, (uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
        unint64_t v31 = &v12[v10[6]];
        *(void *)unint64_t v31 = v29;
        v31[8] = v30;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE862C8);
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 24) = 0;
        *(unsigned char *)(v32 + 32) = -1;
        *(void *)(v32 + 56) = 0;
        *(void *)(v32 + 64) = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
        uint64_t v33 = swift_allocObject();
        *(_DWORD *)(v33 + 16) = 0;
        *(void *)(v32 + 80) = v33;
        *(void *)(v32 + 40) = sub_1DCD37DBC;
        *(void *)(v32 + 48) = a4;
        swift_retain_n();
        swift_retain();
        sub_1DCD33E90(0);
        *(void *)(v32 + 72) = 0;
        swift_release();
        uint64_t v34 = sub_1DCF31D08();
        swift_release();
        *(void *)&v12[v10[7]] = v34;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE862A0);
        uint64_t v35 = swift_allocObject();
        uint64_t v36 = v35 + *(void *)(*(void *)v35 + 152);
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B48);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 1, 1, v37);
        uint64_t v38 = (uint64_t *)(v35 + *(void *)(*(void *)v35 + 160));
        *uint64_t v38 = 0;
        v38[1] = 0;
        unint64_t v39 = (void *)(v35 + *(void *)(*(void *)v35 + 168));
        *unint64_t v39 = 0;
        v39[1] = 0;
        uint64_t v40 = *(void *)(*(void *)v35 + 184);
        uint64_t v41 = swift_allocObject();
        *(_DWORD *)(v41 + 16) = 0;
        *(void *)(v35 + v40) = v41;
        uint64_t v42 = *v38;
        *uint64_t v38 = (uint64_t)sub_1DCD37DD8;
        v38[1] = a4;
        swift_retain_n();
        swift_retain();
        sub_1DCD33E90(v42);
        *(void *)(v35 + *(void *)(*(void *)v35 + 176)) = 0;
        swift_release();
        uint64_t v43 = sub_1DCF31D08();
        swift_release_n();
        sub_1DCD37F1C((uint64_t)v15, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
        *(void *)&v12[v10[8]] = v43;
        sub_1DCD37FDC((uint64_t)v12, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for GeoFenceDomainAssignmentRule);
        return sub_1DCD37F1C((uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_GeoFenceDomainAssignmentRule);
      case 9u:
        unint64_t v25 = (int *)type metadata accessor for DomainPredictionDomainAssignmentRule();
        *(void *)(a5 + 24) = v25;
        *(void *)(a5 + 32) = &off_1F3837380;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_DomainPredictionDomainAssignmentRule;
        goto LABEL_16;
      case 0xAu:
        uint64_t v44 = type metadata accessor for StorefrontDomainAssignmentRule();
        *(void *)(a5 + 24) = v44;
        *(void *)(a5 + 32) = &off_1F383C550;
        uint64_t v45 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
        sub_1DCD37FDC((uint64_t)v21, (uint64_t)v45, type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule);
        uint64_t result = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule(0);
        uint64_t v46 = a1 + *(int *)(result + 20);
        uint64_t v47 = *(void *)v46;
        LOBYTE(v46) = *(unsigned char *)(v46 + 8);
        *((unsigned char *)v45 + *(int *)(v44 + 20)) = v53;
        uint64_t v48 = (char *)v45 + *(int *)(v44 + 24);
        *(void *)uint64_t v48 = v47;
        v48[8] = v46;
        return result;
      case 0xBu:
        unint64_t v25 = (int *)type metadata accessor for CustomDetectionDomainAssignmentRule();
        *(void *)(a5 + 24) = v25;
        *(void *)(a5 + 32) = &off_1F3840A48;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule;
        goto LABEL_16;
      default:
        unint64_t v25 = (int *)type metadata accessor for CoarseClassificationDomainAssignmentRule();
        *(void *)(a5 + 24) = v25;
        *(void *)(a5 + 32) = &off_1F383CA10;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
        uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule;
LABEL_16:
        sub_1DCD37FDC((uint64_t)v21, (uint64_t)boxed_opaque_existential_1, v27);
        uint64_t v49 = a1 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule(0) + 20);
        uint64_t v50 = *(void *)v49;
        LOBYTE(v49) = *(unsigned char *)(v49 + 8);
        *((unsigned char *)boxed_opaque_existential_1 + v25[5]) = v53;
        uint64_t v51 = (char *)boxed_opaque_existential_1 + v25[6];
        *(void *)uint64_t v51 = v50;
        v51[8] = v49;
        *(uint64_t *)((char *)boxed_opaque_existential_1 + v25[7]) = v22;
        uint64_t result = swift_bridgeObjectRetain();
        break;
    }
  }
  return result;
}

uint64_t sub_1DCD37CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

NSObject *sub_1DCD37DBC@<X0>(NSObject **a1@<X8>)
{
  return sub_1DCFD4368(a1);
}

uint64_t sub_1DCD37DD8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCFD4394(a1);
}

uint64_t sub_1DCD37DF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

float sub_1DCD37E5C(uint64_t a1)
{
  uint64_t v3 = *(float **)(v1 + 16);
  uint64_t v5 = *(void *)v3;
  uint64_t v4 = *((void *)v3 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  float result = v3[4];
  *(float *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 36) = *((unsigned char *)v3 + 20);
  return result;
}

unint64_t sub_1DCD37EC4()
{
  unint64_t result = qword_1EBE863D8;
  if (!qword_1EBE863D8)
  {
    type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE863D8);
  }
  return result;
}

uint64_t sub_1DCD37F1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD37F7C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE863F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCD37FDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_1DCD38044(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1DCD38058()
{
  return sub_1DD049108();
}

uint64_t sub_1DCD380A0()
{
  return sub_1DD0490C8();
}

uint64_t sub_1DCD380CC()
{
  return sub_1DD049108();
}

uint64_t sub_1DCD38120(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  v29[1] = *(id *)MEMORY[0x1E4F143B8];
  id v9 = objc_allocWithZone(MEMORY[0x1E4F59008]);
  sub_1DCD33F64(a1, a2);
  sub_1DCD33F64(a3, a4);
  uint64_t v10 = (void *)sub_1DD0464D8();
  uint64_t v11 = (void *)sub_1DD0464D8();
  id v12 = objc_msgSend(v9, sel_initWithPIRConfig_keyStatus_, v10, v11);
  sub_1DCD21954(a3, a4);
  sub_1DCD21954(a1, a2);

  uint64_t v13 = (void *)v4[2];
  void v4[2] = v12;

  uint64_t v14 = (void *)v4[2];
  if (v14)
  {
    uint64_t v15 = (void *)v4[3];
    v29[0] = 0;
    id v16 = v14;
    id v17 = objc_msgSend(v15, sel_setPIRConfig_error_, v16, v29);
    uint64_t v18 = v17;
    if (v29[0])
    {
      v29[0];
    }
    else
    {
      if (v17)
      {
        uint64_t v20 = sub_1DD0464E8();
        sub_1DCD21954(v20, v21);
      }
      v29[0] = 0;
      id v22 = objc_msgSend(v15, sel_generateEvaluationKey_, v29);
      if (!v29[0])
      {
        uint64_t v24 = sub_1DD0464E8();
        uint64_t v26 = v25;

        uint64_t v27 = v4[4];
        unint64_t v28 = v4[5];
        v4[4] = v24;
        v4[5] = v26;
        sub_1DCD21954(v27, v28);
        return 1;
      }
      v29[0];
    }
    swift_willThrow();
  }
  else
  {
    sub_1DCD39330();
    swift_allocError();
    *uint64_t v19 = 2;
    swift_willThrow();
  }
  return 1;
}

NSObject *sub_1DCD3833C()
{
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1DD048068();
  uint64_t v48 = *(void *)(v1 - 8);
  uint64_t v49 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v50 = (uint64_t)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1DD047C38();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v45 = sub_1DD048108();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v46 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DD048468();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD048448();
  uint64_t v9 = sub_1DD048418();
  unint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v11 >> 60 == 15) {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1DCEB2D5C(3);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  MEMORY[0x1E01AE180](v12, v14, v16, v18);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void **)(v0 + 24);
  uint64_t v20 = (void *)sub_1DD0464D8();
  unint64_t v21 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  *(void *)&v51[0] = 0;
  id v22 = objc_msgSend(v19, sel_constructPIRRequestWithKeyword_withEvaluationKey_shardId_error_, v20, 1, v21, v51);

  id v23 = *(id *)&v51[0];
  if (v22)
  {
    uint64_t v44 = v9;
    uint64_t v24 = sub_1DD0464E8();
    unint64_t v26 = v25;

    uint64_t v53 = v24;
    unint64_t v54 = v26;
    uint64_t v52 = 0;
    memset(v51, 0, sizeof(v51));
    sub_1DCD33F64(v24, v26);
    sub_1DD047C28();
    sub_1DCD392E8(&qword_1EAB02428, MEMORY[0x1E4F58FC8]);
    uint64_t v27 = v45;
    unint64_t v28 = v46;
    uint64_t v29 = v47;
    sub_1DD047E38();
    char v30 = v29;
    if (!v29)
    {
      uint64_t v42 = sub_1DD047E28();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v27);
      sub_1DCD392D4(v44, v11);
      sub_1DCD21954(v24, v26);
      return v42;
    }
    sub_1DCD392D4(v44, v11);
    sub_1DCD21954(v24, v26);
  }
  else
  {
    unint64_t v31 = v23;
    char v30 = (void *)sub_1DD046378();

    swift_willThrow();
    sub_1DCD392D4(v9, v11);
  }
  uint64_t v32 = v50;
  sub_1DCDB40EC(v50);
  id v33 = v30;
  id v34 = v30;
  uint64_t v42 = sub_1DD048048();
  os_log_type_t v35 = sub_1DD048858();
  if (os_log_type_enabled(v42, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = (void *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(void *)&v51[0] = v38;
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v53 = sub_1DCED7FA0(0xD00000000000001BLL, 0x80000001DD067F80, (uint64_t *)v51);
    sub_1DD048A28();
    *(_WORD *)(v36 + 12) = 2112;
    id v39 = v30;
    uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v53 = v40;
    sub_1DD048A28();
    *uint64_t v37 = v40;

    _os_log_impl(&dword_1DCCF9000, v42, v35, "CipherMLPIRClient.%s failed: %@", (uint8_t *)v36, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v37, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v38, -1, -1);
    MEMORY[0x1E01B07E0](v36, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v50, v49);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v32, v49);
  }
  swift_willThrow();
  return v42;
}

NSObject *sub_1DCD389DC(uint64_t a1, unint64_t a2)
{
  unint64_t v64 = a2;
  uint64_t v63 = a1;
  uint64_t v73 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1DD048068();
  uint64_t v61 = *(void *)(v2 - 8);
  uint64_t v62 = v2;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v68 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v58 = (uint64_t)&v57 - v5;
  uint64_t v6 = sub_1DD047C38();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1DD048148();
  uint64_t v60 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DD048468();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD048448();
  uint64_t v66 = sub_1DD048418();
  unint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  unint64_t v67 = v15;
  if (v15 >> 60 == 15) {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1DCEB2D5C(3);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  MEMORY[0x1E01AE180](v16, v18, v20, v22);
  swift_bridgeObjectRelease();
  uint64_t v71 = v63;
  unint64_t v72 = v64;
  uint64_t v70 = 0;
  memset(v69, 0, sizeof(v69));
  sub_1DCD33F64(v63, v64);
  sub_1DD047C28();
  sub_1DCD392E8(&qword_1EAB02420, MEMORY[0x1E4F58FE8]);
  id v23 = v65;
  sub_1DD047E38();
  uint64_t v24 = v23;
  if (v23)
  {
    sub_1DCD392D4(v66, v67);
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v29 = v68;
    sub_1DCDB40EC(v68);
    char v30 = v24;
    unint64_t v31 = v24;
    uint64_t v32 = sub_1DD048048();
    os_log_type_t v33 = sub_1DD048858();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      os_log_type_t v35 = (void *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(void *)&v69[0] = v36;
      *(_DWORD *)uint64_t v34 = 136315394;
      uint64_t v71 = sub_1DCED7FA0(0xD000000000000025, 0x80000001DD067F50, (uint64_t *)v69);
      sub_1DD048A28();
      *(_WORD *)(v34 + 12) = 2112;
      uint64_t v37 = v24;
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v71 = v38;
      sub_1DD048A28();
      *os_log_type_t v35 = v38;

      _os_log_impl(&dword_1DCCF9000, v32, v33, "CipherMLPIRClient.%s failed: %@", (uint8_t *)v34, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v35, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v36, -1, -1);
      MEMORY[0x1E01B07E0](v34, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v68, v62);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v29, v62);
    }
    swift_willThrow();
    return v32;
  }
  unint64_t v25 = v7;
  unint64_t v26 = *(void **)(v59 + 24);
  uint64_t v27 = sub_1DD047E28();
  uint64_t v28 = v66;
  uint64_t v40 = v27;
  unint64_t v42 = v41;
  unint64_t v64 = v25;
  uint64_t v65 = v9;
  uint64_t v43 = (void *)sub_1DD0464D8();
  sub_1DCD21954(v40, v42);
  unint64_t v44 = v67;
  uint64_t v45 = (void *)sub_1DD0464D8();
  uint64_t v46 = v28;
  uint64_t v47 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  *(void *)&v69[0] = 0;
  id v48 = objc_msgSend(v26, sel_decryptPIRResponse_keyword_shardId_error_, v43, v45, v47, v69);

  if (*(void *)&v69[0])
  {
    uint64_t v24 = (char *)*(id *)&v69[0];

    swift_willThrow();
    sub_1DCD392D4(v46, v44);
    (*(void (**)(char *, unint64_t))(v60 + 8))(v65, v64);
    goto LABEL_5;
  }
  unint64_t v50 = v64;
  uint64_t v49 = v65;
  if (v48)
  {
    uint64_t v32 = sub_1DD0464E8();
    sub_1DCD392D4(v66, v67);
  }
  else
  {
    uint64_t v51 = v58;
    sub_1DCDB40EC(v58);
    uint64_t v52 = sub_1DD048048();
    os_log_type_t v53 = sub_1DD048858();
    if (os_log_type_enabled(v52, v53))
    {
      unint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      *(void *)&v69[0] = v55;
      *(_DWORD *)unint64_t v54 = 136315138;
      uint64_t v71 = sub_1DCED7FA0(0xD000000000000025, 0x80000001DD067F50, (uint64_t *)v69);
      sub_1DD048A28();
      _os_log_impl(&dword_1DCCF9000, v52, v53, "CipherMLPIRClient.%s empty result", v54, 0xCu);
      swift_arrayDestroy();
      uint64_t v56 = v55;
      unint64_t v50 = v64;
      uint64_t v49 = v65;
      MEMORY[0x1E01B07E0](v56, -1, -1);
      MEMORY[0x1E01B07E0](v54, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v51, v62);
    sub_1DCD392D4(v66, v67);
    uint64_t v32 = 0;
  }
  (*(void (**)(char *, unint64_t))(v60 + 8))(v49, v50);
  return v32;
}

uint64_t sub_1DCD3920C()
{
  sub_1DCD21954(*(void *)(v0 + 32), *(void *)(v0 + 40));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CipherMLPIRClient()
{
  return self;
}

BOOL sub_1DCD39278()
{
  return *(void *)(v0 + 16) != 0;
}

uint64_t sub_1DCD39288(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return 1;
}

NSObject *sub_1DCD392A4()
{
  return sub_1DCD3833C();
}

NSObject *sub_1DCD392BC(uint64_t a1, unint64_t a2)
{
  return sub_1DCD389DC(a1, a2);
}

uint64_t sub_1DCD392D4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1DCD21954(a1, a2);
  }
  return a1;
}

uint64_t sub_1DCD392E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCD39330()
{
  unint64_t result = qword_1EAB02430;
  if (!qword_1EAB02430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02430);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CipherMLPIRClient.Error(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CipherMLPIRClient.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD394E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CipherMLPIRClient.Error()
{
  return &type metadata for CipherMLPIRClient.Error;
}

unint64_t sub_1DCD3951C()
{
  unint64_t result = qword_1EAB02438;
  if (!qword_1EAB02438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02438);
  }
  return result;
}

uint64_t dispatch thunk of S2Region.capBound.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of S2Region.rectBound.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of S2Region.contains(cell:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of S2Region.mayIntersect(cell:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t initializeWithCopy for ImageHandler(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for ImageHandler(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ImageHandler(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageHandler(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageHandler()
{
  return &type metadata for ImageHandler;
}

void sub_1DCD399B4(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v55 = *MEMORY[0x1E4F143B8];
  *(void *)&long long v48 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    unint64_t v14 = v1;
    unint64_t v16 = MEMORY[0x1E4FBC860];
    unint64_t v13 = MEMORY[0x1E4FBC860];
    unint64_t v9 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62)) {
      goto LABEL_27;
    }
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_28;
    }
    goto LABEL_32;
  }
  uint64_t v5 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  do
  {
    sub_1DCD3A3BC(v6, (uint64_t)v51);
    sub_1DCD3A3BC((uint64_t)v51, (uint64_t)v53);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85780);
    sub_1DCD3A2E0();
    if ((swift_dynamicCast() & 1) == 0) {
      uint64_t v54 = 0;
    }
    uint64_t v8 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    if (v54)
    {
      MEMORY[0x1E01AE350](v8);
      if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1DD0486E8();
      }
      sub_1DD048708();
      sub_1DD0486D8();
    }
    v6 += 40;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  unint64_t v9 = v48;
  *(void *)&long long v48 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  uint64_t v10 = v5;
  uint64_t v11 = v4;
  do
  {
    sub_1DCD3A3BC(v10, (uint64_t)v51);
    sub_1DCD3A3BC((uint64_t)v51, (uint64_t)v53);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85780);
    type metadata accessor for EspressoRequest(0);
    if ((swift_dynamicCast() & 1) == 0) {
      uint64_t v54 = 0;
    }
    uint64_t v12 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    if (v54)
    {
      MEMORY[0x1E01AE350](v12);
      if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1DD0486E8();
      }
      sub_1DD048708();
      sub_1DD0486D8();
    }
    v10 += 40;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  unint64_t v13 = v48;
  *(void *)&long long v48 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  unint64_t v14 = (void *)v47;
  do
  {
    sub_1DCD3A3BC(v5, (uint64_t)v51);
    sub_1DCD3A3BC((uint64_t)v51, (uint64_t)v53);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85780);
    type metadata accessor for E5Request();
    if ((swift_dynamicCast() & 1) == 0) {
      uint64_t v54 = 0;
    }
    uint64_t v15 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    if (v54)
    {
      MEMORY[0x1E01AE350](v15);
      if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1DD0486E8();
      }
      sub_1DD048708();
      sub_1DD0486D8();
    }
    v5 += 40;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  unint64_t v16 = v48;
  uint64_t v3 = v2;
  if (v9 >> 62) {
    goto LABEL_31;
  }
LABEL_27:
  if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_28:
    uint64_t v17 = v14[3];
    uint64_t v18 = v14[4];
    __swift_project_boxed_opaque_existential_1(v14, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_56:
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v21 = (void *)v19;
    uint64_t v22 = v14[3];
    uint64_t v23 = v14[4];
    __swift_project_boxed_opaque_existential_1(v14, v22);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    sub_1DCDB812C(MEMORY[0x1E4FBC860]);
    id v25 = objc_allocWithZone(MEMORY[0x1E4F45890]);
    type metadata accessor for VNImageOption(0);
    sub_1DCD3A364();
    unint64_t v26 = (void *)sub_1DD0482C8();
    swift_bridgeObjectRelease();
    id v27 = objc_msgSend(v25, sel_initWithCVPixelBuffer_orientation_options_, v21, v24, v26);

    sub_1DCD3A2E0();
    uint64_t v28 = (void *)sub_1DD0486A8();
    swift_bridgeObjectRelease();
    v51[0] = 0;
    unsigned int v29 = objc_msgSend(v27, sel_performRequests_error_, v28, v51);

    if (!v29)
    {
      id v31 = v51[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DD046378();

      swift_willThrow();
      return;
    }
    id v30 = v51[0];

    uint64_t v3 = 0;
    goto LABEL_42;
  }
LABEL_32:
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_34;
    }
  }
  else if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_34:
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v33)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCD3A548();
    swift_allocError();
    *(_OWORD *)uint64_t v46 = xmmword_1DD04EBD0;
    *(unsigned char *)(v46 + 16) = 3;
    swift_willThrow();
    return;
  }
LABEL_42:
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v34)
  {
    swift_bridgeObjectRelease();
    if (!(v16 >> 62))
    {
LABEL_49:
      if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_56;
      }
      goto LABEL_50;
    }
LABEL_55:
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (!v45) {
      goto LABEL_56;
    }
LABEL_50:
    sub_1DCD3A3BC(v47, (uint64_t)v53);
    uint64_t v41 = type metadata accessor for ProcessInputImageEspresso();
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = objc_msgSend(objc_allocWithZone((Class)VIImageScaler), sel_init);
    if (qword_1EBE85340 != -1) {
      swift_once();
    }
    uint64_t v43 = (uint64_t *)(qword_1EBE85B80 + 16);
    uint64_t v36 = (os_unfair_lock_s *)(qword_1EBE85B80 + 40);
    os_unfair_lock_lock((os_unfair_lock_t)(qword_1EBE85B80 + 40));
    sub_1DCDB5348(v43);
    if (!v3)
    {
      os_unfair_lock_unlock(v36);
      uint64_t v49 = v41;
      unint64_t v50 = &off_1F383C010;
      *(void *)&long long v48 = v42;
      sub_1DCD3A4DC(v53, (uint64_t)v51);
      sub_1DCD3A4DC(&v48, (uint64_t)v52);
      uint64_t v44 = sub_1DCF3D880(v16);
      swift_bridgeObjectRelease();
      sub_1DCDD07D8(v44);
      swift_bridgeObjectRelease();
      sub_1DCD3A4F4((uint64_t)v51);
      return;
    }
    goto LABEL_61;
  }
  uint64_t v35 = v3;
  sub_1DCD3A3BC(v47, (uint64_t)v53);
  uint64_t v36 = (os_unfair_lock_s *)type metadata accessor for ProcessInputImageEspresso();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = objc_msgSend(objc_allocWithZone((Class)VIImageScaler), (SEL)&selRef__cachedEventsForBundleID_);
  if (qword_1EBE85340 != -1) {
    swift_once();
  }
  uint64_t v38 = (uint64_t *)(qword_1EBE85B80 + 16);
  id v39 = (os_unfair_lock_s *)(qword_1EBE85B80 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1EBE85B80 + 40));
  sub_1DCDB5348(v38);
  if (!v35)
  {
    os_unfair_lock_unlock(v39);
    uint64_t v49 = (uint64_t)v36;
    unint64_t v50 = &off_1F383C010;
    *(void *)&long long v48 = v37;
    sub_1DCD3A420((uint64_t)v53, (uint64_t)v51);
    sub_1DCD3A4DC(&v48, (uint64_t)v52);
    uint64_t v40 = sub_1DCF3D860(v13);
    swift_bridgeObjectRelease();
    sub_1DCF3F548(v40);
    swift_bridgeObjectRelease();
    sub_1DCD3A488((uint64_t)v51);
    uint64_t v3 = 0;
    if (!(v16 >> 62)) {
      goto LABEL_49;
    }
    goto LABEL_55;
  }
  os_unfair_lock_unlock(v39);
  __break(1u);
LABEL_61:
  os_unfair_lock_unlock(v36);
  __break(1u);
}

void sub_1DCD3A2C8(uint64_t a1)
{
}

unint64_t sub_1DCD3A2E0()
{
  unint64_t result = qword_1EBE850A8;
  if (!qword_1EBE850A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE850A8);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_1DCD3A364()
{
  unint64_t result = qword_1EBE82C10;
  if (!qword_1EBE82C10)
  {
    type metadata accessor for VNImageOption(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82C10);
  }
  return result;
}

uint64_t sub_1DCD3A3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1DCD3A420(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD3A488(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCD3A4DC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1DCD3A4F4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1DCD3A548()
{
  unint64_t result = qword_1EBE848C0;
  if (!qword_1EBE848C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE848C0);
  }
  return result;
}

double NormalizedQuad.topLeft.getter()
{
  return *(double *)v0;
}

double NormalizedQuad.bottomLeft.getter()
{
  return *(double *)(v0 + 16);
}

double NormalizedQuad.bottomRight.getter()
{
  return *(double *)(v0 + 32);
}

double NormalizedQuad.topRight.getter()
{
  return *(double *)(v0 + 48);
}

void __swiftcall NormalizedQuad.init(topLeft:bottomLeft:bottomRight:topRight:)(VisualIntelligence::NormalizedQuad *__return_ptr retstr, CGPoint topLeft, CGPoint bottomLeft, CGPoint bottomRight, CGPoint topRight)
{
  retstr->topLeft.CGFloat x = topLeft.x;
  retstr->topLeft.CGFloat y = topLeft.y;
  retstr->bottomLeft.CGFloat x = bottomLeft.x;
  retstr->bottomLeft.CGFloat y = bottomLeft.y;
  retstr->bottomRight.CGFloat x = bottomRight.x;
  retstr->bottomRight.CGFloat y = bottomRight.y;
  retstr->topRight.CGFloat x = topRight.x;
  retstr->topRight.CGFloat y = topRight.y;
}

uint64_t sub_1DCD3A5D4()
{
  uint64_t result = 0x7466654C706F74;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x654C6D6F74746F62;
      break;
    case 2:
      uint64_t result = 0x69526D6F74746F62;
      break;
    case 3:
      uint64_t result = 0x7468676952706F74;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCD3A670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCD3B044(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCD3A698()
{
  return 0;
}

void sub_1DCD3A6A4(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1DCD3A6B0(uint64_t a1)
{
  unint64_t v2 = sub_1DCD3AC90();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCD3A6EC(uint64_t a1)
{
  unint64_t v2 = sub_1DCD3AC90();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t NormalizedQuad.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02440);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = v1[5];
  uint64_t v14 = v1[6];
  uint64_t v15 = v1[7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD3AC90();
  sub_1DD049138();
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  char v18 = 0;
  type metadata accessor for CGPoint(0);
  sub_1DCD3ACE4((unint64_t *)&unk_1EBE85088);
  sub_1DD048F18();
  if (!v2)
  {
    uint64_t v19 = v10;
    uint64_t v20 = v11;
    char v18 = 1;
    sub_1DD048F18();
    uint64_t v19 = v12;
    uint64_t v20 = v13;
    char v18 = 2;
    sub_1DD048F18();
    uint64_t v19 = v14;
    uint64_t v20 = v15;
    char v18 = 3;
    sub_1DD048F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t NormalizedQuad.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02450);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD3AC90();
  sub_1DD049128();
  if (!v2)
  {
    type metadata accessor for CGPoint(0);
    char v15 = 0;
    sub_1DCD3ACE4(&qword_1EAB02458);
    sub_1DD048E28();
    long long v9 = v14;
    char v15 = 1;
    sub_1DD048E28();
    long long v10 = v14;
    char v15 = 2;
    sub_1DD048E28();
    long long v12 = v14;
    char v15 = 3;
    sub_1DD048E28();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v13 = v14;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v12;
    a2[3] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1DCD3ABE8@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return NormalizedQuad.init(from:)(a1, a2);
}

uint64_t sub_1DCD3AC00(void *a1)
{
  return NormalizedQuad.encode(to:)(a1);
}

BOOL _s18VisualIntelligence14NormalizedQuadV2eeoiySbAC_ACtFZ_0(float64x2_t *a1, float64x2_t *a2)
{
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0]&& a1[2].f64[1] == a2[2].f64[1])
  {
    double v4 = a1[3].f64[1];
    BOOL v5 = a1[3].f64[0] == a2[3].f64[0];
    return v4 == a2[3].f64[1] && v5;
  }
  return result;
}

unint64_t sub_1DCD3AC90()
{
  unint64_t result = qword_1EAB02448;
  if (!qword_1EAB02448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02448);
  }
  return result;
}

uint64_t sub_1DCD3ACE4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGPoint(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for NormalizedQuad(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NormalizedQuad(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for NormalizedQuad()
{
  return &type metadata for NormalizedQuad;
}

uint64_t getEnumTagSinglePayload for NormalizedQuad.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NormalizedQuad.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD3AF04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NormalizedQuad.CodingKeys()
{
  return &type metadata for NormalizedQuad.CodingKeys;
}

unint64_t sub_1DCD3AF40()
{
  unint64_t result = qword_1EAB02460;
  if (!qword_1EAB02460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02460);
  }
  return result;
}

unint64_t sub_1DCD3AF98()
{
  unint64_t result = qword_1EAB02468;
  if (!qword_1EAB02468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02468);
  }
  return result;
}

unint64_t sub_1DCD3AFF0()
{
  unint64_t result = qword_1EAB02470;
  if (!qword_1EAB02470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02470);
  }
  return result;
}

uint64_t sub_1DCD3B044(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7466654C706F74 && a2 == 0xE700000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x654C6D6F74746F62 && a2 == 0xEA00000000007466 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69526D6F74746F62 && a2 == 0xEB00000000746867 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7468676952706F74 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DCD3B224(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = sub_1DCD43588(a1, a2, a3, a4, a5 & 1, a6, a7);
  swift_release();
  sub_1DCD43B94(a3);
  swift_release();
  return v8;
}

uint64_t sub_1DCD3B28C(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 104) = sub_1DCDB8154(MEMORY[0x1E4FBC860]);
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(void *)(v4 + 40) = a1;
  sub_1DCD3A4DC(a2, v4 + 48);
  type metadata accessor for TextDetectionRequestFactory();
  *(void *)(v4 + 16) = swift_allocObject();
  type metadata accessor for BarcodeDetectionRequestFactory();
  *(void *)(v4 + 24) = swift_allocObject();
  *(void *)(v4 + 88) = a3;
  type metadata accessor for ImageFingerprintRequestFactory();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v4 + 32) = v9;
  *(void *)(v4 + 96) = a4;
  swift_retain();
  return v4;
}

uint64_t sub_1DCD3B354@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = v6;
  uint64_t v14 = *v6;
  long long v15 = *(_OWORD *)(a1 + 144);
  long long v16 = *(_OWORD *)(a1 + 112);
  long long v84 = *(_OWORD *)(a1 + 128);
  long long v85 = v15;
  long long v17 = *(_OWORD *)(a1 + 144);
  long long v86 = *(_OWORD *)(a1 + 160);
  long long v18 = *(_OWORD *)(a1 + 80);
  long long v19 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)uint64_t v82 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)&v82[16] = v18;
  long long v20 = *(_OWORD *)(a1 + 80);
  long long v21 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)&v82[32] = *(_OWORD *)(a1 + 96);
  long long v83 = v21;
  long long v22 = *(_OWORD *)(a1 + 16);
  long long v78 = *(_OWORD *)a1;
  long long v79 = v22;
  long long v23 = *(_OWORD *)(a1 + 48);
  long long v25 = *(_OWORD *)a1;
  long long v24 = *(_OWORD *)(a1 + 16);
  long long v80 = *(_OWORD *)(a1 + 32);
  long long v81 = v23;
  long long v74 = v84;
  long long v75 = v17;
  long long v76 = *(_OWORD *)(a1 + 160);
  long long v70 = *(_OWORD *)v82;
  long long v71 = v20;
  long long v72 = *(_OWORD *)&v82[32];
  long long v73 = v16;
  long long v66 = v25;
  long long v67 = v24;
  uint64_t v87 = *(void *)(a1 + 176);
  uint64_t v77 = *(void *)(a1 + 176);
  long long v68 = v80;
  long long v69 = v19;
  uint64_t v26 = v14;
  uint64_t v27 = *(void *)(sub_1DCF22DA4() + 16);
  swift_bridgeObjectRelease();
  if (v27)
  {
    long long v74 = v84;
    long long v75 = v85;
    long long v76 = v86;
    uint64_t v77 = v87;
    long long v70 = *(_OWORD *)v82;
    long long v71 = *(_OWORD *)&v82[16];
    long long v72 = *(_OWORD *)&v82[32];
    long long v73 = v83;
    long long v66 = v78;
    long long v67 = v79;
    long long v68 = v80;
    long long v69 = v81;
    uint64_t v28 = sub_1DCF22DA4();
    swift_retain();
    sub_1DCD433F0((uint64_t)&v78);
    swift_retain();
    unsigned int v29 = (void *)sub_1DCD3B224(v28, v8, (uint64_t)&v78, a3, a4 & 1, a5, v26);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7)
    {
      if (qword_1EBE84A80 != -1) {
        swift_once();
      }
      long long v31 = xmmword_1EBE84A60;
      long long v32 = xmmword_1EBE84A70;
      long long v66 = xmmword_1EBE84A60;
      long long v67 = xmmword_1EBE84A70;
      sub_1DCD428BC(&v66, (uint64_t)a2, a5, v65);
      sub_1DCD3A3BC((uint64_t)v65, (uint64_t)&v66);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unsigned int v29 = sub_1DCE9E438(0, v29[2] + 1, 1, v29);
      }
      unint64_t v39 = v29[2];
      unint64_t v38 = v29[3];
      if (v39 >= v38 >> 1) {
        unsigned int v29 = sub_1DCE9E438((void *)(v38 > 1), v39 + 1, 1, v29);
      }
      id v29[2] = v39 + 1;
      sub_1DCD3A4DC(&v66, (uint64_t)&v29[5 * v39 + 4]);
      long long v74 = v84;
      long long v75 = v85;
      long long v76 = v86;
      uint64_t v77 = v87;
      long long v70 = *(_OWORD *)v82;
      long long v71 = *(_OWORD *)&v82[16];
      long long v72 = *(_OWORD *)&v82[32];
      long long v73 = v83;
      long long v66 = v78;
      long long v67 = v79;
      long long v68 = v80;
      long long v69 = v81;
      long long v61 = v31;
      long long v62 = v32;
      sub_1DCD403D4((uint64_t)&v66, &v61, (uint64_t)a2, a5, &v63);
      if (v64)
      {
        sub_1DCD3A4DC(&v63, (uint64_t)&v66);
        sub_1DCD3A3BC((uint64_t)&v66, (uint64_t)&v63);
        unint64_t v41 = v29[2];
        unint64_t v40 = v29[3];
        if (v41 >= v40 >> 1) {
          unsigned int v29 = sub_1DCE9E438((void *)(v40 > 1), v41 + 1, 1, v29);
        }
        id v29[2] = v41 + 1;
        sub_1DCD3A4DC(&v63, (uint64_t)&v29[5 * v41 + 4]);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
      }
      else
      {
        sub_1DCD2479C((uint64_t)&v63, &qword_1EAB024A8);
      }
      long long v74 = v84;
      long long v75 = v85;
      long long v76 = v86;
      uint64_t v77 = v87;
      long long v70 = *(_OWORD *)v82;
      long long v71 = *(_OWORD *)&v82[16];
      long long v72 = *(_OWORD *)&v82[32];
      long long v73 = v83;
      long long v66 = v78;
      long long v67 = v79;
      long long v68 = v80;
      long long v69 = v81;
      long long v61 = xmmword_1EBE84A60;
      long long v62 = xmmword_1EBE84A70;
      sub_1DCD41438((uint64_t *)&v66, (uint64_t *)&v61, a2, a5, &v63);
      if (v64)
      {
        sub_1DCD3A4DC(&v63, (uint64_t)&v66);
        sub_1DCD3A3BC((uint64_t)&v66, (uint64_t)&v63);
        unint64_t v43 = v29[2];
        unint64_t v42 = v29[3];
        if (v43 >= v42 >> 1) {
          unsigned int v29 = sub_1DCE9E438((void *)(v42 > 1), v43 + 1, 1, v29);
        }
        id v29[2] = v43 + 1;
        sub_1DCD3A4DC(&v63, (uint64_t)&v29[5 * v43 + 4]);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
      }
      else
      {
        sub_1DCD2479C((uint64_t)&v63, &qword_1EAB024A8);
      }
      *((void *)&v67 + 1) = &type metadata for BatchModelRequest;
      *(void *)&long long v68 = &off_1F383AB90;
      *(void *)&long long v66 = v29;
      swift_bridgeObjectRetain();
      sub_1DCD3F144(&v66);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
      uint64_t v44 = (void *)v8[14];
      if (v44)
      {
        id v45 = v44;
        swift_bridgeObjectRelease();
        swift_willThrow();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
      }
      else
      {
        swift_retain();
        uint64_t v46 = swift_bridgeObjectRetain();
        unint64_t v92 = sub_1DCD43704(v46, (uint64_t)v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v47 = *((void *)&v78 + 1);
        if (*((void *)&v78 + 1) == 1)
        {
          uint64_t v47 = 0;
          long long v57 = 0uLL;
          uint64_t v59 = 0;
          uint64_t v60 = 0;
          uint64_t v58 = 0;
          uint64_t v48 = v8[15];
          uint64_t v49 = v8[16];
        }
        else
        {
          uint64_t v59 = *((void *)&v81 + 1);
          uint64_t v60 = *(void *)v82;
          uint64_t v50 = v81;
          long long v51 = v79;
          uint64_t v48 = v8[15];
          uint64_t v49 = v8[16];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          long long v57 = v51;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v58 = v50;
          swift_bridgeObjectRetain();
        }
        long long v90 = *(_OWORD *)&v82[8];
        long long v91 = *(_OWORD *)&v82[24];
        sub_1DCD43B04((uint64_t)&v82[40], (uint64_t)v89, (uint64_t *)&unk_1EAB024B0);
        uint64_t v53 = v8[17];
        uint64_t v52 = v8[18];
        uint64_t v54 = v8[19];
        uint64_t v55 = v85;
        uint64_t v88 = v87;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DCD43548(v53);
        sub_1DCD43B68((uint64_t)&v88);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
        *(void *)a6 = v92;
        *(void *)(a6 + 8) = v47;
        *(_OWORD *)(a6 + 16) = v57;
        *(void *)(a6 + 32) = v48;
        *(void *)(a6 + 40) = v49;
        *(void *)(a6 + 48) = v58;
        *(void *)(a6 + 56) = v59;
        *(void *)(a6 + 64) = v60;
        long long v56 = v91;
        *(_OWORD *)(a6 + 72) = v90;
        *(_OWORD *)(a6 + 88) = v56;
        uint64_t result = sub_1DCD43B04((uint64_t)v89, a6 + 104, (uint64_t *)&unk_1EAB024B0);
        *(void *)(a6 + 128) = 0;
        *(void *)(a6 + 136) = 0xE000000000000000;
        *(void *)(a6 + 144) = v55;
        *(void *)(a6 + 152) = v53;
        *(void *)(a6 + 160) = v52;
        *(void *)(a6 + 168) = v54;
        *(void *)(a6 + 176) = v88;
      }
    }
  }
  else
  {
    long long v33 = v85;
    *(_OWORD *)(a6 + 128) = v84;
    *(_OWORD *)(a6 + 144) = v33;
    *(_OWORD *)(a6 + 160) = v86;
    *(void *)(a6 + 176) = v87;
    long long v34 = *(_OWORD *)&v82[16];
    *(_OWORD *)(a6 + 64) = *(_OWORD *)v82;
    *(_OWORD *)(a6 + 80) = v34;
    long long v35 = v83;
    *(_OWORD *)(a6 + 96) = *(_OWORD *)&v82[32];
    *(_OWORD *)(a6 + 112) = v35;
    long long v36 = v79;
    *(_OWORD *)a6 = v78;
    *(_OWORD *)(a6 + 16) = v36;
    long long v37 = v81;
    *(_OWORD *)(a6 + 32) = v80;
    *(_OWORD *)(a6 + 48) = v37;
    return sub_1DCD433F0((uint64_t)&v78);
  }
  return result;
}

uint64_t sub_1DCD3BA0C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, void *a9@<X8>)
{
  long long v36 = a8;
  uint64_t v47 = a4;
  uint64_t v48 = a7;
  uint64_t v44 = a6;
  id v45 = a9;
  uint64_t v39 = a3;
  int v43 = a5 & 1;
  uint64_t v11 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v40 + 64);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v41 = (uint64_t)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  long long v15 = (char *)&v35 - v14;
  uint64_t v46 = a1;
  uint64_t v16 = sub_1DCF2316C();
  uint64_t v17 = *(void *)(v16 + 16);
  unint64_t v42 = v15;
  if (v17)
  {
    long long v18 = (char *)(v16 + 32);
    long long v19 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      char v21 = *v18;
      v18 += 160;
      char v20 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v19 = sub_1DCE9D7D4(0, *((void *)v19 + 2) + 1, 1, v19);
      }
      unint64_t v23 = *((void *)v19 + 2);
      unint64_t v22 = *((void *)v19 + 3);
      if (v23 >= v22 >> 1) {
        long long v19 = sub_1DCE9D7D4((char *)(v22 > 1), v23 + 1, 1, v19);
      }
      *((void *)v19 + 2) = v23 + 1;
      v19[v23 + 32] = v20;
      --v17;
    }
    while (v17);
  }
  else
  {
    long long v19 = (char *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  long long v24 = *(_OWORD *)(v39 + 88);
  v49[0] = *(_OWORD *)(v39 + 72);
  v49[1] = v24;
  uint64_t v25 = a2[5];
  unint64_t v38 = a2 + 6;
  uint64_t v39 = v25;
  uint64_t v26 = a2[12];
  uint64_t v37 = a2[11];
  uint64_t v27 = swift_allocObject();
  swift_weakInit();
  uint64_t v28 = v46;
  uint64_t v29 = (uint64_t)v42;
  sub_1DCD43104(v46, (uint64_t)v42, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  uint64_t v30 = v41;
  sub_1DCD43104(v29, v41, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  unint64_t v31 = (*(unsigned __int8 *)(v40 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v27;
  sub_1DCD36EE0(v30, v32 + v31);
  swift_retain();
  uint64_t v33 = v50;
  sub_1DCD3BE00(v28, (uint64_t)v19, (uint64_t)v38, v49, v26, v39, v37, v47, v45, v43, 3, 3, v44, (uint64_t)sub_1DCD43E28, v32);
  sub_1DCD432E4(v29, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v33) {
    *long long v36 = v33;
  }
  return result;
}

uint64_t sub_1DCD3BD5C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  char v10 = *((unsigned char *)a1 + 48);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v12[0] = v4;
    v12[1] = v5;
    v12[2] = v6;
    void v12[3] = v7;
    v12[4] = v8;
    v12[5] = v9;
    char v13 = v10;
    sub_1DCD3F290((uint64_t)v12, a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCD3BE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16 = v15;
  uint64_t v265 = a7;
  uint64_t v254 = a8;
  uint64_t v247 = a6;
  uint64_t v263 = a3;
  uint64_t v264 = a5;
  uint64_t v238 = a2;
  uint64_t v229 = a9;
  uint64_t v19 = sub_1DD048068();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  unint64_t v22 = (char *)&v229 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  unint64_t v25 = (unint64_t)&v229 - v24;
  MEMORY[0x1F4188790](v26);
  v267 = (char *)&v229 - v27;
  MEMORY[0x1F4188790](v28);
  v273 = (char *)&v229 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v229 - v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82C40);
  MEMORY[0x1F4188790](v33 - 8);
  CGRect v256 = (uint64_t *)((char *)&v229 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v275 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v234 = *(void *)(v275 - 8);
  MEMORY[0x1F4188790](v275);
  v274 = (long long *)((char *)&v229 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v36);
  uint64_t v246 = (uint64_t)&v229 - v37;
  MEMORY[0x1F4188790](v38);
  CGRect v252 = (long long *)((char *)&v229 - v39);
  MEMORY[0x1F4188790](v40);
  uint64_t v245 = (uint64_t)&v229 - v41;
  MEMORY[0x1F4188790](v42);
  CGRect v249 = (_OWORD *)((char *)&v229 - v43);
  MEMORY[0x1F4188790](v44);
  uint64_t v244 = (uint64_t)&v229 - v45;
  MEMORY[0x1F4188790](v46);
  CGRect v253 = (_OWORD *)((char *)&v229 - v47);
  MEMORY[0x1F4188790](v48);
  uint64_t v243 = (uint64_t)&v229 - v49;
  MEMORY[0x1F4188790](v50);
  v284 = (long long *)((char *)&v229 - v51);
  long long v52 = *a4;
  long long v261 = a4[1];
  long long v262 = v52;
  if (qword_1EBE857F0 != -1) {
    goto LABEL_282;
  }
  while (1)
  {
    v269 = (void *)qword_1EBE9C870;
    swift_bridgeObjectRetain();
    unint64_t v53 = sub_1DCDA2560(a1);
    uint64_t v230 = *(void *)(v53 + 16);
    if (!v230) {
      break;
    }
    unint64_t v54 = 0;
    uint64_t v271 = a15;
    uint64_t v260 = a12;
    uint64_t v259 = a11;
    uint64_t v270 = a14;
    uint64_t v258 = a13;
    int v255 = a10;
    uint64_t v268 = *(void *)(v238 + 16);
    unint64_t v232 = v53 + ((*(unsigned __int8 *)(v234 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v234 + 80));
    uint64_t v257 = v238 + 32;
    uint64_t v242 = v247 + OBJC_IVAR____TtC18VisualIntelligence19DomainModelRegistry_domainModelConfig + 24;
    uint64_t v248 = v247 + OBJC_IVAR____TtC18VisualIntelligence19DomainModelRegistry_domainModelConfig + 16;
    v279 = (void (**)(char *, uint64_t))(v20 + 8);
    v280 = (void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    long long v237 = (char *)&v287 + 8;
    uint64_t v235 = v247 + OBJC_IVAR____TtC18VisualIntelligence19DomainModelRegistry_domainModelConfig + 32;
    long long v236 = (char *)&v291 + 8;
    uint64_t v251 = a1;
    uint64_t v277 = v19;
    v278 = v22;
    unint64_t v266 = v25;
    v276 = v32;
    unint64_t v231 = v53;
    while (1)
    {
      if (v54 >= *(void *)(v53 + 16)) {
        goto LABEL_281;
      }
      uint64_t v55 = *(void *)(v234 + 72);
      unint64_t v233 = v54;
      sub_1DCD43104(v232 + v55 * v54, (uint64_t)v284, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v268) {
        break;
      }
LABEL_5:
      uint64_t v20 = v233 + 1;
      sub_1DCD432E4((uint64_t)v284, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      unint64_t v54 = v20;
      unint64_t v53 = v231;
      if (v20 == v230) {
        goto LABEL_279;
      }
    }
    swift_bridgeObjectRetain();
    a1 = 0;
    while (1)
    {
      uint64_t v56 = *(unsigned __int8 *)(v257 + a1);
      long long v57 = v284[1];
      long long v293 = *v284;
      long long v294 = v57;
      long long v291 = v262;
      long long v292 = v261;
      uint64_t v285 = v56;
      LOBYTE(v290[0]) = v56;
      sub_1DCD3EA3C((CGFloat *)&v293, v263, &v291, (char *)v290, v264, v265, v259, v260, (uint64_t)v298, v258);
      if (v16)
      {
        swift_bridgeObjectRelease();
        sub_1DCD432E4((uint64_t)v284, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v58 = MEMORY[0x1E4FBC868];
      if (v255)
      {
        uint64_t v59 = (uint64_t *)v248;
        if (v254)
        {
          uint64_t v59 = (uint64_t *)v242;
          if (v254 != 1) {
            uint64_t v59 = (uint64_t *)v235;
          }
        }
        uint64_t v58 = *v59;
        swift_bridgeObjectRetain();
      }
      uint64_t v60 = a1 + 1;
      uint64_t v61 = 0xE300000000000000;
      unint64_t v62 = 7631457;
      switch(v285)
      {
        case 1:
          uint64_t v61 = 0xE600000000000000;
          unint64_t v62 = 0x65727574616ELL;
          break;
        case 2:
          uint64_t v61 = 0xE800000000000000;
          unint64_t v62 = 0x6B72616D646E616CLL;
          break;
        case 3:
          unint64_t v62 = 0x4C6C61727574616ELL;
          uint64_t v61 = 0xEF6B72616D646E61;
          break;
        case 4:
          uint64_t v61 = 0xE500000000000000;
          unint64_t v62 = 0x616964656DLL;
          break;
        case 5:
          uint64_t v61 = 0xE400000000000000;
          unint64_t v62 = 1802465122;
          break;
        case 6:
          uint64_t v61 = 0xE500000000000000;
          unint64_t v62 = 0x6D75626C61;
          break;
        case 7:
          uint64_t v61 = 0xE400000000000000;
          unint64_t v62 = 1937006947;
          break;
        case 8:
          uint64_t v61 = 0xE400000000000000;
          unint64_t v62 = 1936158564;
          break;
        case 9:
          uint64_t v61 = 0xE700000000000000;
          unsigned int v63 = 1835626081;
          goto LABEL_30;
        case 10:
          uint64_t v61 = 0xE500000000000000;
          unint64_t v62 = 0x7364726962;
          break;
        case 11:
          uint64_t v61 = 0xE700000000000000;
          unint64_t v62 = 0x73746365736E69;
          break;
        case 12:
          uint64_t v61 = 0xE800000000000000;
          unint64_t v62 = 0x73656C6974706572;
          break;
        case 13:
          uint64_t v61 = 0xE700000000000000;
          unsigned int v63 = 1835884909;
LABEL_30:
          unint64_t v62 = v63 | 0x736C6100000000;
          break;
        case 14:
          uint64_t v61 = 0xE700000000000000;
          unint64_t v62 = 0x6C657261707061;
          break;
        case 15:
          unint64_t v62 = 0x726F737365636361;
          uint64_t v61 = 0xEB00000000736569;
          break;
        case 16:
          uint64_t v61 = 0xE400000000000000;
          unint64_t v62 = 1685024614;
          break;
        case 17:
          uint64_t v61 = 0xEA0000000000746ELL;
          unint64_t v62 = 0x6F726665726F7473;
          break;
        case 18:
          unsigned int v64 = 1852270963;
          goto LABEL_38;
        case 19:
          unint64_t v62 = 0xD000000000000011;
          uint64_t v61 = 0x80000001DD066AB0;
          break;
        case 20:
          unsigned int v64 = 1869903201;
LABEL_38:
          unint64_t v62 = v64 | 0x626D795300000000;
          uint64_t v61 = 0xEA00000000006C6FLL;
          break;
        case 21:
          unint64_t v62 = 0x676F4C646E617262;
          uint64_t v61 = 0xEF6C6F626D79536FLL;
          break;
        case 22:
          uint64_t v61 = 0xE700000000000000;
          unint64_t v62 = 0x65646F63726162;
          break;
        case 23:
          unint64_t v62 = 0x727574706C756373;
          uint64_t v61 = 0xE900000000000065;
          break;
        case 24:
          uint64_t v61 = 0xE700000000000000;
          unint64_t v62 = 0x656E696C796B73;
          break;
        case 25:
          uint64_t v61 = 0xE800000000000000;
          unint64_t v62 = 0x44327463656A626FLL;
          break;
        default:
          break;
      }
      uint64_t v65 = *(void *)(v58 + 16);
      uint64_t v272 = v60;
      if (v65 && (unint64_t v66 = sub_1DCEAD1A4(v62, v61), (v67 & 1) != 0))
      {
        unint64_t v68 = v66;
        uint64_t v69 = *(void *)(v58 + 56);
        a1 = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0);
        uint64_t v70 = *(void *)(a1 - 8);
        uint64_t v32 = (char *)((a1 - 8) & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000);
        uint64_t v71 = v69 + *(void *)(v70 + 72) * v68;
        uint64_t v19 = v277;
        long long v72 = v256;
        sub_1DCD43104(v71, (uint64_t)v256, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v70 + 56))(v72, 0, 1, a1);
        unint64_t v22 = v278;
      }
      else
      {
        a1 = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0);
        uint64_t v32 = (char *)((a1 - 8) & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000);
        long long v72 = v256;
        (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(v256, 1, 1, a1);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 48))(v72, 1, a1))
      {
        sub_1DCD2479C((uint64_t)v72, &qword_1EBE82C40);
        unint64_t v25 = MEMORY[0x1E4FBC860];
        if (!(MEMORY[0x1E4FBC860] >> 62)) {
          goto LABEL_50;
        }
      }
      else
      {
        uint64_t v225 = *v72;
        swift_bridgeObjectRetain();
        sub_1DCD2479C((uint64_t)v72, &qword_1EBE82C40);
        uint64_t v226 = v247;
        swift_retain();
        unint64_t v25 = sub_1DCD42E18(v225, v226);
        swift_bridgeObjectRelease();
        swift_release();
        if (!(v25 >> 62))
        {
LABEL_50:
          uint64_t v20 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v20) {
            break;
          }
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1DD048CC8();
      swift_bridgeObjectRelease();
      if (v20) {
        break;
      }
LABEL_9:
      swift_bridgeObjectRelease();
      sub_1DCD42DC4((uint64_t)v298);
      a1 = v272;
      if (v272 == v268)
      {
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
    }
    if (v20 >= 1)
    {
      uint64_t v73 = 0;
      unint64_t v282 = v25;
      unint64_t v283 = v25 & 0xC000000000000001;
      v281 = (char *)v20;
      while (1)
      {
        if (v283)
        {
          uint64_t v74 = MEMORY[0x1E01AE890](v73, v25);
        }
        else
        {
          uint64_t v74 = *(void *)(v25 + 8 * v73 + 32);
          swift_retain();
        }
        LOBYTE(v293) = v285;
        uint64_t v75 = *((void *)v284 + 14);
        uint64_t v76 = v299;
        uint64_t v77 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(*(void *)v74 + 88);
        swift_bridgeObjectRetain();
        uint64_t v286 = v74;
        char v78 = v77(&v293, v75, v76);
        if (v16)
        {
          swift_bridgeObjectRelease();
          long long v79 = v16;
          uint64_t v16 = 0;
          if (qword_1EBE87190 != -1) {
            swift_once();
          }
          if (byte_1EBE87188 != 1) {
            goto LABEL_91;
          }
          id v80 = objc_msgSend(self, sel_mainBundle);
          id v81 = objc_msgSend(v80, sel_bundleIdentifier);

          if (!v81) {
            goto LABEL_285;
          }
          uint64_t v82 = sub_1DD048408();
          uint64_t v84 = v83;

          if (v82 == 0xD00000000000002BLL && v84 == 0x80000001DD067880)
          {
            swift_bridgeObjectRelease();
            goto LABEL_81;
          }
          char v98 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v98)
          {
LABEL_81:
            if (qword_1EAB01C28 != -1) {
              swift_once();
            }
            uint64_t v99 = (uint64_t *)&off_1EAB02A48;
          }
          else
          {
LABEL_285:
            if (qword_1EBE871A0 != -1) {
              swift_once();
            }
            uint64_t v99 = &qword_1EBE871E8;
          }
          BOOL v100 = *(void **)(*v99 + 32);
          swift_retain();
          uint64_t v101 = (void *)sub_1DD0483D8();
          LODWORD(v100) = objc_msgSend(v100, sel_BOOLForKey_, v101);
          swift_release();

          if (v100)
          {
            if (qword_1EAB01C80 != -1) {
              swift_once();
            }
            uint64_t v102 = qword_1EAB02B70;
          }
          else
          {
LABEL_91:
            if (qword_1EBE871C8 != -1) {
              swift_once();
            }
            uint64_t v102 = qword_1EBE871A8;
          }
          uint64_t v103 = __swift_project_value_buffer(v19, (uint64_t)v102);
          (*v280)(v22, v103, v19);
          id v104 = v79;
          id v105 = v79;
          uint64_t v106 = v22;
          uint64_t v107 = sub_1DD048048();
          os_log_type_t v108 = sub_1DD048858();
          if (os_log_type_enabled(v107, v108))
          {
            uint64_t v109 = swift_slowAlloc();
            uint64_t v110 = swift_slowAlloc();
            *(void *)&long long v293 = v110;
            *(_DWORD *)uint64_t v109 = 136446466;
            unint64_t v111 = 0xE300000000000000;
            uint64_t v112 = v110;
            unint64_t v113 = 7631457;
            switch(v285)
            {
              case 1:
                unint64_t v111 = 0xE600000000000000;
                unint64_t v113 = 0x65727574616ELL;
                break;
              case 2:
                unint64_t v111 = 0xE800000000000000;
                unint64_t v113 = 0x6B72616D646E616CLL;
                break;
              case 3:
                unint64_t v113 = 0x4C6C61727574616ELL;
                unint64_t v111 = 0xEF6B72616D646E61;
                break;
              case 4:
                unint64_t v111 = 0xE500000000000000;
                unint64_t v113 = 0x616964656DLL;
                break;
              case 5:
                unint64_t v111 = 0xE400000000000000;
                unint64_t v113 = 1802465122;
                break;
              case 6:
                unint64_t v111 = 0xE500000000000000;
                unint64_t v113 = 0x6D75626C61;
                break;
              case 7:
                unint64_t v111 = 0xE400000000000000;
                unint64_t v113 = 1937006947;
                break;
              case 8:
                unint64_t v111 = 0xE400000000000000;
                unint64_t v113 = 1936158564;
                break;
              case 9:
                unint64_t v111 = 0xE700000000000000;
                unsigned int v154 = 1835626081;
                goto LABEL_161;
              case 10:
                unint64_t v111 = 0xE500000000000000;
                unint64_t v113 = 0x7364726962;
                break;
              case 11:
                unint64_t v111 = 0xE700000000000000;
                unint64_t v113 = 0x73746365736E69;
                break;
              case 12:
                unint64_t v111 = 0xE800000000000000;
                unint64_t v113 = 0x73656C6974706572;
                break;
              case 13:
                unint64_t v111 = 0xE700000000000000;
                unsigned int v154 = 1835884909;
LABEL_161:
                unint64_t v113 = v154 | 0x736C6100000000;
                break;
              case 14:
                unint64_t v111 = 0xE700000000000000;
                unint64_t v113 = 0x6C657261707061;
                break;
              case 15:
                unint64_t v113 = 0x726F737365636361;
                unint64_t v111 = 0xEB00000000736569;
                break;
              case 16:
                unint64_t v111 = 0xE400000000000000;
                unint64_t v113 = 1685024614;
                break;
              case 17:
                unint64_t v111 = 0xEA0000000000746ELL;
                unint64_t v113 = 0x6F726665726F7473;
                break;
              case 18:
                unsigned int v155 = 1852270963;
                goto LABEL_169;
              case 19:
                unint64_t v113 = 0xD000000000000011;
                unint64_t v111 = 0x80000001DD066AB0;
                break;
              case 20:
                unsigned int v155 = 1869903201;
LABEL_169:
                unint64_t v113 = v155 | 0x626D795300000000;
                unint64_t v111 = 0xEA00000000006C6FLL;
                break;
              case 21:
                unint64_t v113 = 0x676F4C646E617262;
                unint64_t v111 = 0xEF6C6F626D79536FLL;
                break;
              case 22:
                unint64_t v111 = 0xE700000000000000;
                unint64_t v113 = 0x65646F63726162;
                break;
              case 23:
                unint64_t v113 = 0x727574706C756373;
                unint64_t v111 = 0xE900000000000065;
                break;
              case 24:
                unint64_t v111 = 0xE700000000000000;
                unint64_t v113 = 0x656E696C796B73;
                break;
              case 25:
                unint64_t v111 = 0xE800000000000000;
                unint64_t v113 = 0x44327463656A626FLL;
                break;
              default:
                break;
            }
            *(void *)(v109 + 4) = sub_1DCED7FA0(v113, v111, (uint64_t *)&v293);
            swift_bridgeObjectRelease();
            *(_WORD *)(v109 + 12) = 2082;
            swift_getErrorValue();
            uint64_t v156 = sub_1DCDC4040(v296, v297);
            *(void *)(v109 + 14) = sub_1DCED7FA0(v156, v157, (uint64_t *)&v293);
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_1DCCF9000, v107, v108, "Error creating model request for domain %{public}s: %{public}s", (uint8_t *)v109, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1E01B07E0](v112, -1, -1);
            MEMORY[0x1E01B07E0](v109, -1, -1);

            swift_release();
            unint64_t v22 = v278;
            uint64_t v158 = v277;
            (*v279)(v278, v277);
            uint64_t v16 = 0;
            uint64_t v19 = v158;
          }
          else
          {
            swift_release();

            (*v279)(v106, v19);
            unint64_t v22 = v106;
          }
          goto LABEL_272;
        }
        char v85 = v78;
        swift_bridgeObjectRelease();
        if (v85)
        {
          long long v86 = v276;
          if (qword_1EBE87190 != -1) {
            swift_once();
          }
          if (byte_1EBE87188 != 1) {
            goto LABEL_117;
          }
          id v87 = objc_msgSend(self, sel_mainBundle);
          id v88 = objc_msgSend(v87, sel_bundleIdentifier);

          if (!v88) {
            goto LABEL_286;
          }
          uint64_t v89 = sub_1DD048408();
          uint64_t v91 = v90;

          if (v89 == 0xD00000000000002BLL && v91 == 0x80000001DD067880)
          {
            swift_bridgeObjectRelease();
            goto LABEL_107;
          }
          char v122 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v122)
          {
LABEL_107:
            if (qword_1EAB01C28 != -1) {
              swift_once();
            }
            uint64_t v123 = (uint64_t *)&off_1EAB02A48;
          }
          else
          {
LABEL_286:
            if (qword_1EBE871A0 != -1) {
              swift_once();
            }
            uint64_t v123 = &qword_1EBE871E8;
          }
          unint64_t v124 = *(void **)(*v123 + 32);
          swift_retain();
          uint64_t v125 = (void *)sub_1DD0483D8();
          LODWORD(v124) = objc_msgSend(v124, sel_BOOLForKey_, v125);
          swift_release();

          if (v124)
          {
            if (qword_1EAB01C80 != -1) {
              swift_once();
            }
            uint64_t v126 = qword_1EAB02B70;
          }
          else
          {
LABEL_117:
            if (qword_1EBE871C8 != -1) {
              swift_once();
            }
            uint64_t v126 = qword_1EBE871A8;
          }
          uint64_t v127 = __swift_project_value_buffer(v19, (uint64_t)v126);
          (*v280)(v86, v127, v19);
          uint64_t v128 = sub_1DD048048();
          os_log_type_t v129 = sub_1DD048848();
          if (os_log_type_enabled(v128, v129))
          {
            uint64_t v130 = swift_slowAlloc();
            uint64_t v131 = swift_slowAlloc();
            *(void *)&long long v293 = v131;
            *(_DWORD *)uint64_t v130 = 136315138;
            unint64_t v132 = 0xE300000000000000;
            uint64_t v133 = v131;
            unint64_t v134 = 7631457;
            switch(v285)
            {
              case 1:
                unint64_t v132 = 0xE600000000000000;
                unint64_t v134 = 0x65727574616ELL;
                break;
              case 2:
                unint64_t v132 = 0xE800000000000000;
                unint64_t v134 = 0x6B72616D646E616CLL;
                break;
              case 3:
                unint64_t v134 = 0x4C6C61727574616ELL;
                unint64_t v132 = 0xEF6B72616D646E61;
                break;
              case 4:
                unint64_t v132 = 0xE500000000000000;
                unint64_t v134 = 0x616964656DLL;
                break;
              case 5:
                unint64_t v132 = 0xE400000000000000;
                unint64_t v134 = 1802465122;
                break;
              case 6:
                unint64_t v132 = 0xE500000000000000;
                unint64_t v134 = 0x6D75626C61;
                break;
              case 7:
                unint64_t v132 = 0xE400000000000000;
                unint64_t v134 = 1937006947;
                break;
              case 8:
                unint64_t v132 = 0xE400000000000000;
                unint64_t v134 = 1936158564;
                break;
              case 9:
                unint64_t v132 = 0xE700000000000000;
                unsigned int v159 = 1835626081;
                goto LABEL_188;
              case 10:
                unint64_t v132 = 0xE500000000000000;
                unint64_t v134 = 0x7364726962;
                break;
              case 11:
                unint64_t v132 = 0xE700000000000000;
                unint64_t v134 = 0x73746365736E69;
                break;
              case 12:
                unint64_t v132 = 0xE800000000000000;
                unint64_t v134 = 0x73656C6974706572;
                break;
              case 13:
                unint64_t v132 = 0xE700000000000000;
                unsigned int v159 = 1835884909;
LABEL_188:
                unint64_t v134 = v159 | 0x736C6100000000;
                break;
              case 14:
                unint64_t v132 = 0xE700000000000000;
                unint64_t v134 = 0x6C657261707061;
                break;
              case 15:
                unint64_t v134 = 0x726F737365636361;
                unint64_t v132 = 0xEB00000000736569;
                break;
              case 16:
                unint64_t v132 = 0xE400000000000000;
                unint64_t v134 = 1685024614;
                break;
              case 17:
                unint64_t v132 = 0xEA0000000000746ELL;
                unint64_t v134 = 0x6F726665726F7473;
                break;
              case 18:
                unsigned int v160 = 1852270963;
                goto LABEL_196;
              case 19:
                unint64_t v134 = 0xD000000000000011;
                unint64_t v132 = 0x80000001DD066AB0;
                break;
              case 20:
                unsigned int v160 = 1869903201;
LABEL_196:
                unint64_t v134 = v160 | 0x626D795300000000;
                unint64_t v132 = 0xEA00000000006C6FLL;
                break;
              case 21:
                unint64_t v134 = 0x676F4C646E617262;
                unint64_t v132 = 0xEF6C6F626D79536FLL;
                break;
              case 22:
                unint64_t v132 = 0xE700000000000000;
                unint64_t v134 = 0x65646F63726162;
                break;
              case 23:
                unint64_t v134 = 0x727574706C756373;
                unint64_t v132 = 0xE900000000000065;
                break;
              case 24:
                unint64_t v132 = 0xE700000000000000;
                unint64_t v134 = 0x656E696C796B73;
                break;
              case 25:
                unint64_t v132 = 0xE800000000000000;
                unint64_t v134 = 0x44327463656A626FLL;
                break;
              default:
                break;
            }
            *(void *)(v130 + 4) = sub_1DCED7FA0(v134, v132, (uint64_t *)&v293);
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1DCCF9000, v128, v129, "domain model results are already precomputed for %s", (uint8_t *)v130, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1E01B07E0](v133, -1, -1);
            MEMORY[0x1E01B07E0](v130, -1, -1);

            swift_release();
            (*v279)(v276, v19);
            goto LABEL_271;
          }

          swift_release();
          (*v279)(v86, v19);
LABEL_272:
          uint64_t v32 = v281;
          unint64_t v25 = v282;
          goto LABEL_273;
        }
        unint64_t v92 = v274;
        if (*((unsigned char *)v284 + *(int *)(v275 + 64)) == 1)
        {
          if (qword_1EBE87190 != -1) {
            swift_once();
          }
          if (byte_1EBE87188 != 1) {
            goto LABEL_142;
          }
          id v93 = objc_msgSend(self, sel_mainBundle);
          id v94 = objc_msgSend(v93, sel_bundleIdentifier);

          if (!v94) {
            goto LABEL_287;
          }
          uint64_t v95 = sub_1DD048408();
          uint64_t v97 = v96;

          if (v95 == 0xD00000000000002BLL && v97 == 0x80000001DD067880)
          {
            swift_bridgeObjectRelease();
            goto LABEL_132;
          }
          char v140 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v140)
          {
LABEL_132:
            if (qword_1EAB01C28 != -1) {
              swift_once();
            }
            uint64_t v141 = (uint64_t *)&off_1EAB02A48;
          }
          else
          {
LABEL_287:
            if (qword_1EBE871A0 != -1) {
              swift_once();
            }
            uint64_t v141 = &qword_1EBE871E8;
          }
          CGFloat v142 = *(void **)(*v141 + 32);
          swift_retain();
          CGFloat v143 = (void *)sub_1DD0483D8();
          LODWORD(v142) = objc_msgSend(v142, sel_BOOLForKey_, v143);
          swift_release();

          if (v142)
          {
            CGFloat v144 = v273;
            if (qword_1EAB01C80 != -1) {
              swift_once();
            }
            CGFloat v145 = qword_1EAB02B70;
          }
          else
          {
LABEL_142:
            CGFloat v144 = v273;
            if (qword_1EBE871C8 != -1) {
              swift_once();
            }
            CGFloat v145 = qword_1EBE871A8;
          }
          uint64_t v146 = __swift_project_value_buffer(v19, (uint64_t)v145);
          (*v280)(v144, v146, v19);
          CGFloat v147 = sub_1DD048048();
          os_log_type_t v148 = sub_1DD048848();
          if (os_log_type_enabled(v147, v148))
          {
            uint64_t v149 = swift_slowAlloc();
            uint64_t v150 = swift_slowAlloc();
            *(void *)&long long v293 = v150;
            *(_DWORD *)uint64_t v149 = 136315138;
            unint64_t v151 = 0xE300000000000000;
            uint64_t v152 = v150;
            unint64_t v153 = 7631457;
            switch(v285)
            {
              case 1:
                unint64_t v151 = 0xE600000000000000;
                unint64_t v153 = 0x65727574616ELL;
                break;
              case 2:
                unint64_t v151 = 0xE800000000000000;
                unint64_t v153 = 0x6B72616D646E616CLL;
                break;
              case 3:
                unint64_t v153 = 0x4C6C61727574616ELL;
                unint64_t v151 = 0xEF6B72616D646E61;
                break;
              case 4:
                unint64_t v151 = 0xE500000000000000;
                unint64_t v153 = 0x616964656DLL;
                break;
              case 5:
                unint64_t v151 = 0xE400000000000000;
                unint64_t v153 = 1802465122;
                break;
              case 6:
                unint64_t v151 = 0xE500000000000000;
                unint64_t v153 = 0x6D75626C61;
                break;
              case 7:
                unint64_t v151 = 0xE400000000000000;
                unint64_t v153 = 1937006947;
                break;
              case 8:
                unint64_t v151 = 0xE400000000000000;
                unint64_t v153 = 1936158564;
                break;
              case 9:
                unint64_t v151 = 0xE700000000000000;
                unsigned int v223 = 1835626081;
                goto LABEL_256;
              case 10:
                unint64_t v151 = 0xE500000000000000;
                unint64_t v153 = 0x7364726962;
                break;
              case 11:
                unint64_t v151 = 0xE700000000000000;
                unint64_t v153 = 0x73746365736E69;
                break;
              case 12:
                unint64_t v151 = 0xE800000000000000;
                unint64_t v153 = 0x73656C6974706572;
                break;
              case 13:
                unint64_t v151 = 0xE700000000000000;
                unsigned int v223 = 1835884909;
LABEL_256:
                unint64_t v153 = v223 | 0x736C6100000000;
                break;
              case 14:
                unint64_t v151 = 0xE700000000000000;
                unint64_t v153 = 0x6C657261707061;
                break;
              case 15:
                unint64_t v153 = 0x726F737365636361;
                unint64_t v151 = 0xEB00000000736569;
                break;
              case 16:
                unint64_t v151 = 0xE400000000000000;
                unint64_t v153 = 1685024614;
                break;
              case 17:
                unint64_t v151 = 0xEA0000000000746ELL;
                unint64_t v153 = 0x6F726665726F7473;
                break;
              case 18:
                unsigned int v224 = 1852270963;
                goto LABEL_264;
              case 19:
                unint64_t v153 = 0xD000000000000011;
                unint64_t v151 = 0x80000001DD066AB0;
                break;
              case 20:
                unsigned int v224 = 1869903201;
LABEL_264:
                unint64_t v153 = v224 | 0x626D795300000000;
                unint64_t v151 = 0xEA00000000006C6FLL;
                break;
              case 21:
                unint64_t v153 = 0x676F4C646E617262;
                unint64_t v151 = 0xEF6C6F626D79536FLL;
                break;
              case 22:
                unint64_t v151 = 0xE700000000000000;
                unint64_t v153 = 0x65646F63726162;
                break;
              case 23:
                unint64_t v153 = 0x727574706C756373;
                unint64_t v151 = 0xE900000000000065;
                break;
              case 24:
                unint64_t v151 = 0xE700000000000000;
                unint64_t v153 = 0x656E696C796B73;
                break;
              case 25:
                unint64_t v151 = 0xE800000000000000;
                unint64_t v153 = 0x44327463656A626FLL;
                break;
              default:
                break;
            }
            *(void *)(v149 + 4) = sub_1DCED7FA0(v153, v151, (uint64_t *)&v293);
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1DCCF9000, v147, v148, "Skipping model results for %s because it is a grouped region.", (uint8_t *)v149, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1E01B07E0](v152, -1, -1);
            MEMORY[0x1E01B07E0](v149, -1, -1);

            swift_release();
            (*v279)(v273, v19);
LABEL_271:
            unint64_t v22 = v278;
          }
          else
          {

            swift_release();
            (*v279)(v144, v19);
          }
          goto LABEL_272;
        }
        (*(void (**)(long long *__return_ptr, unsigned char *, uint64_t, uint64_t))(*(void *)v286 + 80))(&v293, v298, v270, v271);
        uint64_t v114 = *((void *)&v294 + 1);
        uint64_t v115 = v295;
        __swift_project_boxed_opaque_existential_1(&v293, *((uint64_t *)&v294 + 1));
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v115 + 8))(v114, v115) & 1) == 0)
        {
          if (qword_1EBE87190 != -1) {
            swift_once();
          }
          if (byte_1EBE87188 != 1) {
            goto LABEL_232;
          }
          id v135 = objc_msgSend(self, sel_mainBundle);
          id v136 = objc_msgSend(v135, sel_bundleIdentifier);

          if (!v136) {
            goto LABEL_288;
          }
          uint64_t v137 = sub_1DD048408();
          uint64_t v139 = v138;

          if (v137 == 0xD00000000000002BLL && v139 == 0x80000001DD067880)
          {
            swift_bridgeObjectRelease();
            goto LABEL_222;
          }
          char v190 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v190)
          {
LABEL_222:
            if (qword_1EAB01C28 != -1) {
              swift_once();
            }
            uint64_t v191 = (uint64_t *)&off_1EAB02A48;
          }
          else
          {
LABEL_288:
            if (qword_1EBE871A0 != -1) {
              swift_once();
            }
            uint64_t v191 = &qword_1EBE871E8;
          }
          uint64_t v192 = *(void **)(*v191 + 32);
          swift_retain();
          uint64_t v193 = (void *)sub_1DD0483D8();
          LODWORD(v192) = objc_msgSend(v192, sel_BOOLForKey_, v193);
          swift_release();

          if (v192)
          {
            if (qword_1EAB01C80 != -1) {
              swift_once();
            }
            uint64_t v194 = qword_1EAB02B70;
          }
          else
          {
LABEL_232:
            if (qword_1EBE871C8 != -1) {
              swift_once();
            }
            uint64_t v194 = qword_1EBE871A8;
          }
          uint64_t v195 = v267;
          uint64_t v196 = __swift_project_value_buffer(v19, (uint64_t)v194);
          (*v280)(v195, v196, v19);
          uint64_t v197 = v243;
          sub_1DCD43104((uint64_t)v284, v243, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD43104(v197, (uint64_t)v253, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD432E4(v197, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD3A3BC((uint64_t)&v293, (uint64_t)&v291);
          sub_1DCD3A3BC((uint64_t)&v291, (uint64_t)v290);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v291);
          uint64_t v198 = v244;
          sub_1DCD43104(v251, v244, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          v199 = v249;
          sub_1DCD43104(v198, (uint64_t)v249, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD432E4(v198, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v200 = sub_1DD048048();
          os_log_type_t v201 = sub_1DD048848();
          int v202 = v201;
          if (os_log_type_enabled(v200, v201))
          {
            uint64_t v203 = swift_slowAlloc();
            uint64_t v241 = swift_slowAlloc();
            uint64_t v289 = v241;
            *(_DWORD *)uint64_t v203 = 136316162;
            LODWORD(v240) = v202;
            char v204 = v285;
            uint64_t v205 = sub_1DCD9C35C(v285);
            CGRect v250 = 0;
            *(void *)&long long v287 = sub_1DCED7FA0(v205, v206, &v289);
            sub_1DD048A28();
            swift_bridgeObjectRelease();
            *(_WORD *)(v203 + 12) = 2080;
            uint64_t v207 = v253;
            long long v208 = v253[1];
            long long v287 = *v253;
            long long v288 = v208;
            uint64_t v209 = NormalizedRect.loggingDescription.getter();
            *(void *)&long long v287 = sub_1DCED7FA0(v209, v210, &v289);
            sub_1DD048A28();
            swift_bridgeObjectRelease();
            sub_1DCD432E4((uint64_t)v207, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            *(_WORD *)(v203 + 22) = 2080;
            uint64_t v211 = sub_1DCD9C35C(v204);
            *(void *)&long long v287 = sub_1DCED7FA0(v211, v212, &v289);
            sub_1DD048A28();
            swift_bridgeObjectRelease();
            *(_WORD *)(v203 + 32) = 2080;
            sub_1DCD3A3BC((uint64_t)v290, (uint64_t)&v287);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85748);
            uint64_t v213 = sub_1DD048478();
            *(void *)&long long v287 = sub_1DCED7FA0(v213, v214, &v289);
            sub_1DD048A28();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v290);
            *(_WORD *)(v203 + 42) = 2080;
            uint64_t v215 = v249;
            long long v216 = v249[1];
            long long v287 = *v249;
            long long v288 = v216;
            uint64_t v217 = NormalizedRect.loggingDescription.getter();
            *(void *)&long long v287 = sub_1DCED7FA0(v217, v218, &v289);
            unint64_t v22 = v278;
            sub_1DD048A28();
            swift_bridgeObjectRelease();
            uint64_t v16 = v250;
            uint64_t v19 = v277;
            sub_1DCD432E4((uint64_t)v215, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            _os_log_impl(&dword_1DCCF9000, v200, (os_log_type_t)v240, "Register search model request %s for %s with %s: %s. Input region is %s", (uint8_t *)v203, 0x34u);
            uint64_t v219 = v241;
            swift_arrayDestroy();
            MEMORY[0x1E01B07E0](v219, -1, -1);
            MEMORY[0x1E01B07E0](v203, -1, -1);
          }
          else
          {
            sub_1DCD432E4((uint64_t)v253, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v290);
            sub_1DCD432E4((uint64_t)v199, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          }

          (*v279)(v267, v19);
          uint64_t v32 = v281;
          unint64_t v25 = v282;
          sub_1DCD3A3BC((uint64_t)&v293, (uint64_t)&v291);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v269 = sub_1DCE9E438(0, v269[2] + 1, 1, v269);
          }
          unint64_t v221 = v269[2];
          unint64_t v220 = v269[3];
          if (v221 >= v220 >> 1) {
            v269 = sub_1DCE9E438((void *)(v220 > 1), v221 + 1, 1, v269);
          }
          CGFloat v222 = v269;
          v269[2] = v221 + 1;
          sub_1DCD3A4DC(&v291, (uint64_t)&v222[5 * v221 + 4]);
          swift_release();
          goto LABEL_243;
        }
        unint64_t v116 = v266;
        if (qword_1EBE87190 != -1) {
          swift_once();
        }
        if (byte_1EBE87188 != 1)
        {
LABEL_214:
          if (qword_1EBE871C8 != -1) {
            swift_once();
          }
          uint64_t v165 = qword_1EBE871A8;
          goto LABEL_217;
        }
        id v117 = objc_msgSend(self, sel_mainBundle);
        id v118 = objc_msgSend(v117, sel_bundleIdentifier);

        if (v118)
        {
          uint64_t v119 = sub_1DD048408();
          uint64_t v121 = v120;

          if (v119 == 0xD00000000000002BLL && v121 == 0x80000001DD067880)
          {
            swift_bridgeObjectRelease();
LABEL_204:
            if (qword_1EAB01C28 != -1) {
              swift_once();
            }
            id v162 = (uint64_t *)&off_1EAB02A48;
            goto LABEL_210;
          }
          char v161 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v161) {
            goto LABEL_204;
          }
        }
        if (qword_1EBE871A0 != -1) {
          swift_once();
        }
        id v162 = &qword_1EBE871E8;
LABEL_210:
        uint64_t v163 = *(void **)(*v162 + 32);
        swift_retain();
        uint64_t v164 = (void *)sub_1DD0483D8();
        LODWORD(v163) = objc_msgSend(v163, sel_BOOLForKey_, v164);
        swift_release();

        unint64_t v116 = v266;
        if (!v163) {
          goto LABEL_214;
        }
        if (qword_1EAB01C80 != -1) {
          swift_once();
        }
        uint64_t v165 = qword_1EAB02B70;
LABEL_217:
        unint64_t v166 = v252;
        uint64_t v167 = __swift_project_value_buffer(v19, (uint64_t)v165);
        (*v280)((char *)v116, v167, v19);
        uint64_t v168 = v245;
        sub_1DCD43104((uint64_t)v284, v245, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCD43104(v168, (uint64_t)v166, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCD432E4(v168, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v169 = v246;
        sub_1DCD43104(v251, v246, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCD43104(v169, (uint64_t)v92, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v170 = v266;
        sub_1DCD432E4(v169, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        long long v171 = sub_1DD048048();
        os_log_type_t v172 = sub_1DD048848();
        int v173 = v172;
        if (os_log_type_enabled(v171, v172))
        {
          uint64_t v174 = swift_slowAlloc();
          os_log_t v240 = v171;
          uint64_t v175 = v174;
          uint64_t v241 = swift_slowAlloc();
          v290[0] = v241;
          *(_DWORD *)uint64_t v175 = 136315906;
          int v239 = v173;
          char v176 = v285;
          uint64_t v177 = sub_1DCD9C35C(v285);
          CGRect v250 = 0;
          *(void *)&long long v291 = sub_1DCED7FA0(v177, v178, v290);
          sub_1DD048A28();
          swift_bridgeObjectRelease();
          *(_WORD *)(v175 + 12) = 2080;
          uint64_t v179 = v252;
          long long v180 = v252[1];
          long long v291 = *v252;
          long long v292 = v180;
          uint64_t v181 = NormalizedRect.loggingDescription.getter();
          *(void *)&long long v291 = sub_1DCED7FA0(v181, v182, v290);
          sub_1DD048A28();
          swift_bridgeObjectRelease();
          sub_1DCD432E4((uint64_t)v179, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          *(_WORD *)(v175 + 22) = 2080;
          uint64_t v183 = sub_1DCD9C35C(v176);
          *(void *)&long long v291 = sub_1DCED7FA0(v183, v184, v290);
          sub_1DD048A28();
          swift_bridgeObjectRelease();
          *(_WORD *)(v175 + 32) = 2080;
          long long v185 = v92[1];
          long long v291 = *v92;
          long long v292 = v185;
          uint64_t v186 = NormalizedRect.loggingDescription.getter();
          *(void *)&long long v291 = sub_1DCED7FA0(v186, v187, v290);
          unint64_t v22 = v278;
          sub_1DD048A28();
          swift_bridgeObjectRelease();
          uint64_t v16 = v250;
          uint64_t v19 = v277;
          sub_1DCD432E4((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          os_log_t v188 = v240;
          _os_log_impl(&dword_1DCCF9000, v240, (os_log_type_t)v239, "Empty model request: %s for %s with %s. Input region is %s", (uint8_t *)v175, 0x2Au);
          uint64_t v189 = v241;
          swift_arrayDestroy();
          MEMORY[0x1E01B07E0](v189, -1, -1);
          MEMORY[0x1E01B07E0](v175, -1, -1);

          swift_release();
          (*v279)((char *)v266, v19);
        }
        else
        {
          swift_release();
          sub_1DCD432E4((uint64_t)v252, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD432E4((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

          (*v279)((char *)v170, v19);
        }
        uint64_t v32 = v281;
        unint64_t v25 = v282;
LABEL_243:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v293);
LABEL_273:
        if (v32 == (char *)++v73) {
          goto LABEL_9;
        }
      }
    }
    __break(1u);
LABEL_281:
    __break(1u);
LABEL_282:
    swift_once();
  }
LABEL_279:
  uint64_t result = swift_bridgeObjectRelease();
  v228 = v229;
  v229[3] = &type metadata for BatchModelRequest;
  v228[4] = &off_1F383AB90;
  void *v228 = v269;
  return result;
}

uint64_t sub_1DCD3EA3C@<X0>(CGFloat *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v41 = a8;
  uint64_t v40 = a7;
  uint64_t v37 = a5;
  uint64_t v39 = a2;
  uint64_t v16 = sub_1DD048068();
  uint64_t v38 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  long long v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v19 = *a1;
  CGFloat v20 = a1[1];
  CGFloat v21 = a1[2];
  CGFloat v22 = a1[3];
  char v23 = *a4;
  v43.origin.CGFloat x = *a1;
  v43.origin.CGFloat y = v20;
  v43.size.double width = v21;
  v43.size.double height = v22;
  long long v24 = a3[1];
  v42[0] = *a3;
  v42[1] = v24;
  char v45 = v23;
  uint64_t result = sub_1DCD3ECD0((uint64_t)v44, &v43, v42, &v45, a6);
  if (!v10)
  {
    uint64_t v26 = result;
    uint64_t v36 = v16;
    uint64_t v27 = v44[0];
    uint64_t v28 = v44[1];
    uint64_t v29 = v44[2];
    uint64_t v30 = v44[3];
    sub_1DCDB40EC((uint64_t)v18);
    uint64_t v31 = sub_1DD048048();
    os_log_type_t v32 = sub_1DD048848();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 134217984;
      v44[0] = v26;
      sub_1DD048A28();
      _os_log_impl(&dword_1DCCF9000, v31, v32, "SignalsExtractionProcessor: createModelInput maxResults set to %ld", v33, 0xCu);
      MEMORY[0x1E01B07E0](v33, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v36);
    sub_1DCD3A3BC(v39, a9);
    *(void *)(a9 + 40) = v27;
    *(void *)(a9 + 48) = v28;
    *(void *)(a9 + 56) = v29;
    *(void *)(a9 + 64) = v30;
    *(CGFloat *)(a9 + 72) = v19;
    *(CGFloat *)(a9 + 80) = v20;
    *(CGFloat *)(a9 + 88) = v21;
    *(CGFloat *)(a9 + 96) = v22;
    *(unsigned char *)(a9 + 104) = v23;
    uint64_t v34 = v37;
    *(void *)(a9 + 112) = v26;
    *(void *)(a9 + 120) = v34;
    uint64_t v35 = v41;
    *(void *)(a9 + 128) = v40;
    *(void *)(a9 + 136) = v35;
    *(void *)(a9 + 144) = a10;
    swift_retain();
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1DCD3ECD0(uint64_t a1, CGRect *a2, _OWORD *a3, unsigned char *a4, uint64_t a5)
{
  CGFloat x = a2->origin.x;
  CGFloat y = a2->origin.y;
  CGFloat width = a2->size.width;
  CGFloat height = a2->size.height;
  switch(*a4)
  {
    case 1:
      uint64_t v10 = *(void *)(a5 + 16);
      MEMORY[0x1F4188790](a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87180);
      sub_1DD0488A8();
      if (v22)
      {
        sub_1DCD42F78();
        swift_allocError();
        *uint64_t v11 = 0xD00000000000001DLL;
        uint64_t v12 = ".nature .maxResults not found";
        goto LABEL_11;
      }
      uint64_t v10 = v21;
      *(CGFloat *)a1 = x;
      *(CGFloat *)(a1 + 8) = y;
      goto LABEL_16;
    case 2:
    case 3:
    case 0x17:
    case 0x18:
      long long v13 = a3[1];
      *(_OWORD *)a1 = *a3;
      *(_OWORD *)(a1 + 16) = v13;
      return 1;
    case 7:
    case 8:
      uint64_t v10 = *(void *)(a5 + 16);
      MEMORY[0x1F4188790](a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87180);
      sub_1DD0488A8();
      if ((v22 & 1) == 0) {
        goto LABEL_8;
      }
      sub_1DCD42F78();
      swift_allocError();
      *uint64_t v11 = 0xD00000000000001BLL;
      uint64_t v12 = ".pets .maxResults not found";
      goto LABEL_11;
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
      uint64_t v10 = *(void *)(a5 + 16);
      MEMORY[0x1F4188790](a1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87180);
      sub_1DD0488A8();
      if (v22)
      {
        sub_1DCD42F78();
        swift_allocError();
        *uint64_t v11 = 0xD000000000000024;
        uint64_t v12 = ".nature .maxResultsAnimals not found";
LABEL_11:
        v11[1] = (unint64_t)(v12 - 32) | 0x8000000000000000;
        swift_willThrow();
      }
      else
      {
LABEL_8:
        uint64_t v10 = v21;
        v23.origin.CGFloat x = x;
        v23.origin.CGFloat y = y;
        v23.size.CGFloat width = width;
        v23.size.CGFloat height = height;
        CGFloat v16 = CGRectGetWidth(v23) * -0.3 * 0.5;
        v24.origin.CGFloat x = x;
        v24.origin.CGFloat y = y;
        v24.size.CGFloat width = width;
        v24.size.CGFloat height = height;
        CGFloat v17 = CGRectGetHeight(v24) * -0.3 * 0.5;
        v25.origin.CGFloat x = x;
        v25.origin.CGFloat y = y;
        v25.size.CGFloat width = width;
        v25.size.CGFloat height = height;
        CGRect v26 = CGRectInset(v25, v16, v17);
        v30.origin.CGFloat x = 0.0;
        v30.origin.CGFloat y = 0.0;
        v30.size.CGFloat width = 1.0;
        v30.size.CGFloat height = 1.0;
        *(CGRect *)a1 = CGRectIntersection(v26, v30);
      }
      break;
    case 0x11:
      double v14 = CGRectGetWidth(*a2);
      double v15 = -0.3;
      goto LABEL_13;
    case 0x12:
    case 0x13:
    case 0x14:
      double v14 = CGRectGetWidth(*a2);
      double v15 = -0.1;
LABEL_13:
      CGFloat v18 = v14 * v15 * 0.5;
      v27.origin.CGFloat x = x;
      v27.origin.CGFloat y = y;
      v27.size.CGFloat width = width;
      v27.size.CGFloat height = height;
      CGFloat v19 = CGRectGetHeight(v27) * v15 * 0.5;
      v28.origin.CGFloat x = x;
      v28.origin.CGFloat y = y;
      v28.size.CGFloat width = width;
      v28.size.CGFloat height = height;
      CGRect v29 = CGRectInset(v28, v18, v19);
      v31.origin.CGFloat x = 0.0;
      v31.origin.CGFloat y = 0.0;
      v31.size.CGFloat width = 1.0;
      v31.size.CGFloat height = 1.0;
      *(CGRect *)a1 = CGRectIntersection(v29, v31);
      uint64_t v10 = 1;
      break;
    default:
      *(CGFloat *)a1 = x;
      *(CGFloat *)(a1 + 8) = y;
      uint64_t v10 = 1;
LABEL_16:
      *(CGFloat *)(a1 + 16) = width;
      *(CGFloat *)(a1 + 24) = height;
      break;
  }
  return v10;
}

uint64_t sub_1DCD3F144(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  if (*(void *)(v6 + 16))
  {
    uint64_t v7 = (void *)(v1 + 48);
    uint64_t v8 = *(void *)(v1 + 72);
    uint64_t v9 = *(void *)(v3 + 80);
    __swift_project_boxed_opaque_existential_1(v7, v8);
    sub_1DCF3AFAC(v8, v9, v14);
    if (v2)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = v15;
      uint64_t v13 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v6, v12, v13);
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1DCD3A548();
    swift_allocError();
    *(_OWORD *)uint64_t v11 = xmmword_1DD04EDF0;
    *(unsigned char *)(v11 + 16) = 3;
    return swift_willThrow();
  }
}

void sub_1DCD3F290(uint64_t a1, uint64_t a2)
{
  os_log_type_t v148 = (double *)a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v124 - v8;
  uint64_t v10 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (double *)((char *)&v124 - v15);
  MEMORY[0x1F4188790](v17);
  CGFloat v19 = (char *)&v124 - v18;
  uint64_t v20 = sub_1DD048068();
  MEMORY[0x1F4188790](v20);
  MEMORY[0x1F4188790](v21);
  MEMORY[0x1F4188790](v22);
  CGRect v28 = *(void **)a1;
  if (*(unsigned char *)(a1 + 48) == 1)
  {
    CGRect v29 = *(void **)(v2 + 112);
    *(void *)(v2 + 112) = v28;
    id v30 = v28;
  }
  else
  {
    id v135 = v16;
    unint64_t v134 = v9;
    uint64_t v139 = v27;
    uint64_t v133 = v13;
    uint64_t v131 = (long long *)v19;
    uint64_t v143 = v23;
    uint64_t v144 = v11;
    uint64_t v142 = v26;
    uint64_t v147 = v25;
    uint64_t v145 = v10;
    uint64_t v132 = v2;
    id v136 = v6;
    uint64_t v31 = *(void *)(a1 + 8);
    uint64_t v32 = *(void *)(a1 + 16);
    uint64_t v33 = *(void *)(a1 + 24);
    uint64_t v34 = *(void *)(a1 + 32);
    uint64_t v35 = *(void *)(a1 + 40);
    uint64_t v36 = (char *)&v124 - v24;
    sub_1DCDB40EC((uint64_t)&v124 - v24);
    sub_1DCD43350(v28, v31, v32, v33, v34, v35, 0);
    sub_1DCD43350(v28, v31, v32, v33, v34, v35, 0);
    sub_1DCD43350(v28, v31, v32, v33, v34, v35, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1DD048048();
    int v38 = sub_1DD048848();
    BOOL v39 = os_log_type_enabled(v37, (os_log_type_t)v38);
    uint64_t v146 = v35;
    uint64_t v141 = v32;
    uint64_t v140 = v33;
    if (v39)
    {
      LODWORD(v128) = v38;
      uint64_t v130 = v28;
      os_log_t v129 = v37;
      uint64_t v138 = v36;
      uint64_t v40 = v31;
      uint64_t v41 = (_DWORD *)swift_slowAlloc();
      uint64_t v127 = swift_slowAlloc();
      uint64_t v154 = v127;
      uint64_t v42 = v41;
      *uint64_t v41 = 136315394;
      int64_t v43 = *(void *)(v35 + 16);
      uint64_t v44 = MEMORY[0x1E4FBC860];
      if (v43)
      {
        *(void *)&long long v150 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1DCFC4948(0, v43, 0);
        uint64_t v44 = v150;
        char v45 = (uint64_t *)(v35 + 48);
        do
        {
          uint64_t v46 = *(v45 - 2);
          uint64_t v47 = *(v45 - 1);
          uint64_t v48 = *v45;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v49 = sub_1DCD9EAF0(v46, v47, v48);
          uint64_t v51 = v50;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)&long long v150 = v44;
          unint64_t v53 = *(void *)(v44 + 16);
          unint64_t v52 = *(void *)(v44 + 24);
          if (v53 >= v52 >> 1)
          {
            sub_1DCFC4948(v52 > 1, v53 + 1, 1);
            uint64_t v44 = v150;
          }
          *(void *)(v44 + 16) = v53 + 1;
          uint64_t v54 = v44 + 16 * v53;
          *(void *)(v54 + 32) = v49;
          *(void *)(v54 + 40) = v51;
          v45 += 3;
          --v43;
        }
        while (v43);
        uint64_t v35 = v146;
        swift_bridgeObjectRelease();
        uint64_t v33 = v140;
      }
      uint64_t v57 = MEMORY[0x1E01AE380](v44, MEMORY[0x1E4FBB1A0]);
      unint64_t v59 = v58;
      swift_bridgeObjectRelease();
      *(void *)&long long v150 = sub_1DCED7FA0(v57, v59, &v154);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      uint64_t v60 = v130;
      uint64_t v31 = v40;
      uint64_t v61 = v40;
      uint64_t v32 = v141;
      sub_1DCD433A0(v130, v61, v141, v33, v34, v35, 0);
      sub_1DCD433A0(v60, v31, v32, v33, v34, v35, 0);
      *((_WORD *)v42 + 6) = 2080;
      *(void *)&long long v150 = v60;
      *((void *)&v150 + 1) = v31;
      *(void *)&long long v151 = v32;
      *((void *)&v151 + 1) = v33;
      uint64_t v62 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v150 = sub_1DCED7FA0(v62, v63, &v154);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD433A0(v60, v31, v32, v33, v34, v35, 0);
      sub_1DCD433A0(v60, v31, v32, v33, v34, v35, 0);
      os_log_t v64 = v129;
      _os_log_impl(&dword_1DCCF9000, v129, (os_log_type_t)v128, "Search extracted classifications %s from %s", (uint8_t *)v42, 0x16u);
      uint64_t v65 = v127;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v65, -1, -1);
      unint64_t v66 = v42;
      CGRect v28 = v60;
      MEMORY[0x1E01B07E0](v66, -1, -1);

      uint64_t v55 = *(void (**)(char *, uint64_t))(v147 + 8);
      uint64_t v56 = v138;
    }
    else
    {
      sub_1DCD433A0(v28, v31, v32, v33, v34, v35, 0);
      sub_1DCD433A0(v28, v31, v32, v33, v34, v35, 0);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v55 = *(void (**)(char *, uint64_t))(v147 + 8);
      uint64_t v56 = v36;
    }
    uint64_t v67 = v143;
    v55(v56, v143);
    uint64_t v68 = v139;
    sub_1DCDB40EC(v139);
    sub_1DCD43350(v28, v31, v32, v33, v34, v35, 0);
    sub_1DCD43350(v28, v31, v32, v33, v34, v35, 0);
    sub_1DCD43350(v28, v31, v32, v33, v34, v35, 0);
    sub_1DCD43350(v28, v31, v32, v33, v34, v35, 0);
    uint64_t v69 = sub_1DD048048();
    LODWORD(v129) = sub_1DD048848();
    BOOL v70 = os_log_type_enabled(v69, (os_log_type_t)v129);
    uint64_t v137 = v31;
    uint64_t v138 = (char *)v55;
    if (v70)
    {
      os_log_t v128 = v69;
      uint64_t v71 = (_DWORD *)swift_slowAlloc();
      uint64_t v126 = swift_slowAlloc();
      uint64_t v154 = v126;
      uint64_t v127 = (uint64_t)v71;
      *uint64_t v71 = 136315394;
      int64_t v72 = *(void *)(v34 + 16);
      uint64_t v73 = MEMORY[0x1E4FBC860];
      if (v72)
      {
        uint64_t v130 = v28;
        uint64_t v149 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1DCFC4948(0, v72, 0);
        uint64_t v73 = v149;
        uint64_t v125 = v34;
        uint64_t v74 = v34 + 48;
        uint64_t v75 = MEMORY[0x1E4FBB470];
        do
        {
          *(void *)&long long v150 = 0;
          *((void *)&v150 + 1) = 0xE000000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1DD048B98();
          swift_bridgeObjectRelease();
          *(void *)&long long v150 = 0x4E52556C65646F6DLL;
          *((void *)&v150 + 1) = 0xEA0000000000203ALL;
          swift_bridgeObjectRetain();
          sub_1DD048548();
          swift_bridgeObjectRelease();
          sub_1DD048548();
          uint64_t v76 = swift_bridgeObjectRetain();
          MEMORY[0x1E01AE380](v76, v75);
          sub_1DD048548();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          long long v77 = v150;
          uint64_t v149 = v73;
          unint64_t v79 = *(void *)(v73 + 16);
          unint64_t v78 = *(void *)(v73 + 24);
          if (v79 >= v78 >> 1)
          {
            sub_1DCFC4948(v78 > 1, v79 + 1, 1);
            uint64_t v73 = v149;
          }
          v74 += 24;
          *(void *)(v73 + 16) = v79 + 1;
          *(_OWORD *)(v73 + 16 * v79 + 32) = v77;
          --v72;
        }
        while (v72);
        uint64_t v34 = v125;
        swift_bridgeObjectRelease();
        CGRect v28 = v130;
        uint64_t v31 = v137;
        uint64_t v32 = v141;
        uint64_t v33 = v140;
      }
      uint64_t v80 = v127;
      uint64_t v81 = MEMORY[0x1E01AE380](v73, MEMORY[0x1E4FBB1A0]);
      unint64_t v83 = v82;
      swift_bridgeObjectRelease();
      *(void *)&long long v150 = sub_1DCED7FA0(v81, v83, &v154);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      uint64_t v35 = v146;
      sub_1DCD433A0(v28, v31, v32, v33, v34, v146, 0);
      sub_1DCD433A0(v28, v31, v32, v33, v34, v35, 0);
      *(_WORD *)(v80 + 12) = 2080;
      *(void *)&long long v150 = v28;
      *((void *)&v150 + 1) = v31;
      *(void *)&long long v151 = v32;
      *((void *)&v151 + 1) = v33;
      uint64_t v84 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v150 = sub_1DCED7FA0(v84, v85, &v154);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD433A0(v28, v31, v32, v33, v34, v35, 0);
      sub_1DCD433A0(v28, v31, v32, v33, v34, v35, 0);
      os_log_t v86 = v128;
      _os_log_impl(&dword_1DCCF9000, v128, (os_log_type_t)v129, "Search extracted embeddings %s from %s", (uint8_t *)v80, 0x16u);
      uint64_t v87 = v126;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v87, -1, -1);
      MEMORY[0x1E01B07E0](v80, -1, -1);

      uint64_t v67 = v143;
      ((void (*)(uint64_t, uint64_t))v138)(v139, v143);
    }
    else
    {
      sub_1DCD433A0(v28, v31, v32, v33, v34, v35, 0);
      sub_1DCD433A0(v28, v31, v32, v33, v34, v35, 0);
      sub_1DCD433A0(v28, v31, v32, v33, v34, v35, 0);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v55((char *)v68, v67);
    }
    sub_1DCDB40EC(v142);
    id v88 = v148;
    uint64_t v89 = v131;
    sub_1DCD43104((uint64_t)v148, (uint64_t)v131, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD43350(v28, v31, v32, v33, v34, v35, 0);
    sub_1DCD43350(v28, v31, v32, v33, v34, v35, 0);
    uint64_t v90 = sub_1DD048048();
    os_log_type_t v91 = sub_1DD048848();
    LODWORD(v139) = v91;
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = swift_slowAlloc();
      uint64_t v130 = (void *)swift_slowAlloc();
      uint64_t v154 = (uint64_t)v130;
      *(_DWORD *)uint64_t v92 = 136315394;
      *(void *)&long long v150 = v28;
      *((void *)&v150 + 1) = v31;
      *(void *)&long long v151 = v32;
      *((void *)&v151 + 1) = v33;
      os_log_t v129 = v90;
      uint64_t v93 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v150 = sub_1DCED7FA0(v93, v94, &v154);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD433A0(v28, v31, v32, v33, v34, v146, 0);
      sub_1DCD433A0(v28, v31, v32, v33, v34, v146, 0);
      *(_WORD *)(v92 + 12) = 2080;
      long long v95 = v89[1];
      long long v150 = *v89;
      long long v151 = v95;
      uint64_t v96 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v150 = sub_1DCED7FA0(v96, v97, &v154);
      id v88 = v148;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD432E4((uint64_t)v89, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      os_log_t v98 = v129;
      _os_log_impl(&dword_1DCCF9000, v129, (os_log_type_t)v139, "Merge signals from %s to %s", (uint8_t *)v92, 0x16u);
      uint64_t v99 = v130;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v99, -1, -1);
      uint64_t v100 = v92;
      uint64_t v35 = v146;
      MEMORY[0x1E01B07E0](v100, -1, -1);

      uint64_t v101 = v142;
      uint64_t v102 = v143;
    }
    else
    {
      sub_1DCD433A0(v28, v31, v32, v33, v34, v35, 0);
      sub_1DCD433A0(v28, v31, v32, v33, v34, v35, 0);
      sub_1DCD432E4((uint64_t)v89, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

      uint64_t v101 = v142;
      uint64_t v102 = v67;
    }
    ((void (*)(uint64_t, uint64_t))v138)(v101, v102);
    CGFloat v103 = *v88;
    CGFloat v104 = v88[1];
    uint64_t v105 = v132;
    CGFloat v107 = v88[2];
    CGFloat v106 = v88[3];
    swift_beginAccess();
    uint64_t v108 = *(void *)(v105 + 104);
    uint64_t v109 = v135;
    if (*(void *)(v108 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v110 = sub_1DCEAD508(v103, v104, v107, v106);
      uint64_t v112 = v144;
      if (v111)
      {
        uint64_t v113 = (uint64_t)v134;
        sub_1DCD43104(*(void *)(v108 + 56) + *(void *)(v144 + 72) * v110, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v114 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 56);
        uint64_t v115 = v113;
        uint64_t v116 = 0;
      }
      else
      {
        uint64_t v114 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56);
        uint64_t v113 = (uint64_t)v134;
        uint64_t v115 = (uint64_t)v134;
        uint64_t v116 = 1;
      }
      uint64_t v117 = v145;
      v114(v115, v116, 1, v145);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v112 = v144;
      uint64_t v117 = v145;
      uint64_t v114 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56);
      uint64_t v113 = (uint64_t)v134;
      v114((uint64_t)v134, 1, 1, v145);
    }
    uint64_t v118 = (uint64_t)v133;
    sub_1DCD43104((uint64_t)v148, (uint64_t)v133, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v113, 1, v117) == 1)
    {
      sub_1DCD36EE0(v118, (uint64_t)v109);
      sub_1DCD2479C(v113, &qword_1EBE855F0);
    }
    else
    {
      sub_1DCD432E4(v118, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCD36EE0(v113, (uint64_t)v109);
    }
    *(void *)&long long v150 = v28;
    *((void *)&v150 + 1) = v137;
    *(void *)&long long v151 = v141;
    *((void *)&v151 + 1) = v140;
    uint64_t v152 = v34;
    uint64_t v153 = v35;
    sub_1DCF23310((uint64_t)&v150);
    CGFloat v119 = *v109;
    CGFloat v120 = v109[1];
    CGFloat v121 = v109[2];
    CGFloat v122 = v109[3];
    uint64_t v123 = (uint64_t)v136;
    sub_1DCD43104((uint64_t)v109, (uint64_t)v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    v114(v123, 0, 1, v145);
    swift_beginAccess();
    sub_1DCEE7860(v123, v119, v120, v121, v122);
    swift_endAccess();
    sub_1DCD432E4((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  }
}

uint64_t sub_1DCD403D4@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v107 = a4;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v105 = (uint64_t)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for TextDetectionRequestFactory.Input();
  MEMORY[0x1F4188790](v104);
  CGFloat v106 = (_OWORD *)((char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_1DD048068();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v103 = (uint64_t)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  CGFloat v19 = (char *)&v92 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02488);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v111 = (uint64_t *)a3;
  if (*(unsigned char *)(a3 + 8) != 1)
  {
LABEL_85:
    sub_1DCDB40EC((uint64_t)v19);
    unint64_t v82 = sub_1DD048048();
    os_log_type_t v83 = sub_1DD048848();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v84 = 0;
      _os_log_impl(&dword_1DCCF9000, v82, v83, "Skip OCR extraction as no requested domain requires.", v84, 2u);
      MEMORY[0x1E01B07E0](v84, -1, -1);
    }

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v19, v14);
LABEL_88:
    a5[4] = 0;
    *(_OWORD *)a5 = 0u;
    *((_OWORD *)a5 + 1) = 0u;
    return result;
  }
  uint64_t v100 = v19;
  uint64_t v23 = *(void *)(a1 + 32);
  long long v99 = *a2;
  long long v98 = a2[1];
  uint64_t v24 = *(void *)(a1 + 8);
  *(void *)&long long v117 = *(void *)a1;
  uint64_t v101 = v24;
  *((void *)&v117 + 1) = v24;
  long long v118 = *(_OWORD *)(a1 + 16);
  uint64_t v102 = v23;
  *(void *)CGFloat v119 = v23;
  *(_OWORD *)&v119[8] = *(_OWORD *)(a1 + 40);
  *(_OWORD *)&v119[24] = *(_OWORD *)(a1 + 56);
  *(_OWORD *)&v119[88] = *(_OWORD *)(a1 + 120);
  *(_OWORD *)&v119[104] = *(_OWORD *)(a1 + 136);
  *(_OWORD *)&v119[120] = *(_OWORD *)(a1 + 152);
  long long v120 = *(_OWORD *)(a1 + 168);
  *(_OWORD *)&v119[40] = *(_OWORD *)(a1 + 72);
  *(_OWORD *)&v119[56] = *(_OWORD *)(a1 + 88);
  *(_OWORD *)&v119[72] = *(_OWORD *)(a1 + 104);
  uint64_t v25 = sub_1DCF22DA4();
  uint64_t v108 = *(void *)(v25 + 16);
  if (!v108)
  {
    swift_bridgeObjectRelease();
LABEL_84:
    CGFloat v19 = v100;
    goto LABEL_85;
  }
  uint64_t v93 = v15;
  uint64_t v94 = v14;
  uint64_t v95 = v6;
  unint64_t v97 = a5;
  uint64_t v26 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v27 = 0;
  uint64_t v113 = 0;
  uint64_t v28 = *(void *)(v26 - 8);
  unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v96 = v25;
  uint64_t v110 = v25 + v29 + 48;
  uint64_t v109 = *(void *)(v28 + 72);
LABEL_6:
  uint64_t v112 = v27;
  uint64_t v30 = *(void *)(v110 + v109 * v27);
  uint64_t v31 = *(void *)(v30 + 16);
  if (v31)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = v31 - 1;
    uint64_t v33 = 32;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    while (1)
    {
      long long v35 = *(_OWORD *)(v30 + v33);
      long long v118 = *(_OWORD *)(v30 + v33 + 16);
      long long v117 = v35;
      long long v36 = *(_OWORD *)(v30 + v33 + 32);
      long long v37 = *(_OWORD *)(v30 + v33 + 48);
      long long v38 = *(_OWORD *)(v30 + v33 + 80);
      *(_OWORD *)&v119[32] = *(_OWORD *)(v30 + v33 + 64);
      *(_OWORD *)&v119[48] = v38;
      *(_OWORD *)CGFloat v119 = v36;
      *(_OWORD *)&v119[16] = v37;
      long long v39 = *(_OWORD *)(v30 + v33 + 96);
      long long v40 = *(_OWORD *)(v30 + v33 + 112);
      long long v41 = *(_OWORD *)(v30 + v33 + 128);
      *(_OWORD *)&v119[109] = *(_OWORD *)(v30 + v33 + 141);
      *(_OWORD *)&v119[80] = v40;
      *(_OWORD *)&v119[96] = v41;
      *(_OWORD *)&v119[64] = v39;
      if (HIBYTE(v40) == 1)
      {
        sub_1DCD32CC8((uint64_t)&v117);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v116 = v34;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1DCFC4A08(0, *(void *)(v34 + 16) + 1, 1);
          uint64_t v34 = v116;
        }
        unint64_t v44 = *(void *)(v34 + 16);
        unint64_t v43 = *(void *)(v34 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_1DCFC4A08(v43 > 1, v44 + 1, 1);
          uint64_t v34 = v116;
        }
        *(void *)(v34 + 16) = v44 + 1;
        char v45 = (_OWORD *)(v34 + 160 * v44);
        long long v46 = v118;
        v45[2] = v117;
        v45[3] = v46;
        long long v47 = *(_OWORD *)v119;
        long long v48 = *(_OWORD *)&v119[16];
        long long v49 = *(_OWORD *)&v119[48];
        v45[6] = *(_OWORD *)&v119[32];
        v45[7] = v49;
        v45[4] = v47;
        v45[5] = v48;
        long long v50 = *(_OWORD *)&v119[64];
        long long v51 = *(_OWORD *)&v119[80];
        long long v52 = *(_OWORD *)&v119[96];
        *(_OWORD *)((char *)v45 + 173) = *(_OWORD *)&v119[109];
        v45[9] = v51;
        v45[10] = v52;
        v45[8] = v50;
      }
      if (!v32) {
        break;
      }
      --v32;
      v33 += 160;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  *(void *)&long long v117 = v34;
  swift_retain();
  uint64_t v53 = v113;
  sub_1DCF23B0C((uint64_t *)&v117);
  uint64_t v113 = v53;
  if (v53)
  {
    swift_release();
    __break(1u);
    JUMPOUT(0x1DCD41128);
  }
  swift_release();
  uint64_t v54 = v117;
  uint64_t v55 = *(void *)(v117 + 16);
  if (!v55) {
    goto LABEL_5;
  }
  uint64_t v56 = *v111;
  swift_retain();
  uint64_t v57 = 32;
  uint64_t v115 = v56;
  while (2)
  {
    uint64_t v58 = 0xE300000000000000;
    unint64_t v59 = 7631457;
    switch(*(unsigned char *)(v54 + v57))
    {
      case 1:
        uint64_t v58 = 0xE600000000000000;
        unint64_t v59 = 0x65727574616ELL;
        if (*(void *)(v56 + 16)) {
          goto LABEL_72;
        }
        goto LABEL_75;
      case 2:
        uint64_t v58 = 0xE800000000000000;
        unint64_t v59 = 0x6B72616D646E616CLL;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 3:
        uint64_t v58 = 0xEF6B72616D646E61;
        unint64_t v59 = 0x4C6C61727574616ELL;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 4:
        uint64_t v58 = 0xE500000000000000;
        unint64_t v59 = 0x616964656DLL;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 5:
        uint64_t v58 = 0xE400000000000000;
        unint64_t v59 = 1802465122;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 6:
        uint64_t v58 = 0xE500000000000000;
        unint64_t v59 = 0x6D75626C61;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 7:
        uint64_t v58 = 0xE400000000000000;
        unint64_t v59 = 1937006947;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 8:
        uint64_t v58 = 0xE400000000000000;
        unint64_t v59 = 1936158564;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 9:
        uint64_t v58 = 0xE700000000000000;
        uint64_t v61 = 1835626081;
        goto LABEL_53;
      case 0xA:
        uint64_t v58 = 0xE500000000000000;
        unint64_t v59 = 0x7364726962;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 0xB:
        uint64_t v58 = 0xE700000000000000;
        unint64_t v60 = 0x746365736E69;
        goto LABEL_54;
      case 0xC:
        uint64_t v58 = 0xE800000000000000;
        unint64_t v59 = 0x73656C6974706572;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 0xD:
        uint64_t v58 = 0xE700000000000000;
        uint64_t v61 = 1835884909;
LABEL_53:
        unint64_t v60 = v61 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_54:
        unint64_t v59 = v60 & 0xFFFFFFFFFFFFLL | 0x73000000000000;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 0xE:
        uint64_t v58 = 0xE700000000000000;
        unint64_t v59 = 0x6C657261707061;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 0xF:
        uint64_t v58 = 0xEB00000000736569;
        unint64_t v59 = 0x726F737365636361;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 0x10:
        uint64_t v58 = 0xE400000000000000;
        unint64_t v59 = 1685024614;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 0x11:
        uint64_t v58 = 0xEA0000000000746ELL;
        unint64_t v59 = 0x6F726665726F7473;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 0x12:
        unsigned int v63 = 1852270963;
        goto LABEL_65;
      case 0x13:
        uint64_t v58 = 0x80000001DD066AB0;
        unint64_t v59 = 0xD000000000000011;
        goto LABEL_71;
      case 0x14:
        unsigned int v63 = 1869903201;
LABEL_65:
        unint64_t v59 = v63 | 0x626D795300000000;
        uint64_t v58 = 0xEA00000000006C6FLL;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 0x15:
        uint64_t v58 = 0xEF6C6F626D79536FLL;
        unint64_t v59 = 0x676F4C646E617262;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 0x16:
        uint64_t v58 = 0xE700000000000000;
        uint64_t v62 = 0x646F63726162;
        goto LABEL_68;
      case 0x17:
        uint64_t v58 = 0xE900000000000065;
        unint64_t v59 = 0x727574706C756373;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 0x18:
        uint64_t v58 = 0xE700000000000000;
        uint64_t v62 = 0x6E696C796B73;
LABEL_68:
        unint64_t v59 = v62 & 0xFFFFFFFFFFFFLL | 0x65000000000000;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      case 0x19:
        uint64_t v58 = 0xE800000000000000;
        unint64_t v59 = 0x44327463656A626FLL;
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
        goto LABEL_72;
      default:
LABEL_71:
        if (!*(void *)(v56 + 16)) {
          goto LABEL_75;
        }
LABEL_72:
        unint64_t v64 = sub_1DCEAD1A4(v59, v58);
        if (v65)
        {
          unint64_t v66 = v64;
          uint64_t v114 = v58;
          uint64_t v67 = (uint64_t)v22;
          uint64_t v68 = v54;
          uint64_t v69 = *(void *)(v56 + 56);
          uint64_t v70 = type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
          uint64_t v71 = *(void *)(v70 - 8);
          uint64_t v72 = v69 + *(void *)(v71 + 72) * v66;
          uint64_t v54 = v68;
          uint64_t v22 = (char *)v67;
          sub_1DCD43104(v72, v67, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v67, 0, 1, v70);
        }
        else
        {
LABEL_75:
          uint64_t v70 = type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v22, 1, 1, v70);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 48))(v22, 1, v70) == 1)
        {
          sub_1DCD2479C((uint64_t)v22, &qword_1EAB02488);
          goto LABEL_22;
        }
        char v73 = *v22;
        sub_1DCD432E4((uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
        if ((v73 & 1) == 0)
        {
LABEL_22:
          v57 += 160;
          --v55;
          uint64_t v56 = v115;
          if (v55) {
            continue;
          }
          swift_release();
LABEL_5:
          uint64_t v27 = v112 + 1;
          swift_release();
          if (v27 == v108)
          {
            swift_bridgeObjectRelease();
            a5 = v97;
            uint64_t v14 = v94;
            uint64_t v15 = v93;
            goto LABEL_84;
          }
          goto LABEL_6;
        }
        swift_bridgeObjectRelease();
        swift_release_n();
        uint64_t v74 = v102;
        if (v101 != 1 && v102)
        {
          uint64_t v75 = v103;
          sub_1DCDB40EC(v103);
          uint64_t v76 = sub_1DD048048();
          os_log_type_t v77 = sub_1DD048848();
          BOOL v78 = os_log_type_enabled(v76, v77);
          a5 = v97;
          uint64_t v79 = v95;
          if (v78)
          {
            uint64_t v80 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v80 = 0;
            _os_log_impl(&dword_1DCCF9000, v76, v77, "Reuse existing OCR signal.", v80, 2u);
            MEMORY[0x1E01B07E0](v80, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v75, v94);
          *(void *)(v79 + 120) = v74;
          swift_bridgeObjectRetain();
          uint64_t result = swift_bridgeObjectRelease();
          goto LABEL_88;
        }
        unint64_t v85 = v97;
        if (*(void *)(v95 + 96))
        {
          swift_getObjectType();
          uint64_t v86 = v105;
          sub_1DCFA6980(v105);
        }
        else
        {
          uint64_t v87 = sub_1DD0480A8();
          uint64_t v86 = v105;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v105, 1, 1, v87);
        }
        uint64_t v88 = (uint64_t)v106;
        long long v89 = v98;
        _OWORD *v106 = v99;
        *(_OWORD *)(v88 + 16) = v89;
        uint64_t v90 = v104;
        sub_1DCD43B04(v86, v88 + *(int *)(v104 + 20), &qword_1EAB02480);
        *(void *)(v88 + *(int *)(v90 + 24)) = v107;
        uint64_t v91 = swift_allocObject();
        swift_weakInit();
        swift_retain();
        swift_retain();
        sub_1DCF3DFB4((double *)v88, (uint64_t)sub_1DCD432D8, v91, v85);
        swift_release();
        sub_1DCD432E4(v88, (uint64_t (*)(void))type metadata accessor for TextDetectionRequestFactory.Input);
        return swift_release();
    }
  }
}

uint64_t sub_1DCD41190(void *a1, char a2)
{
  uint64_t v4 = sub_1DD048068();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v9 = a1;
    sub_1DCDB40EC((uint64_t)v7);
    id v10 = a1;
    id v11 = a1;
    uint64_t v12 = sub_1DD048048();
    os_log_type_t v13 = sub_1DD048858();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136446210;
      v18[1] = v14 + 4;
      v19[0] = v15;
      swift_getErrorValue();
      uint64_t v16 = sub_1DCDC4040(v19[5], v19[6]);
      v19[3] = sub_1DCED7FA0(v16, v17, v19);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD43344(a1, 1);
      sub_1DCD43344(a1, 1);
      _os_log_impl(&dword_1DCCF9000, v12, v13, "Text detection error: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v15, -1, -1);
      MEMORY[0x1E01B07E0](v14, -1, -1);

      sub_1DCD43344(a1, 1);
    }
    else
    {
      sub_1DCD43344(a1, 1);
      sub_1DCD43344(a1, 1);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      *(void *)(result + 120) = a1;
      swift_bridgeObjectRetain();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1DCD41438@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v113 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v107 = (uint64_t)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for BarcodeDetectionRequestFactory.Input();
  MEMORY[0x1F4188790](v106);
  uint64_t v12 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DD048068();
  uint64_t v112 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v105 = (uint64_t)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v109 = (uint64_t)&v100 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02488);
  MEMORY[0x1F4188790](v17 - 8);
  CGFloat v19 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  *(_OWORD *)&v122[120] = *(_OWORD *)(a1 + 15);
  *(_OWORD *)&v122[136] = *(_OWORD *)(a1 + 17);
  *(_OWORD *)&v122[152] = *(_OWORD *)(a1 + 19);
  long long v123 = *(_OWORD *)(a1 + 21);
  *(_OWORD *)&v122[72] = *(_OWORD *)(a1 + 9);
  *(_OWORD *)&v122[88] = *(_OWORD *)(a1 + 11);
  *(_OWORD *)&v122[104] = *(_OWORD *)(a1 + 13);
  uint64_t v21 = *a2;
  uint64_t v22 = a2[1];
  uint64_t v23 = a2[2];
  uint64_t v24 = a2[3];
  *(void *)CGFloat v122 = v20;
  long long v110 = *(_OWORD *)(a1 + 1);
  *(_OWORD *)&v122[8] = v110;
  *(_OWORD *)&v122[24] = *(_OWORD *)(a1 + 3);
  long long v108 = *(_OWORD *)(a1 + 5);
  *(_OWORD *)&v122[40] = v108;
  *(_OWORD *)&v122[56] = *(_OWORD *)(a1 + 7);
  uint64_t v25 = sub_1DCF22DA4();
  uint64_t v114 = *(void *)(v25 + 16);
  if (v114)
  {
    uint64_t v102 = v13;
    uint64_t v100 = v12;
    uint64_t v101 = a4;
    uint64_t v104 = a5;
    uint64_t v26 = type metadata accessor for VisualUnderstanding.ImageRegion();
    uint64_t v27 = 0;
    uint64_t v118 = 0;
    uint64_t v28 = *(void *)(v26 - 8);
    unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v103 = v25;
    uint64_t v116 = v25 + v29 + 48;
    uint64_t v115 = *(void *)(v28 + 72);
    do
    {
      uint64_t v117 = v27;
      uint64_t v30 = *(void *)(v116 + v115 * v27);
      uint64_t v31 = *(void *)(v30 + 16);
      if (v31)
      {
        swift_bridgeObjectRetain();
        uint64_t v32 = v31 - 1;
        uint64_t v33 = 32;
        uint64_t v34 = MEMORY[0x1E4FBC860];
        while (1)
        {
          long long v35 = *(_OWORD *)(v30 + v33);
          *(_OWORD *)&v122[16] = *(_OWORD *)(v30 + v33 + 16);
          *(_OWORD *)CGFloat v122 = v35;
          long long v36 = *(_OWORD *)(v30 + v33 + 32);
          long long v37 = *(_OWORD *)(v30 + v33 + 48);
          long long v38 = *(_OWORD *)(v30 + v33 + 80);
          *(_OWORD *)&v122[64] = *(_OWORD *)(v30 + v33 + 64);
          *(_OWORD *)&v122[80] = v38;
          *(_OWORD *)&v122[48] = v37;
          *(_OWORD *)&v122[32] = v36;
          long long v39 = *(_OWORD *)(v30 + v33 + 96);
          long long v40 = *(_OWORD *)(v30 + v33 + 112);
          long long v41 = *(_OWORD *)(v30 + v33 + 128);
          *(_OWORD *)&v122[141] = *(_OWORD *)(v30 + v33 + 141);
          *(_OWORD *)&v122[112] = v40;
          *(_OWORD *)&v122[128] = v41;
          *(_OWORD *)&v122[96] = v39;
          if (HIBYTE(v40) == 1)
          {
            sub_1DCD32CC8((uint64_t)v122);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v121 = v34;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1DCFC4A08(0, *(void *)(v34 + 16) + 1, 1);
              uint64_t v34 = v121;
            }
            unint64_t v44 = *(void *)(v34 + 16);
            unint64_t v43 = *(void *)(v34 + 24);
            if (v44 >= v43 >> 1)
            {
              sub_1DCFC4A08(v43 > 1, v44 + 1, 1);
              uint64_t v34 = v121;
            }
            *(void *)(v34 + 16) = v44 + 1;
            char v45 = (_OWORD *)(v34 + 160 * v44);
            long long v46 = *(_OWORD *)&v122[16];
            v45[2] = *(_OWORD *)v122;
            v45[3] = v46;
            long long v47 = *(_OWORD *)&v122[32];
            long long v48 = *(_OWORD *)&v122[48];
            long long v49 = *(_OWORD *)&v122[80];
            v45[6] = *(_OWORD *)&v122[64];
            v45[7] = v49;
            v45[4] = v47;
            v45[5] = v48;
            long long v50 = *(_OWORD *)&v122[96];
            long long v51 = *(_OWORD *)&v122[112];
            long long v52 = *(_OWORD *)&v122[128];
            *(_OWORD *)((char *)v45 + 173) = *(_OWORD *)&v122[141];
            v45[9] = v51;
            v45[10] = v52;
            v45[8] = v50;
          }
          if (!v32) {
            break;
          }
          --v32;
          v33 += 160;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v34 = MEMORY[0x1E4FBC860];
      }
      *(void *)CGFloat v122 = v34;
      swift_retain();
      uint64_t v53 = v118;
      sub_1DCF23B0C((uint64_t *)v122);
      uint64_t v118 = v53;
      if (v53)
      {
        swift_release();
        __break(1u);
        JUMPOUT(0x1DCD42208);
      }
      swift_release();
      uint64_t v54 = *(void *)v122;
      uint64_t v55 = *(void *)(*(void *)v122 + 16);
      if (v55)
      {
        uint64_t v56 = *v113;
        swift_retain();
        uint64_t v57 = 32;
        uint64_t v120 = v56;
        while (2)
        {
          uint64_t v58 = 0xE300000000000000;
          unint64_t v59 = 7631457;
          switch(*(unsigned char *)(v54 + v57))
          {
            case 1:
              uint64_t v58 = 0xE600000000000000;
              unint64_t v59 = 0x65727574616ELL;
              if (*(void *)(v56 + 16)) {
                goto LABEL_71;
              }
              goto LABEL_74;
            case 2:
              uint64_t v58 = 0xE800000000000000;
              unint64_t v59 = 0x6B72616D646E616CLL;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 3:
              uint64_t v58 = 0xEF6B72616D646E61;
              unint64_t v59 = 0x4C6C61727574616ELL;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 4:
              uint64_t v58 = 0xE500000000000000;
              unint64_t v59 = 0x616964656DLL;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 5:
              uint64_t v58 = 0xE400000000000000;
              unint64_t v59 = 1802465122;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 6:
              uint64_t v58 = 0xE500000000000000;
              unint64_t v59 = 0x6D75626C61;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 7:
              uint64_t v58 = 0xE400000000000000;
              unint64_t v59 = 1937006947;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 8:
              uint64_t v58 = 0xE400000000000000;
              unint64_t v59 = 1936158564;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 9:
              uint64_t v58 = 0xE700000000000000;
              uint64_t v61 = 1835626081;
              goto LABEL_52;
            case 0xA:
              uint64_t v58 = 0xE500000000000000;
              unint64_t v59 = 0x7364726962;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 0xB:
              uint64_t v58 = 0xE700000000000000;
              unint64_t v60 = 0x746365736E69;
              goto LABEL_53;
            case 0xC:
              uint64_t v58 = 0xE800000000000000;
              unint64_t v59 = 0x73656C6974706572;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 0xD:
              uint64_t v58 = 0xE700000000000000;
              uint64_t v61 = 1835884909;
LABEL_52:
              unint64_t v60 = v61 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_53:
              unint64_t v59 = v60 & 0xFFFFFFFFFFFFLL | 0x73000000000000;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 0xE:
              uint64_t v58 = 0xE700000000000000;
              unint64_t v59 = 0x6C657261707061;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 0xF:
              uint64_t v58 = 0xEB00000000736569;
              unint64_t v59 = 0x726F737365636361;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 0x10:
              uint64_t v58 = 0xE400000000000000;
              unint64_t v59 = 1685024614;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 0x11:
              uint64_t v58 = 0xEA0000000000746ELL;
              unint64_t v59 = 0x6F726665726F7473;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 0x12:
              unsigned int v63 = 1852270963;
              goto LABEL_64;
            case 0x13:
              uint64_t v58 = 0x80000001DD066AB0;
              unint64_t v59 = 0xD000000000000011;
              goto LABEL_70;
            case 0x14:
              unsigned int v63 = 1869903201;
LABEL_64:
              unint64_t v59 = v63 | 0x626D795300000000;
              uint64_t v58 = 0xEA00000000006C6FLL;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 0x15:
              uint64_t v58 = 0xEF6C6F626D79536FLL;
              unint64_t v59 = 0x676F4C646E617262;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 0x16:
              uint64_t v58 = 0xE700000000000000;
              uint64_t v62 = 0x646F63726162;
              goto LABEL_67;
            case 0x17:
              uint64_t v58 = 0xE900000000000065;
              unint64_t v59 = 0x727574706C756373;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 0x18:
              uint64_t v58 = 0xE700000000000000;
              uint64_t v62 = 0x6E696C796B73;
LABEL_67:
              unint64_t v59 = v62 & 0xFFFFFFFFFFFFLL | 0x65000000000000;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            case 0x19:
              uint64_t v58 = 0xE800000000000000;
              unint64_t v59 = 0x44327463656A626FLL;
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
              goto LABEL_71;
            default:
LABEL_70:
              if (!*(void *)(v56 + 16)) {
                goto LABEL_74;
              }
LABEL_71:
              unint64_t v64 = sub_1DCEAD1A4(v59, v58);
              if (v65)
              {
                unint64_t v66 = v64;
                uint64_t v119 = v58;
                uint64_t v67 = (uint64_t)v19;
                uint64_t v68 = v54;
                uint64_t v69 = *(void *)(v56 + 56);
                uint64_t v70 = type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
                uint64_t v71 = *(void *)(v70 - 8);
                uint64_t v72 = v69 + *(void *)(v71 + 72) * v66;
                uint64_t v54 = v68;
                CGFloat v19 = (char *)v67;
                sub_1DCD43104(v72, v67, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v67, 0, 1, v70);
              }
              else
              {
LABEL_74:
                uint64_t v70 = type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v19, 1, 1, v70);
              }
              swift_bridgeObjectRelease();
              type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 48))(v19, 1, v70) == 1)
              {
                sub_1DCD2479C((uint64_t)v19, &qword_1EAB02488);
              }
              else
              {
                char v73 = v19[1];
                sub_1DCD432E4((uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
                if (v73)
                {
                  swift_bridgeObjectRelease();
                  swift_release_n();
                  if ((void)v110 == 1 || (uint64_t v74 = v108) == 0)
                  {
                    uint64_t v87 = v104;
                    if (*(void *)(v111 + 96))
                    {
                      swift_getObjectType();
                      uint64_t v88 = v107;
                      sub_1DCFA6980(v107);
                    }
                    else
                    {
                      uint64_t v89 = sub_1DD0480A8();
                      uint64_t v88 = v107;
                      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v107, 1, 1, v89);
                    }
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02490);
                    uint64_t v90 = swift_allocObject();
                    *(_OWORD *)(v90 + 16) = xmmword_1DD04E760;
                    uint64_t v91 = (void *)*MEMORY[0x1E4F45B80];
                    uint64_t v92 = (void *)*MEMORY[0x1E4F45B88];
                    *(void *)(v90 + 32) = *MEMORY[0x1E4F45B80];
                    *(void *)(v90 + 40) = v92;
                    uint64_t v93 = (void *)*MEMORY[0x1E4F45B90];
                    *(void *)(v90 + 48) = *MEMORY[0x1E4F45B90];
                    uint64_t v94 = (uint64_t)v100;
                    void *v100 = v21;
                    *(void *)(v94 + 8) = v22;
                    *(void *)(v94 + 16) = v23;
                    *(void *)(v94 + 24) = v24;
                    uint64_t v95 = v106;
                    sub_1DCD43B04(v88, v94 + *(int *)(v106 + 20), &qword_1EAB02480);
                    *(void *)(v94 + *(int *)(v95 + 24)) = v90;
                    *(void *)(v94 + *(int *)(v95 + 28)) = v101;
                    uint64_t v96 = swift_allocObject();
                    swift_weakInit();
                    swift_retain();
                    swift_retain();
                    id v97 = v91;
                    id v98 = v92;
                    id v99 = v93;
                    sub_1DCF13D1C((double *)v94, (uint64_t)sub_1DCD430F0, v96, v87);
                    swift_release();
                    sub_1DCD432E4(v94, (uint64_t (*)(void))type metadata accessor for BarcodeDetectionRequestFactory.Input);
                    return swift_release();
                  }
                  else
                  {
                    uint64_t v75 = v105;
                    sub_1DCDB40EC(v105);
                    uint64_t v76 = sub_1DD048048();
                    os_log_type_t v77 = sub_1DD048848();
                    BOOL v78 = os_log_type_enabled(v76, v77);
                    uint64_t v79 = v104;
                    uint64_t v80 = v111;
                    if (v78)
                    {
                      uint64_t v81 = (uint8_t *)swift_slowAlloc();
                      *(_WORD *)uint64_t v81 = 0;
                      _os_log_impl(&dword_1DCCF9000, v76, v77, "Reuse existing barcode signal.", v81, 2u);
                      MEMORY[0x1E01B07E0](v81, -1, -1);
                    }

                    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v75, v102);
                    *(void *)(v80 + 128) = v74;
                    swift_bridgeObjectRetain();
                    uint64_t result = swift_bridgeObjectRelease();
                    v79[4] = 0;
                    *(_OWORD *)uint64_t v79 = 0u;
                    *((_OWORD *)v79 + 1) = 0u;
                  }
                  return result;
                }
              }
              v57 += 160;
              --v55;
              uint64_t v56 = v120;
              if (v55) {
                continue;
              }
              swift_release();
              break;
          }
          break;
        }
      }
      uint64_t v27 = v117 + 1;
      swift_release();
    }
    while (v27 != v114);
    swift_bridgeObjectRelease();
    a5 = v104;
    uint64_t v13 = v102;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v83 = v109;
  sub_1DCDB40EC(v109);
  uint64_t v84 = sub_1DD048048();
  os_log_type_t v85 = sub_1DD048848();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v86 = 0;
    _os_log_impl(&dword_1DCCF9000, v84, v85, "Skip barcode extraction as no requested domain requires.", v86, 2u);
    MEMORY[0x1E01B07E0](v86, -1, -1);
  }

  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v112 + 8))(v83, v13);
  a5[4] = 0;
  *(_OWORD *)a5 = 0u;
  *((_OWORD *)a5 + 1) = 0u;
  return result;
}

uint64_t sub_1DCD42270(void *a1, void *a2, __int16 a3, uint64_t a4)
{
  uint64_t v8 = sub_1DD048068();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v44 - v13;
  if ((a3 & 0x100) != 0)
  {
    sub_1DCD4316C(a1, a2, a3);
    sub_1DCDB40EC((uint64_t)v11);
    sub_1DCD4316C(a1, a2, a3);
    sub_1DCD4316C(a1, a2, a3);
    uint64_t v25 = sub_1DD048048();
    os_log_type_t v26 = sub_1DD048858();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v54 = v46;
      *(_DWORD *)uint64_t v27 = 136446210;
      sub_1DCD43238();
      uint64_t v28 = swift_dynamicCastMetatype();
      uint64_t v47 = v9;
      uint64_t v48 = v8;
      if (v28)
      {
        *(void *)&long long v50 = a1;
        *((void *)&v50 + 1) = a2;
        char v51 = a3;
        sub_1DCD4316C(a1, a2, a3);
        sub_1DCD4316C(a1, a2, a3);
        sub_1DCD3A548();
        uint64_t v29 = sub_1DD048F88();
        if (v29)
        {
          uint64_t v30 = (void *)v29;
          sub_1DCD431CC(a1, a2, a3, 1);
        }
        else
        {
          uint64_t v30 = (void *)swift_allocError();
          char v39 = v51;
          *(_OWORD *)uint64_t v40 = v50;
          *(unsigned char *)(v40 + 16) = v39;
        }
        long long v41 = (void *)sub_1DD046368();

        uint64_t v36 = sub_1DCDC4434();
        unint64_t v38 = v42;

        sub_1DCD431CC(a1, a2, a3, 1);
      }
      else
      {
        long long v52 = &type metadata for MLError;
        unint64_t v53 = sub_1DCD43278();
        *(void *)&long long v50 = a1;
        *((void *)&v50 + 1) = a2;
        char v51 = a3;
        sub_1DCD3A4DC(&v50, (uint64_t)v49);
        uint64_t v32 = __swift_project_boxed_opaque_existential_1(v49, v49[3]);
        uint64_t v33 = (void *)*v32;
        uint64_t v34 = (void *)v32[1];
        char v35 = *((unsigned char *)v32 + 16);
        sub_1DCD4316C(a1, a2, a3);
        uint64_t v36 = sub_1DCE74BEC(v33, v34, v35);
        unint64_t v38 = v37;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
      }
      *(void *)&long long v50 = sub_1DCED7FA0(v36, v38, &v54);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD431CC(a1, a2, a3, 1);
      sub_1DCD431CC(a1, a2, a3, 1);
      _os_log_impl(&dword_1DCCF9000, v25, v26, "Barcode detection error: %{public}s", v27, 0xCu);
      uint64_t v43 = v46;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v43, -1, -1);
      MEMORY[0x1E01B07E0](v27, -1, -1);

      sub_1DCD431CC(a1, a2, a3, 1);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v11, v48);
    }
    else
    {
      sub_1DCD431CC(a1, a2, a3, 1);
      sub_1DCD431CC(a1, a2, a3, 1);
      sub_1DCD431D8(a1, a2, a3);

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  else
  {
    uint64_t v15 = a4 + 16;
    sub_1DCDB40EC((uint64_t)&v44 - v13);
    sub_1DCD432CC(a1, a2, a3, 0);
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1DD048048();
    os_log_type_t v17 = sub_1DD048848();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v46 = v15;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v48 = v8;
      CGFloat v19 = (uint8_t *)v18;
      uint64_t v45 = swift_slowAlloc();
      *(void *)&long long v50 = v45;
      *(_DWORD *)CGFloat v19 = 136315138;
      unint64_t v44 = v19 + 4;
      uint64_t v20 = swift_bridgeObjectRetain();
      uint64_t v21 = MEMORY[0x1E01AE380](v20, &type metadata for DetectedBarcode);
      uint64_t v47 = v9;
      unint64_t v23 = v22;
      sub_1DCD431CC(a1, a2, a3, 0);
      v49[0] = sub_1DCED7FA0(v21, v23, (uint64_t *)&v50);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD431CC(a1, a2, a3, 0);
      sub_1DCD431CC(a1, a2, a3, 0);
      _os_log_impl(&dword_1DCCF9000, v16, v17, "Detected barcodes %s.", v19, 0xCu);
      uint64_t v24 = v45;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v24, -1, -1);
      MEMORY[0x1E01B07E0](v19, -1, -1);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v48);
    }
    else
    {
      sub_1DCD431CC(a1, a2, a3, 0);
      sub_1DCD431CC(a1, a2, a3, 0);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      *(void *)(result + 128) = a1;
      swift_bridgeObjectRetain();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1DCD428BC@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (*(unsigned char *)(a2 + 9) == 1)
  {
    uint64_t v8 = *((void *)a1 + 2);
    uint64_t v7 = *((void *)a1 + 3);
    long long v12 = *a1;
    sub_1DCD3A3BC(v4 + 48, (uint64_t)v13);
    uint64_t v9 = *(void *)(v4 + 96);
    long long v14 = v12;
    uint64_t v15 = v8;
    uint64_t v16 = v7;
    uint64_t v17 = v9;
    uint64_t v18 = a3;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    sub_1DCE50A9C((uint64_t)v13, (uint64_t)sub_1DCD42FCC, v4, a4);
    sub_1DCD42FD8((uint64_t)v13);
    return swift_release();
  }
  else
  {
    if (qword_1EBE857F0 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_1EBE9C870;
    a4[3] = (uint64_t)&type metadata for BatchModelRequest;
    a4[4] = (uint64_t)&off_1F383AB90;
    *a4 = v11;
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1DCD429F8(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    id v16 = a1;
    sub_1DCDB40EC((uint64_t)v13);
    id v17 = a1;
    id v18 = a1;
    CGFloat v19 = sub_1DD048048();
    os_log_type_t v20 = sub_1DD048858();
    if (os_log_type_enabled(v19, v20))
    {
      os_log_t v28 = v19;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v32 = v27;
      *(_DWORD *)uint64_t v21 = 136446210;
      v26[1] = v21 + 4;
      swift_getErrorValue();
      uint64_t v22 = sub_1DCDC4040(v30, v31);
      uint64_t v29 = sub_1DCED7FA0(v22, v23, &v32);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD4302C(a1, a2, a3, 1);
      sub_1DCD4302C(a1, a2, a3, 1);
      os_log_t v24 = v28;
      _os_log_impl(&dword_1DCCF9000, v28, v20, "Failed to calculate image fingerprint: %{public}s", v21, 0xCu);
      uint64_t v25 = v27;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v25, -1, -1);
      MEMORY[0x1E01B07E0](v21, -1, -1);

      sub_1DCD4302C(a1, a2, a3, 1);
    }
    else
    {
      sub_1DCD4302C(a1, a2, a3, 1);
      sub_1DCD4302C(a1, a2, a3, 1);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    uint64_t v14 = a5[17];
    a5[17] = a1;
    a5[18] = a2;
    a5[19] = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1DCD43078(v14);
  }
}

uint64_t sub_1DCD42CF0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCD43078(*(void *)(v0 + 136));
  return v0;
}

uint64_t sub_1DCD42D6C()
{
  sub_1DCD42CF0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SignalsExtractionProcessor()
{
  return self;
}

uint64_t sub_1DCD42DC4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCD42E18(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      unint64_t v7 = sub_1DD048D38();
      if (v7 < 7 && *(void *)(*(void *)(a2 + 16) + 16) && (sub_1DCEAD624(v7), (v8 & 1) != 0))
      {
        swift_retain();
        uint64_t v9 = swift_bridgeObjectRelease();
        MEMORY[0x1E01AE350](v9);
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DD0486E8();
        }
        sub_1DD048708();
        sub_1DD0486D8();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v6 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1DCD42F54@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCFD9CE0(*(void *)(v1 + 16), (char *)*(unsigned __int8 *)(v1 + 24), *(unsigned __int8 *)(v1 + 25), a1);
}

unint64_t sub_1DCD42F78()
{
  unint64_t result = qword_1EAB02478;
  if (!qword_1EAB02478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02478);
  }
  return result;
}

uint64_t sub_1DCD42FCC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DCD429F8(a1, a2, a3, a4 & 1, v4);
}

uint64_t sub_1DCD42FD8(uint64_t a1)
{
  return a1;
}

void sub_1DCD4302C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DCD43078(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCD430B8()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCD430F0(void *a1, void *a2, __int16 a3)
{
  return sub_1DCD42270(a1, a2, a3 & 0x1FF, v3);
}

uint64_t sub_1DCD43104(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_1DCD4316C(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
      unint64_t result = result;
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1DCD431CC(void *a1, id a2, char a3, char a4)
{
  if (a4) {
    sub_1DCD431D8(a1, a2, a3);
  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_1DCD431D8(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:

      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

unint64_t sub_1DCD43238()
{
  unint64_t result = qword_1EAB02498;
  if (!qword_1EAB02498)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAB02498);
  }
  return result;
}

unint64_t sub_1DCD43278()
{
  unint64_t result = qword_1EAB024A0;
  if (!qword_1EAB024A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB024A0);
  }
  return result;
}

id sub_1DCD432CC(id result, id a2, char a3, char a4)
{
  if (a4) {
    return sub_1DCD4316C(result, a2, a3);
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_1DCD432D8(void *a1, char a2)
{
  return sub_1DCD41190(a1, a2 & 1);
}

uint64_t sub_1DCD432E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1DCD43344(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

id sub_1DCD43350(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    return a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_1DCD433A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DCD433F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 152);
  swift_bridgeObjectRetain();
  sub_1DCD434B4(v2);
  swift_bridgeObjectRetain();
  sub_1DCD43548(v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCD434B4(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DCD43548(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DCD43588(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    char v13 = a5 & 1;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1DCFC57A0(0, v9, 0);
    uint64_t v10 = v26;
    uint64_t v14 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v16 = *(void *)(v14 + 72);
    while (1)
    {
      sub_1DCD3BA0C(v15, a2, a3, a4, v13, a6, a7, &v24, v25);
      if (v8) {
        break;
      }
      uint64_t v8 = 0;
      uint64_t v26 = v10;
      unint64_t v18 = *(void *)(v10 + 16);
      unint64_t v17 = *(void *)(v10 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1DCFC57A0(v17 > 1, v18 + 1, 1);
        uint64_t v10 = v26;
      }
      *(void *)(v10 + 16) = v18 + 1;
      sub_1DCD3A4DC(v25, v10 + 40 * v18 + 32);
      v15 += v16;
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
  }
  return v10;
}

unint64_t sub_1DCD43704(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (uint64_t)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v42 = (uint64_t)v38 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v44 = (uint64_t)v38 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v43 = (uint64_t)v38 - v16;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return MEMORY[0x1E4FBC860];
  }
  v38[1] = a1;
  v38[2] = v2;
  unint64_t v40 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v18 = (double *)(a1 + v40);
  swift_bridgeObjectRetain();
  char v39 = (uint64_t *)(a2 + 104);
  swift_beginAccess();
  uint64_t v19 = *(void *)(v9 + 72);
  os_log_type_t v20 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  unint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v41 = v8;
  do
  {
    uint64_t v23 = *v39;
    if (*(void *)(*v39 + 16))
    {
      CGFloat v25 = v18[2];
      CGFloat v24 = v18[3];
      CGFloat v27 = *v18;
      CGFloat v26 = v18[1];
      swift_bridgeObjectRetain();
      unint64_t v28 = sub_1DCEAD508(v27, v26, v25, v24);
      if (v29)
      {
        sub_1DCD43104(*(void *)(v23 + 56) + v28 * v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        (*v20)(v7, 0, 1, v8);
      }
      else
      {
        (*v20)(v7, 1, 1, v8);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      (*v20)(v7, 1, 1, v8);
    }
    uint64_t v30 = v42;
    sub_1DCD43104((uint64_t)v18, v42, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((*v21)(v7, 1, v8) == 1)
    {
      uint64_t v31 = v30;
      uint64_t v32 = v44;
      sub_1DCD36EE0(v31, v44);
      sub_1DCD2479C((uint64_t)v7, &qword_1EBE855F0);
    }
    else
    {
      sub_1DCD432E4(v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v32 = v44;
      sub_1DCD36EE0((uint64_t)v7, v44);
    }
    uint64_t v33 = v32;
    uint64_t v34 = v43;
    sub_1DCD36EE0(v33, v43);
    sub_1DCD36EE0(v34, v45);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v22 = sub_1DCE9D7A0(0, *(void *)(v22 + 16) + 1, 1, v22);
    }
    unint64_t v36 = *(void *)(v22 + 16);
    unint64_t v35 = *(void *)(v22 + 24);
    if (v36 >= v35 >> 1) {
      unint64_t v22 = sub_1DCE9D7A0(v35 > 1, v36 + 1, 1, v22);
    }
    *(void *)(v22 + 16) = v36 + 1;
    sub_1DCD36EE0(v45, v22 + v40 + v36 * v19);
    unint64_t v18 = (double *)((char *)v18 + v19);
    --v17;
    uint64_t v8 = v41;
  }
  while (v17);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1DCD43B04(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD43B68(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCD43B94(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 152);
  swift_bridgeObjectRelease();
  sub_1DCD43C58(v2);
  swift_bridgeObjectRelease();
  sub_1DCD43078(v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCD43C58(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCD43CE8()
{
  uint64_t v1 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v3 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v3 + v4;
  swift_bridgeObjectRelease();
  uint64_t v7 = v5 + *(int *)(v1 + 60);
  uint64_t v8 = sub_1DD046598();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v6, v2 | 7);
}

uint64_t sub_1DCD43E28(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1DCD3BD5C(a1, v4, v5);
}

void *initializeBufferWithCopyOfBuffer for DomainPredictionNet.PredictionResult(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DomainPredictionNet.PredictionResult()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for DomainPredictionNet.PredictionResult(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DomainPredictionNet.PredictionResult(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SignalsExtractionProcessorError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SignalsExtractionProcessorError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1DCD43FF8()
{
  return 0;
}

ValueMetadata *type metadata accessor for SignalsExtractionProcessorError()
{
  return &type metadata for SignalsExtractionProcessorError;
}

uint64_t sub_1DCD44010@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD42F54(a1);
}

uint64_t sub_1DCD4402C(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1DCFC57C0(0, v5, 0);
    uint64_t v6 = v17;
    uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85560) - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    while (1)
    {
      a1(&v16, v9);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v11 = v16;
      uint64_t v17 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1DCFC57C0(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v17;
      }
      *(void *)(v6 + 16) = v13 + 1;
      *(void *)(v6 + 8 * v13 + 32) = v11;
      v9 += v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1DCD4418C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for RegionSearchResult.ResultItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1DCFC5A40(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = *(void *)(type metadata accessor for ObjectKnowledge() - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1DCFC5A40(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_1DCD52894((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, type metadata accessor for RegionSearchResult.ResultItem);
      v13 += v18;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1DCD44388(uint64_t a1, uint64_t a2)
{
  BOOL v4 = a1 == 0x6D75626C61 && a2 == 0xE500000000000000;
  if (!v4
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x6C616D696E61 || a2 != 0xE600000000000000)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 7631457 || a2 != 0xE300000000000000)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 1937006947 || a2 != 0xE400000000000000)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 1936158564 || a2 != 0xE400000000000000)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0xD000000000000011 || a2 != 0x80000001DD067630)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x6E616D7568 || a2 != 0xE500000000000000)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x6B72616D646E616CLL || a2 != 0xE800000000000000)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x616964656DLL || a2 != 0xE500000000000000)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0xD000000000000010 || a2 != 0x80000001DD067650)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x65727574616ELL || a2 != 0xE600000000000000)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x6465767265736572 || a2 != 0xE900000000000033)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x6465767265736572 || a2 != 0xE900000000000032)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x6465767265736572 || a2 != 0xE900000000000031)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x68736E6565726373 || a2 != 0xEA0000000000746FLL)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x727574706C756373 || a2 != 0xE900000000000065)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x656E696C796B73 || a2 != 0xE700000000000000)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x6465767265736572 || a2 != 0xE900000000000034)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x6465767265736572 || a2 != 0xE900000000000035)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x6465767265736572 || a2 != 0xE900000000000037)
    && (sub_1DD048FA8() & 1) == 0
    && (a1 != 0x6E6F6968736166 || a2 != 0xE700000000000000))
  {
    sub_1DD048FA8();
  }
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult(0);
  MEMORY[0x1F4188790](v5);
  sub_1DCD52808(&qword_1EBE866B8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
  return sub_1DD047E78();
}

uint64_t sub_1DCD44AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v71 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85558);
  MEMORY[0x1F4188790](v2 - 8);
  BOOL v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v65 = (void *)sub_1DD047A98();
  uint64_t v67 = (void (*)(char *, uint64_t))*(v65 - 1);
  MEMORY[0x1F4188790](v65);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85550);
  uint64_t v70 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v62 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v64 = (char *)&v53 - v9;
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85570);
  uint64_t v74 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unsigned int v63 = (char *)&v53 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85580);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v69 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DD047B18();
  uint64_t v72 = v16;
  uint64_t v75 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v56 = (char *)&v53 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE853E0);
  uint64_t v55 = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  CGFloat v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85538);
  uint64_t v73 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v58 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  unint64_t v60 = (char *)&v53 - v27;
  uint64_t v76 = 81;
  unint64_t v77 = 0xE100000000000000;
  unint64_t v61 = sub_1DCD506FC();
  MEMORY[0x1E01AD710](v78, &v76, MEMORY[0x1E4FBB1A0], v61);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v59, v21);
  sub_1DD047A88();
  sub_1DD047B28();
  uint64_t v28 = sub_1DD047B38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v4, 1, 1, v28);
  sub_1DD047A88();
  sub_1DCD52808(&qword_1EBE85540, MEMORY[0x1E4FBCD88]);
  uint64_t v29 = MEMORY[0x1E4FBB7A8];
  uint64_t v30 = v11;
  uint64_t v31 = v65;
  sub_1DD047B08();
  sub_1DCD2479C((uint64_t)v4, &qword_1EBE85558);
  (*((void (**)(char *, void *))v67 + 1))(v6, v31);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v75 + 8);
  v75 += 8;
  v32(v18, v16);
  uint64_t v67 = v32;
  uint64_t v33 = v62;
  MEMORY[0x1E01AD760](v11, v29);
  uint64_t v34 = sub_1DCD52850(&qword_1EBE85548, &qword_1EBE85550);
  unint64_t v35 = v64;
  uint64_t v36 = v57;
  MEMORY[0x1E01AD710](v33, v57, v34);
  unint64_t v37 = *(void (**)(char *, uint64_t))(v70 + 8);
  v37(v33, v36);
  uint64_t v54 = v30;
  sub_1DD047A68();
  v37(v35, v36);
  uint64_t v38 = v74;
  char v39 = v63;
  uint64_t v40 = v68;
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v63, v30, v68);
  uint64_t v41 = v55;
  sub_1DD047AB8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v41);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868F8);
  uint64_t v70 = sub_1DCD52850(&qword_1EBE85568, &qword_1EBE85570);
  uint64_t v43 = v69;
  unint64_t v64 = (char *)v42;
  uint64_t v44 = v56;
  sub_1DD047AE8();
  char v65 = *(void **)(v38 + 8);
  uint64_t v74 = v38 + 8;
  ((void (*)(char *, uint64_t))v65)(v39, v40);
  v32(v44, v72);
  uint64_t v45 = v58;
  MEMORY[0x1E01AD730](v43, v42);
  uint64_t v46 = sub_1DCD52850(&qword_1EBE85530, &qword_1EBE85538);
  uint64_t v47 = v60;
  uint64_t v48 = v66;
  MEMORY[0x1E01AD710](v45, v66, v46);
  long long v49 = *(void (**)(char *, uint64_t))(v73 + 8);
  v73 += 8;
  v49(v45, v48);
  uint64_t v76 = v78[0];
  unint64_t v77 = v78[1];
  sub_1DD047A68();
  swift_bridgeObjectRelease();
  sub_1DD047A88();
  long long v50 = v54;
  sub_1DD047AF8();
  sub_1DD047AD8();
  char v51 = (void (*)(char *, uint64_t))v65;
  ((void (*)(char *, uint64_t))v65)(v50, v40);
  v67(v44, v72);
  v51(v39, v40);
  return ((uint64_t (*)(char *, uint64_t))v49)(v47, v48);
}

unint64_t *sub_1DCD453B8@<X0>(unint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  unint64_t v4 = result[1];
  if ((v4 ^ *result) < 0x4000)
  {
    uint64_t v12 = 0;
    LOBYTE(v9) = 1;
  }
  else
  {
    unint64_t v6 = result[2];
    unint64_t v5 = result[3];
    unint64_t result = (unint64_t *)sub_1DCD5109C(*result, v4, v6, v5, 10);
    if ((v7 & 0x100) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1DCD4F45C(v3, v4, v6, v5, 10);
      char v11 = v10;
      unint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      int v9 = v11 & 1;
    }
    else
    {
      uint64_t v8 = (unsigned __int8 *)result;
      int v9 = v7 & 1;
    }
    if (v9) {
      uint64_t v12 = 0;
    }
    else {
      uint64_t v12 = v8;
    }
  }
  *(void *)a2 = v12;
  *(unsigned char *)(a2 + 8) = v9;
  return result;
}

uint64_t sub_1DCD4548C()
{
  return sub_1DD047B58();
}

uint64_t sub_1DCD454EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  uint64_t v33 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v35 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85580);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE853E0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD047AC8();
  char v39 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868F8);
  sub_1DCD52850((unint64_t *)&qword_1EBE85578, &qword_1EBE85580);
  sub_1DD047B48();
  uint64_t v31 = a1;
  v41[0] = a1;
  v41[1] = a2;
  unint64_t v34 = a2;
  sub_1DCD505FC();
  uint64_t v16 = sub_1DD048388();
  uint64_t v38 = v15;
  uint64_t v17 = sub_1DCD4402C((void (*)(uint64_t *__return_ptr, uint64_t))sub_1DCD50650, (uint64_t)v37, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (*(void *)(v17 + 16))
  {
    uint64_t v18 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
    MEMORY[0x1F4188790](v18);
    *(&v31 - 2) = v17;
    sub_1DCD52808(&qword_1EBE86510, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    uint64_t v19 = v36;
    sub_1DD047E78();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v19, 0, 1, v18);
  }
  else
  {
    uint64_t v21 = v31;
    swift_bridgeObjectRelease();
    sub_1DCDB40EC(v35);
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_1DD048048();
    os_log_type_t v23 = sub_1DD048848();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = v36;
    uint64_t v26 = v32;
    if (v24)
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v41[0] = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      unint64_t v29 = v34;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1DCED7FA0(v21, v29, v41);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v22, v23, "Failed to parse OntologyNode %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v28, -1, -1);
      MEMORY[0x1E01B07E0](v27, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v26);
    uint64_t v30 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v25, 1, 1, v30);
  }
}

uint64_t sub_1DCD45A40(uint64_t a1)
{
  int64_t v1 = *(void *)(*(void *)a1 + 16);
  if (v1)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DCFC4948(0, v1, 0);
    uint64_t v2 = 0;
    do
    {
      sub_1DD048F78();
      sub_1DD048548();
      swift_bridgeObjectRelease();
      unint64_t v4 = *(void *)(v8 + 16);
      unint64_t v3 = *(void *)(v8 + 24);
      if (v4 >= v3 >> 1) {
        sub_1DCFC4948(v3 > 1, v4 + 1, 1);
      }
      ++v2;
      *(void *)(v8 + 16) = v4 + 1;
      uint64_t v5 = v8 + 16 * v4;
      *(void *)(v5 + 32) = 81;
      *(void *)(v5 + 40) = 0xE100000000000000;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84FF0);
  sub_1DCD52850((unint64_t *)&qword_1EBE84FF8, &qword_1EBE84FF0);
  uint64_t v6 = sub_1DD048398();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1DCD45BD0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x4E574F4E4B4E55 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 0;
  }
  if (a1 == 5526081 && a2 == 0xE300000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 1;
  }
  if (a1 == 0x45525554414ELL && a2 == 0xE600000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 2;
  }
  if (a1 == 0x4B52414D444E414CLL && a2 == 0xE800000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 3;
  }
  if (a1 == 0x414944454DLL && a2 == 0xE500000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 4;
  }
  if (a1 == 1398031696 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 5;
  }
  if (a1 == 0x4445565245534552 && a2 == 0xE900000000000031 || (sub_1DD048FA8() & 1) != 0) {
    return 6;
  }
  if (a1 == 0xD000000000000010 && a2 == 0x80000001DD068210 || (sub_1DD048FA8() & 1) != 0) {
    return 7;
  }
  if (a1 == 0x534C414D494E41 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 8;
  }
  if (a1 == 0x525554504C554353 && a2 == 0xE900000000000045 || (sub_1DD048FA8() & 1) != 0) {
    return 9;
  }
  if (a1 == 0x454E494C594B53 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 10;
  }
  if (a1 == 1398030659 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 11;
  }
  if (a1 == 1397182276 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 12;
  }
  if (a1 == 1263488834 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 13;
  }
  if (a1 == 0x4D55424C41 && a2 == 0xE500000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 14;
  }
  if (a1 == 1146243394 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 15;
  }
  if (a1 == 0x53544345534E49 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 16;
  }
  if (a1 == 0x4C414D4D414DLL && a2 == 0xE600000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 17;
  }
  if (a1 == 0x454C4954504552 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 18;
  }
  if (a1 == 0x4C455241505041 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 19;
  }
  if (a1 == 0x524F535345434341 && a2 == 0xEB00000000534549 || (sub_1DD048FA8() & 1) != 0) {
    return 25;
  }
  if (a1 == 1146048326 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0) {
    return 20;
  }
  if (a1 == 0x4F524645524F5453 && a2 == 0xEA0000000000544ELL || (sub_1DD048FA8() & 1) != 0) {
    return 21;
  }
  if (a1 == 0xD000000000000013 && a2 == 0x80000001DD068230 || (sub_1DD048FA8() & 1) != 0) {
    return 22;
  }
  if (a1 == 0x4D59535F4F545541 && a2 == 0xEB000000004C4F42 || (sub_1DD048FA8() & 1) != 0) {
    return 23;
  }
  if (a1 == 0xD000000000000011 && a2 == 0x80000001DD068250) {
    return 24;
  }
  char v6 = sub_1DD048FA8();
  uint64_t v4 = 100;
  if (v6) {
    return 24;
  }
  return v4;
}

uint64_t sub_1DCD4648C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  char v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
  sub_1DD047BE8();
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v21 = a2;
    swift_bridgeObjectRetain();
    uint64_t v13 = a3 + 48;
    unint64_t v14 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v15 = *(void *)(v13 - 16);
      uint64_t v16 = *(void *)(v13 - 8);
      swift_bridgeObjectRetain();
      sub_1DCD44388(v15, v16);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v14 = sub_1DCE9E7E0(0, *(void *)(v14 + 16) + 1, 1, v14);
      }
      unint64_t v18 = *(void *)(v14 + 16);
      unint64_t v17 = *(void *)(v14 + 24);
      if (v18 >= v17 >> 1) {
        unint64_t v14 = sub_1DCE9E7E0(v17 > 1, v18 + 1, 1, v14);
      }
      v13 += 24;
      *(void *)(v14 + 16) = v18 + 1;
      sub_1DCD52894((uint64_t)v11, v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v18, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
      --v12;
    }
    while (v12);
    uint64_t result = swift_bridgeObjectRelease_n();
    a2 = v21;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v14 = MEMORY[0x1E4FBC860];
  }
  a4[1] = a2;
  a4[2] = v14;
  *a4 = a1;
  return result;
}

uint64_t sub_1DCD46688()
{
  uint64_t v1 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult(0)
     - 8;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0[2];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v20 = v0[2];
    uint64_t v21 = v0;
    uint64_t v7 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v8 = *(void *)(v2 + 72);
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v18 = (unint64_t)"event_destruction";
    unint64_t v19 = (unint64_t)"DomainKnowledgeIdsMapping";
    do
    {
      sub_1DCD528FC(v7, (uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
      if (v4[8] == 1)
      {
        unint64_t v10 = 0xE500000000000000;
        unint64_t v11 = 0x6D75626C61;
        switch(*(void *)v4)
        {
          case 1:
            break;
          case 2:
            unint64_t v10 = 0xE600000000000000;
            unint64_t v11 = 0x6C616D696E61;
            break;
          case 3:
            unint64_t v10 = 0xE300000000000000;
            unint64_t v11 = 7631457;
            break;
          case 4:
            unint64_t v10 = 0xE400000000000000;
            unint64_t v11 = 1937006947;
            break;
          case 5:
            unint64_t v10 = 0xE400000000000000;
            unint64_t v11 = 1936158564;
            break;
          case 6:
            unint64_t v11 = 0xD000000000000011;
            unint64_t v10 = v19 | 0x8000000000000000;
            break;
          case 7:
            unint64_t v11 = 0x6E616D7568;
            break;
          case 8:
            unint64_t v10 = 0xE800000000000000;
            unint64_t v11 = 0x6B72616D646E616CLL;
            break;
          case 9:
            unint64_t v11 = 0x616964656DLL;
            break;
          case 0xALL:
            unint64_t v10 = v18 | 0x8000000000000000;
            unint64_t v11 = 0xD000000000000010;
            break;
          case 0xBLL:
            unint64_t v10 = 0xE600000000000000;
            unint64_t v11 = 0x65727574616ELL;
            break;
          case 0xCLL:
            unint64_t v10 = 0xE900000000000033;
            goto LABEL_32;
          case 0xDLL:
            unint64_t v10 = 0xE900000000000032;
            goto LABEL_32;
          case 0xELL:
            unint64_t v11 = 0x6465767265736572;
            unint64_t v10 = 0xE900000000000031;
            break;
          case 0xFLL:
            unint64_t v10 = 0xEA0000000000746FLL;
            unint64_t v11 = 0x68736E6565726373;
            break;
          case 0x10:
            unint64_t v10 = 0xE900000000000065;
            unint64_t v11 = 0x727574706C756373;
            break;
          case 0x11:
            unint64_t v10 = 0xE700000000000000;
            unint64_t v11 = 0x656E696C796B73;
            break;
          case 0x12:
            unint64_t v10 = 0xE900000000000035;
            goto LABEL_32;
          case 0x13:
            unint64_t v10 = 0xE900000000000034;
            goto LABEL_32;
          case 0x14:
            unint64_t v10 = 0xE900000000000037;
LABEL_32:
            unint64_t v11 = 0x6465767265736572;
            break;
          case 0x15:
            unint64_t v10 = 0xE700000000000000;
            unint64_t v11 = 0x6E6F6968736166;
            break;
          default:
            unint64_t v10 = 0xE700000000000000;
            unint64_t v11 = 0x6E776F6E6B6E75;
            break;
        }
      }
      else
      {
        unint64_t v10 = 0xEC00000064657A69;
        unint64_t v11 = 0x6E676F6365726E75;
      }
      int v12 = *((_DWORD *)v4 + 3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1DCE9E814(0, v9[2] + 1, 1, v9);
      }
      unint64_t v14 = v9[2];
      unint64_t v13 = v9[3];
      if (v14 >= v13 >> 1) {
        uint64_t v9 = sub_1DCE9E814((void *)(v13 > 1), v14 + 1, 1, v9);
      }
      v9[2] = v14 + 1;
      uint64_t v15 = &v9[3 * v14];
      v15[4] = v11;
      v15[5] = v10;
      *((_DWORD *)v15 + 12) = v12;
      sub_1DCD52964((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v0 = v21;
  }
  uint64_t v16 = *v0;
  swift_bridgeObjectRetain();
  return v16;
}

uint64_t sub_1DCD46AF0()
{
  uint64_t v1 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult(0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
  uint64_t v6 = v0[1];
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = v6 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v9 = *(void *)(v2 + 72);
    unint64_t v29 = v0;
    uint64_t v30 = v9;
    uint64_t v28 = v6;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1DCD528FC(v8, (uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
      if (v4[8] == 1)
      {
        unint64_t v10 = 0xE300000000000000;
        uint64_t v11 = 5526081;
        switch(*(void *)v4)
        {
          case 1:
            break;
          case 2:
            unint64_t v10 = 0xE600000000000000;
            uint64_t v11 = 0x45525554414ELL;
            break;
          case 3:
            unint64_t v10 = 0xE800000000000000;
            uint64_t v11 = 0x4B52414D444E414CLL;
            break;
          case 4:
            unint64_t v10 = 0xE500000000000000;
            uint64_t v11 = 0x414944454DLL;
            break;
          case 5:
            uint64_t v11 = 1398031696;
            unint64_t v10 = 0xE400000000000000;
            break;
          case 6:
            uint64_t v11 = 0x4445565245534552;
            unint64_t v10 = 0xE900000000000031;
            break;
          case 7:
            unint64_t v10 = 0x80000001DD068210;
            uint64_t v11 = 0xD000000000000010;
            break;
          case 8:
            unint64_t v10 = 0xE700000000000000;
            uint64_t v11 = 0x534C414D494E41;
            break;
          case 9:
            unint64_t v10 = 0xE900000000000045;
            uint64_t v11 = 0x525554504C554353;
            break;
          case 0xALL:
            unint64_t v10 = 0xE700000000000000;
            uint64_t v11 = 0x454E494C594B53;
            break;
          case 0xBLL:
            unint64_t v10 = 0xE400000000000000;
            uint64_t v11 = 1398030659;
            break;
          case 0xCLL:
            unint64_t v10 = 0xE400000000000000;
            uint64_t v11 = 1397182276;
            break;
          case 0xDLL:
            unint64_t v10 = 0xE400000000000000;
            uint64_t v11 = 1263488834;
            break;
          case 0xELL:
            unint64_t v10 = 0xE500000000000000;
            uint64_t v11 = 0x4D55424C41;
            break;
          case 0xFLL:
            unint64_t v10 = 0xE400000000000000;
            uint64_t v11 = 1146243394;
            break;
          case 0x10:
            unint64_t v10 = 0xE700000000000000;
            uint64_t v11 = 0x53544345534E49;
            break;
          case 0x11:
            unint64_t v10 = 0xE600000000000000;
            uint64_t v11 = 0x4C414D4D414DLL;
            break;
          case 0x12:
            unint64_t v10 = 0xE700000000000000;
            uint64_t v11 = 0x454C4954504552;
            break;
          case 0x13:
            unint64_t v10 = 0xE700000000000000;
            uint64_t v11 = 0x4C455241505041;
            break;
          case 0x14:
            unint64_t v10 = 0xE400000000000000;
            uint64_t v11 = 1146048326;
            break;
          case 0x15:
            unint64_t v10 = 0xEA0000000000544ELL;
            uint64_t v11 = 0x4F524645524F5453;
            break;
          case 0x16:
            uint64_t v11 = 0xD000000000000013;
            uint64_t v26 = "LAUNDRY_CARE_SYMBOL";
            goto LABEL_40;
          case 0x17:
            unint64_t v10 = 0xEB000000004C4F42;
            uint64_t v11 = 0x4D59535F4F545541;
            break;
          case 0x18:
            uint64_t v11 = 0xD000000000000011;
            uint64_t v26 = "BRAND_LOGO_SYMBOL";
LABEL_40:
            unint64_t v10 = (unint64_t)(v26 - 32) | 0x8000000000000000;
            break;
          case 0x19:
            unint64_t v10 = 0xEB00000000534549;
            uint64_t v11 = 0x524F535345434341;
            break;
          default:
            unint64_t v10 = 0xE700000000000000;
            uint64_t v11 = 0x4E574F4E4B4E55;
            break;
        }
      }
      else
      {
        unint64_t v10 = 0xEC00000064657A69;
        uint64_t v11 = 0x6E676F6365726E75;
      }
      int v12 = *((_DWORD *)v4 + 3);
      sub_1DCD52964((uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v31 = v5;
      unint64_t v15 = sub_1DCEAD1A4(v11, v10);
      uint64_t v16 = v5[2];
      BOOL v17 = (v14 & 1) == 0;
      uint64_t v18 = v16 + v17;
      if (__OFADD__(v16, v17))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        sub_1DD049028();
        __break(1u);
        JUMPOUT(0x1DCD47010);
      }
      char v19 = v14;
      if (v5[3] >= v18)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v5 = v31;
          if ((v14 & 1) == 0) {
            goto LABEL_16;
          }
        }
        else
        {
          sub_1DCE88D74();
          uint64_t v5 = v31;
          if ((v19 & 1) == 0) {
            goto LABEL_16;
          }
        }
      }
      else
      {
        sub_1DCE7E984(v18, isUniquelyReferenced_nonNull_native);
        unint64_t v20 = sub_1DCEAD1A4(v11, v10);
        if ((v19 & 1) != (v21 & 1)) {
          goto LABEL_49;
        }
        unint64_t v15 = v20;
        uint64_t v5 = v31;
        if ((v19 & 1) == 0)
        {
LABEL_16:
          v5[(v15 >> 6) + 8] |= 1 << v15;
          uint64_t v22 = (uint64_t *)(v5[6] + 16 * v15);
          *uint64_t v22 = v11;
          v22[1] = v10;
          *(_DWORD *)(v5[7] + 4 * v15) = v12;
          uint64_t v23 = v5[2];
          BOOL v24 = __OFADD__(v23, 1);
          uint64_t v25 = v23 + 1;
          if (v24) {
            goto LABEL_48;
          }
          uint64_t v5[2] = v25;
          swift_bridgeObjectRetain();
          goto LABEL_4;
        }
      }
      *(_DWORD *)(v5[7] + 4 * v15) = v12;
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 += v30;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        uint64_t v0 = v29;
        return *(unsigned int *)v0;
      }
    }
  }
  return *(unsigned int *)v0;
}

uint64_t sub_1DCD47078@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a1;
  uint64_t v86 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult(0);
  uint64_t v3 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult(0);
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v84 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = (void *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v71 = (void (**)(uint64_t, void, uint64_t, void *))*(v83 - 1);
  MEMORY[0x1F4188790](v83);
  uint64_t v74 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v82 = (uint64_t *)((char *)&v69 - v12);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult(0);
  uint64_t v73 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v81 = (uint64_t *)((char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v75 = (uint64_t)&v69 - v16;
  uint64_t v17 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  unint64_t v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  *(void *)a2 = MEMORY[0x1E4FBC860];
  *(_DWORD *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v21;
  uint64_t v22 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion(0);
  sub_1DD047BE8();
  uint64_t v23 = a2 + *(int *)(v22 + 36);
  BOOL v24 = *(void **)(v18 + 56);
  uint64_t v80 = (unint64_t *)(v18 + 56);
  os_log_type_t v85 = v24;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v24)(v23, 1, 1, v17);
  uint64_t v25 = v70;
  long long v26 = v70[1];
  long long v87 = *v70;
  long long v88 = v26;
  sub_1DCD52808(&qword_1EBE86550, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  sub_1DD047E78();
  sub_1DCD2479C(v23, &qword_1EBE86570);
  sub_1DCD52894((uint64_t)v20, v23, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v85)(v23, 0, 1, v17);
  *(_DWORD *)(a2 + 8) = *((_DWORD *)v25 + 19);
  swift_bridgeObjectRelease();
  uint64_t v80 = (unint64_t *)a2;
  *(void *)a2 = MEMORY[0x1E4FBC860];
  uint64_t v27 = *(char **)(*((void *)v25 + 7) + 16);
  if (v27)
  {
    uint64_t v76 = (unsigned int (**)(uint64_t, uint64_t, void *))(v71 + 6);
    v71 += 7;
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = 32;
    uint64_t v30 = v75;
    uint64_t v72 = v13;
    uint64_t v77 = v28;
    do
    {
      os_log_type_t v85 = v27;
      v91[0] = *(_OWORD *)(v28 + v29);
      long long v31 = *(_OWORD *)(v28 + v29 + 16);
      long long v32 = *(_OWORD *)(v28 + v29 + 32);
      long long v33 = *(_OWORD *)(v28 + v29 + 48);
      *(_OWORD *)&v92[12] = *(_OWORD *)(v28 + v29 + 60);
      v91[2] = v32;
      *(_OWORD *)uint64_t v92 = v33;
      v91[1] = v31;
      MEMORY[0x1F4188790](v28);
      sub_1DCD4E7EC((uint64_t)v91);
      sub_1DCD52808(&qword_1EBE86658, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
      sub_1DD047E78();
      uint64_t v34 = *(void *)&v92[8];
      uint64_t v35 = *(void *)&v92[16];
      swift_bridgeObjectRetain();
      uint64_t v36 = v84;
      sub_1DCD454EC(v34, v35, v84);
      swift_bridgeObjectRelease();
      uint64_t v37 = v13;
      uint64_t v38 = v83;
      if ((*v76)(v36, 1, v83) == 1)
      {
        sub_1DCD52964(v30, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
        sub_1DCD4E824((uint64_t)v91);
        sub_1DCD2479C(v36, &qword_1EBE86530);
        uint64_t v13 = v37;
      }
      else
      {
        uint64_t v39 = v36;
        uint64_t v40 = v82;
        sub_1DCD52894(v39, (uint64_t)v82, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        uint64_t v41 = (uint64_t)v40;
        uint64_t v42 = v74;
        sub_1DCD528FC(v41, v74, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        uint64_t v43 = v30 + *(int *)(v37 + 32);
        sub_1DCD2479C(v43, &qword_1EBE86530);
        sub_1DCD52894(v42, v43, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        (*v71)(v43, 0, 1, v38);
        sub_1DCD4E824((uint64_t)v91);
        *(_DWORD *)(v30 + 4) = *(_DWORD *)&v92[24];
        sub_1DCD528FC(v30, (uint64_t)v81, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
        unint64_t v44 = *v80;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v44 = sub_1DCE9E85C(0, *(void *)(v44 + 16) + 1, 1, v44);
        }
        unint64_t v46 = *(void *)(v44 + 16);
        unint64_t v45 = *(void *)(v44 + 24);
        uint64_t v13 = v72;
        if (v46 >= v45 >> 1) {
          unint64_t v44 = sub_1DCE9E85C(v45 > 1, v46 + 1, 1, v44);
        }
        *(void *)(v44 + 16) = v46 + 1;
        sub_1DCD52894((uint64_t)v81, v44+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(void *)(v73 + 72) * v46, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
        *uint64_t v80 = v44;
        sub_1DCD52964((uint64_t)v82, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        uint64_t v30 = v75;
        sub_1DCD52964(v75, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
      }
      v29 += 80;
      uint64_t v27 = (char *)v85 - 1;
      uint64_t v28 = v77;
    }
    while (v85 != (void *)1);
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = *((void *)v70 + 8);
  int64_t v48 = *(void *)(v47 + 16);
  long long v49 = (void *)MEMORY[0x1E4FBC860];
  if (v48)
  {
    uint64_t v90 = (void *)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DCFC57E0(0, v48, 0);
    uint64_t v50 = 0;
    char v51 = v90;
    uint64_t v75 = v47;
    uint64_t v77 = v47 + 32;
    uint64_t v76 = (unsigned int (**)(uint64_t, uint64_t, void *))v48;
    while (1)
    {
      uint64_t v84 = v50;
      long long v52 = (unint64_t *)(v77 + 16 * v50);
      unint64_t v54 = *v52;
      uint64_t v53 = v52[1];
      *((void *)v7 + 1) = v49;
      swift_bridgeObjectRetain();
      sub_1DD047BE8();
      if ((v54 & 0x8000000000000000) != 0 || HIDWORD(v54)) {
        break;
      }
      os_log_type_t v85 = v51;
      *(_DWORD *)uint64_t v7 = v54;
      uint64_t v55 = *(void *)(v53 + 16);
      if (v55)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86AE0);
        long long v49 = (void *)swift_allocObject();
        size_t v56 = _swift_stdlib_malloc_size(v49);
        long long v49[2] = v55;
        v49[3] = 2 * ((uint64_t)(v56 - 32) / 24);
        uint64_t v57 = sub_1DCD5039C((uint64_t)v89, (uint64_t)(v49 + 4), v55, v53);
        uint64_t v83 = v89[2];
        unint64_t v82 = v89[3];
        uint64_t v81 = v89[4];
        swift_bridgeObjectRetain_n();
        sub_1DCD505A4();
        if (v57 != v55)
        {
          __break(1u);
          break;
        }
        swift_bridgeObjectRelease();
      }
      v89[0] = v49;
      sub_1DCD4E654(v89);
      swift_bridgeObjectRelease();
      uint64_t v58 = v89[0];
      uint64_t v59 = v89[0][2];
      uint64_t v83 = v89[0];
      if (v59)
      {
        uint64_t v60 = sub_1DCD52808(&qword_1EBE865F8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
        unint64_t v61 = v58 + 6;
        do
        {
          MEMORY[0x1F4188790](v60);
          swift_bridgeObjectRetain();
          sub_1DD047E78();
          swift_bridgeObjectRelease();
          unint64_t v62 = *((void *)v7 + 1);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v62 = sub_1DCE9E828(0, *(void *)(v62 + 16) + 1, 1, v62);
          }
          unint64_t v64 = *(void *)(v62 + 16);
          unint64_t v63 = *(void *)(v62 + 24);
          if (v64 >= v63 >> 1) {
            unint64_t v62 = sub_1DCE9E828(v63 > 1, v64 + 1, 1, v62);
          }
          v61 += 3;
          *(void *)(v62 + 16) = v64 + 1;
          uint64_t v60 = sub_1DCD52894((uint64_t)v5, v62+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v64, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
          *((void *)v7 + 1) = v62;
          --v59;
        }
        while (v59);
      }
      swift_release();
      char v51 = v85;
      uint64_t v90 = v85;
      unint64_t v66 = v85[2];
      unint64_t v65 = v85[3];
      if (v66 >= v65 >> 1)
      {
        sub_1DCFC57E0(v65 > 1, v66 + 1, 1);
        char v51 = v90;
      }
      uint64_t v50 = v84 + 1;
      _OWORD v51[2] = v66 + 1;
      sub_1DCD52894((uint64_t)v7, (uint64_t)v51+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v66, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
      long long v49 = (void *)MEMORY[0x1E4FBC860];
      if ((unsigned int (**)(uint64_t, uint64_t, void *))v50 == v76)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
    }
    sub_1DD048C98();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    char v51 = (void *)MEMORY[0x1E4FBC860];
LABEL_31:
    uint64_t v67 = v80;
    uint64_t result = swift_bridgeObjectRelease();
    v67[2] = (unint64_t)v51;
  }
  return result;
}

unint64_t sub_1DCD47D80(uint64_t *a1, uint64_t a2)
{
  uint64_t v23 = a2;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion(0) - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)(v2 + 16);
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = *a1;
  uint64_t v21 = *(void *)(v2 + 16);
  uint64_t v22 = v14;
  uint64_t v15 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v16 = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  unint64_t v17 = MEMORY[0x1E4FBC860];
  do
  {
    sub_1DCD528FC(v15, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
    uint64_t v24 = v22;
    sub_1DCD47FF0(v11, &v24, v23, (uint64_t)v7);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v17 = sub_1DCE9D7A0(0, *(void *)(v17 + 16) + 1, 1, v17);
    }
    unint64_t v19 = *(void *)(v17 + 16);
    unint64_t v18 = *(void *)(v17 + 24);
    if (v19 >= v18 >> 1) {
      unint64_t v17 = sub_1DCE9D7A0(v18 > 1, v19 + 1, 1, v17);
    }
    *(void *)(v17 + 16) = v19 + 1;
    sub_1DCD52894((uint64_t)v7, v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v19, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD52964((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
    v15 += v16;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v17;
}

double sub_1DCD47FF0@<D0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v154 = a3;
  uint64_t v186 = a2;
  uint64_t v156 = a1;
  uint64_t v155 = a4;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBE861E0);
  MEMORY[0x1F4188790](v4 - 8);
  long long v151 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  uint64_t v153 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v150 = (uint64_t *)((char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult(0);
  uint64_t v149 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
  MEMORY[0x1F4188790](v11 - 8);
  char v176 = (char *)&v148 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  os_log_type_t v172 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v175 = (char *)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult(0);
  uint64_t v173 = *(void *)(v181 - 8);
  MEMORY[0x1F4188790](v181);
  unint64_t v182 = (unsigned int *)((char *)&v148 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  MEMORY[0x1F4188790](v16 - 8);
  char v161 = (char *)&v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v165 = (uint64_t)&v148 - v19;
  MEMORY[0x1F4188790](v20);
  unsigned int v160 = (char *)&v148 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v164 = (uint64_t)&v148 - v23;
  MEMORY[0x1F4188790](v24);
  long long v185 = (char *)&v148 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v179 = (char *)&v148 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v148 - v29;
  MEMORY[0x1F4188790](v31);
  long long v33 = (char *)&v148 - v32;
  uint64_t v34 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  unsigned int v159 = (_OWORD *)((char *)&v148 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v37);
  id v162 = (_OWORD *)((char *)&v148 - v38);
  MEMORY[0x1F4188790](v39);
  uint64_t v158 = (_OWORD *)((char *)&v148 - v40);
  MEMORY[0x1F4188790](v41);
  unint64_t v157 = (uint64_t *)((char *)&v148 - v42);
  MEMORY[0x1F4188790](v43);
  long long v180 = (_OWORD *)((char *)&v148 - v44);
  MEMORY[0x1F4188790](v45);
  uint64_t v47 = (_OWORD *)((char *)&v148 - v46);
  MEMORY[0x1F4188790](v48);
  uint64_t v50 = (char *)&v148 - v49;
  MEMORY[0x1F4188790](v51);
  uint64_t v53 = (double *)((char *)&v148 - v52);
  uint64_t v178 = *v186;
  uint64_t v186 = (uint64_t *)((char *)v156
                   + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion(0)
                            + 36));
  sub_1DCD2889C((uint64_t)v186, (uint64_t)v33, &qword_1EBE86570);
  uint64_t v183 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  uint64_t v184 = v35 + 48;
  if (v183(v33, 1, v34) == 1)
  {
    *(_OWORD *)uint64_t v53 = 0u;
    *((_OWORD *)v53 + 1) = 0u;
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v33, &qword_1EBE86570);
  }
  else
  {
    sub_1DCD52894((uint64_t)v33, (uint64_t)v53, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  }
  unint64_t v54 = v175;
  uint64_t v55 = (uint64_t)v179;
  double v56 = *v53;
  sub_1DCD52964((uint64_t)v53, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  sub_1DCD2889C((uint64_t)v186, (uint64_t)v30, &qword_1EBE86570);
  unsigned int v57 = v183(v30, 1, v34);
  double v152 = v56;
  if (v57 == 1)
  {
    *(_OWORD *)uint64_t v50 = 0u;
    *((_OWORD *)v50 + 1) = 0u;
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v30, &qword_1EBE86570);
  }
  else
  {
    sub_1DCD52894((uint64_t)v30, (uint64_t)v50, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  }
  uint64_t v58 = (uint64_t)v176;
  uint64_t v59 = (uint64_t)v182;
  uint64_t v60 = *((void *)v50 + 1);
  sub_1DCD52964((uint64_t)v50, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  sub_1DCD2889C((uint64_t)v186, v55, &qword_1EBE86570);
  if (v183((char *)v55, 1, v34) == 1)
  {
    *uint64_t v47 = 0u;
    v47[1] = 0u;
    sub_1DD047BE8();
    sub_1DCD2479C(v55, &qword_1EBE86570);
  }
  else
  {
    sub_1DCD52894(v55, (uint64_t)v47, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  }
  uint64_t v61 = (uint64_t)v185;
  uint64_t v62 = *((void *)v47 + 2);
  sub_1DCD52964((uint64_t)v47, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  sub_1DCD2889C((uint64_t)v186, v61, &qword_1EBE86570);
  unsigned int v63 = v183((char *)v61, 1, v34);
  uint64_t v163 = v34;
  unint64_t v64 = v180;
  if (v63 == 1)
  {
    *long long v180 = 0u;
    v64[1] = 0u;
    sub_1DD047BE8();
    sub_1DCD2479C(v61, &qword_1EBE86570);
  }
  else
  {
    sub_1DCD52894(v61, (uint64_t)v180, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  }
  uint64_t v65 = *((void *)v64 + 3);
  sub_1DCD52964((uint64_t)v64, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  uint64_t v66 = *v156;
  uint64_t v67 = *(void **)(*v156 + 16);
  uint64_t v68 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v166 = v6;
  long long v185 = v10;
  uint64_t v177 = v67;
  if (v67)
  {
    uint64_t v174 = v66 + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80));
    uint64_t v173 = *(void *)(v173 + 72);
    v172 += 6;
    uint64_t v148 = v66;
    swift_bridgeObjectRetain();
    uint64_t v69 = 0;
    uint64_t v168 = v68;
    uint64_t v167 = v68;
    uint64_t v171 = v13;
    while (1)
    {
      sub_1DCD528FC(v174 + v173 * (void)v69, v59, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
      sub_1DCD2889C(v59 + *(int *)(v181 + 32), v58, &qword_1EBE86530);
      int v71 = (*v172)(v58, 1, v13);
      uint64_t v186 = v69;
      if (v71 == 1)
      {
        *unint64_t v54 = v68;
        v54[1] = 0;
        v54[2] = 0xE000000000000000;
        sub_1DD047BE8();
        sub_1DCD2479C(v58, &qword_1EBE86530);
      }
      else
      {
        sub_1DCD52894(v58, (uint64_t)v54, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      }
      uint64_t v72 = *v54;
      int64_t v73 = *(void *)(*v54 + 16);
      if (v73)
      {
        char v190 = v68;
        swift_bridgeObjectRetain();
        sub_1DCFC4948(0, v73, 0);
        uint64_t v74 = 0;
        uint64_t v68 = v190;
        do
        {
          uint64_t v187 = *(void *)(v72 + 8 * v74 + 32);
          uint64_t v188 = 81;
          unint64_t v189 = 0xE100000000000000;
          sub_1DD048F78();
          sub_1DD048548();
          swift_bridgeObjectRelease();
          uint64_t v75 = v188;
          unint64_t v76 = v189;
          char v190 = v68;
          unint64_t v78 = v68[2];
          unint64_t v77 = v68[3];
          if (v78 >= v77 >> 1)
          {
            sub_1DCFC4948(v77 > 1, v78 + 1, 1);
            uint64_t v68 = v190;
          }
          ++v74;
          v68[2] = v78 + 1;
          uint64_t v79 = &v68[2 * v78];
          v79[4] = v75;
          v79[5] = v76;
        }
        while (v73 != v74);
        swift_bridgeObjectRelease();
        uint64_t v6 = v166;
        uint64_t v10 = v185;
        uint64_t v58 = (uint64_t)v176;
        uint64_t v13 = v171;
        unint64_t v54 = v175;
      }
      uint64_t v188 = (uint64_t)v68;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84FF0);
      sub_1DCD52850((unint64_t *)&qword_1EBE84FF8, &qword_1EBE84FF0);
      uint64_t v80 = sub_1DD048398();
      uint64_t v82 = v81;
      swift_bridgeObjectRelease();
      sub_1DCD52964((uint64_t)v54, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      uint64_t v83 = v178;
      if (*(void *)(v178 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v84 = sub_1DCEAD1A4(v80, v82);
        if (v85)
        {
          uint64_t v86 = *(void **)(*(void *)(v83 + 56) + 8 * v84);
          swift_retain();
          swift_bridgeObjectRelease();
          long long v87 = (_OWORD *)v86[3];
          uint64_t v170 = v86[2];
          long long v88 = (char *)v86[5];
          uint64_t v169 = v86[4];
          long long v180 = v87;
          swift_bridgeObjectRetain();
          uint64_t v179 = v88;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v89 = v182;
          uint64_t v90 = (uint64_t)v182 + *(int *)(v181 + 28);
          uint64_t v91 = v164;
          sub_1DCD2889C(v90, v164, &qword_1EBE86570);
          uint64_t v92 = v163;
          if (v183((char *)v91, 1, v163) == 1)
          {
            uint64_t v93 = v157;
            *(_OWORD *)unint64_t v157 = 0u;
            *((_OWORD *)v93 + 1) = 0u;
            sub_1DD047BE8();
            uint64_t v94 = v91;
            uint64_t v95 = v93;
            sub_1DCD2479C(v94, &qword_1EBE86570);
          }
          else
          {
            uint64_t v96 = v91;
            uint64_t v95 = v157;
            sub_1DCD52894(v96, (uint64_t)v157, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          }
          uint64_t v97 = (uint64_t)v161;
          uint64_t v98 = (uint64_t)v160;
          uint64_t v99 = *v95;
          sub_1DCD52964((uint64_t)v95, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          sub_1DCD2889C(v90, v98, &qword_1EBE86570);
          uint64_t v100 = v6;
          if (v183((char *)v98, 1, v92) == 1)
          {
            uint64_t v101 = v158;
            *uint64_t v158 = 0u;
            v101[1] = 0u;
            sub_1DD047BE8();
            sub_1DCD2479C(v98, &qword_1EBE86570);
          }
          else
          {
            uint64_t v101 = v158;
            sub_1DCD52894(v98, (uint64_t)v158, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          }
          uint64_t v102 = *((void *)v101 + 1);
          sub_1DCD52964((uint64_t)v101, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          uint64_t v103 = v165;
          sub_1DCD2889C(v90, v165, &qword_1EBE86570);
          unsigned int v104 = v183((char *)v103, 1, v92);
          uint64_t v105 = v162;
          if (v104 == 1)
          {
            *id v162 = 0u;
            v105[1] = 0u;
            sub_1DD047BE8();
            sub_1DCD2479C(v103, &qword_1EBE86570);
          }
          else
          {
            sub_1DCD52894(v103, (uint64_t)v162, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          }
          uint64_t v106 = *((void *)v105 + 2);
          sub_1DCD52964((uint64_t)v105, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          sub_1DCD2889C(v90, v97, &qword_1EBE86570);
          uint64_t v6 = v100;
          if (v183((char *)v97, 1, v92) == 1)
          {
            uint64_t v107 = v159;
            _OWORD *v159 = 0u;
            v107[1] = 0u;
            sub_1DD047BE8();
            sub_1DCD2479C(v97, &qword_1EBE86570);
          }
          else
          {
            uint64_t v107 = v159;
            sub_1DCD52894(v97, (uint64_t)v159, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          }
          long long v108 = v168;
          uint64_t v109 = v167;
          uint64_t v58 = (uint64_t)v176;
          uint64_t v110 = *((void *)v107 + 3);
          sub_1DCD52964((uint64_t)v107, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          uint64_t v111 = *v89;
          unsigned int v112 = v89[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v108 = sub_1DCE9DE38(0, v108[2] + 1, 1, v108);
          }
          uint64_t v68 = (void *)MEMORY[0x1E4FBC860];
          unint64_t v114 = v108[2];
          unint64_t v113 = v108[3];
          if (v114 >= v113 >> 1) {
            long long v108 = sub_1DCE9DE38((void *)(v113 > 1), v114 + 1, 1, v108);
          }
          v108[2] = v114 + 1;
          uint64_t v115 = &v108[10 * v114];
          v115[4] = v111;
          v115[5] = v99;
          v115[6] = v102;
          v115[7] = v106;
          v115[8] = v110;
          uint64_t v116 = v180;
          v115[9] = v170;
          v115[10] = v116;
          uint64_t v117 = v179;
          v115[11] = v169;
          v115[12] = v117;
          *((_DWORD *)v115 + 26) = v112;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v109 = sub_1DCE9DD28(0, v109[2] + 1, 1, v109);
          }
          uint64_t v70 = v186;
          unint64_t v119 = v109[2];
          unint64_t v118 = v109[3];
          uint64_t v168 = v108;
          if (v119 >= v118 >> 1) {
            uint64_t v109 = sub_1DCE9DD28((void *)(v118 > 1), v119 + 1, 1, v109);
          }
          v109[2] = v119 + 1;
          uint64_t v167 = v109;
          uint64_t v120 = &v109[4 * v119];
          uint64_t v121 = v180;
          v120[4] = v170;
          v120[5] = v121;
          CGFloat v122 = v179;
          v120[6] = v169;
          v120[7] = v122;
          uint64_t v13 = v171;
          unint64_t v54 = v175;
          goto LABEL_17;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v68 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v70 = v186;
LABEL_17:
      uint64_t v69 = (void *)((char *)v70 + 1);
      uint64_t v59 = (uint64_t)v182;
      sub_1DCD52964((uint64_t)v182, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
      if (v69 == v177)
      {
        swift_bridgeObjectRelease();
        goto LABEL_53;
      }
    }
  }
  uint64_t v168 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v167 = (void *)MEMORY[0x1E4FBC860];
LABEL_53:
  uint64_t v123 = v156[2];
  uint64_t v124 = *(void *)(v123 + 16);
  uint64_t v125 = MEMORY[0x1E4FBC860];
  if (v124)
  {
    uint64_t v126 = v123 + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
    uint64_t v127 = *(void *)(v149 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1DCD528FC(v126, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
      uint64_t v128 = sub_1DCD46AF0();
      uint64_t v130 = v129;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v68 = sub_1DCE9DC18(0, v68[2] + 1, 1, v68);
      }
      unint64_t v132 = v68[2];
      unint64_t v131 = v68[3];
      if (v132 >= v131 >> 1) {
        uint64_t v68 = sub_1DCE9DC18((void *)(v131 > 1), v132 + 1, 1, v68);
      }
      v68[2] = v132 + 1;
      uint64_t v133 = &v68[2 * v132];
      v133[4] = v128;
      v133[5] = v130;
      uint64_t v10 = v185;
      sub_1DCD52964((uint64_t)v185, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
      v126 += v127;
      --v124;
    }
    while (v124);
    swift_bridgeObjectRelease();
    uint64_t v134 = (uint64_t)v151;
    uint64_t v6 = v166;
  }
  else
  {
    uint64_t v68 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v134 = (uint64_t)v151;
  }
  id v135 = v168;
  id v136 = v167;
  uint64_t v137 = v156[3];
  uint64_t v138 = type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0);
  sub_1DCD2889C(v154 + *(int *)(v138 + 32), v134, qword_1EBE861E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v153 + 48))(v134, 1, v6) == 1)
  {
    uint64_t v139 = v150;
    void *v150 = v125;
    sub_1DD047BE8();
    uint64_t v140 = v134;
    uint64_t v141 = v139;
    sub_1DCD2479C(v140, qword_1EBE861E0);
  }
  else
  {
    uint64_t v142 = v134;
    uint64_t v141 = v150;
    sub_1DCD52894(v142, (uint64_t)v150, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
  }
  uint64_t v143 = sub_1DCD4A774((uint64_t)v141, v137);
  sub_1DCD52964((uint64_t)v141, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
  int v144 = *((_DWORD *)v156 + 2);
  uint64_t v145 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v146 = v155;
  sub_1DD046588();
  double result = v152;
  *(double *)uint64_t v146 = v152;
  *(void *)(v146 + 8) = v60;
  *(void *)(v146 + 16) = v62;
  *(void *)(v146 + 24) = v65;
  *(unsigned char *)(v146 + 32) = 1;
  *(void *)(v146 + 40) = v136;
  *(void *)(v146 + 48) = v125;
  *(void *)(v146 + 56) = v135;
  *(void *)(v146 + 64) = v68;
  *(_DWORD *)(v146 + 72) = 0;
  *(_DWORD *)(v146 + 76) = v144;
  *(void *)(v146 + 88) = 0;
  *(void *)(v146 + 96) = 0;
  *(void *)(v146 + 80) = 0;
  *(unsigned char *)(v146 + 104) = 0;
  *(void *)(v146 + 112) = v143;
  *(unsigned char *)(v146 + *(int *)(v145 + 64)) = 0;
  *(void *)(v146 + *(int *)(v145 + 68)) = v125;
  return result;
}

uint64_t sub_1DCD49380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v170 = a2;
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v146 = (char *)v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v143 = (char *)v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  CGFloat v169 = *(double *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v135 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion(0);
  uint64_t v142 = *(void *)(v165 - 8);
  MEMORY[0x1F4188790](v165);
  uint64_t v171 = (uint64_t)v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals(0);
  uint64_t v147 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (void *)((char *)v135 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBE861E0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v158 = (char *)v135 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
  uint64_t v21 = *(void *)(v157 - 8);
  MEMORY[0x1F4188790](v157);
  uint64_t v156 = (char *)v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23 - 8);
  long long v150 = (double *)((char *)v135 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v26);
  uint64_t v166 = (void *)((char *)v135 - v27);
  uint64_t v148 = a3;
  uint64_t result = sub_1DCD528FC(v4, a3, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
  uint64_t v155 = *(void *)(a1 + 16);
  if (!v155) {
    return result;
  }
  uint64_t v154 = v170 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0) + 32);
  uint64_t v153 = a1 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  uint64_t v152 = *(void *)(v24 + 72);
  long long v151 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  uint64_t v163 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)&v169 + 48);
  uint64_t v145 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  int v144 = (void (**)(char *, uint64_t))(v8 + 8);
  v135[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v29 = 0;
  uint64_t v137 = "coarseCategoryDistribution";
  unint64_t v136 = 0x80000001DD067880;
  *(void *)&long long v30 = 136315138;
  long long v141 = v30;
  long long v140 = xmmword_1DD04EF00;
  unint64_t v139 = 0x80000001DD068270;
  uint64_t v138 = MEMORY[0x1E4FBC840] + 8;
  double v161 = 0.0001;
  uint64_t v164 = v12;
  uint64_t v31 = (uint64_t)v158;
  uint64_t v32 = v157;
  long long v33 = v156;
  double v162 = -0.0001;
  uint64_t v149 = v7;
  while (1)
  {
    uint64_t v159 = v29;
    uint64_t v35 = v153 + v152 * v29;
    uint64_t v36 = v166;
    sub_1DCD528FC(v35, (uint64_t)v166, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v37 = v36[14];
    sub_1DCD2889C(v154, v31, qword_1EBE861E0);
    if ((*v151)(v31, 1, v32) == 1)
    {
      *long long v33 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1DD047BE8();
      sub_1DCD2479C(v31, qword_1EBE861E0);
    }
    else
    {
      sub_1DCD52894(v31, (uint64_t)v33, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
      swift_bridgeObjectRetain();
    }
    uint64_t v38 = sub_1DCD515F8(v37, (uint64_t)v33);
    uint64_t v39 = *(void *)(v38 + 16);
    uint64_t v160 = v38;
    if (v39)
    {
      uint64_t v40 = v147;
      uint64_t v41 = v38 + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
      swift_bridgeObjectRetain();
      uint64_t v42 = *(void *)(v40 + 72);
      unint64_t v43 = MEMORY[0x1E4FBC860];
      while (1)
      {
        sub_1DCD528FC(v41, (uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
        uint64_t v44 = *v18;
        swift_bridgeObjectRetain();
        sub_1DCD52964((uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
        uint64_t v45 = *(void *)(v44 + 16);
        int64_t v46 = *(void *)(v43 + 16);
        int64_t v47 = v46 + v45;
        if (__OFADD__(v46, v45))
        {
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
          goto LABEL_87;
        }
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (isUniquelyReferenced_nonNull_native && v47 <= *(void *)(v43 + 24) >> 1)
        {
          if (*(void *)(v44 + 16)) {
            goto LABEL_22;
          }
        }
        else
        {
          if (v46 <= v47) {
            int64_t v49 = v46 + v45;
          }
          else {
            int64_t v49 = v46;
          }
          unint64_t v43 = sub_1DCE9E8C4(isUniquelyReferenced_nonNull_native, v49, 1, v43);
          if (*(void *)(v44 + 16))
          {
LABEL_22:
            uint64_t v50 = *(void *)(v43 + 16);
            uint64_t v51 = (*(void *)(v43 + 24) >> 1) - v50;
            uint64_t v52 = *(void *)(type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult(0)
                            - 8);
            uint64_t v53 = *(void *)(v52 + 72);
            if (v51 < v45) {
              goto LABEL_85;
            }
            unint64_t v54 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
            unint64_t v55 = v43 + v54 + v53 * v50;
            unint64_t v56 = v44 + v54;
            uint64_t v57 = v53 * v45;
            unint64_t v58 = v55 + v57;
            unint64_t v59 = v56 + v57;
            if (v56 < v58 && v55 < v59) {
              goto LABEL_88;
            }
            swift_arrayInitWithCopy();
            if (v45)
            {
              uint64_t v61 = *(void *)(v43 + 16);
              BOOL v62 = __OFADD__(v61, v45);
              uint64_t v63 = v61 + v45;
              if (v62) {
                goto LABEL_86;
              }
              *(void *)(v43 + 16) = v63;
            }
            goto LABEL_12;
          }
        }
        if (v45) {
          goto LABEL_84;
        }
LABEL_12:
        swift_bridgeObjectRelease();
        v41 += v42;
        if (!--v39)
        {
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
      }
    }
    unint64_t v43 = MEMORY[0x1E4FBC860];
LABEL_33:
    uint64_t v64 = *(void *)(v43 + 16);
    swift_bridgeObjectRelease();
    if (!v64)
    {
      sub_1DCD52964((uint64_t)v166, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_bridgeObjectRelease();
LABEL_61:
      uint64_t v31 = (uint64_t)v158;
      uint64_t v32 = v157;
      long long v33 = v156;
      uint64_t v34 = v159;
      goto LABEL_5;
    }
    uint64_t v65 = *(void *)(v148 + 16);
    uint64_t v66 = *(void *)(v65 + 16);
    if (v66) {
      break;
    }
LABEL_62:
    swift_bridgeObjectRelease();
    uint64_t v97 = v150;
    uint64_t v98 = v149;
    if (qword_1EBE87190 != -1) {
      swift_once();
    }
    if (byte_1EBE87188 != 1)
    {
LABEL_77:
      long long v108 = qword_1EBE871A8;
      uint64_t v109 = v146;
      if (qword_1EBE871C8 != -1)
      {
        swift_once();
        long long v108 = qword_1EBE871A8;
      }
      goto LABEL_79;
    }
    id v99 = objc_msgSend(self, sel_mainBundle);
    id v100 = objc_msgSend(v99, sel_bundleIdentifier);

    if (v100)
    {
      uint64_t v101 = sub_1DD048408();
      uint64_t v103 = v102;

      if (v101 == 0xD00000000000002BLL && v103 == v136)
      {
        swift_bridgeObjectRelease();
LABEL_70:
        uint64_t v105 = (uint64_t *)&off_1EAB02A48;
        if (qword_1EAB01C28 != -1)
        {
          swift_once();
          uint64_t v105 = (uint64_t *)&off_1EAB02A48;
        }
        goto LABEL_74;
      }
      char v104 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v104) {
        goto LABEL_70;
      }
    }
    uint64_t v105 = &qword_1EBE871E8;
    if (qword_1EBE871A0 != -1)
    {
      swift_once();
      uint64_t v105 = &qword_1EBE871E8;
    }
LABEL_74:
    uint64_t v106 = *(void **)(*v105 + 32);
    swift_retain();
    uint64_t v107 = (void *)sub_1DD0483D8();
    LODWORD(v106) = objc_msgSend(v106, sel_BOOLForKey_, v107);
    swift_release();

    uint64_t v97 = v150;
    if (!v106) {
      goto LABEL_77;
    }
    long long v108 = qword_1EAB02B70;
    uint64_t v109 = v146;
    if (qword_1EAB01C80 != -1)
    {
      swift_once();
      long long v108 = qword_1EAB02B70;
    }
LABEL_79:
    uint64_t v110 = __swift_project_value_buffer(v98, (uint64_t)v108);
    (*v145)(v109, v110, v98);
    sub_1DCD528FC((uint64_t)v166, (uint64_t)v97, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v111 = sub_1DD048048();
    os_log_type_t v112 = sub_1DD048848();
    int v113 = v112;
    if (os_log_type_enabled(v111, v112))
    {
      uint64_t v114 = swift_slowAlloc();
      uint64_t v170 = swift_slowAlloc();
      uint64_t v176 = v170;
      *(_DWORD *)uint64_t v114 = v141;
      CGFloat v115 = *v97;
      CGFloat v116 = v97[1];
      CGFloat v117 = v97[2];
      CGFloat v118 = v97[3];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85228);
      uint64_t v119 = swift_allocObject();
      *(_OWORD *)(v119 + 16) = v140;
      v185.origin.CGFloat x = v115;
      v185.origin.CGFloat y = v116;
      v185.size.CGFloat width = v117;
      v185.size.CGFloat height = v118;
      CGFloat MinX = CGRectGetMinX(v185);
      uint64_t v121 = MEMORY[0x1E4FBC958];
      *(void *)(v119 + 56) = MEMORY[0x1E4FBC958];
      unint64_t v122 = sub_1DCD52700();
      LODWORD(v169) = v113;
      unint64_t v123 = v122;
      *(void *)(v119 + 64) = v122;
      *(CGFloat *)(v119 + 32) = MinX;
      v186.origin.CGFloat x = v115;
      v186.origin.CGFloat y = v116;
      v186.size.CGFloat width = v117;
      v186.size.CGFloat height = v118;
      CGFloat MinY = CGRectGetMinY(v186);
      *(void *)(v119 + 96) = v121;
      *(void *)(v119 + 104) = v123;
      *(CGFloat *)(v119 + 72) = MinY;
      v187.origin.CGFloat x = v115;
      v187.origin.CGFloat y = v116;
      v187.size.CGFloat width = v117;
      v187.size.CGFloat height = v118;
      CGFloat Width = CGRectGetWidth(v187);
      *(void *)(v119 + 136) = v121;
      *(void *)(v119 + 144) = v123;
      *(CGFloat *)(v119 + 112) = Width;
      v188.origin.CGFloat x = v115;
      v188.origin.CGFloat y = v116;
      v188.size.CGFloat width = v117;
      v188.size.CGFloat height = v118;
      CGFloat Height = CGRectGetHeight(v188);
      *(void *)(v119 + 176) = v121;
      *(void *)(v119 + 184) = v123;
      *(CGFloat *)(v119 + 152) = Height;
      CGFloat v172 = v115;
      CGFloat v173 = v116;
      CGFloat v174 = v117;
      CGFloat v175 = v118;
      NormalizedRect.rectID.getter();
      uint64_t v128 = v127;
      uint64_t v129 = (uint64_t)v97;
      uint64_t v131 = v130;
      *(void *)(v119 + 216) = MEMORY[0x1E4FBB1A0];
      *(void *)(v119 + 224) = sub_1DCD52754();
      *(void *)(v119 + 192) = v128;
      *(void *)(v119 + 200) = v131;
      uint64_t v98 = v149;
      uint64_t v132 = sub_1DD048438();
      *(void *)(v114 + 4) = sub_1DCED7FA0(v132, v133, &v176);
      swift_bridgeObjectRelease();
      sub_1DCD52964(v129, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1DCCF9000, v111, LOBYTE(v169), "Failed to find matched region for %s", (uint8_t *)v114, 0xCu);
      uint64_t v134 = v170;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v134, -1, -1);
      MEMORY[0x1E01B07E0](v114, -1, -1);
    }
    else
    {
      sub_1DCD52964((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    }

    (*v144)(v109, v98);
    uint64_t v31 = (uint64_t)v158;
    uint64_t v32 = v157;
    long long v33 = v156;
    uint64_t v34 = v159;
    sub_1DCD52964((uint64_t)v166, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_5:
    uint64_t v29 = v34 + 1;
    if (v29 == v155) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v67 = v142;
  unint64_t v68 = (*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80);
  swift_bridgeObjectRetain();
  unint64_t v69 = 0;
  uint64_t v70 = *(void *)(v67 + 72);
  uint64_t v71 = (uint64_t)v143;
  while (1)
  {
    uint64_t v72 = v171;
    sub_1DCD528FC(v65 + v68, v171, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
    sub_1DCD2889C(v72 + *(int *)(v165 + 36), v71, &qword_1EBE86570);
    if ((*v163)(v71, 1, v164) == 1)
    {
      *(_OWORD *)uint64_t v14 = 0u;
      *((_OWORD *)v14 + 1) = 0u;
      sub_1DD047BE8();
      sub_1DCD2479C(v71, &qword_1EBE86570);
    }
    else
    {
      sub_1DCD52894(v71, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    }
    CGFloat v73 = *(double *)v14;
    CGFloat v74 = *((double *)v14 + 1);
    CGFloat v76 = *((double *)v14 + 2);
    CGFloat v75 = *((double *)v14 + 3);
    sub_1DCD52964((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    CGFloat v77 = *(double *)v166;
    CGFloat v78 = *((double *)v166 + 1);
    CGFloat v79 = *((double *)v166 + 2);
    CGFloat v80 = *((double *)v166 + 3);
    CGFloat v169 = v74;
    uint64_t v170 = *(void *)&v73;
    v177.origin.CGFloat x = v73;
    v177.origin.CGFloat y = v74;
    CGFloat v167 = v75;
    CGFloat v168 = v76;
    v177.size.CGFloat width = v76;
    v177.size.CGFloat height = v75;
    double v81 = CGRectGetMinX(v177);
    double v82 = v162;
    double v83 = v81 + v162;
    v178.origin.CGFloat x = v77;
    v178.origin.CGFloat y = v78;
    v178.size.CGFloat width = v79;
    v178.size.CGFloat height = v80;
    double v84 = CGRectGetMinX(v178);
    double v85 = v161;
    if (v83 <= v84 && v84 <= v81 + v161)
    {
      v179.origin.CGFloat y = v169;
      *(void *)&v179.origin.CGFloat x = v170;
      v179.size.CGFloat height = v167;
      v179.size.CGFloat width = v168;
      double v87 = CGRectGetMinY(v179);
      v180.origin.CGFloat x = v77;
      v180.origin.CGFloat y = v78;
      v180.size.CGFloat width = v79;
      v180.size.CGFloat height = v80;
      double v88 = CGRectGetMinY(v180);
      if (v87 + v82 <= v88 && v88 <= v87 + v85)
      {
        v181.origin.CGFloat y = v169;
        *(void *)&v181.origin.CGFloat x = v170;
        v181.size.CGFloat height = v167;
        v181.size.CGFloat width = v168;
        double v90 = CGRectGetWidth(v181);
        v182.origin.CGFloat x = v77;
        v182.origin.CGFloat y = v78;
        v182.size.CGFloat width = v79;
        v182.size.CGFloat height = v80;
        double v91 = CGRectGetWidth(v182);
        if (v90 + v82 <= v91 && v91 <= v90 + v85)
        {
          v183.origin.CGFloat y = v169;
          *(void *)&v183.origin.CGFloat x = v170;
          v183.size.CGFloat height = v167;
          v183.size.CGFloat width = v168;
          double v93 = CGRectGetHeight(v183);
          v184.origin.CGFloat x = v77;
          v184.origin.CGFloat y = v78;
          v184.size.CGFloat width = v79;
          v184.size.CGFloat height = v80;
          double v94 = CGRectGetHeight(v184);
          if (v93 + v82 <= v94) {
            break;
          }
        }
      }
    }
    sub_1DCD52964(v171, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
LABEL_53:
    ++v69;
    v68 += v70;
    if (v66 == v69)
    {
      swift_bridgeObjectRelease();
      goto LABEL_62;
    }
  }
  double v95 = v94;
  sub_1DCD52964(v171, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
  if (v95 > v93 + v85) {
    goto LABEL_53;
  }
  swift_bridgeObjectRelease();
  unint64_t v96 = *(void *)(v148 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v96 = sub_1DCEC1C28(v96);
  }
  if (v69 < *(void *)(v96 + 16))
  {
    *(void *)(v96 + v68 + 24) = v160;
    swift_bridgeObjectRelease();
    *(void *)(v148 + 16) = v96;
    sub_1DCD52964((uint64_t)v166, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    goto LABEL_61;
  }
LABEL_87:
  __break(1u);
LABEL_88:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD4A520(_DWORD *a1, unint64_t *a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *a2;
  if ((*a2 & 0x8000000000000000) != 0 || HIDWORD(v9))
  {
    uint64_t result = sub_1DD048C98();
    __break(1u);
  }
  else
  {
    *a1 = v9;
    MEMORY[0x1F4188790](v6);
    sub_1DCD52808(&qword_1EBE86550, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    sub_1DD047E78();
    uint64_t v10 = (uint64_t)a1
        + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult(0)
                 + 28);
    sub_1DCD2479C(v10, &qword_1EBE86570);
    sub_1DCD52894((uint64_t)v8, v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
  }
  return result;
}

void *sub_1DCD4A774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  unint64_t v126 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1DD048068();
  uint64_t v125 = *(void **)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  uint64_t v119 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0);
  uint64_t v107 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (int *)((char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
  uint64_t v113 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v128 = (uint64_t *)((char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult(0);
  uint64_t v122 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v112 = (uint64_t)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v127 = (unsigned int *)((char *)&v94 - v19);
  uint64_t v100 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals(0);
  uint64_t v20 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v101 = (uint64_t)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (uint64_t *)((char *)&v94 - v23);
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v129 = MEMORY[0x1E4FBC860];
  uint64_t v26 = *(void *)(a2 + 16);
  uint64_t v109 = a1;
  long long v108 = v6;
  uint64_t v114 = v7;
  CGFloat v116 = v9;
  uint64_t v95 = a2;
  if (v26)
  {
    uint64_t v27 = a2 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    uint64_t v28 = *(void *)(v20 + 72);
    swift_bridgeObjectRetain();
    uint64_t v29 = v26;
    do
    {
      sub_1DCD528FC(v27, (uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
      uint64_t v30 = *v24;
      swift_bridgeObjectRetain();
      sub_1DCD52964((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
      sub_1DCFDEA98(v30);
      v27 += v28;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    uint64_t v25 = v129;
    a1 = v109;
    uint64_t v6 = v108;
    uint64_t v7 = v114;
    unint64_t v9 = v116;
  }
  else
  {
    uint64_t v29 = 0;
  }
  uint64_t v31 = *(void *)(v25 + 16);
  swift_bridgeObjectRelease();
  uint64_t v94 = MEMORY[0x1E4FBC860];
  if (!v29 || !v31) {
    return (void *)v94;
  }
  uint64_t v97 = v29;
  uint64_t v99 = v95 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  uint64_t v111 = (void (**)(char *, uint64_t, uint64_t))(v125 + 2);
  uint64_t v110 = (void (**)(char *, uint64_t))(v125 + 1);
  unint64_t v96 = (unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48);
  uint64_t v98 = *(void *)(v20 + 72);
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  uint64_t v105 = "coarseCategoryDistribution";
  unint64_t v103 = 0x80000001DD067880;
  *(void *)&long long v33 = 67109120;
  long long v106 = v33;
  char v104 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v34 = v101;
  while (1)
  {
    uint64_t v102 = v32;
    sub_1DCD528FC(v99 + v98 * v32, v34, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
    uint64_t v35 = *(void *)v34;
    uint64_t v123 = *(void *)(*(void *)v34 + 16);
    if (v123) {
      break;
    }
    uint64_t v125 = (void *)MEMORY[0x1E4FBC860];
LABEL_53:
    sub_1DCD2889C(v34 + *(int *)(v100 + 24), (uint64_t)v6, &qword_1EBE86570);
    if ((*v96)(v6, 1, v7) == 1)
    {
      *(_OWORD *)unint64_t v9 = 0u;
      *((_OWORD *)v9 + 1) = 0u;
      sub_1DD047BE8();
      sub_1DCD2479C((uint64_t)v6, &qword_1EBE86570);
    }
    else
    {
      sub_1DCD52894((uint64_t)v6, (uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    }
    uint64_t v80 = *(void *)v9;
    uint64_t v81 = *((void *)v9 + 1);
    uint64_t v82 = *((void *)v9 + 2);
    uint64_t v83 = *((void *)v9 + 3);
    sub_1DCD52964((uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v104 = sub_1DCE9DAF0(0, v104[2] + 1, 1, v104);
    }
    unint64_t v85 = v104[2];
    unint64_t v84 = v104[3];
    uint64_t v86 = v102;
    if (v85 >= v84 >> 1)
    {
      uint64_t v92 = sub_1DCE9DAF0((void *)(v84 > 1), v85 + 1, 1, v104);
      uint64_t v86 = v102;
      char v104 = v92;
    }
    double v87 = v104;
    v104[2] = v85 + 1;
    double v88 = &v87[6 * v85];
    v88[4] = v80;
    v88[5] = v81;
    v88[6] = v82;
    v88[7] = v83;
    uint64_t v89 = v125;
    v88[8] = MEMORY[0x1E4FBC860];
    v88[9] = v89;
    uint64_t v34 = v101;
    uint64_t v90 = v86 + 1;
    sub_1DCD52964(v101, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
    uint64_t v32 = v90;
    BOOL v91 = v90 == v97;
    unint64_t v9 = v116;
    if (v91)
    {
      swift_bridgeObjectRelease();
      return v104;
    }
  }
  uint64_t v121 = v35 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
  uint64_t v124 = v35;
  swift_bridgeObjectRetain();
  uint64_t v36 = v124;
  unint64_t v37 = 0;
  uint64_t v125 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v38 = v127;
  while (v37 < *(void *)(v36 + 16))
  {
    uint64_t v39 = *(void *)(v122 + 72);
    unint64_t v126 = v37;
    sub_1DCD528FC(v121 + v39 * v37, (uint64_t)v38, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
    unint64_t v40 = *v38;
    if (*(void *)(*(void *)a1 + 16) > v40)
    {
      uint64_t v41 = v128;
      sub_1DCD528FC(*(void *)a1+ ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80))+ *(void *)(v113 + 72) * v40, (uint64_t)v128, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
      uint64_t v42 = *v41;
      uint64_t v117 = v41[1];
      uint64_t v118 = v42;
      uint64_t v43 = *((void *)v127 + 1);
      uint64_t v44 = *(void *)(v43 + 16);
      if (v44)
      {
        uint64_t v45 = v107;
        uint64_t v46 = v43 + ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80));
        uint64_t v115 = *((void *)v127 + 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v47 = *(void *)(v45 + 72);
        uint64_t v48 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          sub_1DCD528FC(v46, (uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
          sub_1DCD4DD60(v13, (uint64_t)v128, &v129);
          sub_1DCD52964((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
          uint64_t v50 = v130;
          if (v130)
          {
            uint64_t v51 = v129;
            int v52 = v131;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v48 = sub_1DCE9E814(0, v48[2] + 1, 1, v48);
            }
            unint64_t v54 = v48[2];
            unint64_t v53 = v48[3];
            if (v54 >= v53 >> 1) {
              uint64_t v48 = sub_1DCE9E814((void *)(v53 > 1), v54 + 1, 1, v48);
            }
            v48[2] = v54 + 1;
            int64_t v49 = &v48[3 * v54];
            v49[4] = v51;
            void v49[5] = v50;
            *((_DWORD *)v49 + 12) = v52;
          }
          v46 += v47;
          --v44;
        }
        while (v44);
        swift_bridgeObjectRelease_n();
        a1 = v109;
        uint64_t v6 = v108;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v48 = (void *)MEMORY[0x1E4FBC860];
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v9 = v116;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v125 = sub_1DCE9E6B8(0, v125[2] + 1, 1, v125);
      }
      unint64_t v62 = v125[2];
      unint64_t v61 = v125[3];
      if (v62 >= v61 >> 1) {
        uint64_t v125 = sub_1DCE9E6B8((void *)(v61 > 1), v62 + 1, 1, v125);
      }
      uint64_t v63 = v125;
      v125[2] = v62 + 1;
      uint64_t v64 = &v63[3 * v62];
      uint64_t v65 = v117;
      v64[4] = v118;
      v64[5] = v65;
      v64[6] = v48;
      uint64_t v38 = v127;
      sub_1DCD52964((uint64_t)v127, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
      sub_1DCD52964((uint64_t)v128, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
      uint64_t v7 = v114;
      goto LABEL_13;
    }
    if (qword_1EBE87190 != -1) {
      swift_once();
    }
    if (byte_1EBE87188 != 1)
    {
LABEL_47:
      uint64_t v70 = qword_1EBE871A8;
      if (qword_1EBE871C8 != -1)
      {
        swift_once();
        uint64_t v70 = qword_1EBE871A8;
      }
      goto LABEL_49;
    }
    id v55 = objc_msgSend(self, sel_mainBundle);
    id v56 = objc_msgSend(v55, sel_bundleIdentifier);

    if (v56)
    {
      uint64_t v57 = sub_1DD048408();
      uint64_t v59 = v58;

      if (v57 == 0xD00000000000002BLL && v59 == v103)
      {
        swift_bridgeObjectRelease();
LABEL_40:
        uint64_t v67 = (uint64_t *)&off_1EAB02A48;
        if (qword_1EAB01C28 != -1)
        {
          swift_once();
          uint64_t v67 = (uint64_t *)&off_1EAB02A48;
        }
        goto LABEL_44;
      }
      char v66 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v66) {
        goto LABEL_40;
      }
    }
    uint64_t v67 = &qword_1EBE871E8;
    if (qword_1EBE871A0 != -1)
    {
      swift_once();
      uint64_t v67 = &qword_1EBE871E8;
    }
LABEL_44:
    unint64_t v68 = *(void **)(*v67 + 32);
    swift_retain();
    unint64_t v69 = (void *)sub_1DD0483D8();
    LODWORD(v68) = objc_msgSend(v68, sel_BOOLForKey_, v69);
    swift_release();

    if (!v68) {
      goto LABEL_47;
    }
    uint64_t v70 = qword_1EAB02B70;
    if (qword_1EAB01C80 != -1)
    {
      swift_once();
      uint64_t v70 = qword_1EAB02B70;
    }
LABEL_49:
    uint64_t v71 = v120;
    uint64_t v72 = __swift_project_value_buffer(v120, (uint64_t)v70);
    (*v111)(v119, v72, v71);
    uint64_t v73 = v112;
    sub_1DCD528FC((uint64_t)v127, v112, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
    CGFloat v74 = sub_1DD048048();
    os_log_type_t v75 = sub_1DD048848();
    if (os_log_type_enabled(v74, v75))
    {
      CGFloat v76 = (uint8_t *)swift_slowAlloc();
      CGFloat v77 = (int *)v73;
      CGFloat v78 = v76;
      *(_DWORD *)CGFloat v76 = v106;
      int v79 = *v77;
      sub_1DCD52964((uint64_t)v77, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
      *((_DWORD *)v78 + 1) = v79;
      unint64_t v9 = v116;
      _os_log_impl(&dword_1DCCF9000, v74, v75, "Invalid model urn index %u", v78, 8u);
      MEMORY[0x1E01B07E0](v78, -1, -1);
    }
    else
    {
      sub_1DCD52964(v73, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
    }

    (*v110)(v119, v120);
    uint64_t v38 = v127;
    sub_1DCD52964((uint64_t)v127, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
LABEL_13:
    unint64_t v37 = v126 + 1;
    uint64_t v36 = v124;
    if (v126 + 1 == v123)
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = v101;
      goto LABEL_53;
    }
  }
  __break(1u);
  sub_1DCD52964((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
  swift_bridgeObjectRelease();
  uint64_t result = (void *)swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1DCD4B63C(void *a1, uint64_t a2)
{
  uint64_t v124 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  unint64_t v108 = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112);
  uint64_t v111 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult(0);
  uint64_t v122 = *(void *)(v115 - 8);
  MEMORY[0x1F4188790](v115);
  uint64_t v110 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion(0);
  uint64_t v107 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  long long v106 = (uint64_t *)((char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864D0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v117 = (uint64_t)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  uint64_t v114 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v113 = (uint64_t *)((char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85EF8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v120 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v125 = (uint64_t)&v101 - v16;
  uint64_t v123 = type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0);
  uint64_t v118 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  uint64_t v119 = (uint64_t *)((char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (unint64_t *)((char *)&v101 - v19);
  uint64_t v21 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult(0);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v24 = (float *)((char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86500);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v101 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (uint64_t *)((char *)&v101 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*a1 != 1)
  {
    uint64_t v32 = a1[2];
    if (v32)
    {
      if (*(void *)(v32 + 16)) {
        return 0;
      }
    }
  }
  uint64_t v105 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  sub_1DCD2889C(v121 + *(int *)(v105 + 20), (uint64_t)v27, &qword_1EBE86500);
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28);
  uint64_t v34 = MEMORY[0x1E4FBC860];
  if (v33 == 1)
  {
    *uint64_t v31 = 0;
    v31[1] = 0xE000000000000000;
    v31[2] = v34;
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v27, &qword_1EBE86500);
  }
  else
  {
    sub_1DCD52894((uint64_t)v27, (uint64_t)v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
  }
  uint64_t v35 = v31[2];
  swift_bridgeObjectRetain();
  sub_1DCD52964((uint64_t)v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
  uint64_t v36 = *(void *)(v35 + 16);
  uint64_t v109 = v5;
  if (!v36)
  {
    swift_bridgeObjectRelease();
LABEL_45:
    uint64_t v60 = v117;
    sub_1DCD2889C(v121 + *(int *)(v105 + 24), v117, &qword_1EBE864D0);
    uint64_t v61 = v116;
    int v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v60, 1, v116);
    uint64_t v63 = v112;
    uint64_t v64 = v111;
    uint64_t v65 = (uint64_t)v110;
    char v66 = v113;
    if (v62 == 1)
    {
      *uint64_t v113 = 0;
      v66[1] = 0xE000000000000000;
      v66[2] = v34;
      sub_1DD047BE8();
      uint64_t v67 = (char *)v66 + *(int *)(v61 + 28);
      uint64_t v68 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v67, 1, 1, v68);
      sub_1DCD2479C(v60, &qword_1EBE864D0);
    }
    else
    {
      sub_1DCD52894(v60, (uint64_t)v113, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
    }
    uint64_t v70 = v119;
    uint64_t v69 = (uint64_t)v120;
    unint64_t v71 = v66[2];
    swift_bridgeObjectRetain();
    sub_1DCD52964((uint64_t)v66, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
    uint64_t v104 = *(void *)(v71 + 16);
    if (v104)
    {
      unint64_t v72 = 0;
      uint64_t v105 = v71 + ((*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80));
      uint64_t v114 = v118 + 48;
      uint64_t v113 = (void *)(v108 + 48);
      unint64_t v103 = v71;
      while (1)
      {
        if (v72 >= *(void *)(v71 + 16)) {
          goto LABEL_79;
        }
        uint64_t v73 = *(void *)(v107 + 72);
        unint64_t v108 = v72;
        CGFloat v74 = v106;
        sub_1DCD528FC(v105 + v73 * v72, (uint64_t)v106, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
        uint64_t v75 = *v74;
        swift_bridgeObjectRetain();
        sub_1DCD52964((uint64_t)v74, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
        uint64_t v121 = *(void *)(v75 + 16);
        if (v121) {
          break;
        }
        swift_bridgeObjectRelease();
LABEL_51:
        unint64_t v72 = v108 + 1;
        if (v108 + 1 == v104) {
          goto LABEL_75;
        }
      }
      unint64_t v76 = 0;
      uint64_t v117 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20);
      uint64_t v116 = v75 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
      uint64_t v118 = v75;
      while (v76 < *(void *)(v75 + 16))
      {
        sub_1DCD528FC(v116 + *(void *)(v122 + 72) * v76, v65, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
        uint64_t v77 = *(void *)(v124 + v117)
            + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__parseCachingConfig;
        swift_beginAccess();
        sub_1DCD2889C(v77, v69, (uint64_t *)&unk_1EBE85EF8);
        uint64_t v78 = v123;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v114)(v69, 1, v123) == 1)
        {
          uint64_t v79 = MEMORY[0x1E4FBC868];
          *uint64_t v70 = MEMORY[0x1E4FBC868];
          v70[1] = v79;
          v70[2] = v79;
          sub_1DD047BE8();
          uint64_t v80 = (char *)v70 + *(int *)(v78 + 32);
          uint64_t v81 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v80, 1, 1, v81);
          sub_1DCD2479C(v69, (uint64_t *)&unk_1EBE85EF8);
        }
        else
        {
          sub_1DCD52894(v69, (uint64_t)v70, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
        }
        uint64_t v125 = *v70;
        swift_bridgeObjectRetain();
        sub_1DCD52964((uint64_t)v70, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
        sub_1DCD2889C(v65 + *(int *)(v115 + 32), (uint64_t)v5, &qword_1EBE86530);
        int v82 = ((uint64_t (*)(char *, uint64_t, uint64_t))*v113)(v5, 1, v63);
        uint64_t v83 = MEMORY[0x1E4FBC860];
        if (v82 == 1)
        {
          *uint64_t v64 = MEMORY[0x1E4FBC860];
          v64[1] = 0;
          _OWORD v64[2] = 0xE000000000000000;
          sub_1DD047BE8();
          sub_1DCD2479C((uint64_t)v5, &qword_1EBE86530);
        }
        else
        {
          sub_1DCD52894((uint64_t)v5, (uint64_t)v64, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        }
        uint64_t v84 = *v64;
        int64_t v85 = *(void *)(*v64 + 16);
        if (v85)
        {
          uint64_t v129 = v83;
          swift_bridgeObjectRetain();
          sub_1DCFC4948(0, v85, 0);
          uint64_t v86 = 0;
          uint64_t v83 = v129;
          do
          {
            uint64_t v126 = *(void *)(v84 + 8 * v86 + 32);
            uint64_t v127 = 81;
            unint64_t v128 = 0xE100000000000000;
            sub_1DD048F78();
            sub_1DD048548();
            swift_bridgeObjectRelease();
            uint64_t v88 = v127;
            unint64_t v87 = v128;
            uint64_t v129 = v83;
            unint64_t v90 = *(void *)(v83 + 16);
            unint64_t v89 = *(void *)(v83 + 24);
            if (v90 >= v89 >> 1)
            {
              sub_1DCFC4948(v89 > 1, v90 + 1, 1);
              uint64_t v83 = v129;
            }
            ++v86;
            *(void *)(v83 + 16) = v90 + 1;
            unint64_t v91 = v83 + 16 * v90;
            *(void *)(v91 + 32) = v88;
            *(void *)(v91 + 40) = v87;
          }
          while (v85 != v86);
          swift_bridgeObjectRelease();
          uint64_t v5 = v109;
          uint64_t v63 = v112;
          uint64_t v64 = v111;
          uint64_t v65 = (uint64_t)v110;
        }
        uint64_t v127 = v83;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84FF0);
        sub_1DCD52850((unint64_t *)&qword_1EBE84FF8, &qword_1EBE84FF0);
        uint64_t v92 = sub_1DD048398();
        uint64_t v94 = v93;
        swift_bridgeObjectRelease();
        sub_1DCD52964((uint64_t)v64, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
        uint64_t v95 = v125;
        if (*(void *)(v125 + 16) && (unint64_t v96 = sub_1DCEAD1A4(v92, v94), (v97 & 1) != 0))
        {
          float v98 = *(float *)(*(void *)(v95 + 56) + 4 * v96);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          float v99 = *(float *)(v65 + 4);
          sub_1DCD52964(v65, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
          uint64_t v70 = v119;
          uint64_t v69 = (uint64_t)v120;
          uint64_t v75 = v118;
          if (v98 <= v99)
          {
            swift_bridgeObjectRelease();
            goto LABEL_77;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1DCD52964(v65, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
          uint64_t v70 = v119;
          uint64_t v69 = (uint64_t)v120;
          uint64_t v75 = v118;
        }
        if (++v76 == v121)
        {
          swift_bridgeObjectRelease();
          unint64_t v71 = v103;
          goto LABEL_51;
        }
      }
      __break(1u);
LABEL_79:
      __break(1u);
      JUMPOUT(0x1DCD4C830);
    }
LABEL_75:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v37 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20);
  unint64_t v38 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v104 = v35;
  uint64_t v39 = v35 + v38;
  unint64_t v40 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
  uint64_t v41 = *(void *)(v22 + 72);
  unint64_t v103 = (unint64_t)"DomainKnowledgeIdsMapping";
  unint64_t v102 = (unint64_t)"event_destruction";
  while (1)
  {
    sub_1DCD528FC(v39, (uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
    uint64_t v42 = *(void *)(v124 + v37)
        + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__parseCachingConfig;
    swift_beginAccess();
    uint64_t v43 = v125;
    sub_1DCD2889C(v42, v125, (uint64_t *)&unk_1EBE85EF8);
    uint64_t v44 = v123;
    if ((*v40)(v43, 1, v123) == 1)
    {
      uint64_t v45 = v24;
      uint64_t v46 = v40;
      uint64_t v47 = v41;
      uint64_t v48 = v37;
      uint64_t v49 = MEMORY[0x1E4FBC860];
      *uint64_t v20 = sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
      v20[1] = sub_1DCDB86BC(v49);
      uint64_t v50 = v49;
      uint64_t v37 = v48;
      uint64_t v41 = v47;
      unint64_t v40 = v46;
      uint64_t v24 = v45;
      v20[2] = sub_1DCDB86BC(v50);
      sub_1DD047BE8();
      uint64_t v51 = (char *)v20 + *(int *)(v44 + 32);
      uint64_t v52 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
      sub_1DCD2479C(v43, (uint64_t *)&unk_1EBE85EF8);
    }
    else
    {
      sub_1DCD52894(v43, (uint64_t)v20, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
    }
    unint64_t v53 = v20[1];
    swift_bridgeObjectRetain();
    sub_1DCD52964((uint64_t)v20, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
    if (*((unsigned char *)v24 + 8) == 1)
    {
      unint64_t v54 = 0xE500000000000000;
      uint64_t v55 = 0x6D75626C61;
      switch(*(void *)v24)
      {
        case 1:
          break;
        case 2:
          unint64_t v54 = 0xE600000000000000;
          uint64_t v55 = 0x6C616D696E61;
          break;
        case 3:
          unint64_t v54 = 0xE300000000000000;
          uint64_t v55 = 7631457;
          break;
        case 4:
          unint64_t v54 = 0xE400000000000000;
          uint64_t v55 = 1937006947;
          break;
        case 5:
          unint64_t v54 = 0xE400000000000000;
          uint64_t v55 = 1936158564;
          break;
        case 6:
          uint64_t v55 = 0xD000000000000011;
          unint64_t v54 = v103 | 0x8000000000000000;
          break;
        case 7:
          uint64_t v55 = 0x6E616D7568;
          break;
        case 8:
          unint64_t v54 = 0xE800000000000000;
          uint64_t v55 = 0x6B72616D646E616CLL;
          break;
        case 9:
          uint64_t v55 = 0x616964656DLL;
          break;
        case 0xALL:
          unint64_t v54 = v102 | 0x8000000000000000;
          uint64_t v55 = 0xD000000000000010;
          break;
        case 0xBLL:
          unint64_t v54 = 0xE600000000000000;
          uint64_t v55 = 0x65727574616ELL;
          break;
        case 0xCLL:
          unint64_t v54 = 0xE900000000000033;
          goto LABEL_41;
        case 0xDLL:
          unint64_t v54 = 0xE900000000000032;
          goto LABEL_41;
        case 0xELL:
          uint64_t v55 = 0x6465767265736572;
          unint64_t v54 = 0xE900000000000031;
          break;
        case 0xFLL:
          unint64_t v54 = 0xEA0000000000746FLL;
          uint64_t v55 = 0x68736E6565726373;
          break;
        case 0x10:
          unint64_t v54 = 0xE900000000000065;
          uint64_t v55 = 0x727574706C756373;
          break;
        case 0x11:
          unint64_t v54 = 0xE700000000000000;
          uint64_t v55 = 0x656E696C796B73;
          break;
        case 0x12:
          unint64_t v54 = 0xE900000000000035;
          goto LABEL_41;
        case 0x13:
          unint64_t v54 = 0xE900000000000034;
          goto LABEL_41;
        case 0x14:
          unint64_t v54 = 0xE900000000000037;
LABEL_41:
          uint64_t v55 = 0x6465767265736572;
          break;
        case 0x15:
          unint64_t v54 = 0xE700000000000000;
          uint64_t v55 = 0x6E6F6968736166;
          break;
        default:
          unint64_t v54 = 0xE700000000000000;
          uint64_t v55 = 0x6E776F6E6B6E75;
          break;
      }
    }
    else
    {
      unint64_t v54 = 0xEC00000064657A69;
      uint64_t v55 = 0x6E676F6365726E75;
    }
    if (*(void *)(v53 + 16))
    {
      unint64_t v56 = sub_1DCEAD1A4(v55, v54);
      if (v57) {
        break;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCD52964((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
LABEL_10:
    v39 += v41;
    if (!--v36)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = v109;
      uint64_t v34 = MEMORY[0x1E4FBC860];
      goto LABEL_45;
    }
  }
  float v58 = *(float *)(*(void *)(v53 + 56) + 4 * v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  float v59 = v24[3];
  sub_1DCD52964((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
  if (v58 > v59) {
    goto LABEL_10;
  }
LABEL_77:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1DCD4C888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v52 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v48 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v49 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86500);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
  uint64_t v45 = *(void *)(v12 - 8);
  uint64_t v46 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864D0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (uint64_t *)((char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v43 - v23;
  uint64_t v25 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  uint64_t v26 = v25[6];
  uint64_t v47 = a2;
  sub_1DCD2889C(a2 + v26, (uint64_t)v17, &qword_1EBE864D0);
  int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  uint64_t v28 = MEMORY[0x1E4FBC860];
  if (v27 == 1)
  {
    *uint64_t v21 = 0;
    v21[1] = 0xE000000000000000;
    v21[2] = v28;
    sub_1DD047BE8();
    uint64_t v29 = (char *)v21 + *(int *)(v18 + 28);
    uint64_t v30 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
    sub_1DCD2479C((uint64_t)v17, &qword_1EBE864D0);
  }
  else
  {
    sub_1DCD52894((uint64_t)v17, (uint64_t)v21, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
  }
  sub_1DCD49380(v43, v44, (uint64_t)v24);
  sub_1DCD52964((uint64_t)v21, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
  uint64_t v31 = v52;
  uint64_t v32 = v52 + v25[6];
  sub_1DCD2479C(v32, &qword_1EBE864D0);
  sub_1DCD52894((uint64_t)v24, v32, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v32, 0, 1, v18);
  uint64_t v33 = v47;
  sub_1DCD2889C(v47 + v25[5], (uint64_t)v11, &qword_1EBE86500);
  uint64_t v35 = v45;
  uint64_t v34 = v46;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v11, 1, v46) == 1)
  {
    *uint64_t v14 = 0;
    v14[1] = 0xE000000000000000;
    v14[2] = MEMORY[0x1E4FBC860];
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v11, &qword_1EBE86500);
  }
  else
  {
    sub_1DCD52894((uint64_t)v11, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
  }
  uint64_t v36 = v51;
  uint64_t v37 = v49;
  uint64_t v38 = v31 + v25[5];
  sub_1DCD2479C(v38, &qword_1EBE86500);
  sub_1DCD52894((uint64_t)v14, v38, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v34);
  uint64_t v39 = v48;
  sub_1DCD2889C(v33 + v25[7], v48, &qword_1EBE86570);
  uint64_t v40 = v50;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v39, 1, v36) == 1)
  {
    *uint64_t v37 = 0u;
    v37[1] = 0u;
    sub_1DD047BE8();
    sub_1DCD2479C(v39, &qword_1EBE86570);
  }
  else
  {
    sub_1DCD52894(v39, (uint64_t)v37, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  }
  uint64_t v41 = v31 + v25[7];
  sub_1DCD2479C(v41, &qword_1EBE86570);
  sub_1DCD52894((uint64_t)v37, v41, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v36);
}

BOOL sub_1DCD4CE94()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86500);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864D0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(v1 + v8[6], (uint64_t)v16, &qword_1EBE864D0);
  uint64_t v17 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17);
  sub_1DCD2479C((uint64_t)v16, &qword_1EBE864D0);
  sub_1DCD528FC(v1, (uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  if (v18 == 1)
  {
    sub_1DCD52964((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    sub_1DCD528FC(v1, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  }
  else
  {
    sub_1DCD2889C((uint64_t)&v13[v8[5]], (uint64_t)v7, &qword_1EBE86500);
    uint64_t v19 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
    int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v7, 1, v19);
    sub_1DCD2479C((uint64_t)v7, &qword_1EBE86500);
    sub_1DCD52964((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    sub_1DCD528FC(v1, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    if (v20 != 1)
    {
      sub_1DCD2889C((uint64_t)&v10[v8[7]], (uint64_t)v4, &qword_1EBE86570);
      uint64_t v22 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
      BOOL v21 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v4, 1, v22) != 1;
      sub_1DCD2479C((uint64_t)v4, &qword_1EBE86570);
      goto LABEL_6;
    }
  }
  BOOL v21 = 0;
LABEL_6:
  sub_1DCD52964((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  return v21;
}

uint64_t sub_1DCD4D228(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    LODWORD(v12) = 0;
    uint64_t v11 = 3451;
    v10[0] = 2;
  }
  else
  {
    if (!HIDWORD(a2))
    {
      *(_DWORD *)a1 = a2;
      MEMORY[0x1F4188790](a1);
      uint64_t v12 = v7;
      swift_bridgeObjectRetain();
      unint64_t v8 = sub_1DCFB3228((void (*)(void *))sub_1DCD527CC, (uint64_t)v10, a5);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(a1 + 8) = v8;
      return result;
    }
    LODWORD(v12) = 0;
    uint64_t v11 = 3455;
    v10[0] = 2;
  }
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCD4D374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v59 = a3;
  uint64_t v56 = a2;
  uint64_t v62 = sub_1DD048068();
  uint64_t v58 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v55 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v52 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v54 = (uint64_t)&v52 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85348);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v20 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v53 = (uint64_t)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v57 = (uint64_t)&v52 - v23;
  unint64_t v24 = *(void *)(a1 + 8);
  uint64_t v60 = *(void (**)(uint64_t, uint64_t))a1;
  int v25 = *(_DWORD *)(a1 + 16);
  uint64_t v26 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
  sub_1DCD2889C(v56 + *(int *)(v26 + 24), (uint64_t)v12, (uint64_t *)&unk_1EBE85348);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v16, 1, 1, v27);
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v12, (uint64_t *)&unk_1EBE85348);
  }
  else
  {
    sub_1DCD52894((uint64_t)v12, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
  }
  sub_1DCDCFA20((uint64_t)v60, v24, (uint64_t)v16, (uint64_t)v19);
  sub_1DCD52964((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v61);
  uint64_t v29 = v58;
  if (v28 == 1)
  {
    sub_1DCD2479C((uint64_t)v19, &qword_1EBE86530);
    uint64_t v30 = v54;
    sub_1DCDB40EC(v54);
    swift_bridgeObjectRetain_n();
    uint64_t v31 = sub_1DD048048();
    os_log_type_t v32 = sub_1DD048848();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v64 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1DCED7FA0((uint64_t)v60, v24, &v64);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v31, v32, "Failed to encode label %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v34, -1, -1);
      MEMORY[0x1E01B07E0](v33, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v62);
    uint64_t v47 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v59, 1, 1, v47);
  }
  else
  {
    uint64_t v35 = v57;
    sub_1DCD52894((uint64_t)v19, v57, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    sub_1DCDB40EC((uint64_t)v7);
    uint64_t v36 = v55;
    sub_1DCDB4300(v55);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v29 + 8);
    uint64_t v38 = v62;
    v37(v7, v62);
    uint64_t v39 = v53;
    sub_1DCD528FC(v35, v53, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    uint64_t v40 = sub_1DD048048();
    os_log_type_t v41 = sub_1DD048848();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v60 = (void (*)(uint64_t, uint64_t))v37;
      uint64_t v44 = v43;
      uint64_t v64 = v43;
      *(_DWORD *)uint64_t v42 = 136315138;
      sub_1DCD52808((unint64_t *)&qword_1EBE86518, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      uint64_t v45 = sub_1DD048FB8();
      uint64_t v63 = sub_1DCED7FA0(v45, v46, &v64);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD52964(v39, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      _os_log_impl(&dword_1DCCF9000, v40, v41, "Writing %s to parseCache", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v44, -1, -1);
      MEMORY[0x1E01B07E0](v42, -1, -1);

      v60(v55, v62);
    }
    else
    {
      sub_1DCD52964(v39, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);

      v37((char *)v36, v38);
    }
    uint64_t v49 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0);
    MEMORY[0x1F4188790](v49);
    uint64_t v50 = v57;
    *(&v52 - 2) = v57;
    *((_DWORD *)&v52 - 2) = v25;
    sub_1DCD52808(&qword_1EBE86580, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    uint64_t v51 = v59;
    sub_1DD047E78();
    sub_1DCD52964(v50, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v51, 0, 1, v49);
  }
}

uint64_t sub_1DCD4DC18(float *a1, uint64_t a2, float a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD528FC(a2, (uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  uint64_t v10 = (uint64_t)a1
      + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0)
               + 24);
  sub_1DCD2479C(v10, &qword_1EBE86530);
  sub_1DCD52894((uint64_t)v9, v10, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  *a1 = a3;
  return result;
}

uint64_t sub_1DCD4DD60@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v78 = a1;
  CGFloat v74 = a3;
  uint64_t v3 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v71 = (uint64_t)v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v76 = v5;
  uint64_t v77 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v73 = (uint64_t)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v72 = (uint64_t)v66 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v70 = (uint64_t)v66 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85348);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v67 = (uint64_t)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v66 - v22;
  uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v68 = (void *)((char *)v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (void *)((char *)v66 - v28);
  uint64_t v69 = v3;
  uint64_t v30 = *(int *)(v3 + 24);
  uint64_t v32 = v31;
  sub_1DCD2889C((uint64_t)v78 + v30, (uint64_t)v23, &qword_1EBE86530);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v66[1] = v25 + 48;
  if (v33(v23, 1, v32) == 1)
  {
    *uint64_t v29 = MEMORY[0x1E4FBC860];
    v29[1] = 0;
    id v29[2] = 0xE000000000000000;
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v23, &qword_1EBE86530);
  }
  else
  {
    sub_1DCD52894((uint64_t)v23, (uint64_t)v29, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  }
  uint64_t v34 = v75;
  uint64_t v35 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
  sub_1DCD2889C(v34 + *(int *)(v35 + 24), (uint64_t)v14, (uint64_t *)&unk_1EBE85348);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v36 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.OneOf_Config(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v18, 1, 1, v36);
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v14, (uint64_t *)&unk_1EBE85348);
  }
  else
  {
    sub_1DCD52894((uint64_t)v14, (uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
  }
  uint64_t v37 = sub_1DCDCFFEC((uint64_t)v29, (uint64_t)v18);
  unint64_t v39 = v38;
  sub_1DCD52964((uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig);
  sub_1DCD52964((uint64_t)v29, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  if (v39)
  {
    uint64_t v40 = v72;
    sub_1DCDB40EC(v72);
    uint64_t v41 = v73;
    sub_1DCDB4300(v73);
    uint64_t v42 = v76;
    uint64_t v43 = v77 + 8;
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    v44(v40, v76);
    swift_bridgeObjectRetain_n();
    uint64_t v45 = sub_1DD048048();
    os_log_type_t v46 = sub_1DD048848();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v80 = v48;
      uint64_t v77 = v43;
      *(_DWORD *)uint64_t v47 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v79 = sub_1DCED7FA0(v37, v39, &v80);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v45, v46, "Reading %s from parseCache", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v48, -1, -1);
      MEMORY[0x1E01B07E0](v47, -1, -1);

      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v44)(v73, v76);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v44)(v41, v42);
    }
    uint64_t v59 = v74;
    int v60 = *v78;
    *CGFloat v74 = v37;
    v59[1] = v39;
    *((_DWORD *)v59 + 4) = v60;
  }
  else
  {
    uint64_t v50 = v70;
    sub_1DCDB40EC(v70);
    uint64_t v51 = v71;
    sub_1DCD528FC((uint64_t)v78, v71, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    uint64_t v52 = sub_1DD048048();
    os_log_type_t v53 = sub_1DD048848();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v80 = v55;
      *(_DWORD *)uint64_t v54 = 136315138;
      uint64_t v56 = v67;
      sub_1DCD2889C(v51 + *(int *)(v69 + 24), v67, &qword_1EBE86530);
      unsigned int v57 = v33((char *)v56, 1, v32);
      uint64_t v58 = v68;
      if (v57 == 1)
      {
        *uint64_t v68 = MEMORY[0x1E4FBC860];
        v58[1] = 0;
        v58[2] = 0xE000000000000000;
        sub_1DD047BE8();
        sub_1DCD2479C(v56, &qword_1EBE86530);
      }
      else
      {
        sub_1DCD52894(v56, (uint64_t)v68, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      }
      sub_1DCD52808((unint64_t *)&qword_1EBE86518, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      uint64_t v61 = (uint64_t)v58;
      uint64_t v62 = sub_1DD048FB8();
      unint64_t v64 = v63;
      sub_1DCD52964(v61, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      uint64_t v79 = sub_1DCED7FA0(v62, v64, &v80);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD52964(v71, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
      _os_log_impl(&dword_1DCCF9000, v52, v53, "Failed to encode label %s", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v55, -1, -1);
      MEMORY[0x1E01B07E0](v54, -1, -1);
    }
    else
    {
      sub_1DCD52964(v51, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
    }

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 8))(v50, v76);
    uint64_t v65 = v74;
    *CGFloat v74 = 0;
    v65[1] = 0;
    *((_DWORD *)v65 + 4) = 0;
  }
  return result;
}

uint64_t sub_1DCD4E654(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_1DCD7436C(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_1DCD4E85C(v5);
  *a1 = v2;
  return result;
}

float sub_1DCD4E6C0(uint64_t a1)
{
  float result = *(float *)(v1 + 32);
  uint64_t v3 = *(uint64_t **)(v1 + 40);
  *(float *)(a1 + 12) = result;
  uint64_t v4 = *v3;
  LOBYTE(v3) = *((unsigned char *)v3 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = (_BYTE)v3;
  return result;
}

void *sub_1DCD4E6E0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86AF8);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  void v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1DCD4E748(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1DD0485C8();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E01AE250](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

__n128 sub_1DCD4E7C4(uint64_t a1)
{
  __n128 result = *(__n128 *)(v1 + 16);
  long long v3 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1DCD4E7D0(_DWORD *a1)
{
  return sub_1DCD4A520(a1, *(unint64_t **)(v1 + 16));
}

uint64_t sub_1DCD4E7EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCD4E824(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCD4E85C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DD048F68();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_154;
    }
    if (v3) {
      return sub_1DCD4EFB4(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_162;
  }
  uint64_t v109 = result;
  long long v106 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_120:
      float v98 = v11;
      uint64_t v108 = v8;
      if (v12 >= 2)
      {
        uint64_t v99 = *v106;
        do
        {
          unint64_t v100 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_149;
          }
          if (!v99) {
            goto LABEL_161;
          }
          uint64_t v101 = v98;
          uint64_t v102 = *(void *)&v98[16 * v100 + 32];
          uint64_t v103 = *(void *)&v98[16 * v12 + 24];
          sub_1DCD4F098((char *)(v99 + 24 * v102), (char *)(v99 + 24 * *(void *)&v98[16 * v12 + 16]), v99 + 24 * v103, __dst);
          if (v1) {
            break;
          }
          if (v103 < v102) {
            goto LABEL_150;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v101 = sub_1DCD729EC((uint64_t)v101);
          }
          if (v100 >= *((void *)v101 + 2)) {
            goto LABEL_151;
          }
          uint64_t v104 = &v101[16 * v100 + 32];
          *(void *)uint64_t v104 = v102;
          *((void *)v104 + 1) = v103;
          unint64_t v105 = *((void *)v101 + 2);
          if (v12 > v105) {
            goto LABEL_152;
          }
          memmove(&v101[16 * v12 + 16], &v101[16 * v12 + 32], 16 * (v105 - v12));
          float v98 = v101;
          *((void *)v101 + 2) = v105 - 1;
          unint64_t v12 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v108 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v108 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB024C0);
    uint64_t v7 = sub_1DD0486F8();
    *(void *)(v7 + 16) = v6;
    uint64_t v108 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v107 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v110 = v3;
  while (2)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3)
    {
LABEL_23:
      if (v9 < v3) {
        goto LABEL_49;
      }
      goto LABEL_69;
    }
    uint64_t v14 = (uint64_t *)(v10 + 24 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 24 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v21 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_48;
      }
      int v20 = 0;
    }
    else
    {
      int v19 = sub_1DD048FA8();
      int v20 = v19;
      uint64_t v21 = v13 + 2;
      if (v13 + 2 >= v3)
      {
        uint64_t v9 = v13 + 2;
        if ((v19 & 1) == 0) {
          goto LABEL_23;
        }
LABEL_40:
        if (v21 < v13) {
          break;
        }
        goto LABEL_41;
      }
    }
    uint64_t v22 = (void *)(v107 + 24 * v21);
    while (1)
    {
      uint64_t v24 = (void *)(v10 + 24 * v9);
      if (*(v22 - 1) != *v24 || *v22 != v24[1])
      {
        if ((v20 ^ sub_1DD048FA8())) {
          goto LABEL_39;
        }
        goto LABEL_29;
      }
      if (v20) {
        break;
      }
LABEL_29:
      v22 += 3;
      uint64_t v23 = v21 + 1;
      uint64_t v9 = v21;
      uint64_t v21 = v23;
      if (v23 >= v110)
      {
        uint64_t v21 = v23;
LABEL_39:
        uint64_t v3 = v110;
        uint64_t v9 = v21;
        if ((v20 & 1) == 0) {
          goto LABEL_23;
        }
        goto LABEL_40;
      }
    }
    uint64_t v3 = v110;
    if (v21 >= v13)
    {
LABEL_41:
      if (v13 < v21)
      {
        uint64_t v26 = 24 * v21;
        uint64_t v27 = 24 * v13;
        uint64_t v28 = v21;
        uint64_t v29 = v13;
        do
        {
          if (v29 != --v28)
          {
            if (!v10) {
              goto LABEL_160;
            }
            uint64_t v30 = v10 + v27;
            uint64_t v31 = v10 + v26;
            uint64_t v32 = *(void *)(v10 + v27);
            uint64_t v33 = *(void *)(v10 + v27 + 8);
            int v34 = *(_DWORD *)(v10 + v27 + 16);
            uint64_t v35 = *(void *)(v10 + v26 - 8);
            *(_OWORD *)uint64_t v30 = *(_OWORD *)(v10 + v26 - 24);
            *(void *)(v30 + 16) = v35;
            *(void *)(v31 - 24) = v32;
            *(void *)(v31 - 16) = v33;
            *(_DWORD *)(v31 - 8) = v34;
          }
          ++v29;
          v26 -= 24;
          v27 += 24;
        }
        while (v29 < v28);
      }
LABEL_48:
      uint64_t v9 = v21;
      if (v21 < v3)
      {
LABEL_49:
        if (__OFSUB__(v9, v13)) {
          goto LABEL_153;
        }
        if (v9 - v13 < v109)
        {
          if (__OFADD__(v13, v109)) {
            goto LABEL_155;
          }
          if (v13 + v109 >= v3) {
            uint64_t v36 = v3;
          }
          else {
            uint64_t v36 = v13 + v109;
          }
          if (v36 < v13)
          {
LABEL_156:
            __break(1u);
            break;
          }
          if (v9 != v36)
          {
            uint64_t v37 = v10 + 24 * v9;
            do
            {
              uint64_t v38 = v13;
              uint64_t v39 = v37;
              do
              {
                BOOL v40 = *(void *)v39 == *(void *)(v39 - 24) && *(void *)(v39 + 8) == *(void *)(v39 - 16);
                if (v40 || (sub_1DD048FA8() & 1) == 0) {
                  break;
                }
                if (!v10) {
                  goto LABEL_158;
                }
                uint64_t v41 = *(void *)v39;
                uint64_t v42 = *(void *)(v39 + 8);
                int v43 = *(_DWORD *)(v39 + 16);
                *(_OWORD *)uint64_t v39 = *(_OWORD *)(v39 - 24);
                *(void *)(v39 + 16) = *(void *)(v39 - 8);
                *(void *)(v39 - 16) = v42;
                *(_DWORD *)(v39 - 8) = v43;
                *(void *)(v39 - 24) = v41;
                v39 -= 24;
                ++v38;
              }
              while (v9 != v38);
              ++v9;
              v37 += 24;
            }
            while (v9 != v36);
            uint64_t v9 = v36;
          }
        }
      }
LABEL_69:
      if (v9 < v13) {
        goto LABEL_148;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1DCD71FDC(0, *((void *)v11 + 2) + 1, 1, v11);
      }
      unint64_t v45 = *((void *)v11 + 2);
      unint64_t v44 = *((void *)v11 + 3);
      unint64_t v12 = v45 + 1;
      if (v45 >= v44 >> 1) {
        uint64_t v11 = sub_1DCD71FDC((char *)(v44 > 1), v45 + 1, 1, v11);
      }
      *((void *)v11 + 2) = v12;
      os_log_type_t v46 = v11 + 32;
      uint64_t v47 = &v11[16 * v45 + 32];
      *(void *)uint64_t v47 = v13;
      *((void *)v47 + 1) = v9;
      if (v45)
      {
        uint64_t v111 = v9;
        while (1)
        {
          unint64_t v48 = v12 - 1;
          if (v12 >= 4)
          {
            os_log_type_t v53 = &v46[16 * v12];
            uint64_t v54 = *((void *)v53 - 8);
            uint64_t v55 = *((void *)v53 - 7);
            BOOL v59 = __OFSUB__(v55, v54);
            uint64_t v56 = v55 - v54;
            if (v59) {
              goto LABEL_137;
            }
            uint64_t v58 = *((void *)v53 - 6);
            uint64_t v57 = *((void *)v53 - 5);
            BOOL v59 = __OFSUB__(v57, v58);
            uint64_t v51 = v57 - v58;
            char v52 = v59;
            if (v59) {
              goto LABEL_138;
            }
            unint64_t v60 = v12 - 2;
            uint64_t v61 = &v46[16 * v12 - 32];
            uint64_t v63 = *(void *)v61;
            uint64_t v62 = *((void *)v61 + 1);
            BOOL v59 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v59) {
              goto LABEL_140;
            }
            BOOL v59 = __OFADD__(v51, v64);
            uint64_t v65 = v51 + v64;
            if (v59) {
              goto LABEL_143;
            }
            if (v65 >= v56)
            {
              uint64_t v83 = &v46[16 * v48];
              uint64_t v85 = *(void *)v83;
              uint64_t v84 = *((void *)v83 + 1);
              BOOL v59 = __OFSUB__(v84, v85);
              uint64_t v86 = v84 - v85;
              if (v59) {
                goto LABEL_147;
              }
              BOOL v76 = v51 < v86;
              goto LABEL_107;
            }
          }
          else
          {
            if (v12 != 3)
            {
              uint64_t v77 = *((void *)v11 + 4);
              uint64_t v78 = *((void *)v11 + 5);
              BOOL v59 = __OFSUB__(v78, v77);
              uint64_t v70 = v78 - v77;
              char v71 = v59;
              goto LABEL_101;
            }
            uint64_t v50 = *((void *)v11 + 4);
            uint64_t v49 = *((void *)v11 + 5);
            BOOL v59 = __OFSUB__(v49, v50);
            uint64_t v51 = v49 - v50;
            char v52 = v59;
          }
          if (v52) {
            goto LABEL_139;
          }
          unint64_t v60 = v12 - 2;
          char v66 = &v46[16 * v12 - 32];
          uint64_t v68 = *(void *)v66;
          uint64_t v67 = *((void *)v66 + 1);
          BOOL v69 = __OFSUB__(v67, v68);
          uint64_t v70 = v67 - v68;
          char v71 = v69;
          if (v69) {
            goto LABEL_142;
          }
          uint64_t v72 = &v46[16 * v48];
          uint64_t v74 = *(void *)v72;
          uint64_t v73 = *((void *)v72 + 1);
          BOOL v59 = __OFSUB__(v73, v74);
          uint64_t v75 = v73 - v74;
          if (v59) {
            goto LABEL_145;
          }
          if (__OFADD__(v70, v75)) {
            goto LABEL_146;
          }
          if (v70 + v75 >= v51)
          {
            BOOL v76 = v51 < v75;
LABEL_107:
            if (v76) {
              unint64_t v48 = v60;
            }
            goto LABEL_109;
          }
LABEL_101:
          if (v71) {
            goto LABEL_141;
          }
          uint64_t v79 = &v46[16 * v48];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v59 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v59) {
            goto LABEL_144;
          }
          if (v82 < v70) {
            goto LABEL_15;
          }
LABEL_109:
          unint64_t v87 = v48 - 1;
          if (v48 - 1 >= v12)
          {
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
            goto LABEL_156;
          }
          uint64_t v88 = v10;
          if (!v10) {
            goto LABEL_159;
          }
          unint64_t v89 = v11;
          unint64_t v90 = &v46[16 * v87];
          uint64_t v91 = *(void *)v90;
          uint64_t v92 = v46;
          unint64_t v93 = v48;
          uint64_t v94 = &v46[16 * v48];
          uint64_t v95 = *((void *)v94 + 1);
          uint64_t v96 = v88;
          sub_1DCD4F098((char *)(v88 + 24 * *(void *)v90), (char *)(v88 + 24 * *(void *)v94), v88 + 24 * v95, __dst);
          if (v1) {
            goto LABEL_117;
          }
          if (v95 < v91) {
            goto LABEL_134;
          }
          if (v93 > *((void *)v89 + 2)) {
            goto LABEL_135;
          }
          *(void *)unint64_t v90 = v91;
          *(void *)&v92[16 * v87 + 8] = v95;
          unint64_t v97 = *((void *)v89 + 2);
          if (v93 >= v97) {
            goto LABEL_136;
          }
          uint64_t v11 = v89;
          unint64_t v12 = v97 - 1;
          memmove(v94, v94 + 16, 16 * (v97 - 1 - v93));
          os_log_type_t v46 = v92;
          *((void *)v89 + 2) = v97 - 1;
          uint64_t v10 = v96;
          uint64_t v9 = v111;
          if (v97 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v12 = 1;
LABEL_15:
      uint64_t v3 = v110;
      if (v9 >= v110)
      {
        uint64_t v8 = v108;
        goto LABEL_120;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCD4EFB4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 24 * a3;
LABEL_5:
    uint64_t v9 = v6;
    uint64_t v10 = v8;
    while (1)
    {
      uint64_t result = *(void *)v10;
      BOOL v11 = *(void *)v10 == *(void *)(v10 - 24) && *(void *)(v10 + 8) == *(void *)(v10 - 16);
      if (v11 || (uint64_t result = sub_1DD048FA8(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 24;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v12 = *(void *)v10;
      uint64_t v13 = *(void *)(v10 + 8);
      int v14 = *(_DWORD *)(v10 + 16);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)(v10 - 24);
      *(void *)(v10 + 16) = *(void *)(v10 - 8);
      *(void *)(v10 - 16) = v13;
      *(_DWORD *)(v10 - 8) = v14;
      *(void *)(v10 - 24) = v12;
      v10 -= 24;
      if (v4 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCD4F098(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v31 = __src;
  uint64_t v30 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      uint64_t v18 = 24 * v11;
      if (__dst != a2 || &a2[v18] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      int v19 = &v4[v18];
      uint64_t v29 = v19;
      uint64_t v31 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v20 = a3 - 24;
        uint64_t v21 = v6;
        while (1)
        {
          uint64_t v22 = (char *)(v20 + 24);
          uint64_t v23 = *((void *)v21 - 3);
          uint64_t v24 = *((void *)v21 - 2);
          v21 -= 24;
          BOOL v25 = *((void *)v19 - 3) == v23 && *((void *)v19 - 2) == v24;
          if (v25 || (sub_1DD048FA8() & 1) == 0)
          {
            uint64_t v29 = v19 - 24;
            if (v22 < v19 || v20 >= (unint64_t)v19 || v22 != v19)
            {
              long long v27 = *(_OWORD *)(v19 - 24);
              *(void *)(v20 + 16) = *((void *)v19 - 1);
              *(_OWORD *)unint64_t v20 = v27;
            }
            uint64_t v21 = v6;
            v19 -= 24;
            if (v6 <= v7) {
              goto LABEL_46;
            }
          }
          else
          {
            if (v22 != v6 || v20 >= (unint64_t)v6)
            {
              long long v26 = *(_OWORD *)v21;
              *(void *)(v20 + 16) = *((void *)v21 + 2);
              *(_OWORD *)unint64_t v20 = v26;
            }
            uint64_t v31 = v21;
            if (v21 <= v7) {
              goto LABEL_46;
            }
          }
          v20 -= 24;
          uint64_t v6 = v21;
          if (v19 <= v4) {
            goto LABEL_46;
          }
        }
      }
      goto LABEL_46;
    }
  }
  else if (v8 >= -23)
  {
    size_t v12 = 24 * v9;
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, v12);
    }
    uint64_t v13 = &v4[v12];
    uint64_t v29 = v13;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        BOOL v14 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v14 || (sub_1DD048FA8() & 1) == 0)
        {
          if (v7 != v4)
          {
            long long v17 = *(_OWORD *)v4;
            *((void *)v7 + 2) = *((void *)v4 + 2);
            *(_OWORD *)uint64_t v7 = v17;
          }
          v4 += 24;
          uint64_t v30 = v4;
          uint64_t v15 = v6;
        }
        else
        {
          uint64_t v15 = v6 + 24;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
          {
            long long v16 = *(_OWORD *)v6;
            *((void *)v7 + 2) = *((void *)v6 + 2);
            *(_OWORD *)uint64_t v7 = v16;
          }
        }
        v7 += 24;
        if (v4 >= v13) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v31 = v7;
    }
LABEL_46:
    sub_1DCD72468((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD4F368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_1DCD51170();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1DD048628();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    int64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1DCD4FA4C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    int64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int64_t v9 = (unsigned __int8 *)sub_1DD048C18();
  }
LABEL_7:
  uint64_t v13 = sub_1DCD4F550(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13 | ((((unint64_t)v13 >> 32) & 1) << 32);
}

unsigned __int8 *sub_1DCD4F45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_1DCD51170();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1DD048628();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    int64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1DCD4FA4C();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    int64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int64_t v9 = (unsigned __int8 *)sub_1DD048C18();
  }
LABEL_7:
  uint64_t v13 = sub_1DCD4F7D0(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1DCD4F550(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          unint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            uint64_t v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__OFADD__(v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned int v12 = 0;
      unsigned __int8 v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          unsigned int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            uint64_t v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31) {
              goto LABEL_72;
            }
            unsigned __int8 v32 = v29 + v30;
            unsigned int v28 = v31 + v32;
            if (__OFADD__(v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          unsigned __int8 v13 = 0;
          unsigned int v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          int64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            uint64_t v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14) {
              goto LABEL_72;
            }
            unsigned __int8 v15 = v10 + v11;
            unsigned int v8 = v14 - v15;
            if (__OFSUB__(v14, v15)) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1DCD4F7D0(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v14 = v9 * a3;
              unsigned __int8 v15 = v11 + v12;
              BOOL v16 = v14 >= v15;
              unint64_t v9 = v14 - v15;
              if (!v16) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      unsigned __int8 v26 = a3 + 48;
      unsigned __int8 v27 = a3 + 55;
      unsigned __int8 v28 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v26 = 58;
      }
      else
      {
        unsigned __int8 v28 = 97;
        unsigned __int8 v27 = 65;
      }
      if (result)
      {
        unint64_t v29 = 0;
        do
        {
          unsigned int v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              uint64_t v13 = 0;
              if (v30 < 0x61 || v30 >= v28) {
                return (unsigned __int8 *)v13;
              }
              char v31 = -87;
            }
            else
            {
              char v31 = -55;
            }
          }
          else
          {
            char v31 = -48;
          }
          if (!is_mul_ok(v29, a3)) {
            return 0;
          }
          unint64_t v32 = v29 * a3;
          unsigned __int8 v33 = v30 + v31;
          BOOL v16 = __CFADD__(v32, v33);
          unint64_t v29 = v32 + v33;
          if (v16) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  uint64_t v17 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v18 = a3 + 48;
  unsigned __int8 v19 = a3 + 55;
  unsigned __int8 v20 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v18 = 58;
  }
  else
  {
    unsigned __int8 v20 = 97;
    unsigned __int8 v19 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  unsigned int v21 = result + 1;
  do
  {
    unsigned int v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        uint64_t v13 = 0;
        if (v22 < 0x61 || v22 >= v20) {
          return (unsigned __int8 *)v13;
        }
        char v23 = -87;
      }
      else
      {
        char v23 = -55;
      }
    }
    else
    {
      char v23 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v24 = v9 * a3;
    unsigned __int8 v25 = v22 + v23;
    BOOL v16 = __CFADD__(v24, v25);
    unint64_t v9 = v24 + v25;
    if (v16) {
      return 0;
    }
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1DCD4FA4C()
{
  unint64_t v0 = sub_1DD048638();
  uint64_t v4 = sub_1DCD4FACC(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1DCD4FACC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_1DCD4FC24(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1DCD4E6E0(v9, 0);
      unint64_t v12 = sub_1DCD4FD24((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1DD048C18();
LABEL_4:
        JUMPOUT(0x1E01AE1A0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1E01AE1A0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1E01AE1A0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1DCD4FC24(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_1DCD4E748(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_1DCD4E748(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return sub_1DD0485A8();
}

unint64_t sub_1DCD4FD24(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1DCD4E748(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1DD0485B8();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1DD048C18();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1DCD4E748(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1DD048588();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1DCD4FF38(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    long long v15 = *((_OWORD *)v3 + 1);
    *(_OWORD *)uint64_t result = *(_OWORD *)v3;
    *(_OWORD *)(result + 16) = v15;
    *(_OWORD *)(result + 32) = *((_OWORD *)v3 + 2);
    return 0;
  }
  uint64_t v4 = *v3;
  uint64_t v6 = v3[2];
  uint64_t v5 = v3[3];
  uint64_t v7 = v3[4];
  uint64_t v8 = v3[5];
  int v9 = v3[1] & 1;
  if (!a3)
  {
    uint64_t v11 = v3[2];
    uint64_t v12 = v3[5];
LABEL_17:
    *(void *)uint64_t result = v4;
    *(unsigned char *)(result + 8) = v9;
    *(void *)(result + 16) = v11;
    *(void *)(result + 24) = v5;
    *(void *)(result + 32) = v7;
    *(void *)(result + 40) = v12;
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_20;
  }
  uint64_t v10 = 0;
  uint64_t v11 = v3[2];
  uint64_t v12 = v3[5];
  while (1)
  {
    if (v9)
    {
      if (v6 >= v5)
      {
LABEL_18:
        *(void *)uint64_t result = v4;
        *(unsigned char *)(result + 8) = v9;
        *(void *)(result + 16) = v11;
        *(void *)(result + 24) = v5;
        *(void *)(result + 32) = v7;
        *(void *)(result + 40) = v8;
        return v10;
      }
      uint64_t v11 = v6 + 1;
      goto LABEL_14;
    }
    uint64_t v14 = *(void *)(v7 + 16);
    if (v8 >= v14) {
      goto LABEL_18;
    }
    uint64_t v12 = v8 + 1;
    if (v8 + 1 < v14) {
      break;
    }
    ++v8;
    uint64_t v13 = v6;
LABEL_6:
    *(void *)(a2 + 8 * v10) = v6;
    uint64_t v6 = v13;
    if (a3 == ++v10) {
      goto LABEL_17;
    }
  }
  if (v8 >= -1)
  {
    uint64_t v11 = *(void *)(v7 + 32 + 8 * v12);
    ++v8;
LABEL_14:
    uint64_t v13 = v11;
    goto LABEL_6;
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

void *sub_1DCD50028(void *result, char *__dst, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!__dst)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = __dst;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v28 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unsigned __int8 v20 = (_OWORD *)(*(void *)(a4 + 56) + 160 * v16);
    long long v21 = v20[1];
    v29[0] = *v20;
    v29[1] = v21;
    long long v22 = v20[5];
    long long v24 = v20[2];
    long long v23 = v20[3];
    v29[4] = v20[4];
    void v29[5] = v22;
    id v29[2] = v24;
    v29[3] = v23;
    long long v26 = v20[7];
    long long v25 = v20[8];
    long long v27 = v20[6];
    *(_OWORD *)&v30[13] = *(_OWORD *)((char *)v20 + 141);
    v29[7] = v26;
    *(_OWORD *)unsigned int v30 = v25;
    v29[6] = v27;
    memmove(v11, v20, 0x9DuLL);
    if (v13 == v10)
    {
      sub_1DCD32CC8((uint64_t)v29);
      goto LABEL_38;
    }
    v11 += 160;
    uint64_t result = (void *)sub_1DCD32CC8((uint64_t)v29);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v28;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

int64_t *sub_1DCD5026C(int64_t *result, int64_t *a2, int64_t a3, int64_t a4, int64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    unint64_t v5 = a4;
LABEL_7:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0) {
    goto LABEL_31;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4) {
    goto LABEL_32;
  }
  if (a5 > a4)
  {
    unint64_t v5 = a4 + 1;
    *a2 = a4;
    unint64_t v6 = a3 - 1;
    if (a3 == 1) {
      goto LABEL_7;
    }
    unint64_t v7 = a3 - 2;
    if (a3 - 2 >= (unint64_t)(~a4 + a5)) {
      unint64_t v7 = ~a4 + a5;
    }
    if (v7 < v6) {
      unint64_t v6 = v7;
    }
    unint64_t v8 = v6 + 1;
    if (v8 > 4)
    {
      uint64_t v11 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v11 = 4;
      }
      unint64_t v12 = v8 - v11;
      uint64_t v9 = v8 - v11 + 1;
      unint64_t v13 = v5 + v12;
      uint64_t v10 = &a2[v12];
      int64x2_t v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_1DD04EF10);
      unint64_t v15 = (int64x2_t *)(a2 + 3);
      int64x2_t v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        *unint64_t v15 = vaddq_s64(v14, v16);
        int64x2_t v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      unint64_t v5 = v13;
    }
    else
    {
      uint64_t v9 = 1;
      uint64_t v10 = a2;
    }
    int64_t v17 = v10 + 1;
    int64_t v18 = v5;
    while (a3 != v9)
    {
      if (a5 == v18)
      {
        unint64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
      if (v18 >= a5) {
        goto LABEL_30;
      }
      ++v9;
      unint64_t v5 = v18 + 1;
      *v17++ = v18++;
      if (a3 == v9) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCD5039C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unsigned __int8 v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    int v22 = *(_DWORD *)(*(void *)(a4 + 56) + 4 * v16);
    *(void *)uint64_t v11 = *v20;
    *(void *)(v11 + 8) = v21;
    *(_DWORD *)(v11 + 16) = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 24;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DCD505A4()
{
  return swift_release();
}

uint64_t sub_1DCD505AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(v1 + 16);
  uint64_t result = sub_1DCD45BD0(v3, v4);
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v6 & 1;
  return result;
}

uint64_t sub_1DCD505F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD44AB8(*(void *)(v1 + 16), a1);
}

unint64_t sub_1DCD505FC()
{
  unint64_t result = qword_1EBE86810;
  if (!qword_1EBE86810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86810);
  }
  return result;
}

uint64_t sub_1DCD50650()
{
  return sub_1DD047B58();
}

uint64_t sub_1DCD506B0(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

unint64_t sub_1DCD506FC()
{
  unint64_t result = qword_1EBE86808;
  if (!qword_1EBE86808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86808);
  }
  return result;
}

uint64_t sub_1DCD50750(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unsigned __int8 v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    unint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DCD50950(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unsigned __int8 v20 = (void *)(*(void *)(a4 + 56) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    unint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DCD50B50(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unsigned __int8 v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    unint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1DCD50D50(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *unint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    uint64_t v13 = *(void *)(a4 + 56) + 56 * v12;
    int v14 = *(_DWORD *)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 48);
    long long v16 = *(_OWORD *)(v13 + 16);
    long long v17 = *(_OWORD *)(v13 + 32);
    *(void *)a2 = *(void *)v13;
    *(_DWORD *)(a2 + 8) = v14;
    *(_OWORD *)(a2 + 16) = v16;
    *(_OWORD *)(a2 + 32) = v17;
    *(void *)(a2 + 48) = v15;
    a2 += 56;
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v18 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v18 >= v10) {
    goto LABEL_30;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v18);
  if (v19) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v18 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v18;
    goto LABEL_34;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v8);
  if (v19)
  {
LABEL_15:
    int64_t v18 = v8;
LABEL_19:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v12 = v21 + (v18 << 6);
    int64_t v8 = v18;
    goto LABEL_8;
  }
  int64_t v20 = v18 + 2;
  if (v18 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v20);
  if (v19)
  {
LABEL_18:
    int64_t v18 = v20;
    goto LABEL_19;
  }
  int64_t v8 = v18 + 3;
  if (v18 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v18 + 2;
    goto LABEL_34;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v8);
  if (v19) {
    goto LABEL_15;
  }
  int64_t v20 = v18 + 4;
  if (v18 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v20);
  if (v19) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v18 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v18);
    ++v20;
    if (v19) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_1DCD50F08(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *unint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1DCD5109C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    unint64_t v11 = (void *)sub_1DD048C18();
  }
  uint64_t result = sub_1DCD511C4((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

unint64_t sub_1DCD51170()
{
  unint64_t result = qword_1EAB024C8;
  if (!qword_1EAB024C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB024C8);
  }
  return result;
}

uint64_t sub_1DCD511C4(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, int64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    unint64_t result = sub_1DCD4E748(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_96;
  }
  unint64_t result = sub_1DD0485A8();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    unint64_t result = sub_1DCD4E748(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    unint64_t result = sub_1DCD4E748(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    unint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_92;
  }
  if (v17 < a3 >> 16)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  unint64_t result = sub_1DD0485A8();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_91;
  }
  if (v18 < v15)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  unint64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    unint64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v33 = a6 + 48;
        unsigned __int8 v34 = a6 + 55;
        unsigned __int8 v35 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v33 = 58;
        }
        else
        {
          unsigned __int8 v35 = 97;
          unsigned __int8 v34 = 65;
        }
        if (v19)
        {
          unint64_t v24 = 0;
          uint64_t v36 = v19 + 1;
          uint64_t v37 = result - 1;
          do
          {
            unsigned int v38 = *v36;
            if (v38 < 0x30 || v38 >= v33)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                uint64_t v29 = 0;
                if (v38 < 0x61 || v38 >= v35) {
                  return v29;
                }
                char v39 = -87;
              }
              else
              {
                char v39 = -55;
              }
            }
            else
            {
              char v39 = -48;
            }
            if (!is_mul_ok(v24, a6)) {
              return 0;
            }
            unint64_t v40 = v24 * a6;
            unsigned __int8 v41 = v38 + v39;
            BOOL v32 = __CFADD__(v40, v41);
            unint64_t v24 = v40 + v41;
            if (v32) {
              return 0;
            }
            ++v36;
            --v37;
          }
          while (v37);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_95;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v42 = a6 + 48;
      unsigned __int8 v43 = a6 + 55;
      unsigned __int8 v44 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v42 = 58;
      }
      else
      {
        unsigned __int8 v44 = 97;
        unsigned __int8 v43 = 65;
      }
      if (v19)
      {
        unint64_t v24 = 0;
        while (1)
        {
          unsigned int v45 = *v19;
          if (v45 < 0x30 || v45 >= v42)
          {
            if (v45 < 0x41 || v45 >= v43)
            {
              uint64_t v29 = 0;
              if (v45 < 0x61 || v45 >= v44) {
                return v29;
              }
              char v46 = -87;
            }
            else
            {
              char v46 = -55;
            }
          }
          else
          {
            char v46 = -48;
          }
          if (!is_mul_ok(v24, a6)) {
            return 0;
          }
          unint64_t v47 = v24 * a6;
          unsigned __int8 v48 = v45 + v46;
          BOOL v32 = __CFADD__(v47, v48);
          unint64_t v24 = v47 + v48;
          if (v32) {
            return 0;
          }
          ++v19;
          if (!--result) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        unint64_t v24 = 0;
        long long v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          if (!is_mul_ok(v24, a6)) {
            return 0;
          }
          unint64_t v30 = v24 * a6;
          unsigned __int8 v31 = v27 + v28;
          BOOL v32 = v30 >= v31;
          unint64_t v24 = v30 - v31;
          if (!v32) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
  return result;
}

__n128 sub_1DCD515E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  __n128 result = *(__n128 *)(v2 + 8);
  long long v4 = *(_OWORD *)(v2 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_1DCD515F8(uint64_t a1, uint64_t a2)
{
  id v135 = (uint64_t *)a2;
  uint64_t v3 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult(0);
  uint64_t v126 = *(void *)(v3 - 8);
  uint64_t v127 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v128 = (uint64_t)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v104 - v6;
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig(0);
  uint64_t v130 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char **)((char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v114 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v11 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  uint64_t v113 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals(0);
  uint64_t v111 = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112);
  uint64_t v119 = (uint64_t)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v133 = (unint64_t *)((char *)&v104 - v15);
  uint64_t v125 = sub_1DD048068();
  MEMORY[0x1F4188790](v125);
  MEMORY[0x1F4188790](v16);
  long long v106 = (char *)&v104 - v17;
  MEMORY[0x1F4188790](v18);
  unsigned __int8 v22 = (char *)&v104 - v19;
  unint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v110 = *(void *)(a1 + 16);
  uint64_t v105 = v20;
  if (!v110)
  {
    unint64_t v121 = MEMORY[0x1E4FBC860];
    uint64_t v86 = (uint64_t)v106;
    goto LABEL_76;
  }
  uint64_t v124 = v21;
  uint64_t v104 = (char *)&v104 - v19;
  uint64_t v109 = a1 + 32;
  uint64_t v108 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v123 = (void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  uint64_t v122 = (void (**)(uint64_t, uint64_t))(v20 + 8);
  uint64_t v117 = (uint64_t *)&v139;
  swift_bridgeObjectRetain();
  unint64_t v24 = 0;
  uint64_t v134 = 0;
  *(void *)&long long v25 = 136315138;
  long long v116 = v25;
  uint64_t v115 = MEMORY[0x1E4FBC840] + 8;
  unint64_t v121 = v23;
  uint64_t v107 = a1;
  uint64_t v129 = v7;
  while (1)
  {
    if (v24 >= *(void *)(a1 + 16)) {
      goto LABEL_86;
    }
    unint64_t v118 = v24;
    uint64_t v26 = (long long *)(v109 + 48 * v24);
    uint64_t v28 = *((void *)v26 + 2);
    uint64_t v27 = *((void *)v26 + 3);
    long long v132 = *v26;
    uint64_t v29 = v133;
    *unint64_t v133 = v23;
    uint64_t v30 = v112;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DD047BE8();
    uint64_t v31 = (uint64_t)v29 + *(int *)(v30 + 24);
    uint64_t v137 = *v108;
    uint64_t v32 = v114;
    uint64_t v33 = v137(v31, 1, 1, v114);
    unint64_t v136 = &v104;
    MEMORY[0x1F4188790](v33);
    long long v101 = v132;
    uint64_t v102 = v28;
    uint64_t v103 = v27;
    sub_1DCD52808(&qword_1EBE86550, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    uint64_t v34 = (uint64_t)v113;
    uint64_t v35 = v134;
    sub_1DD047E78();
    uint64_t v134 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCD2479C(v31, &qword_1EBE86570);
    sub_1DCD52894(v34, v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    v137(v31, 0, 1, v32);
    uint64_t v36 = *(void *)(a1 + 16);
    if (v36) {
      break;
    }
    unsigned int v38 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v23 = MEMORY[0x1E4FBC860];
LABEL_28:
    unint64_t v136 = (char **)v38[2];
    if (v136)
    {
      unint64_t v51 = 0;
      int v131 = v38;
      *(void *)&long long v132 = v38 + 4;
      while (v51 < v38[2])
      {
        uint64_t v52 = *v135;
        os_log_type_t v53 = *(char **)(*v135 + 16);
        if (v53)
        {
          uint64_t v54 = (uint64_t *)(v132 + 24 * v51);
          uint64_t v56 = *v54;
          unint64_t v55 = v54[1];
          uint64_t v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v54[2];
          uint64_t v58 = v130;
          uint64_t v59 = v52 + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
          swift_bridgeObjectRetain();
          uint64_t v137 = v57;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v60 = 0;
          uint64_t v61 = *(void *)(v58 + 72);
          while (1)
          {
            sub_1DCD528FC(v59, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
            if (*v10 == v56 && v10[1] == v55) {
              break;
            }
            char v63 = sub_1DD048FA8();
            sub_1DCD52964((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
            if (v63) {
              goto LABEL_45;
            }
            ++v60;
            v59 += v61;
            if (v53 == v60)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_32:
              unint64_t v23 = MEMORY[0x1E4FBC860];
              unsigned int v38 = v131;
              goto LABEL_33;
            }
          }
          sub_1DCD52964((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig.ModelConfig);
LABEL_45:
          uint64_t v64 = swift_bridgeObjectRelease();
          if ((unint64_t)v60 >= *(void *)(v52 + 16)) {
            goto LABEL_84;
          }
          MEMORY[0x1F4188790](v64);
          *(&v104 - 6) = v60;
          *(&v104 - 5) = (char *)v56;
          *(void *)&long long v101 = v55;
          *((void *)&v101 + 1) = v137;
          uint64_t v102 = v59;
          sub_1DCD52808(&qword_1EBE865A8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
          uint64_t v65 = (uint64_t)v129;
          uint64_t v66 = v134;
          sub_1DD047E78();
          uint64_t v134 = v66;
          if (!*(void *)(*(void *)(v65 + 8) + 16))
          {
            if (qword_1EBE87190 != -1) {
              swift_once();
            }
            if (byte_1EBE87188 != 1) {
              goto LABEL_63;
            }
            if (sub_1DCDE82EC())
            {
              char v71 = (uint64_t *)&off_1EAB02A48;
              if (qword_1EAB01C28 != -1)
              {
                swift_once();
                char v71 = (uint64_t *)&off_1EAB02A48;
              }
            }
            else
            {
              char v71 = &qword_1EBE871E8;
              if (qword_1EBE871A0 != -1)
              {
                swift_once();
                char v71 = &qword_1EBE871E8;
              }
            }
            uint64_t v72 = *(void **)(*v71 + 32);
            swift_retain();
            uint64_t v73 = (void *)sub_1DD0483D8();
            LODWORD(v72) = objc_msgSend(v72, sel_BOOLForKey_, v73);
            swift_release();

            if (v72)
            {
              uint64_t v74 = qword_1EAB02B70;
              if (qword_1EAB01C80 != -1)
              {
                swift_once();
                uint64_t v74 = qword_1EAB02B70;
              }
            }
            else
            {
LABEL_63:
              uint64_t v74 = qword_1EBE871A8;
              if (qword_1EBE871C8 != -1)
              {
                swift_once();
                uint64_t v74 = qword_1EBE871A8;
              }
            }
            uint64_t v75 = v125;
            uint64_t v76 = __swift_project_value_buffer(v125, (uint64_t)v74);
            uint64_t v77 = v124;
            (*v123)(v124, v76, v75);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v78 = sub_1DD048048();
            os_log_type_t v79 = sub_1DD048848();
            if (os_log_type_enabled(v78, v79))
            {
              uint64_t v80 = (uint8_t *)swift_slowAlloc();
              uint64_t v137 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))swift_slowAlloc();
              unint64_t v139 = (void (*)(void, void))v137;
              *(_DWORD *)uint64_t v80 = v116;
              uint64_t v120 = v80 + 4;
              swift_bridgeObjectRetain();
              uint64_t v138 = sub_1DCED7FA0(v56, v55, (uint64_t *)&v139);
              sub_1DD048A28();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1DCCF9000, v78, v79, "No valid classification results %s", v80, 0xCu);
              uint64_t v81 = v137;
              swift_arrayDestroy();
              MEMORY[0x1E01B07E0](v81, -1, -1);
              MEMORY[0x1E01B07E0](v80, -1, -1);

              (*v122)(v77, v125);
            }
            else
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();

              (*v122)(v77, v75);
            }
            sub_1DCD52964((uint64_t)v129, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
            goto LABEL_32;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1DCD528FC(v65, v128, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
          unint64_t v67 = *v133;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unsigned int v38 = v131;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            unint64_t v67 = sub_1DCE9E8C4(0, *(void *)(v67 + 16) + 1, 1, v67);
          }
          unint64_t v23 = MEMORY[0x1E4FBC860];
          unint64_t v70 = *(void *)(v67 + 16);
          unint64_t v69 = *(void *)(v67 + 24);
          if (v70 >= v69 >> 1) {
            unint64_t v67 = sub_1DCE9E8C4(v69 > 1, v70 + 1, 1, v67);
          }
          *(void *)(v67 + 16) = v70 + 1;
          sub_1DCD52894(v128, v67+ ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80))+ *(void *)(v126 + 72) * v70, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
          *unint64_t v133 = v67;
          sub_1DCD52964(v65, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
        }
LABEL_33:
        if ((char **)++v51 == v136)
        {
          swift_bridgeObjectRelease();
          a1 = v107;
          goto LABEL_69;
        }
      }
      goto LABEL_82;
    }
    swift_bridgeObjectRelease();
LABEL_69:
    sub_1DCD528FC((uint64_t)v133, v119, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v121 = sub_1DCE9E8F8(0, *(void *)(v121 + 16) + 1, 1, v121);
    }
    unint64_t v83 = *(void *)(v121 + 16);
    unint64_t v82 = *(void *)(v121 + 24);
    if (v83 >= v82 >> 1) {
      unint64_t v121 = sub_1DCE9E8F8(v82 > 1, v83 + 1, 1, v121);
    }
    unint64_t v84 = v118 + 1;
    unint64_t v85 = v121;
    *(void *)(v121 + 16) = v83 + 1;
    unint64_t v24 = v84;
    sub_1DCD52894(v119, v85+ ((*(unsigned __int8 *)(v111 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80))+ *(void *)(v111 + 72) * v83, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
    sub_1DCD52964((uint64_t)v133, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
    if (v24 == v110)
    {
      swift_bridgeObjectRelease();
      uint64_t v86 = (uint64_t)v106;
      unsigned __int8 v22 = v104;
LABEL_76:
      unint64_t v87 = v22;
      sub_1DCDB40EC((uint64_t)v22);
      sub_1DCDB4300(v86);
      uint64_t v88 = *(void (**)(char *, uint64_t))(v105 + 8);
      uint64_t v89 = v125;
      v88(v87, v125);
      swift_bridgeObjectRetain();
      uint64_t v90 = v86;
      uint64_t v91 = sub_1DD048048();
      os_log_type_t v92 = sub_1DD048848();
      if (os_log_type_enabled(v91, v92))
      {
        unint64_t v93 = (uint8_t *)swift_slowAlloc();
        uint64_t v94 = swift_slowAlloc();
        uint64_t v137 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v88;
        uint64_t v95 = v94;
        unint64_t v139 = (void (*)(void, void))v94;
        *(_DWORD *)unint64_t v93 = 136315138;
        uint64_t v96 = swift_bridgeObjectRetain();
        uint64_t v97 = MEMORY[0x1E01AE380](v96, &type metadata for VisualUnderstanding.Signal);
        unint64_t v99 = v98;
        swift_bridgeObjectRelease();
        uint64_t v138 = sub_1DCED7FA0(v97, v99, (uint64_t *)&v139);
        sub_1DD048A28();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DCCF9000, v91, v92, "VisualUnderstanding signals are: %s", v93, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v95, -1, -1);
        MEMORY[0x1E01B07E0](v93, -1, -1);

        ((void (*)(char *, uint64_t))v137)(v106, v125);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v88((char *)v90, v89);
      }
      sub_1DCD52964((uint64_t)v135, type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig);
      return v121;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v37 = 72;
  unsigned int v38 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v23 = MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v39 = *(void *)(a1 + v37);
    uint64_t v40 = *(void *)(v39 + 16);
    int64_t v41 = v38[2];
    int64_t v42 = v41 + v40;
    if (__OFADD__(v41, v40)) {
      break;
    }
    swift_bridgeObjectRetain();
    unsigned __int8 v43 = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (v43 && v42 <= v38[3] >> 1)
    {
      if (*(void *)(v39 + 16)) {
        goto LABEL_17;
      }
    }
    else
    {
      if (v41 <= v42) {
        int64_t v44 = v41 + v40;
      }
      else {
        int64_t v44 = v41;
      }
      unsigned int v38 = sub_1DCE9E6B8(v43, v44, 1, v38);
      if (*(void *)(v39 + 16))
      {
LABEL_17:
        uint64_t v45 = v38[2];
        if ((v38[3] >> 1) - v45 < v40) {
          goto LABEL_83;
        }
        unint64_t v46 = (unint64_t)&v38[3 * v45 + 4];
        if (v39 + 32 < v46 + 24 * v40 && v46 < v39 + 32 + 24 * v40) {
          goto LABEL_87;
        }
        swift_arrayInitWithCopy();
        if (v40)
        {
          uint64_t v48 = v38[2];
          BOOL v49 = __OFADD__(v48, v40);
          uint64_t v50 = v48 + v40;
          if (v49) {
            goto LABEL_85;
          }
          v38[2] = v50;
        }
        goto LABEL_7;
      }
    }
    if (v40) {
      goto LABEL_81;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    v37 += 48;
    if (!--v36)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  LODWORD(v102) = 0;
  *((void *)&v101 + 1) = 1092;
  LOBYTE(v101) = 2;
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

unint64_t sub_1DCD52700()
{
  unint64_t result = qword_1EBE84880;
  if (!qword_1EBE84880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84880);
  }
  return result;
}

unint64_t sub_1DCD52754()
{
  unint64_t result = qword_1EBE84EC0;
  if (!qword_1EBE84EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84EC0);
  }
  return result;
}

uint64_t sub_1DCD527A8(uint64_t a1)
{
  return sub_1DCD4D228(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1DCD527CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCD4D374(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1DCD527E8(float *a1)
{
  return sub_1DCD4DC18(a1, *(void *)(v1 + 16), *(float *)(v1 + 24));
}

uint64_t sub_1DCD52808(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCD52850(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCD52894(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD528FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD52964(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_1DCD529C4(uint64_t a1)
{
  *(void *)&double result = sub_1DCD4E7C4(a1).n128_u64[0];
  return result;
}

double S2Edge.start.getter@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(double *)(a1 + 16) = result;
  return result;
}

double S2Edge.end.getter@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  *(double *)(a1 + 16) = result;
  return result;
}

void __swiftcall S2Edge.init(start:end:)(VisualIntelligence::S2Edge *__return_ptr retstr, VisualIntelligence::S2Point start, VisualIntelligence::S2Point end)
{
  Swift::Double v5 = *(double *)(v3 + 16);
  Swift::Double v6 = *(double *)(v4 + 16);
  *(_OWORD *)&retstr->start.CGFloat x = *(_OWORD *)v3;
  retstr->start.z = v5;
  *(_OWORD *)&retstr->end.CGFloat x = *(_OWORD *)v4;
  retstr->end.z = v6;
}

BOOL == infix(_:_:)(float64x2_t *a1, float64x2_t *a2)
{
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0])
  {
    return a1[2].f64[1] == a2[2].f64[1];
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for S2Edge(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for S2Edge(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for S2Edge()
{
  return &type metadata for S2Edge;
}

uint64_t sub_1DCD52B60(uint64_t a1)
{
  uint64_t result = sub_1DD0487F8();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1DCF5156C(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1DCD52CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  if (!*(void *)(v3 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DCEAD1A4(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v8 = *(id *)(*(void *)(v3 + 56) + 8 * v6);
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_featureValueWithMultiArray_, v8);

  return v9;
}

uint64_t sub_1DCD52E14()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DomainPredictionModelInput()
{
  return self;
}

void *sub_1DCD52E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v9 = v8;
  uint64_t v47 = a7;
  uint64_t v48 = a8;
  uint64_t v49 = a6;
  uint64_t v45 = a4;
  uint64_t v46 = a3;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v44 - v17;
  uint64_t v19 = *(void *)(a1 + *(int *)(type metadata accessor for MLModelInfo(0) + 36));
  if (*(void *)(v19 + 16) && (uint64_t v20 = sub_1DCEAD428(2), (v21 & 1) != 0))
  {
    uint64_t v22 = v20;
    uint64_t v23 = a5;
    uint64_t v24 = *(void *)(v19 + 56);
    uint64_t v25 = sub_1DD046478();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v44 = a2;
    uint64_t v27 = v26;
    uint64_t v28 = v24 + *(void *)(v26 + 72) * v22;
    a5 = v23;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v18, v28, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v18, 0, 1, v25);
    a2 = v44;
  }
  else
  {
    uint64_t v29 = sub_1DD046478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v18, 1, 1, v29);
  }
  type metadata accessor for FileMapper();
  swift_allocObject();
  v9[2] = sub_1DCEC56C0((uint64_t)v18);
  if (*(void *)(v19 + 16) && (uint64_t v30 = sub_1DCEAD428(10), (v31 & 1) != 0))
  {
    uint64_t v32 = v30;
    uint64_t v33 = *(void *)(v19 + 56);
    uint64_t v34 = sub_1DD046478();
    uint64_t v35 = a2;
    uint64_t v36 = a5;
    uint64_t v37 = *(void *)(v34 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v15, v33 + *(void *)(v37 + 72) * v32, v34);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v15, 0, 1, v34);
    a5 = v36;
    a2 = v35;
  }
  else
  {
    uint64_t v38 = sub_1DD046478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v15, 1, 1, v38);
  }
  swift_allocObject();
  uint64_t v39 = sub_1DCEC56C0((uint64_t)v15);
  sub_1DCD565B8(a1, type metadata accessor for MLModelInfo);
  v9[3] = v39;
  v9[4] = a2;
  uint64_t v40 = v45;
  v9[5] = v46;
  v9[6] = v40;
  uint64_t v41 = v49;
  v9[7] = a5;
  v9[8] = v41;
  uint64_t v42 = v48;
  v9[9] = v47;
  v9[10] = v42;
  return v9;
}

void sub_1DCD531FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double *a5@<X4>, uint64_t *a6@<X8>)
{
  char v7 = v6;
  double v10 = *a5;
  double v11 = a5[1];
  double v12 = a5[2];
  double v13 = a5[3];
  uint64_t v14 = sub_1DCFE3010();
  unint64_t v15 = sub_1DCFE3010();
  uint64_t v16 = (void *)a4;
  uint64_t v17 = a2;
  v32[0] = v10;
  v32[1] = v11;
  void v32[2] = v12;
  v32[3] = v13;
  uint64_t v18 = (void *)v7[4];
  uint64_t v19 = sub_1DCD54EBC(a1, a2, a3, a4, v32, (uint64_t)v14, v15, v18, v7[5]);
  char v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v19)
  {
    sub_1DCD55D64(a1, a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = 0;
LABEL_6:
    char v21 = v16;
    goto LABEL_7;
  }
  uint64_t v22 = a1;
  id v23 = v19;
  uint64_t v24 = sub_1DCD55DA8(v21, (uint64_t)v18);
  if (!v24)
  {
    uint64_t v17 = a2;
    sub_1DCD55D64(a1, a2);
    uint64_t v16 = (void *)a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();

    goto LABEL_6;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86AE8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD04EF60;
  uint64_t v26 = v7[8];
  *(void *)(inited + 32) = v7[7];
  *(void *)(inited + 40) = v26;
  *(void *)(inited + 48) = v23;
  uint64_t v27 = v7[10];
  *(void *)(inited + 56) = v7[9];
  *(void *)(inited + 64) = v27;
  *(void *)(inited + 72) = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v28 = sub_1DCDB8374(inited);

  type metadata accessor for DomainPredictionModelInput();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v28;
  a1 = v22;
  uint64_t v17 = a2;
  sub_1DCD55D64(v22, a2);
LABEL_7:
  *a6 = v24;
  a6[1] = a1;
  a6[2] = v17;
  a6[3] = a3;
  a6[4] = (uint64_t)v21;
}

uint64_t sub_1DCD5343C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DomainPredictionRequestProcessor()
{
  return self;
}

void sub_1DCD534B0(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1DCD742D8(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1DCD53558(v5);
  *a1 = v3;
}

void sub_1DCD53558(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v133 = *(void *)(v4 - 8);
  uint64_t v134 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v130 = (uint64_t)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v140 = (uint64_t)&v125 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v137 = (uint64_t)&v125 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v136 = (uint64_t)&v125 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_1DD048F68();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_142;
    }
    if (v12) {
      sub_1DCD53F6C(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_150;
  }
  uint64_t v128 = v13;
  if (v12 < 2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    unint64_t v132 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v20 = (char *)MEMORY[0x1E4FBC860];
LABEL_107:
      uint64_t v127 = v18;
      if (v21 >= 2)
      {
        uint64_t v119 = *a1;
        do
        {
          unint64_t v120 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_137;
          }
          if (!v119) {
            goto LABEL_149;
          }
          uint64_t v121 = *(void *)&v20[16 * v120 + 32];
          uint64_t v122 = *(void *)&v20[16 * v21 + 24];
          sub_1DCD541DC(v119 + *(void *)(v133 + 72) * v121, v119 + *(void *)(v133 + 72) * *(void *)&v20[16 * v21 + 16], v119 + *(void *)(v133 + 72) * v122, v132);
          if (v2) {
            break;
          }
          if (v122 < v121) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_1DCD729EC((uint64_t)v20);
          }
          if (v120 >= *((void *)v20 + 2)) {
            goto LABEL_139;
          }
          uint64_t v123 = &v20[16 * v120 + 32];
          *(void *)uint64_t v123 = v121;
          *((void *)v123 + 1) = v122;
          unint64_t v124 = *((void *)v20 + 2);
          if (v21 > v124) {
            goto LABEL_140;
          }
          memmove(&v20[16 * v21 + 16], &v20[16 * v21 + 32], 16 * (v124 - v21));
          *((void *)v20 + 2) = v124 - 1;
          unint64_t v21 = v124 - 1;
        }
        while (v124 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(void *)(v127 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v127 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1DD0486F8();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v133 + 80);
    uint64_t v127 = v16;
    unint64_t v132 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v20 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v139 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    if (v19 + 1 >= v12)
    {
      uint64_t v31 = v19 + 1;
    }
    else
    {
      uint64_t v129 = *a1;
      uint64_t v24 = v129;
      uint64_t v25 = *(void *)(v133 + 72);
      uint64_t v131 = v19;
      uint64_t v26 = v136;
      sub_1DCD36E7C(v129 + v25 * v23, v136);
      uint64_t v27 = v137;
      sub_1DCD36E7C(v24 + v25 * v131, v137);
      float v28 = *(float *)(v26 + 76);
      float v29 = *(float *)(v27 + 76);
      sub_1DCD565B8(v27, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v30 = v26;
      uint64_t v22 = v131;
      sub_1DCD565B8(v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v31 = v22 + 2;
      uint64_t v141 = v25;
      if (v22 + 2 >= v12)
      {
        uint64_t v37 = v25;
        if (v29 >= v28) {
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v126 = v2;
        uint64_t v138 = v25 * v23;
        uint64_t v32 = v129;
        uint64_t v135 = v25 * v31;
        while (1)
        {
          uint64_t v33 = v31;
          uint64_t v34 = v136;
          sub_1DCD36E7C(v32 + v135, v136);
          uint64_t v35 = v137;
          sub_1DCD36E7C(v32 + v138, v137);
          BOOL v36 = *(float *)(v35 + 76) >= *(float *)(v34 + 76);
          sub_1DCD565B8(v35, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD565B8(v34, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v29 < v28 == v36) {
            break;
          }
          ++v31;
          uint64_t v37 = v141;
          v32 += v141;
          if (v12 == v33 + 1)
          {
            uint64_t v31 = v12;
            a1 = v139;
            uint64_t v2 = v126;
            uint64_t v22 = v131;
            if (v29 < v28) {
              goto LABEL_27;
            }
            goto LABEL_40;
          }
        }
        a1 = v139;
        uint64_t v2 = v126;
        uint64_t v22 = v131;
        uint64_t v37 = v141;
        if (v29 >= v28) {
          goto LABEL_40;
        }
      }
LABEL_27:
      if (v31 < v22) {
        goto LABEL_143;
      }
      if (v22 < v31)
      {
        uint64_t v135 = v12;
        uint64_t v125 = v20;
        uint64_t v38 = 0;
        uint64_t v39 = v37 * (v31 - 1);
        uint64_t v40 = v22;
        uint64_t v41 = v31 * v37;
        uint64_t v42 = v40;
        uint64_t v43 = v40 * v37;
        do
        {
          if (v42 != v31 + v38 - 1)
          {
            uint64_t v45 = v129;
            if (!v129) {
              goto LABEL_148;
            }
            unint64_t v46 = v129 + v43;
            uint64_t v138 = v129 + v39;
            sub_1DCD36EE0(v129 + v43, v130);
            if (v43 < v39 || v46 >= v45 + v41)
            {
              uint64_t v44 = v138;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v44 = v138;
              if (v43 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1DCD36EE0(v130, v44);
            a1 = v139;
            uint64_t v37 = v141;
          }
          ++v42;
          --v38;
          v39 -= v37;
          v41 -= v37;
          v43 += v37;
        }
        while (v42 < v31 + v38);
        uint64_t v20 = v125;
        uint64_t v22 = v131;
        uint64_t v12 = v135;
      }
    }
LABEL_40:
    if (v31 < v12)
    {
      if (__OFSUB__(v31, v22)) {
        goto LABEL_141;
      }
      if (v31 - v22 < v128) {
        break;
      }
    }
LABEL_58:
    if (v31 < v22) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v138 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v20 = sub_1DCD71FDC(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v68 = *((void *)v20 + 2);
    unint64_t v67 = *((void *)v20 + 3);
    unint64_t v21 = v68 + 1;
    if (v68 >= v67 >> 1) {
      uint64_t v20 = sub_1DCD71FDC((char *)(v67 > 1), v68 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    unint64_t v69 = v20 + 32;
    unint64_t v70 = &v20[16 * v68 + 32];
    uint64_t v71 = v138;
    *(void *)unint64_t v70 = v22;
    *((void *)v70 + 1) = v71;
    if (v68)
    {
      while (1)
      {
        unint64_t v72 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v77 = &v69[16 * v21];
          uint64_t v78 = *((void *)v77 - 8);
          uint64_t v79 = *((void *)v77 - 7);
          BOOL v83 = __OFSUB__(v79, v78);
          uint64_t v80 = v79 - v78;
          if (v83) {
            goto LABEL_125;
          }
          uint64_t v82 = *((void *)v77 - 6);
          uint64_t v81 = *((void *)v77 - 5);
          BOOL v83 = __OFSUB__(v81, v82);
          uint64_t v75 = v81 - v82;
          char v76 = v83;
          if (v83) {
            goto LABEL_126;
          }
          unint64_t v84 = v21 - 2;
          unint64_t v85 = &v69[16 * v21 - 32];
          uint64_t v87 = *(void *)v85;
          uint64_t v86 = *((void *)v85 + 1);
          BOOL v83 = __OFSUB__(v86, v87);
          uint64_t v88 = v86 - v87;
          if (v83) {
            goto LABEL_128;
          }
          BOOL v83 = __OFADD__(v75, v88);
          uint64_t v89 = v75 + v88;
          if (v83) {
            goto LABEL_131;
          }
          if (v89 >= v80)
          {
            uint64_t v107 = &v69[16 * v72];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v83 = __OFSUB__(v108, v109);
            uint64_t v110 = v108 - v109;
            if (v83) {
              goto LABEL_135;
            }
            BOOL v100 = v75 < v110;
            goto LABEL_95;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v101 = *((void *)v20 + 4);
            uint64_t v102 = *((void *)v20 + 5);
            BOOL v83 = __OFSUB__(v102, v101);
            uint64_t v94 = v102 - v101;
            char v95 = v83;
            goto LABEL_89;
          }
          uint64_t v74 = *((void *)v20 + 4);
          uint64_t v73 = *((void *)v20 + 5);
          BOOL v83 = __OFSUB__(v73, v74);
          uint64_t v75 = v73 - v74;
          char v76 = v83;
        }
        if (v76) {
          goto LABEL_127;
        }
        unint64_t v84 = v21 - 2;
        uint64_t v90 = &v69[16 * v21 - 32];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v93 = __OFSUB__(v91, v92);
        uint64_t v94 = v91 - v92;
        char v95 = v93;
        if (v93) {
          goto LABEL_130;
        }
        uint64_t v96 = &v69[16 * v72];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v83 = __OFSUB__(v97, v98);
        uint64_t v99 = v97 - v98;
        if (v83) {
          goto LABEL_133;
        }
        if (__OFADD__(v94, v99)) {
          goto LABEL_134;
        }
        if (v94 + v99 >= v75)
        {
          BOOL v100 = v75 < v99;
LABEL_95:
          if (v100) {
            unint64_t v72 = v84;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v95) {
          goto LABEL_129;
        }
        uint64_t v103 = &v69[16 * v72];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v83 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v83) {
          goto LABEL_132;
        }
        if (v106 < v94) {
          goto LABEL_15;
        }
LABEL_97:
        unint64_t v111 = v72 - 1;
        if (v72 - 1 >= v21)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v112 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        uint64_t v113 = v20;
        uint64_t v114 = &v69[16 * v111];
        uint64_t v115 = *(void *)v114;
        long long v116 = &v69[16 * v72];
        uint64_t v117 = *((void *)v116 + 1);
        sub_1DCD541DC(v112 + *(void *)(v133 + 72) * *(void *)v114, v112 + *(void *)(v133 + 72) * *(void *)v116, v112 + *(void *)(v133 + 72) * v117, v132);
        if (v2) {
          goto LABEL_118;
        }
        if (v117 < v115) {
          goto LABEL_122;
        }
        if (v72 > *((void *)v113 + 2)) {
          goto LABEL_123;
        }
        *(void *)uint64_t v114 = v115;
        *(void *)&v69[16 * v111 + 8] = v117;
        unint64_t v118 = *((void *)v113 + 2);
        if (v72 >= v118) {
          goto LABEL_124;
        }
        uint64_t v20 = v113;
        unint64_t v21 = v118 - 1;
        memmove(&v69[16 * v72], v116 + 16, 16 * (v118 - 1 - v72));
        *((void *)v113 + 2) = v118 - 1;
        a1 = v139;
        if (v118 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v19 = v138;
    if (v138 >= v12)
    {
      uint64_t v18 = v127;
      goto LABEL_107;
    }
  }
  if (__OFADD__(v22, v128)) {
    goto LABEL_144;
  }
  if (v22 + v128 >= v12) {
    uint64_t v47 = v12;
  }
  else {
    uint64_t v47 = v22 + v128;
  }
  if (v47 >= v22)
  {
    if (v31 != v47)
    {
      uint64_t v131 = v22;
      uint64_t v125 = v20;
      uint64_t v126 = v2;
      uint64_t v48 = *(void *)(v133 + 72);
      uint64_t v49 = v48 * (v31 - 1);
      uint64_t v135 = v48;
      uint64_t v50 = v31 * v48;
      uint64_t v129 = v47;
      do
      {
        uint64_t v52 = 0;
        uint64_t v53 = v131;
        uint64_t v138 = v31;
        while (1)
        {
          uint64_t v141 = v53;
          uint64_t v54 = *a1;
          uint64_t v55 = v50;
          uint64_t v56 = v50 + v52 + *a1;
          uint64_t v57 = a1;
          uint64_t v58 = v136;
          sub_1DCD36E7C(v56, v136);
          uint64_t v59 = v49;
          uint64_t v60 = v49 + v52 + v54;
          uint64_t v61 = v137;
          sub_1DCD36E7C(v60, v137);
          float v62 = *(float *)(v58 + 76);
          float v63 = *(float *)(v61 + 76);
          sub_1DCD565B8(v61, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD565B8(v58, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v63 >= v62) {
            break;
          }
          uint64_t v64 = *v57;
          if (!*v57) {
            goto LABEL_146;
          }
          uint64_t v50 = v55;
          uint64_t v49 = v59;
          uint64_t v65 = v64 + v59 + v52;
          sub_1DCD36EE0(v64 + v55 + v52, v140);
          swift_arrayInitWithTakeFrontToBack();
          sub_1DCD36EE0(v140, v65);
          v52 -= v135;
          uint64_t v53 = v141 + 1;
          uint64_t v51 = v138;
          a1 = v139;
          if (v138 == v141 + 1) {
            goto LABEL_51;
          }
        }
        uint64_t v51 = v138;
        a1 = v57;
        uint64_t v49 = v59;
        uint64_t v50 = v55;
LABEL_51:
        uint64_t v31 = v51 + 1;
        v49 += v135;
        v50 += v135;
      }
      while (v31 != v129);
      uint64_t v31 = v129;
      uint64_t v20 = v125;
      uint64_t v2 = v126;
      uint64_t v22 = v131;
    }
    goto LABEL_58;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  sub_1DD048C98();
  __break(1u);
}

void sub_1DCD53F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (float *)((char *)&v23 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (float *)((char *)&v23 - v13);
  uint64_t v28 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v31 = v15 * (v28 - 1);
    uint64_t v27 = v15;
    uint64_t v30 = v15 * v28;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v25;
    while (1)
    {
      uint64_t v18 = *a4;
      sub_1DCD36E7C(v30 + v16 + *a4, (uint64_t)v14);
      sub_1DCD36E7C(v31 + v16 + v18, (uint64_t)v10);
      float v19 = v14[19];
      float v20 = v10[19];
      sub_1DCD565B8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCD565B8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v20 >= v19)
      {
LABEL_4:
        v31 += v27;
        v30 += v27;
        if (++v28 == v24) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v21 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v22 = v21 + v31 + v16;
      sub_1DCD36EE0(v21 + v30 + v16, v29);
      swift_arrayInitWithTakeFrontToBack();
      sub_1DCD36EE0(v29, v22);
      v16 -= v27;
      if (v28 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DCD541DC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v40);
  uint64_t v9 = (float *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (float *)((char *)&v38 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      unint64_t v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v31 = a3 - v14;
          sub_1DCD36E7C(v29 - v14, (uint64_t)v12);
          unint64_t v32 = a2 - v14;
          sub_1DCD36E7C(a2 - v14, (uint64_t)v9);
          float v33 = v12[19];
          float v34 = v9[19];
          sub_1DCD565B8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD565B8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v34 >= v33)
          {
            unint64_t v35 = v41;
            v41 -= v14;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 -= v14;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v32;
          a3 -= v14;
        }
        while (v32 > v39);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1DCD36E7C(a2, (uint64_t)v12);
        sub_1DCD36E7C(a4, (uint64_t)v9);
        float v22 = v12[19];
        float v23 = v9[19];
        sub_1DCD565B8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCD565B8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v24 = v43;
        if (v23 >= v22)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_67:
    sub_1DCD720D8(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD54678(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1DCFC5800(0, v2, 0);
    uint64_t v3 = v14;
    uint64_t v6 = (void *)(a1 + 40);
    uint64_t v7 = *(void *)(a2 + 56);
    uint64_t v8 = *(void *)(a2 + 64);
    do
    {
      BOOL v9 = v7 == *(v6 - 1) && v8 == *v6;
      if (v9 || (int v10 = 0, (sub_1DD048FA8() & 1) != 0)) {
        int v10 = *(_DWORD *)(a2 + 72);
      }
      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      if (v12 >= v11 >> 1) {
        sub_1DCFC5800(v11 > 1, v12 + 1, 1);
      }
      v6 += 2;
      *(void *)(v14 + 16) = v12 + 1;
      *(_DWORD *)(v14 + 4 * v12 + 32) = v10;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1DCD54788(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1DD0487F8();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1DCF5156C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1DCD54820(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1DCD56564();
  uint64_t result = sub_1DD0487F8();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1DCF51818(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1DCD54894(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v49 - v12;
  MEMORY[0x1F4188790](v14);
  if (!a2)
  {
    sub_1DCDB40EC((uint64_t)v10);
    unint64_t v35 = sub_1DD048048();
    os_log_type_t v36 = sub_1DD048858();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl(&dword_1DCCF9000, v35, v36, "Detector's coarse labels not present.", v37, 2u);
      MEMORY[0x1E01B07E0](v37, -1, -1);
    }

    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = a4[2];
  if (v16 != v17)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCDB40EC((uint64_t)v13);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1DD048048();
    os_log_type_t v39 = sub_1DD048858();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 134218240;
      uint64_t v53 = v8;
      uint64_t v54 = v7;
      uint64_t v42 = *(void *)(a3 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = v42;
      LODWORD(v56) = v40;
      uint64_t v8 = v53;
      uint64_t v7 = v54;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2048;
      swift_bridgeObjectRelease();
      uint64_t v58 = v17;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v38, (os_log_type_t)v56, "Detector's coarse label size does not mathched with Domain PredictionNet's description. %ld != %ld", (uint8_t *)v41, 0x16u);
      MEMORY[0x1E01B07E0](v41, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    int v10 = v13;
LABEL_33:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    unint64_t v43 = a4[2];
    return sub_1DCDE1CDC(v43, 0);
  }
  if (!v16) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v50 = (uint64_t)&v49 - v15;
  uint64_t v51 = a4;
  uint64_t v53 = v8;
  uint64_t v54 = v7;
  uint64_t v18 = a4 + 4;
  uint64_t v19 = a4[4];
  unint64_t v20 = a4[5];
  uint64_t v21 = *(void *)(a3 + 32);
  uint64_t v22 = *(void *)(a3 + 40);
  int v23 = *(_DWORD *)(a3 + 48);
  swift_bridgeObjectRetain();
  uint64_t v52 = (_DWORD *)(a3 + 72);
  unint64_t v24 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v25 = 1;
  uint64_t v55 = v21;
  uint64_t v56 = a4 + 4;
  while (1)
  {
    swift_bridgeObjectRetain();
    if (v21 == v19)
    {
      int v26 = v23;
      if (v22 == v20) {
        goto LABEL_20;
      }
    }
    uint64_t result = sub_1DD048FA8();
    int v26 = v23;
    if ((result & 1) == 0) {
      break;
    }
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_19:
    uint64_t v21 = v55;
    uint64_t v18 = v56;
LABEL_20:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v24 = sub_1DCE9D9E0(0, *((void *)v24 + 2) + 1, 1, v24);
    }
    unint64_t v33 = *((void *)v24 + 2);
    unint64_t v32 = *((void *)v24 + 3);
    if (v33 >= v32 >> 1) {
      unint64_t v24 = sub_1DCE9D9E0((char *)(v32 > 1), v33 + 1, 1, v24);
    }
    *((void *)v24 + 2) = v33 + 1;
    *(_DWORD *)&v24[4 * v33 + 32] = v26;
    swift_bridgeObjectRelease();
    if (v25 == v16)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v24;
    }
    float v34 = &v18[2 * v25++];
    uint64_t v19 = *v34;
    unint64_t v20 = v34[1];
  }
  if (v16 == 1)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v50;
    sub_1DCDB40EC(v50);
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_1DD048048();
    os_log_type_t v46 = sub_1DD048858();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      uint64_t v58 = v48;
      *(_DWORD *)uint64_t v47 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1DCED7FA0(v19, v20, &v58);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v45, v46, "Failed to find class item for %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v48, -1, -1);
      MEMORY[0x1E01B07E0](v47, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v44, v54);
    unint64_t v43 = v16;
    return sub_1DCDE1CDC(v43, 0);
  }
  uint64_t v28 = v52;
  uint64_t v29 = 1;
  while (1)
  {
    uint64_t v30 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    int v26 = *v28;
    if (*((void *)v28 - 2) == v19 && *((void *)v28 - 1) == v20) {
      goto LABEL_19;
    }
    uint64_t result = sub_1DD048FA8();
    if (result) {
      goto LABEL_8;
    }
    v28 += 6;
    ++v29;
    if (v30 == v16) {
      goto LABEL_36;
    }
  }
  __break(1u);
  return result;
}

void *sub_1DCD54EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double *a5, uint64_t a6, void *a7, void *a8, uint64_t a9)
{
  uint64_t v154 = a7;
  uint64_t v142 = a6;
  uint64_t v153 = a4;
  uint64_t v151 = a3;
  uint64_t v150 = a2;
  uint64_t v149 = (void *)a1;
  uint64_t v11 = a9;
  uint64_t v164 = *MEMORY[0x1E4F143B8];
  uint64_t v130 = sub_1DD048068();
  uint64_t v156 = *(void *)(v130 - 8);
  MEMORY[0x1F4188790](v130);
  uint64_t v13 = (char *)&v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v120 - v15;
  uint64_t v17 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v131 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v120 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v120 - v24;
  double v26 = *a5;
  double v27 = a5[1];
  double v29 = a5[2];
  double v28 = a5[3];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
  uint64_t v31 = swift_allocObject();
  long long v157 = xmmword_1DD04EF70;
  *(_OWORD *)(v31 + 16) = xmmword_1DD04EF70;
  *(void *)(v31 + 32) = sub_1DD048808();
  *(void *)(v31 + 40) = sub_1DD048808();
  *(void *)(v31 + 48) = sub_1DD048808();
  *(void *)&long long v160 = v31;
  sub_1DD0486D8();
  uint64_t v32 = v160;
  id v33 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
  id v34 = sub_1DCE4FFBC(v32, 65568);
  uint64_t v40 = v153;
  uint64_t v148 = v22;
  uint64_t v145 = v25;
  uint64_t v122 = v19;
  uint64_t v121 = v16;
  uint64_t v155 = v30;
  uint64_t v135 = a8;
  id v152 = v34;
  if (!v34)
  {
    sub_1DCDB40EC((uint64_t)v13);
    unint64_t v35 = sub_1DD048048();
    os_log_type_t v36 = sub_1DD048858();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl(&dword_1DCCF9000, v35, v36, "Failed to create nodeFeatures MLMultiArray", v37, 2u);
      MEMORY[0x1E01B07E0](v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v156 + 8))(v13, v130);
    uint64_t v38 = 0;
    unint64_t v137 = MEMORY[0x1E4FBC860];
    return v38;
  }
  uint64_t v139 = sub_1DCD54894((uint64_t)v149, v150, v151, v154);
  *(void *)&long long v160 = v40;
  swift_bridgeObjectRetain_n();
  sub_1DCD534B0((void **)&v160);
  swift_bridgeObjectRelease();
  uint64_t v41 = v160;
  uint64_t v42 = (uint64_t)v135;
  uint64_t v43 = v131;
  uint64_t v44 = (uint64_t)v122;
  uint64_t v45 = (uint64_t)v145;
  uint64_t v133 = *(void *)(v160 + 16);
  if (!v133)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v46 = 0;
    unint64_t v137 = MEMORY[0x1E4FBC860];
    uint64_t v38 = v152;
    if (v42 <= 0) {
      return v38;
    }
LABEL_43:
    if ((v11 & 0x8000000000000000) == 0)
    {
      do
      {
        if (v11)
        {
          sub_1DCD56524();
          uint64_t v115 = 0;
          do
          {
            uint64_t v116 = v115 + 1;
            uint64_t v117 = swift_allocObject();
            *(_OWORD *)(v117 + 16) = v157;
            *(void *)(v117 + 32) = sub_1DD048808();
            *(void *)(v117 + 40) = sub_1DD048808();
            *(void *)(v117 + 48) = sub_1DD048808();
            uint64_t v159 = v117;
            sub_1DD0486D8();
            unint64_t v118 = (void *)sub_1DD0489B8();
            uint64_t v119 = (void *)sub_1DD0486A8();
            swift_bridgeObjectRelease();
            objc_msgSend(v38, sel_setObject_forKeyedSubscript_, v118, v119);

            uint64_t v115 = v116;
          }
          while (v11 != v116);
        }
        ++v46;
      }
      while ((void *)v46 != v135);
      return v38;
    }
LABEL_54:
    __break(1u);
  }
  uint64_t v151 = 0;
  uint64_t v46 = 0;
  unint64_t v47 = 0;
  unint64_t v123 = (*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
  uint64_t v132 = v160 + v123;
  double v127 = 1.0 / v29;
  unint64_t v120 = (void (**)(uint64_t, uint64_t))(v156 + 8);
  long long v126 = xmmword_1DD04EF80;
  double v125 = 1.0 / v28;
  unint64_t v137 = MEMORY[0x1E4FBC860];
  uint64_t v38 = v152;
  uint64_t v48 = v135;
  uint64_t v138 = a9;
  double v129 = v26;
  uint64_t v124 = v160;
  double v128 = v27;
  double v49 = 1.0 / v28;
  do
  {
    if (v47 >= *(void *)(v41 + 16)) {
      goto LABEL_53;
    }
    uint64_t v50 = *(void *)(v43 + 72);
    unint64_t v136 = v47;
    uint64_t v134 = v50;
    sub_1DCD36E7C(v132 + v50 * v47, v45);
    if (*(unsigned char *)(v45 + 104) == 1)
    {
      sub_1DCD565B8(v45, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      goto LABEL_10;
    }
    uint64_t v147 = (char *)v48 - v46;
    if (v48 == (void *)v46)
    {
      swift_bridgeObjectRelease();
      sub_1DCD565B8(v45, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_release();
      return v38;
    }
    uint64_t v51 = v44;
    uint64_t v52 = v48;
    double v53 = *(double *)v45;
    double v54 = *(double *)(v45 + 8);
    CGFloat v55 = *(double *)(v45 + 16);
    CGFloat v56 = *(double *)(v45 + 24);
    CGFloat v57 = *(double *)v45 - v26;
    CGFloat v58 = v54 - v27;
    v165.origin.CGFloat x = *(CGFloat *)v45;
    v165.origin.CGFloat y = v54;
    v165.size.CGFloat width = v55;
    v165.size.CGFloat height = v56;
    CGFloat Width = CGRectGetWidth(v165);
    v166.origin.CGFloat x = v53;
    v166.origin.CGFloat y = v54;
    v166.size.CGFloat width = v55;
    v166.size.CGFloat height = v56;
    CGFloat Height = CGRectGetHeight(v166);
    double v61 = v127;
    CGFloat v62 = v127 * v57;
    v167.origin.CGFloat x = v57;
    v167.origin.CGFloat y = v58;
    v167.size.CGFloat width = Width;
    v167.size.CGFloat height = Height;
    CGFloat v63 = v61 * CGRectGetWidth(v167);
    v168.origin.CGFloat x = v57;
    v168.origin.CGFloat y = v58;
    v168.size.CGFloat width = Width;
    v168.size.CGFloat height = Height;
    CGFloat v64 = v49 * CGRectGetHeight(v168);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v126;
    v169.origin.CGFloat x = v62;
    v169.origin.CGFloat y = v49 * v58;
    v169.size.CGFloat width = v63;
    v169.size.CGFloat height = v64;
    float v66 = CGRectGetWidth(v169);
    *(float *)&CGFloat v57 = v62;
    *(float *)(inited + 32) = (float)(v66 * 0.5) + *(float *)&v57;
    float v67 = v49 * v58;
    *(float *)&CGFloat v57 = 1.0 - v67;
    v170.origin.CGFloat x = v62;
    v170.origin.CGFloat y = v49 * v58;
    v170.size.CGFloat width = v63;
    v170.size.CGFloat height = v64;
    float v68 = CGRectGetHeight(v170);
    *(float *)(inited + 36) = *(float *)&v57 - (float)(v68 * 0.5);
    v171.origin.CGFloat x = v62;
    v171.origin.CGFloat y = v49 * v58;
    v171.size.CGFloat width = v63;
    v171.size.CGFloat height = v64;
    float v69 = CGRectGetWidth(v171);
    *(float *)(inited + 40) = v69;
    v172.origin.CGFloat x = v62;
    v172.origin.CGFloat y = v49 * v58;
    v172.size.CGFloat width = v63;
    v172.size.CGFloat height = v64;
    float v70 = CGRectGetHeight(v172);
    *(float *)(inited + 44) = v70;
    uint64_t v71 = (uint64_t)v148;
    sub_1DCD36E7C(v45, (uint64_t)v148);
    swift_bridgeObjectRelease();
    unint64_t v72 = (void *)MEMORY[0x1E4FBC860];
    *(void *)(v71 + 56) = MEMORY[0x1E4FBC860];
    uint64_t v73 = *(void *)(v45 + 56);
    uint64_t v144 = *(void *)(v73 + 16);
    if (!v144)
    {
      swift_bridgeObjectRelease();
      double v26 = v129;
      double v27 = v128;
      uint64_t v48 = v52;
      uint64_t v44 = v51;
      uint64_t v43 = v131;
      goto LABEL_35;
    }
    uint64_t v146 = inited;
    uint64_t v143 = v73 + 32;
    uint64_t v141 = v46 ^ 0x7FFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    unint64_t v74 = 0;
    uint64_t v75 = v72;
    double v26 = v129;
    double v27 = v128;
    char v76 = (char *)v72;
    uint64_t v140 = v73;
    while (1)
    {
      if (v74 >= *(void *)(v73 + 16))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      uint64_t v77 = (long long *)(v143 + 80 * v74);
      long long v160 = *v77;
      long long v78 = v77[1];
      long long v79 = v77[2];
      long long v80 = v77[3];
      *(_OWORD *)&v163[12] = *(long long *)((char *)v77 + 60);
      long long v162 = v79;
      *(_OWORD *)uint64_t v163 = v80;
      long long v161 = v78;
      sub_1DCD4E7EC((uint64_t)&v160);
      if ((char *)v74 == v147) {
        break;
      }
      sub_1DCD4E7EC((uint64_t)&v160);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v150 = v74;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v75 = sub_1DCE9DE38(0, v75[2] + 1, 1, v75);
      }
      uint64_t v82 = v142;
      uint64_t v83 = (uint64_t)v148;
      unint64_t v85 = v75[2];
      unint64_t v84 = v75[3];
      if (v85 >= v84 >> 1) {
        uint64_t v75 = sub_1DCE9DE38((void *)(v84 > 1), v85 + 1, 1, v75);
      }
      v75[2] = v85 + 1;
      uint64_t v86 = &v75[10 * v85];
      _OWORD v86[2] = v160;
      long long v87 = v161;
      long long v88 = v162;
      long long v89 = *(_OWORD *)v163;
      *(_OWORD *)((char *)v86 + 92) = *(_OWORD *)&v163[12];
      v86[4] = v88;
      v86[5] = v89;
      v86[3] = v87;
      *(void *)(v83 + 56) = v75;
      int v90 = *((_DWORD *)v145 + 19);
      uint64_t v91 = sub_1DCE9D9E0(0, 1, 1, v76);
      unint64_t v93 = *((void *)v91 + 2);
      unint64_t v92 = *((void *)v91 + 3);
      uint64_t v154 = (void *)v46;
      uint64_t v149 = v75;
      if (v93 >= v92 >> 1) {
        uint64_t v91 = sub_1DCE9D9E0((char *)(v92 > 1), v93 + 1, 1, v91);
      }
      *((void *)v91 + 2) = v93 + 1;
      *(_DWORD *)&v91[4 * v93 + 32] = v90;
      uint64_t v159 = (uint64_t)v91;
      sub_1DCD4E7EC((uint64_t)&v160);
      uint64_t v94 = v82;
      uint64_t v95 = v151;
      uint64_t v96 = sub_1DCD54678(v94, (uint64_t)&v160);
      uint64_t v151 = v95;
      sub_1DCD4E824((uint64_t)&v160);
      sub_1DCD4E824((uint64_t)&v160);
      sub_1DCFDEAC4(v96);
      uint64_t v97 = swift_bridgeObjectRetain();
      sub_1DCFDEAC4(v97);
      uint64_t v98 = swift_bridgeObjectRetain();
      sub_1DCFDEAC4(v98);
      uint64_t v153 = v159;
      uint64_t v99 = *(void *)(v159 + 16);
      BOOL v100 = v152;
      if (v99)
      {
        uint64_t v101 = 0;
        uint64_t v156 = v153 + 32;
        do
        {
          int v102 = *(_DWORD *)(v156 + 4 * v101);
          uint64_t v103 = swift_allocObject();
          *(_OWORD *)(v103 + 16) = v157;
          *(void *)(v103 + 32) = sub_1DD048808();
          *(void *)(v103 + 40) = sub_1DD048808();
          *(void *)(v103 + 48) = sub_1DD048808();
          uint64_t v158 = v103;
          sub_1DD0486D8();
          id v104 = objc_allocWithZone(NSNumber);
          LODWORD(v105) = v102;
          id v106 = objc_msgSend(v104, sel_initWithFloat_, v105);
          sub_1DCD56524();
          uint64_t v107 = (void *)sub_1DD0486A8();
          swift_bridgeObjectRelease();
          objc_msgSend(v100, sel_setObject_forKeyedSubscript_, v106, v107);

          ++v101;
        }
        while (v99 != v101);
      }
      swift_bridgeObjectRelease();
      uint64_t v75 = v149;
      if (v150 == v141) {
        goto LABEL_52;
      }
      unint64_t v74 = v150 + 1;
      uint64_t v46 = (uint64_t)v154 + 1;
      uint64_t v11 = v138;
      uint64_t v38 = v152;
      char v76 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v73 = v140;
      if (v150 + 1 == v144)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v48 = v135;
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCD4E824((uint64_t)&v160);
    uint64_t v108 = (uint64_t)v121;
    sub_1DCDB40EC((uint64_t)v121);
    uint64_t v109 = sub_1DD048048();
    os_log_type_t v110 = sub_1DD048848();
    if (os_log_type_enabled(v109, v110))
    {
      unint64_t v111 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v111 = 0;
      _os_log_impl(&dword_1DCCF9000, v109, v110, "Reached maximum number of supported detector results of Domain Prediction Net", v111, 2u);
      MEMORY[0x1E01B07E0](v111, -1, -1);
    }

    (*v120)(v108, v130);
    uint64_t v48 = v135;
    uint64_t v46 = (uint64_t)v135;
LABEL_34:
    uint64_t v43 = v131;
    uint64_t v44 = (uint64_t)v122;
    uint64_t v45 = (uint64_t)v145;
LABEL_35:
    sub_1DCD36E7C((uint64_t)v148, v44);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v137 = sub_1DCE9D7A0(0, *(void *)(v137 + 16) + 1, 1, v137);
    }
    unint64_t v113 = *(void *)(v137 + 16);
    unint64_t v112 = *(void *)(v137 + 24);
    if (v113 >= v112 >> 1) {
      unint64_t v137 = sub_1DCE9D7A0(v112 > 1, v113 + 1, 1, v137);
    }
    unint64_t v114 = v137;
    *(void *)(v137 + 16) = v113 + 1;
    sub_1DCD36EE0(v44, v114 + v123 + v113 * v134);
    sub_1DCD565B8(v45, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD565B8((uint64_t)v148, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v41 = v124;
LABEL_10:
    unint64_t v47 = v136 + 1;
  }
  while (v136 + 1 != v133);
  swift_bridgeObjectRelease();
  swift_release();
  if (v46 < (uint64_t)v48) {
    goto LABEL_43;
  }
  return v38;
}

uint64_t sub_1DCD55D64(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DCD55DA8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD048068();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&uint64_t v8 = COERCE_DOUBLE(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08));
  uint64_t v9 = swift_allocObject();
  long long v73 = xmmword_1DD04EF90;
  *(_OWORD *)(v9 + 16) = xmmword_1DD04EF90;
  *(void *)(v9 + 32) = sub_1DD048808();
  *(void *)(v9 + 40) = sub_1DD048808();
  *(void *)(v9 + 48) = sub_1DD048808();
  *(void *)(v9 + 56) = sub_1DD048808();
  uint64_t v74 = v9;
  sub_1DD0486D8();
  uint64_t v10 = v74;
  id v11 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
  id v12 = sub_1DCE4FFBC(v10, 65568);
  unint64_t v16 = v12;
  uint64_t v71 = a1;
  if (!v12)
  {
    sub_1DCDB40EC((uint64_t)v7);
    uint64_t v13 = sub_1DD048048();
    os_log_type_t v14 = sub_1DD048858();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1DCCF9000, v13, v14, "Failed to create edgeAttributes MLMultiArray", v15, 2u);
      MEMORY[0x1E01B07E0](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  uint64_t v67 = 0;
  double v72 = *(double *)&v8;
  if (a2 < 0) {
    goto LABEL_54;
  }
  unint64_t v18 = 0x1E4F28000uLL;
  if (a2)
  {
    uint64_t v19 = 0;
    do
    {
      if (v19 == a2) {
        goto LABEL_49;
      }
      uint64_t v20 = 0;
      do
      {
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = v73;
        *(void *)(v21 + 32) = sub_1DD048808();
        *(void *)(v21 + 40) = sub_1DD048808();
        *(void *)(v21 + 48) = sub_1DD048808();
        *(void *)(v21 + 56) = sub_1DD048808();
        uint64_t v74 = v21;
        sub_1DD0486D8();
        id v22 = objc_allocWithZone(*(Class *)(v18 + 3792));
        id v23 = objc_msgSend(v22, sel_initWithInteger_, 0, v67);
        sub_1DCD56524();
        uint64_t v24 = a2;
        unint64_t v25 = v18;
        double v26 = (void *)sub_1DD0486A8();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_setObject_forKeyedSubscript_, v23, v26);

        unint64_t v18 = v25;
        a2 = v24;
        ++v20;
      }
      while (v24 != v20);
      ++v19;
    }
    while (v19 != v24);
  }
  double v27 = v71;
  uint64_t v28 = v71[2];
  if (!v28)
  {
    uint64_t v32 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v45 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v45) {
      goto LABEL_37;
    }
    goto LABEL_47;
  }
  uint64_t v29 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v70 = *(void *)(v29 + 72);
  swift_bridgeObjectRetain();
  unint64_t v31 = v30 + 56;
  uint64_t v32 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v33 = *(void *)((char *)v27 + v31);
    uint64_t v34 = *(void *)(v33 + 16);
    int64_t v35 = v32[2];
    int64_t v36 = v35 + v34;
    if (__OFADD__(v35, v34)) {
      goto LABEL_50;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v36 <= v32[3] >> 1)
    {
      if (!*(void *)(v33 + 16)) {
        goto LABEL_16;
      }
    }
    else
    {
      if (v35 <= v36) {
        int64_t v38 = v35 + v34;
      }
      else {
        int64_t v38 = v35;
      }
      uint64_t v32 = sub_1DCE9DE38(isUniquelyReferenced_nonNull_native, v38, 1, v32);
      if (!*(void *)(v33 + 16))
      {
LABEL_16:
        if (v34) {
          goto LABEL_51;
        }
        goto LABEL_17;
      }
    }
    uint64_t v39 = v32[2];
    if ((v32[3] >> 1) - v39 < v34) {
      goto LABEL_52;
    }
    unint64_t v40 = (unint64_t)&v32[10 * v39 + 4];
    if (v33 + 32 < v40 + 80 * v34 && v40 < v33 + 32 + 80 * v34) {
      goto LABEL_55;
    }
    swift_arrayInitWithCopy();
    if (v34)
    {
      uint64_t v42 = v32[2];
      BOOL v43 = __OFADD__(v42, v34);
      uint64_t v44 = v42 + v34;
      if (v43) {
        goto LABEL_53;
      }
      void v32[2] = v44;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    double v27 = v71;
    v31 += v70;
    --v28;
  }
  while (v28);
  swift_bridgeObjectRelease();
  uint64_t v45 = v32[2];
  if (!v45)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    return (uint64_t)v16;
  }
LABEL_37:
  unint64_t v46 = 0;
  uint64_t v71 = v32;
  float v68 = (CGFloat *)(v32 + 8);
  float v69 = v32 + 4;
  while (2)
  {
    uint64_t v47 = 0;
    unint64_t v70 = v46 + 1;
    uint64_t v48 = v68;
    double v49 = (double *)&v69[10 * v46];
LABEL_42:
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = v73;
    *(void *)(v53 + 32) = sub_1DD048808();
    *(void *)(v53 + 40) = sub_1DD048808();
    if (v46 == v47)
    {
      *(void *)(v53 + 48) = sub_1DD048808();
      *(void *)(v53 + 56) = sub_1DD048808();
      uint64_t v74 = v53;
      sub_1DD0486D8();
      id v50 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 1);
      goto LABEL_41;
    }
    *(void *)(v53 + 48) = sub_1DD048808();
    *(void *)(v53 + 56) = sub_1DD048808();
    uint64_t v74 = v53;
    sub_1DD0486D8();
    if (v46 < v71[2])
    {
      double v54 = v49[1];
      double v55 = v49[2];
      CGFloat v56 = v49[3];
      CGFloat v57 = v49[4];
      double v58 = *(v48 - 3);
      double v59 = *(v48 - 2);
      CGFloat v60 = *(v48 - 1);
      CGFloat v61 = *v48;
      v75.origin.CGFloat x = v54;
      v75.origin.CGFloat y = v55;
      v75.size.CGFloat width = v56;
      v75.size.CGFloat height = v57;
      double v72 = v54 + CGRectGetWidth(v75) * 0.5;
      v76.origin.CGFloat x = v54;
      v76.origin.CGFloat y = v55;
      v76.size.CGFloat width = v56;
      v76.size.CGFloat height = v57;
      double v62 = v55 + CGRectGetHeight(v76) * 0.5;
      v77.origin.CGFloat x = v58;
      v77.origin.CGFloat y = v59;
      v77.size.CGFloat width = v60;
      v77.size.CGFloat height = v61;
      double v63 = v58 + CGRectGetWidth(v77) * 0.5;
      v78.origin.CGFloat x = v58;
      v78.origin.CGFloat y = v59;
      v78.size.CGFloat width = v60;
      v78.size.CGFloat height = v61;
      CGFloat Height = CGRectGetHeight(v78);
      *(float *)&CGFloat Height = (v72 - v63) * (v72 - v63) + (v62 - (v59 + Height * 0.5)) * (v62 - (v59 + Height * 0.5));
      *(float *)&double v62 = (float)(2.0 - *(float *)&Height) * 0.5;
      id v65 = objc_allocWithZone(NSNumber);
      LODWORD(v66) = LODWORD(v62);
      id v50 = objc_msgSend(v65, sel_initWithFloat_, v66);
LABEL_41:
      uint64_t v51 = v50;
      sub_1DCD56524();
      uint64_t v52 = (void *)sub_1DD0486A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_setObject_forKeyedSubscript_, v51, v52);
      ++v47;

      v48 += 10;
      if (v45 == v47)
      {
        unint64_t v46 = v70;
        if (v70 == v45) {
          goto LABEL_47;
        }
        continue;
      }
      goto LABEL_42;
    }
    break;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

unint64_t sub_1DCD56524()
{
  unint64_t result = qword_1EBE850A0;
  if (!qword_1EBE850A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE850A0);
  }
  return result;
}

unint64_t sub_1DCD56564()
{
  unint64_t result = qword_1EBE849C8;
  if (!qword_1EBE849C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE849C8);
  }
  return result;
}

uint64_t sub_1DCD565B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD56618(char *a1)
{
  uint64_t v2 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v2 - 8);
  int64_t v35 = (uint8_t *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1DD048068();
  uint64_t v36 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v39 = (uint64_t)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DD046478();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE848B0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for MLModelBundle();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t, double))(v6 + 16);
  unint64_t v40 = a1;
  v19(v10, a1, v5, v16);
  sub_1DCEDFCAC(v10, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1DCD56D2C((uint64_t)v13);
    sub_1DCDB40EC(v39);
    ((void (*)(char *, char *, uint64_t))v19)(v38, v40, v5);
    uint64_t v20 = sub_1DD048048();
    os_log_type_t v21 = sub_1DD048858();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v23 = v34;
    if (v22)
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v42 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      int64_t v35 = v24 + 4;
      sub_1DCD28968();
      double v26 = v38;
      uint64_t v27 = sub_1DD048F78();
      uint64_t v41 = sub_1DCED7FA0(v27, v28, &v42);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v6 + 8);
      v29(v26, v5);
      _os_log_impl(&dword_1DCCF9000, v20, v21, "Failed to initialize VI Model bundle %s)", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v25, -1, -1);
      MEMORY[0x1E01B07E0](v24, -1, -1);
    }
    else
    {

      uint64_t v29 = *(void (**)(char *, uint64_t))(v6 + 8);
      v29(v38, v5);
    }
    v29(v40, v5);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v39, v23);
    type metadata accessor for ModelBundleProvider();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v40, v5);
    sub_1DCD56DEC((uint64_t)v13, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MLModelBundle);
    uint64_t v30 = (uint64_t)v35;
    sub_1DCD56CC8((uint64_t)&v18[*(int *)(v14 + 20)], (uint64_t)v35);
    sub_1DCD56D8C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MLModelBundle);
    uint64_t v31 = v37;
    sub_1DCD56DEC(v30, v37 + OBJC_IVAR____TtC18VisualIntelligence19ModelBundleProvider_info, type metadata accessor for MLModelInfo);
    return v31;
  }
}

uint64_t sub_1DCD56B58()
{
  sub_1DCD56D8C(v0 + OBJC_IVAR____TtC18VisualIntelligence19ModelBundleProvider_info, type metadata accessor for MLModelInfo);
  return swift_deallocClassInstance();
}

uint64_t sub_1DCD56BD0()
{
  return type metadata accessor for ModelBundleProvider();
}

uint64_t type metadata accessor for ModelBundleProvider()
{
  uint64_t result = qword_1EBE870F0;
  if (!qword_1EBE870F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCD56C24()
{
  uint64_t result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCD56CB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD56CC8(v1 + OBJC_IVAR____TtC18VisualIntelligence19ModelBundleProvider_info, a1);
}

uint64_t sub_1DCD56CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MLModelInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD56D2C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE848B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCD56D8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD56DEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD56E54@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v57 = (uint64_t)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v62 = v8;
  MEMORY[0x1F4188790](v8);
  CGFloat v56 = (void *)((char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1DD048068();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v64 = v10;
  MEMORY[0x1F4188790](v10);
  double v59 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v53 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v58 = (uint64_t)v53 - v16;
  uint64_t v17 = sub_1DD048468();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v65 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig(0);
  MEMORY[0x1F4188790](v65);
  uint64_t v19 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  BOOL v22 = (char *)v53 - v21;
  id v23 = objc_msgSend(self, sel_defaultManager);
  uint64_t v24 = (void *)sub_1DD0483D8();
  id v25 = objc_msgSend(v23, sel_contentsAtPath_, v24);

  if (v25)
  {
    uint64_t v60 = a3;
    uint64_t v26 = sub_1DD0464E8();
    unint64_t v28 = v27;

    uint64_t v29 = sub_1DCF47ED8(v26, v28);
    v53[1] = a1;
    uint64_t v36 = v29;
    unint64_t v38 = v37;
    sub_1DCD21954(v26, v28);

    sub_1DD048448();
    uint64_t v54 = v36;
    unint64_t v55 = v38;
    sub_1DD048428();
    sub_1DCD57798();
    memset(v66, 0, sizeof(v66));
    uint64_t v67 = 0;
    uint64_t v39 = v65;
    sub_1DD047E58();
    uint64_t v40 = v58;
    sub_1DCDB40EC(v58);
    sub_1DCD577F0((uint64_t)v22, (uint64_t)v19);
    uint64_t v41 = sub_1DD048048();
    uint64_t v42 = sub_1DD048848();
    if (os_log_type_enabled(v41, (os_log_type_t)v42))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 134349056;
      uint64_t v45 = (uint64_t)&v19[*(int *)(v39 + 20)];
      uint64_t v46 = v57;
      sub_1DCD57854(v45, v57);
      int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v46, 1, v62);
      uint64_t v48 = v60;
      double v49 = v56;
      if (v47 == 1)
      {
        *CGFloat v56 = 0;
        *((_DWORD *)v49 + 2) = 0;
        sub_1DD047BE8();
        sub_1DCD578BC(v46);
      }
      else
      {
        sub_1DCD5797C(v46, (uint64_t)v56, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig);
      }
      float v50 = *(float *)v49;
      sub_1DCD5791C((uint64_t)v49, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig);
      *(double *)double v66 = v50;
      sub_1DD048A28();
      sub_1DCD5791C((uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
      _os_log_impl(&dword_1DCCF9000, v41, (os_log_type_t)v42, "Loaded eligibility config with min image size %{public}f", v44, 0xCu);
      MEMORY[0x1E01B07E0](v44, -1, -1);
    }
    else
    {
      sub_1DCD5791C((uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
      uint64_t v48 = v60;
    }
    uint64_t v52 = v63;
    uint64_t v51 = v64;
    sub_1DCD21954(v54, v55);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v40, v51);
    return sub_1DCD5797C((uint64_t)v22, v48, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
  }
  else
  {
    uint64_t v30 = a1;

    sub_1DCDB40EC((uint64_t)v14);
    swift_bridgeObjectRetain_n();
    uint64_t v31 = sub_1DD048048();
    os_log_type_t v32 = sub_1DD048858();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(void *)&v66[0] = v34;
      *(_DWORD *)uint64_t v33 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_1DCED7FA0(v30, a2, (uint64_t *)v66);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v31, v32, "Failed to load data at path %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v34, -1, -1);
      MEMORY[0x1E01B07E0](v33, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v14, v64);
    sub_1DD047BE8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(a3 + *(int *)(v65 + 20), 1, 1, v62);
  }
}

unint64_t sub_1DCD57798()
{
  unint64_t result = qword_1EBE84CB8;
  if (!qword_1EBE84CB8)
  {
    type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84CB8);
  }
  return result;
}

uint64_t sub_1DCD577F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD57854(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD578BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCD5791C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD5797C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double S2AreaCentroid.area.getter()
{
  return *(double *)v0;
}

double S2AreaCentroid.centroid.getter@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(double *)(a1 + 16) = result;
  return result;
}

VisualIntelligence::S2AreaCentroid __swiftcall S2AreaCentroid.init(area:centroid:)(Swift::Double area, VisualIntelligence::S2Point centroid)
{
  double v4 = v2[2];
  *(Swift::Double *)uint64_t v3 = area;
  long long v5 = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)v2;
  *(double *)(v3 + 24) = v4;
  result.centroid.z = centroid.z;
  result.centroid.CGFloat y = centroid.y;
  result.area = *(double *)&v5;
  result.centroid.CGFloat x = v4;
  return result;
}

ValueMetadata *type metadata accessor for S2AreaCentroid()
{
  return &type metadata for S2AreaCentroid;
}

uint64_t ObjectKnowledgeCSUCarrier.csuQid.getter()
{
  return *(void *)v0;
}

uint64_t ObjectKnowledgeCSUCarrier.csuIdType.getter()
{
  return *(unsigned __int16 *)(v0 + 8);
}

uint64_t ObjectKnowledgeCSUCarrier.csuLocalizedLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ObjectKnowledgeCSUCarrier.csuLocalizedLabelDictionary.getter()
{
  return swift_bridgeObjectRetain();
}

double ObjectKnowledgeCSUCarrier.csuConfidence.getter()
{
  return *(double *)(v0 + 40);
}

uint64_t ObjectKnowledgeCSUCarrier.csuSensitiveLocation.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ObjectKnowledgeCSUCarrier.csuCategory.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ObjectKnowledgeCSUCarrier.csuVertical.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ObjectKnowledgeCSUCarrier.csuLocalizedSynonyms.getter()
{
  return swift_bridgeObjectRetain();
}

double ObjectKnowledgeCSUCarrier.csuLongitute.getter()
{
  return *(double *)(v0 + 96);
}

double ObjectKnowledgeCSUCarrier.csuLatitute.getter()
{
  return *(double *)(v0 + 104);
}

uint64_t ObjectKnowledgeCSUCarrier.csuVersion.getter()
{
  return *(unsigned int *)(v0 + 112);
}

unint64_t sub_1DCD57B04(char a1)
{
  unint64_t result = 0x646951757363;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7079546449757363;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0x69666E6F43757363;
      break;
    case 5:
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0x6765746143757363;
      break;
    case 7:
      unint64_t result = 0x6974726556757363;
      break;
    case 9:
      unint64_t result = 0x69676E6F4C757363;
      break;
    case 10:
      unint64_t result = 0x746974614C757363;
      break;
    case 11:
      unint64_t result = 0x6973726556757363;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DCD57CA8()
{
  return sub_1DCD57B04(*v0);
}

uint64_t sub_1DCD57CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCD5937C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DCD57CD8(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1DCD57CE4(uint64_t a1)
{
  unint64_t v2 = sub_1DCD589BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCD57D20(uint64_t a1)
{
  unint64_t v2 = sub_1DCD589BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ObjectKnowledgeCSUCarrier.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB024D0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v24 = *(unsigned __int16 *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v22 = *(void *)(v1 + 24);
  uint64_t v23 = v7;
  uint64_t v21 = *(void *)(v1 + 32);
  int v20 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v18 = *(void *)(v1 + 64);
  uint64_t v19 = v8;
  uint64_t v9 = *(void *)(v1 + 72);
  uint64_t v16 = *(void *)(v1 + 80);
  uint64_t v17 = v9;
  uint64_t v15 = *(void *)(v1 + 88);
  int v10 = *(_DWORD *)(v1 + 112);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD589BC();
  sub_1DD049138();
  LOBYTE(v27) = 0;
  uint64_t v11 = v25;
  sub_1DD048F48();
  if (!v11)
  {
    uint64_t v12 = v21;
    LODWORD(v25) = v10;
    LOBYTE(v27) = 1;
    sub_1DD048F28();
    LOBYTE(v27) = 2;
    sub_1DD048EB8();
    uint64_t v27 = v12;
    char v26 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB024E0);
    sub_1DCD58A10();
    sub_1DD048F18();
    LOBYTE(v27) = 4;
    sub_1DD048ED8();
    LOBYTE(v27) = 5;
    sub_1DD048EC8();
    LOBYTE(v27) = 6;
    sub_1DD048EB8();
    LOBYTE(v27) = 7;
    sub_1DD048EB8();
    uint64_t v27 = v15;
    char v26 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB024F8);
    sub_1DCD58AA8();
    sub_1DD048F18();
    LOBYTE(v27) = 9;
    sub_1DD048ED8();
    LOBYTE(v27) = 10;
    sub_1DD048ED8();
    LOBYTE(v27) = 11;
    sub_1DD048F38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ObjectKnowledgeCSUCarrier.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02518);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD589BC();
  sub_1DD049128();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v44) = 0;
  uint64_t v9 = sub_1DD048E58();
  LOBYTE(v44) = 1;
  int v10 = sub_1DD048E38();
  LOBYTE(v44) = 2;
  uint64_t v39 = sub_1DD048DC8();
  int v40 = v10;
  uint64_t v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB024E0);
  char v43 = 3;
  sub_1DCD58B64();
  swift_bridgeObjectRetain();
  sub_1DD048E28();
  uint64_t v42 = v13;
  uint64_t v14 = v44;
  LOBYTE(v44) = 4;
  swift_bridgeObjectRetain();
  sub_1DD048DE8();
  uint64_t v16 = v15;
  uint64_t v38 = v14;
  LOBYTE(v44) = 5;
  LODWORD(v14) = sub_1DD048DD8();
  LOBYTE(v44) = 6;
  uint64_t v17 = sub_1DD048DC8();
  int v36 = v14;
  uint64_t v37 = v17;
  LOBYTE(v44) = 7;
  uint64_t v19 = v18;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1DD048DC8();
  uint64_t v41 = v19;
  uint64_t v35 = v20;
  uint64_t v22 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB024F8);
  char v43 = 8;
  sub_1DCD58C40();
  swift_bridgeObjectRetain();
  sub_1DD048E28();
  uint64_t v23 = v44;
  LOBYTE(v44) = 9;
  uint64_t v34 = v23;
  swift_bridgeObjectRetain();
  sub_1DD048DE8();
  uint64_t v25 = v24;
  LOBYTE(v44) = 10;
  sub_1DD048DE8();
  uint64_t v27 = v26;
  LOBYTE(v44) = 11;
  int v28 = sub_1DD048E48();
  v36 &= 1u;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(_WORD *)(a2 + 8) = v40;
  uint64_t v29 = v38;
  uint64_t v31 = v41;
  uint64_t v30 = v42;
  *(void *)(a2 + 16) = v39;
  *(void *)(a2 + 24) = v30;
  *(void *)(a2 + 32) = v29;
  *(void *)(a2 + 40) = v16;
  *(unsigned char *)(a2 + 48) = v36;
  *(void *)(a2 + 56) = v37;
  *(void *)(a2 + 64) = v31;
  uint64_t v32 = v34;
  *(void *)(a2 + 72) = v35;
  *(void *)(a2 + 80) = v22;
  *(void *)(a2 + 88) = v32;
  *(void *)(a2 + 96) = v25;
  *(void *)(a2 + 104) = v27;
  *(_DWORD *)(a2 + 112) = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCD587BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ObjectKnowledgeCSUCarrier.init(from:)(a1, a2);
}

uint64_t sub_1DCD587D4(void *a1)
{
  return ObjectKnowledgeCSUCarrier.encode(to:)(a1);
}

uint64_t _s18VisualIntelligence25ObjectKnowledgeCSUCarrierV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (*(void *)a1 == *(void *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    double v5 = *(double *)(a1 + 40);
    int v6 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 56);
    uint64_t v8 = *(void *)(a1 + 64);
    uint64_t v31 = *(void *)(a1 + 80);
    uint64_t v32 = *(void *)(a1 + 72);
    uint64_t v29 = *(void *)(a1 + 88);
    double v10 = *(double *)(a1 + 96);
    double v9 = *(double *)(a1 + 104);
    int v30 = *(_DWORD *)(a1 + 112);
    uint64_t v11 = *(void *)(a2 + 32);
    double v12 = *(double *)(a2 + 40);
    int v13 = *(unsigned __int8 *)(a2 + 48);
    uint64_t v14 = *(void *)(a2 + 56);
    uint64_t v15 = *(void *)(a2 + 64);
    uint64_t v16 = *(void *)(a2 + 72);
    uint64_t v17 = *(void *)(a2 + 80);
    uint64_t v27 = *(void *)(a2 + 88);
    double v19 = *(double *)(a2 + 96);
    double v18 = *(double *)(a2 + 104);
    int v28 = *(_DWORD *)(a2 + 112);
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
      goto LABEL_22;
    }
    char v20 = sub_1DD048FA8();
    uint64_t result = 0;
    if (v20)
    {
LABEL_22:
      sub_1DCD8E1F0(v4, v11);
      char v22 = v21;
      uint64_t result = 0;
      if ((v22 & 1) != 0 && v5 == v12 && ((v6 ^ v13) & 1) == 0)
      {
        if (v7 == v14 && v8 == v15 || (char v23 = sub_1DD048FA8(), result = 0, (v23 & 1) != 0))
        {
          if (v32 == v16 && v31 == v17 || (char v24 = sub_1DD048FA8(), result = 0, (v24 & 1) != 0))
          {
            sub_1DCD8E6B4(v29, v27);
            unsigned int v26 = v25 & (v10 == v19);
            if (v9 != v18) {
              unsigned int v26 = 0;
            }
            if (v30 == v28) {
              return v26;
            }
            else {
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_1DCD589BC()
{
  unint64_t result = qword_1EAB024D8;
  if (!qword_1EAB024D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB024D8);
  }
  return result;
}

unint64_t sub_1DCD58A10()
{
  unint64_t result = qword_1EAB024E8;
  if (!qword_1EAB024E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAB024E0);
    sub_1DCD58BFC(&qword_1EAB024F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB024E8);
  }
  return result;
}

unint64_t sub_1DCD58AA8()
{
  unint64_t result = qword_1EAB02500;
  if (!qword_1EAB02500)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAB024F8);
    sub_1DCD58BFC(&qword_1EAB024F0);
    sub_1DCD58CFC(&qword_1EAB02508);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02500);
  }
  return result;
}

unint64_t sub_1DCD58B64()
{
  unint64_t result = qword_1EAB02520;
  if (!qword_1EAB02520)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAB024E0);
    sub_1DCD58BFC(&qword_1EAB02528);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02520);
  }
  return result;
}

uint64_t sub_1DCD58BFC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DD0465D8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCD58C40()
{
  unint64_t result = qword_1EAB02530;
  if (!qword_1EAB02530)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAB024F8);
    sub_1DCD58BFC(&qword_1EAB02528);
    sub_1DCD58CFC(&qword_1EAB02538);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02530);
  }
  return result;
}

uint64_t sub_1DCD58CFC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAB02510);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for ObjectKnowledgeCSUCarrier()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ObjectKnowledgeCSUCarrier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ObjectKnowledgeCSUCarrier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy116_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 28);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ObjectKnowledgeCSUCarrier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectKnowledgeCSUCarrier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 116)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectKnowledgeCSUCarrier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 116) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 116) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectKnowledgeCSUCarrier()
{
  return &type metadata for ObjectKnowledgeCSUCarrier;
}

uint64_t getEnumTagSinglePayload for ObjectKnowledgeCSUCarrier.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ObjectKnowledgeCSUCarrier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD5923CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectKnowledgeCSUCarrier.CodingKeys()
{
  return &type metadata for ObjectKnowledgeCSUCarrier.CodingKeys;
}

unint64_t sub_1DCD59278()
{
  unint64_t result = qword_1EAB02540;
  if (!qword_1EAB02540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02540);
  }
  return result;
}

unint64_t sub_1DCD592D0()
{
  unint64_t result = qword_1EAB02548;
  if (!qword_1EAB02548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02548);
  }
  return result;
}

unint64_t sub_1DCD59328()
{
  unint64_t result = qword_1EAB02550;
  if (!qword_1EAB02550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02550);
  }
  return result;
}

uint64_t sub_1DCD5937C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646951757363 && a2 == 0xE600000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7079546449757363 && a2 == 0xE900000000000065 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DD068460 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001DD068480 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x69666E6F43757363 && a2 == 0xED000065636E6564 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DD0684A0 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6765746143757363 && a2 == 0xEB0000000079726FLL || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6974726556757363 && a2 == 0xEB000000006C6163 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001DD0684C0 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x69676E6F4C757363 && a2 == 0xEC00000065747574 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x746974614C757363 && a2 == 0xEB00000000657475 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6973726556757363 && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_1DCD598C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for MLModelInfo(0) + 36));
  if (*(void *)(v7 + 16) && (uint64_t v8 = sub_1DCEAD428(1), (v9 & 1) != 0))
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void *)(v7 + 56);
    uint64_t v12 = sub_1DD046478();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, v11 + *(void *)(v13 + 72) * v10, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  }
  else
  {
    uint64_t v14 = sub_1DD046478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
  }
  type metadata accessor for FileMapper();
  swift_allocObject();
  uint64_t v15 = sub_1DCEC56C0((uint64_t)v6);
  sub_1DCD59AB4(a1);
  *(void *)(v2 + 16) = v15;
  return v2;
}

uint64_t type metadata accessor for FoodClassificationPostProcessor()
{
  return self;
}

uint64_t sub_1DCD59AB4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MLModelInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for VIAnalyticsEventLoggingService()
{
  return &type metadata for VIAnalyticsEventLoggingService;
}

BOOL static S2Projections.Projection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t S2Projections.Projection.hash(into:)()
{
  return sub_1DD0490C8();
}

uint64_t S2Projections.Projection.hashValue.getter()
{
  return sub_1DD049108();
}

void sub_1DCD59BA8()
{
  qword_1EAB02558 = 0x3FD41CFE93FF519ALL;
  unk_1EAB02560 = 2;
}

double static S2Projections.minArea.getter@<D0>(void *a1@<X8>)
{
  return sub_1DCD59D94(&qword_1EAB01BE0, (double *)&qword_1EAB02558, &qword_1EAB02560, a1);
}

void static S2Projections.maxArea.getter(void *a1@<X8>)
{
  *a1 = 0x3FE5161DEBBBD2B2;
  a1[1] = 2;
}

void static S2Projections.avgArea.getter(void *a1@<X8>)
{
  *a1 = 0x3FE0C152382D7365;
  a1[1] = 2;
}

void static S2Projections.minAngleSpan.getter(void *a1@<X8>)
{
  *a1 = 0x3FE5555555555555;
  a1[1] = 1;
}

void static S2Projections.maxAngleSpan.getter(void *a1@<X8>)
{
  *a1 = 0x3FEB474243BB40B2;
  a1[1] = 1;
}

void static S2Projections.avgAngleSpan.getter(void *a1@<X8>)
{
  *a1 = 0x3FE921FB54442D18;
  a1[1] = 1;
}

void sub_1DCD59C78()
{
  qword_1EAB02568 = 0x3FDE2B7DDDFEFA67;
  qword_1EAB02570 = 1;
}

double static S2Projections.minWidth.getter@<D0>(void *a1@<X8>)
{
  return sub_1DCD59D94(&qword_1EAB01BE8, (double *)&qword_1EAB02568, &qword_1EAB02570, a1);
}

void static S2Projections.avgWidth.getter(void *a1@<X8>)
{
  *a1 = 0x3FE6F3CF18462338;
  a1[1] = 1;
}

void sub_1DCD59CE0()
{
  qword_1EAB02578 = 0x3FDE2B7DDDFEFA67;
  unk_1EAB02580 = 1;
}

double static S2Projections.minEdge.getter@<D0>(void *a1@<X8>)
{
  return sub_1DCD59D94(&qword_1EAB01BF0, (double *)&qword_1EAB02578, &qword_1EAB02580, a1);
}

void static S2Projections.avgEdge.getter(void *a1@<X8>)
{
  *a1 = 0x3FE758F08369A1A5;
  a1[1] = 1;
}

void sub_1DCD59D48()
{
  qword_1EAB02588 = 0x3FE41CFE93FF519ALL;
  unk_1EAB02590 = 1;
}

double static S2Projections.minDiag.getter@<D0>(void *a1@<X8>)
{
  return sub_1DCD59D94(&qword_1EAB01BF8, (double *)&qword_1EAB02588, &qword_1EAB02590, a1);
}

double sub_1DCD59D94@<D0>(void *a1@<X0>, double *a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  double result = *a2;
  uint64_t v8 = *a3;
  *a4 = *(void *)a2;
  a4[1] = v8;
  return result;
}

void static S2Projections.maxDiag.getter(void *a1@<X8>)
{
  *a1 = 0x3FF3825D570AAC93;
  a1[1] = 1;
}

void static S2Projections.avgDiag.getter(void *a1@<X8>)
{
  *a1 = 0x3FF07BBEEABF7727;
  a1[1] = 1;
}

double static S2Projections.maxEdgeAspect.getter()
{
  return 1.44261527;
}

void sub_1DCD59E30()
{
  qword_1EAB02598 = 0x3FFBB67AE8584CAALL;
}

double static S2Projections.maxDiagAspect.getter()
{
  if (qword_1EAB01C00 != -1) {
    swift_once();
  }
  return *(double *)&qword_1EAB02598;
}

double static S2Projections.stToUV(s:)(double a1)
{
  BOOL v1 = a1 < 0.0;
  double v2 = 1.0 - (1.0 - a1) * (1.0 - a1);
  double v3 = (a1 + 1.0) * (a1 + 1.0) + -1.0;
  if (v1) {
    double v3 = v2;
  }
  return v3 * 0.333333333;
}

double static S2Projections.uvToST(u:)(double a1)
{
  BOOL v1 = a1 < 0.0;
  double v2 = 1.0 - sqrt(1.0 - a1 * 3.0);
  double result = sqrt(a1 * 3.0 + 1.0) + -1.0;
  if (v1) {
    return v2;
  }
  return result;
}

uint64_t static S2Projections.faceUvToXyz(face:u:v:)@<X0>(uint64_t result@<X0>, double *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  double v4 = 1.0;
  switch(result)
  {
    case 0:
      break;
    case 1:
      double v4 = -a3;
      a3 = 1.0;
      break;
    case 2:
      double v4 = -a3;
      a3 = -a4;
      a4 = 1.0;
      break;
    case 3:
      double v5 = -a4;
      a4 = -a3;
      double v4 = -1.0;
      a3 = v5;
      break;
    case 4:
      double v4 = a4;
      a4 = -a3;
      a3 = -1.0;
      break;
    default:
      double v4 = a4;
      a4 = -1.0;
      break;
  }
  *a2 = v4;
  a2[1] = a3;
  a2[2] = a4;
  return result;
}

uint64_t static S2Projections.validFaceXyzToUv(face:point:)@<X0>(uint64_t result@<X0>, double *a2@<X1>, double *a3@<X8>)
{
  double v4 = *a2;
  double v3 = a2[1];
  double v5 = a2[2];
  switch(result)
  {
    case 0:
      *a3 = v3 / v4;
      a3[1] = v5 / v4;
      return result;
    case 1:
      double v8 = -v4 / v3;
      goto LABEL_9;
    case 2:
      double v6 = -v4 / v5;
      double v7 = -v3;
      goto LABEL_6;
    case 3:
      *a3 = v5 / v4;
      a3[1] = v3 / v4;
      return result;
    case 4:
      double v8 = v5 / v3;
      double v5 = -v4;
LABEL_9:
      *a3 = v8;
      a3[1] = v5 / v3;
      return result;
    default:
      double v6 = -v3 / v5;
      double v7 = -v4;
LABEL_6:
      *a3 = v6;
      a3[1] = v7 / v5;
      return result;
  }
}

uint64_t static S2Projections.xyzToFace(point:)(double *a1)
{
  double v1 = a1[1];
  double v2 = a1[2];
  double v3 = fabs(*a1);
  double v4 = fabs(v1);
  double v5 = fabs(v2);
  if (v4 < v3)
  {
    if (v5 < v3)
    {
      if (*a1 >= 0.0) {
        return 0;
      }
      else {
        return 3;
      }
    }
    goto LABEL_8;
  }
  if (v5 >= v4)
  {
LABEL_8:
    if (v2 >= 0.0) {
      return 2;
    }
    else {
      return 5;
    }
  }
  if (v1 >= 0.0) {
    return 1;
  }
  else {
    return 4;
  }
}

uint64_t static S2Projections.faceXyzToUv(face:point:)@<X0>(uint64_t result@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  double v4 = a2[1];
  double v5 = a2[2];
  if (result > 2)
  {
    if (result == 3) {
      double v7 = *a2;
    }
    else {
      double v7 = a2[2];
    }
    if (result == 4) {
      double v7 = a2[1];
    }
    if (v7 < 0.0) {
      goto LABEL_8;
    }
  }
  else
  {
    if (result) {
      double v6 = a2[2];
    }
    else {
      double v6 = *a2;
    }
    if (result == 1) {
      double v6 = a2[1];
    }
    if (v6 > 0.0)
    {
LABEL_8:
      v8[0] = *a2;
      v8[1] = v4;
      v8[2] = v5;
      double result = static S2Projections.validFaceXyzToUv(face:point:)(result, v8, (double *)&v9);
      *(_OWORD *)a3 = v9;
      *(unsigned char *)(a3 + 16) = 0;
      return result;
    }
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t static S2Projections.getUNorm(face:u:)@<X0>(uint64_t result@<X0>, double *a2@<X8>, double a3@<D0>)
{
  double v3 = -1.0;
  double v4 = 0.0;
  double v5 = a3;
  switch(result)
  {
    case 0:
      break;
    case 1:
      double v5 = 1.0;
      double v3 = a3;
      break;
    case 2:
      double v3 = 0.0;
      double v5 = 1.0;
      double v4 = a3;
      break;
    case 3:
      double v5 = -a3;
      double v4 = 1.0;
      double v3 = 0.0;
      break;
    case 4:
      double v3 = -a3;
      double v4 = 1.0;
      goto LABEL_7;
    default:
      double v4 = -a3;
LABEL_7:
      double v5 = 0.0;
      break;
  }
  *a2 = v5;
  a2[1] = v3;
  a2[2] = v4;
  return result;
}

uint64_t static S2Projections.getVNorm(face:v:)@<X0>(uint64_t result@<X0>, double *a2@<X8>, double a3@<D0>)
{
  double v3 = 0.0;
  double v4 = -1.0;
  double v5 = a3;
  switch(result)
  {
    case 0:
      double v5 = -a3;
      double v3 = 1.0;
      double v4 = 0.0;
      break;
    case 1:
      double v4 = -a3;
      double v3 = 1.0;
      double v5 = 0.0;
      break;
    case 2:
      double v3 = -a3;
      double v5 = 0.0;
      break;
    case 3:
      break;
    case 4:
      double v5 = 1.0;
      double v4 = a3;
      break;
    default:
      double v4 = 0.0;
      double v5 = 1.0;
      double v3 = a3;
      break;
  }
  *a2 = v5;
  a2[1] = v4;
  a2[2] = v3;
  return result;
}

uint64_t static S2Projections.getNorm(face:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  switch(result)
  {
    case 0:
      a2[1] = 0;
      a2[2] = 0;
      *a2 = 0x3FF0000000000000;
      break;
    case 1:
      *(_OWORD *)a2 = xmmword_1DD04F310;
      a2[2] = 0;
      break;
    case 2:
      *(int64x2_t *)a2 = vdupq_n_s64(0x8000000000000000);
      a2[2] = 0x3FF0000000000000;
      break;
    case 3:
      long long v2 = xmmword_1DD04F300;
      goto LABEL_8;
    case 4:
      long long v2 = xmmword_1DD04F2F0;
LABEL_8:
      *(_OWORD *)a2 = v2;
      a2[2] = 0x8000000000000000;
      break;
    default:
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0xBFF0000000000000;
      break;
  }
  return result;
}

uint64_t static S2Projections.getUAxis(face:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  switch(result)
  {
    case 1:
    case 2:
      a2[1] = 0;
      a2[2] = 0;
      *a2 = 0xBFF0000000000000;
      break;
    case 3:
    case 4:
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0xBFF0000000000000;
      break;
    default:
      *(_OWORD *)a2 = xmmword_1DD04F320;
      a2[2] = 0;
      break;
  }
  return result;
}

uint64_t static S2Projections.getVAxis(face:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  switch(result)
  {
    case 0:
    case 1:
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0x3FF0000000000000;
      break;
    case 2:
    case 3:
      *(_OWORD *)a2 = xmmword_1DD04F2F0;
      a2[2] = 0;
      break;
    default:
      a2[1] = 0;
      a2[2] = 0;
      *a2 = 0x3FF0000000000000;
      break;
  }
  return result;
}

unint64_t sub_1DCD5A42C()
{
  unint64_t result = qword_1EAB025A0;
  if (!qword_1EAB025A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB025A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for S2Projections()
{
  return &type metadata for S2Projections;
}

unsigned char *storeEnumTagSinglePayload for S2Projections.Projection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD5A55CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for S2Projections.Projection()
{
  return &type metadata for S2Projections.Projection;
}

uint64_t sub_1DCD5A59C()
{
  return sub_1DD048498();
}

uint64_t sub_1DCD5A5DC()
{
  return sub_1DD048498();
}

uint64_t sub_1DCD5A624()
{
  return sub_1DD048498();
}

uint64_t sub_1DCD5A674()
{
  return sub_1DD048498();
}

uint64_t sub_1DCD5A6E8()
{
  return sub_1DD048498();
}

uint64_t sub_1DCD5A720(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1DD048498();
}

uint64_t sub_1DCD5A7D8()
{
  return sub_1DD048498();
}

uint64_t sub_1DCD5A810()
{
  sub_1DCD55D64(*v0, v0[1]);
  swift_bridgeObjectRetain();
  return sub_1DD048498();
}

uint64_t sub_1DCD5A860()
{
  uint64_t v1 = MEMORY[0x1F4188790](v0);
  sub_1DCD36E7C(v1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1DD048498();
}

void *sub_1DCD5A8DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  v1[3] = v3;
  v1[4] = 0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE854F0);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 24) = 0;
  *(unsigned char *)(v5 + 32) = -1;
  *(void *)(v5 + 40) = 0;
  *(void *)(v5 + 48) = 0;
  uint64_t v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  *(void *)(v5 + 80) = v6;
  *(void *)(v5 + 56) = sub_1DCD5C574;
  *(void *)(v5 + 64) = v4;
  swift_retain();
  swift_retain();
  sub_1DCD33E90(0);
  *(void *)(v5 + 72) = 8;
  swift_release();
  uint64_t v7 = sub_1DCF31D08();
  swift_release();
  v1[2] = v7;
  return v1;
}

uint64_t sub_1DCD5AA08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v6[0] = 0xD00000000000001DLL;
  v6[1] = 0x80000001DD068570;
  void v6[2] = "NSFW Model Loading";
  v6[3] = 18;
  char v7 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  sub_1DCEA469C((uint64_t)v6, a1);
  swift_release();
  id v4 = objc_msgSend(objc_allocWithZone((Class)VINSFWModelHandler), sel_initWithPreferredMetalDevice_, 0);
  sub_1DCEA3DA4();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_1DCD5AAE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = (os_unfair_lock_s *)(v2[3] + 16);
  os_unfair_lock_lock(v9);
  uint64_t v10 = v2[4];
  if (!a1)
  {
    if (v10) {
      goto LABEL_9;
    }
LABEL_7:
    os_unfair_lock_unlock(v9);
    return 0;
  }
  if (v10) {
    BOOL v11 = a1 == v10;
  }
  else {
    BOOL v11 = 0;
  }
  if (v11) {
    goto LABEL_7;
  }
LABEL_9:
  sub_1DCDB40EC((uint64_t)v8);
  uint64_t v13 = sub_1DD048048();
  os_log_type_t v14 = sub_1DD048848();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_1DCCF9000, v13, v14, "Updating NSFW Model due to MetalDevice switch", v15, 2u);
    MEMORY[0x1E01B07E0](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v2[4] = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v16 = v2[2];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = v4;
  double v18 = (os_unfair_lock_s *)(*(void *)(v16 + 80) + 16);
  swift_unknownObjectRetain();
  os_unfair_lock_lock(v18);
  uint64_t v19 = *(void *)(v16 + 40);
  *(void *)(v16 + 40) = sub_1DCD5C510;
  *(void *)(v16 + 48) = v17;
  sub_1DCD33E90(v19);
  uint64_t v12 = 1;
  swift_beginAccess();
  char v20 = *(void **)(v16 + 24);
  *(void *)(v16 + 24) = 0;
  unsigned __int8 v21 = *(unsigned char *)(v16 + 32);
  *(unsigned char *)(v16 + 32) = -1;
  swift_retain();
  sub_1DCD5C4B4(v20, v21);
  os_unfair_lock_unlock(v18);
  swift_release();
  os_unfair_lock_unlock(v9);
  return v12;
}

unint64_t sub_1DCD5AD58(uint64_t *a1, void *a2, uint64_t a3, uint64_t *a4, unint64_t a5, uint64_t a6)
{
  unint64_t v154 = a6;
  unint64_t v160 = a5;
  uint64_t v135 = a2;
  uint64_t v146 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v151 = (char *)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v153 = *(void (***)(uint64_t, void, uint64_t, uint64_t))(v156 - 8);
  MEMORY[0x1F4188790](v156);
  uint64_t v157 = (uint64_t)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  long long v162 = (char *)&v132 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v150 = (uint64_t)&v132 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v158 = (uint64_t)&v132 - v16;
  uint64_t v17 = sub_1DD048068();
  uint64_t v139 = *(void *)(v17 - 8);
  unint64_t v140 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v136 = (uint64_t)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  id v152 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v132 - v20);
  MEMORY[0x1F4188790](v21);
  uint64_t v137 = (uint64_t)&v132 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C38);
  MEMORY[0x1F4188790](v23 - 8);
  unsigned __int8 v25 = (char *)&v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v159 = (uint64_t)&v132 - v27;
  uint64_t v155 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig(0);
  uint64_t v28 = *(void *)(v155 - 8);
  MEMORY[0x1F4188790](v155);
  int v30 = (char *)&v132 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v132 - v32;
  uint64_t v34 = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0);
  MEMORY[0x1F4188790](v34);
  int v36 = (char *)&v132 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = *a4;
  uint64_t v38 = a4[1];
  uint64_t v161 = a4[2];
  uint64_t v39 = a4[3];
  uint64_t v141 = v38;
  uint64_t v142 = v39;
  uint64_t v40 = a4[5];
  uint64_t v143 = a4[4];
  uint64_t v144 = v40;
  uint64_t v148 = a4[6];
  uint64_t v149 = v37;
  uint64_t v145 = a4[7];
  unint64_t v147 = a3;
  uint64_t v41 = a3;
  uint64_t v42 = v160;
  LOBYTE(a4) = sub_1DCDC1904(v41);
  sub_1DCD5C330(v42, (uint64_t)v36, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  if ((a4 & 1) == 0)
  {
    sub_1DCD5C398((uint64_t)v36, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
LABEL_12:
    uint64_t v69 = v145;
    uint64_t v68 = v146;
    uint64_t v70 = v148;
    uint64_t v71 = v149;
    uint64_t v73 = v141;
    uint64_t v72 = v142;
    uint64_t *v146 = v149;
    v68[1] = v73;
    v68[2] = v161;
    v68[3] = v72;
    uint64_t v74 = v144;
    v68[4] = v143;
    v68[5] = v74;
    v68[6] = v70;
    v68[7] = v69;
    unint64_t v65 = v147;
    swift_bridgeObjectRetain();
    sub_1DCD434B4(v71);
    return v65;
  }
  uint64_t v133 = v30;
  uint64_t v134 = v25;
  uint64_t v43 = *(void *)&v36[*(int *)(v34 + 20)]
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__safetyConfig;
  swift_beginAccess();
  uint64_t v44 = v159;
  sub_1DCD5C2C8(v43, v159);
  int v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  uint64_t v46 = v28 + 48;
  uint64_t v45 = v47;
  uint64_t v48 = v44;
  uint64_t v49 = v155;
  int v50 = v47(v48, 1, v155);
  uint64_t v51 = MEMORY[0x1E4FBC860];
  uint64_t v52 = v46;
  if (v50 == 1)
  {
    *(_WORD *)uint64_t v33 = 0;
    *((void *)v33 + 1) = sub_1DCDB86BC(v51);
    *((void *)v33 + 2) = sub_1DCDB8914(v51);
    *((void *)v33 + 3) = v51;
    *((void *)v33 + 4) = v51;
    *((void *)v33 + 5) = v51;
    sub_1DD047BE8();
    uint64_t v53 = &v33[*(int *)(v49 + 48)];
    uint64_t v54 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.CornerGlyphConfig(0);
    unint64_t v55 = v53;
    uint64_t v52 = v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v55, 1, 1, v54);
    sub_1DCD2479C(v159, &qword_1EBE84C38);
  }
  else
  {
    sub_1DCD5C3F8(v159, (uint64_t)v33, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  }
  uint64_t v56 = (uint64_t)v162;
  sub_1DCD5C398((uint64_t)v36, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  char v57 = v33[1];
  sub_1DCD5C398((uint64_t)v33, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  if ((v57 & 1) == 0) {
    goto LABEL_12;
  }
  if (v149 == 1 || !v161)
  {
    sub_1DCD5BB94(v154);
    CGRect v76 = v75;
    sub_1DCDB40EC(v136);
    CGRect v77 = sub_1DD048048();
    os_log_type_t v78 = sub_1DD048848();
    BOOL v79 = os_log_type_enabled(v77, v78);
    uint64_t v66 = v158;
    if (v79)
    {
      long long v80 = (uint8_t *)swift_slowAlloc();
      uint64_t v138 = (void *)v34;
      uint64_t v81 = v80;
      *(_WORD *)long long v80 = 0;
      _os_log_impl(&dword_1DCCF9000, v77, v78, "NSFWCheckerProcessor: run nsfw model", v80, 2u);
      uint64_t v34 = (uint64_t)v138;
      MEMORY[0x1E01B07E0](v81, -1, -1);
    }

    (*(void (**)(uint64_t, unint64_t))(v139 + 8))(v136, v140);
    uint64_t v67 = v154;
    sub_1DCDC1BF4(v135, v76, v154);
    uint64_t v161 = v82;

    unint64_t v65 = v147;
  }
  else
  {
    uint64_t v159 = v52;
    swift_bridgeObjectRetain();
    uint64_t v58 = v137;
    sub_1DCDB40EC(v137);
    sub_1DCDB4300((uint64_t)v152);
    unint64_t v59 = v140;
    uint64_t v60 = *(void (**)(uint64_t, unint64_t))(v139 + 8);
    v60(v58, v140);
    uint64_t v61 = sub_1DD048048();
    os_log_type_t v62 = sub_1DD048848();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v138 = (void *)v34;
      uint64_t v64 = v63;
      *(_WORD *)uint64_t v63 = 0;
      _os_log_impl(&dword_1DCCF9000, v61, v62, "NSFWCheckerProcessor: using nsfw passed through by framework adopter", v63, 2u);
      uint64_t v34 = (uint64_t)v138;
      MEMORY[0x1E01B07E0](v64, -1, -1);
    }

    v60((uint64_t)v152, v59);
    unint64_t v65 = v147;
    uint64_t v66 = v158;
    uint64_t v67 = v154;
  }
  v169[0] = 0xD00000000000001DLL;
  v169[1] = 0x80000001DD068570;
  v169[2] = "NSFW Model Postprocess Results";
  v169[3] = 30;
  char v170 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  uint64_t v83 = sub_1DCEA469C((uint64_t)v169, v67);
  swift_release();
  uint64_t v84 = *(void *)(v160 + *(int *)(v34 + 20))
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__safetyConfig;
  swift_beginAccess();
  uint64_t v85 = (uint64_t)v134;
  sub_1DCD5C2C8(v84, (uint64_t)v134);
  uint64_t v86 = v155;
  int v87 = v45(v85, 1, v155);
  uint64_t v139 = v83;
  if (v87 == 1)
  {
    long long v88 = v133;
    *uint64_t v133 = 0;
    uint64_t v89 = MEMORY[0x1E4FBC860];
    v88[1] = sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
    v88[2] = sub_1DCDB8914(v89);
    v88[3] = v89;
    v88[4] = v89;
    v88[5] = v89;
    sub_1DD047BE8();
    int v90 = (char *)v88 + *(int *)(v86 + 48);
    uint64_t v91 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.CornerGlyphConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v90, 1, 1, v91);
    uint64_t v92 = v85;
    unint64_t v93 = v88;
    sub_1DCD2479C(v92, &qword_1EBE84C38);
  }
  else
  {
    uint64_t v94 = v85;
    unint64_t v93 = v133;
    sub_1DCD5C3F8(v94, (uint64_t)v133, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  }
  uint64_t v95 = (uint64_t)v151;
  uint64_t v96 = v153;
  uint64_t v97 = sub_1DCDC2134(v161, (uint64_t)v93);
  swift_bridgeObjectRelease();
  sub_1DCD5C398((uint64_t)v93, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  uint64_t v138 = v97;
  if (v97[2])
  {
    uint64_t v155 = *(void *)(v65 + 16);
    if (v155)
    {
      unint64_t v140 = (*((unsigned __int8 *)v96 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v96 + 80);
      unint64_t v154 = v65 + v140;
      uint64_t v159 = (uint64_t)v96[9];
      id v152 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 6);
      uint64_t v153 = v96 + 7;
      swift_bridgeObjectRetain();
      uint64_t v98 = 0;
      unint64_t v160 = MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v161 = v98;
        sub_1DCD5C330(v154 + v159 * v98, v66, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCD5C330(v66, v56, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v99 = *(void *)(v66 + 48);
        uint64_t v100 = *(void *)(v99 + 16);
        if (v100)
        {
          swift_bridgeObjectRetain();
          uint64_t v101 = v100 - 1;
          uint64_t v102 = 32;
          uint64_t v103 = (void *)MEMORY[0x1E4FBC860];
          while (1)
          {
            long long v104 = *(_OWORD *)(v99 + v102 + 112);
            v165[6] = *(_OWORD *)(v99 + v102 + 96);
            v165[7] = v104;
            v166[0] = *(_OWORD *)(v99 + v102 + 128);
            *(_OWORD *)((char *)v166 + 13) = *(_OWORD *)(v99 + v102 + 141);
            long long v105 = *(_OWORD *)(v99 + v102 + 48);
            v165[2] = *(_OWORD *)(v99 + v102 + 32);
            v165[3] = v105;
            long long v106 = *(_OWORD *)(v99 + v102 + 80);
            v165[4] = *(_OWORD *)(v99 + v102 + 64);
            v165[5] = v106;
            long long v107 = *(_OWORD *)(v99 + v102 + 16);
            v165[0] = *(_OWORD *)(v99 + v102);
            v165[1] = v107;
            sub_1DCD5BD58(v165, (long long *)v56, (uint64_t)v163);
            sub_1DCD32C3C((uint64_t)v163, (uint64_t)v167);
            sub_1DCD32C3C((uint64_t)v167, (uint64_t)v168);
            if (sub_1DCD32CA4((uint64_t)v168) != 1)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v103 = sub_1DCE9D680(0, v103[2] + 1, 1, v103);
              }
              unint64_t v109 = v103[2];
              unint64_t v108 = v103[3];
              if (v109 >= v108 >> 1) {
                uint64_t v103 = sub_1DCE9D680((void *)(v108 > 1), v109 + 1, 1, v103);
              }
              sub_1DCD32C3C((uint64_t)v167, (uint64_t)v163);
              v103[2] = v109 + 1;
              os_log_type_t v110 = &v103[20 * v109];
              long long v111 = v163[1];
              v110[2] = v163[0];
              v110[3] = v111;
              long long v112 = v163[5];
              long long v114 = v163[2];
              long long v113 = v163[3];
              v110[6] = v163[4];
              v110[7] = v112;
              v110[4] = v114;
              v110[5] = v113;
              long long v115 = v163[7];
              long long v116 = v164[0];
              long long v117 = v163[6];
              *(_OWORD *)((char *)v110 + 173) = *(_OWORD *)((char *)v164 + 13);
              v110[9] = v115;
              v110[10] = v116;
              v110[8] = v117;
              uint64_t v56 = (uint64_t)v162;
            }
            if (!v101) {
              break;
            }
            --v101;
            v102 += 160;
          }
          swift_bridgeObjectRelease();
          uint64_t v95 = (uint64_t)v151;
        }
        else
        {
          uint64_t v103 = (void *)MEMORY[0x1E4FBC860];
        }
        swift_beginAccess();
        *(void *)(v56 + 48) = v103;
        *(_DWORD *)(v56 + 72) = 0;
        swift_bridgeObjectRelease();
        sub_1DCD5C330(v56, v95, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v118 = v156;
        (*v153)(v95, 0, 1, v156);
        sub_1DCD5C398(v56, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v66 = v158;
        sub_1DCD5C398(v158, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        if ((*v152)(v95, 1, v118) == 1)
        {
          sub_1DCD2479C(v95, &qword_1EBE855F0);
        }
        else
        {
          uint64_t v119 = v150;
          sub_1DCD5C3F8(v95, v150, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD5C3F8(v119, v157, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v160 = sub_1DCE9D7A0(0, *(void *)(v160 + 16) + 1, 1, v160);
          }
          unint64_t v121 = *(void *)(v160 + 16);
          unint64_t v120 = *(void *)(v160 + 24);
          uint64_t v122 = v157;
          if (v121 >= v120 >> 1)
          {
            unint64_t v160 = sub_1DCE9D7A0(v120 > 1, v121 + 1, 1, v160);
            uint64_t v122 = v157;
          }
          unint64_t v123 = v160;
          *(void *)(v160 + 16) = v121 + 1;
          sub_1DCD5C3F8(v122, v123 + v140 + v121 * v159, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        }
        uint64_t v98 = v161 + 1;
      }
      while (v161 + 1 != v155);
      swift_bridgeObjectRelease();
      unint64_t v65 = v160;
    }
    else
    {
      unint64_t v65 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v125 = v145;
  uint64_t v124 = v146;
  uint64_t v127 = v143;
  uint64_t v126 = v144;
  uint64_t v129 = v141;
  uint64_t v128 = v142;
  uint64_t v130 = v149;
  if (v149 == 1)
  {
    uint64_t v125 = 0;
    uint64_t v126 = 0;
    uint64_t v148 = 0;
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    uint64_t v129 = 0;
    uint64_t v130 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_1DCEA3DA4();
  swift_release();
  *uint64_t v124 = v130;
  v124[1] = v129;
  v124[2] = (uint64_t)v138;
  v124[3] = v128;
  v124[4] = v127;
  v124[5] = v126;
  v124[6] = v148;
  v124[7] = v125;
  return v65;
}

void sub_1DCD5BB94(uint64_t a1)
{
  void (*v7)(void **__return_ptr, uint64_t);
  void *v8;
  unsigned __int8 v9;
  id v10;
  void *v11;
  id v12;
  unsigned char *v13;
  void *v14;
  void *v15;
  unsigned __int8 v16;
  void *v17;

  uint64_t v3 = v1;
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v3 + 80) + 16);
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v3 + 32);
  if (v6 != 255)
  {
    uint64_t v11 = *(void **)(v3 + 24);
    if ((v6 & 1) == 0)
    {
      v11;
      os_unfair_lock_unlock(v5);
      return;
    }
    uint64_t v17 = *(void **)(v3 + 24);
    uint64_t v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
    swift_willThrowTypedImpl();
    goto LABEL_9;
  }
  uint64_t v7 = *(void (**)(void **__return_ptr, uint64_t))(v3 + 56);
  if (!v7)
  {
    sub_1DCD5C460();
    swift_allocError();
    *uint64_t v13 = 1;
    swift_willThrow();
    goto LABEL_9;
  }
  swift_retain();
  v7(&v17, a1);
  if (v2)
  {
    uint64_t v8 = *(void **)(v3 + 24);
    *(void *)(v3 + 24) = v2;
    uint64_t v9 = *(unsigned char *)(v3 + 32);
    *(unsigned char *)(v3 + 32) = 1;
    uint64_t v10 = v2;
    sub_1DCD5C4B4(v8, v9);
    swift_willThrow();
    sub_1DCD33E90((uint64_t)v7);
LABEL_9:
    os_unfair_lock_unlock(v5);
    return;
  }
  sub_1DCD33E90((uint64_t)v7);
  uint64_t v14 = v17;
  uint64_t v15 = *(void **)(v3 + 24);
  *(void *)(v3 + 24) = v17;
  uint64_t v16 = *(unsigned char *)(v3 + 32);
  *(unsigned char *)(v3 + 32) = 0;
  v14;
  sub_1DCD5C4B4(v15, v16);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1DCD5BD58@<X0>(_OWORD *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v32 = a2;
  uint64_t v4 = sub_1DD048068();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v45 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = a1[7];
  long long v74 = a1[6];
  long long v75 = v6;
  v76[0] = a1[8];
  *(_OWORD *)((char *)v76 + 13) = *(_OWORD *)((char *)a1 + 141);
  long long v7 = a1[3];
  long long v70 = a1[2];
  long long v71 = v7;
  long long v8 = a1[5];
  long long v72 = a1[4];
  long long v73 = v8;
  long long v9 = a1[1];
  v69[0] = *a1;
  v69[1] = v9;
  int v49 = LOBYTE(v69[0]);
  uint64_t v10 = *((void *)&v69[0] + 1);
  uint64_t v38 = *((void *)&v9 + 1);
  uint64_t v11 = v9;
  uint64_t v12 = v70;
  int v37 = BYTE8(v70);
  uint64_t v13 = *((void *)&v71 + 1);
  uint64_t v35 = v72;
  uint64_t v36 = v71;
  long long v14 = v73;
  long long v15 = v74;
  uint64_t v16 = *(void *)((char *)&v75 + 4);
  int v43 = HIBYTE(v75);
  int v44 = BYTE14(v75);
  int v41 = BYTE1(v76[0]);
  int v42 = LOBYTE(v76[0]);
  uint64_t v40 = *((void *)&v76[0] + 1);
  uint64_t v17 = *(void *)&v76[1];
  int v18 = DWORD2(v76[1]);
  int v39 = BYTE12(v76[1]);
  LOBYTE(v60) = v69[0];
  *((void *)&v60 + 1) = *((void *)&v69[0] + 1);
  long long v61 = v9;
  *(void *)&long long v62 = v70;
  BYTE8(v62) = BYTE8(v70);
  long long v63 = v71;
  long long v64 = v72;
  uint64_t v33 = *((void *)&v72 + 1);
  long long v65 = v73;
  long long v66 = v74;
  *(void *)((char *)&v67 + 4) = *(void *)((char *)&v75 + 4);
  HIWORD(v67) = HIWORD(v75);
  LOWORD(v68[0]) = v76[0];
  *((void *)&v68[0] + 1) = *((void *)&v76[0] + 1);
  *(void *)&v68[1] = *(void *)&v76[1];
  DWORD2(v68[1]) = DWORD2(v76[1]);
  BYTE12(v68[1]) = BYTE12(v76[1]);
  WORD6(v67) = 0;
  LODWORD(v67) = 0;
  sub_1DCD32CC8((uint64_t)v69);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v34 = v13;
  swift_bridgeObjectRetain();
  sub_1DCD32D4C(v14, *((uint64_t *)&v14 + 1));
  swift_bridgeObjectRetain();
  uint64_t v19 = v45;
  sub_1DCDB40EC(v45);
  v77[0] = v49;
  uint64_t v78 = v10;
  uint64_t v79 = v11;
  uint64_t v80 = v38;
  uint64_t v81 = v12;
  char v82 = v37;
  uint64_t v83 = v36;
  uint64_t v84 = v13;
  uint64_t v85 = v35;
  uint64_t v86 = v33;
  long long v87 = v14;
  long long v88 = v15;
  int v89 = 0;
  uint64_t v90 = v16;
  __int16 v91 = 0;
  char v92 = v44;
  char v93 = v43;
  char v94 = v42;
  char v95 = v41;
  uint64_t v96 = v40;
  uint64_t v97 = v17;
  int v98 = v18;
  char v99 = v39;
  sub_1DCD32CC8((uint64_t)v77);
  swift_bridgeObjectRelease();
  sub_1DCD32D90(v14, *((uint64_t *)&v14 + 1));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCD32CC8((uint64_t)v77);
  uint64_t v20 = sub_1DD048048();
  os_log_type_t v21 = sub_1DD048848();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v50[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v24 = sub_1DCD9C35C(v49);
    *(void *)&long long v51 = sub_1DCED7FA0(v24, v25, v50);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD32DD4((uint64_t)v77);
    sub_1DCD32DD4((uint64_t)v77);
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v26 = v32;
    swift_beginAccess();
    long long v27 = v26[1];
    long long v51 = *v26;
    long long v52 = v27;
    uint64_t v28 = NormalizedRect.loggingDescription.getter();
    *(void *)&long long v51 = sub_1DCED7FA0(v28, v29, v50);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v20, v21, "Unselected %s from region %s because of sensitive content.", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v23, -1, -1);
    MEMORY[0x1E01B07E0](v22, -1, -1);
  }
  else
  {
    sub_1DCD32DD4((uint64_t)v77);
    sub_1DCD32DD4((uint64_t)v77);
  }

  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v19, v47);
  swift_beginAccess();
  long long v57 = v66;
  long long v58 = v67;
  v59[0] = v68[0];
  *(_OWORD *)((char *)v59 + 13) = *(_OWORD *)((char *)v68 + 13);
  long long v53 = v62;
  long long v54 = v63;
  long long v55 = v64;
  long long v56 = v65;
  long long v51 = v60;
  long long v52 = v61;
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v51);
  return sub_1DCD32C3C((uint64_t)&v51, v48);
}

uint64_t sub_1DCD5C25C()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NSFWCheckerProcessor()
{
  return self;
}

uint64_t sub_1DCD5C2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD5C330(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD5C398(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD5C3F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DCD5C460()
{
  unint64_t result = qword_1EAB025A8;
  if (!qword_1EAB025A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB025A8);
  }
  return result;
}

void sub_1DCD5C4B4(id a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_1DCD5C4CC(a1);
  }
}

void sub_1DCD5C4CC(id a1)
{
}

uint64_t sub_1DCD5C4D8()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1DCD5C510@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone((Class)VINSFWModelHandler), sel_initWithPreferredMetalDevice_, *(void *)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_1DCD5C564()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCD5C574@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1DCD5AA08(a1, a2);
}

uint64_t sub_1DCD5C590(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    uint64_t v8 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
    uint64_t v9 = v7 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    *(unsigned char *)(v7 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v14 = v7 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    *(void *)uint64_t v14 = *(void *)v15;
    *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
    *(void *)(v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1DCD5C6C8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
  uint64_t v3 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCD5C75C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCD5C848(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  char v13 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = v13;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCD5C940(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1DCD5CA0C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0) + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCD5CAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD5CB04);
}

uint64_t sub_1DCD5CB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DCD5CBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD5CBD8);
}

uint64_t sub_1DCD5CBD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ObjectDetectionDomainAssignmentRule()
{
  uint64_t result = qword_1EBE84C40;
  if (!qword_1EBE84C40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCD5CCE0()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCD5CD8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v85 = a4;
  uint64_t v82 = a3;
  uint64_t v86 = a1;
  uint64_t v87 = a2;
  uint64_t v83 = type metadata accessor for ObjectDetectionDomainAssignmentRule();
  MEMORY[0x1F4188790](v83);
  uint64_t v5 = &v73[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (long long *)&v73[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (long long *)&v73[-v10];
  uint64_t v12 = sub_1DD048068();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = &v73[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = &v73[-v18];
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = &v73[-v21];
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = &v73[-v23];
  sub_1DCD32C3C(v86, (uint64_t)v117);
  if (*(unsigned char *)(v87 + 104) == 1)
  {
LABEL_9:
    sub_1DCD32C3C((uint64_t)v117, v85);
    return sub_1DCD5D8A8((uint64_t)v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  }
  uint64_t v78 = v9;
  uint64_t v79 = v16;
  long long v75 = v11;
  CGRect v76 = v5;
  CGRect v77 = v24;
  uint64_t v80 = v22;
  uint64_t v81 = v12;
  uint64_t v86 = v13;
  uint64_t v25 = v84;
  swift_bridgeObjectRetain();
  uint64_t v26 = *(void *)v25;
  uint64_t v27 = v83;
  *(void *)&v101[0] = *(void *)(v25 + *(int *)(v83 + 28));
  sub_1DCD5D8A8((uint64_t)v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  swift_bridgeObjectRetain();
  sub_1DCDD51EC(v26, (uint64_t *)v101, (uint64_t)&v108);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v111;
  if (!(void)v111)
  {
    sub_1DCD5D8A8((uint64_t)v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
    sub_1DCDB40EC((uint64_t)v19);
    uint64_t v42 = (uint64_t)v79;
    sub_1DCDB4300((uint64_t)v79);
    int v43 = *(void (**)(unsigned char *, uint64_t))(v86 + 8);
    uint64_t v44 = v81;
    v43(v19, v81);
    uint64_t v45 = sub_1DD048048();
    os_log_type_t v46 = sub_1DD048848();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v47 = 0;
      _os_log_impl(&dword_1DCCF9000, v45, v46, "No satisfied detector label", v47, 2u);
      MEMORY[0x1E01B07E0](v47, -1, -1);
    }

    v43((unsigned char *)v42, v44);
    goto LABEL_9;
  }
  uint64_t v29 = *((void *)&v110 + 1);
  if (*(unsigned char *)(v25 + 8) != 1)
  {
    int v74 = DWORD2(v112);
    long long v75 = (long long *)v112;
    CGRect v77 = (unsigned char *)*((void *)&v110 + 1);
    uint64_t v79 = (unsigned char *)*((void *)&v111 + 1);
    uint64_t v82 = v111;
    uint64_t v49 = (uint64_t)v80;
    sub_1DCDB40EC((uint64_t)v80);
    uint64_t v50 = (uint64_t)v76;
    sub_1DCD5D9B4(v25, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for ObjectDetectionDomainAssignmentRule);
    long long v51 = v78;
    sub_1DCD5D9B4(v87, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    long long v52 = sub_1DD048048();
    os_log_type_t v53 = sub_1DD048848();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      *(void *)&v101[0] = v87;
      *(_DWORD *)uint64_t v54 = 136315394;
      uint64_t v55 = v27;
      uint64_t v56 = sub_1DCD9C35C(*(unsigned char *)(v50 + *(int *)(v27 + 20)));
      *(void *)&long long v108 = sub_1DCED7FA0(v56, v57, (uint64_t *)v101);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD5DA1C(v50, (uint64_t (*)(void))type metadata accessor for ObjectDetectionDomainAssignmentRule);
      *(_WORD *)(v54 + 12) = 2080;
      long long v58 = v51[1];
      long long v108 = *v51;
      long long v109 = v58;
      uint64_t v59 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v108 = sub_1DCED7FA0(v59, v60, (uint64_t *)v101);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD5DA1C((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1DCCF9000, v52, v53, "Assign %s to region %s", (uint8_t *)v54, 0x16u);
      uint64_t v61 = v87;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v61, -1, -1);
      MEMORY[0x1E01B07E0](v54, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v80, v81);
    }
    else
    {
      sub_1DCD5DA1C(v50, (uint64_t (*)(void))type metadata accessor for ObjectDetectionDomainAssignmentRule);
      sub_1DCD5DA1C((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v49, v81);
      uint64_t v55 = v27;
    }
    char v63 = *(unsigned char *)(v25 + *(int *)(v55 + 20));
    LOBYTE(v101[0]) = v63;
    *(_OWORD *)((char *)v101 + 8) = 0u;
    *(_OWORD *)((char *)&v101[1] + 8) = 0u;
    BYTE8(v101[2]) = 0;
    long long v102 = 0u;
    long long v103 = 0u;
    *(void *)&long long v104 = v77;
    *((void *)&v104 + 1) = v82;
    *(void *)&long long v105 = v79;
    *((void *)&v105 + 1) = v75;
    LODWORD(v106) = 0;
    DWORD1(v106) = v74;
    *((void *)&v106 + 1) = 0;
    LOWORD(v107[0]) = 0;
    *(void *)&v107[1] = 0;
    *((void *)&v107[0] + 1) = 0;
    *(void *)((char *)&v107[1] + 5) = 0;
    sub_1DCD32C3C((uint64_t)v117, (uint64_t)&v108);
    int v64 = sub_1DCD32CA4((uint64_t)&v108);
    uint64_t v65 = v85;
    if (v64 != 1)
    {
      uint64_t v66 = sub_1DCD9C35C(v108);
      uint64_t v68 = v67;
      if (v66 == sub_1DCD9C35C(v63) && v68 == v69)
      {
        swift_bridgeObjectRelease_n();
LABEL_20:
        v99[6] = v114;
        v99[7] = v115;
        v100[0] = v116[0];
        *(_OWORD *)((char *)v100 + 13) = *(_OWORD *)((char *)v116 + 13);
        v99[2] = v110;
        v99[3] = v111;
        v99[4] = v112;
        v99[5] = v113;
        v99[0] = v108;
        v99[1] = v109;
        long long v96 = v105;
        long long v97 = v106;
        v98[0] = v107[0];
        *(_OWORD *)((char *)v98 + 13) = *(_OWORD *)((char *)v107 + 13);
        long long v92 = v101[2];
        long long v93 = v102;
        long long v94 = v103;
        long long v95 = v104;
        long long v90 = v101[0];
        long long v91 = v101[1];
        sub_1DCF22BB0((uint64_t)v99, &v90, (uint64_t)v88);
        sub_1DCD5D8A8((uint64_t)v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
        sub_1DCD32DD4((uint64_t)v101);
        long long v96 = v88[6];
        long long v97 = v88[7];
        v98[0] = v89[0];
        *(_OWORD *)((char *)v98 + 13) = *(_OWORD *)((char *)v89 + 13);
        long long v92 = v88[2];
        long long v93 = v88[3];
        long long v94 = v88[4];
        long long v95 = v88[5];
        long long v71 = v88[0];
        long long v72 = v88[1];
LABEL_23:
        long long v90 = v71;
        long long v91 = v72;
        faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v90);
        sub_1DCD32C3C((uint64_t)&v90, (uint64_t)v99);
        return sub_1DCD32C3C((uint64_t)v99, v65);
      }
      char v70 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v70) {
        goto LABEL_20;
      }
      sub_1DCD5D8A8((uint64_t)v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
    }
    long long v96 = v105;
    long long v97 = v106;
    v98[0] = v107[0];
    *(_OWORD *)((char *)v98 + 13) = *(_OWORD *)((char *)v107 + 13);
    long long v92 = v101[2];
    long long v93 = v102;
    long long v94 = v103;
    long long v95 = v104;
    long long v71 = v101[0];
    long long v72 = v101[1];
    goto LABEL_23;
  }
  uint64_t v30 = *((void *)&v108 + 1);
  uint64_t v84 = v108;
  long long v31 = v109;
  uint64_t v32 = v110;
  sub_1DCD5D8A8((uint64_t)v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
  sub_1DCD32F20(v84, v30, v31, *((uint64_t *)&v31 + 1), v32, v29, v28);
  uint64_t v33 = (uint64_t)v77;
  sub_1DCDB40EC((uint64_t)v77);
  uint64_t v34 = v75;
  sub_1DCD5D9B4(v87, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  uint64_t v35 = sub_1DD048048();
  os_log_type_t v36 = sub_1DD048848();
  if (os_log_type_enabled(v35, v36))
  {
    int v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)int v37 = 136315138;
    *(void *)&v101[0] = v38;
    long long v39 = v34[1];
    long long v108 = *v34;
    long long v109 = v39;
    uint64_t v40 = NormalizedRect.loggingDescription.getter();
    *(void *)&long long v108 = sub_1DCED7FA0(v40, v41, (uint64_t *)v101);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD5DA1C((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    _os_log_impl(&dword_1DCCF9000, v35, v36, "Reject any domain to region %s", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v38, -1, -1);
    MEMORY[0x1E01B07E0](v37, -1, -1);
  }
  else
  {
    sub_1DCD5DA1C((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  }

  (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v33, v81);
  uint64_t v62 = v85;
  sub_1DCD5DA7C((uint64_t)&v108);
  return sub_1DCD32C3C((uint64_t)&v108, v62);
}

uint64_t sub_1DCD5D7F4()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1DCD5D7FC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_1DCD5D814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a5 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCD32D4C(a11, a12);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DCD5D8A8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))
{
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(unsigned int *)(a1 + 152) | ((unint64_t)*(unsigned __int8 *)(a1 + 156) << 32));
  return a1;
}

uint64_t sub_1DCD5D920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (a5 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCD32D90(a11, a12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCD5D9B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD5DA1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_1DCD5DA7C(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 1;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(void *)(a1 + 149) = 0;
  return result;
}

uint64_t sub_1DCD5DAB0(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025D8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1DD046D08();
  uint64_t v6 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  unint64_t v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v40 = (char *)&v38 - v9;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02600);
  MEMORY[0x1F4188790](v46);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v43 = a1 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v44 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v38 = v6;
  long long v39 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v48 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  unint64_t v42 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v18)
    {
      unint64_t v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v22 = v21 | (v20 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v20++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v44) {
      goto LABEL_32;
    }
    unint64_t v24 = *(void *)(v43 + 8 * v20);
    if (!v24) {
      break;
    }
LABEL_18:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v20 << 6);
LABEL_19:
    uint64_t v26 = v48;
    uint64_t v27 = *(void *)(v48 + 48);
    uint64_t v28 = sub_1DD046EB8();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v14, v27 + *(void *)(*(void *)(v28 - 8) + 72) * v22, v28);
    *(void *)&v14[*(int *)(v46 + 48)] = *(void *)(*(void *)(v26 + 56) + 8 * v22);
    sub_1DCD43B04((uint64_t)v14, (uint64_t)v11, &qword_1EAB02600);
    swift_bridgeObjectRetain();
    sub_1DCD61788((uint64_t)v11, v5);
    if (v1)
    {
      sub_1DCD2479C((uint64_t)v11, &qword_1EAB02600);
      unint64_t v37 = v42;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release();
      return v37;
    }
    sub_1DCD2479C((uint64_t)v11, &qword_1EAB02600);
    if ((*v45)(v5, 1, v47) == 1)
    {
      uint64_t result = sub_1DCD2479C((uint64_t)v5, &qword_1EAB025D8);
    }
    else
    {
      uint64_t v29 = *v39;
      uint64_t v30 = v47;
      (*v39)(v40, v5, v47);
      uint64_t v31 = v30;
      uint64_t v32 = v29;
      v29(v41, v40, v31);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v42 = sub_1DCE9EAA4(0, *(void *)(v42 + 16) + 1, 1, v42);
      }
      unint64_t v34 = *(void *)(v42 + 16);
      unint64_t v33 = *(void *)(v42 + 24);
      if (v34 >= v33 >> 1) {
        unint64_t v42 = sub_1DCE9EAA4(v33 > 1, v34 + 1, 1, v42);
      }
      uint64_t v35 = v41;
      unint64_t v36 = v42;
      *(void *)(v42 + 16) = v34 + 1;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v32)(v36+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v34, v35, v47);
    }
  }
  int64_t v25 = v20 + 1;
  if (v20 + 1 >= v44) {
    goto LABEL_32;
  }
  unint64_t v24 = *(void *)(v43 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v25 = v20 + 2;
  if (v20 + 2 >= v44) {
    goto LABEL_32;
  }
  unint64_t v24 = *(void *)(v43 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v25 = v20 + 3;
  if (v20 + 3 >= v44) {
    goto LABEL_32;
  }
  unint64_t v24 = *(void *)(v43 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v25 = v20 + 4;
  if (v20 + 4 >= v44)
  {
LABEL_32:
    unint64_t v37 = v42;
    goto LABEL_33;
  }
  unint64_t v24 = *(void *)(v43 + 8 * v25);
  if (v24)
  {
LABEL_17:
    int64_t v20 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v20 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v20 >= v44) {
      goto LABEL_32;
    }
    unint64_t v24 = *(void *)(v43 + 8 * v20);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

unint64_t sub_1DCD5DF8C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1DCD63618(*a1);
  *a2 = result;
  return result;
}

void sub_1DCD5DFB8(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1DCD5DFC4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1DCD6788C();
  unint64_t v5 = sub_1DCD678E0();
  return MEMORY[0x1F4185E20](a1, a2, v4, v5);
}

uint64_t sub_1DCD5E01C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v50 = a4;
  uint64_t v49 = a3;
  uint64_t v48 = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v47 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v46 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v46 - v13;
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  unint64_t v21 = (char *)&v46 - v20;
  MEMORY[0x1F4188790](v22);
  unint64_t v24 = (char *)&v46 - v23;
  uint64_t v25 = a2 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0) + 32);
  sub_1DCD2889C(v25, (uint64_t)v14, &qword_1EAB025B0);
  long long v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v26 = v51(v14, 1, v15);
  uint64_t v27 = MEMORY[0x1E4FBC860];
  if (v26 == 1)
  {
    *(void *)unint64_t v24 = sub_1DCDB8A38(MEMORY[0x1E4FBC860]);
    *((void *)v24 + 1) = v27;
    *((_DWORD *)v24 + 4) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v14, &qword_1EAB025B0);
  }
  else
  {
    sub_1DCD6760C((uint64_t)v14, (uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  }
  uint64_t v46 = *((int *)v24 + 4);
  sub_1DCD67564((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  sub_1DCD2889C(v25, (uint64_t)v11, &qword_1EAB025B0);
  if (v51(v11, 1, v15) == 1)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    *(void *)unint64_t v21 = sub_1DCDB8A38(MEMORY[0x1E4FBC860]);
    *((void *)v21 + 1) = v28;
    *((_DWORD *)v21 + 4) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v11, &qword_1EAB025B0);
  }
  else
  {
    sub_1DCD6760C((uint64_t)v11, (uint64_t)v21, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  }
  long long v29 = a1[9];
  long long v60 = a1[8];
  long long v61 = v29;
  long long v62 = a1[10];
  uint64_t v63 = *((void *)a1 + 22);
  long long v30 = a1[5];
  long long v56 = a1[4];
  long long v57 = v30;
  long long v31 = a1[7];
  long long v58 = a1[6];
  long long v59 = v31;
  long long v32 = a1[1];
  long long v52 = *a1;
  long long v53 = v32;
  long long v33 = a1[3];
  long long v54 = a1[2];
  long long v55 = v33;
  uint64_t v34 = sub_1DCF22DA4();
  MEMORY[0x1F4188790](v34);
  *(&v46 - 2) = (uint64_t)v21;
  uint64_t v35 = sub_1DCFB351C((void (*)(void *__return_ptr, void))sub_1DCD67934, (uint64_t)(&v46 - 4), v34);
  swift_bridgeObjectRelease();
  unint64_t v36 = sub_1DCF9A540((uint64_t)v35);
  swift_bridgeObjectRelease();
  sub_1DCD67564((uint64_t)v21, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  long long v37 = a1[9];
  long long v60 = a1[8];
  long long v61 = v37;
  long long v62 = a1[10];
  uint64_t v63 = *((void *)a1 + 22);
  long long v38 = a1[5];
  long long v56 = a1[4];
  long long v57 = v38;
  long long v39 = a1[7];
  long long v58 = a1[6];
  long long v59 = v39;
  long long v40 = a1[1];
  long long v52 = *a1;
  long long v53 = v40;
  long long v41 = a1[3];
  long long v54 = a1[2];
  long long v55 = v41;
  uint64_t v42 = v47;
  sub_1DCD2889C(v25, v47, &qword_1EAB025B0);
  if (v51((char *)v42, 1, v15) == 1)
  {
    uint64_t v43 = MEMORY[0x1E4FBC860];
    *(void *)unint64_t v18 = sub_1DCDB8A38(MEMORY[0x1E4FBC860]);
    *((void *)v18 + 1) = v43;
    *((_DWORD *)v18 + 4) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C(v42, &qword_1EAB025B0);
  }
  else
  {
    sub_1DCD6760C(v42, (uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  }
  if ((v36 & 0x100000000) != 0) {
    uint64_t v44 = 0;
  }
  else {
    uint64_t v44 = (int)v36;
  }
  sub_1DCD5E554((uint64_t)&v52, (uint64_t)v18, v49, v46, 0, v44, (v36 & 0x100000000) >> 32, v50);
  return sub_1DCD67564((uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
}

uint64_t sub_1DCD5E554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, void *a8)
{
  int v43 = a7;
  uint64_t v42 = a6;
  int v41 = a5;
  uint64_t v39 = a2;
  uint64_t v40 = a4;
  uint64_t v11 = sub_1DD0472D8();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = sub_1DD0466D8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = *(_OWORD *)(a1 + 144);
  v55[8] = *(_OWORD *)(a1 + 128);
  v55[9] = v16;
  v55[10] = *(_OWORD *)(a1 + 160);
  uint64_t v56 = *(void *)(a1 + 176);
  long long v17 = *(_OWORD *)(a1 + 80);
  v55[4] = *(_OWORD *)(a1 + 64);
  v55[5] = v17;
  long long v18 = *(_OWORD *)(a1 + 112);
  double v55[6] = *(_OWORD *)(a1 + 96);
  v55[7] = v18;
  long long v19 = *(_OWORD *)(a1 + 16);
  v55[0] = *(_OWORD *)a1;
  v55[1] = v19;
  long long v20 = *(_OWORD *)(a1 + 48);
  void v55[2] = *(_OWORD *)(a1 + 32);
  v55[3] = v20;
  sub_1DD047478();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  sub_1DD047418();
  uint64_t v44 = a8;
  uint64_t v45 = v39;
  uint64_t v46 = v55;
  uint64_t v47 = v40;
  char v48 = v41 & 1;
  uint64_t v49 = v42;
  char v50 = v43 & 1;
  uint64_t v51 = 0;
  sub_1DCD675C4(&qword_1EAB025C0, MEMORY[0x1E4F894C8]);
  sub_1DD047E78();
  sub_1DD047448();
  if (a8)
  {
    id v21 = a8;
    objc_msgSend(v21, sel_uiScale);
    uint64_t v22 = (void (*)(unint64_t *, void))sub_1DD0473F8();
    sub_1DD046698();
    v22(&v53, 0);
    id v23 = objc_msgSend(v21, sel_teamID);
    if (v23)
    {
      unint64_t v24 = v23;
      sub_1DD048408();

      sub_1DD047458();
    }
    id v25 = objc_msgSend(v21, sel_catalogIDs);
    if (v25)
    {
      int v26 = v25;
      sub_1DD0486B8();

      sub_1DD047468();
    }
  }
  if (sub_1DCDE82EC())
  {
    if (qword_1EAB01C28 != -1) {
      swift_once();
    }
    uint64_t v27 = (uint64_t *)&off_1EAB02A48;
  }
  else
  {
    if (qword_1EBE871A0 != -1) {
      swift_once();
    }
    uint64_t v27 = &qword_1EBE871E8;
  }
  uint64_t v28 = *(void **)(*v27 + 32);
  swift_retain();
  long long v29 = (void *)sub_1DD0483D8();
  id v30 = objc_msgSend(v28, sel_stringForKey_, v29);

  if (!v30) {
    return swift_release();
  }
  sub_1DD048408();
  swift_release();

  unint64_t v53 = 0xD000000000000030;
  unint64_t v54 = 0x80000001DD0685F0;
  sub_1DD048548();
  swift_bridgeObjectRelease();
  uint64_t v31 = v53;
  uint64_t v32 = v54;
  long long v33 = (uint64_t (*)(unint64_t *, void))sub_1DD0473E8();
  uint64_t v35 = v34;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v52 = *v35;
  *uint64_t v35 = 0x8000000000000000;
  sub_1DCE85618(v31, v32, 0xD000000000000011, 0x80000001DD0685D0, isUniquelyReferenced_nonNull_native);
  *uint64_t v35 = v52;
  swift_bridgeObjectRelease();
  return v33(&v53, 0);
}

uint64_t sub_1DCD5EA2C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v53 = a4;
  uint64_t v52 = a3;
  uint64_t v51 = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v50 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v49 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  uint64_t v54 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v47 = (unint64_t *)((char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v47 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B8);
  MEMORY[0x1F4188790](v16 - 8);
  long long v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (int *)((char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  sub_1DCD2889C(a2 + *(int *)(v23 + 36), (uint64_t)v18, &qword_1EAB025B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    *uint64_t v22 = 0;
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v18, &qword_1EAB025B8);
  }
  else
  {
    sub_1DCD6760C((uint64_t)v18, (uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
  }
  uint64_t v48 = *v22;
  sub_1DCD67564((uint64_t)v22, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
  uint64_t v24 = a2 + *(int *)(v23 + 32);
  sub_1DCD2889C(v24, (uint64_t)v11, &qword_1EAB025B0);
  id v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  uint64_t v26 = v49;
  v54 += 48;
  int v27 = v25(v11, 1, v49);
  uint64_t v28 = MEMORY[0x1E4FBC860];
  if (v27 == 1)
  {
    *(void *)uint64_t v15 = sub_1DCDB8A38(MEMORY[0x1E4FBC860]);
    *((void *)v15 + 1) = v28;
    *((_DWORD *)v15 + 4) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v11, &qword_1EAB025B0);
  }
  else
  {
    sub_1DCD6760C((uint64_t)v11, (uint64_t)v15, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  }
  long long v29 = a1[9];
  long long v63 = a1[8];
  long long v64 = v29;
  long long v65 = a1[10];
  uint64_t v66 = *((void *)a1 + 22);
  long long v30 = a1[5];
  long long v59 = a1[4];
  long long v60 = v30;
  long long v31 = a1[7];
  long long v61 = a1[6];
  long long v62 = v31;
  long long v32 = a1[1];
  long long v55 = *a1;
  long long v56 = v32;
  long long v33 = a1[3];
  long long v57 = a1[2];
  long long v58 = v33;
  uint64_t v34 = sub_1DCF22DA4();
  MEMORY[0x1F4188790](v34);
  *(&v47 - 2) = (unint64_t *)v15;
  uint64_t v35 = sub_1DCFB351C((void (*)(void *__return_ptr, void))sub_1DCD6335C, (uint64_t)(&v47 - 4), v34);
  swift_bridgeObjectRelease();
  unint64_t v36 = sub_1DCF9A540((uint64_t)v35);
  swift_bridgeObjectRelease();
  sub_1DCD67564((uint64_t)v15, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  long long v37 = a1[9];
  long long v63 = a1[8];
  long long v64 = v37;
  long long v65 = a1[10];
  uint64_t v66 = *((void *)a1 + 22);
  long long v38 = a1[5];
  long long v59 = a1[4];
  long long v60 = v38;
  long long v39 = a1[7];
  long long v61 = a1[6];
  long long v62 = v39;
  long long v40 = a1[1];
  long long v55 = *a1;
  long long v56 = v40;
  long long v41 = a1[3];
  long long v57 = a1[2];
  long long v58 = v41;
  uint64_t v42 = v50;
  sub_1DCD2889C(v24, v50, &qword_1EAB025B0);
  if (v25((char *)v42, 1, v26) == 1)
  {
    unint64_t v43 = sub_1DCDB8A38(v28);
    uint64_t v44 = v47;
    *uint64_t v47 = v43;
    v44[1] = v28;
    *((_DWORD *)v44 + 4) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C(v42, &qword_1EAB025B0);
  }
  else
  {
    uint64_t v44 = v47;
    sub_1DCD6760C(v42, (uint64_t)v47, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  }
  if ((v36 & 0x100000000) != 0) {
    uint64_t v45 = 0;
  }
  else {
    uint64_t v45 = (int)v36;
  }
  sub_1DCD5E554((uint64_t)&v55, (uint64_t)v44, v52, v48, 0, v45, (v36 & 0x100000000) >> 32, v53);
  return sub_1DCD67564((uint64_t)v44, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
}

uint64_t sub_1DCD5F000(uint64_t a1, void *a2, uint64_t *a3, long long *a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9)
{
  int v80 = a8;
  uint64_t v84 = a7;
  int v81 = a6;
  uint64_t v83 = a5;
  long long v94 = a3;
  uint64_t v82 = a2;
  uint64_t v88 = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025C8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1DD046D68();
  MEMORY[0x1F4188790](v86);
  uint64_t v85 = (char *)v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DD047038();
  MEMORY[0x1F4188790](v14 - 8);
  v79[2] = (char *)v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = a4[9];
  *(_OWORD *)long long v104 = a4[8];
  *(_OWORD *)&v104[16] = v16;
  long long v105 = a4[10];
  uint64_t v106 = *((void *)a4 + 22);
  long long v17 = a4[5];
  long long v100 = a4[4];
  long long v101 = v17;
  long long v18 = a4[7];
  long long v102 = a4[6];
  long long v103 = v18;
  long long v19 = a4[1];
  long long v96 = *a4;
  long long v97 = v19;
  long long v20 = a4[2];
  long long v21 = a4[3];
  uint64_t v87 = a4;
  long long v98 = v20;
  long long v99 = v21;
  uint64_t v22 = sub_1DCF22DA4();
  uint64_t v89 = *(void *)(v22 + 16);
  if (!v89)
  {
LABEL_79:
    swift_bridgeObjectRelease();
    char v71 = 0;
    goto LABEL_80;
  }
  uint64_t v23 = 0;
  uint64_t v24 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v79[1] = v22;
  uint64_t v91 = v22 + v25 + 48;
  uint64_t v90 = *(void *)(v24 + 72);
  uint64_t v26 = v94;
LABEL_5:
  uint64_t v92 = v23;
  uint64_t v27 = *(void *)(v91 + v90 * v23);
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = v28 - 1;
    uint64_t v30 = 32;
    uint64_t v31 = MEMORY[0x1E4FBC860];
    while (1)
    {
      long long v32 = *(_OWORD *)(v27 + v30);
      long long v97 = *(_OWORD *)(v27 + v30 + 16);
      long long v96 = v32;
      long long v33 = *(_OWORD *)(v27 + v30 + 32);
      long long v34 = *(_OWORD *)(v27 + v30 + 48);
      long long v35 = *(_OWORD *)(v27 + v30 + 80);
      long long v100 = *(_OWORD *)(v27 + v30 + 64);
      long long v101 = v35;
      long long v98 = v33;
      long long v99 = v34;
      long long v36 = *(_OWORD *)(v27 + v30 + 96);
      long long v37 = *(_OWORD *)(v27 + v30 + 112);
      long long v38 = *(_OWORD *)(v27 + v30 + 128);
      *(_OWORD *)&v104[13] = *(_OWORD *)(v27 + v30 + 141);
      *(_OWORD *)long long v104 = v38;
      long long v102 = v36;
      long long v103 = v37;
      if (HIBYTE(v37) == 1)
      {
        sub_1DCD32CC8((uint64_t)&v96);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v95 = v31;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1DCFC4A08(0, *(void *)(v31 + 16) + 1, 1);
          uint64_t v31 = v95;
        }
        unint64_t v41 = *(void *)(v31 + 16);
        unint64_t v40 = *(void *)(v31 + 24);
        if (v41 >= v40 >> 1)
        {
          sub_1DCFC4A08(v40 > 1, v41 + 1, 1);
          uint64_t v31 = v95;
        }
        *(void *)(v31 + 16) = v41 + 1;
        uint64_t v42 = (_OWORD *)(v31 + 160 * v41);
        long long v43 = v97;
        _OWORD v42[2] = v96;
        v42[3] = v43;
        long long v44 = v98;
        long long v45 = v99;
        long long v46 = v101;
        v42[6] = v100;
        v42[7] = v46;
        v42[4] = v44;
        v42[5] = v45;
        long long v47 = v102;
        long long v48 = v103;
        long long v49 = *(_OWORD *)v104;
        *(_OWORD *)((char *)v42 + 173) = *(_OWORD *)&v104[13];
        v42[9] = v48;
        v42[10] = v49;
        v42[8] = v47;
      }
      if (!v29) {
        break;
      }
      --v29;
      v30 += 160;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
  *(void *)&long long v96 = v31;
  swift_retain();
  uint64_t v50 = v93;
  sub_1DCF23B0C((uint64_t *)&v96);
  uint64_t v93 = v50;
  if (v50)
  {
    swift_release();
    __break(1u);
    JUMPOUT(0x1DCD5FAD4);
  }
  swift_release();
  uint64_t v51 = v96;
  uint64_t v52 = *(void *)(v96 + 16);
  if (!v52) {
    goto LABEL_4;
  }
  swift_retain();
  uint64_t v53 = 32;
  while (2)
  {
    uint64_t v54 = *v26;
    uint64_t v55 = 0xE300000000000000;
    unint64_t v56 = 7631457;
    switch(*(unsigned char *)(v51 + v53))
    {
      case 1:
        uint64_t v55 = 0xE600000000000000;
        unint64_t v56 = 0x65727574616ELL;
        if (*(void *)(v54 + 16)) {
          goto LABEL_71;
        }
        goto LABEL_73;
      case 2:
        uint64_t v55 = 0xE800000000000000;
        unint64_t v56 = 0x6B72616D646E616CLL;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 3:
        uint64_t v55 = 0xEF6B72616D646E61;
        unint64_t v56 = 0x4C6C61727574616ELL;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 4:
        uint64_t v55 = 0xE500000000000000;
        unint64_t v56 = 0x616964656DLL;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 5:
        uint64_t v55 = 0xE400000000000000;
        unint64_t v56 = 1802465122;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 6:
        uint64_t v55 = 0xE500000000000000;
        unint64_t v56 = 0x6D75626C61;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 7:
        uint64_t v55 = 0xE400000000000000;
        unint64_t v56 = 1937006947;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 8:
        uint64_t v55 = 0xE400000000000000;
        unint64_t v56 = 1936158564;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 9:
        uint64_t v55 = 0xE700000000000000;
        uint64_t v58 = 1835626081;
        goto LABEL_52;
      case 0xA:
        uint64_t v55 = 0xE500000000000000;
        unint64_t v56 = 0x7364726962;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 0xB:
        uint64_t v55 = 0xE700000000000000;
        unint64_t v57 = 0x746365736E69;
        goto LABEL_53;
      case 0xC:
        uint64_t v55 = 0xE800000000000000;
        unint64_t v56 = 0x73656C6974706572;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 0xD:
        uint64_t v55 = 0xE700000000000000;
        uint64_t v58 = 1835884909;
LABEL_52:
        unint64_t v57 = v58 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_53:
        unint64_t v56 = v57 & 0xFFFFFFFFFFFFLL | 0x73000000000000;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 0xE:
        uint64_t v55 = 0xE700000000000000;
        unint64_t v56 = 0x6C657261707061;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 0xF:
        uint64_t v55 = 0xEB00000000736569;
        unint64_t v56 = 0x726F737365636361;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 0x10:
        uint64_t v55 = 0xE400000000000000;
        unint64_t v56 = 1685024614;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 0x11:
        uint64_t v55 = 0xEA0000000000746ELL;
        unint64_t v56 = 0x6F726665726F7473;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 0x12:
        unsigned int v60 = 1852270963;
        goto LABEL_64;
      case 0x13:
        uint64_t v55 = 0x80000001DD066AB0;
        unint64_t v56 = 0xD000000000000011;
        goto LABEL_70;
      case 0x14:
        unsigned int v60 = 1869903201;
LABEL_64:
        unint64_t v56 = v60 | 0x626D795300000000;
        uint64_t v55 = 0xEA00000000006C6FLL;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 0x15:
        uint64_t v55 = 0xEF6C6F626D79536FLL;
        unint64_t v56 = 0x676F4C646E617262;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 0x16:
        uint64_t v55 = 0xE700000000000000;
        uint64_t v59 = 0x646F63726162;
        goto LABEL_67;
      case 0x17:
        uint64_t v55 = 0xE900000000000065;
        unint64_t v56 = 0x727574706C756373;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 0x18:
        uint64_t v55 = 0xE700000000000000;
        uint64_t v59 = 0x6E696C796B73;
LABEL_67:
        unint64_t v56 = v59 & 0xFFFFFFFFFFFFLL | 0x65000000000000;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      case 0x19:
        uint64_t v55 = 0xE800000000000000;
        unint64_t v56 = 0x44327463656A626FLL;
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
        goto LABEL_71;
      default:
LABEL_70:
        if (!*(void *)(v54 + 16)) {
          goto LABEL_73;
        }
LABEL_71:
        unint64_t v61 = sub_1DCEAD1A4(v56, v55);
        if (v62)
        {
          unint64_t v63 = v61;
          uint64_t v107 = v55;
          uint64_t v64 = (uint64_t)v12;
          uint64_t v65 = v51;
          uint64_t v66 = *(void *)(v54 + 56);
          uint64_t v67 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
          uint64_t v68 = *(void *)(v67 - 8);
          uint64_t v69 = v66 + *(void *)(v68 + 72) * v63;
          uint64_t v51 = v65;
          uint64_t v12 = (char *)v64;
          sub_1DCD67674(v69, v64, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v64, 0, 1, v67);
          uint64_t v26 = v94;
        }
        else
        {
LABEL_73:
          uint64_t v67 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v12, 1, 1, v67);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 48))(v12, 1, v67) == 1)
        {
          sub_1DCD2479C((uint64_t)v12, &qword_1EAB025C8);
          goto LABEL_21;
        }
        char v70 = v12[4];
        sub_1DCD67564((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
        if ((v70 & 1) == 0)
        {
LABEL_21:
          v53 += 160;
          if (--v52) {
            continue;
          }
          swift_release();
LABEL_4:
          uint64_t v23 = v92 + 1;
          swift_release();
          if (v23 == v89) {
            goto LABEL_79;
          }
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
        swift_release_n();
        char v71 = 1;
LABEL_80:
        int v72 = v80 & 1;
        char v73 = v81 & 1;
        uint64_t v74 = type metadata accessor for ServerSearchProcessor();
        sub_1DCDBF060(v82, v71, v83, v73, v84, v72);
        uint64_t v75 = sub_1DD0472C8();
        MEMORY[0x1F4188790](v75);
        CGRect v76 = v87;
        v79[-4] = v74;
        v79[-3] = v76;
        v79[-2] = v77;
        v79[-1] = a9;
        sub_1DCD675C4(&qword_1EAB025D0, MEMORY[0x1E4F89028]);
        sub_1DD047E78();
        return sub_1DD047298();
    }
  }
}

uint64_t sub_1DCD5FB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_1DD0471B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void *)(v7 + 16);
  if (!v9)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    int64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v13) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = 64;
  do
  {
    uint64_t v11 = swift_bridgeObjectRetain();
    sub_1DCFDE7E0(v11);
    v10 += 48;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  uint64_t v12 = v27;
  int64_t v13 = *(void *)(v27 + 16);
  if (!v13) {
    goto LABEL_13;
  }
LABEL_5:
  uint64_t v27 = v8;
  sub_1DCFC5820(0, v13, 0);
  v24[3] = v4 + 32;
  uint64_t v14 = sub_1DCD675C4(&qword_1EAB02628, MEMORY[0x1E4F89378]);
  v24[1] = v12;
  void v24[2] = v14;
  uint64_t v15 = (uint64_t *)(v12 + 48);
  do
  {
    uint64_t v16 = *(v15 - 2);
    uint64_t v17 = *v15;
    MEMORY[0x1F4188790](v14);
    v24[-6] = v16;
    v24[-5] = v18;
    uint64_t v19 = v26;
    v24[-4] = v17;
    v24[-3] = v19;
    v24[-2] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DD047E78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DCFC5820(0, *(void *)(v20 + 16) + 1, 1);
      uint64_t v20 = v27;
    }
    unint64_t v22 = *(void *)(v20 + 16);
    unint64_t v21 = *(void *)(v20 + 24);
    if (v22 >= v21 >> 1)
    {
      sub_1DCFC5820(v21 > 1, v22 + 1, 1);
      uint64_t v20 = v27;
    }
    v15 += 3;
    *(void *)(v20 + 16) = v22 + 1;
    uint64_t v14 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v22, v6, v3);
    uint64_t v27 = v20;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1DCD5FE18(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1DD046AE8();
}

void *sub_1DCD5FE84(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  char v62 = a2;
  uint64_t v61 = a4;
  uint64_t v59 = sub_1DD047268();
  uint64_t v64 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[14];
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v65 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v10 = *(void *)(v8 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v11 = 72;
    do
    {
      uint64_t v12 = swift_bridgeObjectRetain();
      sub_1DCFDE93C(v12);
      v11 += 48;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease_n();
    uint64_t v9 = v65;
  }
  uint64_t v13 = a1[11];
  if (v13)
  {
    uint64_t v14 = a1[10];
    uint64_t v15 = a1[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1DCE9E6B8(0, v9[2] + 1, 1, v9);
    }
    unint64_t v17 = v9[2];
    unint64_t v16 = v9[3];
    if (v17 >= v16 >> 1) {
      uint64_t v9 = sub_1DCE9E6B8((void *)(v16 > 1), v17 + 1, 1, v9);
    }
    v9[2] = v17 + 1;
    uint64_t v18 = &v9[3 * v17];
    v18[4] = v14;
    v18[5] = v13;
    v18[6] = v15;
  }
  unint64_t v19 = sub_1DCD60400();
  if (v20)
  {
    unint64_t v22 = v19;
    uint64_t v23 = v20;
    uint64_t v24 = v21;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1DCE9E6B8(0, v9[2] + 1, 1, v9);
    }
    unint64_t v26 = v9[2];
    unint64_t v25 = v9[3];
    if (v26 >= v25 >> 1) {
      uint64_t v9 = sub_1DCE9E6B8((void *)(v25 > 1), v26 + 1, 1, v9);
    }
    v9[2] = v26 + 1;
    uint64_t v27 = &v9[3 * v26];
    v27[4] = v22;
    v27[5] = v23;
    v27[6] = v24;
  }
  uint64_t v28 = a1[7];
  int64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    uint64_t v60 = a3;
    uint64_t v30 = v9;
    unint64_t v57 = 0;
    uint64_t v58 = v7;
    uint64_t v65 = (void *)MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DCFC49A8(0, v29, 0);
    uint64_t v31 = v65;
    long long v32 = (_DWORD *)(v28 + 104);
    do
    {
      uint64_t v33 = *((void *)v32 - 2);
      uint64_t v34 = *((void *)v32 - 1);
      int v35 = *v32;
      uint64_t v65 = v31;
      unint64_t v37 = v31[2];
      unint64_t v36 = v31[3];
      swift_bridgeObjectRetain();
      if (v37 >= v36 >> 1)
      {
        sub_1DCFC49A8(v36 > 1, v37 + 1, 1);
        uint64_t v31 = v65;
      }
      v31[2] = v37 + 1;
      long long v38 = &v31[3 * v37];
      v38[4] = v33;
      v38[5] = v34;
      *((_DWORD *)v38 + 12) = v35;
      v32 += 20;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
    uint64_t v39 = v61;
    swift_bridgeObjectRetain();
    uint64_t v9 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1DCE9E6B8(0, v30[2] + 1, 1, v30);
    }
    uint64_t v40 = v60;
    unint64_t v42 = v9[2];
    unint64_t v41 = v9[3];
    int64_t v43 = v42 + 1;
    if (v42 >= v41 >> 1) {
      uint64_t v9 = sub_1DCE9E6B8((void *)(v41 > 1), v42 + 1, 1, v9);
    }
    v9[2] = v43;
    long long v44 = &v9[3 * v42];
    v44[4] = v40;
    void v44[5] = v39;
    v44[6] = v31;
  }
  else
  {
    int64_t v43 = v9[2];
    if (!v43)
    {
      swift_bridgeObjectRelease();
      return (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v58 = v7;
  }
  uint64_t v65 = (void *)MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1DCFC5840(0, v43, 0);
  uint64_t v61 = v64 + 32;
  uint64_t v45 = sub_1DCD675C4(&qword_1EAB02618, MEMORY[0x1E4F894B8]);
  uint64_t v60 = v45;
  unint64_t v57 = v9;
  long long v46 = v9 + 6;
  long long v48 = v58;
  uint64_t v47 = v59;
  do
  {
    long long v49 = (void *)*(v46 - 1);
    uint64_t v50 = (void *)*v46;
    MEMORY[0x1F4188790](v45);
    *(&v57 - 6) = v51;
    *(&v57 - 5) = v49;
    uint64_t v52 = v63;
    *(&v57 - 4) = v50;
    *(&v57 - 3) = v52;
    *(&v57 - 2) = v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DD047E78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v53 = v65;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DCFC5840(0, v53[2] + 1, 1);
      uint64_t v53 = v65;
    }
    unint64_t v55 = v53[2];
    unint64_t v54 = v53[3];
    if (v55 >= v54 >> 1)
    {
      sub_1DCFC5840(v54 > 1, v55 + 1, 1);
      uint64_t v53 = v65;
    }
    void v53[2] = v55 + 1;
    uint64_t v45 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v64 + 32))((unint64_t)v53+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * v55, v48, v47);
    uint64_t v65 = v53;
    v46 += 3;
    --v43;
  }
  while (v43);
  swift_bridgeObjectRelease_n();
  return v53;
}

unint64_t sub_1DCD60400()
{
  uint64_t v0 = sub_1DCF2316C();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = (unsigned __int8 *)(v0 + 32);
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      int v4 = *v2;
      v2 += 160;
      unint64_t v5 = 0xE300000000000000;
      uint64_t v6 = 7631457;
      switch(v4)
      {
        case 1:
          unint64_t v5 = 0xE600000000000000;
          uint64_t v6 = 0x65727574616ELL;
          break;
        case 2:
          unint64_t v5 = 0xE800000000000000;
          uint64_t v6 = 0x6B72616D646E616CLL;
          break;
        case 3:
          unint64_t v5 = 0xEF6B72616D646E61;
          uint64_t v6 = 0x4C6C61727574616ELL;
          break;
        case 4:
          unint64_t v5 = 0xE500000000000000;
          uint64_t v6 = 0x616964656DLL;
          break;
        case 5:
          unint64_t v5 = 0xE400000000000000;
          uint64_t v6 = 1802465122;
          break;
        case 6:
          unint64_t v5 = 0xE500000000000000;
          uint64_t v6 = 0x6D75626C61;
          break;
        case 7:
          unint64_t v5 = 0xE400000000000000;
          uint64_t v6 = 1937006947;
          break;
        case 8:
          unint64_t v5 = 0xE400000000000000;
          uint64_t v6 = 1936158564;
          break;
        case 9:
          unint64_t v5 = 0xE700000000000000;
          unsigned int v7 = 1835626081;
          goto LABEL_17;
        case 10:
          unint64_t v5 = 0xE500000000000000;
          uint64_t v6 = 0x7364726962;
          break;
        case 11:
          unint64_t v5 = 0xE700000000000000;
          uint64_t v6 = 0x73746365736E69;
          break;
        case 12:
          unint64_t v5 = 0xE800000000000000;
          uint64_t v6 = 0x73656C6974706572;
          break;
        case 13:
          unint64_t v5 = 0xE700000000000000;
          unsigned int v7 = 1835884909;
LABEL_17:
          uint64_t v6 = v7 | 0x736C6100000000;
          break;
        case 14:
          unint64_t v5 = 0xE700000000000000;
          uint64_t v6 = 0x6C657261707061;
          break;
        case 15:
          unint64_t v5 = 0xEB00000000736569;
          uint64_t v6 = 0x726F737365636361;
          break;
        case 16:
          unint64_t v5 = 0xE400000000000000;
          uint64_t v6 = 1685024614;
          break;
        case 17:
          unint64_t v5 = 0xEA0000000000746ELL;
          uint64_t v6 = 0x6F726665726F7473;
          break;
        case 18:
          unsigned int v8 = 1852270963;
          goto LABEL_25;
        case 19:
          unint64_t v5 = 0x80000001DD066AB0;
          uint64_t v6 = 0xD000000000000011;
          break;
        case 20:
          unsigned int v8 = 1869903201;
LABEL_25:
          uint64_t v6 = v8 | 0x626D795300000000;
          unint64_t v5 = 0xEA00000000006C6FLL;
          break;
        case 21:
          unint64_t v5 = 0xEF6C6F626D79536FLL;
          uint64_t v6 = 0x676F4C646E617262;
          break;
        case 22:
          unint64_t v5 = 0xE700000000000000;
          uint64_t v6 = 0x65646F63726162;
          break;
        case 23:
          unint64_t v5 = 0xE900000000000065;
          uint64_t v6 = 0x727574706C756373;
          break;
        case 24:
          unint64_t v5 = 0xE700000000000000;
          uint64_t v6 = 0x656E696C796B73;
          break;
        case 25:
          unint64_t v5 = 0xE800000000000000;
          uint64_t v6 = 0x44327463656A626FLL;
          break;
        default:
          break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1DCE9E814(0, v3[2] + 1, 1, v3);
      }
      unint64_t v10 = v3[2];
      unint64_t v9 = v3[3];
      if (v10 >= v9 >> 1) {
        uint64_t v3 = sub_1DCE9E814((void *)(v9 > 1), v10 + 1, 1, v3);
      }
      v3[2] = v10 + 1;
      uint64_t v11 = &v3[3 * v10];
      v11[4] = v6;
      v11[5] = v5;
      *((_DWORD *)v11 + 12) = 1065353216;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  if (v3[2]) {
    return 0xD000000000000018;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1DCD60804(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v32 = a2;
  uint64_t v11 = sub_1DD047238();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v16 = *(void *)(a4 + 16);
  if (v16)
  {
    unint64_t v29 = a3;
    uint64_t v30 = a6;
    uint64_t v35 = v6;
    uint64_t v31 = a1;
    uint64_t v36 = MEMORY[0x1E4FBC860];
    uint64_t v17 = v13;
    swift_bridgeObjectRetain();
    sub_1DCFC5860(0, v16, 0);
    uint64_t v34 = v12 + 32;
    uint64_t v18 = sub_1DCD675C4(&qword_1EAB02620, MEMORY[0x1E4F894A8]);
    uint64_t v33 = v18;
    uint64_t v28 = v17;
    uint64_t v19 = v17 + 48;
    do
    {
      uint64_t v20 = *(void *)(v19 - 8);
      double v21 = MEMORY[0x1F4188790](v18);
      *(&v28 - 4) = v22;
      *(&v28 - 3) = v20;
      *((_DWORD *)&v28 - 4) = LODWORD(v21);
      swift_bridgeObjectRetain();
      uint64_t v23 = v35;
      sub_1DD047E78();
      uint64_t v35 = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCFC5860(0, *(void *)(v24 + 16) + 1, 1);
        uint64_t v24 = v36;
      }
      unint64_t v26 = *(void *)(v24 + 16);
      unint64_t v25 = *(void *)(v24 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1DCFC5860(v25 > 1, v26 + 1, 1);
        uint64_t v24 = v36;
      }
      v19 += 24;
      *(void *)(v24 + 16) = v26 + 1;
      uint64_t v18 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v12 + 32))(v24+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v26, v15, v11);
      uint64_t v36 = v24;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    a6 = v30;
    a3 = v29;
  }
  sub_1DD047198();
  sub_1DCD63628(v32, a3, a6);
  return sub_1DD046AE8();
}

uint64_t sub_1DCD60ABC(uint64_t a1, double *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = sub_1DD046EB8();
  MEMORY[0x1F4188790](v10 - 8);
  CGFloat v11 = *a2;
  CGFloat v12 = a2[1];
  CGFloat v13 = a2[2];
  CGFloat v14 = a2[3];
  sub_1DD046EA8();
  v20.origin.CGFloat x = VIFlipOriginNormalizedRect(v11, v12, v13, v14);
  CGFloat x = v20.origin.x;
  CGFloat y = v20.origin.y;
  CGFloat width = v20.size.width;
  CGFloat height = v20.size.height;
  CGRectGetMinX(v20);
  sub_1DD046E38();
  v21.origin.CGFloat x = x;
  v21.origin.CGFloat y = y;
  v21.size.CGFloat width = width;
  v21.size.CGFloat height = height;
  CGRectGetMinY(v21);
  sub_1DD046E58();
  v22.origin.CGFloat x = x;
  v22.origin.CGFloat y = y;
  v22.size.CGFloat width = width;
  v22.size.CGFloat height = height;
  CGRectGetWidth(v22);
  sub_1DD046E78();
  v23.origin.CGFloat x = x;
  v23.origin.CGFloat y = y;
  v23.size.CGFloat width = width;
  v23.size.CGFloat height = height;
  CGRectGetHeight(v23);
  sub_1DD046E98();
  sub_1DD046C78();
  sub_1DCD5FB3C((uint64_t)a2, (uint64_t)a4);
  sub_1DD046B28();
  sub_1DCD5FE84(a2, a4, a5, a6);
  return sub_1DD046CD8();
}

uint64_t sub_1DCD60C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047208();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD43B04(a2 + 8, (uint64_t)v21, &qword_1EBE855D8);
  sub_1DCD43B04((uint64_t)v21, (uint64_t)v24, &qword_1EBE855D8);
  if (v24[0] != 1)
  {
    uint64_t v8 = v25;
    if (v25)
    {
      int64_t v9 = *(void *)(v25 + 16);
      if (v9)
      {
        v19[1] = a1;
        uint64_t v26 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_1DCFC5880(0, v9, 0);
        void v19[2] = v5 + 32;
        uint64_t v11 = 32;
        uint64_t v20 = v8;
        do
        {
          long long v12 = *(_OWORD *)(v8 + v11);
          long long v13 = *(_OWORD *)(v8 + v11 + 16);
          long long v14 = *(_OWORD *)(v8 + v11 + 32);
          uint64_t v23 = *(void *)(v8 + v11 + 48);
          v22[1] = v13;
          v22[2] = v14;
          v22[0] = v12;
          MEMORY[0x1F4188790](v10);
          v19[-2] = v22;
          sub_1DCD64B20((uint64_t)v22);
          sub_1DCD675C4(&qword_1EAB025F8, MEMORY[0x1E4F89388]);
          sub_1DD047E78();
          sub_1DCD64B4C((uint64_t)v22);
          uint64_t v15 = v26;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1DCFC5880(0, *(void *)(v15 + 16) + 1, 1);
            uint64_t v15 = v26;
          }
          unint64_t v17 = *(void *)(v15 + 16);
          unint64_t v16 = *(void *)(v15 + 24);
          if (v17 >= v16 >> 1)
          {
            sub_1DCFC5880(v16 > 1, v17 + 1, 1);
            uint64_t v15 = v26;
          }
          *(void *)(v15 + 16) = v17 + 1;
          uint64_t v10 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v17, v7, v4);
          uint64_t v26 = v15;
          v11 += 56;
          --v9;
          uint64_t v8 = v20;
        }
        while (v9);
        swift_bridgeObjectRelease();
      }
    }
  }
  return sub_1DD046B28();
}

uint64_t sub_1DCD60F38(uint64_t a1, double *a2)
{
  uint64_t v3 = sub_1DD046EB8();
  MEMORY[0x1F4188790](v3 - 8);
  sub_1DCD64B20((uint64_t)a2);
  sub_1DD046AE8();
  CGFloat v4 = a2[3];
  CGFloat v5 = a2[4];
  CGFloat v6 = a2[5];
  CGFloat v7 = a2[6];
  sub_1DD046EA8();
  v15.origin.CGFloat x = VIFlipOriginNormalizedRect(v4, v5, v6, v7);
  CGFloat x = v15.origin.x;
  CGFloat y = v15.origin.y;
  CGFloat width = v15.size.width;
  CGFloat height = v15.size.height;
  CGRectGetMinX(v15);
  sub_1DD046E38();
  v16.origin.CGFloat x = x;
  v16.origin.CGFloat y = y;
  v16.size.CGFloat width = width;
  v16.size.CGFloat height = height;
  CGRectGetMinY(v16);
  sub_1DD046E58();
  v17.origin.CGFloat x = x;
  v17.origin.CGFloat y = y;
  v17.size.CGFloat width = width;
  v17.size.CGFloat height = height;
  CGRectGetWidth(v17);
  sub_1DD046E78();
  v18.origin.CGFloat x = x;
  v18.origin.CGFloat y = y;
  v18.size.CGFloat width = width;
  v18.size.CGFloat height = height;
  CGRectGetHeight(v18);
  sub_1DD046E98();
  sub_1DD0471C8();
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F80]), sel_init);
  id v13 = objc_msgSend(v12, sel_operatingSystemVersionString);

  sub_1DD048408();
  sub_1DD0471F8();
  return sub_1DD0471D8();
}

uint64_t sub_1DCD610F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DD046B08();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  CGFloat v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v7 = v1[1];
  v34[0] = *v1;
  v34[1] = v7;
  long long v8 = v1[3];
  v34[2] = v1[2];
  v34[3] = v8;
  int64_t v9 = *(void **)&v34[0];
  id v35 = *(id *)&v34[0];
  uint64_t v10 = sub_1DD048408();
  uint64_t v12 = v11;
  if (v10 == sub_1DD048408() && v12 == v13)
  {
    id v28 = v9;
    sub_1DCD64C00(&v35);
    swift_bridgeObjectRelease_n();
    sub_1DCD64C2C(&v35);
    goto LABEL_15;
  }
  char v15 = sub_1DD048FA8();
  id v16 = v9;
  sub_1DCD64C00(&v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCD64C2C(&v35);
  if (v15)
  {
LABEL_15:
    uint64_t v27 = (unsigned int *)MEMORY[0x1E4F88D50];
    goto LABEL_16;
  }
  uint64_t v17 = sub_1DD048408();
  uint64_t v19 = v18;
  if (v17 == sub_1DD048408() && v19 == v20)
  {
    sub_1DCD64C00(&v35);
    swift_bridgeObjectRelease_n();
    sub_1DCD64C2C(&v35);
    goto LABEL_20;
  }
  char v22 = sub_1DD048FA8();
  sub_1DCD64C00(&v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCD64C2C(&v35);
  if (v22)
  {
LABEL_20:
    uint64_t v27 = (unsigned int *)MEMORY[0x1E4F88D48];
    goto LABEL_16;
  }
  uint64_t v23 = sub_1DD048408();
  uint64_t v25 = v24;
  if (v23 == sub_1DD048408() && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v27 = (unsigned int *)MEMORY[0x1E4F88D58];
LABEL_16:
    sub_1DCD64C2C(&v35);
    goto LABEL_17;
  }
  char v31 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCD64C2C(&v35);
  if ((v31 & 1) == 0)
  {
    uint64_t v32 = sub_1DD046B18();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a1, 1, 1, v32);
  }
  uint64_t v27 = (unsigned int *)MEMORY[0x1E4F88D58];
LABEL_17:
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, *v27, v3);
  uint64_t v29 = sub_1DD046B18();
  MEMORY[0x1F4188790](v29);
  *(void *)&v33[-16] = v6;
  *(void *)&v33[-8] = v34;
  sub_1DCD675C4(&qword_1EAB02610, MEMORY[0x1E4F88D60]);
  sub_1DD047E78();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a1, 0, 1, v29);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DCD614DC(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v5 = sub_1DD046B18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1DD046EB8();
  MEMORY[0x1F4188790](v9 - 8);
  CGFloat v10 = a2[4];
  CGFloat v11 = a2[5];
  CGFloat v12 = a2[6];
  CGFloat v13 = a2[7];
  sub_1DD046EA8();
  v27.origin.CGFloat x = VIFlipOriginNormalizedRect(v10, v11, v12, v13);
  CGFloat x = v27.origin.x;
  CGFloat y = v27.origin.y;
  CGFloat width = v27.size.width;
  CGFloat height = v27.size.height;
  CGRectGetMinX(v27);
  sub_1DD046E38();
  v28.origin.CGFloat x = x;
  v28.origin.CGFloat y = y;
  v28.size.CGFloat width = width;
  v28.size.CGFloat height = height;
  CGRectGetMinY(v28);
  sub_1DD046E58();
  v29.origin.CGFloat x = x;
  v29.origin.CGFloat y = y;
  v29.size.CGFloat width = width;
  v29.size.CGFloat height = height;
  CGRectGetWidth(v29);
  sub_1DD046E78();
  v30.origin.CGFloat x = x;
  v30.origin.CGFloat y = y;
  v30.size.CGFloat width = width;
  v30.size.CGFloat height = height;
  CGRectGetHeight(v30);
  sub_1DD046E98();
  sub_1DD046C78();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  uint64_t v18 = (uint64_t (*)(unsigned char *, void))sub_1DD046CE8();
  uint64_t v20 = v19;
  unint64_t v21 = *v19;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v20 = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v21 = sub_1DCE9EAD8(0, *(void *)(v21 + 16) + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  unint64_t v24 = *(void *)(v21 + 16);
  unint64_t v23 = *(void *)(v21 + 24);
  if (v24 >= v23 >> 1)
  {
    unint64_t v21 = sub_1DCE9EAD8(v23 > 1, v24 + 1, 1, v21);
    *uint64_t v20 = v21;
  }
  *(void *)(v21 + 16) = v24 + 1;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v21+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v24, v8, v5);
  return v18(v26, 0);
}

uint64_t sub_1DCD61788@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02600);
  MEMORY[0x1F4188790](v3);
  unint64_t v63 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v46 - v6;
  uint64_t v8 = sub_1DD046D08();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v60 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (char *)&v46 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v64 = (char *)&v46 - v14;
  uint64_t v15 = *(int *)(v3 + 48);
  uint64_t v16 = sub_1DD046EB8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = v17 + 16;
  uint64_t v19 = v16;
  char v62 = *(void (**)(char *, uint64_t))(v17 + 16);
  v62(v7, a1);
  uint64_t v20 = *(void *)(a1 + v15);
  uint64_t v67 = (uint64_t)v7;
  *(void *)&v7[v15] = v20;
  if (!*(void *)(v20 + 16))
  {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v67, v19);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v47, 1, 1, v8);
  }
  unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  unint64_t v55 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v56 = v21;
  uint64_t v57 = v9 + 16;
  v21(v64, (char *)(v20 + v55), v8);
  unint64_t v23 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v22 = v17 + 8;
  uint64_t v61 = v23;
  v23((char *)v67, v19);
  uint64_t v67 = *(int *)(v3 + 48);
  unint64_t v24 = v63;
  uint64_t v58 = v18;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v62)(v63, a1, v19);
  uint64_t v26 = *(void *)(a1 + v15);
  *(void *)&v24[v67] = v26;
  uint64_t v27 = *(void *)(v26 + 16);
  if (!v27) {
    goto LABEL_13;
  }
  v61(v24, v19);
  uint64_t v54 = v27;
  if (v27 != 1)
  {
    uint64_t v53 = v15;
    uint64_t v49 = v9 + 8;
    uint64_t v50 = v22;
    uint64_t v67 = v19;
    unint64_t v29 = 1;
    uint64_t v48 = v9 + 32;
    uint64_t v46 = (v9 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    CGRect v30 = v63;
    uint64_t v51 = a1;
    uint64_t v52 = v3;
    char v31 = v60;
    while (1)
    {
      uint64_t v32 = *(int *)(v3 + 48);
      uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v62)(v30, a1, v67);
      uint64_t v33 = *(void *)(a1 + v53);
      *(void *)&v30[v32] = v33;
      if (v29 >= *(void *)(v33 + 16)) {
        break;
      }
      unint64_t v65 = v29 + 1;
      uint64_t v34 = v56;
      v56(v31, (char *)(v33 + v55 + *(void *)(v9 + 72) * v29), v8);
      id v35 = v59;
      uint64_t v36 = v64;
      v34(v59, v64, v8);
      uint64_t v37 = v9;
      uint64_t v38 = sub_1DD046C98();
      uint64_t v39 = (void (*)(unsigned char *, void))sub_1DD046C88();
      sub_1DCFDEC64(v38);
      v39(v66, 0);
      uint64_t v40 = sub_1DD046CC8();
      unint64_t v41 = (void (*)(unsigned char *, void))sub_1DD046CB8();
      sub_1DCFDEC38(v40);
      v41(v66, 0);
      uint64_t v42 = sub_1DD046CF8();
      int64_t v43 = (void (*)(unsigned char *, void))sub_1DD046CE8();
      sub_1DCFDEC0C(v42);
      v43(v66, 0);
      uint64_t v9 = v37;
      CGRect v30 = v63;
      long long v44 = *(void (**)(char *, uint64_t))(v9 + 8);
      v44(v31, v8);
      v44(v36, v8);
      v61(v30, v67);
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v45(v36, v35, v8);
      unint64_t v29 = v65;
      a1 = v51;
      uint64_t v3 = v52;
      if (v54 == v65)
      {
        CGRect v28 = v47;
        v45(v47, v64, v8);
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v28, 0, 1, v8);
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  CGRect v28 = v47;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v47, v64, v8);
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v28, 0, 1, v8);
}

uint64_t sub_1DCD61D08(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v69 = a5;
  uint64_t v77 = a4;
  uint64_t v76 = a2;
  uint64_t v72 = a1;
  uint64_t v71 = sub_1DD046B38();
  MEMORY[0x1F4188790](v71);
  uint64_t v9 = (char *)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025D8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1DD046D08();
  uint64_t v80 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v67 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v78 = (char *)v65 - v15;
  uint64_t v16 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)v65 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)v65 - v24;
  long long v26 = a3[9];
  long long v90 = a3[8];
  long long v91 = v26;
  long long v92 = a3[10];
  uint64_t v93 = *((void *)a3 + 22);
  long long v27 = a3[5];
  long long v86 = a3[4];
  long long v87 = v27;
  long long v28 = a3[7];
  long long v88 = a3[6];
  long long v89 = v28;
  long long v29 = a3[1];
  long long v82 = *a3;
  long long v83 = v29;
  long long v30 = a3[2];
  long long v31 = a3[3];
  char v70 = a3;
  long long v84 = v30;
  long long v85 = v31;
  unint64_t v32 = sub_1DCD643C8((uint64_t *)&v82);
  unint64_t v33 = v32;
  uint64_t v34 = *(void *)(v32 + 16);
  if (!v34)
  {
    uint64_t v38 = v70;
    uint64_t v39 = v80;
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v47 = MEMORY[0x1E4FBC860];
    goto LABEL_20;
  }
  uint64_t v66 = v12;
  uint64_t v68 = v9;
  uint64_t v35 = v32 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  uint64_t v94 = *(void *)(v17 + 72);
  uint64_t v36 = v35;
  while (1)
  {
    sub_1DCD67674(v36, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if (*((void *)v22 + 11)) {
      break;
    }
    sub_1DCD67564((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    v36 += v94;
    if (!--v34)
    {
      unint64_t v37 = 0x80000001DD068630;
      uint64_t v74 = 0xD000000000000019;
      goto LABEL_10;
    }
  }
  sub_1DCD6760C((uint64_t)v22, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  uint64_t v40 = *((void *)v25 + 11);
  uint64_t v74 = *((void *)v25 + 10);
  sub_1DCD55D64(v74, v40);
  uint64_t v41 = (uint64_t)v25;
  unint64_t v37 = v40;
  sub_1DCD67564(v41, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  if (v40)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v74 = 0xD000000000000019;
    unint64_t v37 = 0x80000001DD068630;
  }
LABEL_10:
  uint64_t v39 = v80;
  int64_t v42 = *(void *)(v33 + 16);
  if (!v42)
  {
    uint64_t v38 = v70;
    uint64_t v12 = v66;
    goto LABEL_19;
  }
  unint64_t v75 = v37;
  v65[1] = v33;
  *(void *)&long long v82 = MEMORY[0x1E4FBC860];
  sub_1DCFC58A0(0, v42, 0);
  uint64_t v73 = v39 + 32;
  do
  {
    uint64_t v43 = sub_1DCD67674(v35, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    MEMORY[0x1F4188790](v43);
    uint64_t v44 = v76;
    v65[-6] = v19;
    v65[-5] = v44;
    uint64_t v45 = v74;
    v65[-4] = v77;
    v65[-3] = v45;
    v65[-2] = v75;
    sub_1DCD675C4(&qword_1EAB025E0, MEMORY[0x1E4F89018]);
    uint64_t v46 = v6;
    sub_1DD047E78();
    sub_1DCD67564((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v47 = v82;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1DCFC58A0(0, *(void *)(v47 + 16) + 1, 1);
      uint64_t v47 = v82;
    }
    unint64_t v49 = *(void *)(v47 + 16);
    unint64_t v48 = *(void *)(v47 + 24);
    uint64_t v50 = v78;
    if (v49 >= v48 >> 1)
    {
      sub_1DCFC58A0(v48 > 1, v49 + 1, 1);
      uint64_t v47 = v82;
    }
    *(void *)(v47 + 16) = v49 + 1;
    uint64_t v39 = v80;
    (*(void (**)(unint64_t, char *, uint64_t))(v80 + 32))(v47+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v49, v50, v79);
    *(void *)&long long v82 = v47;
    v35 += v94;
    --v42;
    uint64_t v6 = v46;
  }
  while (v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = v70;
  uint64_t v12 = v66;
LABEL_20:
  uint64_t v81 = v47;
  long long v51 = v38[9];
  long long v90 = v38[8];
  long long v91 = v51;
  long long v92 = v38[10];
  uint64_t v93 = *((void *)v38 + 22);
  long long v52 = v38[5];
  long long v86 = v38[4];
  long long v87 = v52;
  long long v53 = v38[7];
  long long v88 = v38[6];
  long long v89 = v53;
  long long v54 = v38[1];
  long long v82 = *v38;
  long long v83 = v54;
  long long v55 = v38[3];
  long long v84 = v38[2];
  long long v85 = v55;
  unint64_t v56 = sub_1DCD63A0C((uint64_t)&v82);
  if (v56) {
    sub_1DCFDEE50(v56);
  }
  if (v69)
  {
    if (*(void *)(v81 + 16))
    {
      uint64_t v58 = v79;
      (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v12, v81 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80)), v79);
      uint64_t v59 = 0;
    }
    else
    {
      uint64_t v59 = 1;
      uint64_t v58 = v79;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v12, v59, 1, v58);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v12, 1, v58) == 1)
    {
      uint64_t v57 = sub_1DCD2479C((uint64_t)v12, &qword_1EAB025D8);
    }
    else
    {
      uint64_t v60 = v67;
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v67, v12, v58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025F0);
      uint64_t v61 = v58;
      unint64_t v62 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      uint64_t v63 = swift_allocObject();
      *(_OWORD *)(v63 + 16) = xmmword_1DD04E910;
      (*(void (**)(unint64_t, char *, uint64_t))(v39 + 16))(v63 + v62, v60, v61);
      sub_1DCD63F90(v63);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      sub_1DD046B28();
      uint64_t v57 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v60, v61);
    }
  }
  else
  {
    sub_1DCD63F90(v81);
    swift_bridgeObjectRelease();
    uint64_t v57 = sub_1DD046B28();
  }
  MEMORY[0x1F4188790](v57);
  v65[-2] = v38;
  sub_1DCD675C4(&qword_1EAB025E8, MEMORY[0x1E4F88D70]);
  sub_1DD047E78();
  return sub_1DD046D58();
}

uint64_t sub_1DCD626D0(uint64_t a1, uint64_t a2, void **a3, void *a4, void *a5, uint64_t *a6)
{
  long long v113 = a5;
  long long v114 = a6;
  long long v108 = a4;
  long long v109 = a3;
  uint64_t v9 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v107 = (long long *)((char *)v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v120 = sub_1DD046EB8();
  uint64_t v11 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  uint64_t v13 = (char *)v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_1DD047838();
  uint64_t v14 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  uint64_t v16 = (char *)v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v104 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02670);
  MEMORY[0x1F4188790](a2);
  uint64_t v112 = (uint64_t)v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v104 - v23;
  uint64_t v25 = *(void *)(a2 + 16);
  long long v115 = (char *)v104 - v23;
  long long v110 = v19;
  uint64_t v111 = v14;
  if (v25)
  {
    uint64_t v105 = a1;
    uint64_t v106 = v6;
    CGFloat v26 = *(double *)(a1 + 16);
    CGFloat v27 = *(double *)(a1 + 24);
    CGFloat v29 = *(double *)a1;
    CGFloat v28 = *(double *)(a1 + 8);
    long long v31 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    uint64_t v30 = v14 + 16;
    uint64_t v119 = v31;
    uint64_t v32 = v22 + ((*(unsigned __int8 *)(v30 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 64));
    unint64_t v33 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v116 = *(void *)(v30 + 56);
    v104[1] = v22;
    swift_bridgeObjectRetain();
    double v118 = -0.0001;
    double v117 = 0.0001;
    uint64_t v34 = v121;
    CGFloat v136 = v26;
    CGFloat v123 = v29;
    CGFloat v124 = v28;
    do
    {
      v119(v16, v32, v34);
      sub_1DD047808();
      sub_1DD046E28();
      CGFloat v36 = v35;
      sub_1DD046E48();
      CGFloat v38 = v37;
      sub_1DD046E68();
      CGFloat v40 = v39;
      sub_1DD046E88();
      double v42 = VIFlipOriginNormalizedRect(v36, v38, v40, v41);
      CGFloat v44 = v43;
      CGFloat v46 = v45;
      CGFloat v48 = v47;
      (*v33)(v13, v120);
      v137.origin.CGFloat x = v29;
      v137.origin.CGFloat y = v28;
      v137.size.CGFloat width = v26;
      v137.size.CGFloat height = v27;
      double MinX = CGRectGetMinX(v137);
      CGFloat v50 = v27;
      double v51 = v118;
      double v52 = MinX + v118;
      CGFloat v122 = v42;
      v138.origin.CGFloat x = v42;
      v138.origin.CGFloat y = v44;
      v138.size.CGFloat width = v46;
      v138.size.CGFloat height = v48;
      double v53 = CGRectGetMinX(v138);
      double v54 = v117;
      BOOL v55 = v52 > v53;
      CGFloat v27 = v50;
      BOOL v55 = v55 || v53 > MinX + v117;
      if (!v55)
      {
        v139.origin.CGFloat x = v123;
        v139.origin.CGFloat y = v124;
        v139.size.CGFloat width = v136;
        v139.size.CGFloat height = v50;
        double MinY = CGRectGetMinY(v139);
        v140.origin.CGFloat x = v122;
        v140.origin.CGFloat y = v44;
        v140.size.CGFloat width = v46;
        v140.size.CGFloat height = v48;
        double v57 = CGRectGetMinY(v140);
        CGFloat v27 = v50;
        if (MinY + v51 <= v57 && v57 <= MinY + v54)
        {
          v141.origin.CGFloat x = v123;
          v141.origin.CGFloat y = v124;
          v141.size.CGFloat width = v136;
          v141.size.CGFloat height = v50;
          double Width = CGRectGetWidth(v141);
          v142.origin.CGFloat x = v122;
          v142.origin.CGFloat y = v44;
          v142.size.CGFloat width = v46;
          v142.size.CGFloat height = v48;
          double v60 = CGRectGetWidth(v142);
          CGFloat v27 = v50;
          if (Width + v51 <= v60 && v60 <= Width + v54)
          {
            v143.origin.CGFloat x = v123;
            v143.origin.CGFloat y = v124;
            v143.size.CGFloat width = v136;
            v143.size.CGFloat height = v50;
            double Height = CGRectGetHeight(v143);
            v144.origin.CGFloat x = v122;
            v144.origin.CGFloat y = v44;
            v144.size.CGFloat width = v46;
            v144.size.CGFloat height = v48;
            double v63 = CGRectGetHeight(v144);
            if (Height + v51 <= v63 && v63 <= Height + v54)
            {
              swift_bridgeObjectRelease();
              uint64_t v14 = v111;
              uint64_t v64 = (uint64_t)v115;
              uint64_t v34 = v121;
              (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v115, v16, v121);
              uint64_t v24 = (char *)v64;
              uint64_t v65 = 0;
              a1 = v105;
              uint64_t v19 = v110;
              goto LABEL_21;
            }
          }
        }
      }
      uint64_t v34 = v121;
      (*(void (**)(char *, uint64_t))(v30 - 8))(v16, v121);
      v32 += v116;
      --v25;
      CGFloat v26 = v136;
      CGFloat v29 = v123;
      CGFloat v28 = v124;
    }
    while (v25);
    swift_bridgeObjectRelease();
    uint64_t v65 = 1;
    a1 = v105;
    uint64_t v24 = v115;
    uint64_t v19 = v110;
    uint64_t v14 = v111;
  }
  else
  {
    uint64_t v65 = 1;
    uint64_t v34 = v121;
  }
LABEL_21:
  uint64_t v66 = v24;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v24, v65, 1, v34);
  uint64_t v67 = (uint64_t)v66;
  uint64_t v68 = v112;
  sub_1DCD2889C(v67, v112, &qword_1EAB02670);
  int v69 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v68, 1, v34);
  char v70 = v113;
  uint64_t v71 = v114;
  if (v69 == 1)
  {
    sub_1DCD2479C(v68, &qword_1EAB02670);
    uint64_t v72 = v107;
    sub_1DCD67674(a1, (uint64_t)v107, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v73 = v108;
    if (v108)
    {
      uint64_t v74 = (uint64_t)v108;
    }
    else
    {
      uint64_t v125 = 0;
      unint64_t v126 = 0xE000000000000000;
      long long v83 = v72[1];
      long long v127 = *v72;
      long long v128 = v83;
      sub_1DD048C88();
      uint64_t v84 = v125;
      unint64_t v85 = v126;
      sub_1DCD676DC();
      uint64_t v74 = swift_allocError();
      *(void *)uint64_t v86 = v84;
      *(void *)(v86 + 8) = v85;
      *(unsigned char *)(v86 + 16) = 1;
    }
    long long v87 = v109;
    id v88 = v73;
    sub_1DCD67564((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    long long v89 = *v87;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *long long v87 = v89;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      long long v89 = sub_1DCE9EB74(0, v89[2] + 1, 1, v89);
      *long long v87 = v89;
    }
    unint64_t v92 = v89[2];
    unint64_t v91 = v89[3];
    uint64_t v93 = (uint64_t)v115;
    if (v92 >= v91 >> 1)
    {
      long long v89 = sub_1DCE9EB74((void *)(v91 > 1), v92 + 1, 1, v89);
      uint64_t v93 = (uint64_t)v115;
      *long long v87 = v89;
    }
    _OWORD v89[2] = v92 + 1;
    v89[v92 + 4] = v74;
    return sub_1DCD2479C(v93, &qword_1EAB02670);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v19, v68, v34);
    uint64_t v75 = sub_1DCF2316C();
    uint64_t v76 = v75;
    uint64_t v77 = *(void *)(v75 + 16);
    if (v77)
    {
      long long v78 = *(_OWORD *)(v75 + 144);
      long long v133 = *(_OWORD *)(v75 + 128);
      long long v134 = v78;
      v135[0] = *(_OWORD *)(v75 + 160);
      *(_OWORD *)((char *)v135 + 13) = *(_OWORD *)(v75 + 173);
      long long v79 = *(_OWORD *)(v75 + 80);
      long long v129 = *(_OWORD *)(v75 + 64);
      long long v130 = v79;
      long long v80 = *(_OWORD *)(v75 + 112);
      long long v131 = *(_OWORD *)(v75 + 96);
      long long v132 = v80;
      long long v81 = *(_OWORD *)(v75 + 48);
      long long v127 = *(_OWORD *)(v75 + 32);
      long long v128 = v81;
      sub_1DCD32CC8((uint64_t)&v127);
      sub_1DCD62EF0((uint64_t)&v125, (uint64_t)v19, v70, v71, (CGFloat *)a1);
      sub_1DCD32DD4((uint64_t)&v127);
      uint64_t v82 = v77 - 1;
      if (v82)
      {
        uint64_t v95 = v70;
        long long v96 = (long long *)(v76 + 192);
        uint64_t v19 = v110;
        do
        {
          long long v97 = v96[1];
          long long v127 = *v96;
          long long v128 = v97;
          long long v98 = v96[2];
          long long v99 = v96[3];
          long long v100 = v96[5];
          long long v131 = v96[4];
          long long v132 = v100;
          long long v129 = v98;
          long long v130 = v99;
          long long v101 = v96[6];
          long long v102 = v96[7];
          long long v103 = v96[8];
          *(_OWORD *)((char *)v135 + 13) = *(long long *)((char *)v96 + 141);
          long long v134 = v102;
          v135[0] = v103;
          long long v133 = v101;
          sub_1DCD32CC8((uint64_t)&v127);
          sub_1DCD62EF0((uint64_t)&v125, (uint64_t)v19, v95, v71, (CGFloat *)a1);
          sub_1DCD32DD4((uint64_t)&v127);
          v96 += 10;
          --v82;
        }
        while (v82);
      }
      else
      {
        uint64_t v19 = v110;
      }
      swift_bridgeObjectRelease();
      uint64_t v14 = v111;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1DCD2479C((uint64_t)v115, &qword_1EAB02670);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v121);
  }
}

uint64_t sub_1DCD62EF0(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, CGFloat *a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02680);
  uint64_t v7 = sub_1DD047838();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DD04E910;
  uint64_t v11 = *(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16);
  v11(v10 + v9, a2, v7);
  id v12 = objc_msgSend(a3, sel_location);
  unint64_t v26 = sub_1DCDDF60C(v10);

  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1DD04E910;
  v11(v13 + v9, a2, v7);
  uint64_t v14 = sub_1DCDE0EFC(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (a3) {
    id v15 = objc_msgSend(a3, sel_queryID);
  }
  else {
    id v15 = 0;
  }
  sub_1DCF448EC(v15, a3 == 0, v14);
  CGFloat v16 = *a5;
  CGFloat v17 = a5[1];
  CGFloat v18 = a5[2];
  CGFloat v19 = a5[3];
  if (!*(void *)(*a4 + 16) || (sub_1DCEAD508(*a5, a5[1], a5[2], a5[3]), (v20 & 1) == 0))
  {
    if (qword_1EAB02050 != -1) {
      swift_once();
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = swift_bridgeObjectRetain();
  sub_1DCFDEE94(v21);
  unint64_t v22 = swift_bridgeObjectRetain();
  sub_1DCFDEE7C(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = *a4;
  *a4 = 0x8000000000000000;
  sub_1DCE85A88(v26, v14, isUniquelyReferenced_nonNull_native, v16, v17, v18, v19);
  *a4 = v29;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCD63208(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1DD046B08();
  double v4 = MEMORY[0x1F4188790](v3);
  (*(void (**)(unsigned char *, uint64_t, double))(v6 + 16))(&v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], a2, v4);
  uint64_t v7 = (void (*)(unsigned char *, void))sub_1DD046AF8();
  sub_1DD046AD8();
  v7(v10, 0);
  swift_bridgeObjectRetain();
  uint64_t v8 = (uint64_t (*)(unsigned char *, void))sub_1DD046AF8();
  sub_1DD046AE8();
  return v8(v10, 0);
}

uint64_t sub_1DCD6335C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCDBF978(*(void *)(v1 + 16), a1);
}

uint64_t sub_1DCD63378(uint64_t a1)
{
  return sub_1DCD5F000(a1, *(void **)(v1 + 16), *(uint64_t **)(v1 + 24), *(long long **)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_1DCD633B4(uint64_t a1)
{
  return sub_1DCD61D08(a1, *(void *)(v1 + 16), *(long long **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1DCD633D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v20 = v2;
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1DCFC5900(0, v9, 0);
    uint64_t v10 = v22;
    uint64_t v11 = (unint64_t *)(a1 + 32);
    uint64_t v21 = a2;
    unint64_t v12 = *(void *)(a2 + 16);
    do
    {
      unint64_t v14 = *v11++;
      unint64_t v13 = v14;
      if (v12 && v13 < v12)
      {
        sub_1DCD67674(v21+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v13, (uint64_t)v8, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      }
      else
      {
        void *v8 = 0;
        v8[1] = 0xE000000000000000;
        v8[2] = 0;
        double v8[3] = 0xE000000000000000;
        v8[4] = 0;
        v8[5] = MEMORY[0x1E4FBC860];
        sub_1DD047BE8();
        id v15 = (char *)v8 + *(int *)(v5 + 40);
        uint64_t v16 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      }
      uint64_t v22 = v10;
      unint64_t v18 = *(void *)(v10 + 16);
      unint64_t v17 = *(void *)(v10 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1DCFC5900(v17 > 1, v18 + 1, 1);
        uint64_t v10 = v22;
      }
      *(void *)(v10 + 16) = v18 + 1;
      sub_1DCD6760C((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v18, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      --v9;
    }
    while (v9);
  }
  return v10;
}

unint64_t sub_1DCD63618(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

uint64_t sub_1DCD63628(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85528);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a3 + 16);
  if (v13)
  {
    uint64_t v30 = v6;
    long long v31 = v9;
    uint64_t v29 = v7;
    uint64_t v14 = sub_1DD0465D8();
    unint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    swift_bridgeObjectRetain();
    uint64_t v32 = a3;
    id v15 = (unint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v16 = *(v15 - 1);
      unint64_t v17 = *v15;
      uint64_t v18 = a1;
      uint64_t v38 = a1;
      unint64_t v39 = a2;
      unint64_t v19 = a2;
      uint64_t v36 = v16;
      unint64_t v37 = v17;
      v33(v12, 1, 1, v14);
      sub_1DCD21A84();
      swift_bridgeObjectRetain();
      sub_1DD048A88();
      char v21 = v20;
      sub_1DCD2479C((uint64_t)v12, &qword_1EBE85528);
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0) {
        break;
      }
      v15 += 2;
      --v13;
      a2 = v19;
      a1 = v18;
      if (!v13)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t)v31;
    sub_1DCDB40EC((uint64_t)v31);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1DD048048();
    os_log_type_t v24 = sub_1DD048848();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v38 = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1DCED7FA0(v18, v19, &v38);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v23, v24, "Remove model urn suffix for model %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v26, -1, -1);
      MEMORY[0x1E01B07E0](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v30);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v22, v30);
    }
    uint64_t v38 = v18;
    unint64_t v39 = v19;
    uint64_t v36 = 707673948;
    unint64_t v37 = 0xE400000000000000;
    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    return sub_1DD048A68();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t sub_1DCD63A0C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02608);
  MEMORY[0x1F4188790](v2 - 8);
  double v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DD046B18();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v38 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025D8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DD046D08();
  uint64_t v39 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  CGFloat v46 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v37 = (char *)&v34 - v14;
  unint64_t v15 = 0;
  if (*(void *)(a1 + 8) != 1)
  {
    uint64_t v16 = *(void *)(a1 + 40);
    if (v16)
    {
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        CGFloat v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
        unint64_t v35 = (uint64_t (**)(char *, char *, uint64_t))(v6 + 32);
        uint64_t v34 = (void (**)(char *, uint64_t))(v6 + 8);
        double v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
        double v42 = (unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
        float v41 = (void (**)(char *, char *, uint64_t))(v39 + 32);
        swift_bridgeObjectRetain();
        unint64_t v15 = MEMORY[0x1E4FBC860];
        uint64_t v18 = 32;
        uint64_t v36 = v5;
        uint64_t v45 = v16;
        do
        {
          long long v19 = *(_OWORD *)(v16 + v18);
          long long v20 = *(_OWORD *)(v16 + v18 + 16);
          long long v21 = *(_OWORD *)(v16 + v18 + 48);
          _OWORD v51[2] = *(_OWORD *)(v16 + v18 + 32);
          v51[3] = v21;
          v51[0] = v19;
          v51[1] = v20;
          long long v22 = *(_OWORD *)(v16 + v18 + 16);
          long long v47 = *(_OWORD *)(v16 + v18);
          long long v48 = v22;
          long long v23 = *(_OWORD *)(v16 + v18 + 48);
          long long v49 = *(_OWORD *)(v16 + v18 + 32);
          long long v50 = v23;
          sub_1DCD64B78((id *)v51);
          sub_1DCD610F0((uint64_t)v4);
          if ((*v44)(v4, 1, v5) == 1)
          {
            sub_1DCD2479C((uint64_t)v4, &qword_1EAB02608);
            uint64_t v24 = 1;
          }
          else
          {
            uint64_t v25 = v4;
            uint64_t v26 = v38;
            uint64_t v27 = (*v35)(v38, v25, v5);
            CGFloat v40 = &v34;
            MEMORY[0x1F4188790](v27);
            *(&v34 - 2) = (void (**)(char *, uint64_t))v51;
            *(&v34 - 1) = (void (**)(char *, uint64_t))v26;
            sub_1DCD675C4(&qword_1EAB025E0, MEMORY[0x1E4F89018]);
            sub_1DD047E78();
            uint64_t v28 = v26;
            double v4 = v25;
            uint64_t v16 = v45;
            (*v34)(v28, v5);
            uint64_t v24 = 0;
          }
          (*v43)(v10, v24, 1, v11);
          sub_1DCD64BB0((void **)v51);
          if ((*v42)(v10, 1, v11) == 1)
          {
            sub_1DCD2479C((uint64_t)v10, &qword_1EAB025D8);
          }
          else
          {
            uint64_t v29 = *v41;
            uint64_t v30 = v37;
            (*v41)(v37, v10, v11);
            v29(v46, v30, v11);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v15 = sub_1DCE9EAA4(0, *(void *)(v15 + 16) + 1, 1, v15);
            }
            unint64_t v32 = *(void *)(v15 + 16);
            unint64_t v31 = *(void *)(v15 + 24);
            if (v32 >= v31 >> 1) {
              unint64_t v15 = sub_1DCE9EAA4(v31 > 1, v32 + 1, 1, v15);
            }
            *(void *)(v15 + 16) = v32 + 1;
            v29((char *)(v15+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v32), v46, v11);
            uint64_t v5 = v36;
            uint64_t v16 = v45;
          }
          v18 += 64;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease();
      }
      else
      {
        return MEMORY[0x1E4FBC860];
      }
    }
  }
  return v15;
}

uint64_t sub_1DCD63F90(uint64_t a1)
{
  uint64_t v2 = sub_1DD046EB8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v55 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DD046D08();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v52 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  double v54 = (char *)&v40 - v9;
  uint64_t v10 = (void *)MEMORY[0x1E4FBC868];
  unint64_t v56 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v12 = v6 + 16;
    uint64_t v14 = *(unsigned __int8 *)(v12 + 64);
    uint64_t v15 = (v14 + 32) & ~v14;
    uint64_t v16 = a1 + v15;
    uint64_t v17 = *(void *)(v12 + 56);
    uint64_t v50 = v15;
    double v51 = v13;
    uint64_t v45 = v14 | 7;
    uint64_t v46 = v17 + v15;
    double v53 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    double v43 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    uint64_t v44 = v3 + 32;
    uint64_t v40 = a1;
    swift_bridgeObjectRetain();
    long long v42 = xmmword_1DD04E910;
    uint64_t v48 = v5;
    uint64_t v49 = v3;
    uint64_t v41 = v2;
    uint64_t v47 = v12;
    while (1)
    {
      v51(v54, v16, v5);
      uint64_t v19 = v55;
      sub_1DD046C68();
      unint64_t v21 = sub_1DCEAD668(v19);
      uint64_t v22 = v10[2];
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23)) {
        break;
      }
      char v25 = v20;
      if (v10[3] < v24)
      {
        sub_1DCE7EC8C(v24, 1);
        uint64_t v10 = v56;
        unint64_t v26 = sub_1DCEAD668(v55);
        if ((v25 & 1) != (v27 & 1)) {
          goto LABEL_20;
        }
        unint64_t v21 = v26;
      }
      if (v25)
      {
        (*v43)(v55, v2);
        uint64_t v10 = v56;
        uint64_t v28 = v56[7];
        uint64_t v29 = *v53;
        (*v53)(v52, v54, v5);
        unint64_t v30 = *(void *)(v28 + 8 * v21);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v28 + 8 * v21) = v30;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v30 = sub_1DCE9EAA4(0, *(void *)(v30 + 16) + 1, 1, v30);
          *(void *)(v28 + 8 * v21) = v30;
        }
        unint64_t v33 = *(void *)(v30 + 16);
        unint64_t v32 = *(void *)(v30 + 24);
        if (v33 >= v32 >> 1)
        {
          unint64_t v30 = sub_1DCE9EAA4(v32 > 1, v33 + 1, 1, v30);
          *(void *)(v28 + 8 * v21) = v30;
        }
        uint64_t v2 = v41;
        *(void *)(v30 + 16) = v33 + 1;
        unint64_t v18 = v30 + v50 + v33 * v17;
        uint64_t v5 = v48;
        v29((char *)v18, v52, v48);
        uint64_t v3 = v49;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025F0);
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = v42;
        (*v53)((char *)(v34 + v50), v54, v5);
        v10[(v21 >> 6) + 8] |= 1 << v21;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10[6] + *(void *)(v3 + 72) * v21, v55, v2);
        *(void *)(v10[7] + 8 * v21) = v34;
        uint64_t v35 = v10[2];
        BOOL v36 = __OFADD__(v35, 1);
        uint64_t v37 = v35 + 1;
        if (v36) {
          goto LABEL_19;
        }
        v10[2] = v37;
      }
      v16 += v17;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_1DD049028();
    __break(1u);
  }
  else
  {
LABEL_17:
    uint64_t v38 = sub_1DCD5DAB0((uint64_t)v10);
    swift_release();
    return v38;
  }
  return result;
}

unint64_t sub_1DCD643C8(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v68 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v55 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v63 = (uint64_t)&v55 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v66 = (uint64_t)&v55 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v55 - v13;
  uint64_t v15 = *a1;
  uint64_t v16 = a1[19];
  if (v16)
  {
    uint64_t v17 = a1[20];
    unint64_t v18 = *(char **)(v15 + 16);
    unint64_t v19 = MEMORY[0x1E4FBC860];
    uint64_t v64 = a1[21];
    uint64_t v65 = v16;
    uint64_t v62 = v17;
    if (v18)
    {
      uint64_t v57 = v2;
      uint64_t v58 = v4;
      unint64_t v20 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
      *(void *)&long long v67 = v15 + v20;
      sub_1DCD43548(v16);
      swift_bridgeObjectRetain();
      LODWORD(v61) = 0;
      uint64_t v4 = 0;
      double v60 = v18 - 1;
      long long v59 = xmmword_1DD04E910;
      unint64_t v21 = v19;
      unint64_t v19 = 0;
      do
      {
        while (1)
        {
          if (v19 >= *(void *)(v15 + 16))
          {
            __break(1u);
            goto LABEL_36;
          }
          uint64_t v2 = *(void *)(v68 + 72);
          uint64_t v4 = (char *)(v19 + 1);
          sub_1DCD67674(v67 + v2 * v19, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v14[104] != 1) {
            break;
          }
          uint64_t v24 = v66;
          sub_1DCD67674((uint64_t)v14, v66, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          char v25 = *(void **)(v24 + 112);
          uint64_t v26 = *(void *)v14;
          uint64_t v27 = *((void *)v14 + 1);
          uint64_t v28 = *((void *)v14 + 2);
          uint64_t v29 = *((void *)v14 + 3);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A68);
          uint64_t v30 = swift_allocObject();
          *(_OWORD *)(v30 + 16) = v59;
          uint64_t v31 = v62;
          *(void *)(v30 + 32) = v65;
          *(void *)(v30 + 40) = v31;
          uint64_t v61 = v30;
          *(void *)(v30 + 48) = v64;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v33 = v25;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            long long v42 = sub_1DCE9DAF0(0, v25[2] + 1, 1, v25);
            unint64_t v33 = v25;
            char v25 = v42;
          }
          unint64_t v35 = v25[2];
          unint64_t v34 = v25[3];
          unint64_t v36 = v35 + 1;
          if (v35 >= v34 >> 1)
          {
            uint64_t v55 = v33;
            unint64_t v56 = v35 + 1;
            double v43 = v25;
            unint64_t v44 = v35;
            uint64_t v45 = sub_1DCE9DAF0((void *)(v34 > 1), v35 + 1, 1, v43);
            unint64_t v36 = v56;
            unint64_t v35 = v44;
            char v25 = v45;
          }
          long long v25[2] = v36;
          uint64_t v37 = &v25[6 * v35];
          v37[4] = v26;
          v37[5] = v27;
          v37[6] = v28;
          v37[7] = v29;
          v37[8] = v61;
          v37[9] = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRelease();
          uint64_t v38 = v66;
          *(void *)(v66 + 112) = v25;
          sub_1DCD67674(v38, v63, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v21 = sub_1DCE9D7A0(0, *(void *)(v21 + 16) + 1, 1, v21);
          }
          unint64_t v40 = *(void *)(v21 + 16);
          unint64_t v39 = *(void *)(v21 + 24);
          uint64_t v41 = v40 + 1;
          if (v40 >= v39 >> 1)
          {
            uint64_t v61 = v40 + 1;
            uint64_t v46 = sub_1DCE9D7A0(v39 > 1, v40 + 1, 1, v21);
            uint64_t v41 = v61;
            unint64_t v21 = v46;
          }
          *(void *)(v21 + 16) = v41;
          sub_1DCD6760C(v63, v21 + v20 + v40 * v2, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD67564((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD67564(v66, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          LODWORD(v61) = 1;
          if (v60 == (char *)v19)
          {
            swift_bridgeObjectRelease();
LABEL_24:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v21;
          }
          ++v19;
        }
        sub_1DCD67674((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v21 = sub_1DCE9D7A0(0, *(void *)(v21 + 16) + 1, 1, v21);
        }
        unint64_t v23 = *(void *)(v21 + 16);
        unint64_t v22 = *(void *)(v21 + 24);
        if (v23 >= v22 >> 1) {
          unint64_t v21 = sub_1DCE9D7A0(v22 > 1, v23 + 1, 1, v21);
        }
        *(void *)(v21 + 16) = v23 + 1;
        sub_1DCD6760C((uint64_t)v7, v21 + v20 + v23 * v2, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCD67564((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v19 = (unint64_t)v4;
      }
      while (v18 != v4);
      swift_bridgeObjectRelease();
      uint64_t v2 = v57;
      uint64_t v4 = v58;
      unint64_t v19 = MEMORY[0x1E4FBC860];
      if (v61) {
        goto LABEL_24;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v21 = MEMORY[0x1E4FBC860];
    }
    if (qword_1EBE84A80 != -1) {
LABEL_36:
    }
      swift_once();
    long long v47 = xmmword_1EBE84A60;
    long long v48 = xmmword_1EBE84A70;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86A40);
    uint64_t v49 = swift_allocObject();
    long long v67 = xmmword_1DD04E910;
    *(_OWORD *)(v49 + 16) = xmmword_1DD04E910;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A68);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = v67;
    uint64_t v51 = v62;
    *(void *)(v50 + 32) = v65;
    *(void *)(v50 + 40) = v51;
    *(void *)(v50 + 48) = v64;
    *(_OWORD *)(v49 + 32) = v47;
    *(_OWORD *)(v49 + 48) = v48;
    *(void *)(v49 + 64) = v50;
    *(void *)(v49 + 72) = v19;
    sub_1DD046588();
    *(_OWORD *)uint64_t v4 = v47;
    *((_OWORD *)v4 + 1) = v48;
    v4[32] = 1;
    *((void *)v4 + 5) = v19;
    *((void *)v4 + 6) = v19;
    *((void *)v4 + 7) = v19;
    *((void *)v4 + 8) = v19;
    *(_OWORD *)(v4 + 72) = 0u;
    *(_OWORD *)(v4 + 88) = 0u;
    v4[104] = 1;
    *((void *)v4 + 14) = v49;
    v4[*(int *)(v2 + 64)] = 0;
    *(void *)&v4[*(int *)(v2 + 68)] = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v21 = sub_1DCE9D7A0(0, *(void *)(v21 + 16) + 1, 1, v21);
    }
    unint64_t v53 = *(void *)(v21 + 16);
    unint64_t v52 = *(void *)(v21 + 24);
    if (v53 >= v52 >> 1) {
      unint64_t v21 = sub_1DCE9D7A0(v52 > 1, v53 + 1, 1, v21);
    }
    *(void *)(v21 + 16) = v53 + 1;
    sub_1DCD6760C((uint64_t)v4, v21+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v53, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    return v21;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v15;
}

uint64_t sub_1DCD64AC4(uint64_t a1)
{
  return sub_1DCD60ABC(a1, *(double **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1DCD64AE8(uint64_t a1)
{
  return sub_1DCD60C40(a1, *(void *)(v1 + 16));
}

uint64_t sub_1DCD64B04(uint64_t a1)
{
  return sub_1DCD60F38(a1, *(double **)(v1 + 16));
}

uint64_t sub_1DCD64B20(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCD64B4C(uint64_t a1)
{
  return a1;
}

id *sub_1DCD64B78(id *a1)
{
  id v2 = *a1;
  swift_bridgeObjectRetain();
  return a1;
}

void **sub_1DCD64BB0(void **a1)
{
  id v2 = *a1;
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_1DCD64BE4(uint64_t a1)
{
  return sub_1DCD614DC(a1, *(double **)(v1 + 16), *(void *)(v1 + 24));
}

id *sub_1DCD64C00(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_1DCD64C2C(id *a1)
{
  return a1;
}

uint64_t sub_1DCD64C58(uint64_t a1)
{
  return sub_1DCD63208(a1, *(void *)(v1 + 16));
}

uint64_t sub_1DCD64C74(uint64_t a1)
{
  return sub_1DCD64D2C(a1, sub_1DCD60804);
}

uint64_t sub_1DCD64CA0()
{
  return sub_1DD047218();
}

uint64_t sub_1DCD64D00(uint64_t a1)
{
  return sub_1DCD64D2C(a1, sub_1DCD5FE18);
}

uint64_t sub_1DCD64D2C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

unint64_t sub_1DCD64D58(uint64_t a1, void *a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v182 = a6;
  uint64_t v184 = a5;
  int v202 = a4;
  CGRect v185 = a2;
  uint64_t v178 = a1;
  uint64_t v164 = type metadata accessor for ObjectKnowledge();
  uint64_t v154 = *(void *)(v164 - 8);
  MEMORY[0x1F4188790](v164);
  uint64_t v150 = (uint64_t)v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v153 = (uint64_t)v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v155 = (void *)((char *)v146 - v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02638);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v197 = (uint64_t)v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = type metadata accessor for Com_Apple_Visualintelligence_AspireResult(0);
  MEMORY[0x1F4188790](v201);
  v199 = (char *)v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  uint64_t v198 = *(void *)(v196 - 8);
  MEMORY[0x1F4188790](v196);
  uint64_t v189 = (uint64_t)v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (void *)((char *)v146 - v17);
  uint64_t v194 = sub_1DD048168();
  CGRect v179 = *(void (***)(char *, uint64_t))(v194 - 8);
  MEMORY[0x1F4188790](v194);
  CGRect v181 = (char *)v146 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  CGRect v187 = (char *)v146 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02668);
  MEMORY[0x1F4188790](v22 - 8);
  CGRect v180 = (char *)v146 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  CGRect v183 = (char *)v146 - v25;
  uint64_t v26 = sub_1DD047C38();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v200 = (char *)v146 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  CGRect v186 = (char *)v146 - v29;
  uint64_t v193 = sub_1DD047B98();
  uint64_t v177 = *(void *)(v193 - 8);
  MEMORY[0x1F4188790](v193);
  CGFloat v173 = (char *)v146 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  CGRect v188 = (char *)v146 - v32;
  uint64_t v192 = sub_1DD048148();
  uint64_t v175 = *(void *)(v192 - 8);
  MEMORY[0x1F4188790](v192);
  unint64_t v34 = (char *)v146 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1DD047898();
  uint64_t v176 = *(void (***)(char *, uint64_t))(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)v146 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02648);
  MEMORY[0x1F4188790](v38 - 8);
  unint64_t v40 = (char *)v146 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1DD0473A8();
  uint64_t v42 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  unint64_t v44 = (char *)v146 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = *a3;
  uint64_t v46 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v190 = sub_1DCDB8A74(MEMORY[0x1E4FBC860]);
  uint64_t v211 = v46;
  if (v202[2])
  {
    uint64_t v47 = swift_bridgeObjectRetain();
    sub_1DCFDF0A8(v47);
    return v190;
  }
  uint64_t v163 = v42;
  uint64_t v147 = v45;
  CGFloat v174 = v40;
  CGRect v165 = v37;
  uint64_t v166 = v35;
  uint64_t v191 = v44;
  uint64_t v195 = v34;
  uint64_t v172 = v41;
  unint64_t v209 = (unint64_t)v46;
  uint64_t v210 = (uint64_t)v46;
  uint64_t v48 = v178;
  uint64_t v152 = *(void *)(v178 + 16);
  if (!v152)
  {
    uint64_t v51 = 0;
    uint64_t v117 = v164;
    uint64_t v58 = v185;
    goto LABEL_44;
  }
  uint64_t v49 = *(void *)(sub_1DD0478E8() - 8);
  uint64_t v162 = v48 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
  uint64_t v149 = v163 + 16;
  uint64_t v161 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v163 + 56);
  uint64_t v160 = *(void *)(v49 + 72);
  uint64_t v159 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v163 + 48);
  uint64_t v158 = (void (**)(char *, uint64_t, uint64_t))(v163 + 32);
  uint64_t v157 = v176 + 1;
  uint64_t v176 = (void (**)(char *, uint64_t))(v177 + 8);
  uint64_t v148 = v182 + 40;
  ++v179;
  uint64_t v151 = (void (**)(char *, uint64_t))(v175 + 8);
  uint64_t v156 = (void (**)(char *, uint64_t))(v163 + 8);
  swift_bridgeObjectRetain();
  uint64_t v50 = 0;
  uint64_t v51 = 0;
  unint64_t v52 = v187;
  uint64_t v53 = v172;
  uint64_t v54 = (uint64_t)v174;
  do
  {
    uint64_t v175 = v50;
    uint64_t v59 = sub_1DD0477E8();
    if (*(void *)(v59 + 16))
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v163 + 16))(v54, v59 + ((*(unsigned __int8 *)(v163 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80)), v53);
      uint64_t v60 = 0;
    }
    else
    {
      uint64_t v60 = 1;
    }
    uint64_t v61 = v191;
    uint64_t v62 = v188;
    (*v161)(v54, v60, 1, v53);
    swift_bridgeObjectRelease();
    if ((*v159)(v54, 1, v53) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCD2479C(v54, &qword_1EAB02648);
      sub_1DCD67510();
      char v70 = (void *)swift_allocError();
      *uint64_t v135 = 0;
      swift_willThrow();
LABEL_51:
      uint64_t v125 = v211;
      id v126 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v125 = sub_1DCE9EB74(0, v125[2] + 1, 1, v125);
      }
      unint64_t v128 = v125[2];
      unint64_t v127 = v125[3];
      if (v128 >= v127 >> 1) {
        uint64_t v125 = sub_1DCE9EB74((void *)(v127 > 1), v128 + 1, 1, v125);
      }
      v125[2] = v128 + 1;
      v125[v128 + 4] = v70;

      uint64_t v211 = v125;
      return v190;
    }
    (*v158)(v61, v54, v53);
    uint64_t v63 = v165;
    sub_1DD047398();
    char v64 = sub_1DD047888();
    (*v157)(v63, v166);
    if (v64)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCD67510();
      char v70 = (void *)swift_allocError();
      *CGFloat v136 = 1;
      swift_willThrow();
      (*v156)(v61, v53);
      goto LABEL_51;
    }
    sub_1DD047388();
    uint64_t v65 = sub_1DD047B78();
    unint64_t v67 = v66;
    uint64_t v68 = v62;
    int v69 = *v176;
    (*v176)(v68, v193);
    uint64_t v207 = v65;
    unint64_t v208 = v67;
    uint64_t v206 = 0;
    long long v204 = 0u;
    long long v205 = 0u;
    sub_1DD047C28();
    sub_1DCD675C4(&qword_1EAB02420, MEMORY[0x1E4F58FE8]);
    sub_1DD047E38();
    char v70 = v51;
    if (v51)
    {
      (*v156)(v61, v172);
LABEL_47:
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
    if (v184)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v72 = v173;
      sub_1DD047388();
      uint64_t v73 = sub_1DD047B78();
      unint64_t v75 = v74;
      v69(v72, v193);
      uint64_t v177 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v182 + 40))(v73, v75, ObjectType);
      sub_1DCD21954(v73, v75);
      uint64_t v76 = v194;
      unint64_t v52 = v187;
    }
    else
    {
      uint64_t v177 = MEMORY[0x1E4FBC860];
      uint64_t v76 = v194;
    }
    sub_1DD048138();
    uint64_t v77 = sub_1DD048118();
    CGRect v171 = *v179;
    v171(v52, v76);
    uint64_t v78 = *(void *)(v77 + 16);
    uint64_t v54 = (uint64_t)v174;
    if (v78)
    {
      uint64_t v79 = v78 - 1;
      uint64_t v80 = sub_1DD048198();
      uint64_t v81 = *(void *)(v80 - 8);
      uint64_t v82 = v81;
      unint64_t v83 = v77
          + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))
          + *(void *)(v81 + 72) * v79;
      uint64_t v84 = (uint64_t)v183;
      (*(void (**)(char *, unint64_t, uint64_t))(v81 + 16))(v183, v83, v80);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v82 + 56))(v84, 0, 1, v80);
    }
    else
    {
      uint64_t v80 = sub_1DD048198();
      uint64_t v84 = (uint64_t)v183;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v183, 1, 1, v80);
    }
    swift_bridgeObjectRelease();
    sub_1DD048198();
    uint64_t v85 = *(void *)(v80 - 8);
    uint64_t v86 = v85;
    long long v87 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
    uint64_t v169 = v85 + 48;
    unsigned int v88 = v87(v84, 1, v80);
    uint64_t v168 = v80;
    uint64_t v167 = v86;
    char v170 = v87;
    if (v88 != 1)
    {
      uint64_t v89 = sub_1DD048178();
      uint64_t v90 = v84;
      uint64_t v91 = v89;
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v90, v80);
      int64_t v92 = *(void *)(v91 + 16);
      if (!v92)
      {
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
      uint64_t v203 = MEMORY[0x1E4FBC860];
      sub_1DCFC5900(0, v92, 0);
      v146[1] = v91;
      uint64_t v93 = (unint64_t *)(v91 + 40);
      while (1)
      {
        uint64_t v95 = *(v93 - 1);
        unint64_t v94 = *v93;
        uint64_t v207 = v95;
        unint64_t v208 = v94;
        uint64_t v206 = 0;
        long long v204 = 0u;
        long long v205 = 0u;
        sub_1DCD33F64(v95, v94);
        sub_1DCD33F64(v95, v94);
        sub_1DD047C28();
        sub_1DCD675C4(&qword_1EAB02658, (void (*)(uint64_t))type metadata accessor for Com_Apple_Visualintelligence_AspireResult);
        uint64_t v96 = (uint64_t)v199;
        sub_1DD047E38();
        if (v70)
        {
          sub_1DCD21954(v95, v94);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          (*v151)(v195, v192);
          (*v156)(v191, v172);
          goto LABEL_47;
        }
        int v202 = 0;
        uint64_t v97 = v197;
        sub_1DCD2889C(v96, v197, &qword_1EAB02638);
        uint64_t v98 = type metadata accessor for Com_Apple_Visualintelligence_AspireResult.OneOf_Snippet(0);
        uint64_t v99 = v96;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 48))(v97, 1, v98) == 1)
        {
          sub_1DCD2479C(v97, &qword_1EAB02638);
          uint64_t v100 = v196;
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v100 = v196;
          if (EnumCaseMultiPayload != 1)
          {
            uint64_t v104 = v189;
            sub_1DCD6760C(v97, v189, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
            sub_1DCD6760C(v104, (uint64_t)v18, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
            goto LABEL_30;
          }
          sub_1DCD67564(v97, type metadata accessor for Com_Apple_Visualintelligence_AspireResult.OneOf_Snippet);
        }
        *unint64_t v18 = 0;
        v18[1] = 0xE000000000000000;
        void v18[2] = 0;
        v18[3] = 0xE000000000000000;
        v18[4] = 0;
        v18[5] = MEMORY[0x1E4FBC860];
        sub_1DD047BE8();
        long long v102 = (char *)v18 + *(int *)(v100 + 40);
        uint64_t v103 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v102, 1, 1, v103);
LABEL_30:
        char v70 = v202;
        sub_1DCD67564(v99, type metadata accessor for Com_Apple_Visualintelligence_AspireResult);
        sub_1DCD21954(v95, v94);
        uint64_t v105 = v203;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DCFC5900(0, *(void *)(v105 + 16) + 1, 1);
          uint64_t v105 = v203;
        }
        uint64_t v106 = v198;
        unint64_t v108 = *(void *)(v105 + 16);
        unint64_t v107 = *(void *)(v105 + 24);
        if (v108 >= v107 >> 1)
        {
          sub_1DCFC5900(v107 > 1, v108 + 1, 1);
          uint64_t v106 = v198;
          uint64_t v105 = v203;
        }
        v93 += 2;
        *(void *)(v105 + 16) = v108 + 1;
        sub_1DCD6760C((uint64_t)v18, v105+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v108, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
        if (!--v92)
        {
          swift_bridgeObjectRelease();
          unint64_t v52 = v187;
          uint64_t v54 = (uint64_t)v174;
          uint64_t v116 = MEMORY[0x1E4FBC860];
          goto LABEL_38;
        }
      }
    }
    sub_1DCD2479C(v84, &qword_1EAB02668);
LABEL_37:
    uint64_t v116 = MEMORY[0x1E4FBC860];
    uint64_t v105 = MEMORY[0x1E4FBC860];
LABEL_38:
    long long v109 = v181;
    sub_1DD048138();
    uint64_t v110 = sub_1DD048118();
    v171(v109, v194);
    uint64_t v111 = *(void *)(v110 + 16);
    if (v111)
    {
      uint64_t v112 = v167;
      uint64_t v113 = (uint64_t)v180;
      uint64_t v114 = v168;
      (*(void (**)(char *, unint64_t, uint64_t))(v167 + 16))(v180, v110+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(void *)(v167 + 72) * (v111 - 1), v168);
      uint64_t v115 = 0;
    }
    else
    {
      uint64_t v115 = 1;
      uint64_t v113 = (uint64_t)v180;
      uint64_t v114 = v168;
      uint64_t v112 = v167;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 56))(v113, v115, 1, v114);
    swift_bridgeObjectRelease();
    if (v170(v113, 1, v114) == 1)
    {
      sub_1DCD2479C(v113, &qword_1EAB02668);
      uint64_t v55 = v116;
    }
    else
    {
      uint64_t v55 = sub_1DD048188();
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v113, v114);
    }
    uint64_t v56 = v175 + 1;
    swift_bridgeObjectRetain();
    uint64_t v51 = v70;
    uint64_t v57 = sub_1DCD633D4(v55, v105);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1DCFDEAC4(v177);
    sub_1DCFDEEC0(v57);
    uint64_t v50 = v56;
    (*v151)(v195, v192);
    uint64_t v53 = v172;
    (*v156)(v191, v172);
    uint64_t v58 = v185;
  }
  while (v56 != v152);
  swift_bridgeObjectRelease();
  uint64_t v117 = v164;
LABEL_44:
  uint64_t v118 = v147;
  if (*(void *)(v147 + 16))
  {
    uint64_t v119 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
    uint64_t v120 = (CGFloat *)(v118
                     + ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80)));
    CGFloat MinX = *v120;
    double v122 = v120[1];
    CGFloat Width = v120[2];
    CGFloat Height = v120[3];
  }
  else
  {
    v212.origin.CGFloat x = 0.0;
    v212.origin.CGFloat y = 0.0;
    v212.size.CGFloat width = 1.0;
    v212.size.CGFloat height = 1.0;
    CGFloat MinX = CGRectGetMinX(v212);
    v213.origin.CGFloat x = 0.0;
    v213.origin.CGFloat y = 0.0;
    v213.size.CGFloat width = 1.0;
    v213.size.CGFloat height = 1.0;
    double v122 = 1.0 - CGRectGetMaxY(v213);
    v214.origin.CGFloat x = 0.0;
    v214.origin.CGFloat y = 0.0;
    v214.size.CGFloat width = 1.0;
    v214.size.CGFloat height = 1.0;
    CGFloat Width = CGRectGetWidth(v214);
    v215.origin.CGFloat x = 0.0;
    v215.origin.CGFloat y = 0.0;
    v215.size.CGFloat width = 1.0;
    v215.size.CGFloat height = 1.0;
    CGFloat Height = CGRectGetHeight(v215);
  }
  type metadata accessor for Reranker();
  swift_allocObject();
  sub_1DCEE8154();
  char v70 = v51;
  if (v51)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  unint64_t v132 = v209;
  uint64_t v131 = v210;
  id v133 = objc_msgSend(v58, sel_location);
  long long v134 = v155;
  sub_1DCEEA6E0(v132, v131, v133, v155);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v137 = v153;
  sub_1DCD2889C((uint64_t)v134, v153, &qword_1EAB02630);
  uint64_t v138 = v154;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v154 + 48))(v137, 1, v117) == 1)
  {
    sub_1DCD2479C(v137, &qword_1EAB02630);
    unint64_t v139 = v190;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v204 = v139;
    sub_1DCE85A88(MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], isUniquelyReferenced_nonNull_native, MinX, v122, Width, Height);
    uint64_t v129 = v204;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v141 = v150;
    sub_1DCD6760C(v137, v150, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02660);
    unint64_t v142 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
    uint64_t v143 = swift_allocObject();
    *(_OWORD *)(v143 + 16) = xmmword_1DD04E910;
    sub_1DCD67674(v141, v143 + v142, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
    unint64_t v144 = v190;
    char v145 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v204 = v144;
    sub_1DCE85A88(v143, MEMORY[0x1E4FBC860], v145, MinX, v122, Width, Height);
    uint64_t v129 = v204;
    swift_release();
    swift_bridgeObjectRelease();
    sub_1DCD67564(v141, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
  }
  sub_1DCD2479C((uint64_t)v134, &qword_1EAB02630);
  return v129;
}

id sub_1DCD66630(uint64_t a1, void *a2, uint64_t *a3, void *a4, uint64_t a5, unint64_t a6)
{
  unint64_t v138 = a6;
  uint64_t v139 = a5;
  id v140 = a2;
  id v141 = a4;
  uint64_t v137 = a1;
  uint64_t v7 = type metadata accessor for ObjectKnowledge();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v129 = v7;
  uint64_t v130 = v8;
  MEMORY[0x1F4188790](v7);
  id v133 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v128 = (uint64_t)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v131 = (unint64_t *)((char *)&v120 - v13);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02638);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v135 = (uint64_t)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontListSnippet(0);
  MEMORY[0x1F4188790](v132);
  long long v134 = (uint64_t *)((char *)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_1DD047C38();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Com_Apple_Visualintelligence_AspireResult(0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1DD047B98();
  unint64_t v136 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02640);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02648);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v120 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *a3;
  long long v33 = *(_OWORD *)(a3 + 15);
  long long v34 = *(_OWORD *)(a3 + 19);
  long long v162 = *(_OWORD *)(a3 + 17);
  long long v163 = v34;
  long long v164 = *(_OWORD *)(a3 + 21);
  long long v35 = *(_OWORD *)(a3 + 7);
  long long v36 = *(_OWORD *)(a3 + 11);
  long long v158 = *(_OWORD *)(a3 + 9);
  long long v159 = v36;
  long long v160 = *(_OWORD *)(a3 + 13);
  long long v161 = v33;
  long long v37 = *(_OWORD *)(a3 + 3);
  long long v154 = *(_OWORD *)(a3 + 1);
  long long v155 = v37;
  long long v156 = *(_OWORD *)(a3 + 5);
  long long v157 = v35;
  uint64_t v38 = (void *)sub_1DCDB8A74(MEMORY[0x1E4FBC860]);
  id v39 = v38;
  if (v141)
  {
    id v40 = v141;
    id v41 = v141;
    uint64_t v42 = sub_1DCE9EB74(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v44 = v42[2];
    unint64_t v43 = v42[3];
    if (v44 >= v43 >> 1) {
      uint64_t v42 = sub_1DCE9EB74((void *)(v43 > 1), v44 + 1, 1, v42);
    }
    _OWORD v42[2] = v44 + 1;
    v42[v44 + 4] = v40;
    return v39;
  }
  uint64_t v125 = v19;
  id v126 = v28;
  double v122 = v31;
  CGFloat v123 = v25;
  uint64_t v124 = v20;
  uint64_t v121 = v32;
  unint64_t v127 = v22;
  id v141 = v38;
  id v45 = v140;
  if (v140)
  {
    id v46 = objc_msgSend(v140, sel_location);
    if (v46)
    {
      uint64_t v47 = v46;
      objc_msgSend(v46, sel_coordinate);
      double v49 = v48;

      id v50 = objc_msgSend(v45, sel_location);
      if (v50)
      {
        uint64_t v51 = v50;
        objc_msgSend(v50, sel_coordinate);
        double v53 = v52;

        uint64_t v54 = sub_1DCE4CB3C(7, v49, v53);
        uint64_t v56 = v55;
        if (v139)
        {
          uint64_t v120 = v54;
          uint64_t v57 = type metadata accessor for NetworkService.NetworkEncryptedSearchResponse(0);
          uint64_t v58 = (uint64_t)v126;
          sub_1DCD2889C(v137 + *(int *)(v57 + 20), (uint64_t)v126, &qword_1EAB02640);
          uint64_t v59 = sub_1DD0478E8();
          uint64_t v60 = *(void *)(v59 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59) == 1)
          {
            sub_1DCD2479C(v58, &qword_1EAB02640);
            uint64_t v61 = 0;
            unint64_t v62 = 0xC000000000000000;
            unint64_t v63 = v138;
          }
          else
          {
            uint64_t v137 = v56;
            uint64_t v79 = sub_1DD0477E8();
            (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
            uint64_t v80 = *(void *)(v79 + 16);
            uint64_t v81 = sub_1DD0473A8();
            uint64_t v82 = *(void *)(v81 - 8);
            unint64_t v63 = v138;
            if (v80)
            {
              uint64_t v83 = (uint64_t)v122;
              (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v81 - 8) + 16))(v122, v79+ ((*(unsigned __int8 *)(*(void *)(v81 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v81 - 8) + 80)), v81);
              uint64_t v84 = 0;
              unint64_t v85 = v136;
            }
            else
            {
              uint64_t v84 = 1;
              unint64_t v85 = v136;
              uint64_t v83 = (uint64_t)v122;
            }
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v83, v84, 1, v81);
            swift_bridgeObjectRelease();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v83, 1, v81) == 1)
            {
              sub_1DCD2479C(v83, &qword_1EAB02648);
              uint64_t v61 = 0;
              unint64_t v62 = 0xC000000000000000;
            }
            else
            {
              unint64_t v136 = v23;
              int64_t v92 = v123;
              sub_1DD047388();
              (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v83, v81);
              uint64_t v61 = sub_1DD047B78();
              unint64_t v62 = v93;
              (*(void (**)(char *, unint64_t))(v85 + 8))(v92, v136);
            }
            uint64_t v56 = v137;
          }
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v95 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v63 + 40))(v61, v62, v120, v56, ObjectType, v63);
          unint64_t v73 = v96;
          uint64_t v139 = v95;
          swift_bridgeObjectRelease();
          sub_1DCD21954(v61, v62);
          unint64_t v74 = 0xC000000000000000;
          uint64_t v72 = 0;
          uint64_t v75 = (uint64_t)v127;
          uint64_t v71 = v139;
          switch(v73 >> 62)
          {
            case 1uLL:
              uint64_t v99 = (int)v139;
              uint64_t v100 = v139 >> 32;
              goto LABEL_34;
            case 2uLL:
              uint64_t v99 = *(void *)(v139 + 16);
              uint64_t v100 = *(void *)(v139 + 24);
LABEL_34:
              if (v99 == v100) {
                goto LABEL_35;
              }
              goto LABEL_28;
            case 3uLL:
              break;
            default:
              if ((v73 & 0xFF000000000000) != 0)
              {
LABEL_28:
                uint64_t v97 = (uint64_t)v127;
                uint64_t v72 = Data.inflate()(v139, v73);
                uint64_t v75 = v97;
              }
              else
              {
LABEL_35:
                uint64_t v72 = 0;
              }
              break;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v71 = 0;
          uint64_t v72 = 0;
          unint64_t v73 = 0xC000000000000000;
          unint64_t v74 = 0xC000000000000000;
          uint64_t v75 = (uint64_t)v127;
        }
        uint64_t v152 = v72;
        unint64_t v153 = v74;
        memset(v142, 0, sizeof(v142));
        uint64_t v76 = v72;
        unint64_t v77 = v74;
        sub_1DCD33F64(v72, v74);
        sub_1DD047C28();
        sub_1DCD675C4(&qword_1EAB02658, (void (*)(uint64_t))type metadata accessor for Com_Apple_Visualintelligence_AspireResult);
        uint64_t v78 = v75;
        sub_1DD047E38();
        unint64_t v136 = v77;
        uint64_t v137 = v76;
        unint64_t v138 = v73;
        uint64_t v86 = v135;
        sub_1DCD2889C(v78, v135, &qword_1EAB02638);
        uint64_t v87 = type metadata accessor for Com_Apple_Visualintelligence_AspireResult.OneOf_Snippet(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 48))(v86, 1, v87) == 1)
        {
          sub_1DCD2479C(v86, &qword_1EAB02638);
          uint64_t v88 = (uint64_t)v133;
          uint64_t v89 = v134;
          uint64_t v90 = v121;
          uint64_t v91 = MEMORY[0x1E4FBC860];
        }
        else
        {
          BOOL v98 = swift_getEnumCaseMultiPayload() == 1;
          uint64_t v88 = (uint64_t)v133;
          uint64_t v89 = v134;
          uint64_t v91 = MEMORY[0x1E4FBC860];
          if (v98)
          {
            sub_1DCD6760C(v86, (uint64_t)v134, type metadata accessor for Com_Apple_Visualintelligence_StorefrontListSnippet);
            uint64_t v90 = v121;
LABEL_37:
            uint64_t v139 = v71;
            if (*(void *)(v90 + 16))
            {
              uint64_t v101 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
              long long v102 = (CGFloat *)(v90
                               + ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80)));
              CGFloat MinX = *v102;
              double v104 = v102[1];
              CGFloat Width = v102[2];
              CGFloat Height = v102[3];
            }
            else
            {
              v165.origin.CGFloat x = 0.0;
              v165.origin.CGFloat y = 0.0;
              v165.size.CGFloat width = 1.0;
              v165.size.CGFloat height = 1.0;
              CGFloat MinX = CGRectGetMinX(v165);
              v166.origin.CGFloat x = 0.0;
              v166.origin.CGFloat y = 0.0;
              v166.size.CGFloat width = 1.0;
              v166.size.CGFloat height = 1.0;
              double v104 = 1.0 - CGRectGetMaxY(v166);
              v167.origin.CGFloat x = 0.0;
              v167.origin.CGFloat y = 0.0;
              v167.size.CGFloat width = 1.0;
              v167.size.CGFloat height = 1.0;
              CGFloat Width = CGRectGetWidth(v167);
              v168.origin.CGFloat x = 0.0;
              v168.origin.CGFloat y = 0.0;
              v168.size.CGFloat width = 1.0;
              v168.size.CGFloat height = 1.0;
              CGFloat Height = CGRectGetHeight(v168);
            }
            type metadata accessor for Reranker();
            swift_allocObject();
            sub_1DCEE8154();
            long long v148 = v161;
            long long v149 = v162;
            long long v150 = v163;
            long long v151 = v164;
            long long v144 = v157;
            long long v145 = v158;
            long long v146 = v159;
            long long v147 = v160;
            *(_OWORD *)&v142[1] = v154;
            *(_OWORD *)&v142[3] = v155;
            v142[0] = v121;
            long long v143 = v156;
            unint64_t v107 = objc_msgSend(v45, sel_location);
            unint64_t v108 = v131;
            sub_1DCEEB324(v89, (uint64_t)v142, v107, v131);

            uint64_t v109 = v128;
            sub_1DCD2889C((uint64_t)v108, v128, &qword_1EAB02630);
            uint64_t v110 = v130;
            uint64_t v111 = v108;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v130 + 48))(v109, 1, v129) == 1)
            {
              sub_1DCD2479C(v109, &qword_1EAB02630);
              id v112 = v141;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v142[0] = v112;
              sub_1DCE85A88(MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], isUniquelyReferenced_nonNull_native, MinX, v104, Width, Height);
              id v39 = (id)v142[0];
              swift_release();
              swift_bridgeObjectRelease();
              sub_1DCD21954(v139, v138);
              sub_1DCD21954(v137, v136);
              uint64_t v114 = (uint64_t)v108;
            }
            else
            {
              uint64_t v115 = v88;
              sub_1DCD6760C(v109, v88, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02660);
              unint64_t v116 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
              uint64_t v117 = swift_allocObject();
              *(_OWORD *)(v117 + 16) = xmmword_1DD04E910;
              sub_1DCD67674(v88, v117 + v116, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
              id v118 = v141;
              char v119 = swift_isUniquelyReferenced_nonNull_native();
              v142[0] = v118;
              sub_1DCE85A88(v117, MEMORY[0x1E4FBC860], v119, MinX, v104, Width, Height);
              id v39 = (id)v142[0];
              swift_release();
              swift_bridgeObjectRelease();
              sub_1DCD21954(v139, v138);
              sub_1DCD21954(v137, v136);
              sub_1DCD67564(v115, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
              uint64_t v114 = (uint64_t)v111;
            }
            sub_1DCD2479C(v114, &qword_1EAB02630);
            sub_1DCD67564((uint64_t)v89, type metadata accessor for Com_Apple_Visualintelligence_StorefrontListSnippet);
            sub_1DCD67564((uint64_t)v127, type metadata accessor for Com_Apple_Visualintelligence_AspireResult);
            return v39;
          }
          sub_1DCD67564(v86, type metadata accessor for Com_Apple_Visualintelligence_AspireResult.OneOf_Snippet);
          uint64_t v90 = v121;
        }
        *uint64_t v89 = v91;
        sub_1DD047BE8();
        goto LABEL_37;
      }
    }
  }
  sub_1DCD67510();
  char v64 = (void *)swift_allocError();
  *uint64_t v65 = 2;
  swift_willThrow();
  id v66 = v64;
  unint64_t v67 = sub_1DCE9EB74(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v69 = v67[2];
  unint64_t v68 = v67[3];
  if (v69 >= v68 >> 1) {
    unint64_t v67 = sub_1DCE9EB74((void *)(v68 > 1), v69 + 1, 1, v67);
  }
  id v39 = v141;
  v67[2] = v69 + 1;
  v67[v69 + 4] = v64;

  return v39;
}

unint64_t sub_1DCD67510()
{
  unint64_t result = qword_1EAB02650;
  if (!qword_1EAB02650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02650);
  }
  return result;
}

uint64_t sub_1DCD67564(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD675C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCD6760C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD67674(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DCD676DC()
{
  unint64_t result = qword_1EAB02678;
  if (!qword_1EAB02678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02678);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ServerSearchProcessorError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD677FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerSearchProcessorError()
{
  return &type metadata for ServerSearchProcessorError;
}

unint64_t sub_1DCD67838()
{
  unint64_t result = qword_1EAB02688;
  if (!qword_1EAB02688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02688);
  }
  return result;
}

unint64_t sub_1DCD6788C()
{
  unint64_t result = qword_1EAB02690;
  if (!qword_1EAB02690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02690);
  }
  return result;
}

unint64_t sub_1DCD678E0()
{
  unint64_t result = qword_1EBE82BF8;
  if (!qword_1EBE82BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82BF8);
  }
  return result;
}

uint64_t sub_1DCD67934@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD6335C(a1);
}

void *sub_1DCD6794C(unsigned char *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    void *v4 = *a2;
    unsigned int v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0) + 20);
    uint64_t v8 = (char *)v4 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DD047BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    *((unsigned char *)v4 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1DCD67A64(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0) + 20);
  uint64_t v2 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_bridgeObjectRelease();
}

unsigned char *sub_1DCD67AF0(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0) + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_1DCD67BB8(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0) + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  a1[a3[5]] = a2[a3[5]];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *sub_1DCD67C90(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0) + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

unsigned char *sub_1DCD67D54(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0) + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCD67E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD67E34);
}

uint64_t sub_1DCD67E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DCD67EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD67F08);
}

uint64_t sub_1DCD67F08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CustomDetectionDomainAssignmentRule()
{
  uint64_t result = qword_1EAB02698;
  if (!qword_1EAB02698) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCD68010()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_CustomDetectionDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCD680BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_1DD048068();
  id v45 = *(void (**)(char *, uint64_t))(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD32C3C(a1, (uint64_t)v72);
  if (*(unsigned char *)(a2 + 104) == 1)
  {
    uint64_t v18 = a4;
LABEL_18:
    sub_1DCD32C3C((uint64_t)v72, v18);
    return sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  }
  uint64_t v44 = a4;
  uint64_t v19 = type metadata accessor for DomainAssignmentSignals(0);
  sub_1DCD68B64(a3 + *(int *)(v19 + 24), (uint64_t)v17);
  uint64_t v20 = type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v17, 1, v20) == 1)
  {
    sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
    sub_1DCD68BCC((uint64_t)v17);
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = *(void *)&v17[*(int *)(v20 + 32)];
    sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
    swift_bridgeObjectRetain();
    sub_1DCD68C2C((uint64_t)v17);
  }
  uint64_t v22 = sub_1DCD68800(v21);
  swift_bridgeObjectRelease();
  if (!*(void *)(v22 + 16))
  {
    sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v23 = type metadata accessor for CustomDetectionDomainAssignmentRule();
  *(void *)&v66[0] = *(void *)&v4[*(int *)(v23 + 28)];
  swift_bridgeObjectRetain();
  sub_1DCDD51EC(v22, (uint64_t *)v66, (uint64_t)&v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v69 + 1))
  {
    sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
    if (*v4 == 1)
    {
      sub_1DCDB40EC((uint64_t)v14);
      sub_1DCDB4300((uint64_t)v11);
      uint64_t v29 = (void (*)(char *, uint64_t))*((void *)v45 + 1);
      v29(v14, v9);
      sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
      sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
      uint64_t v30 = sub_1DD048048();
      os_log_type_t v31 = sub_1DD048848();
      if (os_log_type_enabled(v30, v31))
      {
        id v45 = v29;
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        *(void *)&v59[0] = v33;
        *(_DWORD *)uint64_t v32 = 136315138;
        sub_1DCD32C3C((uint64_t)v72, (uint64_t)v66);
        if (sub_1DCD32CA4((uint64_t)v66) == 1)
        {
          uint64_t v34 = 0;
          unint64_t v35 = 0xE000000000000000;
        }
        else
        {
          uint64_t v34 = sub_1DCD9C35C(v66[0]);
          unint64_t v35 = v42;
        }
        *(void *)&v57[0] = sub_1DCED7FA0(v34, v35, (uint64_t *)v59);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
        sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
        _os_log_impl(&dword_1DCCF9000, v30, v31, "No satisfied customized detector label, reject %s", v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v33, -1, -1);
        MEMORY[0x1E01B07E0](v32, -1, -1);

        v45(v11, v9);
      }
      else
      {
        sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
        sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);

        v29(v11, v9);
      }
      uint64_t v43 = v44;
      sub_1DCD5DA7C((uint64_t)v66);
      id v41 = v66;
      uint64_t v40 = v43;
      return sub_1DCD32C3C((uint64_t)v41, v40);
    }
LABEL_17:
    uint64_t v18 = v44;
    goto LABEL_18;
  }
  char v24 = v4[*(int *)(v23 + 20)];
  LOBYTE(v59[0]) = v24;
  *(_OWORD *)((char *)v59 + 8) = 0u;
  *(_OWORD *)((char *)&v59[1] + 8) = 0u;
  BYTE8(v59[2]) = 0;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v62 = v69;
  long long v63 = v70;
  LODWORD(v64) = 0;
  DWORD1(v64) = v71;
  *((void *)&v64 + 1) = 0;
  LOWORD(v65[0]) = 0;
  *(void *)((char *)&v65[1] + 5) = 0;
  *((void *)&v65[0] + 1) = 0;
  *(void *)&v65[1] = 0;
  sub_1DCD32C3C((uint64_t)v72, (uint64_t)v66);
  if (sub_1DCD32CA4((uint64_t)v66) == 1) {
    goto LABEL_23;
  }
  uint64_t v25 = sub_1DCD9C35C(v66[0]);
  uint64_t v27 = v26;
  if (v25 != sub_1DCD9C35C(v24) || v27 != v28)
  {
    char v37 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_20;
    }
    sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
LABEL_23:
    long long v54 = v63;
    long long v55 = v64;
    v56[0] = v65[0];
    *(_OWORD *)((char *)v56 + 13) = *(_OWORD *)((char *)v65 + 13);
    long long v50 = v59[2];
    long long v51 = v60;
    long long v52 = v61;
    long long v53 = v62;
    long long v38 = v59[0];
    long long v39 = v59[1];
    goto LABEL_24;
  }
  swift_bridgeObjectRelease_n();
LABEL_20:
  void v57[6] = v66[6];
  v57[7] = v66[7];
  v58[0] = v67[0];
  *(_OWORD *)((char *)v58 + 13) = *(_OWORD *)((char *)v67 + 13);
  v57[2] = v66[2];
  v57[3] = v66[3];
  v57[4] = v66[4];
  v57[5] = v66[5];
  v57[0] = v66[0];
  v57[1] = v66[1];
  long long v54 = v63;
  long long v55 = v64;
  v56[0] = v65[0];
  *(_OWORD *)((char *)v56 + 13) = *(_OWORD *)((char *)v65 + 13);
  long long v50 = v59[2];
  long long v51 = v60;
  long long v52 = v61;
  long long v53 = v62;
  long long v48 = v59[0];
  long long v49 = v59[1];
  sub_1DCF22BB0((uint64_t)v57, &v48, (uint64_t)v46);
  sub_1DCD5D8A8((uint64_t)v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
  sub_1DCD32DD4((uint64_t)v59);
  long long v54 = v46[6];
  long long v55 = v46[7];
  v56[0] = v47[0];
  *(_OWORD *)((char *)v56 + 13) = *(_OWORD *)((char *)v47 + 13);
  long long v50 = v46[2];
  long long v51 = v46[3];
  long long v52 = v46[4];
  long long v53 = v46[5];
  long long v38 = v46[0];
  long long v39 = v46[1];
LABEL_24:
  long long v48 = v38;
  long long v49 = v39;
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v48);
  sub_1DCD32C3C((uint64_t)&v48, (uint64_t)v57);
  uint64_t v40 = v44;
  id v41 = v57;
  return sub_1DCD32C3C((uint64_t)v41, v40);
}

uint64_t sub_1DCD68800(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x1F4188790](v3);
  int v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = type metadata accessor for CustomDetectionDomainAssignmentRule();
  uint64_t v7 = sub_1DCD9C35C(*(unsigned char *)(v1 + *(int *)(v6 + 20)));
  if (!*(void *)(a1 + 16) || (unint64_t v9 = sub_1DCEAD1A4(v7, v8), (v10 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 8 * v9);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v30 = v11 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v31 = (unint64_t)(v15 + 63) >> 6;
  unint64_t v18 = MEMORY[0x1E4FBC860];
  if ((v16 & v14) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v13 << 6))
  {
    uint64_t v24 = *(void *)(*(void *)(v11 + 48) + 16 * i + 8);
    double v25 = MEMORY[0x1F4188790](result);
    *(&v29 - 4) = v26;
    *(&v29 - 3) = v24;
    *((double *)&v29 - 2) = v25;
    sub_1DCD68CE8();
    swift_bridgeObjectRetain();
    sub_1DD047E78();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v18 = sub_1DCE9F188(0, *(void *)(v18 + 16) + 1, 1, v18);
    }
    unint64_t v28 = *(void *)(v18 + 16);
    unint64_t v27 = *(void *)(v18 + 24);
    if (v28 >= v27 >> 1) {
      unint64_t v18 = sub_1DCE9F188(v27 > 1, v28 + 1, 1, v18);
    }
    *(void *)(v18 + 16) = v28 + 1;
    uint64_t result = sub_1DCD68D40((uint64_t)v5, v18+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v28);
    if (v17) {
      goto LABEL_7;
    }
LABEL_8:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v13 >= v31) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v30 + 8 * v13);
    if (!v22) {
      break;
    }
LABEL_18:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v13 + 1;
  if (v13 + 1 >= v31) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v13 + 2;
  if (v13 + 2 >= v31) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v13 + 3;
  if (v13 + 3 >= v31)
  {
LABEL_32:
    swift_release();
    return v18;
  }
  unint64_t v22 = *(void *)(v30 + 8 * v23);
  if (v22)
  {
LABEL_17:
    int64_t v13 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v31) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v30 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1DCD68B58()
{
  return *v0;
}

uint64_t sub_1DCD68B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD68BCC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCD68C2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

float sub_1DCD68C88(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  double v5 = *(double *)(v1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v3;
  float result = v5;
  *(float *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1DCD68CE8()
{
  unint64_t result = qword_1EBE84DE8;
  if (!qword_1EBE84DE8)
  {
    type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84DE8);
  }
  return result;
}

uint64_t sub_1DCD68D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD68DA4()
{
  return sub_1DD046248() & 1;
}

uint64_t sub_1DCD68DD8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StringMatching()
{
  return self;
}

uint64_t sub_1DCD68E0C(unint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v10 = sub_1DD048508();
  unint64_t v66 = (unint64_t)a3;
  uint64_t v11 = sub_1DD048508();
  if (__OFADD__(v11, 1)) {
    goto LABEL_108;
  }
  uint64_t v5 = v11;
  uint64_t v12 = sub_1DCDE1DD0(0, v11 + 1);
  if (__OFADD__(v10, 1)) {
    goto LABEL_109;
  }
  uint64_t v13 = sub_1DCDE1FB0(v12, v10 + 1);
  if (v10 < 0) {
    goto LABEL_110;
  }
  unint64_t v4 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_111;
  }
  if (!*(void *)(v4 + 16)) {
    goto LABEL_112;
  }
LABEL_6:
  uint64_t v6 = v4 + 32;
  a3 = *(void **)(v4 + 32);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 32) = a3;
  if (isUniquelyReferenced_nonNull_native)
  {
    if (a3[2]) {
      goto LABEL_8;
    }
  }
  else
  {
    while (1)
    {
      a3 = sub_1DCEC1C14(a3);
      if (!a3[2]) {
        break;
      }
LABEL_8:
      unint64_t v62 = a4;
      a3[4] = 0;
      *(void *)uint64_t v6 = a3;
      if (!v10)
      {
LABEL_17:
        if (v5 < 0) {
          goto LABEL_115;
        }
        if (!*(void *)(v4 + 16)) {
          goto LABEL_116;
        }
        a3 = *(void **)v6;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v6 = a3;
        if ((result & 1) == 0) {
          goto LABEL_117;
        }
        goto LABEL_20;
      }
      uint64_t v15 = 0;
      a4 = v4 + 40;
      while (1)
      {
        uint64_t v16 = v15 + 1;
        if ((unint64_t)(v15 + 1) >= *(void *)(v4 + 16)) {
          break;
        }
        a3 = *(void **)(a4 + 8 * v15);
        char v17 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(a4 + 8 * v15) = a3;
        if (v17)
        {
          if (!a3[2]) {
            goto LABEL_16;
          }
        }
        else
        {
          a3 = sub_1DCEC1C14(a3);
          *(void *)(a4 + 8 * v15) = a3;
          if (!a3[2])
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        a3[4] = v16;
        ++v15;
        if (v10 == v16) {
          goto LABEL_17;
        }
      }
LABEL_105:
      __break(1u);
LABEL_106:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_107:
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      unint64_t v4 = (unint64_t)sub_1DCEC1C78((void *)v4);
      if (*(void *)(v4 + 16)) {
        goto LABEL_6;
      }
LABEL_112:
      __break(1u);
    }
  }
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  uint64_t result = (uint64_t)sub_1DCEC1C14(a3);
  a3 = (void *)result;
LABEL_20:
  unint64_t v19 = v62;
  if (!a3[2])
  {
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  a3[4] = 0;
  *(void *)uint64_t v6 = a3;
  if (v5)
  {
    a4 = 0;
    do
    {
      if (!*(void *)(v4 + 16))
      {
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
        goto LABEL_105;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *(void *)uint64_t v6 = a3;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DCEC1C14(a3);
        a3 = (void *)result;
      }
      unint64_t v20 = a4 + 1;
      if (a4 + 1 >= a3[2]) {
        goto LABEL_104;
      }
      a3[a4 + 5] = v20;
      *(void *)uint64_t v6 = a3;
      ++a4;
    }
    while (v5 != v20);
    if (v10 >= 1 && v5 >= 1)
    {
      uint64_t v64 = v6;
      unint64_t v65 = v4;
      if ((a2 & 0x2000000000000000) != 0) {
        uint64_t v21 = HIBYTE(a2) & 0xF;
      }
      else {
        uint64_t v21 = a1 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v22 = HIBYTE(v62) & 0xF;
      if ((v62 & 0x2000000000000000) == 0) {
        uint64_t v22 = v66 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v60 = v22;
      uint64_t v61 = v21;
      unint64_t v4 = 1;
      uint64_t v59 = v10;
      uint64_t v63 = v5;
      while (2)
      {
        unint64_t v68 = v4 - 1;
        uint64_t v10 = 1;
        do
        {
          swift_bridgeObjectRetain();
          uint64_t v23 = sub_1DD048508();
          if (v23)
          {
            uint64_t v6 = v23;
            if (v23 < 1)
            {
              uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026C8);
              uint64_t v24 = (void *)swift_allocObject();
              int64_t v25 = _swift_stdlib_malloc_size(v24);
              uint64_t v26 = v25 - 32;
              if (v25 < 32) {
                uint64_t v26 = v25 - 17;
              }
              void v24[2] = v6;
              void v24[3] = 2 * (v26 >> 4);
            }
            unint64_t v69 = a1;
            unint64_t v70 = a2;
            a4 = v6 & ~(v6 >> 63);
            uint64_t v71 = 0;
            uint64_t v72 = v61;
            swift_bridgeObjectRetain();
            uint64_t v27 = 4;
            while (a4)
            {
              a3 = &v69;
              uint64_t v28 = sub_1DD048568();
              if (!v29) {
                goto LABEL_106;
              }
              uint64_t v30 = &v24[v27];
              *uint64_t v30 = v28;
              v30[1] = v29;
              --a4;
              v27 += 2;
              if (!--v6)
              {
                swift_bridgeObjectRelease();
                goto LABEL_50;
              }
            }
            __break(1u);
            goto LABEL_89;
          }
          uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
LABEL_50:
          swift_bridgeObjectRelease();
          if (v4 > v24[2])
          {
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
            goto LABEL_103;
          }
          uint64_t v5 = a2;
          int64_t v31 = &v24[2 * v68];
          uint64_t v6 = v31[4];
          a2 = v31[5];
          swift_bridgeObjectRetain();
          swift_release();
          swift_bridgeObjectRetain();
          uint64_t v32 = sub_1DD048508();
          if (v32)
          {
            uint64_t v33 = v32;
            if (v32 < 1)
            {
              uint64_t v34 = (void *)MEMORY[0x1E4FBC860];
            }
            else
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026C8);
              uint64_t v34 = (void *)swift_allocObject();
              int64_t v35 = _swift_stdlib_malloc_size(v34);
              uint64_t v36 = v35 - 32;
              if (v35 < 32) {
                uint64_t v36 = v35 - 17;
              }
              v34[2] = v33;
              v34[3] = 2 * (v36 >> 4);
            }
            unint64_t v69 = v66;
            unint64_t v70 = v19;
            a4 = v33 & ~(v33 >> 63);
            uint64_t v71 = 0;
            uint64_t v72 = v60;
            swift_bridgeObjectRetain();
            uint64_t v37 = 4;
            while (a4)
            {
              a3 = &v69;
              uint64_t v38 = sub_1DD048568();
              if (!v39) {
                goto LABEL_107;
              }
              uint64_t v40 = &v34[v37];
              *uint64_t v40 = v38;
              v40[1] = v39;
              --a4;
              v37 += 2;
              if (!--v33)
              {
                swift_bridgeObjectRelease();
                unint64_t v19 = v62;
                goto LABEL_63;
              }
            }
LABEL_89:
            __break(1u);
            goto LABEL_90;
          }
          uint64_t v34 = (void *)MEMORY[0x1E4FBC860];
LABEL_63:
          swift_bridgeObjectRelease();
          a4 = v10 - 1;
          if ((unint64_t)(v10 - 1) >= v34[2]) {
            goto LABEL_94;
          }
          id v41 = &v34[2 * a4];
          uint64_t v42 = v41[4];
          a3 = (void *)v41[5];
          swift_bridgeObjectRetain();
          swift_release();
          BOOL v43 = v6 == v42 && a2 == (void)a3;
          if (v43)
          {
            swift_bridgeObjectRelease_n();
            BOOL v45 = 0;
          }
          else
          {
            char v44 = sub_1DD048FA8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            BOOL v45 = (v44 & 1) == 0;
          }
          uint64_t v6 = v64;
          unint64_t v46 = *(void *)(v65 + 16);
          if (v4 > v46) {
            goto LABEL_95;
          }
          uint64_t v47 = *(void *)(v64 + 8 * v68);
          if ((unint64_t)v10 >= *(void *)(v47 + 16)) {
            goto LABEL_96;
          }
          uint64_t v48 = v47 + 32;
          uint64_t v49 = *(void *)(v47 + 32 + 8 * v10);
          BOOL v50 = __OFADD__(v49, 1);
          int64_t v51 = v49 + 1;
          if (v50) {
            goto LABEL_97;
          }
          if (v4 >= v46) {
            goto LABEL_98;
          }
          a3 = *(void **)(v64 + 8 * v4);
          if (a4 >= a3[2]) {
            goto LABEL_99;
          }
          uint64_t v52 = a3[a4 + 4];
          BOOL v50 = __OFADD__(v52, 1);
          int64_t v53 = v52 + 1;
          if (v50) {
            goto LABEL_100;
          }
          uint64_t v54 = *(void *)(v48 + 8 * a4);
          BOOL v50 = __OFADD__(v54, v45);
          int64_t v55 = v54 + v45;
          if (v50) {
            goto LABEL_101;
          }
          a2 = v5;
          if (v53 < v51) {
            int64_t v51 = v53;
          }
          if (v55 >= v51) {
            a4 = v51;
          }
          else {
            a4 = v55;
          }
          char v56 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v64 + 8 * v4) = a3;
          if ((v56 & 1) == 0)
          {
            a3 = sub_1DCEC1C14(a3);
            *(void *)(v64 + 8 * v4) = a3;
          }
          uint64_t v5 = v63;
          if ((unint64_t)v10 >= a3[2]) {
            goto LABEL_102;
          }
          a3[v10 + 4] = a4;
          BOOL v43 = v10++ == v63;
        }
        while (!v43);
        uint64_t v10 = v59;
        BOOL v43 = v4++ == v59;
        if (!v43) {
          continue;
        }
        break;
      }
LABEL_90:
      uint64_t result = v65;
      if (v10 >= *(void *)(v65 + 16)) {
        goto LABEL_119;
      }
      uint64_t v57 = *(void *)(v6 + 8 * v10);
      if (v5 < *(void *)(v57 + 16))
      {
        uint64_t v58 = *(void *)(v57 + 8 * v5 + 32);
        swift_bridgeObjectRelease();
        return v58;
      }
      goto LABEL_120;
    }
  }
LABEL_121:
  __break(1u);
  return result;
}

uint64_t sub_1DCD69448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  if (v4 >= v3) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = a2;
  }
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t result = *(void *)(v5 + 16);
  if (!v7) {
    return result;
  }
  uint64_t v9 = v7 - 1;
  if (v7 - 1 >= a3) {
    uint64_t v9 = a3;
  }
  BOOL v10 = __OFADD__(v7, v9);
  uint64_t v11 = v7 + v9;
  if (v10) {
    goto LABEL_41;
  }
  if (result < v11) {
    uint64_t v11 = *(void *)(v5 + 16);
  }
  uint64_t v24 = v11;
  if (v11 < v7) {
    goto LABEL_42;
  }
  uint64_t v12 = (2 * v7) | 1;
  uint64_t v25 = -result;
  uint64_t v13 = *(void *)(v5 + 16);
  uint64_t v23 = v13;
  while (2)
  {
    if (__OFSUB__(result, v7))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (result - v7 < 0)
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    unint64_t v14 = 0;
    uint64_t v26 = v12;
    while (1)
    {
      if ((uint64_t)(v7 + v14) < (uint64_t)v14)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      unint64_t v15 = *(void *)(v5 + 16);
      if (v15 < v14 || (uint64_t)v15 < (uint64_t)(v7 + v14)) {
        goto LABEL_37;
      }
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026A8);
      sub_1DCD52850(&qword_1EAB026B0, &qword_1EAB026A8);
      char v17 = (void *)sub_1DD048618();
      unint64_t v19 = v18;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026B8);
      sub_1DCD52850(&qword_1EAB026C0, &qword_1EAB026B8);
      unint64_t v20 = sub_1DD048618();
      uint64_t v22 = sub_1DCD68E0C(v20, v21, v17, v19);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v22 < v13)
      {
        uint64_t v13 = v22;
        if (!v22) {
          return 0;
        }
      }
      if (!(v25 + v7 + v14)) {
        break;
      }
      ++v14;
      v12 += 2;
      if (__OFADD__(v14, v7)) {
        goto LABEL_38;
      }
    }
    if (v7 != v24)
    {
      uint64_t v12 = v26 + 2;
      BOOL v10 = __OFADD__(v7++, 1);
      uint64_t result = v23;
      if (!v10) {
        continue;
      }
      __break(1u);
      return 0;
    }
    return v13;
  }
}

uint64_t type metadata accessor for GeoRerankingUtil()
{
  return self;
}

id sub_1DCD696C4(void *a1, double a2)
{
  objc_msgSend(a1, sel_course);
  double v5 = v4 * 3.14159265 / 180.0;
  objc_msgSend(a1, sel_coordinate);
  double v7 = v6 * 3.14159265 / 180.0;
  objc_msgSend(a1, sel_coordinate);
  double v17 = v8 * 3.14159265 / 180.0;
  __double2 v9 = __sincos_stret(v7);
  __double2 v10 = __sincos_stret(a2 / 6371000.0);
  __double2 v11 = __sincos_stret(v5);
  long double v12 = asin(v10.__cosval * v9.__sinval + v11.__cosval * (v10.__sinval * v9.__cosval));
  long double v13 = sin(v12);
  double v14 = (atan2(v10.__sinval * v11.__sinval * v9.__cosval, v10.__cosval - v9.__sinval * v13) + v17) * 180.0 / 3.14159265;
  id v15 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
  return objc_msgSend(v15, sel_initWithLatitude_longitude_, (double)(v12 * 180.0 / 3.14159265), v14);
}

uint64_t sub_1DCD69828(uint64_t *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026D0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v78 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v77 = (uint64_t)&v69 - v7;
  uint64_t v8 = type metadata accessor for Com_Apple_Visualintelligence_LatLng(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  __double2 v11 = (double *)((char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v75 = (double *)((char *)&v69 - v13);
  uint64_t v76 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  uint64_t v71 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  id v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026D8);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unint64_t v70 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026E0);
  MEMORY[0x1F4188790](v19 - 8);
  unint64_t v21 = (unint64_t *)((char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (unint64_t *)((char *)&v69 - v23);
  uint64_t v25 = *a1;
  uint64_t v26 = v11;
  uint64_t v27 = v25;
  uint64_t v85 = sub_1DCDE1EBC(*(void *)(v25 + 16), 0.0);
  id v28 = sub_1DCD696C4(a2, 10.0);
  unint64_t v29 = *(void *)(v27 + 16);
  uint64_t v81 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  id v79 = v28;
  uint64_t v80 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v84 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v31 = v29;
  unint64_t v32 = 0;
  unint64_t v72 = v29;
  unint64_t v73 = v21;
  unint64_t v74 = v26;
  if (v29) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v33 = 1;
  for (unint64_t i = v31; ; unint64_t i = v32 + 1)
  {
    (*v81)(v21, v33, 1, v16);
    sub_1DCD6A848((uint64_t)v21, (uint64_t)v24);
    if ((*v80)(v24, 1, v16) == 1) {
      goto LABEL_19;
    }
    unint64_t v82 = *v24;
    sub_1DCD6A9D8((uint64_t)v24 + *(int *)(v16 + 48), (uint64_t)v15, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    uint64_t v37 = *(int *)(v76 + 20);
    uint64_t v38 = *(void *)&v15[v37]
        + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__location;
    swift_beginAccess();
    uint64_t v39 = v38;
    uint64_t v40 = v77;
    sub_1DCD6A8B0(v39, v77);
    id v41 = *v84;
    unsigned int v42 = (*v84)(v40, 1, v8);
    unint64_t v83 = i;
    BOOL v43 = v75;
    if (v42 == 1)
    {
      *uint64_t v75 = 0.0;
      v43[1] = 0.0;
      sub_1DD047BE8();
      sub_1DCD6A918(v40);
    }
    else
    {
      sub_1DCD6A9D8(v40, (uint64_t)v75, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    }
    char v44 = (void *)v85;
    double v45 = *v43;
    sub_1DCD6A978((uint64_t)v43, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    uint64_t v46 = *(void *)&v15[v37]
        + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__location;
    swift_beginAccess();
    uint64_t v47 = v46;
    uint64_t v48 = v78;
    sub_1DCD6A8B0(v47, v78);
    if (v41(v48, 1, v8) == 1)
    {
      uint64_t v49 = v74;
      *unint64_t v74 = 0.0;
      v49[1] = 0.0;
      sub_1DD047BE8();
      sub_1DCD6A918(v48);
    }
    else
    {
      uint64_t v49 = v74;
      sub_1DCD6A9D8(v48, (uint64_t)v74, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    }
    double v50 = v49[1];
    sub_1DCD6A978((uint64_t)v49, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E5F0]), sel_initWithLatitude_longitude_, v45, v50);
    id v52 = v79;
    objc_msgSend(v79, sel_coordinate);
    long double v54 = v53 * 3.14159265 / 180.0;
    objc_msgSend(v52, sel_coordinate);
    double v56 = v55 * 3.14159265 / 180.0;
    objc_msgSend(v51, sel_coordinate);
    long double v58 = v57 * 3.14159265 / 180.0;
    objc_msgSend(v51, sel_coordinate);
    double v60 = v59 * 3.14159265 / 180.0 - v56;
    long double v61 = sin((v58 - v54) * 0.5);
    long double v62 = v61 * v61;
    double v63 = cos(v54);
    long double v64 = v63 * cos(v58);
    long double v65 = sin(v60 * 0.5);
    long double v66 = atan2(sqrt(v62 + v65 * (v64 * v65)), sqrt(1.0 - (v62 + v65 * (v64 * v65))));
    long double v67 = exp(v66 * 12742000.0 * (v66 * 12742000.0) / -20000.0);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
      unint64_t v68 = v82;
      unint64_t v32 = v83;
      if ((v82 & 0x8000000000000000) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_1DCEC1C64(v44);
      char v44 = (void *)result;
      unint64_t v68 = v82;
      unint64_t v32 = v83;
      if ((v82 & 0x8000000000000000) != 0)
      {
LABEL_18:
        __break(1u);
LABEL_19:

        swift_bridgeObjectRelease();
        return v85;
      }
    }
    if (v68 >= v44[2]) {
      break;
    }
    uint64_t v85 = (uint64_t)v44;
    *(long double *)&v44[v68 + 4] = v67;

    uint64_t result = sub_1DCD6A978((uint64_t)v15, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    unint64_t v21 = v73;
    unint64_t v31 = v72;
    if (v32 == v72) {
      goto LABEL_2;
    }
LABEL_3:
    if (v32 >= *(void *)(v27 + 16)) {
      goto LABEL_21;
    }
    uint64_t v35 = (uint64_t)&v70[*(int *)(v16 + 48)];
    sub_1DCD6A7E4(v27+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v32, v35);
    uint64_t v36 = (uint64_t)v21 + *(int *)(v16 + 48);
    *unint64_t v21 = v32;
    sub_1DCD6A9D8(v35, v36, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    uint64_t v33 = 0;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1DCD69FF0(uint64_t *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026D0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v85 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v84 = (uint64_t)&v72 - v7;
  uint64_t v83 = type metadata accessor for Com_Apple_Visualintelligence_LatLng(0);
  uint64_t v8 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v81 = (double *)((char *)&v72 - v12);
  uint64_t v82 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  uint64_t v75 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026D8);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v74 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026E0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (unint64_t *)((char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (uint64_t *)((char *)&v72 - v22);
  uint64_t v24 = *a1;
  uint64_t v25 = (void *)sub_1DCDE1EBC(*(void *)(v24 + 16), 0.0);
  objc_msgSend(a2, sel_course);
  if (v26 < 0.0) {
    return (uint64_t)v25;
  }
  uint64_t v27 = v16;
  unint64_t v28 = *(void *)(v24 + 16);
  uint64_t v80 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  id v79 = (unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48);
  uint64_t v88 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v73 = v24;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v30 = 0;
  unint64_t v76 = v28;
  uint64_t v78 = v20;
  uint64_t v77 = v23;
  if (v28) {
    goto LABEL_4;
  }
LABEL_3:
  for (uint64_t i = 1; ; uint64_t i = 0)
  {
    (*v80)(v20, i, 1, v15);
    sub_1DCD6A848((uint64_t)v20, (uint64_t)v23);
    if ((*v79)(v23, 1, v15) == 1) {
      goto LABEL_22;
    }
    unint64_t v86 = v28;
    uint64_t v87 = v25;
    uint64_t v34 = v10;
    uint64_t v35 = a2;
    unint64_t v36 = *v23;
    sub_1DCD6A9D8((uint64_t)v23 + *(int *)(v15 + 48), (uint64_t)v14, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    uint64_t v37 = *(int *)(v82 + 20);
    uint64_t v38 = *(void *)&v14[v37]
        + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__location;
    swift_beginAccess();
    uint64_t v39 = v38;
    uint64_t v40 = v84;
    sub_1DCD6A8B0(v39, v84);
    id v41 = *v88;
    uint64_t v42 = v83;
    if ((*v88)(v40, 1, v83) == 1)
    {
      uint64_t v43 = v15;
      char v44 = v14;
      unint64_t v45 = v36;
      uint64_t v46 = v81;
      *uint64_t v81 = 0.0;
      v46[1] = 0.0;
      sub_1DD047BE8();
      uint64_t v47 = v40;
      uint64_t v48 = v46;
      unint64_t v36 = v45;
      uint64_t v14 = v44;
      uint64_t v15 = v43;
      sub_1DCD6A918(v47);
    }
    else
    {
      uint64_t v49 = v40;
      uint64_t v48 = v81;
      sub_1DCD6A9D8(v49, (uint64_t)v81, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    }
    double v50 = *v48;
    sub_1DCD6A978((uint64_t)v48, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    uint64_t v51 = *(void *)&v14[v37]
        + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__location;
    swift_beginAccess();
    uint64_t v52 = v51;
    uint64_t v53 = v85;
    sub_1DCD6A8B0(v52, v85);
    if (v41(v53, 1, v42) == 1)
    {
      uint64_t v10 = v34;
      *(void *)uint64_t v34 = 0;
      *((void *)v34 + 1) = 0;
      sub_1DD047BE8();
      sub_1DCD6A918(v53);
    }
    else
    {
      uint64_t v10 = v34;
      sub_1DCD6A9D8(v53, (uint64_t)v34, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    }
    a2 = v35;
    uint64_t v20 = v78;
    uint64_t v23 = v77;
    uint64_t v25 = v87;
    double v54 = *((double *)v10 + 1);
    sub_1DCD6A978((uint64_t)v10, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
    id v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E5F0]), sel_initWithLatitude_longitude_, v50, v54);
    objc_msgSend(v55, sel_coordinate);
    double v57 = v56;
    objc_msgSend(a2, sel_coordinate);
    double v59 = v57 - v58;
    objc_msgSend(v55, sel_coordinate);
    double v61 = v60;
    objc_msgSend(a2, sel_coordinate);
    double v63 = v61 - v62;
    double v64 = sqrt(v59 * v59 + v63 * v63);
    if (v64 == 0.0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      double v65 = 0.0;
      if (result) {
        goto LABEL_15;
      }
    }
    else
    {
      double v66 = v63 / v64;
      double v67 = v59 / v64;
      objc_msgSend(a2, sel_course);
      double v69 = cos((90.0 - v68) * 3.14159265 / 180.0);
      objc_msgSend(a2, sel_course);
      long double v71 = sin((90.0 - v70) * 3.14159265 / 180.0);
      double v65 = acos(v66 * v69 + v67 * v71) * 180.0 / 3.14159265;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result)
      {
LABEL_15:
        if ((v36 & 0x8000000000000000) != 0) {
          goto LABEL_21;
        }
        goto LABEL_16;
      }
    }
    uint64_t result = (uint64_t)sub_1DCEC1C64(v25);
    uint64_t v25 = (void *)result;
    if ((v36 & 0x8000000000000000) != 0)
    {
LABEL_21:
      __break(1u);
LABEL_22:
      swift_bridgeObjectRelease();
      return (uint64_t)v25;
    }
LABEL_16:
    if (v36 >= v25[2]) {
      break;
    }
    *(double *)&v25[v36 + 4] = v65 / -180.0 + 1.0;

    uint64_t result = sub_1DCD6A978((uint64_t)v14, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    unint64_t v28 = v76;
    unint64_t v30 = v86;
    if (v86 == v76) {
      goto LABEL_3;
    }
LABEL_4:
    if (v30 >= *(void *)(v73 + 16)) {
      goto LABEL_25;
    }
    uint64_t v32 = (uint64_t)&v74[*(int *)(v15 + 48)];
    sub_1DCD6A7E4(v73+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v30, v32);
    uint64_t v33 = (uint64_t)v20 + *(int *)(v15 + 48);
    *uint64_t v20 = v30;
    sub_1DCD6A9D8(v32, v33, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    unint64_t v28 = v30 + 1;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DCD6A7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD6A848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD6A8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD6A918(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCD6A978(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD6A9D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD6AA40@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v31 = sub_1DD048068();
  uint64_t v5 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v30 - v9;
  uint64_t v11 = sub_1DD047C38();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v33 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  MEMORY[0x1F4188790](v33);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(self, sel_defaultManager);
  uint64_t v15 = (void *)sub_1DD0483D8();
  id v16 = objc_msgSend(v14, sel_contentsAtPath_, v15);

  if (v16)
  {
    v30[3] = v7;
    v30[4] = a1;
    uint64_t v17 = sub_1DD0464E8();
    unint64_t v19 = v18;

    uint64_t v25 = sub_1DCF47ED8(v17, v19);
    uint64_t v26 = v17;
    unint64_t v28 = v27;
    sub_1DCD21954(v26, v19);

    uint64_t v36 = v25;
    unint64_t v37 = v28;
    uint64_t v35 = 0;
    memset(v34, 0, sizeof(v34));
    sub_1DCD33F64(v25, v28);
    sub_1DD047C28();
    sub_1DCD6C1AC();
    sub_1DD047E38();
    sub_1DCD21954(v25, v28);
    return sub_1DCD6C204((uint64_t)v13, (uint64_t)v32);
  }
  else
  {

    sub_1DCDB40EC((uint64_t)v10);
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_1DD048048();
    os_log_type_t v21 = sub_1DD048858();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(void *)&v34[0] = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1DCED7FA0(a1, a2, (uint64_t *)v34);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v20, v21, "Failed to load data at path %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v23, -1, -1);
      MEMORY[0x1E01B07E0](v22, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v31);
    uint64_t v24 = v32;
    *uint64_t v32 = MEMORY[0x1E4FBC860];
    *((_DWORD *)v24 + 2) = 0;
    return sub_1DD047BE8();
  }
}

void sub_1DCD6B08C(uint64_t *a1@<X0>, int *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v53 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DD048068();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v50 - v14;
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v50 - v17;
  MEMORY[0x1F4188790](v19);
  os_log_type_t v21 = (char *)&v50 - v20;
  uint64_t v23 = *a1;
  uint64_t v22 = a1[1];
  if (*a1)
  {
    uint64_t v51 = a1[1];
    uint64_t v24 = *(void *)(*(void *)a2 + 16);
    swift_bridgeObjectRetain();
    double v50 = a4;
    double v54 = a2;
    uint64_t v55 = v10;
    if (v24)
    {
      sub_1DCDB40EC((uint64_t)v21);
      sub_1DCDB4300((uint64_t)v18);
      uint64_t v25 = *(void (**)(char *, uint64_t))(v10 + 8);
      v25(v21, v9);
      uint64_t v26 = sub_1DD048048();
      os_log_type_t v27 = sub_1DD048848();
      if (os_log_type_enabled(v26, v27))
      {
        unint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v28 = 0;
        _os_log_impl(&dword_1DCCF9000, v26, v27, "Filter scenenet labels", v28, 2u);
        MEMORY[0x1E01B07E0](v28, -1, -1);
      }

      uint64_t v29 = ((uint64_t (*)(char *, uint64_t))v25)(v18, v9);
      MEMORY[0x1F4188790](v29);
      a2 = v54;
      *(&v50 - 2) = v52;
      *(&v50 - 1) = (uint64_t *)a2;
      uint64_t v23 = sub_1DCD9F1A4((uint64_t)sub_1DCD6B620, (uint64_t)(&v50 - 4), v23);
      a4 = v50;
    }
    uint64_t v56 = v23;
    swift_bridgeObjectRetain();
    sub_1DCD6B640(&v56);
    swift_bridgeObjectRelease();
    uint64_t v30 = v56;
    if (a2[2] <= 0) {
      goto LABEL_20;
    }
    sub_1DCDB40EC((uint64_t)v15);
    sub_1DCDB4300((uint64_t)v12);
    uint64_t v31 = a2;
    uint64_t v32 = *(void (**)(char *, uint64_t))(v55 + 8);
    v55 += 8;
    v32(v15, v9);
    uint64_t v33 = (uint64_t)v31;
    uint64_t v34 = v53;
    sub_1DCD6B6AC(v33, v53);
    uint64_t v35 = sub_1DD048048();
    os_log_type_t v36 = sub_1DD048848();
    if (os_log_type_enabled(v35, v36))
    {
      unint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = v34;
      uint64_t v39 = v37;
      *(_DWORD *)unint64_t v37 = 134217984;
      uint64_t v40 = *(int *)(v38 + 8);
      sub_1DCD6B710(v38);
      uint64_t v56 = v40;
      a4 = v50;
      sub_1DD048A28();
      _os_log_impl(&dword_1DCCF9000, v35, v36, "Limit scenenet labels to %ld", v39, 0xCu);
      MEMORY[0x1E01B07E0](v39, -1, -1);
    }
    else
    {
      sub_1DCD6B710(v34);
    }

    v32(v12, v9);
    int64_t v41 = sub_1DCEAFD50(v54[2], v30);
    uint64_t v43 = v42;
    uint64_t v45 = v44;
    unint64_t v47 = v46;
    if (v46)
    {
      sub_1DD048FD8();
      swift_unknownObjectRetain_n();
      uint64_t v48 = swift_dynamicCastClass();
      if (!v48)
      {
        swift_unknownObjectRelease();
        uint64_t v48 = MEMORY[0x1E4FBC860];
      }
      uint64_t v49 = *(void *)(v48 + 16);
      swift_release();
      if (__OFSUB__(v47 >> 1, v45))
      {
        __break(1u);
      }
      else if (v49 == (v47 >> 1) - v45)
      {
        uint64_t v30 = swift_dynamicCastClass();
        swift_unknownObjectRelease();
        if (v30)
        {
LABEL_20:
          uint64_t v22 = v51;
          goto LABEL_21;
        }
        uint64_t v30 = MEMORY[0x1E4FBC860];
LABEL_19:
        swift_unknownObjectRelease();
        goto LABEL_20;
      }
      swift_unknownObjectRelease();
    }
    uint64_t v30 = sub_1DCF4D69C(v41, v43, v45, v47);
    goto LABEL_19;
  }
  uint64_t v30 = 0;
LABEL_21:
  *a4 = v30;
  a4[1] = v22;
}

uint64_t sub_1DCD6B570(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = (void *)sub_1DD0483D8();
  id v6 = objc_msgSend(v4, sel_nodeForName_, v5);

  if (!v6) {
    return 0;
  }
  uint64_t v7 = *a3;
  swift_bridgeObjectRetain();
  char v8 = sub_1DCF8C9F0((uint64_t)objc_msgSend(v6, sel_sceneClassId), v7);
  swift_bridgeObjectRelease();

  return v8 & 1;
}

uint64_t sub_1DCD6B620(uint64_t a1)
{
  return sub_1DCD6B570(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24)) & 1;
}

uint64_t sub_1DCD6B640(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DCD743A8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1DCD6B76C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DCD6B6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD6B710(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCD6B76C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DD048F68();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v98 = *a1;
      uint64_t v99 = *a1 + 56;
      uint64_t v100 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        float v102 = *(float *)(v98 + 56 * i + 16);
        uint64_t v103 = v100;
        uint64_t v104 = v99;
        do
        {
          if (*(float *)(v104 - 40) >= v102) {
            break;
          }
          if (!v98) {
            goto LABEL_141;
          }
          uint64_t v105 = *(void *)v104;
          uint64_t v106 = *(void *)(v104 + 8);
          long long v107 = *(_OWORD *)(v104 + 24);
          long long v108 = *(_OWORD *)(v104 + 40);
          long long v109 = *(_OWORD *)(v104 - 40);
          *(_OWORD *)uint64_t v104 = *(_OWORD *)(v104 - 56);
          *(_OWORD *)(v104 + 16) = v109;
          *(_OWORD *)(v104 + 32) = *(_OWORD *)(v104 - 24);
          *(void *)(v104 + 48) = *(void *)(v104 - 8);
          *(void *)(v104 - 48) = v106;
          *(float *)(v104 - 40) = v102;
          *(_OWORD *)(v104 - 32) = v107;
          *(_OWORD *)(v104 - 16) = v108;
          *(void *)(v104 - 56) = v105;
          v104 -= 56;
        }
        while (!__CFADD__(v103++, 1));
        v99 += 56;
        --v100;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v6 = result;
  uint64_t v120 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (float *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v111 = v12;
      uint64_t v122 = v9;
      if (v13 >= 2)
      {
        uint64_t v112 = *v120;
        do
        {
          unint64_t v113 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v112) {
            goto LABEL_145;
          }
          uint64_t v114 = v111;
          uint64_t v115 = *(void *)&v111[16 * v113 + 32];
          uint64_t v116 = *(void *)&v111[16 * v13 + 24];
          sub_1DCD6BED0((float *)(v112 + 56 * v115), (float *)(v112 + 56 * *(void *)&v111[16 * v13 + 16]), v112 + 56 * v116, __dst);
          if (v1) {
            break;
          }
          if (v116 < v115) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v114 = sub_1DCD729EC((uint64_t)v114);
          }
          if (v113 >= *((void *)v114 + 2)) {
            goto LABEL_134;
          }
          uint64_t v117 = &v114[16 * v113 + 32];
          *(void *)uint64_t v117 = v115;
          *((void *)v117 + 1) = v116;
          unint64_t v118 = *((void *)v114 + 2);
          if (v13 > v118) {
            goto LABEL_135;
          }
          memmove(&v114[16 * v13 + 16], &v114[16 * v13 + 32], 16 * (v118 - v13));
          uint64_t v111 = v114;
          *((void *)v114 + 2) = v118 - 1;
          unint64_t v13 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v122 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v122 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1DD0486F8();
    *(void *)(v8 + 16) = v7;
    uint64_t v122 = v8;
    __dst = (float *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v121 = *a1 + 128;
  uint64_t v119 = *a1 + 40;
  uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v123 = v6;
  uint64_t v124 = v3;
  uint64_t v125 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      float v15 = *(float *)(v11 + 56 * v10 + 16);
      float v16 = *(float *)(v11 + 56 * v14 + 16);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (float *)(v121 + 56 * v14);
        float v18 = v15;
        while (1)
        {
          float v19 = v18;
          float v18 = *v17;
          if (v16 < v15 == v19 >= *v17) {
            break;
          }
          ++v10;
          v17 += 14;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 56 * v10;
          uint64_t v21 = v10;
          uint64_t v22 = v14;
          uint64_t v23 = 56 * v14;
          do
          {
            if (v22 != --v21)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v23;
              uint64_t v25 = v11 + v20;
              uint64_t v26 = *(void *)(v11 + v23);
              uint64_t v27 = *(void *)(v11 + v23 + 8);
              int v28 = *(_DWORD *)(v11 + v23 + 16);
              long long v29 = *(_OWORD *)(v11 + v23 + 24);
              long long v30 = *(_OWORD *)(v11 + v23 + 40);
              long long v31 = *(_OWORD *)(v11 + v20 - 40);
              long long v32 = *(_OWORD *)(v11 + v20 - 24);
              long long v33 = *(_OWORD *)(v11 + v20 - 56);
              *(void *)(v24 + 48) = *(void *)(v11 + v20 - 8);
              *(_OWORD *)(v24 + 16) = v31;
              *(_OWORD *)(v24 + 32) = v32;
              *(_OWORD *)uint64_t v24 = v33;
              *(void *)(v25 - 56) = v26;
              *(void *)(v25 - 48) = v27;
              *(_DWORD *)(v25 - 40) = v28;
              *(_OWORD *)(v25 - 32) = v29;
              *(_OWORD *)(v25 - 16) = v30;
            }
            ++v22;
            v20 -= 56;
            v23 += 56;
          }
          while (v22 < v21);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v34 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v34 >= v3) {
      uint64_t v34 = v3;
    }
    if (v34 < v14) {
      break;
    }
    if (v10 != v34)
    {
      uint64_t v35 = v119 + 56 * v10;
      do
      {
        float v36 = *(float *)(v11 + 56 * v10 + 16);
        uint64_t v37 = v14;
        uint64_t v38 = v35;
        do
        {
          if (*(float *)(v38 - 80) >= v36) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v39 = v38 - 40;
          uint64_t v40 = (_OWORD *)(v38 - 96);
          uint64_t v41 = *(void *)(v38 - 48);
          long long v43 = *(_OWORD *)(v38 - 80);
          long long v42 = *(_OWORD *)(v38 - 64);
          *(_OWORD *)(v38 - 56) = *(_OWORD *)v38;
          v38 -= 56;
          uint64_t v44 = *(void *)(v38 + 16);
          uint64_t v45 = *(void *)(v38 + 24);
          long long v46 = *(_OWORD *)(v38 + 40);
          *(_OWORD *)uint64_t v39 = *v40;
          *(_OWORD *)(v39 + 16) = v43;
          *(_OWORD *)(v39 + 32) = v42;
          *(void *)(v39 + 48) = v41;
          *(void *)(v38 - 40) = v44;
          *(void *)(v38 - 32) = v45;
          *(float *)(v38 - 24) = v36;
          *(_OWORD *)(v38 - 16) = v46;
          ++v37;
        }
        while (v10 != v37);
        ++v10;
        v35 += 56;
      }
      while (v10 != v34);
      uint64_t v10 = v34;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1DCD71FDC(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v48 = *((void *)v12 + 2);
    unint64_t v47 = *((void *)v12 + 3);
    unint64_t v13 = v48 + 1;
    uint64_t v11 = v125;
    if (v48 >= v47 >> 1)
    {
      uint64_t v97 = sub_1DCD71FDC((char *)(v47 > 1), v48 + 1, 1, v12);
      uint64_t v11 = v125;
      uint64_t v12 = v97;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v49 = v12 + 32;
    double v50 = &v12[16 * v48 + 32];
    *(void *)double v50 = v14;
    *((void *)v50 + 1) = v10;
    if (v48)
    {
      while (1)
      {
        unint64_t v51 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v56 = &v49[16 * v13];
          uint64_t v57 = *((void *)v56 - 8);
          uint64_t v58 = *((void *)v56 - 7);
          BOOL v62 = __OFSUB__(v58, v57);
          uint64_t v59 = v58 - v57;
          if (v62) {
            goto LABEL_120;
          }
          uint64_t v61 = *((void *)v56 - 6);
          uint64_t v60 = *((void *)v56 - 5);
          BOOL v62 = __OFSUB__(v60, v61);
          uint64_t v54 = v60 - v61;
          char v55 = v62;
          if (v62) {
            goto LABEL_121;
          }
          unint64_t v63 = v13 - 2;
          double v64 = &v49[16 * v13 - 32];
          uint64_t v66 = *(void *)v64;
          uint64_t v65 = *((void *)v64 + 1);
          BOOL v62 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          if (v62) {
            goto LABEL_123;
          }
          BOOL v62 = __OFADD__(v54, v67);
          uint64_t v68 = v54 + v67;
          if (v62) {
            goto LABEL_126;
          }
          if (v68 >= v59)
          {
            unint64_t v86 = &v49[16 * v51];
            uint64_t v88 = *(void *)v86;
            uint64_t v87 = *((void *)v86 + 1);
            BOOL v62 = __OFSUB__(v87, v88);
            uint64_t v89 = v87 - v88;
            if (v62) {
              goto LABEL_130;
            }
            BOOL v79 = v54 < v89;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v80 = *((void *)v12 + 4);
            uint64_t v81 = *((void *)v12 + 5);
            BOOL v62 = __OFSUB__(v81, v80);
            uint64_t v73 = v81 - v80;
            char v74 = v62;
            goto LABEL_77;
          }
          uint64_t v53 = *((void *)v12 + 4);
          uint64_t v52 = *((void *)v12 + 5);
          BOOL v62 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          char v55 = v62;
        }
        if (v55) {
          goto LABEL_122;
        }
        unint64_t v63 = v13 - 2;
        double v69 = &v49[16 * v13 - 32];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v72 = __OFSUB__(v70, v71);
        uint64_t v73 = v70 - v71;
        char v74 = v72;
        if (v72) {
          goto LABEL_125;
        }
        uint64_t v75 = &v49[16 * v51];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v62 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v62) {
          goto LABEL_128;
        }
        if (__OFADD__(v73, v78)) {
          goto LABEL_129;
        }
        if (v73 + v78 >= v54)
        {
          BOOL v79 = v54 < v78;
LABEL_83:
          if (v79) {
            unint64_t v51 = v63;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v74) {
          goto LABEL_124;
        }
        uint64_t v82 = &v49[16 * v51];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v62 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v62) {
          goto LABEL_127;
        }
        if (v85 < v73) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v90 = v51 - 1;
        if (v51 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v91 = v12;
        int64_t v92 = &v49[16 * v90];
        uint64_t v93 = *(void *)v92;
        unint64_t v94 = &v49[16 * v51];
        uint64_t v95 = *((void *)v94 + 1);
        sub_1DCD6BED0((float *)(v11 + 56 * *(void *)v92), (float *)(v11 + 56 * *(void *)v94), v11 + 56 * v95, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v95 < v93) {
          goto LABEL_117;
        }
        if (v51 > *((void *)v91 + 2)) {
          goto LABEL_118;
        }
        *(void *)int64_t v92 = v93;
        *(void *)&v49[16 * v90 + 8] = v95;
        unint64_t v96 = *((void *)v91 + 2);
        if (v51 >= v96) {
          goto LABEL_119;
        }
        uint64_t v12 = v91;
        unint64_t v13 = v96 - 1;
        memmove(&v49[16 * v51], v94 + 16, 16 * (v96 - 1 - v51));
        *((void *)v91 + 2) = v96 - 1;
        uint64_t v11 = v125;
        if (v96 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v123;
    uint64_t v3 = v124;
    if (v10 >= v124)
    {
      uint64_t v9 = v122;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCD6BED0(float *__src, float *a2, unint64_t a3, float *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = ((char *)a2 - (char *)__src) / 56;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 56;
  long long v32 = __src;
  long long v31 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -55)
    {
      if (__dst != a2 || &a2[14 * v11] <= __dst) {
        memmove(__dst, a2, 56 * v11);
      }
      float v19 = &v4[14 * v11];
      long long v30 = (char *)v19;
      long long v32 = v6;
      if (v7 < v6 && v10 >= 56)
      {
        unint64_t v20 = a3 - 56;
        do
        {
          uint64_t v21 = (float *)(v20 + 56);
          if (*(v6 - 10) >= *(v19 - 10))
          {
            long long v30 = (char *)(v19 - 14);
            if (v21 < v19 || v20 >= (unint64_t)v19 || v21 != v19)
            {
              long long v26 = *(_OWORD *)(v19 - 14);
              long long v27 = *(_OWORD *)(v19 - 10);
              long long v28 = *(_OWORD *)(v19 - 6);
              *(void *)(v20 + 48) = *((void *)v19 - 1);
              *(_OWORD *)(v20 + 16) = v27;
              *(_OWORD *)(v20 + 32) = v28;
              *(_OWORD *)unint64_t v20 = v26;
            }
            uint64_t v22 = v6;
            v19 -= 14;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v22 = v6 - 14;
            if (v21 != v6 || v20 >= (unint64_t)v6)
            {
              long long v23 = *(_OWORD *)v22;
              long long v24 = *(_OWORD *)(v6 - 10);
              long long v25 = *(_OWORD *)(v6 - 6);
              *(void *)(v20 + 48) = *((void *)v6 - 1);
              *(_OWORD *)(v20 + 16) = v24;
              *(_OWORD *)(v20 + 32) = v25;
              *(_OWORD *)unint64_t v20 = v23;
            }
            long long v32 = v6 - 14;
            if (v22 <= v7) {
              break;
            }
          }
          v20 -= 56;
          uint64_t v6 = v22;
        }
        while (v19 > v4);
      }
LABEL_40:
      sub_1DCD726A8((void **)&v32, (const void **)&v31, &v30);
      return 1;
    }
  }
  else if (v8 >= -55)
  {
    if (__dst != __src || &__src[14 * v9] <= __dst) {
      memmove(__dst, __src, 56 * v9);
    }
    uint64_t v12 = &v4[14 * v9];
    long long v30 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 56)
    {
      unint64_t v13 = v4;
      while (1)
      {
        if (v13[4] >= v6[4])
        {
          uint64_t v4 = v13 + 14;
          float v15 = v13;
          uint64_t v14 = v6;
          if (v7 == v13)
          {
            v13 += 14;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 14;
          }
        }
        else
        {
          uint64_t v14 = v6 + 14;
          float v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        long long v16 = *(_OWORD *)v15;
        long long v17 = *((_OWORD *)v15 + 1);
        long long v18 = *((_OWORD *)v15 + 2);
        *((void *)v7 + 6) = *((void *)v15 + 6);
        *((_OWORD *)v7 + 1) = v17;
        *((_OWORD *)v7 + 2) = v18;
        *(_OWORD *)uint64_t v7 = v16;
LABEL_18:
        v7 += 14;
        if (v13 < v12)
        {
          uint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        long long v31 = v4;
        long long v32 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

unint64_t sub_1DCD6C1AC()
{
  unint64_t result = qword_1EAB026E8;
  if (!qword_1EAB026E8)
  {
    type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB026E8);
  }
  return result;
}

uint64_t sub_1DCD6C204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void destroy for TextLookupQuery(void *a1)
{
  swift_bridgeObjectRelease();
  if (a1[3])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[10]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 7));
  }
  if (a1[12] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = (void *)a1[20];
}

uint64_t initializeWithCopy for TextLookupQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v7;
    *(void *)(a1 + 88) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 56, a2 + 56, v7);
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v9;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
  }
  uint64_t v10 = *(void *)(a2 + 96);
  if (v10 == 1)
  {
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    long long v12 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v12;
  }
  else
  {
    uint64_t v13 = *(void *)(a2 + 104);
    uint64_t v14 = *(void *)(a2 + 112);
    *(void *)(a1 + 96) = v10;
    *(void *)(a1 + 104) = v13;
    uint64_t v15 = *(void *)(a2 + 120);
    uint64_t v16 = *(void *)(a2 + 128);
    *(void *)(a1 + 112) = v14;
    *(void *)(a1 + 120) = v15;
    uint64_t v18 = *(void *)(a2 + 136);
    uint64_t v17 = *(void *)(a2 + 144);
    *(void *)(a1 + 128) = v16;
    *(void *)(a1 + 136) = v18;
    uint64_t v19 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v17;
    *(void *)(a1 + 152) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  unint64_t v20 = *(void **)(a2 + 160);
  *(void *)(a1 + 160) = v20;
  id v21 = v20;
  return a1;
}

uint64_t assignWithCopy for TextLookupQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (_OWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DCD6C7C8(a1 + 16);
      uint64_t v7 = *(void *)(a2 + 32);
      _OWORD *v4 = *v5;
      *(void *)(a1 + 32) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    _OWORD *v4 = v8;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v9)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  }
  else if (v9)
  {
    *(void *)(a1 + 80) = v9;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 56, a2 + 56);
    goto LABEL_15;
  }
  long long v10 = *(_OWORD *)(a2 + 56);
  long long v11 = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 56) = v10;
  *(_OWORD *)(a1 + 72) = v11;
LABEL_15:
  long long v12 = (_OWORD *)(a1 + 96);
  uint64_t v14 = (long long *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96) == 1)
  {
    if (v13 == 1)
    {
      long long v15 = *v14;
      long long v16 = *(_OWORD *)(a2 + 112);
      long long v17 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v17;
      *long long v12 = v15;
      *(_OWORD *)(a1 + 112) = v16;
    }
    else
    {
      *(void *)(a1 + 96) = v13;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v13 == 1)
  {
    sub_1DCD6C7FC(a1 + 96);
    long long v18 = *(_OWORD *)(a2 + 144);
    long long v20 = *v14;
    long long v19 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v18;
    *long long v12 = v20;
    *(_OWORD *)(a1 + 112) = v19;
  }
  else
  {
    *(void *)(a1 + 96) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  id v21 = *(void **)(a1 + 160);
  uint64_t v22 = *(void **)(a2 + 160);
  *(void *)(a1 + 160) = v22;
  id v23 = v22;

  return a1;
}

uint64_t sub_1DCD6C7C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCD6C7FC(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for TextLookupQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24))
  {
    uint64_t v5 = *(void *)(a2 + 24);
    if (v5)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DCD6C7C8(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
LABEL_6:
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  }
  long long v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v7;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v8 = (void *)(a2 + 96);
  if (*(void *)(a1 + 96) != 1)
  {
    if (*v8 != 1)
    {
      *(void *)(a1 + 96) = *v8;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_1DCD6C7FC(a1 + 96);
  }
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)v8;
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
LABEL_13:
  long long v12 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);

  return a1;
}

uint64_t getEnumTagSinglePayload for TextLookupQuery(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextLookupQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextLookupQuery()
{
  return &type metadata for TextLookupQuery;
}

uint64_t destroy for ClassificationInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s18VisualIntelligence18ClassificationInfoVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClassificationInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClassificationInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClassificationInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClassificationInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextContext()
{
  return &type metadata for TextContext;
}

uint64_t sub_1DCD6CCA4@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_textContext);
  id v52 = v1;
  if (!v4)
  {
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v14 = 0;
    goto LABEL_16;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_surroundingText);
  uint64_t v7 = sub_1DD048408();
  uint64_t v50 = v8;

  id v9 = objc_msgSend(v5, sel_normalizedBoundingBoxes);
  sub_1DCD6D040();
  unint64_t v10 = sub_1DD0486B8();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    uint64_t v51 = v7;
    if (v11) {
      goto LABEL_4;
    }
LABEL_15:

    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v51 = v7;
  if (!v11) {
    goto LABEL_15;
  }
LABEL_4:
  v53[0] = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DCFC5940(0, v11 & ~(v11 >> 63), 0);
  if (v11 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v13 = 0;
  uint64_t v14 = v53[0];
  do
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v15 = (id)MEMORY[0x1E01AE890](v13, v10);
    }
    else {
      id v15 = *(id *)(v10 + 8 * v13 + 32);
    }
    long long v16 = v15;
    objc_msgSend(v15, sel_rectValue);
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    uint64_t v24 = v23;

    v53[0] = v14;
    unint64_t v26 = *(void *)(v14 + 16);
    unint64_t v25 = *(void *)(v14 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_1DCFC5940(v25 > 1, v26 + 1, 1);
      uint64_t v14 = v53[0];
    }
    ++v13;
    *(void *)(v14 + 16) = v26 + 1;
    long long v27 = (void *)(v14 + 32 * v26);
    v27[4] = v18;
    v27[5] = v20;
    v27[6] = v22;
    v27[7] = v24;
  }
  while (v11 != v13);

  swift_bridgeObjectRelease();
  unint64_t v2 = v52;
LABEL_16:
  id v28 = objc_msgSend(v2, sel_queryTerm);
  uint64_t v29 = sub_1DD048408();
  uint64_t v48 = v30;
  uint64_t v49 = v29;

  id v31 = objc_msgSend(v2, sel_hintDomain);
  if (v31)
  {
    long long v32 = v31;
    uint64_t v46 = sub_1DD048408();
    uint64_t v47 = v33;
  }
  else
  {
    uint64_t v46 = 0;
    uint64_t v47 = 0;
  }
  if (objc_msgSend(v2, sel_imageContext))
  {
    swift_getObjectType();
    sub_1DCE9BF6C((uint64_t *)v54);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v55 = 0;
    memset(v54, 0, sizeof(v54));
  }
  id v34 = objc_msgSend(v2, sel_annotation);
  if (v34)
  {
    uint64_t v35 = v34;
    VIAnnotation.mappedAnnotation.getter(v53);

    uint64_t v36 = v53[0];
    uint64_t v37 = v53[2];
    uint64_t v38 = v53[3];
    uint64_t v39 = v53[4];
    uint64_t v40 = v53[5];
    uint64_t v42 = v53[6];
    uint64_t v41 = v53[7];
    id v43 = objc_msgSend(v52, sel_queryContext, v53[1]);
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
    uint64_t v40 = 0;
    uint64_t v42 = 0;
    uint64_t v41 = 0;
    uint64_t v36 = 1;
    id v43 = objc_msgSend(v52, sel_queryContext, 0);
  }
  id v44 = v43;
  *a1 = v49;
  a1[1] = v48;
  a1[2] = v51;
  a1[3] = v50;
  a1[4] = v14;
  a1[5] = v46;
  a1[6] = v47;
  uint64_t result = sub_1DCD3A420((uint64_t)v54, (uint64_t)(a1 + 7));
  a1[12] = v36;
  a1[13] = v45;
  a1[14] = v37;
  a1[15] = v38;
  a1[16] = v39;
  a1[17] = v40;
  a1[18] = v42;
  a1[19] = v41;
  a1[20] = (uint64_t)v44;
  return result;
}

unint64_t sub_1DCD6D040()
{
  unint64_t result = qword_1EAB026F0;
  if (!qword_1EAB026F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAB026F0);
  }
  return result;
}

uint64_t sub_1DCD6D080(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for MLModelInfo(0) + 36));
  if (*(void *)(v7 + 16) && (uint64_t v8 = sub_1DCEAD428(1), (v9 & 1) != 0))
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void *)(v7 + 56);
    uint64_t v12 = sub_1DD046478();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, v11 + *(void *)(v13 + 72) * v10, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  }
  else
  {
    uint64_t v14 = sub_1DD046478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
  }
  type metadata accessor for FileMapper();
  swift_allocObject();
  id v15 = sub_1DCEC56C0((uint64_t)v6);
  sub_1DCD59AB4(a1);
  *(void *)(v2 + 16) = v15;
  return v2;
}

uint64_t type metadata accessor for SignSymbolClassificationPostProcessor()
{
  return self;
}

uint64_t sub_1DCD6D270(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for MLModelInfo(0) + 36));
  if (*(void *)(v7 + 16) && (uint64_t v8 = sub_1DCEAD428(1), (v9 & 1) != 0))
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void *)(v7 + 56);
    uint64_t v12 = sub_1DD046478();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, v11 + *(void *)(v13 + 72) * v10, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  }
  else
  {
    uint64_t v14 = sub_1DD046478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
  }
  type metadata accessor for FileMapper();
  swift_allocObject();
  id v15 = sub_1DCEC56C0((uint64_t)v6);
  sub_1DCD59AB4(a1);
  *(void *)(v2 + 16) = v15;
  return v2;
}

uint64_t type metadata accessor for ApparelClassificationPostProcessor()
{
  return self;
}

uint64_t sub_1DCD6D460(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB027C8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD765C8();
  sub_1DD049138();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84EF0);
  sub_1DCD766B8();
  sub_1DD048F18();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DCD6D5B0()
{
  return 1;
}

uint64_t sub_1DCD6D5B8()
{
  return sub_1DD049108();
}

uint64_t sub_1DCD6D5FC()
{
  return sub_1DD0490C8();
}

uint64_t sub_1DCD6D624()
{
  return sub_1DD049108();
}

uint64_t sub_1DCD6D664()
{
  return 0x6769666E6F63;
}

uint64_t sub_1DCD6D678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1DD048FA8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1DCD6D708(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1DCD6D714(uint64_t a1)
{
  unint64_t v2 = sub_1DCD765C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCD6D750(uint64_t a1)
{
  unint64_t v2 = sub_1DCD765C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1DCD6D78C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1DCD744A0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1DCD6D7B8(void *a1)
{
  return sub_1DCD6D460(a1, *v1);
}

uint64_t sub_1DCD6D7D4(uint64_t a1)
{
  if (!a1) {
    return 1819042094;
  }
  if (a1 == 1) {
    return 0x64656C626169642ELL;
  }
  uint64_t v21 = 0x28656D6F732ELL;
  unint64_t v22 = 0xE600000000000000;
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1DCFC4948(0, v2, 0);
    uint64_t v4 = a1;
    uint64_t v3 = v20;
    int64_t v5 = sub_1DCF55B0C(a1);
    int v7 = v6;
    char v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v4 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
        goto LABEL_17;
      }
      if (*(_DWORD *)(v4 + 36) != v7) {
        goto LABEL_18;
      }
      uint64_t v10 = sub_1DCD9C35C(*(unsigned char *)(*(void *)(v4 + 48) + v5));
      uint64_t v12 = v11;
      uint64_t v20 = v3;
      unint64_t v14 = *(void *)(v3 + 16);
      unint64_t v13 = *(void *)(v3 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1DCFC4948(v13 > 1, v14 + 1, 1);
        uint64_t v4 = a1;
        uint64_t v3 = v20;
      }
      *(void *)(v3 + 16) = v14 + 1;
      uint64_t v15 = v3 + 16 * v14;
      *(void *)(v15 + 32) = v10;
      *(void *)(v15 + 40) = v12;
      int64_t v16 = sub_1DCF55BAC(v5, v7, v9 & 1, v4);
      int64_t v5 = v16;
      int v7 = v17;
      char v9 = v18 & 1;
      if (!--v2)
      {
        sub_1DCD74484(v16, v17, v18 & 1);
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_15:
    uint64_t v20 = v3;
    swift_bridgeObjectRetain();
    sub_1DCD6E768(&v20);
    swift_bridgeObjectRelease();
    MEMORY[0x1E01AE380](v20, MEMORY[0x1E4FBB1A0]);
    sub_1DD048548();
    swift_release();
    swift_bridgeObjectRelease();
    return v21;
  }
  return result;
}

uint64_t sub_1DCD6D9F0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a2;
  if (!v2) {
    return v3 == 0;
  }
  if (v2 == 1) {
    return v3 == 1;
  }
  if (v3 >= 2) {
    return sub_1DCD6EA5C(v2, v3);
  }
  return 0;
}

uint64_t sub_1DCD6DA30()
{
  return sub_1DCD6D7D4(*v0);
}

unint64_t sub_1DCD6DA38(char a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v112 = a4;
  unint64_t v113 = a3;
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v100 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v108 = (uint64_t)&v100 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v107 = (uint64_t)&v100 - v15;
  MEMORY[0x1F4188790](v16);
  long long v109 = (char *)&v100 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v114 = (uint64_t)&v100 - v19;
  MEMORY[0x1F4188790](v20);
  unint64_t v22 = (char *)&v100 - v21;
  MEMORY[0x1F4188790](v23);
  unint64_t v25 = (char *)&v100 - v24;
  MEMORY[0x1F4188790](v26);
  id v28 = (char *)&v100 - v27;
  MEMORY[0x1F4188790](v29);
  id v31 = (char *)&v100 - v30;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1DCDB40EC((uint64_t)v31);
    sub_1DCDB4300((uint64_t)v28);
    uint64_t v36 = *(void (**)(char *, uint64_t))(v6 + 8);
    v36(v31, v5);
    uint64_t v37 = sub_1DD048048();
    os_log_type_t v38 = sub_1DD048848();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_1DCCF9000, v37, v38, "checkAvailableDomains(): checkEnableStatus: no self", v39, 2u);
      MEMORY[0x1E01B07E0](v39, -1, -1);
    }

    v36(v28, v5);
    return v113(1);
  }
  uint64_t v33 = Strong;
  uint64_t v110 = Strong;
  uint64_t v111 = v5;
  if ((a1 & 1) == 0)
  {
    uint64_t v41 = (void (*)(uint64_t))v113;
    sub_1DCDB40EC((uint64_t)v11);
    sub_1DCDB4300((uint64_t)v8);
    uint64_t v42 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v43 = v111;
    v42(v11, v111);
    id v44 = sub_1DD048048();
    os_log_type_t v45 = sub_1DD048848();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl(&dword_1DCCF9000, v44, v45, "checkAvailableDomains(): .disabled", v46, 2u);
      MEMORY[0x1E01B07E0](v46, -1, -1);
    }

    v42(v8, v43);
    v41(1);
    return swift_release();
  }
  __swift_project_boxed_opaque_existential_1((void *)(Strong + 40), *(void *)(Strong + 64));
  unint64_t v34 = sub_1DCE4B0FC();
  unint64_t v35 = *(void *)(v33 + 16);
  if (v35)
  {
    if (v35 == 1)
    {
      unint64_t v105 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DCD765A8(v35);
      uint64_t v47 = sub_1DCD72A00(v35, v34);
      sub_1DCD74490(v35);
      unint64_t v105 = v47;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v105 = v34;
  }
  sub_1DCDB40EC((uint64_t)v25);
  sub_1DCDB4300((uint64_t)v22);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v48 = v6 + 8;
  uint64_t v50 = v25;
  uint64_t v51 = v49;
  uint64_t v52 = v111;
  v49(v50, v111);
  uint64_t v53 = v110;
  swift_retain_n();
  uint64_t v54 = sub_1DD048048();
  os_log_type_t v55 = sub_1DD048848();
  BOOL v56 = os_log_type_enabled(v54, v55);
  uint64_t v106 = v49;
  if (v56)
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    uint64_t v116 = v58;
    *(_DWORD *)uint64_t v57 = 136315138;
    uint64_t v104 = v48;
    uint64_t v59 = sub_1DCD6D7D4(*(void *)(v53 + 16));
    uint64_t v115 = sub_1DCED7FA0(v59, v60, &v116);
    sub_1DD048A28();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v54, v55, "checkAvailableDomains(): availableDomains: %s", v57, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v58, -1, -1);
    uint64_t v61 = v57;
    uint64_t v51 = v106;
    uint64_t v52 = v111;
    MEMORY[0x1E01B07E0](v61, -1, -1);

    uint64_t v62 = v104;
    v51(v22, v52);
  }
  else
  {

    swift_release_n();
    v51(v22, v52);
    uint64_t v62 = v48;
  }
  uint64_t v63 = (uint64_t)v109;
  uint64_t v64 = v114;
  sub_1DCDB40EC(v114);
  sub_1DCDB4300(v63);
  v51((char *)v64, v52);
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_1DD048048();
  int v66 = sub_1DD048848();
  if (!os_log_type_enabled(v65, (os_log_type_t)v66))
  {

    swift_bridgeObjectRelease_n();
    uint64_t v84 = (char *)v63;
LABEL_30:
    v51(v84, v52);
    uint64_t v91 = v107;
    sub_1DCDB40EC(v107);
    uint64_t v92 = v108;
    sub_1DCDB4300(v108);
    v51((char *)v91, v52);
    unint64_t v93 = v105;
    sub_1DCD765A8(v105);
    sub_1DCD765A8(v93);
    unint64_t v94 = sub_1DD048048();
    os_log_type_t v95 = sub_1DD048848();
    if (os_log_type_enabled(v94, v95))
    {
      unint64_t v96 = (uint8_t *)swift_slowAlloc();
      uint64_t v97 = swift_slowAlloc();
      uint64_t v116 = v97;
      *(_DWORD *)unint64_t v96 = 136315138;
      uint64_t v98 = sub_1DCD6D7D4(v93);
      uint64_t v115 = sub_1DCED7FA0(v98, v99, &v116);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD74490(v93);
      sub_1DCD74490(v93);
      _os_log_impl(&dword_1DCCF9000, v94, v95, "checkAvailableDomains(): action(domains): %s", v96, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v97, -1, -1);
      MEMORY[0x1E01B07E0](v96, -1, -1);

      v106((char *)v92, v111);
    }
    else
    {
      sub_1DCD74490(v93);
      sub_1DCD74490(v93);

      v51((char *)v92, v52);
    }
    v113(v93);
    swift_release();
    return sub_1DCD74490(v93);
  }
  int v101 = v66;
  os_log_t v103 = v65;
  uint64_t v67 = (uint8_t *)swift_slowAlloc();
  uint64_t v100 = swift_slowAlloc();
  uint64_t v116 = v100;
  float v102 = v67;
  *(_DWORD *)uint64_t v67 = 136315138;
  int64_t v68 = *(void *)(v34 + 16);
  uint64_t v69 = MEMORY[0x1E4FBC860];
  if (!v68)
  {
LABEL_29:
    uint64_t v115 = v69;
    swift_bridgeObjectRetain();
    sub_1DCD6E768(&v115);
    swift_bridgeObjectRelease();
    uint64_t v85 = v102;
    uint64_t v86 = MEMORY[0x1E01AE380](v115, MEMORY[0x1E4FBB1A0]);
    unint64_t v88 = v87;
    swift_release();
    uint64_t v115 = sub_1DCED7FA0(v86, v88, &v116);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v89 = v103;
    _os_log_impl(&dword_1DCCF9000, v103, (os_log_type_t)v101, "checkAvailableDomains(): fetchedDomains: %s", v85, 0xCu);
    uint64_t v90 = v100;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v90, -1, -1);
    MEMORY[0x1E01B07E0](v85, -1, -1);

    uint64_t v84 = v109;
    goto LABEL_30;
  }
  uint64_t v104 = v62;
  uint64_t v115 = MEMORY[0x1E4FBC860];
  sub_1DCFC4948(0, v68, 0);
  uint64_t v69 = v115;
  int64_t v70 = sub_1DCF55B0C(v34);
  int v72 = v71;
  char v74 = v73 & 1;
  uint64_t v114 = v34 + 56;
  while ((v70 & 0x8000000000000000) == 0 && v70 < 1 << *(unsigned char *)(v34 + 32))
  {
    if (((*(void *)(v114 + (((unint64_t)v70 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v70) & 1) == 0) {
      goto LABEL_35;
    }
    if (*(_DWORD *)(v34 + 36) != v72) {
      goto LABEL_36;
    }
    uint64_t v75 = sub_1DCD9C35C(*(unsigned char *)(*(void *)(v34 + 48) + v70));
    uint64_t v77 = v76;
    uint64_t v115 = v69;
    unint64_t v79 = *(void *)(v69 + 16);
    unint64_t v78 = *(void *)(v69 + 24);
    if (v79 >= v78 >> 1)
    {
      sub_1DCFC4948(v78 > 1, v79 + 1, 1);
      uint64_t v69 = v115;
    }
    *(void *)(v69 + 16) = v79 + 1;
    uint64_t v80 = v69 + 16 * v79;
    *(void *)(v80 + 32) = v75;
    *(void *)(v80 + 40) = v77;
    int64_t v81 = sub_1DCF55BAC(v70, v72, v74 & 1, v34);
    int64_t v70 = v81;
    int v72 = v82;
    char v74 = v83 & 1;
    if (!--v68)
    {
      sub_1DCD74484(v81, v82, v83 & 1);
      uint64_t v52 = v111;
      uint64_t v51 = v106;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  swift_bridgeObjectRelease();
  unint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1DCD6E4B0()
{
  sub_1DCD74490(*(void *)(v0 + 16));
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AvailableDomainManager()
{
  return self;
}

uint64_t *initializeBufferWithCopyOfBuffer for AvailableDomains(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for AvailableDomains(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for AvailableDomains(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for AvailableDomains(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AvailableDomains(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AvailableDomains(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1DCD6E720(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1DCD6E738(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for AvailableDomains()
{
  return &type metadata for AvailableDomains;
}

uint64_t sub_1DCD6E768(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DCD74358(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1DCD71584(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DCD6E7D4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1DD0490B8();
    swift_bridgeObjectRetain();
    sub_1DD0484F8();
    uint64_t v18 = sub_1DD049108();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    unint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1DD048FA8() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1DD048FA8() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1DCD6EA5C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
    int64_t v4 = 0;
    uint64_t v30 = a1 + 56;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(a1 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_116;
    }
    if (v11 < v31)
    {
      unint64_t v12 = *(void *)(v30 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_24;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v31) {
        return 1;
      }
      unint64_t v12 = *(void *)(v30 + 8 * v4);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v31) {
        return 1;
      }
      unint64_t v12 = *(void *)(v30 + 8 * v4);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v4 = v11 + 3;
      if (v11 + 3 >= v31) {
        return 1;
      }
      unint64_t v12 = *(void *)(v30 + 8 * v4);
      if (v12)
      {
LABEL_24:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
        uint64_t v14 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v10);
        sub_1DD0490B8();
        sub_1DCD9C35C(v14);
        sub_1DD0484F8();
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1DD049108();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v32 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            unint64_t v19 = 0xE300000000000000;
            uint64_t v20 = 7631457;
            switch(*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              case 1:
                unint64_t v19 = 0xE600000000000000;
                uint64_t v20 = 0x65727574616ELL;
                break;
              case 2:
                unint64_t v19 = 0xE800000000000000;
                uint64_t v20 = 0x6B72616D646E616CLL;
                break;
              case 3:
                uint64_t v20 = 0x4C6C61727574616ELL;
                unint64_t v19 = 0xEF6B72616D646E61;
                break;
              case 4:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v20 = 0x616964656DLL;
                break;
              case 5:
                unint64_t v19 = 0xE400000000000000;
                uint64_t v20 = 1802465122;
                break;
              case 6:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v20 = 0x6D75626C61;
                break;
              case 7:
                unint64_t v19 = 0xE400000000000000;
                uint64_t v20 = 1937006947;
                break;
              case 8:
                unint64_t v19 = 0xE400000000000000;
                uint64_t v20 = 1936158564;
                break;
              case 9:
                unint64_t v19 = 0xE700000000000000;
                unsigned int v21 = 1835626081;
                goto LABEL_41;
              case 0xA:
                unint64_t v19 = 0xE500000000000000;
                uint64_t v20 = 0x7364726962;
                break;
              case 0xB:
                unint64_t v19 = 0xE700000000000000;
                uint64_t v20 = 0x73746365736E69;
                break;
              case 0xC:
                unint64_t v19 = 0xE800000000000000;
                uint64_t v20 = 0x73656C6974706572;
                break;
              case 0xD:
                unint64_t v19 = 0xE700000000000000;
                unsigned int v21 = 1835884909;
LABEL_41:
                uint64_t v20 = v21 | 0x736C6100000000;
                break;
              case 0xE:
                unint64_t v19 = 0xE700000000000000;
                uint64_t v20 = 0x6C657261707061;
                break;
              case 0xF:
                uint64_t v20 = 0x726F737365636361;
                unint64_t v19 = 0xEB00000000736569;
                break;
              case 0x10:
                unint64_t v19 = 0xE400000000000000;
                uint64_t v20 = 1685024614;
                break;
              case 0x11:
                unint64_t v19 = 0xEA0000000000746ELL;
                uint64_t v20 = 0x6F726665726F7473;
                break;
              case 0x12:
                unsigned int v22 = 1852270963;
                goto LABEL_49;
              case 0x13:
                unint64_t v19 = 0x80000001DD066AB0;
                uint64_t v20 = 0xD000000000000011;
                break;
              case 0x14:
                unsigned int v22 = 1869903201;
LABEL_49:
                uint64_t v20 = v22 | 0x626D795300000000;
                unint64_t v19 = 0xEA00000000006C6FLL;
                break;
              case 0x15:
                uint64_t v20 = 0x676F4C646E617262;
                unint64_t v19 = 0xEF6C6F626D79536FLL;
                break;
              case 0x16:
                unint64_t v19 = 0xE700000000000000;
                uint64_t v20 = 0x65646F63726162;
                break;
              case 0x17:
                uint64_t v20 = 0x727574706C756373;
                unint64_t v19 = 0xE900000000000065;
                break;
              case 0x18:
                unint64_t v19 = 0xE700000000000000;
                uint64_t v20 = 0x656E696C796B73;
                break;
              case 0x19:
                unint64_t v19 = 0xE800000000000000;
                uint64_t v20 = 0x44327463656A626FLL;
                break;
              default:
                break;
            }
            unint64_t v23 = 0xE300000000000000;
            uint64_t v24 = 7631457;
            switch(v14)
            {
              case 1:
                unint64_t v23 = 0xE600000000000000;
                if (v20 != 0x65727574616ELL) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 2:
                unint64_t v23 = 0xE800000000000000;
                if (v20 != 0x6B72616D646E616CLL) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 3:
                unint64_t v23 = 0xEF6B72616D646E61;
                if (v20 != 0x4C6C61727574616ELL) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 4:
                unint64_t v23 = 0xE500000000000000;
                if (v20 != 0x616964656DLL) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 5:
                unint64_t v23 = 0xE400000000000000;
                if (v20 != 1802465122) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 6:
                unint64_t v23 = 0xE500000000000000;
                if (v20 != 0x6D75626C61) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 7:
                unint64_t v23 = 0xE400000000000000;
                if (v20 != 1937006947) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 8:
                unint64_t v23 = 0xE400000000000000;
                if (v20 != 1936158564) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 9:
                unint64_t v23 = 0xE700000000000000;
                uint64_t v25 = 1835626081;
                goto LABEL_79;
              case 10:
                unint64_t v23 = 0xE500000000000000;
                if (v20 != 0x7364726962) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 11:
                unint64_t v23 = 0xE700000000000000;
                unint64_t v26 = 0x746365736E69;
                goto LABEL_80;
              case 12:
                unint64_t v23 = 0xE800000000000000;
                if (v20 != 0x73656C6974706572) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 13:
                unint64_t v23 = 0xE700000000000000;
                uint64_t v25 = 1835884909;
LABEL_79:
                unint64_t v26 = v25 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_80:
                if (v20 != (v26 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 14:
                unint64_t v23 = 0xE700000000000000;
                if (v20 != 0x6C657261707061) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 15:
                unint64_t v23 = 0xEB00000000736569;
                if (v20 != 0x726F737365636361) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 16:
                unint64_t v23 = 0xE400000000000000;
                if (v20 != 1685024614) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 17:
                unint64_t v23 = 0xEA0000000000746ELL;
                if (v20 != 0x6F726665726F7473) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 18:
                unsigned int v27 = 1852270963;
                goto LABEL_94;
              case 19:
                unint64_t v23 = 0x80000001DD066AB0;
                if (v20 != 0xD000000000000011) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 20:
                unsigned int v27 = 1869903201;
LABEL_94:
                unint64_t v23 = 0xEA00000000006C6FLL;
                if (v20 != (v27 | 0x626D795300000000)) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 21:
                unint64_t v23 = 0xEF6C6F626D79536FLL;
                if (v20 != 0x676F4C646E617262) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 22:
                unint64_t v23 = 0xE700000000000000;
                if (v20 != 0x65646F63726162) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 23:
                unint64_t v23 = 0xE900000000000065;
                if (v20 != 0x727574706C756373) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              case 24:
                unint64_t v23 = 0xE700000000000000;
                uint64_t v24 = 0x656E696C796B73;
                goto LABEL_103;
              case 25:
                unint64_t v23 = 0xE800000000000000;
                if (v20 != 0x44327463656A626FLL) {
                  goto LABEL_105;
                }
                goto LABEL_104;
              default:
LABEL_103:
                if (v20 != v24) {
                  goto LABEL_105;
                }
LABEL_104:
                if (v19 == v23)
                {
                  swift_bridgeObjectRelease_n();
                  int64_t v4 = v32;
                  goto LABEL_7;
                }
LABEL_105:
                char v28 = sub_1DD048FA8();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v28)
                {
                  int64_t v4 = v32;
                  goto LABEL_7;
                }
                unint64_t v17 = (v17 + 1) & v18;
                if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                  return 0;
                }
                break;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 4;
      if (v13 < v31)
      {
        unint64_t v12 = *(void *)(v30 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_24;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            break;
          }
          if (v4 >= v31) {
            return 1;
          }
          unint64_t v12 = *(void *)(v30 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_24;
          }
        }
LABEL_116:
        __break(1u);
        JUMPOUT(0x1DCD6F278);
      }
    }
  }
  return 1;
}

uint64_t sub_1DCD6F348(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851E0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD6F4B4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851A8);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  int64_t v13 = a4 + 32;
  size_t v14 = 80 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD6F62C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EBE85190, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
}

uint64_t sub_1DCD6F64C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85198);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD6F7B8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1DCD70B18(a1, a2, a3, a4, (uint64_t *)&unk_1EBE851B8);
}

uint64_t sub_1DCD6F7CC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD6F96C(a1, a2, a3, a4, &qword_1EBE86A70, &qword_1EBE85780);
}

uint64_t sub_1DCD6F7E0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85188);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 160);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  int64_t v13 = a4 + 32;
  size_t v14 = 160 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD6F958(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD6F96C(a1, a2, a3, a4, &qword_1EBE86A60, &qword_1EBE85748);
}

uint64_t sub_1DCD6F96C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    int64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD6FB14(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1DCD70090(a1, a2, a3, a4, &qword_1EBE86B00);
}

uint64_t sub_1DCD6FB20(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86AE0);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 4;
  int64_t v13 = a4 + 4;
  size_t v14 = 3 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB024C0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD6FCBC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EBE86AC0, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult);
}

uint64_t sub_1DCD6FCDC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851F0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD6FE3C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EAB02788, MEMORY[0x1E4F89378]);
}

uint64_t sub_1DCD6FE5C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EAB02780, MEMORY[0x1E4F894B8]);
}

uint64_t sub_1DCD6FE7C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EAB02778, MEMORY[0x1E4F894A8]);
}

uint64_t sub_1DCD6FE9C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EAB02770, MEMORY[0x1E4F89388]);
}

uint64_t sub_1DCD6FEBC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EAB025F0, MEMORY[0x1E4F89018]);
}

uint64_t sub_1DCD6FEDC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02748);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02750);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD70084(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1DCD70090(a1, a2, a3, a4, &qword_1EBE851F8);
}

uint64_t sub_1DCD70090(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v14 = v11 + 32;
  unint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD701EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02738);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 16 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD70348(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EAB027A0, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
}

uint64_t sub_1DCD70368(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851E8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD704C8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1DCD7116C(a1, a2, a3, a4, &qword_1EBE84908);
}

uint64_t sub_1DCD704DC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82D78);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD7063C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD70678(a1, a2, a3, a4, &qword_1EAB027B8, &qword_1EBE86898);
}

uint64_t sub_1DCD70650(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD70678(a1, a2, a3, a4, &qword_1EAB02708, &qword_1EAB02710);
}

uint64_t sub_1DCD70664(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD70678(a1, a2, a3, a4, &qword_1EAB02718, &qword_1EAB02720);
}

uint64_t sub_1DCD70678(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD70808(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02700);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    memcpy(v12, v13, 24 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD70984(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851B0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    memcpy(v12, v13, 56 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD70B04(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1DCD70B18(a1, a2, a3, a4, &qword_1EBE853B8);
}

uint64_t sub_1DCD70B18(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v11 + 32;
  int64_t v14 = a4 + 32;
  size_t v15 = 24 * v9;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD70C98(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02728);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD70E04(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EAB02768, MEMORY[0x1E4F89B60]);
}

uint64_t sub_1DCD70E24(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02790);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD70F90(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EAB02740, type metadata accessor for RegionSearchResult.ResultItem);
}

uint64_t sub_1DCD70FB0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB027A8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[96 * v8]) {
      memmove(v12, v13, 96 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[96 * v8] || v12 >= &v13[96 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD71138(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EAB02798, MEMORY[0x1E4F89988]);
}

uint64_t sub_1DCD71158(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1DCD7116C(a1, a2, a3, a4, &qword_1EAB02730);
}

uint64_t sub_1DCD7116C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v11 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[56 * v9]) {
      memmove(v13, v14, 56 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[56 * v9] || v13 >= &v14[56 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD712FC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EAB02758, MEMORY[0x1E4F89210]);
}

uint64_t sub_1DCD7131C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCD7133C(a1, a2, a3, a4, &qword_1EAB02760, MEMORY[0x1E4F88E48]);
}

uint64_t sub_1DCD7133C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unsigned int v21 = (char *)v16 + v20;
  unsigned int v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD71584(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DD048F68();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1DCD71C70(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  float v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      unint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1DCD71D40((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1DCD729EC((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          unint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1DD0486F8();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    size_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1DD048FA8();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    unsigned int v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1DD048FA8()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1DCD71FDC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_1DCD71FDC((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            unint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        int64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        unint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1DCD71D40((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        unint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        os_log_type_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1DD048FA8() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)os_log_type_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCD71C70(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1DD048FA8(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCD71D40(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      size_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1DD048FA8() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1DD048FA8() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_1DCD723AC((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

char *sub_1DCD71FDC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026F8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1DCD720D8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_1DD048D18();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1DCD72218(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -80)
  {
    uint64_t result = (char *)sub_1DD048D18();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 80 * (v4 / 80);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1DCD722E4(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -160)
  {
    uint64_t result = (char *)sub_1DD048D18();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 160 * (v4 / 160);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1DCD723AC(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1DD048D18();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1DCD72468(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_1DD048D18();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 24 * (v4 / 24);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1DCD72534(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1DD048D18();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = (v4 + (v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0;
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1DCD725EC(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1DD048D18();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1DCD726A8(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -56)
  {
    uint64_t result = (char *)sub_1DD048D18();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 56;
    if (result != v3 || result >= &v3[56 * v6])
    {
      return (char *)memmove(result, v3, 56 * v6);
    }
  }
  return result;
}

char *sub_1DCD7277C(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_1DD048D18();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_1DCD7284C(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    uint64_t result = (char *)sub_1DD048D18();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
    {
      return (char *)memmove(result, v3, 48 * v6);
    }
  }
  return result;
}

char *sub_1DCD7291C(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -96)
  {
    uint64_t result = (char *)sub_1DD048D18();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 96;
    if (result != v3 || result >= &v3[96 * v6])
    {
      return (char *)memmove(result, v3, 96 * v6);
    }
  }
  return result;
}

char *sub_1DCD729EC(uint64_t a1)
{
  return sub_1DCD71FDC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DCD72A00(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1DCD72B88((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1DCD72B88((unint64_t *)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1E01B07E0](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1DCD72B88(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v6 = 0;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    uint64_t v8 = -1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v61 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = a3 + 56;
    uint64_t v67 = 0;
LABEL_5:
    while (2)
    {
      if (v9)
      {
        unint64_t v11 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v12 = v11 | (v6 << 6);
      }
      else
      {
        int64_t v13 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_219;
        }
        if (v13 >= v61) {
          goto LABEL_216;
        }
        unint64_t v14 = *(void *)(v58 + 8 * v13);
        ++v6;
        if (!v14)
        {
          int64_t v6 = v13 + 1;
          if (v13 + 1 >= v61) {
            goto LABEL_216;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v6);
          if (!v14)
          {
            int64_t v6 = v13 + 2;
            if (v13 + 2 >= v61) {
              goto LABEL_216;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v6);
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v61) {
                goto LABEL_216;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v6 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_221;
                  }
                  if (v6 >= v61) {
                    goto LABEL_216;
                  }
                  unint64_t v14 = *(void *)(v58 + 8 * v6);
                  ++v15;
                  if (v14) {
                    goto LABEL_20;
                  }
                }
              }
              int64_t v6 = v15;
            }
          }
        }
LABEL_20:
        unint64_t v9 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v6 << 6);
      }
      int v16 = *(unsigned __int8 *)(*(void *)(a4 + 48) + v12);
      sub_1DD0490B8();
      sub_1DD0484F8();
      swift_bridgeObjectRelease();
      uint64_t v17 = sub_1DD049108();
      uint64_t v18 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v19 = v17 & ~v18;
      if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        continue;
      }
      break;
    }
    unint64_t v63 = v9;
    int64_t v65 = v6;
    uint64_t v20 = ~v18;
    while (1)
    {
      unint64_t v21 = 0xE300000000000000;
      uint64_t v22 = 7631457;
      switch(*(unsigned char *)(*(void *)(a3 + 48) + v19))
      {
        case 1:
          unint64_t v21 = 0xE600000000000000;
          uint64_t v22 = 0x65727574616ELL;
          break;
        case 2:
          unint64_t v21 = 0xE800000000000000;
          uint64_t v22 = 0x6B72616D646E616CLL;
          break;
        case 3:
          uint64_t v22 = 0x4C6C61727574616ELL;
          unint64_t v21 = 0xEF6B72616D646E61;
          break;
        case 4:
          unint64_t v21 = 0xE500000000000000;
          uint64_t v22 = 0x616964656DLL;
          break;
        case 5:
          unint64_t v21 = 0xE400000000000000;
          uint64_t v22 = 1802465122;
          break;
        case 6:
          unint64_t v21 = 0xE500000000000000;
          uint64_t v22 = 0x6D75626C61;
          break;
        case 7:
          unint64_t v21 = 0xE400000000000000;
          uint64_t v22 = 1937006947;
          break;
        case 8:
          unint64_t v21 = 0xE400000000000000;
          uint64_t v22 = 1936158564;
          break;
        case 9:
          unint64_t v21 = 0xE700000000000000;
          unsigned int v23 = 1835626081;
          goto LABEL_37;
        case 0xA:
          unint64_t v21 = 0xE500000000000000;
          uint64_t v22 = 0x7364726962;
          break;
        case 0xB:
          unint64_t v21 = 0xE700000000000000;
          uint64_t v22 = 0x73746365736E69;
          break;
        case 0xC:
          unint64_t v21 = 0xE800000000000000;
          uint64_t v22 = 0x73656C6974706572;
          break;
        case 0xD:
          unint64_t v21 = 0xE700000000000000;
          unsigned int v23 = 1835884909;
LABEL_37:
          uint64_t v22 = v23 | 0x736C6100000000;
          break;
        case 0xE:
          unint64_t v21 = 0xE700000000000000;
          uint64_t v22 = 0x6C657261707061;
          break;
        case 0xF:
          uint64_t v22 = 0x726F737365636361;
          unint64_t v21 = 0xEB00000000736569;
          break;
        case 0x10:
          unint64_t v21 = 0xE400000000000000;
          uint64_t v22 = 1685024614;
          break;
        case 0x11:
          unint64_t v21 = 0xEA0000000000746ELL;
          uint64_t v22 = 0x6F726665726F7473;
          break;
        case 0x12:
          unsigned int v24 = 1852270963;
          goto LABEL_45;
        case 0x13:
          unint64_t v21 = 0x80000001DD066AB0;
          uint64_t v22 = 0xD000000000000011;
          break;
        case 0x14:
          unsigned int v24 = 1869903201;
LABEL_45:
          uint64_t v22 = v24 | 0x626D795300000000;
          unint64_t v21 = 0xEA00000000006C6FLL;
          break;
        case 0x15:
          uint64_t v22 = 0x676F4C646E617262;
          unint64_t v21 = 0xEF6C6F626D79536FLL;
          break;
        case 0x16:
          unint64_t v21 = 0xE700000000000000;
          uint64_t v22 = 0x65646F63726162;
          break;
        case 0x17:
          uint64_t v22 = 0x727574706C756373;
          unint64_t v21 = 0xE900000000000065;
          break;
        case 0x18:
          unint64_t v21 = 0xE700000000000000;
          uint64_t v22 = 0x656E696C796B73;
          break;
        case 0x19:
          unint64_t v21 = 0xE800000000000000;
          uint64_t v22 = 0x44327463656A626FLL;
          break;
        default:
          break;
      }
      unint64_t v25 = 0xE300000000000000;
      uint64_t v26 = 7631457;
      switch(v16)
      {
        case 1:
          unint64_t v25 = 0xE600000000000000;
          if (v22 != 0x65727574616ELL) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 2:
          unint64_t v25 = 0xE800000000000000;
          if (v22 != 0x6B72616D646E616CLL) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 3:
          unint64_t v25 = 0xEF6B72616D646E61;
          if (v22 != 0x4C6C61727574616ELL) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 4:
          unint64_t v25 = 0xE500000000000000;
          if (v22 != 0x616964656DLL) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 5:
          unint64_t v25 = 0xE400000000000000;
          if (v22 != 1802465122) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 6:
          unint64_t v25 = 0xE500000000000000;
          if (v22 != 0x6D75626C61) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 7:
          unint64_t v25 = 0xE400000000000000;
          if (v22 != 1937006947) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 8:
          unint64_t v25 = 0xE400000000000000;
          if (v22 != 1936158564) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 9:
          unint64_t v25 = 0xE700000000000000;
          uint64_t v27 = 1835626081;
          goto LABEL_75;
        case 10:
          unint64_t v25 = 0xE500000000000000;
          if (v22 != 0x7364726962) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 11:
          unint64_t v25 = 0xE700000000000000;
          unint64_t v28 = 0x746365736E69;
          goto LABEL_76;
        case 12:
          unint64_t v25 = 0xE800000000000000;
          if (v22 != 0x73656C6974706572) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 13:
          unint64_t v25 = 0xE700000000000000;
          uint64_t v27 = 1835884909;
LABEL_75:
          unint64_t v28 = v27 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_76:
          if (v22 != (v28 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 14:
          unint64_t v25 = 0xE700000000000000;
          if (v22 != 0x6C657261707061) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 15:
          unint64_t v25 = 0xEB00000000736569;
          if (v22 != 0x726F737365636361) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 16:
          unint64_t v25 = 0xE400000000000000;
          if (v22 != 1685024614) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 17:
          unint64_t v25 = 0xEA0000000000746ELL;
          if (v22 != 0x6F726665726F7473) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 18:
          unsigned int v29 = 1852270963;
          goto LABEL_90;
        case 19:
          unint64_t v25 = 0x80000001DD066AB0;
          if (v22 != 0xD000000000000011) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 20:
          unsigned int v29 = 1869903201;
LABEL_90:
          unint64_t v25 = 0xEA00000000006C6FLL;
          if (v22 != (v29 | 0x626D795300000000)) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 21:
          unint64_t v25 = 0xEF6C6F626D79536FLL;
          if (v22 != 0x676F4C646E617262) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 22:
          unint64_t v25 = 0xE700000000000000;
          if (v22 != 0x65646F63726162) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 23:
          unint64_t v25 = 0xE900000000000065;
          if (v22 != 0x727574706C756373) {
            goto LABEL_101;
          }
          goto LABEL_100;
        case 24:
          unint64_t v25 = 0xE700000000000000;
          uint64_t v26 = 0x656E696C796B73;
          goto LABEL_99;
        case 25:
          unint64_t v25 = 0xE800000000000000;
          if (v22 != 0x44327463656A626FLL) {
            goto LABEL_101;
          }
          goto LABEL_100;
        default:
LABEL_99:
          if (v22 != v26) {
            goto LABEL_101;
          }
LABEL_100:
          if (v21 == v25)
          {
            swift_bridgeObjectRelease_n();
LABEL_107:
            *(unint64_t *)((char *)a1 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
            unint64_t v9 = v63;
            int64_t v6 = v65;
            if (!__OFADD__(v67, 1))
            {
              ++v67;
              goto LABEL_5;
            }
            __break(1u);
LABEL_218:
            __break(1u);
LABEL_219:
            __break(1u);
LABEL_220:
            __break(1u);
LABEL_221:
            __break(1u);
LABEL_222:
            __break(1u);
            JUMPOUT(0x1DCD74068);
          }
LABEL_101:
          char v30 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v30) {
            goto LABEL_107;
          }
          unint64_t v19 = (v19 + 1) & v20;
          if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
          {
            unint64_t v9 = v63;
            int64_t v6 = v65;
            goto LABEL_5;
          }
          break;
      }
    }
  }
  uint64_t v57 = a3 + 56;
  uint64_t v31 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  unint64_t v33 = v32 & *(void *)(a3 + 56);
  int64_t v59 = (unint64_t)(v31 + 63) >> 6;
  uint64_t v34 = a4 + 56;
  uint64_t v67 = 0;
LABEL_112:
  while (2)
  {
    if (v33)
    {
      unint64_t v35 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      unint64_t v36 = v35 | (v6 << 6);
LABEL_128:
      int v40 = *(unsigned __int8 *)(*(void *)(a3 + 48) + v36);
      sub_1DD0490B8();
      sub_1DD0484F8();
      swift_bridgeObjectRelease();
      uint64_t v41 = sub_1DD049108();
      uint64_t v42 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v43 = v41 & ~v42;
      if (((*(void *)(v34 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
        continue;
      }
      unint64_t v62 = v36;
      unint64_t v64 = v33;
      int64_t v66 = v6;
      uint64_t v44 = ~v42;
      while (1)
      {
        unint64_t v45 = 0xE300000000000000;
        uint64_t v46 = 7631457;
        switch(*(unsigned char *)(*(void *)(a4 + 48) + v43))
        {
          case 1:
            unint64_t v45 = 0xE600000000000000;
            uint64_t v46 = 0x65727574616ELL;
            break;
          case 2:
            unint64_t v45 = 0xE800000000000000;
            uint64_t v46 = 0x6B72616D646E616CLL;
            break;
          case 3:
            uint64_t v46 = 0x4C6C61727574616ELL;
            unint64_t v45 = 0xEF6B72616D646E61;
            break;
          case 4:
            unint64_t v45 = 0xE500000000000000;
            uint64_t v46 = 0x616964656DLL;
            break;
          case 5:
            unint64_t v45 = 0xE400000000000000;
            uint64_t v46 = 1802465122;
            break;
          case 6:
            unint64_t v45 = 0xE500000000000000;
            uint64_t v46 = 0x6D75626C61;
            break;
          case 7:
            unint64_t v45 = 0xE400000000000000;
            uint64_t v46 = 1937006947;
            break;
          case 8:
            unint64_t v45 = 0xE400000000000000;
            uint64_t v46 = 1936158564;
            break;
          case 9:
            unint64_t v45 = 0xE700000000000000;
            unsigned int v47 = 1835626081;
            goto LABEL_144;
          case 0xA:
            unint64_t v45 = 0xE500000000000000;
            uint64_t v46 = 0x7364726962;
            break;
          case 0xB:
            unint64_t v45 = 0xE700000000000000;
            uint64_t v46 = 0x73746365736E69;
            break;
          case 0xC:
            unint64_t v45 = 0xE800000000000000;
            uint64_t v46 = 0x73656C6974706572;
            break;
          case 0xD:
            unint64_t v45 = 0xE700000000000000;
            unsigned int v47 = 1835884909;
LABEL_144:
            uint64_t v46 = v47 | 0x736C6100000000;
            break;
          case 0xE:
            unint64_t v45 = 0xE700000000000000;
            uint64_t v46 = 0x6C657261707061;
            break;
          case 0xF:
            uint64_t v46 = 0x726F737365636361;
            unint64_t v45 = 0xEB00000000736569;
            break;
          case 0x10:
            unint64_t v45 = 0xE400000000000000;
            uint64_t v46 = 1685024614;
            break;
          case 0x11:
            unint64_t v45 = 0xEA0000000000746ELL;
            uint64_t v46 = 0x6F726665726F7473;
            break;
          case 0x12:
            unsigned int v48 = 1852270963;
            goto LABEL_152;
          case 0x13:
            unint64_t v45 = 0x80000001DD066AB0;
            uint64_t v46 = 0xD000000000000011;
            break;
          case 0x14:
            unsigned int v48 = 1869903201;
LABEL_152:
            uint64_t v46 = v48 | 0x626D795300000000;
            unint64_t v45 = 0xEA00000000006C6FLL;
            break;
          case 0x15:
            uint64_t v46 = 0x676F4C646E617262;
            unint64_t v45 = 0xEF6C6F626D79536FLL;
            break;
          case 0x16:
            unint64_t v45 = 0xE700000000000000;
            uint64_t v46 = 0x65646F63726162;
            break;
          case 0x17:
            uint64_t v46 = 0x727574706C756373;
            unint64_t v45 = 0xE900000000000065;
            break;
          case 0x18:
            unint64_t v45 = 0xE700000000000000;
            uint64_t v46 = 0x656E696C796B73;
            break;
          case 0x19:
            unint64_t v45 = 0xE800000000000000;
            uint64_t v46 = 0x44327463656A626FLL;
            break;
          default:
            break;
        }
        unint64_t v49 = 0xE300000000000000;
        uint64_t v50 = 7631457;
        switch(v40)
        {
          case 1:
            unint64_t v49 = 0xE600000000000000;
            if (v46 != 0x65727574616ELL) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 2:
            unint64_t v49 = 0xE800000000000000;
            if (v46 != 0x6B72616D646E616CLL) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 3:
            unint64_t v49 = 0xEF6B72616D646E61;
            if (v46 != 0x4C6C61727574616ELL) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 4:
            unint64_t v49 = 0xE500000000000000;
            if (v46 != 0x616964656DLL) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 5:
            unint64_t v49 = 0xE400000000000000;
            if (v46 != 1802465122) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 6:
            unint64_t v49 = 0xE500000000000000;
            if (v46 != 0x6D75626C61) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 7:
            unint64_t v49 = 0xE400000000000000;
            if (v46 != 1937006947) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 8:
            unint64_t v49 = 0xE400000000000000;
            if (v46 != 1936158564) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 9:
            unint64_t v49 = 0xE700000000000000;
            uint64_t v51 = 1835626081;
            goto LABEL_182;
          case 10:
            unint64_t v49 = 0xE500000000000000;
            if (v46 != 0x7364726962) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 11:
            unint64_t v49 = 0xE700000000000000;
            unint64_t v52 = 0x746365736E69;
            goto LABEL_183;
          case 12:
            unint64_t v49 = 0xE800000000000000;
            if (v46 != 0x73656C6974706572) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 13:
            unint64_t v49 = 0xE700000000000000;
            uint64_t v51 = 1835884909;
LABEL_182:
            unint64_t v52 = v51 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_183:
            if (v46 != (v52 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 14:
            unint64_t v49 = 0xE700000000000000;
            if (v46 != 0x6C657261707061) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 15:
            unint64_t v49 = 0xEB00000000736569;
            if (v46 != 0x726F737365636361) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 16:
            unint64_t v49 = 0xE400000000000000;
            if (v46 != 1685024614) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 17:
            unint64_t v49 = 0xEA0000000000746ELL;
            if (v46 != 0x6F726665726F7473) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 18:
            unsigned int v53 = 1852270963;
            goto LABEL_197;
          case 19:
            unint64_t v49 = 0x80000001DD066AB0;
            if (v46 != 0xD000000000000011) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 20:
            unsigned int v53 = 1869903201;
LABEL_197:
            unint64_t v49 = 0xEA00000000006C6FLL;
            if (v46 != (v53 | 0x626D795300000000)) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 21:
            unint64_t v49 = 0xEF6C6F626D79536FLL;
            if (v46 != 0x676F4C646E617262) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 22:
            unint64_t v49 = 0xE700000000000000;
            if (v46 != 0x65646F63726162) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 23:
            unint64_t v49 = 0xE900000000000065;
            if (v46 != 0x727574706C756373) {
              goto LABEL_208;
            }
            goto LABEL_207;
          case 24:
            unint64_t v49 = 0xE700000000000000;
            uint64_t v50 = 0x656E696C796B73;
            goto LABEL_206;
          case 25:
            unint64_t v49 = 0xE800000000000000;
            if (v46 != 0x44327463656A626FLL) {
              goto LABEL_208;
            }
            goto LABEL_207;
          default:
LABEL_206:
            if (v46 != v50) {
              goto LABEL_208;
            }
LABEL_207:
            if (v45 == v49)
            {
              swift_bridgeObjectRelease_n();
LABEL_214:
              *(unint64_t *)((char *)a1 + ((v62 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v62;
              unint64_t v33 = v64;
              int64_t v6 = v66;
              if (__OFADD__(v67, 1)) {
                goto LABEL_218;
              }
              ++v67;
              goto LABEL_112;
            }
LABEL_208:
            char v54 = sub_1DD048FA8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v54) {
              goto LABEL_214;
            }
            unint64_t v43 = (v43 + 1) & v44;
            if (((*(void *)(v34 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
            {
              unint64_t v33 = v64;
              int64_t v6 = v66;
              goto LABEL_112;
            }
            break;
        }
      }
    }
    break;
  }
  int64_t v37 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_220;
  }
  if (v37 >= v59) {
    goto LABEL_216;
  }
  unint64_t v38 = *(void *)(v57 + 8 * v37);
  ++v6;
  if (v38) {
    goto LABEL_127;
  }
  int64_t v6 = v37 + 1;
  if (v37 + 1 >= v59) {
    goto LABEL_216;
  }
  unint64_t v38 = *(void *)(v57 + 8 * v6);
  if (v38) {
    goto LABEL_127;
  }
  int64_t v6 = v37 + 2;
  if (v37 + 2 >= v59) {
    goto LABEL_216;
  }
  unint64_t v38 = *(void *)(v57 + 8 * v6);
  if (v38)
  {
LABEL_127:
    unint64_t v33 = (v38 - 1) & v38;
    unint64_t v36 = __clz(__rbit64(v38)) + (v6 << 6);
    goto LABEL_128;
  }
  int64_t v39 = v37 + 3;
  if (v39 >= v59) {
    goto LABEL_216;
  }
  unint64_t v38 = *(void *)(v57 + 8 * v39);
  if (v38)
  {
    int64_t v6 = v39;
    goto LABEL_127;
  }
  while (1)
  {
    int64_t v6 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      goto LABEL_222;
    }
    if (v6 >= v59) {
      break;
    }
    unint64_t v38 = *(void *)(v57 + 8 * v6);
    ++v39;
    if (v38) {
      goto LABEL_127;
    }
  }
LABEL_216:
  swift_retain();
  return sub_1DCF93A34(a1, a2, v67, a3);
}

uint64_t sub_1DCD742D8(void *a1)
{
  return sub_1DCD7133C(0, a1[2], 0, a1, &qword_1EBE85190, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
}

uint64_t sub_1DCD7431C(uint64_t a1)
{
  return sub_1DCD6F4B4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1DCD74330()
{
}

uint64_t sub_1DCD74344(uint64_t a1)
{
  return sub_1DCD6F7E0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DCD74358(uint64_t a1)
{
  return sub_1DCD6F348(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DCD7436C(void *a1)
{
  return sub_1DCD6FB20(0, a1[2], 0, a1);
}

uint64_t sub_1DCD74380(uint64_t a1)
{
  return sub_1DCD701EC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DCD74394(uint64_t a1)
{
  return sub_1DCD70368(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DCD743A8(uint64_t a1)
{
  return sub_1DCD7116C(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_1EBE84908);
}

uint64_t sub_1DCD743E0(uint64_t a1)
{
  return sub_1DCD70090(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_1EBE851F8);
}

uint64_t sub_1DCD74410(uint64_t a1)
{
  return sub_1DCD70B18(0, *(void *)(a1 + 16), 0, (char *)a1, (uint64_t *)&unk_1EBE851B8);
}

uint64_t sub_1DCD74448(uint64_t a1)
{
  return sub_1DCD70808(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DCD7445C(uint64_t a1)
{
  return sub_1DCD70984(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DCD74470(uint64_t a1)
{
  return sub_1DCD70FB0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1DCD74484(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DCD74490(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1DCD744A0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85138);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  int64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD765C8();
  sub_1DD049128();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84EF0);
    sub_1DCD7661C();
    sub_1DD048E28();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1DCD74618(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v117 = a3;
  uint64_t v118 = a7;
  uint64_t v114 = a6;
  uint64_t v115 = a5;
  uint64_t v116 = a4;
  uint64_t v8 = sub_1DD048068();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v113 = (char *)v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v110 = (uint64_t)v102 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v112 = (uint64_t)v102 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v119 = (uint64_t)v102 - v16;
  MEMORY[0x1F4188790](v17);
  unint64_t v19 = (char *)v102 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)v102 - v21;
  MEMORY[0x1F4188790](v23);
  unint64_t v25 = (char *)v102 - v24;
  MEMORY[0x1F4188790](v26);
  unint64_t v28 = (char *)v102 - v27;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)v102 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)v102 - v33;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1DCDB40EC((uint64_t)v34);
    sub_1DCDB4300((uint64_t)v31);
    uint64_t v41 = *(void (**)(char *, uint64_t))(v9 + 8);
    v41(v34, v8);
    uint64_t v42 = sub_1DD048048();
    os_log_type_t v43 = sub_1DD048848();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_1DCCF9000, v42, v43, "checkAvailableDomains(): checkEnableStatus: no self", v44, 2u);
      MEMORY[0x1E01B07E0](v44, -1, -1);
    }

    v41(v31, v8);
    return sub_1DCEB3A3C(1uLL, v117, v116, v115, v114, v118);
  }
  uint64_t v36 = Strong;
  uint64_t v111 = v8;
  if ((a1 & 1) == 0)
  {
    sub_1DCDB40EC((uint64_t)v28);
    sub_1DCDB4300((uint64_t)v25);
    uint64_t v46 = *(void (**)(char *, uint64_t))(v9 + 8);
    unsigned int v47 = v28;
    uint64_t v48 = v111;
    v46(v47, v111);
    unint64_t v49 = sub_1DD048048();
    os_log_type_t v50 = sub_1DD048848();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl(&dword_1DCCF9000, v49, v50, "checkAvailableDomains(): .disabled", v51, 2u);
      MEMORY[0x1E01B07E0](v51, -1, -1);
    }

    v46(v25, v48);
    sub_1DCEB3A3C(1uLL, v117, v116, v115, v114, v118);
    return swift_release();
  }
  __swift_project_boxed_opaque_existential_1((void *)(Strong + 40), *(void *)(Strong + 64));
  unint64_t v37 = sub_1DCE4B0FC();
  unint64_t v38 = *(void *)(v36 + 16);
  if (v38)
  {
    if (v38 != 1)
    {
      swift_bridgeObjectRetain();
      sub_1DCD765A8(v38);
      uint64_t v39 = sub_1DCD72A00(v38, v37);
      unint64_t v40 = v38;
      unint64_t v38 = v39;
      sub_1DCD74490(v40);
    }
    unint64_t v107 = v38;
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v107 = v37;
  }
  sub_1DCDB40EC((uint64_t)v22);
  sub_1DCDB4300((uint64_t)v19);
  uint64_t v53 = v9 + 8;
  unint64_t v52 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v54 = v111;
  v52(v22, v111);
  swift_retain_n();
  BOOL v55 = sub_1DD048048();
  os_log_type_t v56 = sub_1DD048848();
  BOOL v57 = os_log_type_enabled(v55, v56);
  uint64_t v108 = v36;
  long long v109 = (void (*)(uint64_t, uint64_t))v52;
  if (v57)
  {
    uint64_t v58 = v36;
    int64_t v59 = (uint8_t *)swift_slowAlloc();
    os_log_t v106 = (os_log_t)swift_slowAlloc();
    os_log_t v121 = v106;
    *(_DWORD *)int64_t v59 = 136315138;
    uint64_t v105 = v59 + 4;
    uint64_t v60 = sub_1DCD6D7D4(*(void *)(v58 + 16));
    uint64_t v120 = sub_1DCED7FA0(v60, v61, (uint64_t *)&v121);
    sub_1DD048A28();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v55, v56, "checkAvailableDomains(): availableDomains: %s", v59, 0xCu);
    os_log_t v62 = v106;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v62, -1, -1);
    MEMORY[0x1E01B07E0](v59, -1, -1);

    unint64_t v63 = v19;
    unint64_t v64 = v109;
    v109((uint64_t)v63, v54);
    uint64_t v65 = v54;
    uint64_t v66 = (uint64_t)v113;
  }
  else
  {

    swift_release_n();
    v52(v19, v54);
    uint64_t v65 = v54;
    uint64_t v66 = (uint64_t)v113;
    unint64_t v64 = (void (*)(uint64_t, uint64_t))v52;
  }
  uint64_t v67 = v119;
  sub_1DCDB40EC(v119);
  uint64_t v68 = v112;
  sub_1DCDB4300(v112);
  v64(v67, v65);
  swift_bridgeObjectRetain();
  uint64_t v69 = sub_1DD048048();
  int v70 = sub_1DD048848();
  if (!os_log_type_enabled(v69, (os_log_type_t)v70))
  {

    swift_bridgeObjectRelease_n();
    v64(v68, v65);
LABEL_30:
    uint64_t v94 = v110;
    sub_1DCDB40EC(v110);
    sub_1DCDB4300(v66);
    v64(v94, v65);
    unint64_t v95 = v107;
    sub_1DCD765A8(v107);
    sub_1DCD765A8(v95);
    unint64_t v96 = sub_1DD048048();
    os_log_type_t v97 = sub_1DD048848();
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v98 = (uint8_t *)swift_slowAlloc();
      uint64_t v99 = swift_slowAlloc();
      os_log_t v121 = (os_log_t)v99;
      *(_DWORD *)uint64_t v98 = 136315138;
      uint64_t v100 = sub_1DCD6D7D4(v95);
      uint64_t v120 = sub_1DCED7FA0(v100, v101, (uint64_t *)&v121);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD74490(v95);
      sub_1DCD74490(v95);
      _os_log_impl(&dword_1DCCF9000, v96, v97, "checkAvailableDomains(): action(domains): %s", v98, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v99, -1, -1);
      MEMORY[0x1E01B07E0](v98, -1, -1);

      v109((uint64_t)v113, v65);
    }
    else
    {
      sub_1DCD74490(v95);
      sub_1DCD74490(v95);

      v64(v66, v65);
    }
    sub_1DCEB3A3C(v95, v117, v116, v115, v114, v118);
    swift_release();
    return sub_1DCD74490(v95);
  }
  int v104 = v70;
  os_log_t v106 = v69;
  uint64_t v71 = (uint8_t *)swift_slowAlloc();
  uint64_t v103 = swift_slowAlloc();
  os_log_t v121 = (os_log_t)v103;
  uint64_t v105 = v71;
  *(_DWORD *)uint64_t v71 = 136315138;
  int64_t v72 = *(void *)(v37 + 16);
  uint64_t v73 = MEMORY[0x1E4FBC860];
  if (!v72)
  {
LABEL_29:
    uint64_t v120 = v73;
    swift_bridgeObjectRetain();
    sub_1DCD6E768(&v120);
    swift_bridgeObjectRelease();
    unint64_t v88 = v105;
    uint64_t v89 = MEMORY[0x1E01AE380](v120, MEMORY[0x1E4FBB1A0]);
    unint64_t v91 = v90;
    swift_release();
    uint64_t v120 = sub_1DCED7FA0(v89, v91, (uint64_t *)&v121);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v92 = v106;
    _os_log_impl(&dword_1DCCF9000, v106, (os_log_type_t)v104, "checkAvailableDomains(): fetchedDomains: %s", v88, 0xCu);
    uint64_t v93 = v103;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v93, -1, -1);
    MEMORY[0x1E01B07E0](v88, -1, -1);

    v64(v68, v65);
    uint64_t v66 = (uint64_t)v113;
    goto LABEL_30;
  }
  v102[1] = v53;
  uint64_t v120 = MEMORY[0x1E4FBC860];
  sub_1DCFC4948(0, v72, 0);
  uint64_t v73 = v120;
  int64_t v74 = sub_1DCF55B0C(v37);
  int v76 = v75;
  char v78 = v77 & 1;
  uint64_t v119 = v37 + 56;
  while ((v74 & 0x8000000000000000) == 0 && v74 < 1 << *(unsigned char *)(v37 + 32))
  {
    if (((*(void *)(v119 + (((unint64_t)v74 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v74) & 1) == 0) {
      goto LABEL_35;
    }
    if (*(_DWORD *)(v37 + 36) != v76) {
      goto LABEL_36;
    }
    uint64_t v79 = sub_1DCD9C35C(*(unsigned char *)(*(void *)(v37 + 48) + v74));
    uint64_t v81 = v80;
    uint64_t v120 = v73;
    unint64_t v83 = *(void *)(v73 + 16);
    unint64_t v82 = *(void *)(v73 + 24);
    if (v83 >= v82 >> 1)
    {
      sub_1DCFC4948(v82 > 1, v83 + 1, 1);
      uint64_t v73 = v120;
    }
    *(void *)(v73 + 16) = v83 + 1;
    uint64_t v84 = v73 + 16 * v83;
    *(void *)(v84 + 32) = v79;
    *(void *)(v84 + 40) = v81;
    int64_t v85 = sub_1DCF55BAC(v74, v76, v78 & 1, v37);
    int64_t v74 = v85;
    int v76 = v86;
    char v78 = v87 & 1;
    if (!--v72)
    {
      sub_1DCD74484(v85, v86, v87 & 1);
      uint64_t v65 = v111;
      uint64_t v68 = v112;
      unint64_t v64 = v109;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1DCD750FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  unsigned int v47 = a5;
  uint64_t v11 = sub_1DD048068();
  uint64_t v45 = *(void *)(v11 - 8);
  uint64_t v46 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v43 - v15;
  uint64_t v17 = sub_1DD048208();
  uint64_t v18 = *(void *)(v17 - 8);
  double v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (uint64_t *)((char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = a1;
  uint64_t v22 = *(void **)(a1 + 32);
  *uint64_t v21 = v22;
  (*(void (**)(void *, void, uint64_t, double))(v18 + 104))(v21, *MEMORY[0x1E4FBCBF0], v17, v19);
  swift_retain();
  uint64_t v48 = a3;
  swift_bridgeObjectRetain();
  uint64_t v23 = a4;
  uint64_t v24 = a6;
  swift_retain();
  swift_retain();
  id v25 = v22;
  LOBYTE(v22) = sub_1DD048228();
  uint64_t v27 = *(void (**)(void *, uint64_t))(v18 + 8);
  uint64_t v26 = v18 + 8;
  v27(v21, v17);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_8;
  }
  unint64_t v28 = self;
  uint64_t v29 = (void *)sub_1DD0483D8();
  LODWORD(v28) = objc_msgSend(v28, sel_BOOLForEntitlement_, v29);

  if (v28)
  {
    sub_1DCDB40EC((uint64_t)v16);
    uint64_t v30 = sub_1DD048048();
    os_log_type_t v31 = sub_1DD048848();
    uint64_t v26 = v23;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_1DCCF9000, v30, v31, "Process has bypass entitlement, all domains allowed", v32, 2u);
      MEMORY[0x1E01B07E0](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v46);
    goto LABEL_16;
  }
  uint64_t v26 = v23;
  if ((sub_1DCDE82EC() & 1) == 0)
  {
    if (qword_1EBE871A0 != -1) {
      swift_once();
    }
    uint64_t v33 = &qword_1EBE871E8;
    goto LABEL_12;
  }
  if (qword_1EAB01C28 != -1) {
    goto LABEL_20;
  }
LABEL_8:
  uint64_t v33 = (uint64_t *)&off_1EAB02A48;
LABEL_12:
  uint64_t v34 = *(void **)(*v33 + 32);
  swift_retain();
  unint64_t v35 = (void *)sub_1DD0483D8();
  LODWORD(v34) = objc_msgSend(v34, sel_BOOLForKey_, v35);
  swift_release();

  if (!v34)
  {
    uint64_t v39 = *(void *)(v44 + 24);
    uint64_t v40 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    uint64_t v41 = v48;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DCEC9478(v39, v40, a2, v41, v26, v47, a6);
    swift_release();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
    goto LABEL_18;
  }
  sub_1DCDB40EC((uint64_t)v13);
  uint64_t v36 = sub_1DD048048();
  os_log_type_t v37 = sub_1DD048848();
  if (os_log_type_enabled(v36, v37))
  {
    unint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v38 = 0;
    _os_log_impl(&dword_1DCCF9000, v36, v37, "Availability checking is disabled", v38, 2u);
    MEMORY[0x1E01B07E0](v38, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v46);
LABEL_16:
  sub_1DCEB3A3C(0, a2, v48, v26, v47, v24);
  swift_bridgeObjectRelease();
LABEL_18:
  swift_release();
  swift_release();
  return swift_release();
}

unint64_t sub_1DCD75620(char a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v108 = a3;
  uint64_t v109 = a5;
  unint64_t v107 = a4;
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v103 = (uint64_t)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v104 = (uint64_t)&v95 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v105 = (uint64_t)&v95 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v111 = (uint64_t)&v95 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v95 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v95 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v95 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v95 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v95 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v95 - v31;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1DCDB40EC((uint64_t)v32);
    sub_1DCDB4300((uint64_t)v29);
    uint64_t v36 = *(void (**)(char *, uint64_t))(v7 + 8);
    v36(v32, v6);
    os_log_type_t v37 = sub_1DD048048();
    os_log_type_t v38 = sub_1DD048848();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl(&dword_1DCCF9000, v37, v38, "checkAvailableDomains(): checkEnableStatus: no self", v39, 2u);
      MEMORY[0x1E01B07E0](v39, -1, -1);
    }

    v36(v29, v6);
    return sub_1DCF5AAC4(1uLL, v108, v107, v109);
  }
  uint64_t v106 = v6;
  if ((a1 & 1) == 0)
  {
    sub_1DCDB40EC((uint64_t)v26);
    sub_1DCDB4300((uint64_t)v23);
    uint64_t v41 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v42 = v106;
    v41(v26, v106);
    uint64_t v43 = sub_1DD048048();
    os_log_type_t v44 = sub_1DD048848();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl(&dword_1DCCF9000, v43, v44, "checkAvailableDomains(): .disabled", v45, 2u);
      MEMORY[0x1E01B07E0](v45, -1, -1);
    }

    v41(v23, v42);
    sub_1DCF5AAC4(1uLL, v108, v107, v109);
    return swift_release();
  }
  uint64_t v33 = Strong;
  __swift_project_boxed_opaque_existential_1((void *)(Strong + 40), *(void *)(Strong + 64));
  unint64_t v34 = sub_1DCE4B0FC();
  unint64_t v35 = *(void *)(v33 + 16);
  if (v35)
  {
    if (v35 == 1)
    {
      unint64_t v101 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1DCD765A8(v35);
      uint64_t v46 = sub_1DCD72A00(v35, v34);
      sub_1DCD74490(v35);
      unint64_t v101 = v46;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v101 = v34;
  }
  sub_1DCDB40EC((uint64_t)v20);
  sub_1DCDB4300((uint64_t)v17);
  unsigned int v47 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v48 = v20;
  uint64_t v49 = v106;
  v47(v48, v106);
  swift_retain_n();
  os_log_type_t v50 = sub_1DD048048();
  os_log_type_t v51 = sub_1DD048848();
  BOOL v52 = os_log_type_enabled(v50, v51);
  uint64_t v102 = v7 + 8;
  if (v52)
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v113 = v54;
    *(_DWORD *)uint64_t v53 = 136315138;
    uint64_t v55 = sub_1DCD6D7D4(*(void *)(v33 + 16));
    uint64_t v112 = sub_1DCED7FA0(v55, v56, &v113);
    sub_1DD048A28();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v50, v51, "checkAvailableDomains(): availableDomains: %s", v53, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v54, -1, -1);
    BOOL v57 = v53;
    uint64_t v49 = v106;
    MEMORY[0x1E01B07E0](v57, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  v47(v17, v49);
  uint64_t v58 = v111;
  sub_1DCDB40EC(v111);
  uint64_t v59 = v105;
  sub_1DCDB4300(v105);
  v47((char *)v58, v49);
  swift_bridgeObjectRetain();
  uint64_t v60 = sub_1DD048048();
  int v61 = sub_1DD048848();
  BOOL v62 = os_log_type_enabled(v60, (os_log_type_t)v61);
  uint64_t v100 = (void (*)(uint64_t, uint64_t))v47;
  if (!v62)
  {

    swift_bridgeObjectRelease_n();
    v47((char *)v59, v49);
LABEL_30:
    uint64_t v86 = v104;
    sub_1DCDB40EC(v104);
    uint64_t v87 = v103;
    sub_1DCDB4300(v103);
    v47((char *)v86, v49);
    unint64_t v88 = v101;
    sub_1DCD765A8(v101);
    sub_1DCD765A8(v88);
    uint64_t v89 = sub_1DD048048();
    os_log_type_t v90 = sub_1DD048848();
    if (os_log_type_enabled(v89, v90))
    {
      unint64_t v91 = (uint8_t *)swift_slowAlloc();
      uint64_t v92 = swift_slowAlloc();
      uint64_t v113 = v92;
      *(_DWORD *)unint64_t v91 = 136315138;
      uint64_t v93 = sub_1DCD6D7D4(v88);
      uint64_t v112 = sub_1DCED7FA0(v93, v94, &v113);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD74490(v88);
      sub_1DCD74490(v88);
      _os_log_impl(&dword_1DCCF9000, v89, v90, "checkAvailableDomains(): action(domains): %s", v91, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v92, -1, -1);
      MEMORY[0x1E01B07E0](v91, -1, -1);

      v100(v87, v49);
    }
    else
    {
      sub_1DCD74490(v88);
      sub_1DCD74490(v88);

      v47((char *)v87, v49);
    }
    sub_1DCF5AAC4(v88, v108, v107, v109);
    swift_release();
    return sub_1DCD74490(v88);
  }
  int v97 = v61;
  os_log_t v99 = v60;
  unint64_t v63 = (uint8_t *)swift_slowAlloc();
  uint64_t v96 = swift_slowAlloc();
  uint64_t v113 = v96;
  uint64_t v98 = v63;
  *(_DWORD *)unint64_t v63 = 136315138;
  int64_t v64 = *(void *)(v34 + 16);
  uint64_t v65 = MEMORY[0x1E4FBC860];
  if (!v64)
  {
LABEL_29:
    uint64_t v112 = v65;
    swift_bridgeObjectRetain();
    sub_1DCD6E768(&v112);
    swift_bridgeObjectRelease();
    uint64_t v80 = v98;
    uint64_t v81 = MEMORY[0x1E01AE380](v112, MEMORY[0x1E4FBB1A0]);
    unint64_t v83 = v82;
    swift_release();
    uint64_t v112 = sub_1DCED7FA0(v81, v83, &v113);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v84 = v99;
    _os_log_impl(&dword_1DCCF9000, v99, (os_log_type_t)v97, "checkAvailableDomains(): fetchedDomains: %s", v80, 0xCu);
    uint64_t v85 = v96;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v85, -1, -1);
    MEMORY[0x1E01B07E0](v80, -1, -1);

    unsigned int v47 = (void (*)(char *, uint64_t))v100;
    v100(v59, v49);
    goto LABEL_30;
  }
  uint64_t v112 = MEMORY[0x1E4FBC860];
  sub_1DCFC4948(0, v64, 0);
  uint64_t v65 = v112;
  int64_t v66 = sub_1DCF55B0C(v34);
  int v68 = v67;
  char v70 = v69 & 1;
  uint64_t v111 = v34 + 56;
  while ((v66 & 0x8000000000000000) == 0 && v66 < 1 << *(unsigned char *)(v34 + 32))
  {
    if (((*(void *)(v111 + (((unint64_t)v66 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v66) & 1) == 0) {
      goto LABEL_35;
    }
    if (*(_DWORD *)(v34 + 36) != v68) {
      goto LABEL_36;
    }
    uint64_t v71 = sub_1DCD9C35C(*(unsigned char *)(*(void *)(v34 + 48) + v66));
    uint64_t v73 = v72;
    uint64_t v112 = v65;
    unint64_t v75 = *(void *)(v65 + 16);
    unint64_t v74 = *(void *)(v65 + 24);
    if (v75 >= v74 >> 1)
    {
      sub_1DCFC4948(v74 > 1, v75 + 1, 1);
      uint64_t v65 = v112;
    }
    *(void *)(v65 + 16) = v75 + 1;
    uint64_t v76 = v65 + 16 * v75;
    *(void *)(v76 + 32) = v71;
    *(void *)(v76 + 40) = v73;
    int64_t v77 = sub_1DCF55BAC(v66, v68, v70 & 1, v34);
    int64_t v66 = v77;
    int v68 = v78;
    char v70 = v79 & 1;
    if (!--v64)
    {
      sub_1DCD74484(v77, v78, v79 & 1);
      uint64_t v59 = v105;
      uint64_t v49 = v106;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  unint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1DCD760CC(uint64_t a1, uint64_t a2, void (*a3)(void), void *a4)
{
  unint64_t v35 = a3;
  uint64_t v34 = sub_1DD048068();
  uint64_t v7 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = sub_1DD048208();
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (uint64_t *)((char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void **)(a1 + 32);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t, double))(v14 + 104))(v17, *MEMORY[0x1E4FBCBF0], v13, v15);
  swift_retain();
  swift_retain();
  id v19 = v18;
  LOBYTE(v18) = sub_1DD048228();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v20 = self;
  uint64_t v21 = (void *)sub_1DD0483D8();
  LODWORD(v20) = objc_msgSend(v20, sel_BOOLForEntitlement_, v21);

  if (v20)
  {
    sub_1DCDB40EC((uint64_t)v12);
    uint64_t v22 = sub_1DD048048();
    os_log_type_t v23 = sub_1DD048848();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1DCCF9000, v22, v23, "Process has bypass entitlement, all domains allowed", v24, 2u);
      MEMORY[0x1E01B07E0](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v34);
    goto LABEL_16;
  }
  if ((sub_1DCDE82EC() & 1) == 0)
  {
    if (qword_1EBE871A0 != -1) {
      swift_once();
    }
    uint64_t v25 = &qword_1EBE871E8;
    goto LABEL_12;
  }
  if (qword_1EAB01C28 != -1) {
    goto LABEL_20;
  }
LABEL_8:
  uint64_t v25 = (uint64_t *)&off_1EAB02A48;
LABEL_12:
  uint64_t v26 = *(void **)(*v25 + 32);
  swift_retain();
  uint64_t v27 = (void *)sub_1DD0483D8();
  LODWORD(v26) = objc_msgSend(v26, sel_BOOLForKey_, v27);
  swift_release();

  if (!v26)
  {
    uint64_t v31 = *(void *)(a1 + 24);
    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1DCEC9B14(v31, v32, a2, v35, a4);
    swift_release();
    swift_release_n();
    goto LABEL_18;
  }
  sub_1DCDB40EC((uint64_t)v9);
  uint64_t v28 = sub_1DD048048();
  os_log_type_t v29 = sub_1DD048848();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl(&dword_1DCCF9000, v28, v29, "Availability checking is disabled", v30, 2u);
    MEMORY[0x1E01B07E0](v30, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v34);
LABEL_16:
  sub_1DCF5AAC4(0, a2, v35, (uint64_t)a4);
LABEL_18:
  swift_release();
  return swift_release();
}

uint64_t sub_1DCD76570()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1DCD765A8(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

ValueMetadata *type metadata accessor for WeakAvailabilityConfig()
{
  return &type metadata for WeakAvailabilityConfig;
}

unint64_t sub_1DCD765C8()
{
  unint64_t result = qword_1EBE84B38;
  if (!qword_1EBE84B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84B38);
  }
  return result;
}

unint64_t sub_1DCD7661C()
{
  unint64_t result = qword_1EBE84EF8;
  if (!qword_1EBE84EF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE84EF0);
    sub_1DCD76754(&qword_1EBE85000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84EF8);
  }
  return result;
}

unint64_t sub_1DCD766B8()
{
  unint64_t result = qword_1EAB027D0;
  if (!qword_1EAB027D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE84EF0);
    sub_1DCD76754(&qword_1EAB027D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB027D0);
  }
  return result;
}

uint64_t sub_1DCD76754(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE84FF0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WeakAvailabilityConfig.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for WeakAvailabilityConfig.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCD768A8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeakAvailabilityConfig.CodingKeys()
{
  return &type metadata for WeakAvailabilityConfig.CodingKeys;
}

unint64_t sub_1DCD768E4()
{
  unint64_t result = qword_1EAB027E0;
  if (!qword_1EAB027E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB027E0);
  }
  return result;
}

unint64_t sub_1DCD7693C()
{
  unint64_t result = qword_1EBE84B48;
  if (!qword_1EBE84B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84B48);
  }
  return result;
}

unint64_t sub_1DCD76994()
{
  unint64_t result = qword_1EBE84B40;
  if (!qword_1EBE84B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84B40);
  }
  return result;
}

uint64_t sub_1DCD769EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A38);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD77E08();
  sub_1DD049138();
  char v13 = 0;
  sub_1DD048EF8();
  if (!v3)
  {
    v11[1] = a3;
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86818);
    sub_1DCD78168((unint64_t *)&unk_1EBE86820);
    sub_1DD048F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

BOOL sub_1DCD76BA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1DCD76BBC()
{
  if (*v0) {
    return 0x63536E69616D6F64;
  }
  else {
    return 0x6E6F697469736F70;
  }
}

uint64_t sub_1DCD76C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCD77E5C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1DCD76C2C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1DCD76C38(uint64_t a1)
{
  unint64_t v2 = sub_1DCD77E08();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCD76C74(uint64_t a1)
{
  unint64_t v2 = sub_1DCD77E08();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCD76CB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCD77F74(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1DCD76CDC(void *a1)
{
  return sub_1DCD769EC(a1, *v1, v1[1]);
}

uint64_t sub_1DCD76CF8(void *a1, void *a2)
{
  if (*a1 == *a2) {
    return sub_1DCD8D334(a1[1], a2[1]);
  }
  else {
    return 0;
  }
}

uint64_t sub_1DCD76D1C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v35 = a3;
  uint64_t v34 = a2;
  uint64_t v6 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1DD048068();
  uint64_t v9 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (uint64_t *)((char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = a1;
  sub_1DCFE2930((uint64_t)v14);
  char v19 = v35;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1DCD2479C((uint64_t)v14, &qword_1EBE85DB0);
    sub_1DCDB40EC((uint64_t)v11);
    uint64_t v20 = sub_1DD048048();
    os_log_type_t v21 = sub_1DD048858();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_1DCCF9000, v20, v21, "DomainPredictionModel does not have modelDescription.", v22, 2u);
      MEMORY[0x1E01B07E0](v22, -1, -1);
    }

    sub_1DCD793C8(v37, type metadata accessor for MLModelInfo);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v36);
  }
  else
  {
    uint64_t v24 = (uint64_t)v18;
    sub_1DCD79428((uint64_t)v14, (uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
    uint64_t v25 = sub_1DCD782BC(v18);
    uint64_t v28 = v37;
    if ((v29 & 1) == 0)
    {
      uint64_t v30 = v25;
      uint64_t v31 = v26;
      uint64_t v32 = v27;
      sub_1DCD79360(v37, v4 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_modelInfo, type metadata accessor for MLModelInfo);
      sub_1DCD79360(v28, (uint64_t)v8, type metadata accessor for MLModelInfo);
      type metadata accessor for DomainPredictionRequestProcessor();
      swift_allocObject();
      *(void *)(v4 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_requestProcessor) = sub_1DCD52E70((uint64_t)v8, v30, v31, v32, 0x6165665F65646F6ELL, 0xEC00000065727574, 0x7474615F65676465, 0xE900000000000072);
      sub_1DCD79360(v28, (uint64_t)v8, type metadata accessor for MLModelInfo);
      type metadata accessor for DomainPredictionResponseProcessor();
      swift_allocObject();
      *(void *)(v4 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_responseProcessor) = sub_1DCF1139C((uint64_t)v8, v30);
      v38[0] = 1;
      sub_1DCD79360(v28, (uint64_t)v8, type metadata accessor for MLModelInfo);
      type metadata accessor for CachedCoreMLModelProvider();
      swift_allocObject();
      uint64_t v33 = sub_1DCF3D39C(v38, (uint64_t)v8, v34, v19 & 1, 0, 0);
      sub_1DCD793C8(v28, type metadata accessor for MLModelInfo);
      sub_1DCD793C8(v24, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
      *(void *)(v4 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_coreMLModelProvider) = v33;
      return v4;
    }
    sub_1DCD793C8(v37, type metadata accessor for MLModelInfo);
    sub_1DCD793C8((uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_ModelDescription);
  }
  type metadata accessor for DomainPredictionNet();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_1DCD77268(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v60 = a4;
  uint64_t v59 = a3;
  uint64_t v62 = a2;
  int v61 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85788);
  MEMORY[0x1F4188790](v8 - 8);
  *(void *)&long long v65 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for EspressoModel(0);
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[3];
  double v19 = *((double *)a1 + 4);
  double v20 = *((double *)a1 + 5);
  double v21 = *((double *)a1 + 6);
  double v22 = *((double *)a1 + 7);
  uint64_t v23 = v6;
  sub_1DCF3B26C(a1[8]);
  uint64_t v24 = (uint64_t)v71;
  sub_1DCFE2DE4((uint64_t)v68);
  if (v24) {
    return;
  }
  uint64_t v54 = v18;
  uint64_t v55 = v17;
  uint64_t v53 = 0;
  uint64_t v56 = v16;
  uint64_t v57 = v15;
  uint64_t v58 = v11;
  uint64_t v25 = v62;
  uint64_t v71 = v14;
  uint64_t v26 = v23;
  uint64_t v27 = *(void *)(v23 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_responseProcessor);
  sub_1DCD3A3BC((uint64_t)v68, (uint64_t)v67);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85668);
  uint64_t v28 = v65;
  uint64_t v29 = v64;
  int v30 = swift_dynamicCast();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
  if (!v30)
  {
    v31(v28, 1, 1, v29);
    sub_1DCD2479C(v28, &qword_1EBE85788);
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v51 = 0xD00000000000001BLL;
    *(void *)(v51 + 8) = 0x80000001DD0688A0;
    *(unsigned char *)(v51 + 16) = 3;
    swift_willThrow();
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    return;
  }
  uint64_t v63 = v27;
  v31(v28, 0, 1, v29);
  uint64_t v32 = (uint64_t)v71;
  sub_1DCD79428(v28, (uint64_t)v71, type metadata accessor for EspressoModel);
  v69[0] = 0xD000000000000010;
  v69[1] = 0x80000001DD066960;
  _OWORD v69[2] = "DomainPrediction Model Preprocess Input";
  v69[3] = 39;
  char v70 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  uint64_t v33 = v25;
  swift_retain();
  uint64_t v34 = sub_1DCEA469C((uint64_t)v69, v25);
  swift_release();
  v66[0] = v19;
  v66[1] = v20;
  _OWORD v66[2] = v21;
  v66[3] = v22;
  sub_1DCD531FC(v57, v56, v55, v54, v66, v67);
  uint64_t v36 = v67[0];
  uint64_t v35 = v67[1];
  uint64_t v38 = v67[2];
  uint64_t v37 = v67[3];
  *(void *)&long long v65 = v67[4];
  sub_1DCEA3DA4();
  if (!v36)
  {
    sub_1DCD781D0(v35, v38);
    swift_bridgeObjectRelease();
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v52 = 0xD000000000000019;
    *(void *)(v52 + 8) = 0x80000001DD0688C0;
    *(unsigned char *)(v52 + 16) = 3;
    swift_willThrow();
    swift_release();
    sub_1DCD793C8(v32, type metadata accessor for EspressoModel);
    goto LABEL_11;
  }
  uint64_t v64 = v34;
  sub_1DCD79360(v32, (uint64_t)v58, type metadata accessor for EspressoModel);
  uint64_t v39 = *(void *)(v36 + 16);
  uint64_t v40 = (void (*)(uint64_t, void *))swift_allocObject();
  uint64_t v41 = v60;
  *((void *)v40 + 2) = v59;
  *((void *)v40 + 3) = v41;
  *((void *)v40 + 4) = v26;
  *((void *)v40 + 5) = v33;
  *((void *)v40 + 6) = v63;
  *((void *)v40 + 7) = v35;
  *((void *)v40 + 8) = v38;
  *((void *)v40 + 9) = v37;
  *((void *)v40 + 10) = v65;
  uint64_t v42 = qword_1EBE84A80;
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v42 != -1) {
    swift_once();
  }
  long long v65 = xmmword_1EBE84A60;
  long long v43 = xmmword_1EBE84A70;
  type metadata accessor for EspressoRequest(0);
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = (uint64_t)v58;
  sub_1DCD79360((uint64_t)v58, v44 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_model, type metadata accessor for EspressoModel);
  *(void *)(v44 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_features) = v39;
  *(void *)(v44 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_vnScalingMode) = 0;
  uint64_t v46 = (long long *)(v44 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_regionOfInterest);
  *uint64_t v46 = v65;
  v46[1] = v43;
  *(void *)(v44 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_outputs) = 0;
  unsigned int v47 = (void (**)(uint64_t, void *))(v44
                                              + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_completionHandler);
  *unsigned int v47 = sub_1DCD78280;
  v47[1] = v40;
  uint64_t v48 = qword_1EBE85738;
  swift_retain();
  uint64_t v49 = v61;
  if (v48 != -1) {
    swift_once();
  }
  uint64_t v50 = qword_1EBE9C908;
  swift_retain();
  swift_release();
  sub_1DCD793C8(v45, type metadata accessor for EspressoModel);
  *(void *)(v44 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_engineResult) = v50;
  *(unsigned char *)(v44 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_usesCPUOnly) = 1;
  *(void *)(v44 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_metricsBucket) = v33;
  v49[3] = (uint64_t)&type metadata for EspressoModelRequest;
  v49[4] = (uint64_t)&off_1F383B3D0;
  swift_release_n();
  swift_release();
  *uint64_t v49 = v44;
  sub_1DCD793C8((uint64_t)v71, type metadata accessor for EspressoModel);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
}

void sub_1DCD779B8(uint64_t a1, void *a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  if (a2)
  {
    sub_1DCD3A548();
    uint64_t v13 = (void *)swift_allocError();
    *(void *)uint64_t v14 = a2;
    *(void *)(v14 + 8) = 0;
    *(unsigned char *)(v14 + 16) = 1;
    uint64_t v26 = (uint64_t)v13;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    unint64_t v29 = 0;
    char v30 = 1;
    id v15 = a2;
    a3(&v26);
  }
  else
  {
    uint64_t v20 = a5 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_modelInfo;
    uint64_t v21 = type metadata accessor for MLModelInfo(0);
    sub_1DCD25CD8(*(unsigned __int8 *)(v20 + *(int *)(v21 + 32)), v25);
    type metadata accessor for DurationMeasurement();
    swift_allocObject();
    swift_retain();
    sub_1DCEA469C((uint64_t)v25, a6);
    swift_release();
    unint64_t v22 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_engineResult) + 24);
    swift_bridgeObjectRetain();
    sub_1DCD55D64(a8, a9);
    uint64_t v23 = sub_1DCFE3010();
    unint64_t v24 = sub_1DCF126FC(v22, a11, (uint64_t)v23, *(void *)(a7 + 24));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = a8;
    uint64_t v27 = a9;
    uint64_t v28 = a10;
    unint64_t v29 = v24;
    char v30 = 0;
    a3(&v26);
    sub_1DCD781D0(a8, a9);
    swift_bridgeObjectRelease();
    sub_1DCEA3DA4();
    swift_release();
  }
}

uint64_t sub_1DCD77BD8()
{
  sub_1DCD793C8(v0 + OBJC_IVAR____TtC18VisualIntelligence19DomainPredictionNet_modelInfo, type metadata accessor for MLModelInfo);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCD77C80()
{
  return type metadata accessor for DomainPredictionNet();
}

uint64_t type metadata accessor for DomainPredictionNet()
{
  uint64_t result = qword_1EBE86E88;
  if (!qword_1EBE86E88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCD77CD4()
{
  uint64_t result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DomainPredictionNet.PredictionResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DomainPredictionNet.PredictionResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DomainPredictionNet.PredictionResult()
{
  return &type metadata for DomainPredictionNet.PredictionResult;
}

unint64_t sub_1DCD77E08()
{
  unint64_t result = qword_1EBE85858;
  if (!qword_1EBE85858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85858);
  }
  return result;
}

uint64_t sub_1DCD77E5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x63536E69616D6F64 && a2 == 0xEE0070614D65726FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCD77F74(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB027E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1DCD77E08();
  sub_1DD049128();
  if (!v1)
  {
    v9[31] = 0;
    uint64_t v7 = sub_1DD048E08();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86818);
    v9[15] = 1;
    sub_1DCD78168(&qword_1EAB027F0);
    sub_1DD048E28();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_1DCD78168(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE86818);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCD781D0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCD78214()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

void sub_1DCD78280(uint64_t a1, void *a2)
{
  sub_1DCD779B8(a1, a2, *(void (**)(uint64_t *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void **)(v2 + 80));
}

uint64_t sub_1DCD782BC(void *a1)
{
  uint64_t v2 = sub_1DD048068();
  uint64_t v129 = *(void *)(v2 - 8);
  uint64_t v130 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v123 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v116 = (uint64_t)&v109 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v112 = (uint64_t)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v132 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v109 - v9);
  MEMORY[0x1F4188790](v10);
  uint64_t v117 = (uint64_t)&v109 - v11;
  uint64_t v126 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  MEMORY[0x1F4188790](v126);
  uint64_t v113 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v127 = (char *)&v109 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v125 = (char *)&v109 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v110 = (uint64_t)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v114 = (uint64_t)&v109 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v115 = (uint64_t)&v109 - v22;
  uint64_t v120 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v118 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  uint64_t v111 = (uint64_t)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v119 = (uint64_t)&v109 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v124 = (uint64_t)&v109 - v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DF8);
  MEMORY[0x1F4188790](v28 - 8);
  os_log_t v121 = (char *)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v109 - v31;
  uint64_t v133 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  uint64_t v33 = *(void *)(v133 - 8);
  MEMORY[0x1F4188790](v133);
  uint64_t v35 = (uint64_t *)((char *)&v109 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v36);
  uint64_t v128 = (uint64_t)&v109 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (uint64_t *)((char *)&v109 - v39);
  MEMORY[0x1F4188790](v41);
  uint64_t v131 = (uint64_t)&v109 - v42;
  uint64_t v122 = a1;
  uint64_t v43 = *a1;
  uint64_t v44 = *(void *)(v43 + 16);
  if (v44)
  {
    uint64_t v45 = v43 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    uint64_t v46 = *(void *)(v33 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1DCD79360(v45, (uint64_t)v40, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      BOOL v47 = *v40 == 0x6165665F65646F6ELL && v40[1] == 0xEC00000065727574;
      if (v47 || (sub_1DD048FA8() & 1) != 0) {
        break;
      }
      sub_1DCD793C8((uint64_t)v40, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      v45 += v46;
      if (!--v44) {
        goto LABEL_12;
      }
    }
    sub_1DCD79428((uint64_t)v40, (uint64_t)v32, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
    uint64_t v49 = v32;
    uint64_t v50 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_12:
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
    uint64_t v49 = v32;
    uint64_t v50 = 1;
  }
  uint64_t v51 = v133;
  v48(v49, v50, 1, v133);
  swift_bridgeObjectRelease();
  uint64_t v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  int v53 = v52(v32, 1, v51);
  uint64_t v54 = (uint64_t)v132;
  if (v53 == 1)
  {
    sub_1DCD2479C((uint64_t)v32, &qword_1EBE85DF8);
    uint64_t v55 = v123;
    sub_1DCDB40EC((uint64_t)v123);
    uint64_t v56 = sub_1DD048048();
    os_log_type_t v57 = sub_1DD048858();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl(&dword_1DCCF9000, v56, v57, "Failed to get node feature shape from DomainPredictionModelDescription.", v58, 2u);
      MEMORY[0x1E01B07E0](v58, -1, -1);
    }

    (*(void (**)(void (*)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v129 + 8))(v55, v130);
    return 0;
  }
  sub_1DCD79428((uint64_t)v32, v131, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
  uint64_t v59 = *v122;
  uint64_t v60 = *(void *)(*v122 + 16);
  if (v60)
  {
    uint64_t v123 = v48;
    uint64_t v61 = v59 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    uint64_t v62 = *(void *)(v33 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1DCD79360(v61, (uint64_t)v35, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      BOOL v63 = *v35 == 0x7474615F65676465 && v35[1] == 0xE900000000000072;
      if (v63 || (sub_1DD048FA8() & 1) != 0) {
        break;
      }
      sub_1DCD793C8((uint64_t)v35, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
      v61 += v62;
      if (!--v60)
      {
        uint64_t v64 = 1;
        uint64_t v54 = (uint64_t)v132;
        uint64_t v51 = v133;
        uint64_t v65 = (uint64_t)v121;
        goto LABEL_27;
      }
    }
    uint64_t v65 = (uint64_t)v121;
    sub_1DCD79428((uint64_t)v35, (uint64_t)v121, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    uint64_t v64 = 0;
    uint64_t v54 = (uint64_t)v132;
    uint64_t v51 = v133;
LABEL_27:
    v123((char *)v65, v64, 1, v51);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v65 = (uint64_t)v121;
    v48(v121, 1, 1, v51);
  }
  swift_bridgeObjectRelease();
  int v66 = v52((char *)v65, 1, v51);
  uint64_t v67 = (uint64_t)v125;
  if (v66 == 1)
  {
    sub_1DCD2479C(v65, &qword_1EBE85DF8);
    uint64_t v68 = v116;
    sub_1DCDB40EC(v116);
    char v69 = sub_1DD048048();
    os_log_type_t v70 = sub_1DD048858();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl(&dword_1DCCF9000, v69, v70, "Failed to get edge attribute shape from DomainPredictionModelDescription.", v71, 2u);
      MEMORY[0x1E01B07E0](v71, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v68, v130);
    sub_1DCD793C8(v131, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    return 0;
  }
  sub_1DCD79428(v65, v128, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
  uint64_t v73 = v131 + *(int *)(v51 + 28);
  uint64_t v74 = v115;
  sub_1DCD2889C(v73, v115, &qword_1EBE85B60);
  uint64_t v75 = v120;
  uint64_t v132 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
  if (v132(v74, 1, v120) == 1)
  {
    uint64_t v76 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    uint64_t v77 = v124;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v124, 1, 1, v76);
    *(unsigned char *)(v77 + *(int *)(v75 + 20)) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C(v74, &qword_1EBE85B60);
  }
  else
  {
    uint64_t v77 = v124;
    sub_1DCD79428(v74, v124, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  }
  uint64_t v78 = v117;
  sub_1DCD2889C(v77, v117, &qword_1EBE85B28);
  uint64_t v79 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v81 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
  int v82 = v81(v78, 1, v79);
  uint64_t v83 = MEMORY[0x1E4FBC860];
  if (v82 == 1)
  {
    sub_1DCD2479C(v78, &qword_1EBE85B28);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DCD79428(v78, v67, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      goto LABEL_43;
    }
    sub_1DCD793C8(v78, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  }
  *(void *)uint64_t v67 = v83;
  *(void *)(v67 + 8) = 0;
  *(unsigned char *)(v67 + 16) = 1;
  uint64_t v84 = v126;
  uint64_t v85 = v67 + *(int *)(v126 + 24);
  uint64_t v86 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v85, 1, 1, v86);
  uint64_t v87 = v67 + *(int *)(v84 + 28);
  *(void *)uint64_t v87 = 0;
  *(unsigned char *)(v87 + 8) = -1;
  sub_1DD047BE8();
LABEL_43:
  sub_1DCD793C8(v124, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  uint64_t v88 = *(void *)v67;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DCD793C8(v67, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
  if (*(void *)(v88 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v72 = *(void *)(v88 + 40);
  swift_bridgeObjectRelease();
  uint64_t v90 = v114;
  sub_1DCD2889C(v73, v114, &qword_1EBE85B60);
  uint64_t v91 = v120;
  if (v132(v90, 1, v120) == 1)
  {
    uint64_t v92 = v119;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56))(v119, 1, 1, v79);
    *(unsigned char *)(v92 + *(int *)(v91 + 20)) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C(v90, &qword_1EBE85B60);
  }
  else
  {
    uint64_t v92 = v119;
    sub_1DCD79428(v90, v119, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  }
  uint64_t v93 = (uint64_t)v127;
  sub_1DCD2889C(v92, v54, &qword_1EBE85B28);
  if (v81(v54, 1, v79) == 1)
  {
    sub_1DCD2479C(v54, &qword_1EBE85B28);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DCD79428(v54, v93, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      goto LABEL_53;
    }
    sub_1DCD793C8(v54, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  }
  *(void *)uint64_t v93 = MEMORY[0x1E4FBC860];
  *(void *)(v93 + 8) = 0;
  *(unsigned char *)(v93 + 16) = 1;
  uint64_t v94 = v126;
  uint64_t v95 = &v127[*(int *)(v126 + 24)];
  uint64_t v96 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  int v97 = v95;
  uint64_t v93 = (uint64_t)v127;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v97, 1, 1, v96);
  uint64_t v98 = v93 + *(int *)(v94 + 28);
  *(void *)uint64_t v98 = 0;
  *(unsigned char *)(v98 + 8) = -1;
  sub_1DD047BE8();
LABEL_53:
  sub_1DCD793C8(v119, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  uint64_t v99 = *(void *)v93;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DCD793C8(v93, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
  if (*(void *)(v99 + 16) < 3uLL)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  swift_bridgeObjectRelease();
  uint64_t v100 = v110;
  sub_1DCD2889C(v128 + *(int *)(v133 + 28), v110, &qword_1EBE85B60);
  if (v132(v100, 1, v91) == 1)
  {
    uint64_t v101 = v111;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v80 + 56))(v111, 1, 1, v79);
    *(unsigned char *)(v101 + *(int *)(v91 + 20)) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C(v100, &qword_1EBE85B60);
  }
  else
  {
    uint64_t v101 = v111;
    sub_1DCD79428(v100, v111, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  }
  uint64_t v102 = (uint64_t)v113;
  uint64_t v103 = v112;
  sub_1DCD2889C(v101, v112, &qword_1EBE85B28);
  if (v81(v103, 1, v79) == 1)
  {
    sub_1DCD2479C(v103, &qword_1EBE85B28);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DCD79428(v103, v102, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      goto LABEL_63;
    }
    sub_1DCD793C8(v103, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  }
  *(void *)uint64_t v102 = MEMORY[0x1E4FBC860];
  *(void *)(v102 + 8) = 0;
  *(unsigned char *)(v102 + 16) = 1;
  uint64_t v104 = v126;
  uint64_t v105 = v102 + *(int *)(v126 + 24);
  uint64_t v106 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v105, 1, 1, v106);
  uint64_t v107 = v102 + *(int *)(v104 + 28);
  *(void *)uint64_t v107 = 0;
  *(unsigned char *)(v107 + 8) = -1;
  sub_1DD047BE8();
LABEL_63:
  sub_1DCD793C8(v101, type metadata accessor for Argos_Protos_MLModel_FeatureType);
  uint64_t v108 = *(void *)v102;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DCD793C8(v102, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
  if (*(void *)(v108 + 16) >= 4uLL)
  {
    swift_bridgeObjectRelease();
    sub_1DCD793C8(v128, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    sub_1DCD793C8(v131, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    return v72;
  }
LABEL_68:
  __break(1u);
  return result;
}

uint64_t sub_1DCD79360(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD793C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD79428(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t getEnumTagSinglePayload for TrialWrapper.ConfigSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DomainPredictionNet.PredictionResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD795ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1DCD79614(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DomainPredictionNet.PredictionResult.CodingKeys()
{
  return &type metadata for DomainPredictionNet.PredictionResult.CodingKeys;
}

unint64_t sub_1DCD79634()
{
  unint64_t result = qword_1EAB027F8;
  if (!qword_1EAB027F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB027F8);
  }
  return result;
}

unint64_t sub_1DCD7968C()
{
  unint64_t result = qword_1EBE85868;
  if (!qword_1EBE85868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85868);
  }
  return result;
}

unint64_t sub_1DCD796E4()
{
  unint64_t result = qword_1EBE85860;
  if (!qword_1EBE85860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85860);
  }
  return result;
}

uint64_t sub_1DCD79738@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, CGRect *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  long long v160 = a3;
  uint64_t v161 = a5;
  uint64_t v11 = sub_1DD048068();
  uint64_t v157 = *(void *)(v11 - 8);
  uint64_t v158 = v11;
  MEMORY[0x1F4188790](v11);
  unint64_t v231 = (char *)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C88);
  MEMORY[0x1F4188790](v13 - 8);
  long long v159 = (char *)&v138 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v156 = (uint64_t)&v138 - v16;
  long long v17 = a1[7];
  long long v229 = a1[6];
  *(_OWORD *)uint64_t v230 = v17;
  *(_OWORD *)&v230[16] = a1[8];
  *(_OWORD *)&v230[29] = *(long long *)((char *)a1 + 141);
  long long v18 = a1[3];
  long long v225 = a1[2];
  long long v226 = v18;
  long long v19 = a1[5];
  long long v227 = a1[4];
  long long v228 = v19;
  long long v20 = a1[1];
  long long v223 = *a1;
  long long v224 = v20;
  if (v230[12] != 1 || (uint64_t v21 = v223, (sub_1DCD7C698(v223, a2) & 1) == 0))
  {
    long long v48 = a1[7];
    long long v221 = a1[6];
    *(_OWORD *)CGFloat v222 = v48;
    *(_OWORD *)&v222[16] = a1[8];
    *(_OWORD *)&v222[29] = *(long long *)((char *)a1 + 141);
    long long v49 = a1[3];
    long long v217 = a1[2];
    long long v218 = v49;
    long long v50 = a1[5];
    long long v219 = a1[4];
    long long v220 = v50;
    long long v51 = a1[1];
    v216[0] = *a1;
    v216[1] = v51;
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v216);
    sub_1DCD32C3C((uint64_t)v216, a6);
    return sub_1DCD32CC8((uint64_t)&v223);
  }
  uint64_t v146 = a6;
  uint64_t v147 = v6;
  long long v22 = v228;
  long long v23 = v229;
  unsigned int v24 = *(_DWORD *)v230;
  unsigned int v25 = *(_DWORD *)&v230[4];
  int v26 = *(_DWORD *)&v230[8];
  uint64_t v27 = *(void *)&v230[32];
  int v28 = *(_DWORD *)&v230[40];
  uint64_t v144 = *((void *)&v226 + 1);
  uint64_t v145 = a4;
  uint64_t v29 = *((void *)&v227 + 1);
  LOBYTE(v216[0]) = v21;
  *((void *)&v216[1] + 1) = *((void *)&v224 + 1);
  uint64_t v143 = v225;
  *(void *)&long long v217 = v225;
  BYTE8(v217) = BYTE8(v225);
  uint64_t v140 = v226;
  uint64_t v141 = v227;
  long long v218 = v226;
  long long v219 = v227;
  long long v220 = v228;
  long long v221 = v229;
  *(_DWORD *)CGFloat v222 = *(_DWORD *)v230;
  *(_DWORD *)&v222[4] = *(_DWORD *)&v230[4];
  *(_DWORD *)&v222[8] = *(_DWORD *)&v230[8];
  v222[12] = 1;
  LODWORD(v142) = v230[14];
  v222[14] = v230[14];
  int v148 = v230[15];
  int v149 = v230[44];
  *(_WORD *)&v222[15] = *(_WORD *)&v230[15];
  v222[17] = v230[17];
  uint64_t v150 = *(void *)&v230[24];
  *(void *)&v222[24] = *(void *)&v230[24];
  *(void *)&v222[32] = *(void *)&v230[32];
  *(_DWORD *)&v222[40] = *(_DWORD *)&v230[40];
  v222[44] = v230[44];
  v222[13] = 1;
  uint64_t v30 = v160;
  swift_beginAccess();
  CGFloat x = v30->origin.x;
  CGFloat y = v30->origin.y;
  CGFloat width = v30->size.width;
  CGFloat height = v30->size.height;
  sub_1DCD32D4C(v22, *((uint64_t *)&v22 + 1));
  swift_bridgeObjectRetain();
  sub_1DCD32D4C(v22, *((uint64_t *)&v22 + 1));
  swift_bridgeObjectRetain();
  sub_1DCD32D4C(v22, *((uint64_t *)&v22 + 1));
  swift_bridgeObjectRetain();
  sub_1DCD32D4C(v22, *((uint64_t *)&v22 + 1));
  swift_bridgeObjectRetain();
  sub_1DCD32D4C(v22, *((uint64_t *)&v22 + 1));
  swift_bridgeObjectRetain();
  uint64_t v154 = *((void *)&v22 + 1);
  uint64_t v155 = v22;
  uint64_t v35 = v29;
  uint64_t v37 = v144;
  uint64_t v36 = v145;
  uint64_t v152 = *((void *)&v23 + 1);
  uint64_t v153 = v23;
  sub_1DCD32D4C(v22, *((uint64_t *)&v22 + 1));
  uint64_t v151 = v27;
  swift_bridgeObjectRetain();
  sub_1DCD32CC8((uint64_t)&v223);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v232.origin.CGFloat x = x;
  v232.origin.CGFloat y = y;
  v232.size.CGFloat width = width;
  v232.size.CGFloat height = height;
  CGFloat MidX = CGRectGetMidX(v232);
  swift_beginAccess();
  CGFloat MidY = CGRectGetMidY(*v30);
  *((CGFloat *)v216 + 1) = MidX;
  *(CGFloat *)&v216[1] = MidY;
  if (*(void *)(v36 + 16))
  {
    uint64_t v40 = sub_1DCEAD454(v21);
    int v41 = v21;
    if (v42)
    {
      uint64_t v43 = *(void *)(v36 + 56) + 40 * v40;
      uint64_t v44 = *(void *)v43;
      uint64_t v45 = *(void *)(v43 + 8);
      uint64_t v46 = *(void *)(v43 + 16);
      char v47 = *(unsigned char *)(v43 + 32);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)&v216[1] + 1) = v44;
      *(void *)&long long v217 = v45;
      if (v37)
      {
        swift_bridgeObjectRelease();
        *(void *)&long long v218 = v140;
        *((void *)&v218 + 1) = v37;
        if (v35)
        {
LABEL_7:
          swift_bridgeObjectRelease();
          *(void *)&long long v219 = v141;
          *((void *)&v219 + 1) = v35;
          goto LABEL_14;
        }
      }
      else
      {
        type metadata accessor for VisualIntelligenceService(0);
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        uint64_t v145 = v46;
        id v55 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
        char v56 = v47;
        uint64_t v57 = sub_1DD046328();
        uint64_t v59 = v58;

        *(void *)&long long v218 = v57;
        char v47 = v56;
        *((void *)&v218 + 1) = v59;
        if (v35) {
          goto LABEL_7;
        }
      }
      type metadata accessor for VisualIntelligenceService(0);
      uint64_t v60 = swift_getObjCClassFromMetadata();
      id v61 = objc_msgSend(self, sel_bundleForClass_, v60);
      uint64_t v62 = sub_1DD046328();
      uint64_t v64 = v63;

      uint64_t v65 = sub_1DCFD0E74(v62, v64);
      uint64_t v67 = v66;
      swift_bridgeObjectRelease();
      *(void *)&long long v219 = v65;
      *((void *)&v219 + 1) = v67;
LABEL_14:
      uint64_t v53 = (uint64_t)v159;
      if (v142)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_18:
        char y_low = 1;
LABEL_21:
        v222[14] = y_low;
        goto LABEL_22;
      }
      if (v47)
      {
        char v68 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v68 & 1) == 0) {
          goto LABEL_18;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      os_log_type_t v70 = v160;
      swift_beginAccess();
      char y_low = LOBYTE(v70[3].origin.y);
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v41 = v21;
  }
  uint64_t v53 = (uint64_t)v159;
LABEL_22:
  uint64_t v71 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20);
  uint64_t v72 = *(void *)(v161 + v71);
  swift_beginAccess();
  uint64_t v73 = *(void *)(v72 + 16);
  uint64_t v74 = sub_1DCD9C35C(v41);
  uint64_t v76 = v75;
  uint64_t v77 = *(void *)(v73 + 16);
  uint64_t v145 = v71;
  if (v77)
  {
    uint64_t v78 = v74;
    swift_bridgeObjectRetain();
    unint64_t v79 = sub_1DCEAD1A4(v78, v76);
    if (v80)
    {
      unint64_t v81 = v79;
      int v82 = v41;
      uint64_t v83 = *(void *)(v73 + 56);
      uint64_t v84 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
      uint64_t v85 = *(void *)(v84 - 8);
      uint64_t v86 = v83 + *(void *)(v85 + 72) * v81;
      uint64_t v87 = v156;
      sub_1DCD7AF64(v86, v156, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v87, 0, 1, v84);
      uint64_t v53 = (uint64_t)v159;
    }
    else
    {
      int v82 = v41;
      uint64_t v84 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
      uint64_t v87 = v156;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v156, 1, 1, v84);
    }
    swift_bridgeObjectRelease();
    uint64_t v88 = v87;
  }
  else
  {
    int v82 = v41;
    uint64_t v84 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
    uint64_t v88 = v156;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v156, 1, 1, v84);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
  uint64_t v89 = *(void *)(v84 - 8);
  uint64_t v90 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
  if (v90(v88, 1, v84) == 1)
  {
    sub_1DCD7AEA4(v88);
    int v91 = 0;
  }
  else
  {
    uint64_t v92 = v88;
    uint64_t v93 = (unsigned __int8 *)(*(void *)(v88 + *(int *)(v84 + 20))
                            + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__searchRequireOcr);
    swift_beginAccess();
    int v91 = *v93;
    sub_1DCD7AF04(v92, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
  }
  int v94 = v82;
  LODWORD(v159) = v91;
  v222[16] = v91;
  uint64_t v95 = *(void *)(v161 + v145);
  swift_beginAccess();
  uint64_t v96 = *(void *)(v95 + 16);
  uint64_t v97 = sub_1DCD9C35C(v82);
  uint64_t v99 = v98;
  if (*(void *)(v96 + 16))
  {
    uint64_t v100 = v97;
    swift_bridgeObjectRetain();
    unint64_t v101 = sub_1DCEAD1A4(v100, v99);
    if (v102)
    {
      sub_1DCD7AF64(*(void *)(v96 + 56) + *(void *)(v89 + 72) * v101, v53, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v53, 0, 1, v84);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v53, 1, 1, v84);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v53, 1, 1, v84);
  }
  swift_bridgeObjectRelease();
  uint64_t v103 = v53;
  uint64_t v104 = (uint64_t)v231;
  if (v90(v103, 1, v84) == 1)
  {
    sub_1DCD7AEA4(v103);
    int v105 = 0;
  }
  else
  {
    uint64_t v106 = (unsigned __int8 *)(*(void *)(v103 + *(int *)(v84 + 20))
                             + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__searchRequireBarcode);
    swift_beginAccess();
    int v105 = *v106;
    sub_1DCD7AF04(v103, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
  }
  v222[17] = v105;
  BYTE8(v217) = 1;
  sub_1DCDB40EC(v104);
  uint64_t v107 = v217;
  uint64_t v108 = *((void *)&v218 + 1);
  uint64_t v109 = *((void *)&v219 + 1);
  v192[0] = v94;
  CGFloat v193 = MidX;
  CGFloat v194 = MidY;
  uint64_t v143 = *((void *)&v216[1] + 1);
  uint64_t v144 = v218;
  uint64_t v195 = *((void *)&v216[1] + 1);
  uint64_t v196 = v217;
  char v197 = 1;
  long long v198 = v218;
  uint64_t v145 = v219;
  long long v199 = v219;
  uint64_t v110 = v155;
  uint64_t v200 = v155;
  LODWORD(v161) = v94;
  uint64_t v111 = v154;
  uint64_t v201 = v154;
  uint64_t v202 = v153;
  uint64_t v203 = v152;
  unsigned int v204 = v24;
  unsigned int v205 = v25;
  int v206 = v26;
  __int16 v207 = 257;
  char v208 = v222[14];
  char v209 = v148;
  char v210 = (char)v159;
  LODWORD(v156) = v105;
  char v211 = v105;
  uint64_t v212 = v150;
  uint64_t v213 = v151;
  int v214 = v28;
  char v215 = v149;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCD32CC8((uint64_t)v192);
  swift_bridgeObjectRelease();
  sub_1DCD32D90(v110, v111);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCD32CC8((uint64_t)v192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCD32CC8((uint64_t)v192);
  swift_bridgeObjectRelease();
  sub_1DCD32D90(v110, v111);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCD32CC8((uint64_t)v192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCD32CC8((uint64_t)v192);
  swift_bridgeObjectRelease();
  sub_1DCD32D90(v110, v111);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCD32CC8((uint64_t)v192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCD32CC8((uint64_t)v192);
  swift_bridgeObjectRelease();
  sub_1DCD32D90(v110, v111);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCD32CC8((uint64_t)v192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCD32CC8((uint64_t)v192);
  uint64_t v112 = v231;
  swift_bridgeObjectRelease();
  sub_1DCD32D90(v110, v111);
  uint64_t v140 = v107;
  swift_bridgeObjectRelease();
  uint64_t v141 = v108;
  swift_bridgeObjectRelease();
  uint64_t v142 = v109;
  swift_bridgeObjectRelease();
  sub_1DCD32CC8((uint64_t)v192);
  uint64_t v113 = sub_1DD048048();
  os_log_type_t v114 = sub_1DD048848();
  int v115 = v114;
  if (os_log_type_enabled(v113, v114))
  {
    uint64_t v116 = swift_slowAlloc();
    uint64_t v139 = swift_slowAlloc();
    *(void *)&v171[0] = v139;
    *(_DWORD *)uint64_t v116 = 136316418;
    os_log_t v138 = v113;
    p_CGFloat x = (_OWORD *)&v160->origin.x;
    swift_beginAccess();
    long long v118 = p_x[1];
    v173[0] = *p_x;
    v173[1] = v118;
    LODWORD(v160) = v115;
    uint64_t v119 = NormalizedRect.loggingDescription.getter();
    *(void *)&v173[0] = sub_1DCED7FA0(v119, v120, (uint64_t *)v171);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v116 + 12) = 2080;
    uint64_t v121 = sub_1DCD9C35C(v161);
    *(void *)&v173[0] = sub_1DCED7FA0(v121, v122, (uint64_t *)v171);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    *(_WORD *)(v116 + 22) = 2080;
    *(CGFloat *)CGFloat v173 = MidX;
    *((CGFloat *)v173 + 1) = MidY;
    type metadata accessor for CGPoint(0);
    uint64_t v123 = sub_1DD048478();
    *(void *)&v173[0] = sub_1DCED7FA0(v123, v124, (uint64_t *)v171);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    *(_WORD *)(v116 + 32) = 2080;
    *(void *)&v173[0] = v143;
    *((void *)&v173[0] + 1) = v140;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
    uint64_t v125 = sub_1DD048478();
    *(void *)&v173[0] = sub_1DCED7FA0(v125, v126, (uint64_t *)v171);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    *(_WORD *)(v116 + 42) = 2080;
    *(void *)&v173[0] = v144;
    *((void *)&v173[0] + 1) = v141;
    swift_bridgeObjectRetain();
    uint64_t v127 = sub_1DD048478();
    *(void *)&v173[0] = sub_1DCED7FA0(v127, v128, (uint64_t *)v171);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    *(_WORD *)(v116 + 52) = 2080;
    *(void *)&v173[0] = v145;
    *((void *)&v173[0] + 1) = v142;
    swift_bridgeObjectRetain();
    uint64_t v129 = sub_1DD048478();
    *(void *)&v173[0] = sub_1DCED7FA0(v129, v130, (uint64_t *)v171);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    os_log_t v131 = v138;
    _os_log_impl(&dword_1DCCF9000, v138, (os_log_type_t)v160, "Region %s triggers %s with focal point %s and glyph name %s, displayLabel %s, displayMessage %s", (uint8_t *)v116, 0x3Eu);
    uint64_t v132 = v139;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v132, -1, -1);
    MEMORY[0x1E01B07E0](v116, -1, -1);

    (*(void (**)(char *, uint64_t))(v157 + 8))(v231, v158);
  }
  else
  {
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);
    sub_1DCD32DD4((uint64_t)v192);

    (*(void (**)(char *, uint64_t))(v157 + 8))(v112, v158);
  }
  swift_beginAccess();
  uint64_t v133 = *((void *)&v216[1] + 1);
  uint64_t v134 = v217;
  long long v160 = (CGRect *)v218;
  uint64_t v157 = v219;
  uint64_t v158 = *((void *)&v218 + 1);
  uint64_t v135 = *((void *)&v219 + 1);
  LODWORD(v231) = v222[14];
  LOBYTE(v162) = v161;
  *((CGFloat *)&v162 + 1) = MidX;
  *(CGFloat *)&long long v163 = MidY;
  *((void *)&v163 + 1) = *((void *)&v216[1] + 1);
  *(void *)&long long v164 = v217;
  BYTE8(v164) = 1;
  long long v165 = v218;
  long long v166 = v219;
  uint64_t v136 = v154;
  uint64_t v137 = v155;
  *(void *)&long long v167 = v155;
  *((void *)&v167 + 1) = v154;
  *(void *)&long long v168 = v153;
  *((void *)&v168 + 1) = v152;
  *(void *)&long long v169 = __PAIR64__(v25, v24);
  DWORD2(v169) = v26;
  WORD6(v169) = 257;
  BYTE14(v169) = v222[14];
  HIBYTE(v169) = v148;
  LOBYTE(v170[0]) = (_BYTE)v159;
  BYTE1(v170[0]) = v156;
  *((void *)&v170[0] + 1) = v150;
  *(void *)&v170[1] = v151;
  DWORD2(v170[1]) = v28;
  BYTE12(v170[1]) = v149;
  sub_1DCD32CC8((uint64_t)&v162);
  swift_bridgeObjectRelease();
  sub_1DCD32D90(v137, v136);
  v171[6] = v168;
  v171[7] = v169;
  v172[0] = v170[0];
  *(_OWORD *)((char *)v172 + 13) = *(_OWORD *)((char *)v170 + 13);
  v171[2] = v164;
  v171[3] = v165;
  v171[4] = v166;
  v171[5] = v167;
  v171[0] = v162;
  v171[1] = v163;
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v171);
  sub_1DCD32C3C((uint64_t)v171, v146);
  LOBYTE(v173[0]) = v216[0];
  *(_OWORD *)((char *)v173 + 8) = *(_OWORD *)((char *)v216 + 8);
  *((void *)&v173[1] + 1) = v133;
  uint64_t v174 = v134;
  char v175 = BYTE8(v217);
  uint64_t v176 = v160;
  uint64_t v177 = v158;
  uint64_t v178 = v157;
  uint64_t v179 = v135;
  long long v180 = v220;
  long long v181 = v221;
  uint64_t v182 = *(void *)v222;
  int v183 = *(_DWORD *)&v222[8];
  char v184 = v222[12];
  char v185 = v222[13];
  char v186 = (char)v231;
  __int16 v187 = *(_WORD *)&v222[15];
  char v188 = v222[17];
  long long v189 = *(_OWORD *)&v222[24];
  int v190 = *(_DWORD *)&v222[40];
  char v191 = v222[44];
  return sub_1DCD32DD4((uint64_t)v173);
}

uint64_t type metadata accessor for TriggeringPredictionProcessor()
{
  return self;
}

unint64_t sub_1DCD7AA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v62 = a2;
  uint64_t v7 = type metadata accessor for VisualUnderstanding.ImageRegion() - 8;
  MEMORY[0x1F4188790](v7);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (CGRect *)((char *)&v52 - v11);
  uint64_t v56 = *(void *)(a1 + 16);
  if (!v56) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v58 = v10;
  unint64_t v55 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v54 = a1 + v55;
  uint64_t v13 = *(void *)(v9 + 72);
  uint64_t v52 = a1;
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  unint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v63 = v12;
  uint64_t v53 = v13;
  do
  {
    uint64_t v57 = v14;
    sub_1DCD7AF64(v54 + v13 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    swift_beginAccess();
    CGFloat width = v12[1].size.width;
    uint64_t v17 = *(void *)(*(void *)&width + 16);
    unint64_t v59 = v15;
    if (v17)
    {
      CGFloat v64 = width;
      swift_bridgeObjectRetain();
      CGFloat v18 = v64;
      uint64_t v19 = v17 - 1;
      uint64_t v20 = 32;
      uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        long long v22 = *(_OWORD *)(*(void *)&v18 + v20 + 16);
        v69[0] = *(_OWORD *)(*(void *)&v18 + v20);
        v69[1] = v22;
        long long v23 = *(_OWORD *)(*(void *)&v18 + v20 + 32);
        long long v24 = *(_OWORD *)(*(void *)&v18 + v20 + 48);
        long long v25 = *(_OWORD *)(*(void *)&v18 + v20 + 80);
        void v69[4] = *(_OWORD *)(*(void *)&v18 + v20 + 64);
        v69[5] = v25;
        _OWORD v69[2] = v23;
        v69[3] = v24;
        long long v26 = *(_OWORD *)(*(void *)&v18 + v20 + 96);
        long long v27 = *(_OWORD *)(*(void *)&v18 + v20 + 112);
        long long v28 = *(_OWORD *)(*(void *)&v18 + v20 + 128);
        *(_OWORD *)((char *)v70 + 13) = *(_OWORD *)(*(void *)&v18 + v20 + 141);
        v69[7] = v27;
        v70[0] = v28;
        v69[6] = v26;
        long long v29 = *(_OWORD *)(*(void *)&v18 + v20 + 112);
        v67[6] = *(_OWORD *)(*(void *)&v18 + v20 + 96);
        v67[7] = v29;
        v68[0] = *(_OWORD *)(*(void *)&v18 + v20 + 128);
        *(_OWORD *)((char *)v68 + 13) = *(_OWORD *)(*(void *)&v18 + v20 + 141);
        long long v30 = *(_OWORD *)(*(void *)&v18 + v20 + 48);
        _OWORD v67[2] = *(_OWORD *)(*(void *)&v18 + v20 + 32);
        v67[3] = v30;
        long long v31 = *(_OWORD *)(*(void *)&v18 + v20 + 80);
        v67[4] = *(_OWORD *)(*(void *)&v18 + v20 + 64);
        uint64_t v67[5] = v31;
        long long v32 = *(_OWORD *)(*(void *)&v18 + v20 + 16);
        v67[0] = *(_OWORD *)(*(void *)&v18 + v20);
        v67[1] = v32;
        sub_1DCD32CC8((uint64_t)v69);
        sub_1DCD79738(v67, v62, v63, a3, a4, (uint64_t)v65);
        sub_1DCD32DD4((uint64_t)v69);
        sub_1DCD32C3C((uint64_t)v65, (uint64_t)v71);
        sub_1DCD32C3C((uint64_t)v71, (uint64_t)v72);
        if (sub_1DCD32CA4((uint64_t)v72) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v21 = sub_1DCE9D680(0, v21[2] + 1, 1, v21);
          }
          unint64_t v34 = v21[2];
          unint64_t v33 = v21[3];
          if (v34 >= v33 >> 1) {
            uint64_t v21 = sub_1DCE9D680((void *)(v33 > 1), v34 + 1, 1, v21);
          }
          sub_1DCD32C3C((uint64_t)v71, (uint64_t)v65);
          v21[2] = v34 + 1;
          uint64_t v35 = &v21[20 * v34];
          long long v36 = v65[1];
          v35[2] = v65[0];
          v35[3] = v36;
          long long v37 = v65[5];
          long long v39 = v65[2];
          long long v38 = v65[3];
          v35[6] = v65[4];
          v35[7] = v37;
          v35[4] = v39;
          v35[5] = v38;
          long long v40 = v66[0];
          long long v42 = v65[6];
          long long v41 = v65[7];
          *(_OWORD *)((char *)v35 + 173) = *(_OWORD *)((char *)v66 + 13);
          v35[9] = v41;
          v35[10] = v40;
          v35[8] = v42;
          a3 = v60;
          a4 = v61;
        }
        CGFloat v18 = v64;
        if (!v19) {
          break;
        }
        --v19;
        v20 += 160;
      }
      swift_bridgeObjectRelease();
      uint64_t v12 = v63;
    }
    else
    {
      uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v43 = v58;
    *(void *)&v12[1].size.CGFloat width = v21;
    swift_bridgeObjectRelease();
    sub_1DCD7AF64((uint64_t)v12, v43, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    unint64_t v44 = v59;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v46 = v44;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v46 = sub_1DCE9D7A0(0, *(void *)(v44 + 16) + 1, 1, v44);
    }
    unint64_t v48 = *(void *)(v46 + 16);
    unint64_t v47 = *(void *)(v46 + 24);
    uint64_t v49 = v57;
    if (v48 >= v47 >> 1)
    {
      uint64_t v50 = sub_1DCE9D7A0(v47 > 1, v48 + 1, 1, v46);
      uint64_t v49 = v57;
      unint64_t v46 = v50;
    }
    unint64_t v59 = v46;
    *(void *)(v46 + 16) = v48 + 1;
    uint64_t v13 = v53;
    sub_1DCD36EE0(v58, v46 + v55 + v48 * v53);
    uint64_t v12 = v63;
    sub_1DCD7AF04((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v14 = v49 + 1;
    unint64_t v15 = v59;
  }
  while (v14 != v56);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1DCD7AEA4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCD7AF04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD7AF64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t OntologyNode.debugDescription.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OntologyNode.knowledgeGraphID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OntologyNode.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DD0484F8();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1DCD7B0B4()
{
  return 0xD000000000000010;
}

uint64_t sub_1DCD7B0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCD7BCF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCD7B10C(uint64_t a1)
{
  unint64_t v2 = sub_1DCD7B874();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCD7B148(uint64_t a1)
{
  unint64_t v2 = sub_1DCD7B874();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t OntologyNode.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85168);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  void v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD7B874();
  sub_1DD049138();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_1DD048EB8();
  if (!v8)
  {
    char v11 = 1;
    sub_1DD048EB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t OntologyNode.hashValue.getter()
{
  return sub_1DD049108();
}

uint64_t OntologyNode.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02800);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD7B874();
  sub_1DD049128();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_1DD048DC8();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1DD048DC8();
  uint64_t v14 = v13;
  unint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCD7B568@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return OntologyNode.init(from:)(a1, a2);
}

uint64_t sub_1DCD7B580(void *a1)
{
  return OntologyNode.encode(to:)(a1);
}

uint64_t sub_1DCD7B59C()
{
  return sub_1DD049108();
}

uint64_t sub_1DCD7B604()
{
  sub_1DD0484F8();
  return sub_1DD0484F8();
}

uint64_t sub_1DCD7B654()
{
  return sub_1DD049108();
}

uint64_t sub_1DCD7B6B8()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DCD7B6E8()
{
  return 0;
}

uint64_t _s18VisualIntelligence12OntologyNodeV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1DD048FA8(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1DD048FA8();
    }
  }
  return result;
}

unint64_t sub_1DCD7B874()
{
  unint64_t result = qword_1EBE84A10;
  if (!qword_1EBE84A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84A10);
  }
  return result;
}

unint64_t sub_1DCD7B8CC()
{
  unint64_t result = qword_1EAB02808;
  if (!qword_1EAB02808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02808);
  }
  return result;
}

uint64_t destroy for OntologyNode()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for OntologyNode(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OntologyNode(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for OntologyNode(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DurationMetric(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DurationMetric(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OntologyNode()
{
  return &type metadata for OntologyNode;
}

unsigned char *storeEnumTagSinglePayload for OntologyNode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD7BBB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OntologyNode.CodingKeys()
{
  return &type metadata for OntologyNode.CodingKeys;
}

unint64_t sub_1DCD7BBF4()
{
  unint64_t result = qword_1EAB02810;
  if (!qword_1EAB02810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02810);
  }
  return result;
}

unint64_t sub_1DCD7BC4C()
{
  unint64_t result = qword_1EBE84A20;
  if (!qword_1EBE84A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84A20);
  }
  return result;
}

unint64_t sub_1DCD7BCA4()
{
  unint64_t result = qword_1EBE84A18;
  if (!qword_1EBE84A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84A18);
  }
  return result;
}

uint64_t sub_1DCD7BCF8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001DD068950 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DD068970)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCD7BDE4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v5 = sub_1DD048068();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v32 - v9;
  uint64_t v11 = sub_1DD048468();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(self, sel_defaultManager);
  uint64_t v16 = (void *)sub_1DD0483D8();
  id v17 = objc_msgSend(v15, sel_contentsAtPath_, v16);

  if (v17)
  {
    v32[3] = v7;
    v32[4] = a1;
    uint64_t v18 = sub_1DD0464E8();
    unint64_t v20 = v19;

    uint64_t v28 = sub_1DCF47ED8(v18, v20);
    unint64_t v30 = v29;
    sub_1DCD21954(v18, v20);

    sub_1DD048448();
    sub_1DD048428();
    sub_1DCD7C4A4();
    memset(v36, 0, sizeof(v36));
    uint64_t v37 = 0;
    sub_1DD047E58();
    sub_1DCD21954(v28, v30);
    return sub_1DCD7C4FC((uint64_t)v14, (uint64_t)v35);
  }
  else
  {

    sub_1DCDB40EC((uint64_t)v10);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_1DD048048();
    os_log_type_t v22 = sub_1DD048858();
    if (os_log_type_enabled(v21, v22))
    {
      long long v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(void *)&v36[0] = v24;
      *(_DWORD *)long long v23 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_1DCED7FA0(a1, a2, (uint64_t *)v36);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v21, v22, "Failed to load SearchConfig at path %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v24, -1, -1);
      MEMORY[0x1E01B07E0](v23, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
    long long v25 = v35;
    *uint64_t v35 = 0;
    sub_1DD047BE8();
    long long v26 = (char *)v25 + *(int *)(v12 + 28);
    uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  }
}

unint64_t sub_1DCD7C4A4()
{
  unint64_t result = qword_1EBE85F10;
  if (!qword_1EBE85F10)
  {
    type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85F10);
  }
  return result;
}

uint64_t sub_1DCD7C4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCD7C560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1DD0490B8();
    sub_1DD0484F8();
    uint64_t v6 = sub_1DD049108();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1DD048FA8() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1DD048FA8() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1DCD7C698(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1DD0490B8();
    sub_1DCD9C35C(a1);
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1DD049108();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      while (1)
      {
        unint64_t v8 = 0xE300000000000000;
        uint64_t v9 = 7631457;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v8 = 0xE600000000000000;
            uint64_t v9 = 0x65727574616ELL;
            break;
          case 2:
            unint64_t v8 = 0xE800000000000000;
            uint64_t v9 = 0x6B72616D646E616CLL;
            break;
          case 3:
            uint64_t v9 = 0x4C6C61727574616ELL;
            unint64_t v8 = 0xEF6B72616D646E61;
            break;
          case 4:
            unint64_t v8 = 0xE500000000000000;
            uint64_t v9 = 0x616964656DLL;
            break;
          case 5:
            unint64_t v8 = 0xE400000000000000;
            uint64_t v9 = 1802465122;
            break;
          case 6:
            unint64_t v8 = 0xE500000000000000;
            uint64_t v9 = 0x6D75626C61;
            break;
          case 7:
            unint64_t v8 = 0xE400000000000000;
            uint64_t v9 = 1937006947;
            break;
          case 8:
            unint64_t v8 = 0xE400000000000000;
            uint64_t v9 = 1936158564;
            break;
          case 9:
            unint64_t v8 = 0xE700000000000000;
            unsigned int v10 = 1835626081;
            goto LABEL_18;
          case 0xA:
            unint64_t v8 = 0xE500000000000000;
            uint64_t v9 = 0x7364726962;
            break;
          case 0xB:
            unint64_t v8 = 0xE700000000000000;
            uint64_t v9 = 0x73746365736E69;
            break;
          case 0xC:
            unint64_t v8 = 0xE800000000000000;
            uint64_t v9 = 0x73656C6974706572;
            break;
          case 0xD:
            unint64_t v8 = 0xE700000000000000;
            unsigned int v10 = 1835884909;
LABEL_18:
            uint64_t v9 = v10 | 0x736C6100000000;
            break;
          case 0xE:
            unint64_t v8 = 0xE700000000000000;
            uint64_t v9 = 0x6C657261707061;
            break;
          case 0xF:
            uint64_t v9 = 0x726F737365636361;
            unint64_t v8 = 0xEB00000000736569;
            break;
          case 0x10:
            unint64_t v8 = 0xE400000000000000;
            uint64_t v9 = 1685024614;
            break;
          case 0x11:
            uint64_t v9 = 0x6F726665726F7473;
            unint64_t v8 = 0xEA0000000000746ELL;
            break;
          case 0x12:
            unsigned int v11 = 1852270963;
            goto LABEL_26;
          case 0x13:
            unint64_t v8 = 0x80000001DD066AB0;
            uint64_t v9 = 0xD000000000000011;
            break;
          case 0x14:
            unsigned int v11 = 1869903201;
LABEL_26:
            uint64_t v9 = v11 | 0x626D795300000000;
            unint64_t v8 = 0xEA00000000006C6FLL;
            break;
          case 0x15:
            uint64_t v9 = 0x676F4C646E617262;
            unint64_t v8 = 0xEF6C6F626D79536FLL;
            break;
          case 0x16:
            unint64_t v8 = 0xE700000000000000;
            uint64_t v9 = 0x65646F63726162;
            break;
          case 0x17:
            uint64_t v9 = 0x727574706C756373;
            unint64_t v8 = 0xE900000000000065;
            break;
          case 0x18:
            unint64_t v8 = 0xE700000000000000;
            uint64_t v9 = 0x656E696C796B73;
            break;
          case 0x19:
            unint64_t v8 = 0xE800000000000000;
            uint64_t v9 = 0x44327463656A626FLL;
            break;
          default:
            break;
        }
        unint64_t v12 = 0xE300000000000000;
        uint64_t v13 = 7631457;
        switch(a1)
        {
          case 1:
            unint64_t v12 = 0xE600000000000000;
            if (v9 == 0x65727574616ELL) {
              goto LABEL_81;
            }
            goto LABEL_82;
          case 2:
            unint64_t v12 = 0xE800000000000000;
            if (v9 != 0x6B72616D646E616CLL) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 3:
            unint64_t v12 = 0xEF6B72616D646E61;
            if (v9 != 0x4C6C61727574616ELL) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 4:
            unint64_t v12 = 0xE500000000000000;
            if (v9 != 0x616964656DLL) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 5:
            unint64_t v12 = 0xE400000000000000;
            if (v9 != 1802465122) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 6:
            unint64_t v12 = 0xE500000000000000;
            if (v9 != 0x6D75626C61) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 7:
            unint64_t v12 = 0xE400000000000000;
            if (v9 != 1937006947) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 8:
            unint64_t v12 = 0xE400000000000000;
            if (v9 != 1936158564) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 9:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v14 = 1835626081;
            goto LABEL_56;
          case 10:
            unint64_t v12 = 0xE500000000000000;
            if (v9 != 0x7364726962) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 11:
            unint64_t v12 = 0xE700000000000000;
            unint64_t v15 = 0x746365736E69;
            goto LABEL_57;
          case 12:
            unint64_t v12 = 0xE800000000000000;
            if (v9 != 0x73656C6974706572) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 13:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v14 = 1835884909;
LABEL_56:
            unint64_t v15 = v14 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_57:
            if (v9 != (v15 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 14:
            unint64_t v12 = 0xE700000000000000;
            if (v9 != 0x6C657261707061) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 15:
            unint64_t v12 = 0xEB00000000736569;
            if (v9 != 0x726F737365636361) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 16:
            unint64_t v12 = 0xE400000000000000;
            if (v9 != 1685024614) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 17:
            unint64_t v12 = 0xEA0000000000746ELL;
            if (v9 != 0x6F726665726F7473) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 18:
            unsigned int v16 = 1852270963;
            goto LABEL_71;
          case 19:
            unint64_t v12 = 0x80000001DD066AB0;
            if (v9 != 0xD000000000000011) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 20:
            unsigned int v16 = 1869903201;
LABEL_71:
            unint64_t v12 = 0xEA00000000006C6FLL;
            if (v9 != (v16 | 0x626D795300000000)) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 21:
            unint64_t v12 = 0xEF6C6F626D79536FLL;
            if (v9 != 0x676F4C646E617262) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 22:
            unint64_t v12 = 0xE700000000000000;
            if (v9 != 0x65646F63726162) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 23:
            unint64_t v12 = 0xE900000000000065;
            if (v9 != 0x727574706C756373) {
              goto LABEL_82;
            }
            goto LABEL_81;
          case 24:
            unint64_t v12 = 0xE700000000000000;
            uint64_t v13 = 0x656E696C796B73;
            goto LABEL_80;
          case 25:
            unint64_t v12 = 0xE800000000000000;
            if (v9 != 0x44327463656A626FLL) {
              goto LABEL_82;
            }
            goto LABEL_81;
          default:
LABEL_80:
            if (v9 != v13) {
              goto LABEL_82;
            }
LABEL_81:
            if (v8 == v12)
            {
              swift_bridgeObjectRelease_n();
              char v17 = 1;
              return v17 & 1;
            }
LABEL_82:
            char v17 = sub_1DD048FA8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v17) {
              return v17 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v17 & 1;
            }
            break;
        }
      }
    }
  }
  char v17 = 0;
  return v17 & 1;
}

uint64_t sub_1DCD7CE20(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A30);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD7F628();
  sub_1DD049138();
  v8[15] = 0;
  sub_1DD048EB8();
  if (!v1)
  {
    v8[14] = 1;
    sub_1DD048EE8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1DCD7CF9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A28);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD7D4CC();
  sub_1DD049138();
  char v13 = 0;
  sub_1DD048EB8();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84FB8);
    sub_1DCD7DD08((unint64_t *)&unk_1EBE84FC0, (void (*)(void))sub_1DCD7D520);
    sub_1DD048F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DCD7D16C()
{
  if (*v0) {
    return 0x65726F6373;
  }
  else {
    return 0x6D614E7373616C63;
  }
}

uint64_t sub_1DCD7D1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCD7D6D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCD7D1D0(uint64_t a1)
{
  unint64_t v2 = sub_1DCD7F628();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCD7D20C(uint64_t a1)
{
  unint64_t v2 = sub_1DCD7F628();
  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1DCD7D248(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 16);
  float v3 = *(float *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_1DD048FA8();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

void sub_1DCD7D2A8(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v6 = sub_1DCD7D7D0(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(float *)(a2 + 16) = v6;
  }
}

uint64_t sub_1DCD7D2D8(void *a1)
{
  return sub_1DCD7CE20(a1);
}

uint64_t sub_1DCD7D2F8()
{
  if (*v0) {
    return 0x73657373616C63;
  }
  else {
    return 0x4E52556C65646F6DLL;
  }
}

uint64_t sub_1DCD7D334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCD7D9C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCD7D35C(uint64_t a1)
{
  unint64_t v2 = sub_1DCD7D4CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCD7D398(uint64_t a1)
{
  unint64_t v2 = sub_1DCD7D4CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCD7D3D4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1DD048FA8() & 1) == 0) {
    return 0;
  }
  return sub_1DCFBB8EC(v2, v3);
}

uint64_t sub_1DCD7D448@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1DCD7DAB4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1DCD7D478(void *a1)
{
  return sub_1DCD7CF9C(a1, *v1, v1[1], v1[2]);
}

uint64_t type metadata accessor for ClassificationTopKProcessor()
{
  return self;
}

ValueMetadata *type metadata accessor for ClassificationInfo()
{
  return &type metadata for ClassificationInfo;
}

unint64_t sub_1DCD7D4CC()
{
  unint64_t result = qword_1EBE85818;
  if (!qword_1EBE85818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85818);
  }
  return result;
}

unint64_t sub_1DCD7D520()
{
  unint64_t result = qword_1EBE84B10;
  if (!qword_1EBE84B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84B10);
  }
  return result;
}

void *sub_1DCD7D574(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!result || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t result = sub_1DCE9E068(result, v13, 1, v5);
    uint64_t v5 = result;
  }
  uint64_t v14 = &v5[a1 + 4];
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v15 = v5[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    unint64_t result = v14 + 1;
    uint64_t v18 = &v5[a2 + 4];
    if (v14 + 1 != v18 || result >= &v18[v17]) {
      unint64_t result = memmove(result, v18, 8 * v17);
    }
    uint64_t v19 = v5[2];
    BOOL v16 = __OFADD__(v19, v9);
    uint64_t v20 = v19 + v9;
    if (!v16)
    {
      uint64_t v5[2] = v20;
LABEL_20:
      *uint64_t v14 = a3;
      *(void *)uint64_t v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  unint64_t result = (void *)sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD7D6D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E7373616C63 && a2 == 0xE900000000000065;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

float sub_1DCD7D7D0(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02838);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD7F628();
  sub_1DD049128();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    sub_1DD048DC8();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_1DD048DF8();
    float v2 = v9;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1DCD7D9C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4E52556C65646F6DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73657373616C63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1DCD7DAB4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02818);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD7D4CC();
  sub_1DD049128();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = sub_1DD048DC8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84FB8);
    v9[15] = 1;
    sub_1DCD7DD08(&qword_1EAB02820, (void (*)(void))sub_1DCD7DD78);
    swift_bridgeObjectRetain();
    sub_1DD048E28();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1DCD7DD08(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE84FB8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCD7DD78()
{
  unint64_t result = qword_1EAB02828;
  if (!qword_1EAB02828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02828);
  }
  return result;
}

uint64_t sub_1DCD7DDCC(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t a5)
{
  char v6 = (unint64_t *)__dst;
  uint64_t v8 = a2;
  float v9 = __src;
  int64_t v10 = a2 - __src;
  int64_t v11 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v11 = a2 - __src;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v13 = a3 - (void)a2;
  uint64_t v14 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v14 = a3 - (void)a2;
  }
  uint64_t v15 = v14 >> 3;
  long long v31 = __src;
  unint64_t v30 = (unint64_t *)__dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[8 * v15] <= __dst) {
        memmove(__dst, a2, 8 * v15);
      }
      uint64_t v21 = &v6[v15];
      unint64_t v29 = v21;
      long long v31 = v8;
      if (v9 < v8 && v13 >= 8)
      {
        unint64_t v22 = *(void *)(a5 + 16);
        long long v23 = (unint64_t *)(a3 - 8);
        while (1)
        {
          unint64_t v24 = *(v21 - 1);
          if (v24 >= v22) {
            break;
          }
          long long v25 = v8 - 8;
          unint64_t v26 = *((void *)v8 - 1);
          if (v26 >= v22) {
            goto LABEL_49;
          }
          uint64_t v27 = (char *)(v23 + 1);
          if (*(float *)(a5 + 32 + 4 * v26) >= *(float *)(a5 + 32 + 4 * v24))
          {
            unint64_t v29 = v21 - 1;
            if (v27 < (char *)v21 || v23 >= v21 || v27 != (char *)v21) {
              *long long v23 = *(v21 - 1);
            }
            --v21;
            if (v8 <= v9) {
              goto LABEL_47;
            }
          }
          else
          {
            if (v27 != v8 || v23 >= (unint64_t *)v8) {
              *long long v23 = v26;
            }
            long long v31 = v8 - 8;
            v8 -= 8;
            if (v25 <= v9) {
              goto LABEL_47;
            }
          }
          --v23;
          if (v21 <= v6) {
            goto LABEL_47;
          }
        }
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
LABEL_47:
      sub_1DCD725EC((void **)&v31, (const void **)&v30, &v29);
      return 1;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[8 * v12] <= __dst) {
      memmove(__dst, __src, 8 * v12);
    }
    BOOL v16 = &v6[v12];
    unint64_t v29 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      unint64_t v17 = *(void *)(a5 + 16);
      while (1)
      {
        uint64_t v18 = *(void *)v8;
        if (*(void *)v8 >= v17) {
          break;
        }
        unint64_t v19 = *v6;
        if (*v6 >= v17) {
          goto LABEL_51;
        }
        if (*(float *)(a5 + 32 + 4 * v19) >= *(float *)(a5 + 32 + 4 * v18))
        {
          if (v9 != (char *)v6) {
            *(void *)float v9 = v19;
          }
          unint64_t v30 = ++v6;
          uint64_t v20 = v8;
        }
        else
        {
          uint64_t v20 = v8 + 8;
          if (v9 < v8 || v9 >= v20 || v9 != v8) {
            *(void *)float v9 = v18;
          }
        }
        v9 += 8;
        if (v6 < v16)
        {
          uint64_t v8 = v20;
          if ((unint64_t)v20 < a3) {
            continue;
          }
        }
        long long v31 = v9;
        goto LABEL_47;
      }
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    goto LABEL_47;
  }
LABEL_52:
  swift_bridgeObjectRelease();
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCD7E098(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 != a2)
  {
    uint64_t v5 = *a4;
    unint64_t v6 = *(void *)(a5 + 16);
    uint64_t v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    unint64_t v8 = *(void *)(v5 + 8 * a3);
    uint64_t v9 = result;
    int64_t v10 = (unint64_t *)v7;
    while (v8 < v6)
    {
      unint64_t v11 = *v10;
      if (*v10 >= v6) {
        goto LABEL_13;
      }
      if (*(float *)(a5 + 32 + 4 * v11) < *(float *)(a5 + 32 + 4 * v8))
      {
        if (!v5) {
          goto LABEL_14;
        }
        *int64_t v10 = v8;
        v10[1] = v11;
        --v10;
        if (a3 != ++v9) {
          continue;
        }
      }
      ++a3;
      v7 += 8;
      if (a3 == a2) {
        return result;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCD7E120(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_1DD048F68();
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_150;
    }
    if (!v4) {
      return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain();
    sub_1DCD7E098(0, v4, 1, a1, a2);
    if (!v111) {
      return swift_bridgeObjectRelease_n();
    }
    goto LABEL_121;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_158;
  }
  uint64_t v106 = a2;
  uint64_t v102 = v4;
  uint64_t v100 = v5;
  uint64_t v98 = a1;
  if (v4 < 2)
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v99 = MEMORY[0x1E4FBC860];
    if (v4 == 1) {
      goto LABEL_13;
    }
    unint64_t v34 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_106:
    if (v34 >= 2)
    {
      uint64_t v87 = *v98;
      uint64_t v110 = *v98;
      while (1)
      {
        unint64_t v88 = v34 - 2;
        if (v34 < 2) {
          break;
        }
        if (!v87) {
          goto LABEL_157;
        }
        uint64_t v108 = v10;
        uint64_t v89 = *(void *)&v10[16 * v88 + 32];
        uint64_t v90 = *(void *)&v10[16 * v34 + 24];
        int v91 = (char *)(v87 + 8 * v89);
        uint64_t v92 = (char *)(v87 + 8 * *(void *)&v10[16 * v34 + 16]);
        unint64_t v93 = v87 + 8 * v90;
        swift_bridgeObjectRetain();
        sub_1DCD7DDCC(v91, v92, v93, __dst, v106);
        if (v111) {
          goto LABEL_118;
        }
        swift_bridgeObjectRelease();
        if (v90 < v89) {
          goto LABEL_142;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v108 = sub_1DCD729EC((uint64_t)v108);
        }
        int64_t v10 = v108;
        if (v88 >= *((void *)v108 + 2)) {
          goto LABEL_143;
        }
        int v94 = &v108[16 * v88 + 32];
        *(void *)int v94 = v89;
        *((void *)v94 + 1) = v90;
        unint64_t v95 = *((void *)v108 + 2);
        if (v34 > v95) {
          goto LABEL_144;
        }
        memmove(&v108[16 * v34 + 16], &v108[16 * v34 + 32], 16 * (v95 - v34));
        *((void *)v108 + 2) = v95 - 1;
        unint64_t v34 = v95 - 1;
        uint64_t v87 = v110;
        if (v95 <= 2) {
          goto LABEL_119;
        }
      }
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
      goto LABEL_153;
    }
LABEL_119:
    swift_bridgeObjectRelease();
    uint64_t v96 = v99;
LABEL_120:
    *(void *)(v96 + 16) = 0;
LABEL_121:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  uint64_t v7 = v6 >> 1;
  uint64_t v8 = sub_1DD0486F8();
  *(void *)(v8 + 16) = v7;
  uint64_t v99 = v8;
  __dst = (char *)(v8 + 32);
LABEL_13:
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v101 = a2 + 32;
  uint64_t v97 = *a1 - 8;
  int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v13 = v4;
  uint64_t v104 = *a1;
  while (1)
  {
    uint64_t v14 = v11 + 1;
    if (v11 + 1 >= v13) {
      goto LABEL_35;
    }
    unint64_t v15 = *(void *)(v12 + 8 * v14);
    if ((v15 & 0x8000000000000000) != 0) {
      goto LABEL_146;
    }
    unint64_t v16 = *(void *)(a2 + 16);
    if (v15 >= v16) {
      goto LABEL_147;
    }
    unint64_t v17 = *(void *)(v12 + 8 * v11);
    if (v17 >= v16) {
      goto LABEL_148;
    }
    float v18 = *(float *)(v101 + 4 * v15);
    float v19 = *(float *)(v101 + 4 * v17);
    uint64_t v14 = v11 + 2;
    if (v11 + 2 >= v13) {
      goto LABEL_25;
    }
    float v20 = *(float *)(v101 + 4 * v15);
    do
    {
      unint64_t v21 = *(void *)(v12 + 8 * v14);
      if (v21 >= v16) {
        goto LABEL_128;
      }
      if (v15 >= v16)
      {
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
        goto LABEL_141;
      }
      if (v19 < v18 == v20 >= *(float *)(v101 + 4 * v21)) {
        goto LABEL_25;
      }
      ++v14;
      float v20 = *(float *)(v101 + 4 * v21);
      unint64_t v15 = v21;
    }
    while (v13 != v14);
    uint64_t v14 = v13;
LABEL_25:
    if (v19 < v18) {
      break;
    }
LABEL_35:
    if (v14 < v13)
    {
      if (__OFSUB__(v14, v11)) {
        goto LABEL_149;
      }
      if (v14 - v11 < v100)
      {
        uint64_t v25 = v11 + v100;
        if (__OFADD__(v11, v100)) {
          goto LABEL_151;
        }
        if (v25 >= v13) {
          uint64_t v25 = v13;
        }
        if (v25 < v11) {
          goto LABEL_152;
        }
        if (v14 != v25)
        {
          unint64_t v26 = *(void *)(a2 + 16);
          uint64_t v27 = (unint64_t *)(v97 + 8 * v14);
          do
          {
            unint64_t v28 = *(void *)(v12 + 8 * v14);
            uint64_t v29 = v11;
            unint64_t v30 = v27;
            do
            {
              if (v28 >= v26)
              {
                __break(1u);
LABEL_123:
                __break(1u);
LABEL_124:
                __break(1u);
LABEL_125:
                __break(1u);
LABEL_126:
                __break(1u);
LABEL_127:
                __break(1u);
LABEL_128:
                __break(1u);
                goto LABEL_129;
              }
              unint64_t v31 = *v30;
              if (*v30 >= v26) {
                goto LABEL_123;
              }
              if (*(float *)(v101 + 4 * v31) >= *(float *)(v101 + 4 * v28)) {
                break;
              }
              if (!v12) {
                goto LABEL_154;
              }
              *unint64_t v30 = v28;
              v30[1] = v31;
              --v30;
              ++v29;
            }
            while (v14 != v29);
            ++v14;
            ++v27;
          }
          while (v14 != v25);
          uint64_t v14 = v25;
        }
      }
    }
    if (v14 < v11) {
      goto LABEL_145;
    }
    uint64_t v103 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v10 = sub_1DCD71FDC(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v33 = *((void *)v10 + 2);
    unint64_t v32 = *((void *)v10 + 3);
    uint64_t v107 = v10;
    unint64_t v34 = v33 + 1;
    uint64_t v12 = v104;
    if (v33 >= v32 >> 1)
    {
      uint64_t v86 = sub_1DCD71FDC((char *)(v32 > 1), v33 + 1, 1, v10);
      uint64_t v12 = v104;
      uint64_t v107 = v86;
    }
    *((void *)v107 + 2) = v34;
    uint64_t v35 = v107 + 32;
    long long v36 = &v107[16 * v33 + 32];
    *(void *)long long v36 = v11;
    *((void *)v36 + 1) = v14;
    if (v33)
    {
      int64_t v10 = v107;
      while (1)
      {
        unint64_t v37 = v34 - 1;
        if (v34 >= 4)
        {
          long long v42 = &v35[16 * v34];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_130;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_131;
          }
          unint64_t v49 = v34 - 2;
          uint64_t v50 = &v35[16 * v34 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_133;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_136;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_140;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_91;
          }
        }
        else
        {
          if (v34 != 3)
          {
            uint64_t v66 = *((void *)v10 + 4);
            uint64_t v67 = *((void *)v10 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_85;
          }
          uint64_t v39 = *((void *)v10 + 4);
          uint64_t v38 = *((void *)v10 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_132;
        }
        unint64_t v49 = v34 - 2;
        unint64_t v55 = &v35[16 * v34 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_135;
        }
        uint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_138;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_139;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_91:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_93;
        }
LABEL_85:
        if (v60) {
          goto LABEL_134;
        }
        char v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_137;
        }
        if (v71 < v59) {
          goto LABEL_102;
        }
LABEL_93:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v34) {
          goto LABEL_124;
        }
        if (!v12) {
          goto LABEL_155;
        }
        uint64_t v77 = &v35[16 * v76];
        uint64_t v78 = v35;
        uint64_t v79 = *(void *)v77;
        unint64_t v80 = v37;
        unint64_t v81 = &v78[16 * v37];
        uint64_t v82 = *((void *)v81 + 1);
        uint64_t v109 = (char *)(v12 + 8 * *(void *)v77);
        uint64_t v83 = (char *)(v12 + 8 * *(void *)v81);
        unint64_t v84 = v12 + 8 * v82;
        a2 = v106;
        swift_bridgeObjectRetain();
        sub_1DCD7DDCC(v109, v83, v84, __dst, v106);
        if (v111)
        {
LABEL_118:
          uint64_t v96 = v99;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_120;
        }
        swift_bridgeObjectRelease();
        if (v82 < v79) {
          goto LABEL_125;
        }
        int64_t v10 = v107;
        if (v80 > *((void *)v107 + 2)) {
          goto LABEL_126;
        }
        *(void *)uint64_t v77 = v79;
        uint64_t v35 = v107 + 32;
        *(void *)&v107[16 * v76 + 40] = v82;
        unint64_t v85 = *((void *)v107 + 2);
        if (v80 >= v85) {
          goto LABEL_127;
        }
        unint64_t v34 = v85 - 1;
        memmove(v81, v81 + 16, 16 * (v85 - 1 - v80));
        *((void *)v107 + 2) = v85 - 1;
        uint64_t v12 = v104;
        if (v85 <= 2) {
          goto LABEL_102;
        }
      }
    }
    unint64_t v34 = 1;
    int64_t v10 = v107;
LABEL_102:
    uint64_t v13 = v102;
    uint64_t v11 = v103;
    if (v103 >= v102) {
      goto LABEL_106;
    }
  }
  if (v14 >= v11)
  {
    if (v11 < v14)
    {
      uint64_t v22 = v14 - 1;
      uint64_t v23 = v11;
      while (1)
      {
        if (v23 != v22)
        {
          if (!v12) {
            goto LABEL_156;
          }
          uint64_t v24 = *(void *)(v12 + 8 * v23);
          *(void *)(v12 + 8 * v23) = *(void *)(v12 + 8 * v22);
          *(void *)(v12 + 8 * v22) = v24;
        }
        BOOL v65 = ++v23 < v22--;
        if (!v65) {
          goto LABEL_35;
        }
      }
    }
    goto LABEL_35;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_155:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_156:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_157:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_158:
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCD7E8E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1DCD743E0(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  sub_1DCD7E120(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1DCD7E988(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    uint64_t v19 = *(void *)(a1 + 16);
    if (!v19) {
      goto LABEL_43;
    }
    unint64_t v21 = (void *)sub_1DCF4D830(0, v19 - 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1DCD7E8E4((uint64_t *)&v21, a1);
    swift_release();
    swift_bridgeObjectRelease();
    return (uint64_t)v21;
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v21 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return (uint64_t)v4;
  }
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 32;
  while (1)
  {
    uint64_t v9 = v4[2];
    if (!v9) {
      goto LABEL_16;
    }
    unint64_t v10 = v4[4];
    if (v10 >= v5) {
      goto LABEL_40;
    }
    float v11 = *(float *)(v8 + 4 * v7);
    if (*(float *)(v8 + 4 * v10) >= v11) {
      break;
    }
    uint64_t v12 = 0;
LABEL_9:
    sub_1DCD7D574(v12, v12, v7);
    uint64_t v4 = v21;
    uint64_t v9 = v21[2];
LABEL_22:
    if (v9 > a2)
    {
      while (v9)
      {
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v18 = v4[2];
          if (!v18) {
            goto LABEL_37;
          }
        }
        else
        {
          uint64_t v4 = sub_1DCEC1C14(v4);
          uint64_t v18 = v4[2];
          if (!v18) {
            goto LABEL_37;
          }
        }
        uint64_t v9 = v18 - 1;
        void v4[2] = v18 - 1;
        if (v18 - 1 <= a2)
        {
          unint64_t v21 = v4;
          goto LABEL_4;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_4:
    if (++v7 == v5) {
      return (uint64_t)v4;
    }
  }
  if (v9 == 1)
  {
LABEL_16:
    if (v9 < a2)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_1DCE9E068(0, v9 + 1, 1, v4);
      }
      unint64_t v17 = v4[2];
      unint64_t v16 = v4[3];
      uint64_t v9 = v17 + 1;
      if (v17 >= v16 >> 1) {
        uint64_t v4 = sub_1DCE9E068((void *)(v16 > 1), v17 + 1, 1, v4);
      }
      void v4[2] = v9;
      v4[v17 + 4] = v7;
      unint64_t v21 = v4;
    }
    goto LABEL_22;
  }
  uint64_t v13 = 5;
  while (1)
  {
    unint64_t v14 = v4[v13];
    if (v14 >= v5) {
      break;
    }
    uint64_t v12 = v13 - 4;
    if (*(float *)(v8 + 4 * v14) < v11)
    {
      if (v9 < v12) {
        goto LABEL_41;
      }
      if ((v12 & 0x8000000000000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_42;
    }
    uint64_t v15 = v13 - 3;
    if (__OFADD__(v12, 1)) {
      goto LABEL_39;
    }
    ++v13;
    if (v15 == v9) {
      goto LABEL_16;
    }
  }
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1DCD7EBD8(void *a1, uint64_t a2, char a3)
{
  id v5 = objc_msgSend(a1, sel_numberArray);
  sub_1DCD56524();
  unint64_t v6 = sub_1DD0486B8();

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_14:
    uint64_t v17 = sub_1DCD7E988(v10, a2, a3 & 1);
    swift_bridgeObjectRelease();
    return v17;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1DD048CC8();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DCFC5800(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    uint64_t v10 = v18;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x1E01AE890](v9, v6);
      }
      else {
        id v11 = *(id *)(v6 + 8 * v9 + 32);
      }
      uint64_t v12 = v11;
      objc_msgSend(v11, sel_floatValue);
      int v14 = v13;

      unint64_t v16 = *(void *)(v18 + 16);
      unint64_t v15 = *(void *)(v18 + 24);
      if (v16 >= v15 >> 1) {
        sub_1DCFC5800(v15 > 1, v16 + 1, 1);
      }
      ++v9;
      *(void *)(v18 + 16) = v16 + 1;
      *(_DWORD *)(v18 + 4 * v16 + 32) = v14;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void *sub_1DCD7ED98(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, id, uint64_t), uint64_t a5)
{
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  id v53 = a2;
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1DCE9E814(0, a1 & ~(a1 >> 63), 0, MEMORY[0x1E4FBC860]);
  uint64_t v57 = MEMORY[0x1E4FBC870];
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = result;
    if (a1)
    {
      uint64_t v13 = *(void *)(a3 + 16);
      if (v13)
      {
        uint64_t v46 = v10;
        uint64_t v47 = v8;
        uint64_t v48 = v7;
        uint64_t v14 = 0;
        uint64_t v49 = v13;
        uint64_t v50 = a3 + 32;
        uint64_t v15 = 1;
        id v16 = v53;
        uint64_t v51 = a3;
        while (1)
        {
          uint64_t v17 = v54(v14, v16, a3);
          if (v18)
          {
            uint64_t v19 = v17;
            uint64_t v20 = v18;
            uint64_t v21 = v57;
            if (!*(void *)(v57 + 16)) {
              goto LABEL_23;
            }
            uint64_t v52 = v12;
            sub_1DD0490B8();
            swift_bridgeObjectRetain();
            sub_1DD0484F8();
            uint64_t v22 = sub_1DD049108();
            uint64_t v23 = -1 << *(unsigned char *)(v21 + 32);
            unint64_t v24 = v22 & ~v23;
            if (((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
              goto LABEL_22;
            }
            uint64_t v25 = *(void *)(v21 + 48);
            unint64_t v26 = (void *)(v25 + 16 * v24);
            BOOL v27 = *v26 == v19 && v20 == v26[1];
            if (!v27 && (sub_1DD048FA8() & 1) == 0)
            {
              uint64_t v28 = ~v23;
              while (1)
              {
                unint64_t v24 = (v24 + 1) & v28;
                if (((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
                  break;
                }
                uint64_t v29 = (void *)(v25 + 16 * v24);
                BOOL v30 = *v29 == v19 && v20 == v29[1];
                if (v30 || (sub_1DD048FA8() & 1) != 0) {
                  goto LABEL_13;
                }
              }
LABEL_22:
              swift_bridgeObjectRelease();
              uint64_t v12 = v52;
              uint64_t v13 = v49;
LABEL_23:
              swift_bridgeObjectRetain();
              sub_1DCF5156C(&v56, v19, v20);
              swift_bridgeObjectRelease();
              id v16 = v53;
              id v31 = objc_msgSend(v53, sel_objectAtIndexedSubscript_, *(void *)(v50 + 8 * v14));
              objc_msgSend(v31, sel_floatValue);
              int v33 = v32;

              unint64_t v35 = v12[2];
              unint64_t v34 = v12[3];
              unint64_t v36 = v35 + 1;
              if (v35 >= v34 >> 1) {
                uint64_t v12 = sub_1DCE9E814((void *)(v34 > 1), v35 + 1, 1, v12);
              }
              v12[2] = v36;
              unint64_t v37 = &v12[3 * v35];
              v37[4] = v19;
              v37[5] = v20;
              *((_DWORD *)v37 + 12) = v33;
              if (v36 == a1) {
                goto LABEL_33;
              }
              a3 = v51;
              goto LABEL_27;
            }
LABEL_13:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a3 = v51;
            uint64_t v12 = v52;
            uint64_t v13 = v49;
            id v16 = v53;
          }
LABEL_27:
          if (v15 == a1) {
            goto LABEL_33;
          }
          uint64_t v14 = v15;
          BOOL v27 = v15++ == v13;
          if (v27)
          {
            uint64_t v8 = v47;
            uint64_t v7 = v48;
            uint64_t v10 = v46;
            break;
          }
        }
      }
      swift_bridgeObjectRelease();
      sub_1DCDB40EC((uint64_t)v10);
      uint64_t v38 = sub_1DD048048();
      os_log_type_t v39 = sub_1DD048848();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = v13;
        long long v42 = v10;
        uint64_t v43 = v40;
        *(_DWORD *)uint64_t v40 = 134217984;
        uint64_t v56 = v41;
        sub_1DD048A28();
        _os_log_impl(&dword_1DCCF9000, v38, v39, "Invalid index %ld", v43, 0xCu);
        uint64_t v44 = v43;
        uint64_t v10 = v42;
        MEMORY[0x1E01B07E0](v44, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
LABEL_33:
      swift_bridgeObjectRelease();
    }
    return v12;
  }
  return result;
}

uint64_t sub_1DCD7F1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(uint64_t, id, uint64_t), uint64_t a8)
{
  uint64_t v10 = *(void *)(a1 + 24);
  if (!*(void *)(v10 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_1DCEAD1A4(a2, a3);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_1DD048B98();
    swift_bridgeObjectRelease();
    sub_1DD048548();
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v22 = 0xD00000000000001BLL;
    *(void *)(v22 + 8) = 0x80000001DD068A10;
    *(unsigned char *)(v22 + 16) = 4;
    return swift_willThrow();
  }
  int v18 = a6 & 1;
  id v19 = *(id *)(*(void *)(v10 + 56) + 8 * v16);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1DCD7EBD8(v19, a5, v18);
  if (v18) {
    a5 = *(void *)(v20 + 16);
  }
  sub_1DCD7ED98(a5, v19, v20, a7, a8);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a4 + *(int *)(type metadata accessor for MLModelInfo(0) + 24));
  swift_bridgeObjectRetain();
  sub_1DD048548();

  return v23;
}

ValueMetadata *type metadata accessor for ClassificationInfo.CodingKeys()
{
  return &type metadata for ClassificationInfo.CodingKeys;
}

uint64_t sub_1DCD7F3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClassificationItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClassificationItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClassificationItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 20)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClassificationItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 20) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 20) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassificationItem()
{
  return &type metadata for ClassificationItem;
}

unint64_t sub_1DCD7F524()
{
  unint64_t result = qword_1EAB02830;
  if (!qword_1EAB02830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02830);
  }
  return result;
}

unint64_t sub_1DCD7F57C()
{
  unint64_t result = qword_1EBE85828;
  if (!qword_1EBE85828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85828);
  }
  return result;
}

unint64_t sub_1DCD7F5D4()
{
  unint64_t result = qword_1EBE85820;
  if (!qword_1EBE85820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85820);
  }
  return result;
}

unint64_t sub_1DCD7F628()
{
  unint64_t result = qword_1EBE85830;
  if (!qword_1EBE85830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85830);
  }
  return result;
}

unsigned char *_s18VisualIntelligence18ClassificationInfoV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD7F748);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassificationItem.CodingKeys()
{
  return &type metadata for ClassificationItem.CodingKeys;
}

unint64_t sub_1DCD7F784()
{
  unint64_t result = qword_1EAB02840;
  if (!qword_1EAB02840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02840);
  }
  return result;
}

unint64_t sub_1DCD7F7DC()
{
  unint64_t result = qword_1EBE85840;
  if (!qword_1EBE85840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85840);
  }
  return result;
}

unint64_t sub_1DCD7F834()
{
  unint64_t result = qword_1EBE85838;
  if (!qword_1EBE85838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85838);
  }
  return result;
}

uint64_t sub_1DCD7F898(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v4 - 8);
  char v60 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v60 - v7;
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v60 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v60 - v13;
  MEMORY[0x1F4188790](v15);
  char v17 = (char *)&v60 - v16;
  sub_1DCD56CC8(a1, v2 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_modelInfo);
  uint64_t v18 = *(int *)(type metadata accessor for MLModelInfo(0) + 36);
  uint64_t v61 = a1;
  uint64_t v19 = *(void *)(a1 + v18);
  if (*(void *)(v19 + 16) && (uint64_t v20 = sub_1DCEAD428(7), (v21 & 1) != 0))
  {
    uint64_t v22 = v20;
    uint64_t v23 = *(void *)(v19 + 56);
    uint64_t v24 = sub_1DD046478();
    uint64_t v25 = *(void *)(v24 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v17, v23 + *(void *)(v25 + 72) * v22, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v17, 0, 1, v24);
  }
  else
  {
    uint64_t v26 = sub_1DD046478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v17, 1, 1, v26);
  }
  type metadata accessor for FileMapper();
  swift_allocObject();
  *(void *)(v2 + 16) = sub_1DCEC56C0((uint64_t)v17);
  if (*(void *)(v19 + 16) && (uint64_t v27 = sub_1DCEAD428(8), (v28 & 1) != 0))
  {
    uint64_t v29 = v27;
    uint64_t v30 = *(void *)(v19 + 56);
    uint64_t v31 = sub_1DD046478();
    uint64_t v32 = *(void *)(v31 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v14, v30 + *(void *)(v32 + 72) * v29, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v14, 0, 1, v31);
  }
  else
  {
    uint64_t v33 = sub_1DD046478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v14, 1, 1, v33);
  }
  swift_allocObject();
  *(void *)(v2 + 24) = sub_1DCEC56C0((uint64_t)v14);
  if (*(void *)(v19 + 16) && (uint64_t v34 = sub_1DCEAD428(3), (v35 & 1) != 0))
  {
    uint64_t v36 = v34;
    uint64_t v37 = *(void *)(v19 + 56);
    uint64_t v38 = sub_1DD046478();
    uint64_t v39 = *(void *)(v38 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v11, v37 + *(void *)(v39 + 72) * v36, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v11, 0, 1, v38);
  }
  else
  {
    uint64_t v40 = sub_1DD046478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v11, 1, 1, v40);
  }
  swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_catMapper) = sub_1DCEC56C0((uint64_t)v11);
  if (*(void *)(v19 + 16) && (uint64_t v41 = sub_1DCEAD428(4), (v42 & 1) != 0))
  {
    uint64_t v43 = v41;
    uint64_t v44 = *(void *)(v19 + 56);
    uint64_t v45 = sub_1DD046478();
    uint64_t v46 = *(void *)(v45 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v8, v44 + *(void *)(v46 + 72) * v43, v45);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v8, 0, 1, v45);
  }
  else
  {
    uint64_t v47 = sub_1DD046478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v8, 1, 1, v47);
  }
  swift_allocObject();
  *(void *)(v2 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_dogMapper) = sub_1DCEC56C0((uint64_t)v8);
  if (*(void *)(v19 + 16) && (uint64_t v48 = sub_1DCEAD428(5), (v49 & 1) != 0))
  {
    uint64_t v50 = v48;
    uint64_t v51 = *(void *)(v19 + 56);
    uint64_t v52 = sub_1DD046478();
    uint64_t v53 = *(void *)(v52 - 8);
    uint64_t v54 = v53;
    uint64_t v55 = v51 + *(void *)(v53 + 72) * v50;
    uint64_t v56 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v60, v55, v52);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v56, 0, 1, v52);
  }
  else
  {
    uint64_t v57 = sub_1DD046478();
    uint64_t v56 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v60, 1, 1, v57);
  }
  swift_allocObject();
  BOOL v58 = sub_1DCEC56C0(v56);
  sub_1DCD59AB4(v61);
  *(void *)(v2 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_catCoatMapper) = v58;
  return v2;
}

uint64_t sub_1DCD7FFC4(void *a1, uint64_t a2, unsigned char *a3, unint64_t a4)
{
  uint64_t v40 = sub_1DD048068();
  uint64_t v39 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v41 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = a3[104];
  if (sub_1DCD9C35C(v10) == 1937006947 && v11 == 0xE400000000000000) {
    goto LABEL_8;
  }
  char v13 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_9;
  }
  if (sub_1DCD9C35C(v10) == 1936158564 && v14 == 0xE400000000000000) {
    goto LABEL_8;
  }
  char v20 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_9;
  }
  if (sub_1DCD9C35C(v10) == 0x736C616D696E61 && v21 == 0xE700000000000000) {
    goto LABEL_8;
  }
  char v22 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_9;
  }
  if (sub_1DCD9C35C(v10) == 0x7364726962 && v23 == 0xE500000000000000) {
    goto LABEL_8;
  }
  char v24 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v24) {
    goto LABEL_9;
  }
  if (sub_1DCD9C35C(v10) == 0x73746365736E69 && v25 == 0xE700000000000000) {
    goto LABEL_8;
  }
  char v26 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_9;
  }
  if (sub_1DCD9C35C(v10) == 0x73656C6974706572 && v27 == 0xE800000000000000) {
    goto LABEL_8;
  }
  char v28 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_9;
  }
  if (sub_1DCD9C35C(v10) == 0x736C616D6D616DLL && v29 == 0xE700000000000000) {
    goto LABEL_8;
  }
  char v30 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_9;
  }
  if (sub_1DCD9C35C(v10) == 0x65727574616ELL && v31 == 0xE600000000000000)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v15 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_9:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A80);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1DD04E910;
    uint64_t v16 = sub_1DCD80594(a1, a3, a4, a2);
    if (v4)
    {
      *(void *)(v15 + 16) = 0;
      swift_release();
    }
    else
    {
      *(void *)(v15 + 32) = v16;
      *(void *)(v15 + 40) = v17;
      *(void *)(v15 + 48) = v18;
    }
    return v15;
  }
  sub_1DCDB40EC(v41);
  sub_1DCD8190C((uint64_t)a3, (uint64_t)v43);
  uint64_t v32 = sub_1DD048048();
  os_log_type_t v33 = sub_1DD048858();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v44 = v35;
    *(_DWORD *)uint64_t v34 = 136315138;
    uint64_t v15 = (uint64_t)(v34 + 12);
    uint64_t v36 = sub_1DCD9C35C(v43[104]);
    uint64_t v42 = sub_1DCED7FA0(v36, v37, &v44);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD42DC4((uint64_t)v43);
    _os_log_impl(&dword_1DCCF9000, v32, v33, "Invalid domain for natureworld: %s", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v35, -1, -1);
    MEMORY[0x1E01B07E0](v34, -1, -1);
  }
  else
  {
    sub_1DCD42DC4((uint64_t)v43);
  }

  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
  sub_1DCD3A548();
  swift_allocError();
  *(void *)uint64_t v38 = 0xD00000000000001ALL;
  *(void *)(v38 + 8) = 0x80000001DD068AC0;
  *(unsigned char *)(v38 + 16) = 3;
  swift_willThrow();
  return v15;
}

char *sub_1DCD80594(void *a1, unsigned char *a2, unint64_t a3, uint64_t a4)
{
  unint64_t v131 = a3;
  uint64_t v132 = a2;
  uint64_t v7 = sub_1DD048068();
  uint64_t v129 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v122 - v11;
  if (a4 <= 2) {
    uint64_t v13 = 2;
  }
  else {
    uint64_t v13 = a4;
  }
  uint64_t v15 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
  if (v4) {
    return v12;
  }
  uint64_t v125 = v12;
  unint64_t v17 = v131;
  uint64_t v127 = v13;
  uint64_t v123 = v9;
  unint64_t v126 = a1;
  uint64_t v124 = v7;
  uint64_t v128 = v16;
  char v18 = v132[104];
  if (sub_1DCD9C35C(v18) == 0x65727574616ELL && v19 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  char v20 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v20)
  {
LABEL_9:
    uint64_t v21 = *(void *)(v128 + 24);
    if (*(void *)(v21 + 16))
    {
      unint64_t v22 = sub_1DCEAD1A4(0x73746E616C70, 0xE600000000000000);
      if (v23)
      {
        char v24 = *(void **)(*(void *)(v21 + 56) + 8 * v22);
        if (v17)
        {
          uint64_t v25 = *(void *)(v17 + 16);
          uint64_t v12 = v24;
          uint64_t v26 = v127;
          if (v25)
          {
            uint64_t v27 = 0x73746E616C70;
            uint64_t v28 = 0xE600000000000000;
            goto LABEL_33;
          }
LABEL_42:
          uint64_t v125 = 0;
          unint64_t v131 = 0xE000000000000000;
          goto LABEL_43;
        }
        goto LABEL_39;
      }
    }
    sub_1DCD3A548();
    swift_allocError();
    unint64_t v30 = 0xD000000000000016;
    uint64_t v31 = "invalid nature results";
    goto LABEL_36;
  }
  if (sub_1DCD9C35C(v18) != 0x736C616D6D616DLL || v32 != 0xE700000000000000)
  {
    char v33 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_28;
    }
    if (sub_1DCD9C35C(v18) != 0x7364726962 || v34 != 0xE500000000000000)
    {
      char v35 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v35) {
        goto LABEL_28;
      }
      if (sub_1DCD9C35C(v18) != 0x73746365736E69 || v36 != 0xE700000000000000)
      {
        char v37 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v37) {
          goto LABEL_28;
        }
        if (sub_1DCD9C35C(v18) != 0x73656C6974706572 || v38 != 0xE800000000000000)
        {
          char v39 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v39) {
            goto LABEL_28;
          }
          if (sub_1DCD9C35C(v18) == 1937006947 && v88 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            goto LABEL_89;
          }
          char v89 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v89)
          {
LABEL_89:
            uint64_t v90 = *(void *)(v128 + 24);
            if (!*(void *)(v90 + 16) || (unint64_t v91 = sub_1DCEAD1A4(7627107, 0xE300000000000000), (v92 & 1) == 0))
            {
              sub_1DCD3A548();
              swift_allocError();
              unint64_t v30 = 0xD000000000000013;
              uint64_t v31 = "invalid cat results";
              goto LABEL_36;
            }
            char v24 = *(void **)(*(void *)(v90 + 56) + 8 * v91);
            if (!v17) {
              goto LABEL_39;
            }
            uint64_t v93 = *(void *)(v17 + 16);
            uint64_t v12 = v24;
            if (!v93) {
              goto LABEL_40;
            }
            uint64_t v94 = 7627107;
LABEL_94:
            unint64_t v95 = sub_1DCEAD1A4(v94, 0xE300000000000000);
            if (v96)
            {
              uint64_t v97 = (uint64_t *)(*(void *)(v17 + 56) + 16 * v95);
              unint64_t v98 = v97[1];
              uint64_t v125 = (char *)*v97;
              unint64_t v131 = v98;
              swift_bridgeObjectRetain();
              goto LABEL_41;
            }
LABEL_40:
            uint64_t v125 = 0;
            unint64_t v131 = 0xE000000000000000;
LABEL_41:
            uint64_t v26 = v127;
            goto LABEL_43;
          }
          if (sub_1DCD9C35C(v18) == 1936158564 && v99 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v100 = sub_1DD048FA8();
            swift_bridgeObjectRelease();
            if ((v100 & 1) == 0)
            {
              sub_1DCDB40EC((uint64_t)v125);
              sub_1DCD8190C((uint64_t)v132, (uint64_t)&v134);
              uint64_t v108 = sub_1DD048048();
              os_log_type_t v109 = sub_1DD048858();
              if (os_log_type_enabled(v108, v109))
              {
                uint64_t v110 = (uint8_t *)swift_slowAlloc();
                uint64_t v111 = swift_slowAlloc();
                uint64_t v137 = (void *)v111;
                *(_DWORD *)uint64_t v110 = 136315138;
                uint64_t v112 = sub_1DCD9C35C(v136);
                uint64_t v133 = sub_1DCED7FA0(v112, v113, (uint64_t *)&v137);
                sub_1DD048A28();
                swift_bridgeObjectRelease();
                sub_1DCD42DC4((uint64_t)&v134);
                _os_log_impl(&dword_1DCCF9000, v108, v109, "Invalid domain for natureworld: %s", v110, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1E01B07E0](v111, -1, -1);
                MEMORY[0x1E01B07E0](v110, -1, -1);
              }
              else
              {
                sub_1DCD42DC4((uint64_t)&v134);
              }

              (*(void (**)(char *, uint64_t))(v129 + 8))(v125, v124);
              sub_1DCD3A548();
              swift_allocError();
              *(void *)uint64_t v105 = 0xD00000000000001ALL;
              *(void *)(v105 + 8) = 0x80000001DD068AC0;
              char v106 = 3;
              goto LABEL_117;
            }
          }
          uint64_t v101 = *(void *)(v128 + 24);
          if (*(void *)(v101 + 16))
          {
            unint64_t v102 = sub_1DCEAD1A4(6778724, 0xE300000000000000);
            if (v103)
            {
              char v24 = *(void **)(*(void *)(v101 + 56) + 8 * v102);
              if (!v17) {
                goto LABEL_39;
              }
              uint64_t v104 = *(void *)(v17 + 16);
              uint64_t v12 = v24;
              if (!v104) {
                goto LABEL_40;
              }
              uint64_t v94 = 6778724;
              goto LABEL_94;
            }
          }
          sub_1DCD3A548();
          swift_allocError();
          *(void *)uint64_t v105 = 0xD000000000000013;
          *(void *)(v105 + 8) = 0x80000001DD068AE0;
          char v106 = 4;
LABEL_117:
          *(unsigned char *)(v105 + 16) = v106;
          swift_willThrow();
          goto LABEL_37;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v40 = *(void *)(v128 + 24);
  if (!*(void *)(v40 + 16) || (unint64_t v41 = sub_1DCEAD1A4(0x736C616D696E61, 0xE700000000000000), (v42 & 1) == 0))
  {
    sub_1DCD3A548();
    swift_allocError();
    unint64_t v30 = 0xD000000000000016;
    uint64_t v31 = "invalid animal results";
LABEL_36:
    *(void *)uint64_t v29 = v30;
    *(void *)(v29 + 8) = (unint64_t)(v31 - 32) | 0x8000000000000000;
    *(unsigned char *)(v29 + 16) = 4;
    swift_willThrow();
LABEL_37:
    swift_release();
    return v12;
  }
  char v24 = *(void **)(*(void *)(v40 + 56) + 8 * v41);
  if (!v17)
  {
LABEL_39:
    uint64_t v12 = v24;
    goto LABEL_40;
  }
  uint64_t v43 = *(void *)(v17 + 16);
  uint64_t v12 = v24;
  uint64_t v26 = v127;
  if (!v43) {
    goto LABEL_42;
  }
  uint64_t v27 = 0x736C616D696E61;
  uint64_t v28 = 0xE700000000000000;
LABEL_33:
  unint64_t v44 = sub_1DCEAD1A4(v27, v28);
  if ((v45 & 1) == 0) {
    goto LABEL_42;
  }
  uint64_t v46 = (uint64_t *)(*(void *)(v17 + 56) + 16 * v44);
  unint64_t v47 = v46[1];
  uint64_t v125 = (char *)*v46;
  unint64_t v131 = v47;
  swift_bridgeObjectRetain();
LABEL_43:

  uint64_t v49 = sub_1DCD7EBD8(v12, v26, 0);
  if (sub_1DCD9C35C(v18) == 0x65727574616ELL && v50 == 0xE600000000000000)
  {
    uint64_t v51 = sub_1DCD82050;
    uint64_t v52 = v130;
    uint64_t v53 = v132;
LABEL_53:
    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  char v54 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  uint64_t v55 = sub_1DCD82050;
  uint64_t v53 = v132;
  if (v54) {
    goto LABEL_47;
  }
  uint64_t v56 = sub_1DCD9C35C(v18);
  BOOL v58 = sub_1DCD8203C;
  if (v56 == 0x736C616D6D616DLL && v57 == 0xE700000000000000) {
    goto LABEL_51;
  }
  char v73 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  uint64_t v55 = sub_1DCD8203C;
  if ((v73 & 1) == 0)
  {
    uint64_t v74 = sub_1DCD9C35C(v18);
    BOOL v58 = sub_1DCD8203C;
    if (v74 == 0x7364726962 && v75 == 0xE500000000000000) {
      goto LABEL_51;
    }
    char v76 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    uint64_t v55 = sub_1DCD8203C;
    if ((v76 & 1) == 0)
    {
      uint64_t v77 = sub_1DCD9C35C(v18);
      BOOL v58 = sub_1DCD8203C;
      if (v77 == 0x73746365736E69 && v78 == 0xE700000000000000) {
        goto LABEL_51;
      }
      char v79 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      uint64_t v55 = sub_1DCD8203C;
      if ((v79 & 1) == 0)
      {
        uint64_t v80 = sub_1DCD9C35C(v18);
        BOOL v58 = sub_1DCD8203C;
        if (v80 == 0x73656C6974706572 && v81 == 0xE800000000000000) {
          goto LABEL_51;
        }
        char v82 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        uint64_t v55 = sub_1DCD8203C;
        if ((v82 & 1) == 0)
        {
          uint64_t v83 = sub_1DCD9C35C(v18);
          BOOL v58 = sub_1DCD82020;
          if (v83 != 1937006947 || v84 != 0xE400000000000000)
          {
            char v85 = sub_1DD048FA8();
            swift_bridgeObjectRelease();
            uint64_t v86 = sub_1DCD82020;
            if ((v85 & 1) == 0)
            {
              if (sub_1DCD9C35C(v18) == 1936158564 && v107 == 0xE400000000000000)
              {
                uint64_t v51 = sub_1DCD81968;
                uint64_t v52 = v130;
                uint64_t v53 = v132;
                goto LABEL_52;
              }
              char v114 = sub_1DD048FA8();
              swift_bridgeObjectRelease();
              uint64_t v86 = sub_1DCD81968;
              if ((v114 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1DCDB40EC((uint64_t)v123);
                sub_1DCD8190C((uint64_t)v132, (uint64_t)&v134);
                int v115 = sub_1DD048048();
                os_log_type_t v116 = sub_1DD048858();
                if (os_log_type_enabled(v115, v116))
                {
                  uint64_t v117 = (uint8_t *)swift_slowAlloc();
                  uint64_t v118 = swift_slowAlloc();
                  uint64_t v137 = (void *)v118;
                  *(_DWORD *)uint64_t v117 = 136315138;
                  uint64_t v119 = sub_1DCD9C35C(v136);
                  uint64_t v133 = sub_1DCED7FA0(v119, v120, (uint64_t *)&v137);
                  sub_1DD048A28();
                  swift_bridgeObjectRelease();
                  sub_1DCD42DC4((uint64_t)&v134);
                  _os_log_impl(&dword_1DCCF9000, v115, v116, "Invalid domain for natureworld: %s", v117, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1E01B07E0](v118, -1, -1);
                  MEMORY[0x1E01B07E0](v117, -1, -1);
                }
                else
                {
                  sub_1DCD42DC4((uint64_t)&v134);
                }

                (*(void (**)(char *, uint64_t))(v129 + 8))(v123, v124);
                sub_1DCD3A548();
                swift_allocError();
                *(void *)uint64_t v121 = 0xD00000000000001ALL;
                *(void *)(v121 + 8) = 0x80000001DD068AC0;
                *(unsigned char *)(v121 + 16) = 3;
                swift_willThrow();
                swift_release();

                return v12;
              }
            }
            uint64_t v51 = v86;
            uint64_t v52 = v130;
            uint64_t v53 = v132;
            goto LABEL_48;
          }
LABEL_51:
          uint64_t v51 = v58;
          uint64_t v52 = v130;
LABEL_52:
          uint64_t v26 = v127;
          goto LABEL_53;
        }
      }
    }
  }
LABEL_47:
  uint64_t v51 = v55;
  uint64_t v52 = v130;
LABEL_48:
  uint64_t v26 = v127;
LABEL_54:
  swift_retain();
  uint64_t v132 = v12;
  uint64_t v59 = sub_1DCD7ED98(v26, v12, v49, (uint64_t (*)(uint64_t, id, uint64_t))v51, v52);
  swift_bridgeObjectRelease();
  uint64_t v60 = v52 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_modelInfo;
  uint64_t v61 = (char **)(v60 + *(int *)(type metadata accessor for MLModelInfo(0) + 24));
  uint64_t v62 = (uint64_t)v61[1];
  uint64_t v134 = *v61;
  uint64_t v135 = v62;
  swift_bridgeObjectRetain();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  uint64_t v12 = v134;
  uint64_t v63 = v135;
  if (sub_1DCD9C35C(v53[104]) == 1936158564 && v64 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    sub_1DCD8190C((uint64_t)v53, (uint64_t)&v134);
LABEL_61:
    sub_1DCD42DC4((uint64_t)&v134);
LABEL_62:
    uint64_t v12 = (char *)sub_1DCF2374C(1, (uint64_t)v12, v63, (uint64_t)v59, 0.125);
    char v68 = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v59 = v68;
    goto LABEL_63;
  }
  char v65 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  sub_1DCD8190C((uint64_t)v53, (uint64_t)&v134);
  if (v65) {
    goto LABEL_61;
  }
  if (sub_1DCD9C35C(v136) == 1937006947 && v66 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_61;
  }
  char v87 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  sub_1DCD42DC4((uint64_t)&v134);
  if (v87) {
    goto LABEL_62;
  }
LABEL_63:
  if (sub_1DCD9C35C(v53[104]) == 1937006947 && v69 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    uint64_t v70 = v126;
  }
  else
  {
    char v71 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    uint64_t v70 = v126;
    if ((v71 & 1) == 0)
    {
      swift_release();

      swift_release();
      return v12;
    }
  }
  sub_1DCD81984(v70);
  uint64_t v137 = v59;
  swift_bridgeObjectRetain();
  uint64_t v72 = swift_bridgeObjectRetain();
  sub_1DCFDF354(v72);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return v12;
}

uint64_t sub_1DCD81770()
{
  swift_release();
  swift_release();
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_modelInfo);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCD81814()
{
  return type metadata accessor for ClassificationNatureworldPostProcessor();
}

uint64_t type metadata accessor for ClassificationNatureworldPostProcessor()
{
  uint64_t result = qword_1EBE85DC0;
  if (!qword_1EBE85DC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCD81868()
{
  uint64_t result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCD8190C(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1DCD81968(unint64_t a1, void *a2, uint64_t a3)
{
  sub_1DCD82064(*(void *)(v3 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_dogMapper), a1, a2, a3);
}

void sub_1DCD81984(void *a1)
{
  void (*v34)(uint64_t *__return_ptr, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void *v37;
  unsigned __int8 v38;
  void *v39;
  void *v40;
  objc_class *v41;
  objc_class *v42;
  id v43;
  int v44;
  int v45;
  NSObject *v46;
  unint64_t v47;
  unint64_t isa;
  NSObject *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  uint64_t v3 = v1;
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  if (v2) {
    return;
  }
  uint64_t v12 = *(void *)(v11 + 24);
  if (!*(void *)(v12 + 16) || (unint64_t v13 = sub_1DCEAD1A4(0x7461705F74616F63, 0xEC0000006E726574), (v14 & 1) == 0))
  {
    swift_release();
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v22 = 0xD000000000000014;
    *(void *)(v22 + 8) = 0x80000001DD068B60;
    *(unsigned char *)(v22 + 16) = 4;
    swift_willThrow();
    return;
  }
  id v15 = *(id *)(*(void *)(v12 + 56) + 8 * v13);
  swift_release();
  uint64_t v60 = v15;
  uint64_t v16 = sub_1DCD7EBD8(v15, 4, 0);
  sub_1DCDB40EC((uint64_t)v8);
  swift_retain_n();
  unint64_t v17 = sub_1DD048048();
  int v18 = sub_1DD048848();
  BOOL v19 = os_log_type_enabled(v17, (os_log_type_t)v18);
  char v20 = &unk_1EBE9C000;
  uint64_t v59 = v16;
  if (!v19)
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v23 = *(void *)(v16 + 16);
    if (!v23) {
      goto LABEL_32;
    }
    goto LABEL_9;
  }
  LODWORD(v61) = v18;
  uint64_t v21 = (uint8_t *)swift_slowAlloc();
  BOOL v58 = swift_slowAlloc();
  uint64_t v63 = v58;
  *(_DWORD *)uint64_t v21 = 136315138;
  uint64_t v50 = sub_1DCFE3010();
  uint64_t v62 = v17;
  if (v50[2])
  {
    uint64_t v52 = v50[4];
    uint64_t v51 = v50[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v52 = 0;
    uint64_t v51 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v64 = v52;
  char v65 = v51;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
  uint64_t v53 = sub_1DD048478();
  uint64_t v64 = sub_1DCED7FA0(v53, v54, &v63);
  sub_1DD048A28();
  swift_release_n();
  swift_bridgeObjectRelease();
  uint64_t v55 = v62;
  _os_log_impl(&dword_1DCCF9000, v62, (os_log_type_t)v61, "Debug log first element of coat mapping: %s", v21, 0xCu);
  uint64_t v56 = v58;
  swift_arrayDestroy();
  MEMORY[0x1E01B07E0](v56, -1, -1);
  MEMORY[0x1E01B07E0](v21, -1, -1);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v59;
  char v20 = (void *)&unk_1EBE9C000;
  uint64_t v23 = *(void *)(v59 + 16);
  if (v23)
  {
LABEL_9:
    uint64_t v24 = *(void *)(v3 + v20[325]);
    uint64_t v25 = (unint64_t *)(v16 + 32);
    uint64_t v61 = v24;
    uint64_t v62 = MEMORY[0x1E4FBC860];
    while (1)
    {
      unint64_t v28 = *v25++;
      unint64_t v27 = v28;
      uint64_t v29 = *(void *)(v24 + 16);
      unint64_t v30 = (os_unfair_lock_s *)(*(void *)(v29 + 80) + 16);
      os_unfair_lock_lock(v30);
      swift_beginAccess();
      int v31 = *(unsigned __int8 *)(v29 + 32);
      if (v31 == 255)
      {
        uint64_t v34 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v29 + 40);
        if (!v34)
        {
          os_unfair_lock_unlock(v30);
          goto LABEL_11;
        }
        char v35 = swift_retain();
        v34(&v63, v35);
        sub_1DCD33E90((uint64_t)v34);
        uint64_t v36 = v63;
        char v37 = *(void **)(v29 + 24);
        *(void *)(v29 + 24) = v63;
        uint64_t v38 = *(unsigned char *)(v29 + 32);
        *(unsigned char *)(v29 + 32) = 0;
        swift_bridgeObjectRetain();
        sub_1DCD82558(v37, v38);
        os_unfair_lock_unlock(v30);
        uint64_t v33 = *(void *)(v36 + 16);
        swift_bridgeObjectRelease();
        if ((v27 & 0x8000000000000000) != 0) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v32 = *(void **)(v29 + 24);
        if (v31)
        {
          uint64_t v63 = *(void *)(v29 + 24);
          uint64_t v26 = v32;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
          swift_willThrowTypedImpl();
          os_unfair_lock_unlock(v30);
          sub_1DCD82558(v32, v31);
          goto LABEL_11;
        }
        swift_bridgeObjectRetain();
        os_unfair_lock_unlock(v30);
        uint64_t v33 = v32[2];
        sub_1DCD82558(v32, v31);
        if ((v27 & 0x8000000000000000) != 0) {
          goto LABEL_11;
        }
      }
      if ((uint64_t)v27 < v33)
      {
        char v39 = sub_1DCFE3010();
        if (v27 >= v39[2])
        {
          __break(1u);
          return;
        }
        uint64_t v40 = &v39[2 * v27];
        char v42 = (objc_class *)v40[4];
        unint64_t v41 = (objc_class *)v40[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v43 = objc_msgSend(v60, sel_objectAtIndexedSubscript_, v27);
        objc_msgSend(v43, sel_floatValue);
        char v45 = v44;

        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v46 = v62;
        }
        else {
          uint64_t v46 = sub_1DCE9E814(0, (int64_t)v62[2].isa + 1, 1, v62);
        }
        Class isa = (unint64_t)v46[2].isa;
        unint64_t v47 = (unint64_t)v46[3].isa;
        if (isa >= v47 >> 1) {
          uint64_t v46 = sub_1DCE9E814((void *)(v47 > 1), isa + 1, 1, v46);
        }
        v46[2].Class isa = (Class)(isa + 1);
        uint64_t v62 = v46;
        uint64_t v49 = &v46[3 * isa];
        v49[4].Class isa = v42;
        v49[5].Class isa = v41;
        LODWORD(v49[6].isa) = v45;
        uint64_t v24 = v61;
      }
LABEL_11:
      if (!--v23) {
        goto LABEL_33;
      }
    }
  }
LABEL_32:
  uint64_t v62 = MEMORY[0x1E4FBC860];
LABEL_33:

  swift_bridgeObjectRelease();
}

void sub_1DCD82020(unint64_t a1, void *a2, uint64_t a3)
{
  sub_1DCD82064(*(void *)(v3 + OBJC_IVAR____TtC18VisualIntelligence38ClassificationNatureworldPostProcessor_catMapper), a1, a2, a3);
}

void sub_1DCD8203C(unint64_t a1, void *a2, uint64_t a3)
{
  sub_1DCD82064(*(void *)(v3 + 16), a1, a2, a3);
}

void sub_1DCD82050(unint64_t a1, void *a2, uint64_t a3)
{
  sub_1DCD82064(*(void *)(v3 + 24), a1, a2, a3);
}

void sub_1DCD82064(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v38 - v12;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (*(void *)(a4 + 16) <= a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v14 = a4 + 32;
  id v15 = sub_1DCEC589C(*(void *)(a4 + 32 + 8 * a2));
  uint64_t v17 = (uint64_t)v15;
  unint64_t v18 = v16;
  if (!v16) {
    return;
  }
  id v42 = a3;
  v44[0] = (uint64_t)v15;
  v44[1] = v16;
  sub_1DCD21A84();
  BOOL v19 = (void *)sub_1DD048AA8();
  if (v19[2] <= 1uLL) {
    goto LABEL_16;
  }
  char v39 = v13;
  uint64_t v40 = v8;
  uint64_t v41 = v7;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1DD0487B8();
  if ((v20 & 0x100000000) != 0)
  {
    sub_1DCDB40EC((uint64_t)v10);
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1DD048048();
    os_log_type_t v31 = sub_1DD048848();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v44[0] = v33;
      *(_DWORD *)uint64_t v32 = 136315138;
      swift_bridgeObjectRetain();
      double v43 = COERCE_DOUBLE(sub_1DCED7FA0(v17, v18, v44));
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v30, v31, "Can't parse min confidence: %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v33, -1, -1);
      MEMORY[0x1E01B07E0](v32, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v41);
LABEL_14:
    if (v19[2])
    {
      uint64_t v34 = v19[4];
      uint64_t v35 = v19[5];
      uint64_t v36 = v19[6];
      uint64_t v37 = v19[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      MEMORY[0x1E01AE180](v34, v35, v36, v37);
LABEL_16:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_22:
    __break(1u);
    return;
  }
  float v21 = *(float *)&v20;
  id v22 = objc_msgSend(v42, sel_objectAtIndexedSubscript_, *(void *)(v14 + 8 * a2));
  objc_msgSend(v22, sel_floatValue);
  float v24 = v23;

  if (v24 >= v21)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = (uint64_t)v39;
  sub_1DCDB40EC((uint64_t)v39);
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1DD048048();
  os_log_type_t v27 = sub_1DD048848();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    v44[0] = v29;
    *(_DWORD *)uint64_t v28 = 134218242;
    double v43 = v24;
    sub_1DD048A28();
    *(_WORD *)(v28 + 12) = 2080;
    swift_bridgeObjectRetain();
    double v43 = COERCE_DOUBLE(sub_1DCED7FA0(v17, v18, v44));
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DCCF9000, v26, v27, "Confidence %f too small, skipping %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v29, -1, -1);
    MEMORY[0x1E01B07E0](v28, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v25, v41);
}

void sub_1DCD82558(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_1DCD43344(a1, a2 & 1);
  }
}

uint64_t sub_1DCD82570()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EAB1CBF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAB1CBF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "visual_search_request_blob";
  *(void *)(v6 + 8) = 26;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "parse_flow_intermediate_results_blob";
  *(void *)(v10 + 8) = 36;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "nsfw_confidence";
  *((void *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  unint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *unint64_t v13 = 4;
  *(void *)uint64_t v14 = "device_info";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCD827A8()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          sub_1DD047D28();
          break;
        case 3:
          sub_1DD047D38();
          break;
        case 4:
          sub_1DD047DB8();
          break;
        default:
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCD828A8()
{
  uint64_t v2 = *(void *)v0;
  unint64_t v3 = *(void *)(v0 + 8);
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_1DD047F28();
      if (!v1)
      {
LABEL_8:
        uint64_t v5 = *(void *)(v0 + 16);
        unint64_t v6 = *(void *)(v0 + 24);
        switch(v6 >> 62)
        {
          case 1uLL:
            if ((int)v5 != v5 >> 32) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 2uLL:
            if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 3uLL:
            goto LABEL_15;
          default:
            if ((v6 & 0xFF000000000000) == 0) {
              goto LABEL_15;
            }
LABEL_14:
            uint64_t result = sub_1DD047F28();
            if (!v1)
            {
LABEL_15:
              if (*(float *)(v0 + 32) == 0.0 || (uint64_t result = sub_1DD047F38(), !v1))
              {
                unint64_t v7 = *(void *)(v0 + 48);
                uint64_t v8 = HIBYTE(v7) & 0xF;
                if ((v7 & 0x2000000000000000) == 0) {
                  uint64_t v8 = *(void *)(v0 + 40) & 0xFFFFFFFFFFFFLL;
                }
                if (!v8 || (uint64_t result = sub_1DD047F88(), !v1))
                {
                  type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals();
                  uint64_t result = sub_1DD047BD8();
                }
              }
            }
            break;
        }
      }
      return result;
  }
}

uint64_t sub_1DCD82A80@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_1DD050130;
  *(_OWORD *)(a1 + 16) = xmmword_1DD050130;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0xE000000000000000;
  return sub_1DD047BE8();
}

unint64_t sub_1DCD82AB8()
{
  return 0xD000000000000035;
}

uint64_t sub_1DCD82AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_1DD047BF8();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1DCD82B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1DD047BF8();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

void (*sub_1DCD82BB4())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t sub_1DCD82BD8()
{
  return sub_1DCD827A8();
}

uint64_t sub_1DCD82BF0()
{
  return sub_1DCD828A8();
}

uint64_t sub_1DCD82C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCD83820(&qword_1EAB02868, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCD82C84@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAB01C08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DD048008();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAB1CBF0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1DCD82D2C(uint64_t a1)
{
  uint64_t v2 = sub_1DCD83820(&qword_1EAB02850, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCD82D98()
{
  sub_1DCD83820(&qword_1EAB02850, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals);
  return sub_1DD047E68();
}

uint64_t sub_1DCD82E18()
{
  return sub_1DCD83820(&qword_1EAB02848, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals);
}

uint64_t type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals()
{
  uint64_t result = qword_1EAB02870;
  if (!qword_1EAB02870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCD82EAC()
{
  return sub_1DCD83820(&qword_1EAB02850, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals);
}

uint64_t sub_1DCD82EF4()
{
  return sub_1DCD83820(&qword_1EAB02858, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals);
}

uint64_t sub_1DCD82F3C()
{
  return sub_1DCD83820(&qword_1EAB02860, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals);
}

uint64_t sub_1DCD82F84@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  unint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1DCD33F64(a2, a3);
      unint64_t v10 = (char *)sub_1DD0462A8();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1DD0462C8();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1DD0462B8();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1DCD831E8);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1DCD21954(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1DD0462A8();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1DD0462C8();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1DD0462B8();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1DCD831F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1DCD82F84((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1DCD832D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1DD0462A8();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1DD0462C8();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1DD0462B8();
  sub_1DCD82F84(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1DCD83388(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1DCD835F0);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1DCD33F64(a3, a4);
                  sub_1DCD33F64(a1, a2);
                  char v17 = sub_1DCD832D0((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1DCD21954(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1DCD33F64(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1DCD832D0(v21, v22, v20, a3, a4);
                  sub_1DCD21954(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1DCD33F64(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1DCD33F64(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1DCD831F8(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1DCD21954(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1DCD83620(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if ((sub_1DCD83388(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) != 0
    && (sub_1DCD83388(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a2 + 16), *(void *)(a2 + 24)) & 1) != 0
    && *(float *)(a1 + 32) == *(float *)(a2 + 32))
  {
    if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48)
      || (char v11 = 0, (sub_1DD048FA8() & 1) != 0))
    {
      uint64_t v12 = type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals();
      uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v13(v10, a1 + *(int *)(v12 + 32), v4);
      v13(v7, a2 + *(int *)(v12 + 32), v4);
      sub_1DCD83820(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v11 = sub_1DD0483B8();
      uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
      v14(v7, v4);
      v14(v10, v4);
    }
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1DCD83820(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCD83868(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    unint64_t v8 = *(void *)(a2 + 8);
    sub_1DCD33F64(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    unint64_t v10 = *(void *)(a2 + 24);
    sub_1DCD33F64(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v11;
    uint64_t v12 = *(int *)(a3 + 32);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = a2 + v12;
    uint64_t v15 = sub_1DD047BF8();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1DCD83988(uint64_t a1, uint64_t a2)
{
  sub_1DCD21954(*(void *)a1, *(void *)(a1 + 8));
  sub_1DCD21954(*(void *)(a1 + 16), *(void *)(a1 + 24));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1DCD83A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_1DCD33F64(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  unint64_t v9 = *(void *)(a2 + 24);
  sub_1DCD33F64(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DD047BF8();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  return a1;
}

uint64_t sub_1DCD83AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_1DCD33F64(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  sub_1DCD21954(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  unint64_t v11 = *(void *)(a2 + 24);
  sub_1DCD33F64(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  unint64_t v13 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  sub_1DCD21954(v12, v13);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t sub_1DCD83BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1DCD83C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1DCD21954(v6, v7);
  uint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_1DCD21954(v8, v9);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1DCD83D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD83D20);
}

uint64_t sub_1DCD83D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCD83DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD83DE4);
}

uint64_t sub_1DCD83DE4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCD83E8C()
{
  uint64_t result = sub_1DD047BF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t VisualSearchResult.visualUnderstanding.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[9];
  long long v3 = v1[7];
  long long v24 = v1[8];
  long long v25 = v2;
  long long v4 = v1[9];
  long long v26 = v1[10];
  long long v5 = v1[5];
  long long v7 = v1[3];
  long long v20 = v1[4];
  long long v6 = v20;
  long long v21 = v5;
  long long v8 = v1[5];
  long long v9 = v1[7];
  long long v22 = v1[6];
  long long v10 = v22;
  long long v23 = v9;
  long long v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  long long v12 = v1[3];
  long long v14 = *v1;
  long long v13 = v1[1];
  long long v18 = v1[2];
  long long v15 = v18;
  long long v19 = v12;
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 160) = v1[10];
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 112) = v3;
  *(_OWORD *)a1 = v14;
  *(_OWORD *)(a1 + 16) = v13;
  uint64_t v27 = *((void *)v1 + 22);
  *(void *)(a1 + 176) = *((void *)v1 + 22);
  *(_OWORD *)(a1 + 32) = v15;
  *(_OWORD *)(a1 + 48) = v7;
  return sub_1DCD433F0((uint64_t)v17);
}

uint64_t VisualSearchResult.regionResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VisualSearchResult.userFeedbackPayload.getter()
{
  uint64_t v1 = *(void *)(v0 + 192);
  sub_1DCD8400C(v1, *(void *)(v0 + 200));
  return v1;
}

uint64_t sub_1DCD8400C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1DCD33F64(a1, a2);
  }
  return a1;
}

uint64_t sub_1DCD84020()
{
  uint64_t v42 = sub_1DD048068();
  uint64_t v41 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  long long v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v37 = (uint64_t)&v36 - v4;
  MEMORY[0x1F4188790](v5);
  uint64_t v38 = (char *)&v36 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028C8);
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DD0477D8();
  uint64_t v40 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v39 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
  MEMORY[0x1F4188790](v12 - 8);
  long long v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DD047488();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  long long v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for VisualSearchResultInternal(0);
  sub_1DCD2889C(v0 + *(int *)(v19 + 24), (uint64_t)v14, &qword_1EAB028D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1DCD2479C((uint64_t)v14, &qword_1EAB028D0);
    sub_1DCDB40EC((uint64_t)v2);
    long long v20 = sub_1DD048048();
    os_log_type_t v21 = sub_1DD048858();
    if (os_log_type_enabled(v20, v21))
    {
      long long v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v22 = 0;
      _os_log_impl(&dword_1DCCF9000, v20, v21, "VisualSearchResult.userFeedbackPayload(): userFeedbackSearchRequest was nil", v22, 2u);
      MEMORY[0x1E01B07E0](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v2, v42);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  sub_1DCD2889C(v0 + *(int *)(v19 + 28), (uint64_t)v9, &qword_1EAB028C8);
  uint64_t v23 = v40;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v9, 1, v10) == 1)
  {
    sub_1DCD2479C((uint64_t)v9, &qword_1EAB028C8);
    uint64_t v24 = v37;
    sub_1DCDB40EC(v37);
    long long v25 = sub_1DD048048();
    os_log_type_t v26 = sub_1DD048858();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl(&dword_1DCCF9000, v25, v26, "VisualSearchResult.userFeedbackPayload(): userFeedbackParseFlowIntermediateResults was nil", v27, 2u);
      MEMORY[0x1E01B07E0](v27, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v24, v42);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return 0;
  }
  uint64_t v28 = (uint64_t)v39;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v39, v9, v10);
  long long v29 = *(_OWORD *)(v0 + 144);
  v43[8] = *(_OWORD *)(v0 + 128);
  v43[9] = v29;
  v43[10] = *(_OWORD *)(v0 + 160);
  uint64_t v44 = *(void *)(v0 + 176);
  long long v30 = *(_OWORD *)(v0 + 80);
  v43[4] = *(_OWORD *)(v0 + 64);
  v43[5] = v30;
  long long v31 = *(_OWORD *)(v0 + 112);
  v43[6] = *(_OWORD *)(v0 + 96);
  v43[7] = v31;
  long long v32 = *(_OWORD *)(v0 + 16);
  v43[0] = *(_OWORD *)v0;
  v43[1] = v32;
  long long v33 = *(_OWORD *)(v0 + 48);
  v43[2] = *(_OWORD *)(v0 + 32);
  v43[3] = v33;
  uint64_t v34 = sub_1DCFD3CFC((uint64_t)v43, (uint64_t)v18, v28);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v28, v10);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return v34;
}

void RegionSearchResult.ResultItem.domain.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t RegionSearchResult.ResultItem.caption.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RegionSearchResult.ResultItem.ontology.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1DCD32D4C(v2, v3);
}

uint64_t RegionSearchResult.ResultItem.knowledge.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RegionSearchResult.ResultItem(0);
  return sub_1DCD2889C(v1 + *(int *)(v3 + 28), a1, &qword_1EAB02630);
}

uint64_t type metadata accessor for RegionSearchResult.ResultItem(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EAB02880);
}

float RegionSearchResult.ResultItem.confidence.getter()
{
  return *(float *)(v0 + *(int *)(type metadata accessor for RegionSearchResult.ResultItem(0) + 32));
}

__n128 RegionSearchResult.boundingBox.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

uint64_t RegionSearchResult.resultItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RegionSearchResult.resultSection.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RegionSearchResult.glyphName.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RegionSearchResult.isRecommendedForRendering.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_1DCD848B4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02898);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD884AC();
  sub_1DD049138();
  v11[0] = 0;
  sub_1DD048EB8();
  if (!v2)
  {
    v11[0] = 1;
    sub_1DD048E88();
    v11[0] = 2;
    sub_1DD048E88();
    sub_1DCD88500(v3 + 48, (uint64_t)v12);
    sub_1DCD88500((uint64_t)v12, (uint64_t)v11);
    v10[15] = 3;
    sub_1DCD88568();
    sub_1DD048EA8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t destroy for VisualSearchResult(void *a1)
{
  swift_bridgeObjectRelease();
  if (a1[1] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[19])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = a1[25];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = a1[24];
    return sub_1DCD21954(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for VisualSearchResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    long long v7 = v6[1];
    _OWORD *v4 = *v6;
    *(_OWORD *)(a1 + 24) = v7;
    long long v8 = v6[3];
    *(_OWORD *)(a1 + 40) = v6[2];
    *(_OWORD *)(a1 + 56) = v8;
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v9;
    uint64_t v11 = *(void *)(a2 + 32);
    uint64_t v12 = *(void *)(a2 + 40);
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    uint64_t v14 = *(void *)(a2 + 48);
    uint64_t v13 = *(void *)(a2 + 56);
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v14;
    uint64_t v15 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v13;
    *(void *)(a1 + 64) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v16 = *(void *)(a2 + 152);
  long long v17 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v17;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v18 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v18;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  if (v16)
  {
    uint64_t v19 = *(void *)(a2 + 160);
    uint64_t v20 = *(void *)(a2 + 168);
    *(void *)(a1 + 152) = v16;
    *(void *)(a1 + 160) = v19;
    *(void *)(a1 + 168) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
  }
  uint64_t v21 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v21;
  long long v22 = (uint64_t *)(a2 + 192);
  unint64_t v23 = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 192) = *(_OWORD *)v22;
  }
  else
  {
    uint64_t v24 = *v22;
    sub_1DCD33F64(*v22, v23);
    *(void *)(a1 + 192) = v24;
    *(void *)(a1 + 200) = v23;
  }
  return a1;
}

uint64_t assignWithCopy for VisualSearchResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v6 = (long long *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v5 == 1)
    {
      long long v7 = *v6;
      long long v8 = *(_OWORD *)(a2 + 24);
      long long v9 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v9;
      _OWORD *v4 = v7;
      *(_OWORD *)(a1 + 24) = v8;
    }
    else
    {
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v5 == 1)
  {
    sub_1DCD6C7FC(a1 + 8);
    long long v10 = *(_OWORD *)(a2 + 56);
    long long v12 = *v6;
    long long v11 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v10;
    _OWORD *v4 = v12;
    *(_OWORD *)(a1 + 24) = v11;
  }
  else
  {
    *(void *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  long long v13 = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v13;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = (_OWORD *)(a1 + 152);
  uint64_t v15 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  long long v17 = (_OWORD *)(a2 + 152);
  uint64_t v16 = *(void *)(a2 + 152);
  if (v15)
  {
    if (v16)
    {
      *(void *)(a1 + 152) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DCD85050(a1 + 152);
      uint64_t v18 = *(void *)(a2 + 168);
      *uint64_t v14 = *v17;
      *(void *)(a1 + 168) = v18;
    }
  }
  else if (v16)
  {
    *(void *)(a1 + 152) = v16;
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *v17;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *uint64_t v14 = v19;
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t *)(a2 + 192);
  unint64_t v21 = *(void *)(a2 + 200);
  if (*(void *)(a1 + 200) >> 60 != 15)
  {
    if (v21 >> 60 != 15)
    {
      uint64_t v23 = *v20;
      sub_1DCD33F64(*v20, v21);
      uint64_t v24 = *(void *)(a1 + 192);
      unint64_t v25 = *(void *)(a1 + 200);
      *(void *)(a1 + 192) = v23;
      *(void *)(a1 + 200) = v21;
      sub_1DCD21954(v24, v25);
      return a1;
    }
    sub_1DCD850A4(a1 + 192);
    goto LABEL_20;
  }
  if (v21 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)v20;
    return a1;
  }
  uint64_t v22 = *v20;
  sub_1DCD33F64(*v20, v21);
  *(void *)(a1 + 192) = v22;
  *(void *)(a1 + 200) = v21;
  return a1;
}

uint64_t sub_1DCD85050(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCD850A4(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t assignWithTake for VisualSearchResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  if (v4 == 1)
  {
    sub_1DCD6C7FC(a1 + 8);
LABEL_4:
    long long v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v5;
    long long v6 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v6;
    goto LABEL_6;
  }
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 152);
  uint64_t v10 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  if (v10)
  {
    if (v9)
    {
      *(void *)(a1 + 152) = v9;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1DCD85050(a1 + 152);
  }
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
LABEL_11:
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  long long v12 = (void *)(a2 + 192);
  unint64_t v13 = *(void *)(a1 + 200);
  if (v13 >> 60 != 15)
  {
    unint64_t v14 = *(void *)(a2 + 200);
    if (v14 >> 60 != 15)
    {
      uint64_t v15 = *(void *)(a1 + 192);
      *(void *)(a1 + 192) = *v12;
      *(void *)(a1 + 200) = v14;
      sub_1DCD21954(v15, v13);
      return a1;
    }
    sub_1DCD850A4(a1 + 192);
  }
  *(_OWORD *)(a1 + 192) = *(_OWORD *)v12;
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualSearchResult(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualSearchResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualSearchResult()
{
  return &type metadata for VisualSearchResult;
}

uint64_t destroy for RegionSearchResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RegionSearchResult(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RegionSearchResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for RegionSearchResult(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for RegionSearchResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RegionSearchResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RegionSearchResult()
{
  return &type metadata for RegionSearchResult;
}

void *initializeBufferWithCopyOfBuffer for RegionSearchResult.ResultItem(unsigned char *a1, void *a2, uint64_t a3)
{
  long long v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    void *v4 = *a2;
    long long v4 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    v4[1] = a2[1];
    void v4[2] = v7;
    uint64_t v8 = a2[4];
    swift_bridgeObjectRetain();
    if (v8)
    {
      v4[3] = a2[3];
      v4[4] = v8;
      uint64_t v9 = a2[6];
      v4[5] = a2[5];
      v4[6] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v11 = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(v4 + 3) = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(v4 + 5) = v11;
    }
    uint64_t v12 = *(int *)(v6 + 28);
    unint64_t v13 = (void *)((char *)v4 + v12);
    unint64_t v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = (int *)type metadata accessor for ObjectKnowledge();
    uint64_t v16 = *((void *)v15 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v71 = v16;
      uint64_t v72 = v6;
      uint64_t v18 = v14[1];
      *unint64_t v13 = *v14;
      v13[1] = v18;
      uint64_t v19 = v14[3];
      v13[2] = v14[2];
      v13[3] = v19;
      uint64_t v20 = v15[6];
      __dst = (char *)v13 + v20;
      char v68 = (char *)v14 + v20;
      uint64_t v21 = sub_1DD046478();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      uint64_t v24 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v69 = v23;
      uint64_t v66 = v22;
      if (v23(v68, 1, v24))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
        memcpy(__dst, v68, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v68, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v24);
      }
      uint64_t v26 = v24;
      *(_DWORD *)((char *)v13 + v15[7]) = *(_DWORD *)((char *)v14 + v15[7]);
      uint64_t v27 = v15[8];
      uint64_t v28 = (void *)((char *)v13 + v27);
      long long v29 = (void *)((char *)v14 + v27);
      uint64_t v30 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v30;
      uint64_t v31 = v15[9];
      long long v32 = (void *)((char *)v13 + v31);
      long long v33 = (void *)((char *)v14 + v31);
      uint64_t v34 = v33[1];
      *long long v32 = *v33;
      v32[1] = v34;
      uint64_t v35 = v15[10];
      uint64_t v36 = (char *)v13 + v35;
      uint64_t v37 = (char *)v14 + v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v69(v37, 1, v26))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v36, v37, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v36, 0, 1, v26);
      }
      *(void *)((char *)v13 + v15[11]) = *(void *)((char *)v14 + v15[11]);
      uint64_t v39 = v15[12];
      uint64_t v40 = (char *)v13 + v39;
      uint64_t v41 = (void *)((char *)v14 + v39);
      uint64_t v42 = *(void *)((char *)v14 + v39 + 8);
      swift_bridgeObjectRetain();
      if (v42)
      {
        *(void *)uint64_t v40 = *v41;
        *((void *)v40 + 1) = v42;
        uint64_t v43 = v41[3];
        *((void *)v40 + 2) = v41[2];
        *((void *)v40 + 3) = v43;
        uint64_t v44 = v41[5];
        *((void *)v40 + 4) = v41[4];
        *((void *)v40 + 5) = v44;
        uint64_t v70 = v41 + 6;
        unint64_t v45 = v41[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v45 >> 60 == 15)
        {
          *((_OWORD *)v40 + 3) = *(_OWORD *)v70;
        }
        else
        {
          uint64_t v48 = *v70;
          sub_1DCD33F64(*v70, v45);
          *((void *)v40 + 6) = v48;
          *((void *)v40 + 7) = v45;
        }
      }
      else
      {
        long long v46 = *((_OWORD *)v41 + 1);
        *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
        *((_OWORD *)v40 + 1) = v46;
        long long v47 = *((_OWORD *)v41 + 3);
        *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
        *((_OWORD *)v40 + 3) = v47;
      }
      uint64_t v49 = v15[13];
      uint64_t v50 = (char *)v13 + v49;
      uint64_t v51 = (char *)v14 + v49;
      *(void *)uint64_t v50 = *(void *)v51;
      v50[8] = v51[8];
      uint64_t v52 = v15[14];
      uint64_t v53 = (char *)v13 + v52;
      char v54 = (char *)v14 + v52;
      unint64_t v55 = *((void *)v54 + 1);
      if (v55 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
      }
      else
      {
        uint64_t v56 = *(void *)v54;
        sub_1DCD33F64(*(void *)v54, *((void *)v54 + 1));
        *(void *)uint64_t v53 = v56;
        *((void *)v53 + 1) = v55;
      }
      uint64_t v57 = v15[15];
      BOOL v58 = (char *)v13 + v57;
      uint64_t v59 = (char *)v14 + v57;
      *(void *)BOOL v58 = *(void *)v59;
      *((_WORD *)v58 + 4) = *((_WORD *)v59 + 4);
      uint64_t v60 = *((void *)v59 + 3);
      *((void *)v58 + 2) = *((void *)v59 + 2);
      *((void *)v58 + 3) = v60;
      uint64_t v61 = *((void *)v59 + 5);
      *((void *)v58 + 4) = *((void *)v59 + 4);
      *((void *)v58 + 5) = v61;
      v58[48] = v59[48];
      uint64_t v62 = *((void *)v59 + 8);
      *((void *)v58 + 7) = *((void *)v59 + 7);
      *((void *)v58 + 8) = v62;
      uint64_t v63 = *((void *)v59 + 10);
      *((void *)v58 + 9) = *((void *)v59 + 9);
      *((void *)v58 + 10) = v63;
      *((void *)v58 + 11) = *((void *)v59 + 11);
      *((_OWORD *)v58 + 6) = *((_OWORD *)v59 + 6);
      *((_DWORD *)v58 + 28) = *((_DWORD *)v59 + 28);
      *(_DWORD *)((char *)v13 + v15[16]) = *(_DWORD *)((char *)v14 + v15[16]);
      uint64_t v64 = *(void (**)(void *, void, uint64_t, int *))(v71 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v64(v13, 0, 1, v15);
      uint64_t v6 = v72;
    }
    *(_DWORD *)((char *)v4 + *(int *)(v6 + 32)) = *(_DWORD *)((char *)a2 + *(int *)(v6 + 32));
  }
  return v4;
}

uint64_t destroy for RegionSearchResult.ResultItem(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  int v5 = (int *)type metadata accessor for ObjectKnowledge();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + v5[6];
    uint64_t v8 = sub_1DD046478();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v4 + v5[10];
    if (!v10(v11, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = (void *)(v4 + v5[12]);
    if (v12[1])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v13 = v12[7];
      if (v13 >> 60 != 15) {
        sub_1DCD21954(v12[6], v13);
      }
    }
    unint64_t v14 = (uint64_t *)(v4 + v5[14]);
    unint64_t v15 = v14[1];
    if (v15 >> 60 != 15) {
      sub_1DCD21954(*v14, v15);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for RegionSearchResult.ResultItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v7;
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v9;
  }
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  unint64_t v13 = (int *)type metadata accessor for ObjectKnowledge();
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v69 = v14;
    uint64_t v70 = a3;
    uint64_t v16 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v16;
    uint64_t v17 = v11;
    uint64_t v18 = v12[3];
    _OWORD v17[2] = v12[2];
    v17[3] = v18;
    uint64_t v19 = v13[6];
    uint64_t v66 = v17;
    __dst = (char *)v17 + v19;
    uint64_t v67 = (char *)v12 + v19;
    uint64_t v20 = sub_1DD046478();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v64 = v21;
    if (v22(v67, 1, v20))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
      memcpy(__dst, v67, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v67, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    uint64_t v24 = v20;
    *(_DWORD *)((char *)v66 + v13[7]) = *(_DWORD *)((char *)v12 + v13[7]);
    uint64_t v25 = v13[8];
    uint64_t v26 = (void *)((char *)v66 + v25);
    uint64_t v27 = (void *)((char *)v12 + v25);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = v13[9];
    uint64_t v30 = (void *)((char *)v66 + v29);
    uint64_t v31 = (void *)((char *)v12 + v29);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = v13[10];
    uint64_t v34 = (char *)v66 + v33;
    uint64_t v35 = (char *)v12 + v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22(v35, 1, v24))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v34, v35, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v34, 0, 1, v24);
    }
    *(void *)((char *)v66 + v13[11]) = *(void *)((char *)v12 + v13[11]);
    uint64_t v37 = v13[12];
    uint64_t v38 = (uint64_t)v66 + v37;
    uint64_t v39 = (void *)((char *)v12 + v37);
    uint64_t v40 = *(void *)((char *)v12 + v37 + 8);
    swift_bridgeObjectRetain();
    if (v40)
    {
      *(void *)uint64_t v38 = *v39;
      *(void *)(v38 + 8) = v40;
      uint64_t v41 = v39[3];
      *(void *)(v38 + 16) = v39[2];
      *(void *)(v38 + 24) = v41;
      uint64_t v42 = v39[5];
      *(void *)(v38 + 32) = v39[4];
      *(void *)(v38 + 40) = v42;
      char v68 = v39 + 6;
      unint64_t v43 = v39[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43 >> 60 == 15)
      {
        *(_OWORD *)(v38 + 48) = *(_OWORD *)v68;
      }
      else
      {
        uint64_t v46 = *v68;
        sub_1DCD33F64(*v68, v43);
        *(void *)(v38 + 48) = v46;
        *(void *)(v38 + 56) = v43;
      }
    }
    else
    {
      long long v44 = *((_OWORD *)v39 + 1);
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
      *(_OWORD *)(v38 + 16) = v44;
      long long v45 = *((_OWORD *)v39 + 3);
      *(_OWORD *)(v38 + 32) = *((_OWORD *)v39 + 2);
      *(_OWORD *)(v38 + 48) = v45;
    }
    uint64_t v47 = v13[13];
    uint64_t v48 = (uint64_t)v66 + v47;
    uint64_t v49 = (char *)v12 + v47;
    *(void *)uint64_t v48 = *(void *)v49;
    *(unsigned char *)(v48 + 8) = v49[8];
    uint64_t v50 = v13[14];
    uint64_t v51 = (uint64_t)v66 + v50;
    uint64_t v52 = (char *)v12 + v50;
    unint64_t v53 = *((void *)v52 + 1);
    if (v53 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
    }
    else
    {
      uint64_t v54 = *(void *)v52;
      sub_1DCD33F64(*(void *)v52, *((void *)v52 + 1));
      *(void *)uint64_t v51 = v54;
      *(void *)(v51 + 8) = v53;
    }
    uint64_t v55 = v13[15];
    uint64_t v56 = (uint64_t)v66 + v55;
    uint64_t v57 = (char *)v12 + v55;
    *(void *)uint64_t v56 = *(void *)v57;
    *(_WORD *)(v56 + 8) = *((_WORD *)v57 + 4);
    uint64_t v58 = *((void *)v57 + 3);
    *(void *)(v56 + 16) = *((void *)v57 + 2);
    *(void *)(v56 + 24) = v58;
    uint64_t v59 = *((void *)v57 + 5);
    *(void *)(v56 + 32) = *((void *)v57 + 4);
    *(void *)(v56 + 40) = v59;
    *(unsigned char *)(v56 + 48) = v57[48];
    uint64_t v60 = *((void *)v57 + 8);
    *(void *)(v56 + 56) = *((void *)v57 + 7);
    *(void *)(v56 + 64) = v60;
    uint64_t v61 = *((void *)v57 + 10);
    *(void *)(v56 + 72) = *((void *)v57 + 9);
    *(void *)(v56 + 80) = v61;
    *(void *)(v56 + 88) = *((void *)v57 + 11);
    *(_OWORD *)(v56 + 96) = *((_OWORD *)v57 + 6);
    *(_DWORD *)(v56 + 112) = *((_DWORD *)v57 + 28);
    *(_DWORD *)((char *)v66 + v13[16]) = *(_DWORD *)((char *)v12 + v13[16]);
    uint64_t v62 = *(void (**)(void *, void, uint64_t, int *))(v69 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62(v66, 0, 1, v13);
    a3 = v70;
  }
  *(_DWORD *)(a1 + *(int *)(a3 + 32)) = *(_DWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t assignWithCopy for RegionSearchResult.ResultItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 24);
  uint64_t v7 = (_OWORD *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v8)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DCD86FB0(a1 + 24);
      long long v9 = *(_OWORD *)(a2 + 40);
      _OWORD *v6 = *v7;
      *(_OWORD *)(a1 + 40) = v9;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 40);
    _OWORD *v6 = *v7;
    *(_OWORD *)(a1 + 40) = v10;
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  unint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for ObjectKnowledge();
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, int *))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_1DCD87034((uint64_t)v12);
      goto LABEL_14;
    }
    uint64_t v120 = a3;
    *uint64_t v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v12[2] = v13[2];
    void v12[3] = v13[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = v14[6];
    uint64_t v27 = (char *)v12 + v26;
    uint64_t v28 = (char *)v13 + v26;
    uint64_t v29 = sub_1DD046478();
    uint64_t v117 = *(void *)(v29 - 8);
    uint64_t v30 = *(uint64_t (**)(void))(v117 + 48);
    __dsta = v27;
    LODWORD(v27) = ((uint64_t (*)(char *, uint64_t, uint64_t))v30)(v27, 1, v29);
    int v31 = ((uint64_t (*)(char *, uint64_t, uint64_t))v30)(v28, 1, v29);
    if (v27)
    {
      if (v31)
      {
        size_t v32 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0) - 8) + 64);
        uint64_t v33 = __dsta;
LABEL_33:
        memcpy(v33, v28, v32);
        goto LABEL_36;
      }
      (*(void (**)(void *, char *, uint64_t))(v117 + 16))(__dsta, v28, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(__dsta, 0, 1, v29);
    }
    else
    {
      if (v31)
      {
        (*(void (**)(void *, uint64_t))(v117 + 8))(__dsta, v29);
        size_t v32 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0) - 8) + 64);
        uint64_t v33 = __dsta;
        goto LABEL_33;
      }
      (*(void (**)(void *, char *, uint64_t))(v117 + 24))(__dsta, v28, v29);
    }
LABEL_36:
    *(_DWORD *)((char *)v12 + v14[7]) = *(_DWORD *)((char *)v13 + v14[7]);
    uint64_t v67 = v14[8];
    char v68 = (void *)((char *)v12 + v67);
    uint64_t v69 = (void *)((char *)v13 + v67);
    *char v68 = *v69;
    v68[1] = v69[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v70 = v14[9];
    uint64_t v71 = (void *)((char *)v12 + v70);
    uint64_t v72 = (void *)((char *)v13 + v70);
    *uint64_t v71 = *v72;
    v71[1] = v72[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v73 = v14[10];
    uint64_t v74 = (char *)v13 + v73;
    __dstb = (char *)v12 + v73;
    int v75 = v30();
    int v76 = ((uint64_t (*)(char *, uint64_t, uint64_t))v30)(v74, 1, v29);
    if (v75)
    {
      if (v76)
      {
        size_t v77 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0) - 8) + 64);
        uint64_t v78 = __dstb;
LABEL_41:
        memcpy(v78, v74, v77);
        goto LABEL_44;
      }
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))(__dstb, v74, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(__dstb, 0, 1, v29);
    }
    else
    {
      if (v76)
      {
        (*(void (**)(char *, uint64_t))(v117 + 8))(__dstb, v29);
        size_t v77 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0) - 8) + 64);
        uint64_t v78 = __dstb;
        goto LABEL_41;
      }
      (*(void (**)(char *, char *, uint64_t))(v117 + 24))(__dstb, v74, v29);
    }
LABEL_44:
    *(void *)((char *)v12 + v14[11]) = *(void *)((char *)v13 + v14[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v79 = v14[12];
    uint64_t v80 = (uint64_t)v12 + v79;
    uint64_t v81 = (char *)v13 + v79;
    uint64_t v82 = *(void *)((char *)v12 + v79 + 8);
    uint64_t v83 = *(void *)((char *)v13 + v79 + 8);
    if (v82)
    {
      if (!v83)
      {
        sub_1DCD87004(v80);
        long long v87 = *((_OWORD *)v81 + 3);
        long long v89 = *(_OWORD *)v81;
        long long v88 = *((_OWORD *)v81 + 1);
        *(_OWORD *)(v80 + 32) = *((_OWORD *)v81 + 2);
        *(_OWORD *)(v80 + 48) = v87;
        *(_OWORD *)uint64_t v80 = v89;
        *(_OWORD *)(v80 + 16) = v88;
        goto LABEL_60;
      }
      *(void *)uint64_t v80 = *(void *)v81;
      *(void *)(v80 + 8) = *((void *)v81 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v80 + 16) = *((void *)v81 + 2);
      *(void *)(v80 + 24) = *((void *)v81 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v80 + 32) = *((void *)v81 + 4);
      *(void *)(v80 + 40) = *((void *)v81 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v84 = (uint64_t *)(v81 + 48);
      unint64_t v85 = *((void *)v81 + 7);
      if (*(void *)(v80 + 56) >> 60 == 15)
      {
        if (v85 >> 60 != 15)
        {
          uint64_t v86 = *v84;
LABEL_58:
          sub_1DCD33F64(v86, v85);
          *(void *)(v80 + 48) = v86;
          *(void *)(v80 + 56) = v85;
          goto LABEL_60;
        }
      }
      else
      {
        if (v85 >> 60 != 15)
        {
          uint64_t v93 = *v84;
          sub_1DCD33F64(*v84, *((void *)v81 + 7));
          uint64_t v94 = *(void *)(v80 + 48);
          unint64_t v95 = *(void *)(v80 + 56);
          *(void *)(v80 + 48) = v93;
          *(void *)(v80 + 56) = v85;
          sub_1DCD21954(v94, v95);
LABEL_60:
          uint64_t v96 = v14[13];
          uint64_t v97 = (char *)v12 + v96;
          unint64_t v98 = (char *)v13 + v96;
          uint64_t v99 = *(void *)v98;
          v97[8] = v98[8];
          *(void *)uint64_t v97 = v99;
          uint64_t v100 = v14[14];
          uint64_t v101 = (void *)((char *)v12 + v100);
          unint64_t v102 = (void *)((char *)v13 + v100);
          unint64_t v103 = *(void *)((char *)v13 + v100 + 8);
          if (*(void *)((char *)v12 + v100 + 8) >> 60 == 15)
          {
            if (v103 >> 60 != 15)
            {
              uint64_t v104 = *v102;
              sub_1DCD33F64(*v102, v103);
              uint64_t *v101 = v104;
              v101[1] = v103;
LABEL_67:
              a3 = v120;
              uint64_t v108 = v14[15];
              os_log_type_t v109 = (char *)v12 + v108;
              uint64_t v110 = (char *)v13 + v108;
              *(void *)os_log_type_t v109 = *(void *)((char *)v13 + v108);
              *((_WORD *)v109 + 4) = *(_WORD *)((char *)v13 + v108 + 8);
              *((void *)v109 + 2) = *(void *)((char *)v13 + v108 + 16);
              *((void *)v109 + 3) = *(void *)((char *)v13 + v108 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *((void *)v109 + 4) = *((void *)v110 + 4);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *((void *)v109 + 5) = *((void *)v110 + 5);
              v109[48] = v110[48];
              *((void *)v109 + 7) = *((void *)v110 + 7);
              *((void *)v109 + 8) = *((void *)v110 + 8);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *((void *)v109 + 9) = *((void *)v110 + 9);
              *((void *)v109 + 10) = *((void *)v110 + 10);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *((void *)v109 + 11) = *((void *)v110 + 11);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *((void *)v109 + 12) = *((void *)v110 + 12);
              *((void *)v109 + 13) = *((void *)v110 + 13);
              *((_DWORD *)v109 + 28) = *((_DWORD *)v110 + 28);
              *(_DWORD *)((char *)v12 + v14[16]) = *(_DWORD *)((char *)v13 + v14[16]);
              goto LABEL_68;
            }
          }
          else
          {
            if (v103 >> 60 != 15)
            {
              uint64_t v105 = *v102;
              sub_1DCD33F64(*v102, v103);
              uint64_t v106 = *v101;
              unint64_t v107 = v101[1];
              uint64_t *v101 = v105;
              v101[1] = v103;
              sub_1DCD21954(v106, v107);
              goto LABEL_67;
            }
            sub_1DCD850A4((uint64_t)v101);
          }
          *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
          goto LABEL_67;
        }
        sub_1DCD850A4(v80 + 48);
      }
      *(_OWORD *)(v80 + 48) = *(_OWORD *)v84;
      goto LABEL_60;
    }
    if (!v83)
    {
      long long v90 = *(_OWORD *)v81;
      long long v91 = *((_OWORD *)v81 + 1);
      long long v92 = *((_OWORD *)v81 + 3);
      *(_OWORD *)(v80 + 32) = *((_OWORD *)v81 + 2);
      *(_OWORD *)(v80 + 48) = v92;
      *(_OWORD *)uint64_t v80 = v90;
      *(_OWORD *)(v80 + 16) = v91;
      goto LABEL_60;
    }
    *(void *)uint64_t v80 = *(void *)v81;
    *(void *)(v80 + 8) = *((void *)v81 + 1);
    *(void *)(v80 + 16) = *((void *)v81 + 2);
    *(void *)(v80 + 24) = *((void *)v81 + 3);
    *(void *)(v80 + 32) = *((void *)v81 + 4);
    *(void *)(v80 + 40) = *((void *)v81 + 5);
    uint64_t v118 = v81 + 48;
    unint64_t v85 = *((void *)v81 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v85 >> 60 == 15)
    {
      *(_OWORD *)(v80 + 48) = *v118;
      goto LABEL_60;
    }
    uint64_t v86 = *(void *)v118;
    goto LABEL_58;
  }
  if (v18)
  {
LABEL_14:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
    memcpy(v12, v13, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_68;
  }
  uint64_t v112 = v15;
  uint64_t v119 = a3;
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  void v12[3] = v13[3];
  uint64_t v19 = v14[6];
  __dst = (char *)v12 + v19;
  __src = v14;
  uint64_t v20 = (char *)v13 + v19;
  uint64_t v21 = sub_1DD046478();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v20, 1, v21))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  *(_DWORD *)((char *)v12 + __src[7]) = *(_DWORD *)((char *)v13 + __src[7]);
  uint64_t v34 = __src[8];
  uint64_t v35 = (void *)((char *)v12 + v34);
  uint64_t v36 = (void *)((char *)v13 + v34);
  *uint64_t v35 = *v36;
  v35[1] = v36[1];
  uint64_t v37 = __src[9];
  uint64_t v38 = (void *)((char *)v12 + v37);
  uint64_t v39 = (void *)((char *)v13 + v37);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  uint64_t v40 = __src[10];
  uint64_t v41 = (char *)v12 + v40;
  uint64_t v42 = (char *)v13 + v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v42, 1, v21))
  {
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v41, v42, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v41, 0, 1, v21);
  }
  *(void *)((char *)v12 + __src[11]) = *(void *)((char *)v13 + __src[11]);
  uint64_t v44 = __src[12];
  long long v45 = (char *)v12 + v44;
  uint64_t v46 = (void *)((char *)v13 + v44);
  uint64_t v47 = *(void *)((char *)v13 + v44 + 8);
  swift_bridgeObjectRetain();
  if (v47)
  {
    *(void *)long long v45 = *v46;
    *((void *)v45 + 1) = v46[1];
    *((void *)v45 + 2) = v46[2];
    *((void *)v45 + 3) = v46[3];
    *((void *)v45 + 4) = v46[4];
    *((void *)v45 + 5) = v46[5];
    uint64_t v48 = v46 + 6;
    unint64_t v49 = v46[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v49 >> 60 == 15)
    {
      *((_OWORD *)v45 + 3) = *(_OWORD *)v48;
    }
    else
    {
      uint64_t v53 = *v48;
      sub_1DCD33F64(*v48, v49);
      *((void *)v45 + 6) = v53;
      *((void *)v45 + 7) = v49;
    }
  }
  else
  {
    long long v50 = *(_OWORD *)v46;
    long long v51 = *((_OWORD *)v46 + 1);
    long long v52 = *((_OWORD *)v46 + 3);
    *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
    *((_OWORD *)v45 + 3) = v52;
    *(_OWORD *)long long v45 = v50;
    *((_OWORD *)v45 + 1) = v51;
  }
  uint64_t v54 = __src[13];
  uint64_t v55 = (char *)v12 + v54;
  uint64_t v56 = (char *)v13 + v54;
  uint64_t v57 = *(void *)v56;
  v55[8] = v56[8];
  *(void *)uint64_t v55 = v57;
  uint64_t v58 = __src[14];
  uint64_t v59 = (char *)v12 + v58;
  uint64_t v60 = (char *)v13 + v58;
  unint64_t v61 = *((void *)v60 + 1);
  if (v61 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
  }
  else
  {
    uint64_t v62 = *(void *)v60;
    sub_1DCD33F64(*(void *)v60, *((void *)v60 + 1));
    *(void *)uint64_t v59 = v62;
    *((void *)v59 + 1) = v61;
  }
  uint64_t v63 = __src[15];
  uint64_t v64 = (char *)v12 + v63;
  char v65 = (char *)v13 + v63;
  *(void *)uint64_t v64 = *(void *)v65;
  *((_WORD *)v64 + 4) = *((_WORD *)v65 + 4);
  *((void *)v64 + 2) = *((void *)v65 + 2);
  *((void *)v64 + 3) = *((void *)v65 + 3);
  *((void *)v64 + 4) = *((void *)v65 + 4);
  *((void *)v64 + 5) = *((void *)v65 + 5);
  v64[48] = v65[48];
  *((void *)v64 + 7) = *((void *)v65 + 7);
  *((void *)v64 + 8) = *((void *)v65 + 8);
  *((void *)v64 + 9) = *((void *)v65 + 9);
  *((void *)v64 + 10) = *((void *)v65 + 10);
  *((void *)v64 + 11) = *((void *)v65 + 11);
  *((void *)v64 + 12) = *((void *)v65 + 12);
  *((void *)v64 + 13) = *((void *)v65 + 13);
  *((_DWORD *)v64 + 28) = *((_DWORD *)v65 + 28);
  *(_DWORD *)((char *)v12 + __src[16]) = *(_DWORD *)((char *)v13 + __src[16]);
  uint64_t v66 = *(void (**)(void *, void, uint64_t, int *))(v112 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v66(v12, 0, 1, __src);
  a3 = v119;
LABEL_68:
  *(_DWORD *)(a1 + *(int *)(a3 + 32)) = *(_DWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_1DCD86FB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCD87004(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCD87034(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ObjectKnowledge();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for RegionSearchResult.ResultItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  long long v9 = (int *)type metadata accessor for ObjectKnowledge();
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v40 = v10;
    uint64_t v41 = v3;
    long long v12 = v8[1];
    _OWORD *v7 = *v8;
    v7[1] = v12;
    uint64_t v13 = v9[6];
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)v8 + v13;
    uint64_t v16 = sub_1DD046478();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v39(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    *(_DWORD *)((char *)v7 + v9[7]) = *(_DWORD *)((char *)v8 + v9[7]);
    *(_OWORD *)((char *)v7 + v9[8]) = *(_OWORD *)((char *)v8 + v9[8]);
    *(_OWORD *)((char *)v7 + v9[9]) = *(_OWORD *)((char *)v8 + v9[9]);
    uint64_t v19 = v9[10];
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)v8 + v19;
    if (v39((char *)v8 + v19, 1, v16))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v21, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
    }
    uint64_t v3 = v41;
    *(void *)((char *)v7 + v9[11]) = *(void *)((char *)v8 + v9[11]);
    uint64_t v23 = v9[12];
    uint64_t v24 = (_OWORD *)((char *)v7 + v23);
    uint64_t v25 = (_OWORD *)((char *)v8 + v23);
    long long v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    long long v27 = v25[3];
    void v24[2] = v25[2];
    void v24[3] = v27;
    uint64_t v28 = v9[13];
    uint64_t v29 = (char *)v7 + v28;
    uint64_t v30 = (char *)v8 + v28;
    *(void *)uint64_t v29 = *(void *)v30;
    _OWORD v29[8] = v30[8];
    *(_OWORD *)((char *)v7 + v9[14]) = *(_OWORD *)((char *)v8 + v9[14]);
    uint64_t v31 = v9[15];
    size_t v32 = (char *)v7 + v31;
    uint64_t v33 = (char *)v8 + v31;
    long long v34 = *((_OWORD *)v33 + 1);
    *(_OWORD *)size_t v32 = *(_OWORD *)v33;
    *((_OWORD *)v32 + 1) = v34;
    long long v35 = *((_OWORD *)v33 + 3);
    *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
    *((_OWORD *)v32 + 3) = v35;
    *((_DWORD *)v32 + 28) = *((_DWORD *)v33 + 28);
    long long v36 = *((_OWORD *)v33 + 6);
    long long v37 = *((_OWORD *)v33 + 4);
    *((_OWORD *)v32 + 5) = *((_OWORD *)v33 + 5);
    *((_OWORD *)v32 + 6) = v36;
    *((_OWORD *)v32 + 4) = v37;
    *(_DWORD *)((char *)v7 + v9[16]) = *(_DWORD *)((char *)v8 + v9[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v40 + 56))(v7, 0, 1, v9);
  }
  *(_DWORD *)(a1 + *(int *)(v3 + 32)) = *(_DWORD *)(a2 + *(int *)(v3 + 32));
  return a1;
}

uint64_t assignWithTake for RegionSearchResult.ResultItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    uint64_t v7 = *(void *)(a2 + 32);
    if (v7)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DCD86FB0(a1 + 24);
  }
  long long v9 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v9;
LABEL_6:
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)(a1 + v10);
  long long v12 = (void *)(a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for ObjectKnowledge();
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_1DCD87034((uint64_t)v11);
      goto LABEL_12;
    }
    uint64_t v105 = a3;
    uint64_t v26 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v26;
    swift_bridgeObjectRelease();
    uint64_t v27 = v12[3];
    void v11[2] = v12[2];
    v11[3] = v27;
    swift_bridgeObjectRelease();
    uint64_t v28 = v13[6];
    uint64_t v29 = (char *)v11 + v28;
    uint64_t v30 = (char *)v12 + v28;
    uint64_t v31 = sub_1DD046478();
    uint64_t v103 = *(void *)(v31 - 8);
    size_t v32 = *(uint64_t (**)(void))(v103 + 48);
    uint64_t v99 = v29;
    LODWORD(v29) = ((uint64_t (*)(char *, uint64_t, uint64_t))v32)(v29, 1, v31);
    int v33 = ((uint64_t (*)(char *, uint64_t, uint64_t))v32)(v30, 1, v31);
    if (v29)
    {
      if (v33)
      {
        size_t v34 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0) - 8) + 64);
        long long v35 = v99;
LABEL_23:
        memcpy(v35, v30, v34);
        goto LABEL_26;
      }
      (*(void (**)(void *, char *, uint64_t))(v103 + 32))(v99, v30, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v103 + 56))(v99, 0, 1, v31);
    }
    else
    {
      if (v33)
      {
        (*(void (**)(void *, uint64_t))(v103 + 8))(v99, v31);
        size_t v34 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0) - 8) + 64);
        long long v35 = v99;
        goto LABEL_23;
      }
      (*(void (**)(void *, char *, uint64_t))(v103 + 40))(v99, v30, v31);
    }
LABEL_26:
    *(_DWORD *)((char *)v11 + v13[7]) = *(_DWORD *)((char *)v12 + v13[7]);
    uint64_t v55 = v13[8];
    uint64_t v56 = (void *)((char *)v11 + v55);
    uint64_t v57 = (void *)((char *)v12 + v55);
    uint64_t v59 = *v57;
    uint64_t v58 = v57[1];
    *uint64_t v56 = v59;
    v56[1] = v58;
    swift_bridgeObjectRelease();
    uint64_t v60 = v13[9];
    unint64_t v61 = (void *)((char *)v11 + v60);
    uint64_t v62 = (void *)((char *)v12 + v60);
    uint64_t v64 = *v62;
    uint64_t v63 = v62[1];
    *unint64_t v61 = v64;
    v61[1] = v63;
    swift_bridgeObjectRelease();
    uint64_t v65 = v13[10];
    uint64_t v66 = (char *)v12 + v65;
    uint64_t v100 = (char *)v11 + v65;
    int v67 = v32();
    int v68 = ((uint64_t (*)(char *, uint64_t, uint64_t))v32)(v66, 1, v31);
    if (v67)
    {
      if (v68)
      {
        size_t v69 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0) - 8) + 64);
        uint64_t v70 = v100;
LABEL_31:
        memcpy(v70, v66, v69);
        goto LABEL_34;
      }
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v100, v66, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v31);
    }
    else
    {
      if (v68)
      {
        (*(void (**)(char *, uint64_t))(v103 + 8))(v100, v31);
        size_t v69 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0) - 8) + 64);
        uint64_t v70 = v100;
        goto LABEL_31;
      }
      (*(void (**)(char *, char *, uint64_t))(v103 + 40))(v100, v66, v31);
    }
LABEL_34:
    a3 = v105;
    *(void *)((char *)v11 + v13[11]) = *(void *)((char *)v12 + v13[11]);
    swift_bridgeObjectRelease();
    uint64_t v71 = v13[12];
    uint64_t v72 = (uint64_t)v11 + v71;
    uint64_t v73 = (char *)v12 + v71;
    if (*(void *)((char *)v11 + v71 + 8))
    {
      uint64_t v74 = *((void *)v73 + 1);
      if (v74)
      {
        *(void *)uint64_t v72 = *(void *)v73;
        *(void *)(v72 + 8) = v74;
        swift_bridgeObjectRelease();
        uint64_t v75 = *((void *)v73 + 3);
        *(void *)(v72 + 16) = *((void *)v73 + 2);
        *(void *)(v72 + 24) = v75;
        swift_bridgeObjectRelease();
        uint64_t v76 = *((void *)v73 + 5);
        *(void *)(v72 + 32) = *((void *)v73 + 4);
        *(void *)(v72 + 40) = v76;
        swift_bridgeObjectRelease();
        size_t v77 = v73 + 48;
        unint64_t v78 = *(void *)(v72 + 56);
        if (v78 >> 60 == 15)
        {
LABEL_39:
          *(_OWORD *)(v72 + 48) = *v77;
          goto LABEL_42;
        }
        unint64_t v79 = *((void *)v73 + 7);
        if (v79 >> 60 == 15)
        {
          sub_1DCD850A4(v72 + 48);
          goto LABEL_39;
        }
        uint64_t v98 = *(void *)(v72 + 48);
        *(void *)(v72 + 48) = *(void *)v77;
        *(void *)(v72 + 56) = v79;
        sub_1DCD21954(v98, v78);
LABEL_42:
        uint64_t v82 = v13[13];
        uint64_t v83 = (char *)v11 + v82;
        uint64_t v84 = (char *)v12 + v82;
        *(void *)uint64_t v83 = *(void *)v84;
        v83[8] = v84[8];
        uint64_t v85 = v13[14];
        uint64_t v86 = (void *)((char *)v11 + v85);
        long long v87 = (void *)((char *)v12 + v85);
        unint64_t v88 = *(void *)((char *)v11 + v85 + 8);
        if (v88 >> 60 != 15)
        {
          unint64_t v89 = v87[1];
          if (v89 >> 60 != 15)
          {
            uint64_t v90 = *v86;
            *uint64_t v86 = *v87;
            v86[1] = v89;
            sub_1DCD21954(v90, v88);
            goto LABEL_47;
          }
          sub_1DCD850A4((uint64_t)v86);
        }
        *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
LABEL_47:
        uint64_t v91 = v13[15];
        long long v92 = (char *)v11 + v91;
        uint64_t v93 = (char *)v12 + v91;
        *(void *)long long v92 = *(void *)((char *)v12 + v91);
        *((_WORD *)v92 + 4) = *(_WORD *)((char *)v12 + v91 + 8);
        uint64_t v94 = *(void *)((char *)v12 + v91 + 24);
        *((void *)v92 + 2) = *(void *)((char *)v12 + v91 + 16);
        *((void *)v92 + 3) = v94;
        swift_bridgeObjectRelease();
        *((void *)v92 + 4) = *((void *)v93 + 4);
        swift_bridgeObjectRelease();
        *((void *)v92 + 5) = *((void *)v93 + 5);
        v92[48] = v93[48];
        uint64_t v95 = *((void *)v93 + 8);
        *((void *)v92 + 7) = *((void *)v93 + 7);
        *((void *)v92 + 8) = v95;
        swift_bridgeObjectRelease();
        uint64_t v96 = *((void *)v93 + 10);
        *((void *)v92 + 9) = *((void *)v93 + 9);
        *((void *)v92 + 10) = v96;
        swift_bridgeObjectRelease();
        *((void *)v92 + 11) = *((void *)v93 + 11);
        swift_bridgeObjectRelease();
        *((_OWORD *)v92 + 6) = *((_OWORD *)v93 + 6);
        *((_DWORD *)v92 + 28) = *((_DWORD *)v93 + 28);
        *(_DWORD *)((char *)v11 + v13[16]) = *(_DWORD *)((char *)v12 + v13[16]);
        goto LABEL_48;
      }
      sub_1DCD87004(v72);
    }
    long long v80 = *((_OWORD *)v73 + 1);
    *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
    *(_OWORD *)(v72 + 16) = v80;
    long long v81 = *((_OWORD *)v73 + 3);
    *(_OWORD *)(v72 + 32) = *((_OWORD *)v73 + 2);
    *(_OWORD *)(v72 + 48) = v81;
    goto LABEL_42;
  }
  if (v17)
  {
LABEL_12:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
    memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_48;
  }
  uint64_t v102 = v14;
  uint64_t v104 = a3;
  long long v18 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v18;
  uint64_t v19 = v13[6];
  uint64_t v20 = (char *)v11 + v19;
  uint64_t v21 = (char *)v12 + v19;
  uint64_t v22 = sub_1DD046478();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v101(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  *(_DWORD *)((char *)v11 + v13[7]) = *(_DWORD *)((char *)v12 + v13[7]);
  *(_OWORD *)((char *)v11 + v13[8]) = *(_OWORD *)((char *)v12 + v13[8]);
  *(_OWORD *)((char *)v11 + v13[9]) = *(_OWORD *)((char *)v12 + v13[9]);
  uint64_t v36 = v13[10];
  long long v37 = (char *)v11 + v36;
  uint64_t v38 = (char *)v12 + v36;
  if (v101((char *)v12 + v36, 1, v22))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v37, v38, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v37, 0, 1, v22);
  }
  a3 = v104;
  *(void *)((char *)v11 + v13[11]) = *(void *)((char *)v12 + v13[11]);
  uint64_t v40 = v13[12];
  uint64_t v41 = (_OWORD *)((char *)v11 + v40);
  uint64_t v42 = (_OWORD *)((char *)v12 + v40);
  long long v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  long long v44 = v42[3];
  uint64_t v41[2] = v42[2];
  v41[3] = v44;
  uint64_t v45 = v13[13];
  uint64_t v46 = (char *)v11 + v45;
  uint64_t v47 = (char *)v12 + v45;
  *(void *)uint64_t v46 = *(void *)v47;
  _OWORD v46[8] = v47[8];
  *(_OWORD *)((char *)v11 + v13[14]) = *(_OWORD *)((char *)v12 + v13[14]);
  uint64_t v48 = v13[15];
  unint64_t v49 = (char *)v11 + v48;
  long long v50 = (char *)v12 + v48;
  long long v51 = *((_OWORD *)v50 + 1);
  *(_OWORD *)unint64_t v49 = *(_OWORD *)v50;
  *((_OWORD *)v49 + 1) = v51;
  long long v52 = *((_OWORD *)v50 + 3);
  *((_OWORD *)v49 + 2) = *((_OWORD *)v50 + 2);
  *((_OWORD *)v49 + 3) = v52;
  *((_DWORD *)v49 + 28) = *((_DWORD *)v50 + 28);
  long long v53 = *((_OWORD *)v50 + 6);
  long long v54 = *((_OWORD *)v50 + 4);
  *((_OWORD *)v49 + 5) = *((_OWORD *)v50 + 5);
  *((_OWORD *)v49 + 6) = v53;
  *((_OWORD *)v49 + 4) = v54;
  *(_DWORD *)((char *)v11 + v13[16]) = *(_DWORD *)((char *)v12 + v13[16]);
  (*(void (**)(void *, void, uint64_t, int *))(v102 + 56))(v11, 0, 1, v13);
LABEL_48:
  *(_DWORD *)(a1 + *(int *)(a3 + 32)) = *(_DWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t getEnumTagSinglePayload for RegionSearchResult.ResultItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD87CFC);
}

uint64_t sub_1DCD87CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RegionSearchResult.ResultItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD87DC4);
}

uint64_t sub_1DCD87DC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1DCD87E70()
{
  sub_1DCD8A548(319, &qword_1EAB02890, (void (*)(uint64_t))type metadata accessor for ObjectKnowledge);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for ThirdPartyObject(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 56);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    return sub_1DCD21954(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for ThirdPartyObject(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = a2 + 6;
  unint64_t v7 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_1DCD33F64(*v6, v7);
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = v7;
  }
  return a1;
}

void *assignWithCopy for ThirdPartyObject(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 6;
  unint64_t v5 = a2[7];
  if (a1[7] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_1DCD33F64(*v4, v5);
      uint64_t v8 = a1[6];
      unint64_t v9 = a1[7];
      a1[6] = v7;
      a1[7] = v5;
      sub_1DCD21954(v8, v9);
      return a1;
    }
    sub_1DCD850A4((uint64_t)(a1 + 6));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 3) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_1DCD33F64(*v4, v5);
  a1[6] = v6;
  a1[7] = v5;
  return a1;
}

void *assignWithTake for ThirdPartyObject(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2 + 6;
  unint64_t v8 = a1[7];
  if (v8 >> 60 != 15)
  {
    unint64_t v9 = a2[7];
    if (v9 >> 60 != 15)
    {
      uint64_t v10 = a1[6];
      a1[6] = *v7;
      a1[7] = v9;
      sub_1DCD21954(v10, v8);
      return a1;
    }
    sub_1DCD850A4((uint64_t)(a1 + 6));
  }
  *((_OWORD *)a1 + 3) = *(_OWORD *)v7;
  return a1;
}

uint64_t _s8PropertyVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s8PropertyVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThirdPartyObject()
{
  return &type metadata for ThirdPartyObject;
}

unint64_t sub_1DCD882A4()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x4C52556567616D69;
      break;
    case 2:
      unint64_t result = 0x69616E626D756874;
      break;
    case 3:
      unint64_t result = 0x617461646174656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCD88340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCD8875C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCD88368(uint64_t a1)
{
  unint64_t v2 = sub_1DCD884AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCD883A4(uint64_t a1)
{
  unint64_t v2 = sub_1DCD884AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1DCD883E0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  uint64_t v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  v8[2] = a2[2];
  double v8[3] = v5;
  return sub_1DCD885BC(v7, v8);
}

double sub_1DCD8842C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1DCD8892C(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1DCD88470(void *a1)
{
  return sub_1DCD848B4(a1);
}

unint64_t sub_1DCD884AC()
{
  unint64_t result = qword_1EAB028A0;
  if (!qword_1EAB028A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB028A0);
  }
  return result;
}

uint64_t sub_1DCD88500(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DCD88568()
{
  unint64_t result = qword_1EAB028B0;
  if (!qword_1EAB028B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB028B0);
  }
  return result;
}

BOOL sub_1DCD885BC(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    char v5 = sub_1DD048FA8();
    BOOL result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[3];
  if (!v7)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = a1[2] == a2[2] && v7 == v8;
  if (v9 || (char v10 = sub_1DD048FA8(), result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    uint64_t v11 = a1[5];
    uint64_t v12 = a2[5];
    if (v11)
    {
      if (!v12) {
        return 0;
      }
      if (a1[4] != a2[4] || v11 != v12)
      {
        char v13 = sub_1DD048FA8();
        BOOL result = 0;
        if ((v13 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v12)
    {
      return 0;
    }
    uint64_t v15 = a1[6];
    unint64_t v14 = a1[7];
    uint64_t v17 = a2[6];
    unint64_t v16 = a2[7];
    if (v14 >> 60 == 15)
    {
      if (v16 >> 60 == 15) {
        return 1;
      }
      goto LABEL_26;
    }
    if (v16 >> 60 == 15)
    {
LABEL_26:
      sub_1DCD8400C(v15, v14);
      sub_1DCD8400C(v17, v16);
      sub_1DCD392D4(v15, v14);
      sub_1DCD392D4(v17, v16);
      return 0;
    }
    sub_1DCD8400C(v15, v14);
    sub_1DCD8400C(v17, v16);
    char v18 = sub_1DCD83388(v15, v14, v17, v16);
    sub_1DCD392D4(v17, v16);
    sub_1DCD392D4(v15, v14);
    return (v18 & 1) != 0;
  }
  return result;
}

uint64_t sub_1DCD8875C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001DD068C30 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C52556567616D69 && a2 == 0xE800000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69616E626D756874 && a2 == 0xEC0000004C52556CLL || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DCD8892C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCD884AC();
  sub_1DD049128();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v28) = 0;
  uint64_t v9 = sub_1DD048DC8();
  uint64_t v11 = v10;
  uint64_t v26 = v9;
  LOBYTE(v28) = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1DD048D78();
  uint64_t v27 = v13;
  uint64_t v24 = v12;
  uint64_t v25 = v11;
  LOBYTE(v28) = 2;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1DD048D78();
  char v30 = 3;
  uint64_t v15 = v14;
  sub_1DCD88CBC();
  uint64_t v23 = v15;
  swift_bridgeObjectRetain();
  sub_1DD048DB8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v28;
  unint64_t v17 = v29;
  uint64_t v18 = v25;
  swift_bridgeObjectRetain();
  uint64_t v19 = v27;
  swift_bridgeObjectRetain();
  uint64_t v20 = v23;
  swift_bridgeObjectRetain();
  sub_1DCD8400C(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1DCD392D4(v16, v17);
  *a2 = v26;
  a2[1] = v18;
  a2[2] = v24;
  a2[3] = v19;
  a2[4] = v22;
  a2[5] = v20;
  a2[6] = v16;
  a2[7] = v17;
  return result;
}

unint64_t sub_1DCD88CBC()
{
  unint64_t result = qword_1EAB028C0;
  if (!qword_1EAB028C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB028C0);
  }
  return result;
}

uint64_t type metadata accessor for VisualSearchResultInternal(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EAB028D8);
}

uint64_t sub_1DCD88D30(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v9 = a2 + 1;
    uint64_t v8 = a2[1];
    swift_bridgeObjectRetain();
    if (v8 == 1)
    {
      long long v10 = v9[1];
      *(_OWORD *)(a1 + 8) = *v9;
      *(_OWORD *)(a1 + 24) = v10;
      long long v11 = v9[3];
      *(_OWORD *)(a1 + 40) = v9[2];
      *(_OWORD *)(a1 + 56) = v11;
    }
    else
    {
      uint64_t v12 = a2[2];
      uint64_t v13 = a2[3];
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v12;
      uint64_t v14 = a2[4];
      uint64_t v15 = a2[5];
      *(void *)(a1 + 24) = v13;
      *(void *)(a1 + 32) = v14;
      uint64_t v17 = a2[6];
      uint64_t v16 = a2[7];
      *(void *)(a1 + 40) = v15;
      *(void *)(a1 + 48) = v17;
      uint64_t v18 = a2[8];
      *(void *)(a1 + 56) = v16;
      *(void *)(a1 + 64) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v19 = a2[19];
    long long v20 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 88) = v20;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    uint64_t v21 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v21;
    *(void *)(a1 + 144) = a2[18];
    swift_bridgeObjectRetain();
    if (v19)
    {
      uint64_t v22 = a2[20];
      uint64_t v23 = a2[21];
      *(void *)(a1 + 152) = v19;
      *(void *)(a1 + 160) = v22;
      *(void *)(a1 + 168) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
      *(void *)(a1 + 168) = a2[21];
    }
    uint64_t v24 = a2[23];
    *(void *)(a1 + 176) = a2[22];
    *(void *)(a1 + 184) = v24;
    uint64_t v39 = a3;
    uint64_t v25 = *(int *)(a3 + 24);
    uint64_t v26 = (void *)(a1 + v25);
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = sub_1DD047488();
    uint64_t v29 = *(void *)(v28 - 8);
    char v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
      memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v32 = *(int *)(v39 + 28);
    int v33 = (void *)(a1 + v32);
    size_t v34 = (char *)a2 + v32;
    uint64_t v35 = sub_1DD0477D8();
    uint64_t v36 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028C8);
      memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
  }
  return a1;
}

uint64_t sub_1DCD890AC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DD047488();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_1DD0477D8();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    long long v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_1DCD89290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v8 = (_OWORD *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    long long v9 = v8[1];
    _OWORD *v6 = *v8;
    *(_OWORD *)(a1 + 24) = v9;
    long long v10 = v8[3];
    *(_OWORD *)(a1 + 40) = v8[2];
    *(_OWORD *)(a1 + 56) = v10;
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 16);
    uint64_t v12 = *(void *)(a2 + 24);
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v11;
    uint64_t v13 = *(void *)(a2 + 32);
    uint64_t v14 = *(void *)(a2 + 40);
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v13;
    uint64_t v16 = *(void *)(a2 + 48);
    uint64_t v15 = *(void *)(a2 + 56);
    *(void *)(a1 + 40) = v14;
    *(void *)(a1 + 48) = v16;
    uint64_t v17 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v15;
    *(void *)(a1 + 64) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v18 = *(void *)(a2 + 152);
  long long v19 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v19;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v20;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  if (v18)
  {
    uint64_t v21 = *(void *)(a2 + 160);
    uint64_t v22 = *(void *)(a2 + 168);
    *(void *)(a1 + 152) = v18;
    *(void *)(a1 + 160) = v21;
    *(void *)(a1 + 168) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
  }
  uint64_t v23 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v23;
  uint64_t v38 = a3;
  uint64_t v24 = *(int *)(a3 + 24);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  uint64_t v27 = sub_1DD047488();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v27))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v31 = *(int *)(v38 + 28);
  uint64_t v32 = (void *)(a1 + v31);
  int v33 = (const void *)(a2 + v31);
  uint64_t v34 = sub_1DD0477D8();
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028C8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  return a1;
}

uint64_t sub_1DCD895C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v8 = (long long *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v7 == 1)
    {
      long long v9 = *v8;
      long long v10 = *(_OWORD *)(a2 + 24);
      long long v11 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v11;
      _OWORD *v6 = v9;
      *(_OWORD *)(a1 + 24) = v10;
    }
    else
    {
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_1DCD6C7FC(a1 + 8);
    long long v12 = *(_OWORD *)(a2 + 56);
    long long v14 = *v8;
    long long v13 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v12;
    _OWORD *v6 = v14;
    *(_OWORD *)(a1 + 24) = v13;
  }
  else
  {
    *(void *)(a1 + 8) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  long long v15 = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v15;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (_OWORD *)(a1 + 152);
  uint64_t v17 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  long long v19 = (_OWORD *)(a2 + 152);
  uint64_t v18 = *(void *)(a2 + 152);
  if (v17)
  {
    if (v18)
    {
      *(void *)(a1 + 152) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DCD85050(a1 + 152);
      uint64_t v20 = *(void *)(a2 + 168);
      *uint64_t v16 = *v19;
      *(void *)(a1 + 168) = v20;
    }
  }
  else if (v18)
  {
    *(void *)(a1 + 152) = v18;
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *v19;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *uint64_t v16 = v21;
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = sub_1DD047488();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v29)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
LABEL_20:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 24))(v23, v24, v25);
LABEL_21:
  uint64_t v31 = *(int *)(a3 + 28);
  uint64_t v32 = (void *)(a1 + v31);
  int v33 = (void *)(a2 + v31);
  uint64_t v34 = sub_1DD0477D8();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v35 + 24))(v32, v33, v34);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v35 + 8))(v32, v34);
    goto LABEL_26;
  }
  if (v38)
  {
LABEL_26:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028C8);
    memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v35 + 16))(v32, v33, v34);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  return a1;
}

uint64_t sub_1DCD89B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + 32);
  long long v11 = *(_OWORD *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  uint64_t v13 = *(int *)(a3 + 24);
  long long v14 = (void *)(a1 + v13);
  long long v15 = (const void *)(a2 + v13);
  *(_OWORD *)(a1 + 32) = v10;
  *(_OWORD *)(a1 + 48) = v11;
  uint64_t v16 = sub_1DD047488();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = (void *)(a1 + v19);
  long long v21 = (const void *)(a2 + v19);
  uint64_t v22 = sub_1DD0477D8();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028C8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

uint64_t sub_1DCD89D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  if (v6 == 1)
  {
    sub_1DCD6C7FC(a1 + 8);
LABEL_4:
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
    long long v8 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v8;
    goto LABEL_6;
  }
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 152);
  uint64_t v12 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  if (v12)
  {
    if (v11)
    {
      *(void *)(a1 + 152) = v11;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1DCD85050(a1 + 152);
  }
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
LABEL_11:
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 24);
  long long v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = sub_1DD047488();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_16:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_17:
  uint64_t v23 = *(int *)(a3 + 28);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = sub_1DD0477D8();
  uint64_t v27 = *(void *)(v26 - 8);
  int v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_22;
  }
  if (v30)
  {
LABEL_22:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028C8);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_1DCD8A1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD8A1B4);
}

uint64_t sub_1DCD8A1B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028C8);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DCD8A2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD8A2FC);
}

void *sub_1DCD8A2FC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028C8);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1DCD8A430()
{
  sub_1DCD8A548(319, (unint64_t *)&qword_1EAB028E8, MEMORY[0x1E4F89750]);
  if (v0 <= 0x3F)
  {
    sub_1DCD8A548(319, &qword_1EAB028F0, MEMORY[0x1E4F89A60]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1DCD8A548(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DD048A08();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ThirdPartyObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD8A668);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ThirdPartyObject.CodingKeys()
{
  return &type metadata for ThirdPartyObject.CodingKeys;
}

unint64_t sub_1DCD8A6A4()
{
  unint64_t result = qword_1EAB028F8;
  if (!qword_1EAB028F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB028F8);
  }
  return result;
}

unint64_t sub_1DCD8A6FC()
{
  unint64_t result = qword_1EAB02900;
  if (!qword_1EAB02900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02900);
  }
  return result;
}

unint64_t sub_1DCD8A754()
{
  unint64_t result = qword_1EAB02908;
  if (!qword_1EAB02908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02908);
  }
  return result;
}

uint64_t sub_1DCD8A7AC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    uint64_t v8 = a3[7];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    uint64_t v14 = (void *)(v7 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      int v30 = v12;
      uint64_t v19 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v19;
      *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
      uint64_t v20 = *(int *)(v16 + 28);
      int v21 = (char *)v14 + v20;
      uint64_t v22 = (char *)v15 + v20;
      swift_bridgeObjectRetain();
      uint64_t v12 = v30;
      swift_bridgeObjectRetain();
      v30((uint64_t)v21, (uint64_t)v22, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v23 = a3[9];
    uint64_t v24 = (_DWORD *)(v7 + v23);
    uint64_t v25 = (_DWORD *)((char *)a2 + v23);
    uint64_t v26 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B8);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      *uint64_t v24 = *v25;
      v12((uint64_t)v24 + *(int *)(v26 + 20), (uint64_t)v25 + *(int *)(v26 + 20), v11);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
  }
  return v7;
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE87040);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE87058);
}

uint64_t sub_1DCD8AAE4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12(v6 + *(int *)(v7 + 28), v5);
  }
  uint64_t v8 = a1 + a2[9];
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = v8 + *(int *)(v9 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

uint64_t sub_1DCD8AC74(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[8];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v28 = v10;
    uint64_t v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    uint64_t v18 = *(int *)(v14 + 28);
    uint64_t v19 = (char *)v12 + v18;
    uint64_t v20 = (char *)v13 + v18;
    swift_bridgeObjectRetain();
    uint64_t v10 = v28;
    swift_bridgeObjectRetain();
    v28((uint64_t)v19, (uint64_t)v20, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v21 = a3[9];
  uint64_t v22 = (_DWORD *)(a1 + v21);
  uint64_t v23 = (_DWORD *)(a2 + v21);
  uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B8);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    *uint64_t v22 = *v23;
    v10((uint64_t)v22 + *(int *)(v24 + 20), (uint64_t)v23 + *(int *)(v24 + 20), v9);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

uint64_t sub_1DCD8AF20(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  int v33 = *(void (**)(uint64_t, uint64_t))(v34 + 24);
  v33(v7, v8);
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      *(void *)(v11 + 8) = *(void *)(v12 + 8);
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      uint64_t v18 = *(int *)(v13 + 28);
      uint64_t v32 = v11 + v18;
      uint64_t v19 = v12 + v18;
      uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v32, v19, v35);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1DCD8B308(v11, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B0);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v11 + *(int *)(v13 + 28), v12 + *(int *)(v13 + 28), v35);
LABEL_7:
  uint64_t v22 = a3[9];
  uint64_t v23 = (_DWORD *)(a1 + v22);
  uint64_t v24 = (_DWORD *)(a2 + v22);
  uint64_t v25 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      *uint64_t v23 = *v24;
      ((void (*)(char *, char *, uint64_t))v33)((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v35);
      return a1;
    }
    sub_1DCD8B308((uint64_t)v23, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B8);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  *uint64_t v23 = *v24;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v35);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t sub_1DCD8B308(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCD8B368(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[8];
  uint64_t v12 = (_DWORD *)(a1 + v11);
  uint64_t v13 = (_DWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    v12[4] = v13[4];
    v10((char *)v12 + *(int *)(v14 + 28), (char *)v13 + *(int *)(v14 + 28), v9);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[9];
  uint64_t v18 = (_DWORD *)(a1 + v17);
  uint64_t v19 = (_DWORD *)(a2 + v17);
  uint64_t v20 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    v10((char *)v18 + *(int *)(v20 + 20), (char *)v19 + *(int *)(v20 + 20), v9);
    (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1DCD8B5E4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  int v29 = *(void (**)(uint64_t, uint64_t))(v30 + 40);
  v29(v7, v8);
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v11 + *(int *)(v13 + 28), v12 + *(int *)(v13 + 28), v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1DCD8B308(v11, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B0);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  swift_bridgeObjectRelease();
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v29)(v11 + *(int *)(v13 + 28), v12 + *(int *)(v13 + 28), v31);
LABEL_7:
  uint64_t v19 = a3[9];
  uint64_t v20 = (_DWORD *)(a1 + v19);
  uint64_t v21 = (_DWORD *)(a2 + v19);
  uint64_t v22 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      *uint64_t v20 = *v21;
      ((void (*)(char *, char *, uint64_t))v29)((char *)v20 + *(int *)(v22 + 20), (char *)v21 + *(int *)(v22 + 20), v31);
      return a1;
    }
    sub_1DCD8B308((uint64_t)v20, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B8);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  *uint64_t v20 = *v21;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))((char *)v20 + *(int *)(v22 + 20), (char *)v21 + *(int *)(v22 + 20), v31);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t sub_1DCD8B990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD8B9A4);
}

uint64_t sub_1DCD8B9A4(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1DD047BF8();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[7];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  int v17 = &a1[a3[9]];
  return v15(v17, a2, v16);
}

uint64_t sub_1DCD8BB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD8BB38);
}

char *sub_1DCD8BB38(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1DD047BF8();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[7];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  int v17 = &v5[a4[9]];
  return (char *)v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_SearchConfig(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86F78);
}

void sub_1DCD8BCD8()
{
  sub_1DD047BF8();
  if (v0 <= 0x3F)
  {
    sub_1DCD8BE30(319, &qword_1EBE87050, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
    if (v1 <= 0x3F)
    {
      sub_1DCD8BE30(319, &qword_1EBE87068, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1DCD8BE30(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DD048A08();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_1DCD8BE84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1DD047BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1DCD8BF50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1DD047BF8();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

_DWORD *sub_1DCD8BFB8(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *sub_1DCD8C034(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_DWORD *sub_1DCD8C0B0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_DWORD *sub_1DCD8C12C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCD8C1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD8C1BC);
}

uint64_t sub_1DCD8C1BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1DCD8C22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD8C240);
}

uint64_t sub_1DCD8C240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_1DCD8C2B4()
{
  uint64_t result = sub_1DD047BF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCD8C350(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1DD047BF8();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1DCD8C44C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1DCD8C4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_1DCD8C574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCD8C628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCD8C6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCD8C750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD8C764);
}

uint64_t sub_1DCD8C764(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCD8C814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD8C828);
}

void *sub_1DCD8C828(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCD8C8D0()
{
  uint64_t result = sub_1DD047BF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCD8C97C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    uint64_t v14 = 16 * v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1DCEAD1A4(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_1DD048FA8();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1DCD8CB84(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    int v18 = *(_DWORD *)(*(void *)(v3 + 56) + 4 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1DCEAD1A4(v16, v17);
    char v21 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(_DWORD *)(*(void *)(a2 + 56) + 4 * v19) != v18) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1DCD8CD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0);
  uint64_t v54 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v47 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02998);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (uint64_t *)((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  int64_t v14 = (uint64_t *)((char *)&v47 - v13);
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v53 = 0;
  uint64_t v51 = a1;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v16 = a1 + 64;
  uint64_t v15 = v17;
  uint64_t v18 = 1 << *(unsigned char *)(v16 - 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v15;
  uint64_t v49 = v16;
  int64_t v50 = (unint64_t)(v18 + 63) >> 6;
  int64_t v48 = v50 - 1;
  while (1)
  {
    if (v20)
    {
      unint64_t v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v23 = v22 | (v53 << 6);
LABEL_9:
      uint64_t v24 = (uint64_t *)(*(void *)(v51 + 48) + 16 * v23);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      uint64_t v27 = *(void *)(v51 + 56) + *(void *)(v54 + 72) * v23;
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03990);
      sub_1DCD93254(v27, (uint64_t)v11 + *(int *)(v28 + 48), type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
      *unint64_t v11 = v26;
      v11[1] = v25;
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v11, 0, 1, v28);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    int64_t v29 = v53 + 1;
    if (__OFADD__(v53, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v29 < v50)
    {
      unint64_t v30 = *(void *)(v49 + 8 * v29);
      if (v30) {
        goto LABEL_13;
      }
      int64_t v31 = v53 + 2;
      ++v53;
      if (v29 + 1 < v50)
      {
        unint64_t v30 = *(void *)(v49 + 8 * v31);
        if (v30) {
          goto LABEL_16;
        }
        int64_t v53 = v29 + 1;
        if (v29 + 2 < v50)
        {
          unint64_t v30 = *(void *)(v49 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_13;
          }
          int64_t v31 = v29 + 3;
          int64_t v53 = v29 + 2;
          if (v29 + 3 < v50) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03990);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v11, 1, 1, v32);
    unint64_t v20 = 0;
LABEL_28:
    sub_1DCD43B04((uint64_t)v11, (uint64_t)v14, &qword_1EAB02998);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03990);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v14, 1, v33) == 1) {
      return;
    }
    uint64_t v34 = (uint64_t)v14 + *(int *)(v33 + 48);
    uint64_t v35 = *v14;
    uint64_t v36 = v14[1];
    sub_1DCD92160(v34, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
    unint64_t v37 = sub_1DCEAD1A4(v35, v36);
    char v39 = v38;
    swift_bridgeObjectRelease();
    if ((v39 & 1) == 0) {
      goto LABEL_49;
    }
    sub_1DCD93254(*(void *)(a2 + 56) + *(void *)(v54 + 72) * v37, (uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
    uint64_t v40 = *(void **)v5;
    uint64_t v41 = *(void **)v8;
    uint64_t v42 = *(void *)(*(void *)v5 + 16);
    if (v42 != *(void *)(*(void *)v8 + 16)) {
      goto LABEL_48;
    }
    if (v42 && v40 != v41)
    {
      if ((v40[4] != v41[4] || v40[5] != v41[5]) && (sub_1DD048FA8() & 1) == 0) {
        goto LABEL_48;
      }
      if (v42 != 1)
      {
        if ((v40[6] != v41[6] || v40[7] != v41[7]) && (sub_1DD048FA8() & 1) == 0) {
          goto LABEL_48;
        }
        uint64_t v43 = v42 - 2;
        if (v43)
        {
          long long v44 = v41 + 9;
          uint64_t v45 = v40 + 9;
          while (1)
          {
            BOOL v46 = *(v45 - 1) == *(v44 - 1) && *v45 == *v44;
            if (!v46 && (sub_1DD048FA8() & 1) == 0) {
              break;
            }
            v44 += 2;
            v45 += 2;
            if (!--v43) {
              goto LABEL_6;
            }
          }
LABEL_48:
          sub_1DCD8B308((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
LABEL_49:
          sub_1DCD8B308((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
          return;
        }
      }
    }
LABEL_6:
    sub_1DD047BF8();
    sub_1DCD91BC8(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v21 = sub_1DD0483B8();
    sub_1DCD8B308((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
    sub_1DCD8B308((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
    if ((v21 & 1) == 0) {
      return;
    }
  }
  unint64_t v30 = *(void *)(v49 + 8 * v31);
  if (v30)
  {
LABEL_16:
    int64_t v29 = v31;
LABEL_13:
    unint64_t v20 = (v30 - 1) & v30;
    unint64_t v23 = __clz(__rbit64(v30)) + (v29 << 6);
    int64_t v53 = v29;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v29 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v29 >= v50)
    {
      int64_t v53 = v48;
      goto LABEL_27;
    }
    unint64_t v30 = *(void *)(v49 + 8 * v29);
    ++v31;
    if (v30) {
      goto LABEL_13;
    }
  }
LABEL_53:
  __break(1u);
}

uint64_t sub_1DCD8D334(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    float v18 = *(float *)(*(void *)(v3 + 56) + 4 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1DCEAD1A4(v16, v17);
    char v21 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(float *)(*(void *)(a2 + 56) + 4 * v19) != v18) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1DCD8D4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
  uint64_t v47 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v40 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02958);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (uint64_t *)((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  int64_t v14 = (uint64_t *)((char *)&v40 - v13);
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v46 = 0;
  uint64_t v44 = a1;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v16 = a1 + 64;
  uint64_t v15 = v17;
  uint64_t v18 = 1 << *(unsigned char *)(v16 - 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v15;
  uint64_t v42 = v16;
  int64_t v43 = (unint64_t)(v18 + 63) >> 6;
  int64_t v41 = v43 - 1;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v22 = v21 | (v46 << 6);
LABEL_8:
      unint64_t v23 = (uint64_t *)(*(void *)(v44 + 48) + 16 * v22);
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      uint64_t v26 = *(void *)(v44 + 56) + *(void *)(v47 + 72) * v22;
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02960);
      sub_1DCD93254(v26, (uint64_t)v11 + *(int *)(v27 + 48), type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
      *unint64_t v11 = v25;
      v11[1] = v24;
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v11, 0, 1, v27);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    int64_t v28 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v28 < v43)
    {
      unint64_t v29 = *(void *)(v42 + 8 * v28);
      if (v29) {
        goto LABEL_12;
      }
      int64_t v30 = v46 + 2;
      ++v46;
      if (v28 + 1 < v43)
      {
        unint64_t v29 = *(void *)(v42 + 8 * v30);
        if (v29) {
          goto LABEL_15;
        }
        int64_t v46 = v28 + 1;
        if (v28 + 2 < v43)
        {
          unint64_t v29 = *(void *)(v42 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_12;
          }
          int64_t v30 = v28 + 3;
          int64_t v46 = v28 + 2;
          if (v28 + 3 < v43) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02960);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v11, 1, 1, v31);
    unint64_t v20 = 0;
LABEL_27:
    sub_1DCD43B04((uint64_t)v11, (uint64_t)v14, &qword_1EAB02958);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02960);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v14, 1, v32) == 1) {
      return;
    }
    uint64_t v33 = (uint64_t)v14 + *(int *)(v32 + 48);
    uint64_t v34 = *v14;
    uint64_t v35 = v14[1];
    sub_1DCD92160(v33, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
    unint64_t v36 = sub_1DCEAD1A4(v34, v35);
    char v38 = v37;
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0) {
      goto LABEL_35;
    }
    sub_1DCD93254(*(void *)(a2 + 56) + *(void *)(v47 + 72) * v36, (uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
    if (*(_DWORD *)v5 != *(_DWORD *)v8 || v5[4] != v8[4])
    {
      sub_1DCD8B308((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
LABEL_35:
      sub_1DCD8B308((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
      return;
    }
    sub_1DD047BF8();
    sub_1DCD91BC8(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v39 = sub_1DD0483B8();
    sub_1DCD8B308((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
    sub_1DCD8B308((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
    if ((v39 & 1) == 0) {
      return;
    }
  }
  unint64_t v29 = *(void *)(v42 + 8 * v30);
  if (v29)
  {
LABEL_15:
    int64_t v28 = v30;
LABEL_12:
    unint64_t v20 = (v29 - 1) & v29;
    unint64_t v22 = __clz(__rbit64(v29)) + (v28 << 6);
    int64_t v46 = v28;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v43)
    {
      int64_t v46 = v41;
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v42 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

void sub_1DCD8DA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
  uint64_t v47 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v5 = (unsigned __int8 *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (unsigned __int8 *)&v40 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02968);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (uint64_t *)((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  int64_t v14 = (uint64_t *)((char *)&v40 - v13);
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v46 = 0;
  uint64_t v44 = a1;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v16 = a1 + 64;
  uint64_t v15 = v17;
  uint64_t v18 = 1 << *(unsigned char *)(v16 - 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v15;
  uint64_t v42 = v16;
  int64_t v43 = (unint64_t)(v18 + 63) >> 6;
  int64_t v41 = v43 - 1;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v22 = v21 | (v46 << 6);
LABEL_8:
      unint64_t v23 = (uint64_t *)(*(void *)(v44 + 48) + 16 * v22);
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      uint64_t v26 = *(void *)(v44 + 56) + *(void *)(v47 + 72) * v22;
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02970);
      sub_1DCD93254(v26, (uint64_t)v11 + *(int *)(v27 + 48), type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
      *unint64_t v11 = v25;
      v11[1] = v24;
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v11, 0, 1, v27);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    int64_t v28 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v28 < v43)
    {
      unint64_t v29 = *(void *)(v42 + 8 * v28);
      if (v29) {
        goto LABEL_12;
      }
      int64_t v30 = v46 + 2;
      ++v46;
      if (v28 + 1 < v43)
      {
        unint64_t v29 = *(void *)(v42 + 8 * v30);
        if (v29) {
          goto LABEL_15;
        }
        int64_t v46 = v28 + 1;
        if (v28 + 2 < v43)
        {
          unint64_t v29 = *(void *)(v42 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_12;
          }
          int64_t v30 = v28 + 3;
          int64_t v46 = v28 + 2;
          if (v28 + 3 < v43) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02970);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v11, 1, 1, v31);
    unint64_t v20 = 0;
LABEL_27:
    sub_1DCD43B04((uint64_t)v11, (uint64_t)v14, &qword_1EAB02968);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02970);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v14, 1, v32) == 1) {
      return;
    }
    uint64_t v33 = (uint64_t)v14 + *(int *)(v32 + 48);
    uint64_t v34 = *v14;
    uint64_t v35 = v14[1];
    sub_1DCD92160(v33, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
    unint64_t v36 = sub_1DCEAD1A4(v34, v35);
    char v38 = v37;
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0) {
      goto LABEL_35;
    }
    sub_1DCD93254(*(void *)(a2 + 56) + *(void *)(v47 + 72) * v36, (uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
    if (*v5 != *v8 || v5[1] != v8[1])
    {
      sub_1DCD8B308((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
LABEL_35:
      sub_1DCD8B308((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
      return;
    }
    sub_1DD047BF8();
    sub_1DCD91BC8(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v39 = sub_1DD0483B8();
    sub_1DCD8B308((uint64_t)v5, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
    sub_1DCD8B308((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
    if ((v39 & 1) == 0) {
      return;
    }
  }
  unint64_t v29 = *(void *)(v42 + 8 * v30);
  if (v29)
  {
LABEL_15:
    int64_t v28 = v30;
LABEL_12:
    unint64_t v20 = (v29 - 1) & v29;
    unint64_t v22 = __clz(__rbit64(v29)) + (v28 << 6);
    int64_t v46 = v28;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v43)
    {
      int64_t v46 = v41;
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v42 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_1DCD8DFC4(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v5 = a1 + 64;
    uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
    uint64_t v7 = -1;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    unint64_t v8 = v7 & *(void *)(a1 + 64);
    int64_t v26 = (unint64_t)(v6 + 63) >> 6;
    while (1)
    {
      if (v8)
      {
        unint64_t v9 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v10 = v9 | (v4 << 6);
      }
      else
      {
        int64_t v11 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_36;
        }
        if (v11 >= v26) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v11);
        ++v4;
        if (!v12)
        {
          int64_t v4 = v11 + 1;
          if (v11 + 1 >= v26) {
            return 1;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12)
          {
            int64_t v4 = v11 + 2;
            if (v11 + 2 >= v26) {
              return 1;
            }
            unint64_t v12 = *(void *)(v5 + 8 * v4);
            if (!v12)
            {
              int64_t v13 = v11 + 3;
              if (v13 >= v26) {
                return 1;
              }
              unint64_t v12 = *(void *)(v5 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  int64_t v4 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    break;
                  }
                  if (v4 >= v26) {
                    return 1;
                  }
                  unint64_t v12 = *(void *)(v5 + 8 * v4);
                  ++v13;
                  if (v12) {
                    goto LABEL_22;
                  }
                }
LABEL_36:
                __break(1u);
                JUMPOUT(0x1DCD8E1E0);
              }
              int64_t v4 = v13;
            }
          }
        }
LABEL_22:
        unint64_t v8 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
      }
      uint64_t v14 = 16 * v10;
      uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + v14);
      uint64_t v16 = *v15;
      uint64_t v17 = v15[1];
      uint64_t v18 = *(void *)(a1 + 56) + v14;
      uint64_t v19 = *(void *)v18;
      int v20 = *(unsigned __int8 *)(v18 + 8);
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_1DCEAD1A4(v16, v17);
      char v23 = v22;
      swift_bridgeObjectRelease();
      if (v23)
      {
        uint64_t v24 = *(void *)(*(void *)(a2 + 56) + 16 * v21);
        if (v20)
        {
          switch(v19)
          {
            case 1:
              if (v24 != 1) {
                return 0;
              }
              continue;
            case 2:
              if (v24 != 2) {
                return 0;
              }
              continue;
            case 3:
              if (v24 != 3) {
                return 0;
              }
              continue;
            default:
              if (v24) {
                return 0;
              }
              continue;
          }
        }
        if (v24 == v19) {
          continue;
        }
      }
      return 0;
    }
  }
  return 0;
}

void sub_1DCD8E1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = sub_1DD0465D8();
  uint64_t v52 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  int64_t v53 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB029B0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9.n128_f64[0] = MEMORY[0x1F4188790](v8);
  int64_t v11 = (char *)&v44 - v10;
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v54 = 0;
  uint64_t v49 = a1;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v13 = a1 + 64;
  uint64_t v12 = v14;
  uint64_t v15 = 1 << *(unsigned char *)(v13 - 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v12;
  uint64_t v48 = v52 + 16;
  int64_t v50 = (void (**)(uint64_t, uint64_t))(v52 + 8);
  uint64_t v51 = (void (**)(char *, char *, uint64_t))(v52 + 32);
  uint64_t v46 = v13;
  int64_t v47 = (unint64_t)(v15 + 63) >> 6;
  int64_t v45 = v47 - 1;
  uint64_t v18 = v57;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      uint64_t v20 = (v17 - 1) & v17;
      unint64_t v21 = v19 | (v54 << 6);
LABEL_9:
      uint64_t v22 = v49;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v52 + 16))(v7, *(void *)(v49 + 48) + *(void *)(v52 + 72) * v21, v57, v9);
      char v23 = (uint64_t *)(*(void *)(v22 + 56) + 16 * v21);
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB029B8);
      uint64_t v27 = &v7[*(int *)(v26 + 48)];
      *(void *)uint64_t v27 = v24;
      *((void *)v27 + 1) = v25;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 0, 1, v26);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    int64_t v28 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v28 < v47)
    {
      unint64_t v29 = *(void *)(v46 + 8 * v28);
      if (v29) {
        goto LABEL_13;
      }
      int64_t v30 = v54 + 2;
      ++v54;
      if (v28 + 1 < v47)
      {
        unint64_t v29 = *(void *)(v46 + 8 * v30);
        if (v29) {
          goto LABEL_16;
        }
        int64_t v54 = v28 + 1;
        if (v28 + 2 < v47)
        {
          unint64_t v29 = *(void *)(v46 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_13;
          }
          int64_t v30 = v28 + 3;
          int64_t v54 = v28 + 2;
          if (v28 + 3 < v47) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB029B8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v7, 1, 1, v31);
    uint64_t v20 = 0;
LABEL_28:
    sub_1DCD43B04((uint64_t)v7, (uint64_t)v11, &qword_1EAB029B0);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB029B8);
    BOOL v33 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v11, 1, v32) == 1;
    if (v33) {
      return;
    }
    BOOL v55 = v33;
    unint64_t v56 = v20;
    uint64_t v34 = &v11[*(int *)(v32 + 48)];
    uint64_t v35 = (uint64_t)v53;
    unint64_t v36 = v11;
    (*v51)(v53, v11, v18);
    uint64_t v37 = *(void *)v34;
    uint64_t v38 = *((void *)v34 + 1);
    unint64_t v39 = sub_1DCEAD21C(v35);
    LOBYTE(v34) = v40;
    (*v50)(v35, v18);
    if ((v34 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return;
    }
    int64_t v41 = (void *)(*(void *)(a2 + 56) + 16 * v39);
    if (*v41 == v37 && v41[1] == v38)
    {
      swift_bridgeObjectRelease();
      int64_t v11 = v36;
      unint64_t v17 = v56;
    }
    else
    {
      char v43 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      int64_t v11 = v36;
      unint64_t v17 = v56;
      if ((v43 & 1) == 0) {
        return;
      }
    }
  }
  unint64_t v29 = *(void *)(v46 + 8 * v30);
  if (v29)
  {
LABEL_16:
    int64_t v28 = v30;
LABEL_13:
    uint64_t v20 = (v29 - 1) & v29;
    unint64_t v21 = __clz(__rbit64(v29)) + (v28 << 6);
    int64_t v54 = v28;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v47)
    {
      int64_t v54 = v45;
      goto LABEL_27;
    }
    unint64_t v29 = *(void *)(v46 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_13;
    }
  }
LABEL_40:
  __break(1u);
}

void sub_1DCD8E6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = sub_1DD0465D8();
  uint64_t v42 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v44 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB029A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10.n128_f64[0] = MEMORY[0x1F4188790](v8);
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  char v43 = (char *)&v35 - v9;
  int64_t v45 = 0;
  uint64_t v39 = a1;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v36 = a1 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v37 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v38 = v42 + 16;
  char v40 = (void (**)(uint64_t, uint64_t))(v42 + 8);
  int64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32);
  int64_t v35 = v37 - 1;
  uint64_t v15 = (uint64_t *)&unk_1EAB029A8;
  uint64_t v16 = (uint64_t)v44;
  uint64_t v17 = v46;
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v45 << 6);
LABEL_8:
      uint64_t v20 = v39;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v42 + 16))(v7, *(void *)(v39 + 48) + *(void *)(v42 + 72) * v19, v46, v10);
      uint64_t v21 = *(void *)(*(void *)(v20 + 56) + 8 * v19);
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(v15);
      *(void *)&v7[*(int *)(v22 + 48)] = v21;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 0, 1, v22);
      swift_bridgeObjectRetain();
      uint64_t v23 = (uint64_t)v43;
      goto LABEL_27;
    }
    int64_t v24 = v45 + 1;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v23 = (uint64_t)v43;
    if (v24 < v37)
    {
      unint64_t v25 = *(void *)(v36 + 8 * v24);
      if (v25) {
        goto LABEL_12;
      }
      int64_t v26 = v45 + 2;
      ++v45;
      if (v24 + 1 < v37)
      {
        unint64_t v25 = *(void *)(v36 + 8 * v26);
        if (v25) {
          goto LABEL_15;
        }
        int64_t v45 = v24 + 1;
        if (v24 + 2 < v37)
        {
          unint64_t v25 = *(void *)(v36 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_12;
          }
          int64_t v26 = v24 + 3;
          int64_t v45 = v24 + 2;
          if (v24 + 3 < v37) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(v15);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v7, 1, 1, v27);
    unint64_t v14 = 0;
LABEL_27:
    sub_1DCD43B04((uint64_t)v7, v23, &qword_1EAB029A0);
    int64_t v28 = v15;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(v15);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29) == 1) {
      return;
    }
    uint64_t v30 = *(int *)(v29 + 48);
    (*v41)(v16, v23, v17);
    uint64_t v31 = *(void *)(v23 + v30);
    sub_1DCEAD21C(v16);
    LOBYTE(v30) = v32;
    (*v40)(v16, v17);
    if ((v30 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v33 = swift_bridgeObjectRetain();
    char v34 = sub_1DCD6E7D4(v33, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v28;
    if ((v34 & 1) == 0) {
      return;
    }
  }
  unint64_t v25 = *(void *)(v36 + 8 * v26);
  if (v25)
  {
LABEL_15:
    int64_t v24 = v26;
LABEL_12:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v19 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v45 = v24;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v37)
    {
      int64_t v45 = v35;
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v36 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_12;
    }
  }
LABEL_35:
  __break(1u);
}

uint64_t sub_1DCD8EB50(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    unint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCEAD1A4(v15, v16);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v20 = swift_bridgeObjectRetain();
    char v21 = sub_1DCD8C97C(v20, v17);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1DCD8ED1C(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
  uint64_t v57 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int64_t v8 = (char *)&v48 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F28);
  MEMORY[0x1F4188790](v9 - 8);
  int64_t v11 = (uint64_t *)((char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (uint64_t *)((char *)&v48 - v13);
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  int64_t v55 = 0;
  unint64_t v56 = (uint64_t *)((char *)&v48 - v13);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v16 = a1 + 64;
  uint64_t v15 = v17;
  uint64_t v18 = 1 << *(unsigned char *)(v16 - 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v15;
  uint64_t v50 = v16;
  int64_t v51 = (unint64_t)(v18 + 63) >> 6;
  int64_t v49 = v51 - 1;
  while (1)
  {
    if (v20)
    {
      unint64_t v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v23 = v22 | (v55 << 6);
LABEL_9:
      uint64_t v24 = *(void *)(v52 + 56);
      unint64_t v25 = (void *)(*(void *)(v52 + 48) + 16 * v23);
      uint64_t v26 = v25[1];
      *int64_t v11 = *v25;
      v11[1] = v26;
      uint64_t v27 = v24 + *(void *)(v57 + 72) * v23;
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F20);
      sub_1DCD93254(v27, (uint64_t)v11 + *(int *)(v28 + 48), type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v11, 0, 1, v28);
      swift_bridgeObjectRetain();
      unint64_t v14 = v56;
      goto LABEL_31;
    }
    int64_t v29 = v55 + 1;
    if (__OFADD__(v55, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v29 < v51)
    {
      unint64_t v30 = *(void *)(v50 + 8 * v29);
      if (v30) {
        goto LABEL_13;
      }
      int64_t v31 = v55 + 2;
      ++v55;
      if (v29 + 1 < v51)
      {
        unint64_t v30 = *(void *)(v50 + 8 * v31);
        if (v30) {
          goto LABEL_16;
        }
        int64_t v55 = v29 + 1;
        if (v29 + 2 < v51)
        {
          unint64_t v30 = *(void *)(v50 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_13;
          }
          int64_t v55 = v29 + 2;
          if (v29 + 3 < v51)
          {
            unint64_t v30 = *(void *)(v50 + 8 * (v29 + 3));
            if (v30)
            {
              v29 += 3;
              goto LABEL_13;
            }
            int64_t v31 = v29 + 4;
            int64_t v55 = v29 + 3;
            if (v29 + 4 < v51) {
              break;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F20);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v11, 1, 1, v32);
    unint64_t v20 = 0;
LABEL_31:
    sub_1DCD43B04((uint64_t)v11, (uint64_t)v14, &qword_1EBE84F28);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F20);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v14, 1, v33) == 1) {
      return;
    }
    uint64_t v34 = (uint64_t)v5;
    uint64_t v35 = (uint64_t)v14 + *(int *)(v33 + 48);
    uint64_t v36 = *v14;
    uint64_t v37 = v14[1];
    sub_1DCD92160(v35, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    uint64_t v38 = v36;
    uint64_t v39 = v53;
    unint64_t v40 = sub_1DCEAD1A4(v38, v37);
    char v42 = v41;
    swift_bridgeObjectRelease();
    if ((v42 & 1) == 0) {
      goto LABEL_36;
    }
    uint64_t v43 = *(void *)(v39 + 56) + *(void *)(v57 + 72) * v40;
    uint64_t v5 = (char *)v34;
    sub_1DCD93254(v43, v34, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    uint64_t v44 = *(int *)(v54 + 20);
    uint64_t v45 = *(void *)(v34 + v44);
    uint64_t v46 = *(void *)&v8[v44];
    if (v45 != v46)
    {
      swift_retain();
      swift_retain();
      char v47 = sub_1DCDF58B4(v45, v46);
      swift_release();
      swift_release();
      if ((v47 & 1) == 0)
      {
        sub_1DCD8B308(v34, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
LABEL_36:
        sub_1DCD8B308((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
        return;
      }
    }
    sub_1DD047BF8();
    sub_1DCD91BC8(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v21 = sub_1DD0483B8();
    sub_1DCD8B308(v34, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    sub_1DCD8B308((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    unint64_t v14 = v56;
    if ((v21 & 1) == 0) {
      return;
    }
  }
  unint64_t v30 = *(void *)(v50 + 8 * v31);
  if (v30)
  {
LABEL_16:
    int64_t v29 = v31;
LABEL_13:
    unint64_t v20 = (v30 - 1) & v30;
    unint64_t v23 = __clz(__rbit64(v30)) + (v29 << 6);
    int64_t v55 = v29;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v29 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v29 >= v51)
    {
      int64_t v55 = v49;
      goto LABEL_30;
    }
    unint64_t v30 = *(void *)(v50 + 8 * v29);
    ++v31;
    if (v30) {
      goto LABEL_13;
    }
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1DCD8F2D4()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C9C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C9C8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  unint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF00;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "domain_configs";
  *(void *)(v6 + 8) = 14;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "allow_ocr";
  *(void *)(v10 + 8) = 9;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  int64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *int64_t v11 = 4;
  *(void *)uint64_t v12 = "enable_visual_fingerprint";
  *((void *)v12 + 1) = 25;
  unsigned char v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  unint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 3;
  *(void *)unint64_t v14 = "server_search_config";
  *((void *)v14 + 1) = 20;
  v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 5;
  *(void *)uint64_t v15 = "user_feedback_config";
  *(void *)(v15 + 8) = 20;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCD8F554()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1DCD8F670();
          break;
        case 2:
        case 4:
          sub_1DD047CD8();
          break;
        case 3:
          sub_1DCD8F768();
          break;
        case 5:
          sub_1DCD8F818();
          break;
        default:
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCD8F670()
{
  return sub_1DD047C98();
}

uint64_t sub_1DCD8F768()
{
  return sub_1DD047DF8();
}

uint64_t sub_1DCD8F818()
{
  return sub_1DD047DF8();
}

uint64_t sub_1DCD8F8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(*(void *)v3 + 16)
    || (sub_1DD047BC8(),
        type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0),
        sub_1DCD91BC8(&qword_1EBE85EB0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig), sub_1DCD91BC8(&qword_1EBE85EB8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig), uint64_t result = sub_1DD047E98(), !v4))
  {
    if (v3[8] != 1 || (uint64_t result = sub_1DD047F08(), !v4))
    {
      uint64_t result = sub_1DCD8FAC4((uint64_t)v3, a1, a2, a3);
      if (!v4)
      {
        if (v3[9] == 1) {
          sub_1DD047F08();
        }
        sub_1DCD8FCC8((uint64_t)v3, a1, a2, a3);
        type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
        return sub_1DD047BD8();
      }
    }
  }
  return result;
}

uint64_t sub_1DCD8FAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  sub_1DCD2889C(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_1EAB025B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1DCD2479C((uint64_t)v7, &qword_1EAB025B0);
  }
  sub_1DCD92160((uint64_t)v7, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  sub_1DCD91BC8(&qword_1EBE85F88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  sub_1DD047FC8();
  return sub_1DCD8B308((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
}

uint64_t sub_1DCD8FCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  sub_1DCD2889C(a1 + *(int *)(v12 + 36), (uint64_t)v7, &qword_1EAB025B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1DCD2479C((uint64_t)v7, &qword_1EAB025B8);
  }
  sub_1DCD92160((uint64_t)v7, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
  sub_1DCD91BC8(&qword_1EBE85FA0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
  sub_1DD047FC8();
  return sub_1DCD8B308((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
}

uint64_t sub_1DCD8FECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_1DCDB9100(MEMORY[0x1E4FBC860]);
  *(_WORD *)(a2 + 8) = 0;
  sub_1DD047BE8();
  uint64_t v4 = a2 + *(int *)(a1 + 32);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 36);
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  return v8(v6, 1, 1, v7);
}

unint64_t sub_1DCD8FFB4()
{
  return 0xD000000000000023;
}

void (*sub_1DCD8FFD8())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t sub_1DCD8FFFC()
{
  return sub_1DCD8F554();
}

uint64_t sub_1DCD90014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCD8F8C8(a1, a2, a3);
}

uint64_t sub_1DCD9002C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCD91BC8(&qword_1EAB02940, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCD900A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85C30, (uint64_t)qword_1EBE9C9C8, a1);
}

uint64_t sub_1DCD900CC(uint64_t a1)
{
  uint64_t v2 = sub_1DCD91BC8((unint64_t *)&qword_1EBE85C38, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCD9013C()
{
  sub_1DCD91BC8((unint64_t *)&qword_1EBE85C38, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  return sub_1DD047E68();
}

uint64_t sub_1DCD901C0()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9CA90);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9CA90);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  unint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF60;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  void *v5 = 1;
  *(void *)unint64_t v6 = "should_perform_ocr";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "should_perform_barcode";
  *((void *)v10 + 1) = 22;
  unsigned char v10[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCD90378()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1) {
        sub_1DD047CD8();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCD9040C()
{
  if (*v0 != 1 || (uint64_t result = sub_1DD047F08(), !v1))
  {
    if (v0[1] != 1 || (uint64_t result = sub_1DD047F08(), !v1))
    {
      type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCD904D8@<X0>(_WORD *a1@<X8>)
{
  *a1 = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCD904FC()
{
  return 0xD000000000000029;
}

uint64_t sub_1DCD90520()
{
  return sub_1DCD90378();
}

uint64_t sub_1DCD90538()
{
  return sub_1DCD9040C();
}

uint64_t sub_1DCD90550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCD91BC8(&qword_1EAB02978, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCD905CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85EA8, (uint64_t)qword_1EBE9CA90, a1);
}

uint64_t sub_1DCD905F0(uint64_t a1)
{
  uint64_t v2 = sub_1DCD91BC8(&qword_1EBE85EB0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCD9065C()
{
  sub_1DCD91BC8(&qword_1EBE85EB0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
  return sub_1DD047E68();
}

uint64_t sub_1DCD906DC()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9CAF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9CAF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04E760;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  void *v5 = 2;
  *(void *)unint64_t v6 = "domain_configs";
  *(void *)(v6 + 8) = 14;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 3;
  *(void *)uint64_t v10 = "remove_model_urn_suffix_patterns";
  *((void *)v10 + 1) = 32;
  unsigned char v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 4;
  *(void *)uint64_t v11 = "location_significant_digits";
  *(void *)(v11 + 8) = 27;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCD908DC()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 4:
          sub_1DD047D48();
          break;
        case 3:
          sub_1DD047D68();
          break;
        case 2:
          sub_1DCD909A8();
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCD909A8()
{
  return sub_1DD047C98();
}

uint64_t sub_1DCD90AA0()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (sub_1DD047BC8(),
        type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0),
        sub_1DCD91BC8(&qword_1EBE85F48, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig), sub_1DCD91BC8(&qword_1EBE85F50, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig), uint64_t result = sub_1DD047E98(), !v1))
  {
    if (!*(void *)(*(void *)(v0 + 8) + 16) || (uint64_t result = sub_1DD047F68(), !v1))
    {
      if (!*(_DWORD *)(v0 + 16) || (uint64_t result = sub_1DD047F48(), !v1))
      {
        type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
        return sub_1DD047BD8();
      }
    }
  }
  return result;
}

uint64_t sub_1DCD90C50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)a1 = sub_1DCDB8A38(MEMORY[0x1E4FBC860]);
  *(void *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCD90CA0()
{
  return 0xD000000000000029;
}

uint64_t sub_1DCD90CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_1DD047BF8();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1DCD90D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1DD047BF8();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t sub_1DCD90D9C()
{
  return sub_1DCD908DC();
}

uint64_t sub_1DCD90DB4()
{
  return sub_1DCD90AA0();
}

uint64_t sub_1DCD90DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCD91BC8(&qword_1EAB02980, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCD90E48@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85F80, (uint64_t)qword_1EBE9CAF0, a1);
}

uint64_t sub_1DCD90E6C(uint64_t a1)
{
  uint64_t v2 = sub_1DCD91BC8(&qword_1EBE85F88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCD90ED8()
{
  sub_1DCD91BC8(&qword_1EBE85F88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  return sub_1DD047E68();
}

uint64_t sub_1DCD90F58()
{
  uint64_t result = sub_1DD048548();
  qword_1EAB1CC08 = 0xD000000000000029;
  unk_1EAB1CC10 = 0x80000001DD068D60;
  return result;
}

uint64_t sub_1DCD90FD0()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9CAD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9CAD8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF60;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  void *v5 = 1;
  *(void *)unint64_t v6 = "s2_cell_level";
  *(void *)(v6 + 8) = 13;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "require_location";
  *((void *)v10 + 1) = 16;
  unsigned char v10[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCD91188()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1DD047CD8();
      }
      else if (result == 1)
      {
        sub_1DD047D48();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCD9122C()
{
  if (!*(_DWORD *)v0 || (uint64_t result = sub_1DD047F48(), !v1))
  {
    if (*(unsigned char *)(v0 + 4) != 1 || (uint64_t result = sub_1DD047F08(), !v1))
    {
      type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCD912F0@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(unsigned char *)(a1 + 4) = 0;
  return sub_1DD047BE8();
}

uint64_t sub_1DCD91318()
{
  if (qword_1EAB01C18 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EAB1CC08;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1DCD91380()
{
  return sub_1DCD91188();
}

uint64_t sub_1DCD91398()
{
  return sub_1DCD9122C();
}

uint64_t sub_1DCD913B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCD91BC8(&qword_1EAB02988, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCD9142C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85F40, (uint64_t)qword_1EBE9CAD8, a1);
}

uint64_t sub_1DCD91450(uint64_t a1)
{
  uint64_t v2 = sub_1DCD91BC8(&qword_1EBE85F48, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCD914BC()
{
  sub_1DCD91BC8(&qword_1EBE85F48, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
  return sub_1DD047E68();
}

uint64_t sub_1DCD9153C()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9CB08);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9CB08);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DD04E910;
  unint64_t v4 = v3 + v2 + v1[14];
  *(void *)(v3 + v2) = 1;
  *(void *)unint64_t v4 = "location_significant_digits";
  *(void *)(v4 + 8) = 27;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x1E4F70FD0];
  uint64_t v6 = sub_1DD047FD8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  return sub_1DD047FE8();
}

uint64_t sub_1DCD91698()
{
  while (1)
  {
    uint64_t result = sub_1DD047CB8();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_1DD047D48();
    }
  }
  return result;
}

uint64_t sub_1DCD91708()
{
  if (!*v0 || (uint64_t result = sub_1DD047F48(), !v1))
  {
    type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
    return sub_1DD047BD8();
  }
  return result;
}

uint64_t sub_1DCD9179C@<X0>(_DWORD *a1@<X8>)
{
  *a1 = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCD917C0()
{
  return 0xD000000000000029;
}

uint64_t sub_1DCD917DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1DCD9184C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

void (*sub_1DCD918BC())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t sub_1DCD918E0()
{
  return sub_1DCD91698();
}

uint64_t sub_1DCD918F8()
{
  return sub_1DCD91708();
}

uint64_t sub_1DCD91910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCD91BC8(&qword_1EAB02990, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCD9198C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85F98, (uint64_t)qword_1EBE9CB08, a1);
}

uint64_t sub_1DCD919B0@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1DD048008();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_1DCD91A4C(uint64_t a1)
{
  uint64_t v2 = sub_1DCD91BC8(&qword_1EBE85FA0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCD91AB8()
{
  sub_1DCD91BC8(&qword_1EBE85FA0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
  return sub_1DD047E68();
}

uint64_t sub_1DCD91B38()
{
  return sub_1DCD91BC8(&qword_1EAB02910, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
}

uint64_t sub_1DCD91B80()
{
  return sub_1DCD91BC8(&qword_1EBE85FA0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
}

uint64_t sub_1DCD91BC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCD91C10()
{
  return sub_1DCD91BC8(&qword_1EAB02918, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
}

uint64_t sub_1DCD91C58()
{
  return sub_1DCD91BC8(&qword_1EBE85FA8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
}

uint64_t sub_1DCD91CA0()
{
  return sub_1DCD91BC8(&qword_1EBE85F58, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(uint64_t a1)
{
  return sub_1DCD27FD4(a1, qword_1EBE85F68);
}

uint64_t sub_1DCD91D08()
{
  return sub_1DCD91BC8(&qword_1EBE85F48, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
}

uint64_t sub_1DCD91D50()
{
  return sub_1DCD91BC8(&qword_1EBE85F50, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
}

uint64_t sub_1DCD91D98()
{
  return sub_1DCD91BC8(&qword_1EBE85F60, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig);
}

uint64_t sub_1DCD91DE0()
{
  return sub_1DCD91BC8(&qword_1EAB02920, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
}

uint64_t sub_1DCD91E28()
{
  return sub_1DCD91BC8(&qword_1EBE85F88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
}

uint64_t sub_1DCD91E70()
{
  return sub_1DCD91BC8(&qword_1EAB02928, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
}

uint64_t sub_1DCD91EB8()
{
  return sub_1DCD91BC8(&qword_1EBE85F90, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
}

uint64_t sub_1DCD91F00()
{
  return sub_1DCD91BC8(&qword_1EBE85EC0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85ED0);
}

uint64_t sub_1DCD91F68()
{
  return sub_1DCD91BC8(&qword_1EBE85EB0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
}

uint64_t sub_1DCD91FB0()
{
  return sub_1DCD91BC8(&qword_1EBE85EB8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
}

uint64_t sub_1DCD91FF8()
{
  return sub_1DCD91BC8(&qword_1EBE85EC8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig);
}

uint64_t sub_1DCD92040()
{
  return sub_1DCD91BC8(&qword_1EAB02930, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
}

uint64_t sub_1DCD92088()
{
  return sub_1DCD91BC8((unint64_t *)&qword_1EBE85C38, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
}

uint64_t sub_1DCD920D0()
{
  return sub_1DCD91BC8(&qword_1EAB02938, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
}

uint64_t sub_1DCD92118()
{
  return sub_1DCD91BC8((unint64_t *)&unk_1EBE85C40, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
}

uint64_t sub_1DCD92160(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD921C8(char *a1, char *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
  {
    uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, &a1[*(int *)(v11 + 20)], v4);
    v12(v7, &a2[*(int *)(v11 + 20)], v4);
    sub_1DCD91BC8(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v13 = sub_1DD0483B8();
    unint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1DCD92380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v17 - v9;
  sub_1DCD8D4D4(*(void *)a1, *(void *)a2);
  if ((v11 & 1) != 0
    && (sub_1DCFB51B4(*(void **)(a1 + 8), *(void **)(a2 + 8)) & 1) != 0
    && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16))
  {
    uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
    char v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v13(v10, a1 + *(int *)(v12 + 28), v4);
    v13(v7, a2 + *(int *)(v12 + 28), v4);
    sub_1DCD91BC8(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v14 = sub_1DD0483B8();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    v15(v10, v4);
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1DCD92558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if (*(_DWORD *)a1 == *(_DWORD *)a2 && *(unsigned __int8 *)(a1 + 4) == *(unsigned __int8 *)(a2 + 4))
  {
    uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig.DomainConfig(0);
    char v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v13(v10, a1 + *(int *)(v12 + 24), v4);
    v13(v7, a2 + *(int *)(v12 + 24), v4);
    sub_1DCD91BC8(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v11 = sub_1DD0483B8();
    char v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1DCD92720(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_DomainSearchConfig(0);
    char v13 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v13(v10, &a1[*(int *)(v12 + 24)], v4);
    v13(v7, &a2[*(int *)(v12 + 24)], v4);
    sub_1DCD91BC8(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v11 = sub_1DD0483B8();
    char v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1DCD928E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v68 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v67 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v66 = (char *)&v61 - v7;
  uint64_t v74 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v65 = (_DWORD *)((char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02948);
  MEMORY[0x1F4188790](v70);
  uint64_t v75 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B8);
  MEMORY[0x1F4188790](v10 - 8);
  size_t v69 = (_DWORD *)((char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v71 = (uint64_t)&v61 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v73 = (uint64_t)&v61 - v15;
  uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  uint64_t v76 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02950);
  MEMORY[0x1F4188790](v19);
  char v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB025B0);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v61 - v26;
  MEMORY[0x1F4188790](v28);
  unint64_t v30 = (char *)&v61 - v29;
  sub_1DCD8DA4C(*(void *)a1, *(void *)a2);
  if ((v31 & 1) == 0
    || *(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8)
    || *(unsigned __int8 *)(a1 + 9) != *(unsigned __int8 *)(a2 + 9))
  {
    goto LABEL_19;
  }
  uint64_t v61 = v4;
  uint64_t v32 = a1;
  uint64_t v33 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v34 = *(int *)(v33 + 32);
  uint64_t v63 = v32;
  sub_1DCD2889C(v32 + v34, (uint64_t)v30, &qword_1EAB025B0);
  uint64_t v62 = v33;
  uint64_t v35 = *(int *)(v33 + 32);
  uint64_t v64 = a2;
  sub_1DCD2889C(a2 + v35, (uint64_t)v27, &qword_1EAB025B0);
  uint64_t v36 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_1DCD2889C((uint64_t)v30, (uint64_t)v21, &qword_1EAB025B0);
  sub_1DCD2889C((uint64_t)v27, v36, &qword_1EAB025B0);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
  if (v37((uint64_t)v21, 1, v16) == 1)
  {
    sub_1DCD2479C((uint64_t)v27, &qword_1EAB025B0);
    sub_1DCD2479C((uint64_t)v30, &qword_1EAB025B0);
    if (v37(v36, 1, v16) == 1)
    {
      sub_1DCD2479C((uint64_t)v21, &qword_1EAB025B0);
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v38 = &qword_1EAB02950;
    uint64_t v39 = (uint64_t)v21;
LABEL_18:
    sub_1DCD2479C(v39, v38);
    goto LABEL_19;
  }
  sub_1DCD2889C((uint64_t)v21, (uint64_t)v24, &qword_1EAB025B0);
  if (v37(v36, 1, v16) == 1)
  {
    sub_1DCD2479C((uint64_t)v27, &qword_1EAB025B0);
    sub_1DCD2479C((uint64_t)v30, &qword_1EAB025B0);
    sub_1DCD8B308((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
    goto LABEL_9;
  }
  sub_1DCD92160(v36, (uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  char v40 = sub_1DCD92380((uint64_t)v24, (uint64_t)v18);
  sub_1DCD8B308((uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  sub_1DCD2479C((uint64_t)v27, &qword_1EAB025B0);
  sub_1DCD2479C((uint64_t)v30, &qword_1EAB025B0);
  sub_1DCD8B308((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig);
  sub_1DCD2479C((uint64_t)v21, &qword_1EAB025B0);
  if ((v40 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_11:
  uint64_t v41 = v62;
  uint64_t v42 = v73;
  sub_1DCD2889C(v63 + *(int *)(v62 + 36), v73, &qword_1EAB025B8);
  uint64_t v43 = v71;
  sub_1DCD2889C(v64 + *(int *)(v41 + 36), v71, &qword_1EAB025B8);
  uint64_t v44 = v75;
  uint64_t v45 = v75 + *(int *)(v70 + 48);
  sub_1DCD2889C(v42, v75, &qword_1EAB025B8);
  sub_1DCD2889C(v43, v45, &qword_1EAB025B8);
  uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  uint64_t v47 = v74;
  if (v46(v44, 1, v74) != 1)
  {
    uint64_t v57 = v69;
    sub_1DCD2889C(v44, (uint64_t)v69, &qword_1EAB025B8);
    if (v46(v45, 1, v47) == 1)
    {
      sub_1DCD2479C(v43, &qword_1EAB025B8);
      sub_1DCD2479C(v42, &qword_1EAB025B8);
      sub_1DCD8B308((uint64_t)v57, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
      goto LABEL_17;
    }
    uint64_t v59 = v65;
    sub_1DCD92160(v45, (uint64_t)v65, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
    if (*v57 != *v59)
    {
      sub_1DCD8B308((uint64_t)v59, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
      sub_1DCD2479C(v43, &qword_1EAB025B8);
      sub_1DCD2479C(v42, &qword_1EAB025B8);
      sub_1DCD8B308((uint64_t)v57, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
      uint64_t v39 = v44;
      uint64_t v38 = &qword_1EAB025B8;
      goto LABEL_18;
    }
    sub_1DCD91BC8(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    uint64_t v48 = v61;
    char v60 = sub_1DD0483B8();
    sub_1DCD8B308((uint64_t)v59, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
    sub_1DCD2479C(v43, &qword_1EAB025B8);
    sub_1DCD2479C(v42, &qword_1EAB025B8);
    sub_1DCD8B308((uint64_t)v57, type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig);
    sub_1DCD2479C(v44, &qword_1EAB025B8);
    if (v60) {
      goto LABEL_14;
    }
LABEL_19:
    char v55 = 0;
    return v55 & 1;
  }
  sub_1DCD2479C(v43, &qword_1EAB025B8);
  sub_1DCD2479C(v42, &qword_1EAB025B8);
  if (v46(v45, 1, v47) != 1)
  {
LABEL_17:
    uint64_t v38 = &qword_1EAB02948;
    uint64_t v39 = v44;
    goto LABEL_18;
  }
  sub_1DCD2479C(v44, &qword_1EAB025B8);
  uint64_t v48 = v61;
LABEL_14:
  uint64_t v49 = v62;
  uint64_t v50 = v68;
  int64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
  uint64_t v52 = v66;
  v51(v66, v63 + *(int *)(v62 + 28), v48);
  uint64_t v53 = v64 + *(int *)(v49 + 28);
  uint64_t v54 = v67;
  v51(v67, v53, v48);
  sub_1DCD91BC8(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
  char v55 = sub_1DD0483B8();
  unint64_t v56 = *(void (**)(char *, uint64_t))(v50 + 8);
  v56(v54, v48);
  v56(v52, v48);
  return v55 & 1;
}

uint64_t sub_1DCD93254(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1DCD932BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1DD047BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_WORD *sub_1DCD9338C(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *sub_1DCD93408(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_WORD *sub_1DCD9348C(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *sub_1DCD93508(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCD9358C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD935A0);
}

uint64_t sub_1DCD935A0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 24)];
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DCD93650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD93664);
}

unsigned char *sub_1DCD93664(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCD93708()
{
  return sub_1DCD93BEC();
}

void *sub_1DCD93714(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1DCD937E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_1DD047BF8();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t sub_1DCD93850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCD938D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCD93958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCD939DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCD93A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCD93A74);
}

uint64_t sub_1DCD93A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 4);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DCD93B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCD93B38);
}

uint64_t sub_1DCD93B38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 4) = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCD93BDC()
{
  return sub_1DCD93BEC();
}

uint64_t sub_1DCD93BEC()
{
  uint64_t result = sub_1DD047BF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_1DCD93C84@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_embeddingLength);
  *a2 = result;
  return result;
}

void *sub_1DCD93CC0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12 = v10;
  uint64_t v55 = a5;
  uint64_t v56 = a7;
  uint64_t v59 = a6;
  uint64_t v60 = a4;
  uint64_t v54 = a3;
  uint64_t v61 = a10;
  uint64_t v57 = *v10;
  uint64_t v16 = sub_1DD048068();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = objc_allocWithZone((Class)VIFaissIndex);
  swift_bridgeObjectRetain();
  unint64_t v58 = a2;
  id v21 = sub_1DCD9557C();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v10;
LABEL_13:
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v22;
  }
  uint64_t v23 = v21;
  uint64_t v49 = a1;
  uint64_t v50 = v17;
  int64_t v51 = v19;
  uint64_t v52 = v16;
  uint64_t v53 = 0;
  uint64_t v24 = v60;
  v12[4] = v54;
  v12[5] = v24;
  uint64_t v25 = v59;
  void v12[6] = v55;
  v12[7] = v25;
  v12[8] = v56;
  v12[9] = a8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB029E8);
  uint64_t v26 = swift_allocObject();
  *(_DWORD *)(v26 + 24) = 0;
  *(void *)(v26 + 16) = v23;
  v12[2] = v26;
  id v27 = v23;
  uint64_t v28 = sub_1DCD9416C();
  id v30 = v29;
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  uint64_t v22 = v12;
  if (!v32)
  {
    char v33 = 4;
LABEL_12:
    swift_bridgeObjectRelease();
    sub_1DCD94F64();
    swift_allocError();
    *uint64_t v34 = v33;
    swift_willThrow();

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (!*(void *)(v32 + 16))
  {
    char v33 = 4;
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v30 != objc_msgSend(v27, sel_embeddingLength))
  {
    char v33 = 0;
    goto LABEL_11;
  }
  v12[10] = v28;
  v12[11] = v30;
  v12[12] = v32;
  if ((uint64_t)objc_msgSend(v27, sel_numberOfIndexedEmbeddings) < 101)
  {
    *((unsigned char *)v12 + 24) = 0;
    uint64_t v36 = (uint64_t)v51;
    sub_1DCDB40EC((uint64_t)v51);
    id v37 = v27;
    unint64_t v38 = v58;
    swift_bridgeObjectRetain();
    id v39 = v37;
    char v40 = sub_1DD048048();
    os_log_type_t v41 = sub_1DD048858();
    int v42 = v41;
    BOOL v43 = os_log_type_enabled(v40, v41);
    uint64_t v44 = v52;
    if (v43)
    {
      uint64_t v45 = swift_slowAlloc();
      LODWORD(v60) = v42;
      uint64_t v46 = v45;
      uint64_t v61 = swift_slowAlloc();
      uint64_t v63 = v61;
      *(_DWORD *)uint64_t v46 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_1DCED7FA0(v49, v38, &v63);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2048;
      id v47 = objc_msgSend(v39, sel_numberOfIndexedEmbeddings);

      uint64_t v62 = (uint64_t)v47;
      sub_1DD048A28();

      _os_log_impl(&dword_1DCCF9000, v40, (os_log_type_t)v60, "FaissCodebook is using codebook in path%s\nwith size %ld", (uint8_t *)v46, 0x16u);
      uint64_t v48 = v61;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v48, -1, -1);
      MEMORY[0x1E01B07E0](v46, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v36, v44);
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    *((unsigned char *)v12 + 24) = 1;
  }
  return v22;
}

uint64_t sub_1DCD9416C()
{
  uint64_t v0 = sub_1DD046388();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v4 - 8);
  int v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD046478();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v8 + 56))(v6, 1, 1, v7, v9);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F276C0], v0);
  swift_bridgeObjectRetain();
  sub_1DD046468();
  uint64_t v12 = sub_1DD046488();
  unint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  sub_1DD0461B8();
  swift_allocObject();
  sub_1DD0461A8();
  sub_1DCD95684();
  sub_1DD046198();
  swift_release();
  uint64_t v16 = v24[0];
  int64_t v17 = *(void *)(v24[0] + 16);
  if (v17)
  {
    v24[0] = MEMORY[0x1E4FBC860];
    sub_1DCFC5960(0, v17, 0);
    uint64_t v18 = 0;
    uint64_t v19 = v24[0];
    do
    {
      uint64_t v20 = *(void *)(v16 + 8 * v18 + 32);
      v24[0] = v19;
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v22 = *(void *)(v19 + 24);
      swift_bridgeObjectRetain();
      if (v21 >= v22 >> 1)
      {
        sub_1DCFC5960(v22 > 1, v21 + 1, 1);
        uint64_t v19 = v24[0];
      }
      ++v18;
      *(void *)(v19 + 16) = v21 + 1;
      *(void *)(v19 + 8 * v21 + 32) = v20;
    }
    while (v17 != v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = sub_1DCD95490(v19);
  sub_1DCD21954(v12, v14);
  return v23;
}

void sub_1DCD94500(uint64_t a1, char *a2)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_1DD0471B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB029C0);
  MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v12);
  int64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return;
  }
  uint64_t v61 = v10;
  uint64_t v62 = v7;
  id v63 = v16;
  uint64_t v64 = a2;
  uint64_t v65 = (char *)&v59 - v14;
  uint64_t v66 = v15;
  uint64_t v67 = v13;
  unint64_t v18 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v19 = v2[2];
  uint64_t v20 = (os_unfair_lock_s *)(v19 + 24);
  uint64_t v71 = (uint64_t *)v8;
  uint64_t v72 = (id *)(v19 + 16);
  unint64_t v21 = *(os_unfair_lock_s **)(v8 + 72);
  uint64_t v70 = a1;
  swift_bridgeObjectRetain();
  unint64_t v22 = v18;
  int64_t v68 = v17;
  int64_t v23 = v17;
  do
  {
    uint64_t v24 = *(void *)(sub_1DD046CF8() + 16);
    swift_bridgeObjectRelease();
    os_unfair_lock_lock(v20);
    sub_1DCD93C84(v72, &v74);
    if (v4) {
      goto LABEL_51;
    }
    uint64_t v4 = 0;
    os_unfair_lock_unlock(v20);
    if (v24 != v74)
    {
      swift_bridgeObjectRelease();
      sub_1DCD94F64();
      swift_allocError();
      char v32 = 2;
      goto LABEL_19;
    }
    v22 += (unint64_t)v21;
    --v23;
  }
  while (v23);
  os_unfair_lock_t v60 = v20;
  uint64_t v69 = 0;
  swift_bridgeObjectRelease();
  uint64_t v25 = v2[8];
  uint64_t v26 = v2[9];
  swift_bridgeObjectRetain();
  unint64_t v27 = v18;
  int64_t v28 = v68;
  while (2)
  {
    if (sub_1DD047168() != v25 || v30 != v26)
    {
      char v29 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v29) {
        goto LABEL_8;
      }
      swift_bridgeObjectRelease();
      sub_1DCD94F64();
      swift_allocError();
      char v32 = 1;
LABEL_19:
      *uint64_t v31 = v32;
      swift_willThrow();
      return;
    }
    swift_bridgeObjectRelease();
LABEL_8:
    v27 += (unint64_t)v21;
    if (--v28) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  unint64_t v74 = MEMORY[0x1E4FBC860];
  char v33 = v71 + 2;
  uint64_t v71 = (uint64_t *)v71[2];
  swift_bridgeObjectRetain();
  int64_t v34 = v68;
  uint64_t v35 = v61;
  uint64_t v36 = v62;
  do
  {
    ((void (*)(char *, unint64_t, uint64_t))v71)(v35, v18, v36);
    uint64_t v37 = sub_1DD046CF8();
    ((void (*)(char *, uint64_t))*(v33 - 1))(v35, v36);
    sub_1DCFDEAC4(v37);
    v18 += (unint64_t)v21;
    --v34;
  }
  while (v34);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851F8);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1DD04EF60;
  *(void *)(v38 + 32) = v68;
  unint64_t v21 = v60;
  os_unfair_lock_lock(v60);
  uint64_t v20 = (os_unfair_lock_s *)v72;
  uint64_t v39 = v69;
  sub_1DCD93C84(v72, &v73);
  if (!v39)
  {
    uint64_t v40 = 0;
    os_unfair_lock_unlock(v21);
    *(void *)(v38 + 40) = v73;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86898);
    sub_1DCD52850(&qword_1EAB029D0, &qword_1EBE86898);
    os_log_type_t v41 = v65;
    sub_1DD048088();
    sub_1DCD95648(0, &qword_1EBE853A0);
    (*(void (**)(id, char *, uint64_t))(v66 + 16))(v63, v41, v67);
    sub_1DCD52850(&qword_1EAB029D8, &qword_1EAB029C0);
    int v42 = (void *)sub_1DD048828();
    uint64_t v71 = &v59;
    MEMORY[0x1F4188790](v42);
    BOOL v43 = v64;
    os_unfair_lock_lock(v21);
    sub_1DCD94FB8((void **)v20, (uint64_t *)&v74);
    os_unfair_lock_unlock(v21);
    id v63 = v42;
    unint64_t v44 = v74;
    if (v74 >> 62) {
      goto LABEL_48;
    }
    int64_t v45 = *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v43)
    {
      uint64_t v46 = sub_1DCD9525C(0, v45, (uint64_t)v43, v44, (uint64_t)v43);
      int64_t v47 = *(void *)(v46 + 16);
      if (!v47)
      {
LABEL_46:
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
        return;
      }
      uint64_t v48 = (char *)MEMORY[0x1E4FBC860];
      unint64_t v74 = MEMORY[0x1E4FBC860];
      sub_1DCFC5980(0, v47, 0);
      uint64_t v49 = 0;
      uint64_t v50 = (id *)v74;
      uint64_t v64 = (char *)v46;
      uint64_t v69 = v40;
      uint64_t v70 = v46 + 32;
      int64_t v68 = v47;
      while (1)
      {
        uint64_t v71 = v49;
        unint64_t v44 = *(void *)(v70 + 8 * (void)v49);
        if (v44 >> 62) {
          break;
        }
        uint64_t v40 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        uint64_t v72 = v50;
        if (v40) {
          goto LABEL_26;
        }
LABEL_42:
        BOOL v43 = v48;
LABEL_43:
        swift_bridgeObjectRelease_n();
        uint64_t v50 = v72;
        unint64_t v74 = (unint64_t)v72;
        unint64_t v58 = (unint64_t)v72[2];
        unint64_t v57 = (unint64_t)v72[3];
        if (v58 >= v57 >> 1)
        {
          sub_1DCFC5980(v57 > 1, v58 + 1, 1);
          uint64_t v50 = (id *)v74;
        }
        uint64_t v49 = (uint64_t *)((char *)v71 + 1);
        v50[2] = (id)(v58 + 1);
        v50[v58 + 4] = v43;
        uint64_t v48 = (char *)MEMORY[0x1E4FBC860];
        if (v49 == (uint64_t *)v68) {
          goto LABEL_46;
        }
      }
      swift_bridgeObjectRetain_n();
      uint64_t v40 = sub_1DD048CC8();
      swift_bridgeObjectRelease();
      uint64_t v72 = v50;
      if (!v40) {
        goto LABEL_42;
      }
LABEL_26:
      uint64_t v51 = 4;
      BOOL v43 = v48;
      while (1)
      {
        uint64_t v20 = (os_unfair_lock_s *)(v51 - 4);
        id v52 = (v44 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x1E01AE890](v51 - 4, v44)
            : *(id *)(v44 + 8 * v51);
        uint64_t v53 = v52;
        unint64_t v21 = (os_unfair_lock_s *)(v51 - 3);
        if (__OFADD__(v20, 1)) {
          break;
        }
        if (objc_msgSend(v52, sel_isValid))
        {
          id v54 = objc_msgSend(v53, sel_identifier);
          if (((unint64_t)v54 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          uint64_t v20 = (os_unfair_lock_s *)v54;
          if ((unint64_t)v54 >> 32) {
            goto LABEL_50;
          }

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v43 = sub_1DCE9F550(0, *((void *)v43 + 2) + 1, 1, v43);
          }
          unint64_t v56 = *((void *)v43 + 2);
          unint64_t v55 = *((void *)v43 + 3);
          if (v56 >= v55 >> 1) {
            BOOL v43 = sub_1DCE9F550((char *)(v55 > 1), v56 + 1, 1, v43);
          }
          *((void *)v43 + 2) = v56 + 1;
          *(_DWORD *)&v43[4 * v56 + 32] = v20;
        }
        else
        {
        }
        ++v51;
        if (v21 == (os_unfair_lock_s *)v40) {
          goto LABEL_43;
        }
      }
      __break(1u);
LABEL_48:
      swift_bridgeObjectRetain();
      int64_t v45 = sub_1DD048CC8();
      swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_50:
    sub_1DD048C98();
    __break(1u);
LABEL_51:
    os_unfair_lock_unlock(v20);
    __break(1u);
  }
  os_unfair_lock_unlock(v21);
  __break(1u);
}

void sub_1DCD94DEC(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = *a1;
  v12[0] = 0;
  id v6 = objc_msgSend(v5, sel_searchWithQuery_numberOfNearestNeighbors_options_error_, a2, a3, 1, v12);
  id v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    sub_1DCD95648(0, (unint64_t *)&qword_1EAB029E0);
    uint64_t v9 = sub_1DD0486B8();
    id v10 = v7;

    *a4 = v9;
  }
  else
  {
    id v11 = v12[0];
    sub_1DD046378();

    swift_willThrow();
  }
}

uint64_t sub_1DCD94EE8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FaissCodebook()
{
  return self;
}

unint64_t sub_1DCD94F64()
{
  unint64_t result = qword_1EAB029C8;
  if (!qword_1EAB029C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB029C8);
  }
  return result;
}

void sub_1DCD94FB8(void **a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1DCD94DEC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1DCD94FD4@<X0>(int64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int64_t v7 = a1 + a3;
  if (__OFADD__(a1, a3))
  {
    __break(1u);
LABEL_32:
    if (v5 < 0) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = a4;
    }
    swift_bridgeObjectRetain();
    int64_t v9 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (v9 >= v7) {
      int64_t v9 = v7;
    }
    if (v9 < v4) {
      goto LABEL_43;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (v8 >= v4) {
      goto LABEL_8;
    }
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v5 = a2;
  uint64_t v4 = a1;
  a4 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v6 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_32;
  }
  uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v8 >= v7) {
    int64_t v9 = a1 + a3;
  }
  else {
    int64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9 < a1) {
    goto LABEL_43;
  }
  if (v8 < a1) {
    goto LABEL_39;
  }
LABEL_8:
  if (v4 < 0)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v9) {
    goto LABEL_41;
  }
  if (v9 < 0)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if ((v5 & 0xC000000000000001) != 0 && v9 != v4)
  {
    if (v9 > (unint64_t)v4)
    {
      sub_1DCD95648(0, (unint64_t *)&qword_1EAB029E0);
      uint64_t v10 = v4;
      do
      {
        uint64_t v11 = v10 + 1;
        sub_1DD048BC8();
        uint64_t v10 = v11;
      }
      while (v9 != v11);
      goto LABEL_19;
    }
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_19:
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1DD048CD8();
    uint64_t v6 = v12;
    uint64_t v4 = v13;
    int64_t v9 = v14;
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_24;
    }
LABEL_23:
    uint64_t v15 = sub_1DCF4DA24(v8, v6, v4, v9);
    goto LABEL_30;
  }
  uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8;
  uint64_t v6 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  int64_t v9 = (2 * v9) | 1;
  swift_bridgeObjectRetain();
  if ((v9 & 1) == 0) {
    goto LABEL_23;
  }
LABEL_24:
  sub_1DD048FD8();
  swift_unknownObjectRetain_n();
  uint64_t v16 = swift_dynamicCastClass();
  if (!v16)
  {
    swift_unknownObjectRelease();
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = *(void *)(v16 + 16);
  swift_release();
  if (__OFSUB__((unint64_t)v9 >> 1, v4)) {
    goto LABEL_45;
  }
  if (v17 != ((unint64_t)v9 >> 1) - v4)
  {
LABEL_46:
    swift_unknownObjectRelease();
    goto LABEL_23;
  }
  uint64_t v15 = swift_dynamicCastClass();
  if (!v15)
  {
    swift_unknownObjectRelease();
    uint64_t v15 = MEMORY[0x1E4FBC860];
  }
LABEL_30:
  swift_unknownObjectRelease();
  return v15;
}

uint64_t sub_1DCD9525C(int64_t a1, int64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  int64_t v9 = a1;
  int64_t v10 = 0;
  int64_t v11 = a1;
  while (1)
  {
    BOOL v12 = v11 <= a2;
    if (a3 > 0) {
      BOOL v12 = v11 >= a2;
    }
    if (v12) {
      break;
    }
    BOOL v13 = __OFADD__(v11, a3);
    v11 += a3;
    if (v13) {
      int64_t v11 = (v11 >> 63) ^ 0x8000000000000000;
    }
    BOOL v13 = __OFADD__(v10++, 1);
    if (v13)
    {
      __break(1u);
      break;
    }
  }
  uint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DCFC59A0(0, v10, 0);
  if (v10)
  {
    while (1)
    {
      BOOL v15 = v9 <= a2;
      if (a3 > 0) {
        BOOL v15 = v9 >= a2;
      }
      if (v15) {
        break;
      }
      if (__OFADD__(v9, a3)) {
        int64_t v16 = ((v9 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v16 = v9 + a3;
      }
      uint64_t result = sub_1DCD94FD4(v9, a4, a5, v9 + a3);
      if (v6) {
        goto LABEL_37;
      }
      uint64_t v17 = result;
      uint64_t v6 = 0;
      unint64_t v19 = *(void *)(v29 + 16);
      unint64_t v18 = *(void *)(v29 + 24);
      if (v19 >= v18 >> 1) {
        uint64_t result = sub_1DCFC59A0(v18 > 1, v19 + 1, 1);
      }
      *(void *)(v29 + 16) = v19 + 1;
      *(void *)(v29 + 8 * v19 + 32) = v17;
      int64_t v9 = v16;
      if (!--v10) {
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  else
  {
    int64_t v16 = v9;
LABEL_23:
    BOOL v20 = v16 <= a2;
    if (a3 > 0) {
      BOOL v20 = v16 >= a2;
    }
    if (v20)
    {
LABEL_26:
      swift_bridgeObjectRelease();
    }
    else
    {
      while (1)
      {
        int64_t v21 = __OFADD__(v16, a3) ? ((v16 + a3) >> 63) ^ 0x8000000000000000 : v16 + a3;
        uint64_t v22 = sub_1DCD94FD4(v16, a4, a5, v16 + a3);
        if (v6) {
          break;
        }
        uint64_t v23 = v22;
        uint64_t v6 = 0;
        unint64_t v25 = *(void *)(v29 + 16);
        unint64_t v24 = *(void *)(v29 + 24);
        if (v25 >= v24 >> 1) {
          sub_1DCFC59A0(v24 > 1, v25 + 1, 1);
        }
        *(void *)(v29 + 16) = v25 + 1;
        *(void *)(v29 + 8 * v25 + 32) = v23;
        BOOL v26 = v21 <= a2;
        if (a3 > 0) {
          BOOL v26 = v21 >= a2;
        }
        int64_t v16 = v21;
        if (v26) {
          goto LABEL_26;
        }
      }
LABEL_37:
      swift_bridgeObjectRelease();
      swift_release();
    }
    return v29;
  }
  return result;
}

uint64_t sub_1DCD95490(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    return v1;
  }
  if (v1 == 1)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v1; ++i)
    {
      uint64_t v5 = swift_bridgeObjectRetain();
      sub_1DCFDEAC4(v5);
    }
    swift_bridgeObjectRelease_n();
    return v1;
  }
  uint64_t v2 = 5;
  while (1)
  {
    uint64_t v3 = v2 - 3;
    if (__OFADD__(v2 - 4, 1)) {
      break;
    }
    if (*(void *)(*(void *)(result + 8 * v2) + 16) != *(void *)(*(void *)(result + 32) + 16)) {
      goto LABEL_13;
    }
    ++v2;
    if (v3 == v1) {
      goto LABEL_7;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

id sub_1DCD9557C()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initWithContentsOfFile_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_1DD046378();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1DCD95648(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1DCD95684()
{
  unint64_t result = qword_1EAB029F0;
  if (!qword_1EAB029F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB029F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TrialWrapper.NamespaceName(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FaissCodebook.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD95834);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaissCodebook.Error()
{
  return &type metadata for FaissCodebook.Error;
}

unint64_t sub_1DCD95870()
{
  unint64_t result = qword_1EAB029F8;
  if (!qword_1EAB029F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB029F8);
  }
  return result;
}

void *sub_1DCD958C4()
{
  uint64_t v1 = v0[1];
  unint64_t v2 = v0[2];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return 0;
  }
  unsigned int v4 = (void *)v0[3];
  if (v1 == 0xD000000000000019 && v2 == 0x80000001DD068F10) {
    return 0;
  }
  if (sub_1DD048FA8()) {
    return 0;
  }
  id v6 = v4;
  return v4;
}

uint64_t sub_1DCD95950()
{
  return *(void *)v0;
}

void *sub_1DCD9595C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return 0;
  }
  unsigned int v4 = *(void **)v0;
  if (v1 == 0xD000000000000019 && v2 == 0x80000001DD068F10) {
    return 0;
  }
  if (sub_1DD048FA8()) {
    return 0;
  }
  id v6 = v4;
  return v4;
}

uint64_t sub_1DCD959E8()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_1DCD959F4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DCD95A24()
{
  return *(unsigned __int8 *)(v0 + 41);
}

void *sub_1DCD95A2C()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t sub_1DCD95A54()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DCD95A84()
{
  return *(unsigned __int8 *)(v0 + 32);
}

void sub_1DCD95A8C(id a1@<X0>, uint64_t a2@<X8>)
{
  id v2 = a1;
  if (!a1)
  {
    id v4 = 0;
LABEL_6:
    unint64_t v8 = 0xE000000000000000;
    goto LABEL_7;
  }
  id v4 = objc_msgSend(a1, sel_queryID);
  id v5 = objc_msgSend(v2, sel_applicationIdentifier);
  if (!v5)
  {
    id v2 = 0;
    goto LABEL_6;
  }
  id v6 = v5;
  id v2 = (id)sub_1DD048408();
  unint64_t v8 = v7;

LABEL_7:
  id v9 = objc_allocWithZone(MEMORY[0x1E4F9A450]);
  swift_bridgeObjectRetain();
  id v10 = objc_msgSend(v9, sel_initWithInput_triggerEvent_queryId_, 0, 21, v4);
  int64_t v11 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setOriginatingApp_, v11);

  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v10;
  *(unsigned char *)(a2 + 32) = 0;
}

void sub_1DCD95B9C(void *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1DD046598();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v56 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v57 = (uint64_t)&v50 - v16;
  long long v17 = a2[9];
  long long v18 = a2[7];
  long long v80 = a2[8];
  long long v81 = v17;
  long long v19 = a2[9];
  long long v82 = a2[10];
  long long v20 = a2[5];
  long long v21 = a2[3];
  long long v76 = a2[4];
  long long v77 = v20;
  long long v22 = a2[5];
  long long v23 = a2[7];
  long long v78 = a2[6];
  long long v79 = v23;
  long long v24 = a2[1];
  long long v72 = *a2;
  long long v73 = v24;
  long long v25 = a2[3];
  long long v27 = *a2;
  long long v26 = a2[1];
  long long v74 = a2[2];
  long long v75 = v25;
  long long v68 = v80;
  long long v69 = v19;
  long long v70 = a2[10];
  long long v64 = v76;
  long long v65 = v22;
  long long v66 = v78;
  long long v67 = v18;
  long long v60 = v27;
  long long v61 = v26;
  uint64_t v83 = *((void *)a2 + 22);
  uint64_t v71 = *((void *)a2 + 22);
  long long v62 = v74;
  long long v63 = v21;
  uint64_t v28 = VisualUnderstanding.imageRegions.getter();
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    uint64_t v52 = v11;
    uint64_t v53 = v10;
    id v54 = a1;
    uint64_t v55 = a3;
    *(void *)&long long v60 = MEMORY[0x1E4FBC860];
    sub_1DD048C58();
    uint64_t v30 = v28 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v51 = v12;
    uint64_t v31 = *(void *)(v12 + 72);
    do
    {
      sub_1DCD36E7C(v30, (uint64_t)v14);
      sub_1DCFA48B8(@"glyph");
      sub_1DCD96118((uint64_t)v14);
      sub_1DD048C38();
      sub_1DD048C68();
      sub_1DD048C78();
      sub_1DD048C48();
      v30 += v31;
      --v29;
    }
    while (v29);
    unint64_t v32 = v60;
    swift_bridgeObjectRelease();
    a1 = v54;
    a3 = v55;
    uint64_t v11 = v52;
    id v10 = v53;
    uint64_t v12 = v51;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v32 = MEMORY[0x1E4FBC860];
  }
  long long v68 = v80;
  long long v69 = v81;
  long long v70 = v82;
  uint64_t v71 = v83;
  long long v64 = v76;
  long long v65 = v77;
  long long v66 = v78;
  long long v67 = v79;
  long long v60 = v72;
  long long v61 = v73;
  long long v62 = v74;
  long long v63 = v75;
  uint64_t v33 = VisualUnderstanding.imageRegions.getter();
  sub_1DCD43B94((uint64_t)&v72);
  if (*(void *)(v33 + 16))
  {
    sub_1DCD36E7C(v33 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v10);
    uint64_t v34 = 0;
  }
  else
  {
    uint64_t v34 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v34, 1, v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1DCD36FAC((uint64_t)v10);
    uint64_t v35 = MEMORY[0x1E4FBC860];
    if (a1) {
      goto LABEL_11;
    }
LABEL_14:
    uint64_t v39 = 0;
    id v36 = 0;
LABEL_16:
    unint64_t v41 = 0xE000000000000000;
    goto LABEL_17;
  }
  uint64_t v42 = v57;
  sub_1DCD36EE0((uint64_t)v10, v57);
  id v43 = sub_1DCFA48B8(@"infoPanel");
  unint64_t v44 = v56;
  sub_1DD046588();
  sub_1DD046578();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v59);
  int64_t v45 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  objc_msgSend(v43, sel_setIdentifier_, v45);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1DD050EE0;
  *(void *)(v46 + 32) = v43;
  *(void *)&long long v60 = v46;
  sub_1DD0486D8();
  uint64_t v35 = v60;
  sub_1DCD96118(v42);
  if (!a1) {
    goto LABEL_14;
  }
LABEL_11:
  id v36 = objc_msgSend(a1, sel_queryID);
  id v37 = objc_msgSend(a1, sel_applicationIdentifier);
  if (!v37)
  {
    uint64_t v39 = 0;
    goto LABEL_16;
  }
  uint64_t v38 = v37;
  uint64_t v39 = sub_1DD048408();
  unint64_t v41 = v40;

LABEL_17:
  *(void *)&long long v60 = v35;
  sub_1DCFDF4B0(v32);
  id v47 = objc_allocWithZone(MEMORY[0x1E4F9A550]);
  sub_1DCD96174();
  uint64_t v48 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  id v49 = objc_msgSend(v47, sel_initWithSuggestions_, v48);

  *(void *)a3 = v36;
  *(void *)(a3 + 8) = v39;
  *(void *)(a3 + 16) = v41;
  *(void *)(a3 + 24) = v49;
  *(unsigned char *)(a3 + 32) = 0;
}

uint64_t sub_1DCD96118(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VisualUnderstanding.ImageRegion();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1DCD96174()
{
  unint64_t result = qword_1EBE85060;
  if (!qword_1EBE85060)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE85060);
  }
  return result;
}

void destroy for OnDeviceFlowEndEvent(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for OnDeviceFlowEndEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  id v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  id v5 = v3;
  swift_bridgeObjectRetain();
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for OnDeviceFlowEndEvent(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for OnDeviceFlowEndEvent(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  id v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnDeviceFlowEndEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnDeviceFlowEndEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParseEndEvent()
{
  return &type metadata for ParseEndEvent;
}

uint64_t assignWithCopy for OnDeviceFlowStartEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a2 + 24);
  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ParseStartEvent()
{
  return &type metadata for ParseStartEvent;
}

void destroy for OnDeviceFlowStartEvent(uint64_t a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 24);
}

ValueMetadata *type metadata accessor for DurationEvent()
{
  return &type metadata for DurationEvent;
}

uint64_t initializeWithCopy for OnDeviceFlowStartEvent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v3 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ResultEvent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 24);
  id v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for OnDeviceFlowStartEvent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnDeviceFlowStartEvent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnDeviceFlowStartEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParseResultEvent()
{
  return &type metadata for ParseResultEvent;
}

uint64_t sub_1DCD966B0(char *a1, uint64_t a2, char *a3, void (*a4)(void, void), uint64_t a5)
{
  uint64_t v102 = a5;
  uint64_t v103 = a2;
  unint64_t v107 = a1;
  uint64_t v108 = a4;
  uint64_t v98 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement(0);
  uint64_t v105 = *(uint8_t **)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  uint64_t v99 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v100 = (uint64_t)&v97 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v104 = (uint64_t *)((char *)&v97 - v10);
  uint64_t v11 = sub_1DD048068();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v109 = v11;
  uint64_t v110 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v106 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v97 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v101 = (char *)&v97 - v18;
  MEMORY[0x1F4188790](v19);
  long long v21 = (char *)&v97 - v20;
  MEMORY[0x1F4188790](v22);
  long long v24 = (char *)&v97 - v23;
  MEMORY[0x1F4188790](v25);
  long long v27 = (char *)&v97 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v97 - v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86078);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v33 = (char *)&v97 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  id v37 = (char *)&v97 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v38 = *a3;
  sub_1DCD2889C((uint64_t)v108, (uint64_t)v33, &qword_1EBE86078);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
  {
    sub_1DCD2479C((uint64_t)v33, &qword_1EBE86078);
LABEL_10:
    uint64_t v52 = v110;
    sub_1DCDB40EC((uint64_t)v16);
    uint64_t v53 = (uint64_t)v106;
    sub_1DCDB4300((uint64_t)v106);
    id v54 = *(void (**)(char *, uint64_t))(v52 + 8);
    uint64_t v55 = v109;
    v54(v16, v109);
    unint64_t v56 = sub_1DD048048();
    os_log_type_t v57 = sub_1DD048848();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl(&dword_1DCCF9000, v56, v57, "Not enabled. Return true.", v58, 2u);
      MEMORY[0x1E01B07E0](v58, -1, -1);
    }

    v54((char *)v53, v55);
LABEL_13:
    uint64_t result = 1;
    goto LABEL_14;
  }
  uint64_t v39 = (uint64_t)v30;
  uint64_t v108 = (void (*)(void, void))v24;
  unint64_t v41 = v104;
  unint64_t v40 = v105;
  uint64_t v97 = v21;
  sub_1DCD9A384((uint64_t)v33, (uint64_t)v37, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  uint64_t v42 = (uint64_t)v37;
  if (*v37 != 1)
  {
    sub_1DCD9A4AC((uint64_t)v37, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    goto LABEL_10;
  }
  uint64_t v43 = *((void *)v37 + 2);
  uint64_t v44 = *(void *)(v43 + 16);
  uint64_t v45 = v110;
  if (!v44)
  {
    sub_1DCDB40EC(v39);
    long long v61 = v27;
    sub_1DCDB4300((uint64_t)v27);
    long long v62 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    uint64_t v63 = v109;
    v62(v39, v109);
    long long v64 = sub_1DD048048();
    os_log_type_t v65 = sub_1DD048848();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = v42;
      long long v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v67 = 0;
      _os_log_impl(&dword_1DCCF9000, v64, v65, "No requirements is specificed. Always keep the domain.", v67, 2u);
      long long v68 = v67;
      uint64_t v42 = v66;
      MEMORY[0x1E01B07E0](v68, -1, -1);
    }

    v62((uint64_t)v61, v63);
    sub_1DCD9A4AC(v42, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    goto LABEL_13;
  }
  uint64_t v106 = v37;
  uint64_t v46 = v43 + ((v40[80] + 32) & ~(unint64_t)v40[80]);
  uint64_t v47 = *((void *)v40 + 9);
  swift_bridgeObjectRetain();
  uint64_t v48 = v109;
  uint64_t v49 = (uint64_t)v41;
  uint64_t v50 = v102;
  uint64_t v51 = v103;
  while (1)
  {
    sub_1DCD9A444(v46, (uint64_t)v41, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    LOBYTE(v112) = v38;
    if ((sub_1DCD98640(v51, (unsigned __int8 *)&v112, v41, v50) & 1) == 0) {
      break;
    }
    sub_1DCD9A4AC((uint64_t)v41, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    v46 += v47;
    if (!--v44)
    {
      swift_bridgeObjectRelease();
      sub_1DCD9A4AC((uint64_t)v106, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  long long v69 = v108;
  sub_1DCDB40EC((uint64_t)v108);
  uint64_t v70 = (uint64_t)v97;
  sub_1DCDB4300((uint64_t)v97);
  uint64_t v72 = v110 + 8;
  uint64_t v71 = *(void (**)(void))(v110 + 8);
  ((void (*)(void, uint64_t))v71)(v69, v48);
  uint64_t v73 = v100;
  sub_1DCD9A444((uint64_t)v41, v100, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
  long long v74 = sub_1DD048048();
  os_log_type_t v75 = sub_1DD048848();
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = v73;
    long long v77 = (uint8_t *)swift_slowAlloc();
    uint64_t v78 = swift_slowAlloc();
    uint64_t v110 = v72;
    uint64_t v79 = v78;
    uint64_t v112 = v78;
    *(_DWORD *)long long v77 = 136315138;
    sub_1DCD9A3EC();
    uint64_t v80 = sub_1DD048FB8();
    uint64_t v111 = sub_1DCED7FA0(v80, v81, &v112);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD9A4AC(v76, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    _os_log_impl(&dword_1DCCF9000, v74, v75, "Failed to satisfy requirement: %s", v77, 0xCu);
    swift_arrayDestroy();
    uint64_t v72 = v110;
    MEMORY[0x1E01B07E0](v79, -1, -1);
    MEMORY[0x1E01B07E0](v77, -1, -1);

    uint64_t v82 = (uint64_t)v97;
    uint64_t v83 = v109;
  }
  else
  {
    sub_1DCD9A4AC(v73, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);

    uint64_t v82 = v70;
    uint64_t v83 = v48;
  }
  v71(v82);
  uint64_t v84 = (uint64_t)v99;
  uint64_t v85 = (uint64_t)v101;
  unint64_t v86 = *(void *)(v49 + 56);
  uint64_t v87 = HIBYTE(v86) & 0xF;
  if ((v86 & 0x2000000000000000) == 0) {
    uint64_t v87 = *(void *)(v49 + 48) & 0xFFFFFFFFFFFFLL;
  }
  if (v87)
  {
    swift_bridgeObjectRetain();
    char v88 = sub_1DCD9CB54();
    if (v88 != 26)
    {
      char v60 = v88;
      sub_1DCD9A4AC(v49, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
      sub_1DCD9A4AC((uint64_t)v106, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
      uint64_t result = 0;
      goto LABEL_15;
    }
    sub_1DCDB40EC(v85);
    sub_1DCD9A444(v49, v84, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    unint64_t v89 = sub_1DD048048();
    os_log_type_t v90 = sub_1DD048858();
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v110 = v72;
      uint64_t v108 = (void (*)(void, void))v71;
      uint64_t v91 = (uint8_t *)swift_slowAlloc();
      uint64_t v92 = swift_slowAlloc();
      uint64_t v112 = v92;
      *(_DWORD *)uint64_t v91 = 136315138;
      uint64_t v105 = v91 + 4;
      uint64_t v93 = v84;
      uint64_t v94 = *(void *)(v84 + 48);
      unint64_t v95 = *(void *)(v84 + 56);
      swift_bridgeObjectRetain();
      uint64_t v111 = sub_1DCED7FA0(v94, v95, &v112);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD9A4AC(v93, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
      _os_log_impl(&dword_1DCCF9000, v89, v90, "Failed to parse new_domain_if_not_meet_requirement: %s", v91, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v92, -1, -1);
      MEMORY[0x1E01B07E0](v91, -1, -1);

      v108(v101, v83);
    }
    else
    {

      sub_1DCD9A4AC(v84, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
      ((void (*)(uint64_t, uint64_t))v71)(v85, v83);
    }
    uint64_t v96 = v49;
  }
  else
  {
    uint64_t v96 = v49;
  }
  sub_1DCD9A4AC(v96, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
  sub_1DCD9A4AC((uint64_t)v106, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  uint64_t result = 0;
LABEL_14:
  char v60 = 26;
LABEL_15:
  char *v107 = v60;
  return result;
}

uint64_t sub_1DCD97140(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v2 = a2;
    if (result)
    {
      uint64_t v3 = *(void *)(a2 + 16);
      if (v3)
      {
        unint64_t v4 = 0;
        unint64_t v5 = 0;
        uint64_t v6 = (_DWORD *)(a2 + 48);
        uint64_t v7 = v3 - 1;
        uint64_t v8 = MEMORY[0x1E4FBC860];
        uint64_t v9 = MEMORY[0x1E4FBC860];
        uint64_t v28 = result;
        uint64_t v26 = v3 - 1;
        do
        {
          uint64_t v11 = *((void *)v6 - 2);
          uint64_t v10 = *((void *)v6 - 1);
          int v12 = *v6;
          uint64_t v13 = *(void *)(v8 + 16);
          unint64_t v29 = v5;
          if (v13 >= result)
          {
            if (v5 >= v13) {
              goto LABEL_30;
            }
            uint64_t v27 = 24 * v5;
            uint64_t v17 = v8 + 24 * v5;
            uint64_t v18 = *(void *)(v17 + 32);
            uint64_t v19 = *(void *)(v17 + 40);
            int v20 = *(_DWORD *)(v17 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1DCFC49A8(0, *(void *)(v9 + 16) + 1, 1);
              uint64_t v7 = v26;
            }
            unint64_t v22 = *(void *)(v9 + 16);
            unint64_t v21 = *(void *)(v9 + 24);
            if (v22 >= v21 >> 1)
            {
              sub_1DCFC49A8(v21 > 1, v22 + 1, 1);
              uint64_t v7 = v26;
            }
            *(void *)(v9 + 16) = v22 + 1;
            uint64_t v23 = v9 + 24 * v22;
            *(void *)(v23 + 32) = v18;
            *(void *)(v23 + 40) = v19;
            *(_DWORD *)(v23 + 48) = v20;
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = sub_1DCD74410(v8);
              uint64_t v8 = result;
            }
            if (v29 >= *(void *)(v8 + 16)) {
              goto LABEL_31;
            }
            uint64_t v24 = v8 + v27;
            swift_bridgeObjectRelease();
            uint64_t result = v28;
            *(void *)(v24 + 32) = v11;
            *(void *)(v24 + 40) = v10;
            *(_DWORD *)(v24 + 48) = v12;
            unint64_t v5 = v29 + 1;
            if ((uint64_t)(v29 + 1) < v28)
            {
              uint64_t v2 = a2;
              if (v7 == v4) {
                goto LABEL_28;
              }
            }
            else
            {
              uint64_t v2 = a2;
              if (v7 == v4) {
                goto LABEL_28;
              }
              unint64_t v5 = 0;
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1DCFC49A8(0, v13 + 1, 1);
              uint64_t v7 = v26;
            }
            unint64_t v15 = *(void *)(v8 + 16);
            unint64_t v14 = *(void *)(v8 + 24);
            if (v15 >= v14 >> 1)
            {
              sub_1DCFC49A8(v14 > 1, v15 + 1, 1);
              uint64_t v7 = v26;
            }
            *(void *)(v8 + 16) = v15 + 1;
            uint64_t v16 = v8 + 24 * v15;
            *(void *)(v16 + 32) = v11;
            *(void *)(v16 + 40) = v10;
            *(_DWORD *)(v16 + 48) = v12;
            uint64_t result = v28;
            if (v7 == v4) {
              goto LABEL_28;
            }
          }
          ++v4;
          v6 += 6;
        }
        while (v4 < *(void *)(v2 + 16));
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_28:
      swift_bridgeObjectRelease();
      swift_release();
      return v9;
    }
    return v2;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1DCD973D8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = *(void *)(result + 16);
  if (v26)
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0;
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v25 = result;
    while (v6 < *(void *)(result + 16))
    {
      uint64_t v8 = *(void *)(result + v5 + 32);
      uint64_t v9 = *(void *)(result + v5 + 40);
      uint64_t v10 = *(void *)(result + v5 + 48);
      uint64_t v11 = *(void *)(result + v5 + 56);
      uint64_t v12 = *(void *)(result + v5 + 64);
      uint64_t v13 = *(void *)(result + v5 + 72);
      uint64_t v14 = *(void *)(result + v5 + 80);
      uint64_t v16 = *(void *)(result + v5 + 88);
      uint64_t v15 = *(void *)(result + v5 + 96);
      int v17 = *(_DWORD *)(result + v5 + 104);
      v29[0] = v8;
      v29[1] = v9;
      id v29[2] = v10;
      v29[3] = v11;
      v29[4] = v12;
      void v29[5] = v13;
      v29[6] = v14;
      v29[7] = v16;
      _OWORD v29[8] = v15;
      int v30 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = v4;
      char v19 = sub_1DCDD5B3C((uint64_t)v29, a2, a3);
      if (v4)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      if (v19)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v31 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1DCFC4968(0, *(void *)(v7 + 16) + 1, 1);
          uint64_t v7 = v31;
        }
        unint64_t v22 = *(void *)(v7 + 16);
        unint64_t v21 = *(void *)(v7 + 24);
        unint64_t v23 = v22 + 1;
        if (v22 >= v21 >> 1)
        {
          sub_1DCFC4968(v21 > 1, v22 + 1, 1);
          unint64_t v23 = v22 + 1;
          uint64_t v7 = v31;
        }
        *(void *)(v7 + 16) = v23;
        uint64_t v24 = v7 + 80 * v22;
        *(void *)(v24 + 32) = v8;
        *(void *)(v24 + 40) = v9;
        *(void *)(v24 + 48) = v10;
        *(void *)(v24 + 56) = v11;
        *(void *)(v24 + 64) = v12;
        *(void *)(v24 + 72) = v13;
        *(void *)(v24 + 80) = v14;
        *(void *)(v24 + 88) = v16;
        *(void *)(v24 + 96) = v15;
        *(_DWORD *)(v24 + 104) = v17;
        uint64_t v4 = v18;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      ++v6;
      v5 += 80;
      uint64_t result = v25;
      if (v26 == v6) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
LABEL_15:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1DCD975BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v94 = v10;
  uint64_t v95 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v92 = (char *)v83 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v93 = (char *)v83 - v17;
  MEMORY[0x1F4188790](v18);
  int v20 = (char *)v83 - v19;
  MEMORY[0x1F4188790](v21);
  unint64_t v23 = (char *)v83 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)v83 - v25;
  uint64_t v27 = *a5;
  if (*(void *)(*a6 + 16)) {
    BOOL v28 = a3 == 0;
  }
  else {
    BOOL v28 = 1;
  }
  if (v28 || (uint64_t v29 = sub_1DCDD5398(*a6), !v30))
  {
    uint64_t v42 = a6[1];
    if (*(void *)(v42 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v43 = swift_bridgeObjectRetain();
      uint64_t v44 = sub_1DCD973D8(v43, v42, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v44 + 16))
      {
        sub_1DCDB40EC((uint64_t)v20);
        uint64_t v45 = v93;
        sub_1DCDB4300((uint64_t)v93);
        uint64_t v46 = v94;
        uint64_t v47 = v95 + 8;
        uint64_t v48 = *(void (**)(char *, uint64_t))(v95 + 8);
        v48(v20, v94);
        swift_bridgeObjectRetain();
        uint64_t v49 = sub_1DD048048();
        os_log_type_t v50 = sub_1DD048848();
        if (os_log_type_enabled(v49, v50))
        {
          uint64_t v51 = (uint8_t *)swift_slowAlloc();
          uint64_t v52 = swift_slowAlloc();
          uint64_t v95 = v47;
          *(void *)&long long v96 = v52;
          *(_DWORD *)uint64_t v51 = 136315138;
          uint64_t v53 = swift_bridgeObjectRetain();
          uint64_t v54 = MEMORY[0x1E01AE380](v53, &_s14DetectedResultVN);
          unint64_t v56 = v55;
          swift_bridgeObjectRelease();
          v104[0] = sub_1DCED7FA0(v54, v56, (uint64_t *)&v96);
          sub_1DD048A28();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DCCF9000, v49, v50, "Satisfied detector label %s", v51, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1E01B07E0](v52, -1, -1);
          MEMORY[0x1E01B07E0](v51, -1, -1);

          v48(v93, v94);
          return 1;
        }

        swift_bridgeObjectRelease_n();
        v48(v45, v46);
        return 1;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v57 = a6[2];
    if (!*(void *)(v57 + 16)) {
      return 0;
    }
    sub_1DCDD54CC(v57, *(void *)(a1 + 56), *(void **)(a1 + 64), &v96);
    uint64_t v58 = v101;
    if (!v101) {
      return 0;
    }
    long long v59 = v96;
    uint64_t v60 = v98;
    uint64_t v90 = v99;
    uint64_t v91 = v97;
    uint64_t v89 = v100;
    uint64_t v61 = v102;
    int v62 = v103;
    uint64_t v63 = (uint64_t)v92;
    sub_1DCDB40EC((uint64_t)v92);
    sub_1DCDB4300((uint64_t)v13);
    uint64_t v93 = *(char **)(v95 + 8);
    v95 += 8;
    ((void (*)(uint64_t, uint64_t))v93)(v63, v94);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v64 = sub_1DD048048();
    os_log_type_t v65 = sub_1DD048848();
    int v66 = v65;
    BOOL v67 = os_log_type_enabled(v64, v65);
    int v88 = v62;
    if (v67)
    {
      os_log_t v87 = v64;
      uint64_t v68 = swift_slowAlloc();
      int v86 = v66;
      long long v69 = (uint8_t *)v68;
      uint64_t v70 = swift_slowAlloc();
      uint64_t v85 = v70;
      uint64_t v92 = v13;
      uint64_t v84 = v69;
      *(_DWORD *)long long v69 = 136315138;
      v83[2] = v69 + 12;
      v104[0] = v70;
      v83[1] = v69 + 4;
      *(void *)&long long v96 = 0;
      *((void *)&v96 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DD048B98();
      sub_1DD048548();
      swift_bridgeObjectRetain();
      sub_1DD048548();
      swift_bridgeObjectRelease();
      sub_1DD048548();
      swift_bridgeObjectRetain();
      uint64_t v71 = v89;
      sub_1DD048548();
      swift_bridgeObjectRelease();
      uint64_t v72 = v91;
      uint64_t v73 = v60;
      uint64_t v74 = v60;
      uint64_t v75 = v90;
      sub_1DCD32F20(v59, *((uint64_t *)&v59 + 1), v91, v74, v90, v71, v58);
      *(void *)&long long v96 = sub_1DCED7FA0(v96, *((unint64_t *)&v96 + 1), v104);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD32F20(v59, *((uint64_t *)&v59 + 1), v72, v73, v75, v71, v58);
      sub_1DCD32F20(v59, *((uint64_t *)&v59 + 1), v72, v73, v75, v71, v58);
      os_log_t v76 = v87;
      long long v77 = v84;
      _os_log_impl(&dword_1DCCF9000, v87, (os_log_type_t)v86, "Satisfied detector result with DPN %s", v84, 0xCu);
      uint64_t v41 = 1;
      uint64_t v78 = v85;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v78, -1, -1);
      MEMORY[0x1E01B07E0](v77, -1, -1);

      ((void (*)(char *, uint64_t))v93)(v92, v94);
      return v41;
    }
    uint64_t v92 = (char *)v61;
    uint64_t v79 = v90;
    uint64_t v80 = v91;
    uint64_t v81 = v89;
    sub_1DCD32F20(v59, *((uint64_t *)&v59 + 1), v91, v60, v90, v89, v58);
    sub_1DCD32F20(v59, *((uint64_t *)&v59 + 1), v80, v60, v79, v81, v58);

    ((void (*)(char *, uint64_t))v93)(v13, v94);
    return 1;
  }
  uint64_t v31 = v29;
  unint64_t v32 = v30;
  sub_1DCDB40EC((uint64_t)v26);
  sub_1DCDB4300((uint64_t)v23);
  uint64_t v33 = v94;
  uint64_t v34 = v95 + 8;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v95 + 8);
  v35(v26, v94);
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_1DD048048();
  os_log_type_t v37 = sub_1DD048848();
  if (!os_log_type_enabled(v36, v37))
  {

    swift_bridgeObjectRelease_n();
    v35(v23, v33);
    return 1;
  }
  uint64_t v38 = swift_slowAlloc();
  uint64_t v95 = v34;
  uint64_t v39 = (uint8_t *)v38;
  uint64_t v40 = swift_slowAlloc();
  *(void *)&long long v96 = v40;
  *(_DWORD *)uint64_t v39 = 136315138;
  swift_bridgeObjectRetain();
  v104[0] = sub_1DCED7FA0(v31, v32, (uint64_t *)&v96);
  sub_1DD048A28();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1DCCF9000, v36, v37, "Satisfied coarse label %s", v39, 0xCu);
  uint64_t v41 = 1;
  swift_arrayDestroy();
  MEMORY[0x1E01B07E0](v40, -1, -1);
  MEMORY[0x1E01B07E0](v39, -1, -1);

  v35(v23, v94);
  return v41;
}

uint64_t sub_1DCD97EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, unint64_t a6, int a7, uint64_t a8)
{
  uint64_t v77 = a8;
  uint64_t v78 = a1;
  uint64_t v81 = a5;
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v72 = a2;
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite(0);
  uint64_t v71 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86078);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v75 = (uint64_t)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v76 = (uint64_t)&v69 - v20;
  uint64_t v21 = sub_1DD048068();
  uint64_t v79 = *(void *)(v21 - 8);
  uint64_t v80 = v21;
  MEMORY[0x1F4188790](v21);
  unint64_t v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v69 - v25;
  MEMORY[0x1F4188790](v27);
  MEMORY[0x1F4188790](v28);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v69 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v36 = (char *)&v69 - v33;
  uint64_t v70 = *v81;
  LODWORD(v81) = a7;
  if ((a7 & 1) == 0)
  {
    if (a6 != 3) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1DCDB40EC((uint64_t)&v69 - v33);
    sub_1DCDB4300((uint64_t)v31);
    uint64_t v38 = v80;
    uint64_t v39 = *(void (**)(char *, uint64_t))(v79 + 8);
    v39(v36, v80);
    uint64_t v40 = sub_1DD048048();
    os_log_type_t v41 = sub_1DD048848();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl(&dword_1DCCF9000, v40, v41, "imageSourceType is cameraFrame, always extract domain signals.", v42, 2u);
      MEMORY[0x1E01B07E0](v42, -1, -1);
    }

    v39(v31, v38);
    return 1;
  }
  if (a6 >= 3) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v37 = v35;
  uint64_t v69 = v34;
  sub_1DCD2889C(v77, (uint64_t)v15, &qword_1EBE86078);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1DCD2479C((uint64_t)v15, &qword_1EBE86078);
LABEL_15:
    uint64_t v52 = v79;
    uint64_t v51 = v80;
    sub_1DCDB40EC((uint64_t)v26);
    sub_1DCDB4300((uint64_t)v23);
    uint64_t v53 = *(void (**)(char *, uint64_t))(v52 + 8);
    v53(v26, v51);
    uint64_t v54 = sub_1DD048048();
    os_log_type_t v55 = sub_1DD048848();
    if (os_log_type_enabled(v54, v55))
    {
      unint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v56 = 0;
      _os_log_impl(&dword_1DCCF9000, v54, v55, "No domain config. Skip.", v56, 2u);
      MEMORY[0x1E01B07E0](v56, -1, -1);
    }

    v53(v23, v51);
    return 0;
  }
  uint64_t v44 = v76;
  sub_1DCD9A384((uint64_t)v15, v76, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  if (*(unsigned char *)v44 != 1)
  {
    sub_1DCD9A4AC(v44, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    goto LABEL_15;
  }
  uint64_t v45 = *(void *)(v44 + 32);
  uint64_t v46 = v75;
  sub_1DCD9A444(v44, v75, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  if (v45)
  {
    uint64_t v47 = *(void *)(v46 + 32);
    sub_1DCD9A4AC(v46, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    uint64_t v49 = v72;
    uint64_t v48 = v73;
    if ((v81 & 1) == 0)
    {
      uint64_t v50 = v74;
      if (v47 != a6) {
        goto LABEL_37;
      }
      goto LABEL_20;
    }
    uint64_t v50 = v74;
    if (a6)
    {
      if (a6 == 1)
      {
        if (v47 != 1) {
          goto LABEL_37;
        }
        goto LABEL_20;
      }
      if (v47 != 2)
      {
LABEL_37:
        sub_1DCD9A4AC(v44, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
        return 0;
      }
    }
    else if (v47)
    {
      goto LABEL_37;
    }
  }
  else
  {
    sub_1DCD9A4AC(v46, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    uint64_t v48 = v73;
    uint64_t v50 = v74;
    uint64_t v49 = v72;
  }
LABEL_20:
  uint64_t v57 = *(void *)(v44 + 8);
  uint64_t v58 = *(void *)(v57 + 16);
  if (v58)
  {
    uint64_t v59 = v57 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
    uint64_t v60 = *(void *)(v71 + 72);
    uint64_t v81 = *(uint64_t **)(v44 + 8);
    swift_bridgeObjectRetain();
    uint64_t v61 = v70;
    while (1)
    {
      sub_1DCD9A444(v59, (uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite);
      uint64_t v82 = v61;
      char v62 = sub_1DCD975BC(v78, v49, v48, v50, &v82, v12);
      sub_1DCD9A4AC((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Prerequisite);
      if ((v62 & 1) == 0) {
        break;
      }
      v59 += v60;
      if (!--v58)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  sub_1DCDB40EC(v37);
  uint64_t v63 = v69;
  sub_1DCDB4300(v69);
  uint64_t v64 = v80;
  os_log_type_t v65 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
  v65(v37, v80);
  int v66 = sub_1DD048048();
  os_log_type_t v67 = sub_1DD048848();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v68 = 0;
    _os_log_impl(&dword_1DCCF9000, v66, v67, "No prerequisite is specificed. Always extract domain signals.", v68, 2u);
    MEMORY[0x1E01B07E0](v68, -1, -1);
  }

  v65(v63, v64);
LABEL_32:
  sub_1DCD9A4AC(v44, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  return 1;
}

uint64_t sub_1DCD98640(uint64_t a1, unsigned __int8 *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v187 = a4;
  unsigned int v205 = a3;
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v200 = (uint64_t)&v182 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v196 = (char *)&v182 - v9;
  MEMORY[0x1F4188790](v10);
  int v190 = (uint64_t *)((char *)&v182 - v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v194 = (uint64_t)&v182 - v13;
  uint64_t v14 = sub_1DD048068();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v203 = (void (*)(char *, uint64_t))((char *)&v182 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v182 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v182 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v182 - v24;
  MEMORY[0x1F4188790](v26);
  uint64_t v186 = (uint64_t)&v182 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v195 = (char *)&v182 - v29;
  MEMORY[0x1F4188790](v30);
  long long v199 = (char *)&v182 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v192 = (uint64_t)&v182 - v33;
  MEMORY[0x1F4188790](v34);
  long long v198 = (char *)&v182 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v189 = (uint64_t)&v182 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v193 = (uint64_t)&v182 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v188 = (uint64_t)&v182 - v41;
  MEMORY[0x1F4188790](v42);
  uint64_t v202 = (char *)&v182 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v197 = (uint64_t)&v182 - v45;
  MEMORY[0x1F4188790](v46);
  uint64_t v201 = (uint8_t *)&v182 - v47;
  MEMORY[0x1F4188790](v48);
  uint64_t v50 = (char *)&v182 - v49;
  int v191 = *a2;
  uint64_t v51 = MEMORY[0x1E4FBC860];
  v208[0] = MEMORY[0x1E4FBC860];
  uint64_t v52 = *(void *)(a1 + 16);
  if (v52)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = 72;
    do
    {
      uint64_t v54 = swift_bridgeObjectRetain();
      sub_1DCFDE93C(v54);
      v53 += 48;
      --v52;
    }
    while (v52);
    swift_bridgeObjectRelease();
    uint64_t v51 = v208[0];
  }
  uint64_t v55 = *(void *)(v51 + 16);
  if (!v55)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    sub_1DCDB40EC((uint64_t)v19);
    uint64_t v74 = (char *)v203;
    sub_1DCDB4300((uint64_t)v203);
    uint64_t v75 = *(void (**)(char *, uint64_t))(v15 + 8);
    v75(v19, v14);
    uint64_t v76 = sub_1DD048048();
    os_log_type_t v77 = sub_1DD048848();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v78 = 0;
      _os_log_impl(&dword_1DCCF9000, v76, v77, "Missing classification result. Consider as satisfied to be conservative.", v78, 2u);
      MEMORY[0x1E01B07E0](v78, -1, -1);
    }

    v75(v74, v14);
    return 1;
  }
  char v185 = v22;
  char v184 = v25;
  uint64_t v204 = v14;
  uint64_t v206 = v15;
  uint64_t v57 = *v205;
  unint64_t v56 = v205[1];
  uint64_t v58 = (uint64_t *)(v51 + 48);
  while (1)
  {
    uint64_t v59 = *(v58 - 2);
    unint64_t v60 = *(v58 - 1);
    uint64_t v61 = *v58;
    if (v59 == v57 && v60 == v56) {
      break;
    }
    if (sub_1DD048FA8()) {
      goto LABEL_16;
    }
    v58 += 3;
    if (!--v55) {
      goto LABEL_20;
    }
  }
  uint64_t v59 = v57;
  unint64_t v60 = v56;
LABEL_16:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(void *)(v61 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v15 = v206;
    uint64_t v14 = v204;
    goto LABEL_21;
  }
  unint64_t v183 = *(void *)(v61 + 16);
  sub_1DCDB40EC((uint64_t)v50);
  uint64_t v63 = (uint64_t)v201;
  sub_1DCDB4300((uint64_t)v201);
  uint64_t v65 = v206 + 8;
  uint64_t v64 = *(void (**)(char *, uint64_t))(v206 + 8);
  uint64_t v66 = v204;
  v64(v50, v204);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v67 = sub_1DD048048();
  os_log_type_t v68 = sub_1DD048848();
  BOOL v69 = os_log_type_enabled(v67, v68);
  uint64_t v206 = v65;
  uint64_t v203 = v64;
  if (v69)
  {
    uint64_t v70 = (uint8_t *)swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    v208[0] = v71;
    *(_DWORD *)uint64_t v70 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v207 = sub_1DCED7FA0(v59, v60, v208);
    uint64_t v64 = v203;
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DCCF9000, v67, v68, "ClassificationInfo ModelURN: %s", v70, 0xCu);
    swift_arrayDestroy();
    uint64_t v72 = v71;
    uint64_t v66 = v204;
    MEMORY[0x1E01B07E0](v72, -1, -1);
    MEMORY[0x1E01B07E0](v70, -1, -1);

    uint64_t v73 = (uint64_t)v201;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v73 = v63;
  }
  v64((char *)v73, v66);
  uint64_t v81 = (uint64_t)v202;
  uint64_t v82 = v197;
  sub_1DCDB40EC(v197);
  sub_1DCDB4300(v81);
  v64((char *)v82, v66);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v83 = sub_1DD048048();
  os_log_type_t v84 = sub_1DD048848();
  if (os_log_type_enabled(v83, v84))
  {
    uint64_t v85 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    v208[0] = v86;
    *(_DWORD *)uint64_t v85 = 136315138;
    uint64_t v201 = v85 + 4;
    uint64_t v87 = swift_bridgeObjectRetain();
    uint64_t v88 = MEMORY[0x1E01AE380](v87, &type metadata for ClassificationItem);
    unint64_t v90 = v89;
    swift_bridgeObjectRelease();
    uint64_t v91 = v88;
    uint64_t v66 = v204;
    uint64_t v207 = sub_1DCED7FA0(v91, v90, v208);
    uint64_t v64 = v203;
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v83, v84, "ClassificationInfo Results: %s", v85, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v86, -1, -1);
    MEMORY[0x1E01B07E0](v85, -1, -1);

    uint64_t v92 = v202;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v92 = (char *)v81;
  }
  v64(v92, v66);
  uint64_t v93 = (uint64_t)v205;
  uint64_t result = v205[2];
  uint64_t v94 = (uint64_t)v198;
  if (!*(void *)(result + 16)) {
    goto LABEL_38;
  }
  if ((sub_1DCDD58A0(result, v59, v60, v61) & 1) == 0)
  {
    uint64_t v108 = v189;
    sub_1DCDB40EC(v189);
    sub_1DCDB4300(v94);
    v64((char *)v108, v66);
    uint64_t v109 = v190;
    sub_1DCD9A444(v93, (uint64_t)v190, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    uint64_t v110 = v94;
    uint64_t v111 = sub_1DD048048();
    os_log_type_t v112 = sub_1DD048848();
    if (os_log_type_enabled(v111, v112))
    {
      unint64_t v113 = (uint8_t *)swift_slowAlloc();
      uint64_t v114 = swift_slowAlloc();
      v208[0] = v114;
      *(_DWORD *)unint64_t v113 = 136315138;
      uint64_t v202 = (char *)(v113 + 4);
      uint64_t v115 = *v109;
      unint64_t v116 = v109[1];
      swift_bridgeObjectRetain();
      uint64_t v207 = sub_1DCED7FA0(v115, v116, v208);
      uint64_t v64 = v203;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD9A4AC((uint64_t)v109, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
      _os_log_impl(&dword_1DCCF9000, v111, v112, "No satisfied labels for %s", v113, 0xCu);
      swift_arrayDestroy();
      uint64_t v117 = v114;
      uint64_t v93 = (uint64_t)v205;
      MEMORY[0x1E01B07E0](v117, -1, -1);
      MEMORY[0x1E01B07E0](v113, -1, -1);

      uint64_t result = ((uint64_t (*)(char *, uint64_t))v64)(v198, v204);
    }
    else
    {
      sub_1DCD9A4AC((uint64_t)v109, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);

      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v64)(v110, v66);
    }
LABEL_38:
    uint64_t v79 = 0;
    goto LABEL_39;
  }
  uint64_t v95 = v188;
  sub_1DCDB40EC(v188);
  uint64_t v96 = v193;
  sub_1DCDB4300(v193);
  v64((char *)v95, v66);
  uint64_t v97 = v194;
  sub_1DCD9A444(v93, v194, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
  uint64_t v98 = sub_1DD048048();
  os_log_type_t v99 = sub_1DD048848();
  if (os_log_type_enabled(v98, v99))
  {
    uint64_t v100 = (uint8_t *)swift_slowAlloc();
    uint64_t v101 = swift_slowAlloc();
    v208[0] = v101;
    *(_DWORD *)uint64_t v100 = 136315138;
    uint64_t v202 = (char *)(v100 + 4);
    uint64_t v102 = type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold(0);
    uint64_t v103 = swift_bridgeObjectRetain();
    uint64_t v104 = MEMORY[0x1E01AE380](v103, v102);
    unint64_t v106 = v105;
    swift_bridgeObjectRelease();
    uint64_t v207 = sub_1DCED7FA0(v104, v106, v208);
    uint64_t v64 = v203;
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD9A4AC(v194, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    _os_log_impl(&dword_1DCCF9000, v98, v99, "Has satisfied label for %s ", v100, 0xCu);
    uint64_t v79 = 1;
    swift_arrayDestroy();
    uint64_t v107 = v101;
    uint64_t v93 = (uint64_t)v205;
    MEMORY[0x1E01B07E0](v107, -1, -1);
    MEMORY[0x1E01B07E0](v100, -1, -1);

    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v64)(v193, v204);
  }
  else
  {
    sub_1DCD9A4AC(v97, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);

    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v64)(v96, v66);
    uint64_t v79 = 1;
  }
LABEL_39:
  uint64_t v118 = (uint64_t)v196;
  unint64_t v119 = *(void *)(v61 + 16);
  if (!v119)
  {
    __break(1u);
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  uint64_t v120 = *(void *)(v61 + 32);
  unint64_t v121 = *(void *)(v61 + 40);
  unint64_t v122 = v183 - 1;
  if (v183 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  if (v119 < 2) {
    goto LABEL_98;
  }
  if (v183 <= v119)
  {
    float v123 = *(float *)(v61 + 48);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v124 = (_DWORD *)(v61 + 72);
    unint64_t v125 = v121;
    do
    {
      float v126 = *(float *)v124;
      if (v123 < *(float *)v124)
      {
        uint64_t v120 = *((void *)v124 - 2);
        unint64_t v125 = *((void *)v124 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        float v123 = v126;
      }
      v124 += 6;
      --v122;
    }
    while (v122);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    unint64_t v121 = v125;
    uint64_t v93 = (uint64_t)v205;
LABEL_49:
    swift_bridgeObjectRelease();
    uint64_t v127 = *(void *)(v93 + 24);
    unint64_t v128 = *(void *)(v93 + 32);
    uint64_t v129 = HIBYTE(v128) & 0xF;
    if ((v128 & 0x2000000000000000) == 0) {
      uint64_t v129 = v127 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v130 = (uint64_t)v185;
    uint64_t v131 = (uint64_t)v199;
    if (v129)
    {
      uint64_t v132 = v200;
      if (v127 == v120 && v128 == v121 || (sub_1DD048FA8() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v133 = v192;
        sub_1DCDB40EC(v192);
        sub_1DCDB4300(v131);
        v64((char *)v133, v204);
        sub_1DCD9A444(v93, v118, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
        swift_bridgeObjectRetain();
        uint64_t v134 = v131;
        uint64_t v135 = sub_1DD048048();
        os_log_type_t v136 = sub_1DD048848();
        if (os_log_type_enabled(v135, v136))
        {
          uint64_t v137 = swift_slowAlloc();
          uint64_t v202 = (char *)swift_slowAlloc();
          v208[0] = (uint64_t)v202;
          *(_DWORD *)uint64_t v137 = 136315394;
          swift_bridgeObjectRetain();
          uint64_t v207 = sub_1DCED7FA0(v120, v121, v208);
          sub_1DD048A28();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v137 + 12) = 2080;
          uint64_t v138 = *(void *)(v118 + 24);
          unint64_t v139 = *(void *)(v118 + 32);
          swift_bridgeObjectRetain();
          uint64_t v207 = sub_1DCED7FA0(v138, v139, v208);
          uint64_t v64 = v203;
          uint64_t v93 = (uint64_t)v205;
          sub_1DD048A28();
          uint64_t v130 = (uint64_t)v185;
          swift_bridgeObjectRelease();
          sub_1DCD9A4AC(v118, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
          _os_log_impl(&dword_1DCCF9000, v135, v136, "Most confident item is %s required %s", (uint8_t *)v137, 0x16u);
          uint64_t v140 = v202;
          swift_arrayDestroy();
          uint64_t v132 = v200;
          MEMORY[0x1E01B07E0](v140, -1, -1);
          MEMORY[0x1E01B07E0](v137, -1, -1);

          uint64_t v141 = v199;
        }
        else
        {
          swift_bridgeObjectRelease_n();
          sub_1DCD9A4AC(v118, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);

          uint64_t v141 = (char *)v134;
        }
        v64(v141, v204);
        uint64_t v142 = (uint64_t)v195;
        if (*(unsigned char *)(v93 + 40))
        {
          sub_1DCDB40EC((uint64_t)v195);
          uint64_t v143 = sub_1DD048048();
          os_log_type_t v144 = sub_1DD048848();
          if (os_log_type_enabled(v143, v144))
          {
            uint64_t v145 = (uint8_t *)swift_slowAlloc();
            uint64_t v146 = swift_slowAlloc();
            v208[0] = v146;
            *(_DWORD *)uint64_t v145 = 136315138;
            uint64_t v147 = sub_1DCD9C35C(v191);
            uint64_t v207 = sub_1DCED7FA0(v147, v148, v208);
            uint64_t v64 = v203;
            uint64_t v93 = (uint64_t)v205;
            sub_1DD048A28();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1DCCF9000, v143, v144, "Reject %s because it meets requirements but reject_domain is set.", v145, 0xCu);
            swift_arrayDestroy();
            uint64_t v149 = v146;
            uint64_t v132 = v200;
            MEMORY[0x1E01B07E0](v149, -1, -1);
            MEMORY[0x1E01B07E0](v145, -1, -1);

            v64(v195, v204);
          }
          else
          {

            v64((char *)v142, v204);
          }
          goto LABEL_74;
        }
        uint64_t v79 = 1;
LABEL_75:
        sub_1DCD9A444(v93, v132, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
        goto LABEL_76;
      }
      if (*(unsigned char *)(v93 + 40) != 1)
      {
LABEL_74:
        uint64_t v79 = 0;
        goto LABEL_75;
      }
      sub_1DCD9A444(v93, v132, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    }
    else
    {
      uint64_t v132 = v200;
      if (*(unsigned char *)(v93 + 40) != 1) {
        goto LABEL_75;
      }
      sub_1DCD9A444(v93, v200, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
      if (!v79)
      {
LABEL_76:
        sub_1DCD9A4AC(v132, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
        if (*(unsigned char *)(v93 + 64))
        {
          if ((v79 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
LABEL_78:
          swift_bridgeObjectRetain();
          sub_1DCF1F7A4(v120, v121, (char *)v208);
          swift_bridgeObjectRelease();
          char v152 = v208[0];
          if (LOBYTE(v208[0]) == 26)
          {
            sub_1DCDB40EC(v130);
            swift_bridgeObjectRetain();
            uint64_t v153 = sub_1DD048048();
            os_log_type_t v154 = sub_1DD048848();
            if (os_log_type_enabled(v153, v154))
            {
              uint64_t v155 = swift_slowAlloc();
              uint64_t v156 = swift_slowAlloc();
              v208[0] = v156;
              *(_DWORD *)uint64_t v155 = 136315394;
              uint64_t v157 = sub_1DCD9C35C(v191);
              uint64_t v207 = sub_1DCED7FA0(v157, v158, v208);
              sub_1DD048A28();
              swift_bridgeObjectRelease();
              *(_WORD *)(v155 + 12) = 2080;
              swift_bridgeObjectRetain();
              uint64_t v207 = sub_1DCED7FA0(v120, v121, v208);
              sub_1DD048A28();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1DCCF9000, v153, v154, "Reject %s because most confident item %s failed to map to a valid domain.", (uint8_t *)v155, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1E01B07E0](v156, -1, -1);
              MEMORY[0x1E01B07E0](v155, -1, -1);

              uint64_t v159 = v130;
LABEL_81:
              v203((char *)v159, v204);
              return 0;
            }

            swift_bridgeObjectRelease_n();
            uint64_t v164 = v130;
            goto LABEL_96;
          }
          uint64_t v160 = sub_1DCD9C35C(v208[0]);
          uint64_t v162 = v161;
          if (v160 == sub_1DCD9C35C(v191) && v162 == v163)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v165 = sub_1DD048FA8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v165 & 1) == 0)
            {
              uint64_t v173 = (uint64_t)v184;
              sub_1DCDB40EC((uint64_t)v184);
              swift_bridgeObjectRetain();
              uint64_t v174 = sub_1DD048048();
              os_log_type_t v175 = sub_1DD048848();
              if (os_log_type_enabled(v174, v175))
              {
                uint64_t v176 = swift_slowAlloc();
                unsigned int v205 = (uint64_t *)swift_slowAlloc();
                v208[0] = (uint64_t)v205;
                *(_DWORD *)uint64_t v176 = 136315650;
                uint64_t v177 = sub_1DCD9C35C(v191);
                uint64_t v207 = sub_1DCED7FA0(v177, v178, v208);
                sub_1DD048A28();
                swift_bridgeObjectRelease();
                *(_WORD *)(v176 + 12) = 2080;
                swift_bridgeObjectRetain();
                uint64_t v207 = sub_1DCED7FA0(v120, v121, v208);
                sub_1DD048A28();
                swift_bridgeObjectRelease_n();
                *(_WORD *)(v176 + 22) = 2080;
                uint64_t v179 = sub_1DCD9C35C(v152);
                uint64_t v207 = sub_1DCED7FA0(v179, v180, v208);
                sub_1DD048A28();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_1DCCF9000, v174, v175, "Reject %s because most confident item %s is mapped to %s", (uint8_t *)v176, 0x20u);
                long long v181 = v205;
                swift_arrayDestroy();
                MEMORY[0x1E01B07E0](v181, -1, -1);
                MEMORY[0x1E01B07E0](v176, -1, -1);

                uint64_t v159 = v173;
                goto LABEL_81;
              }

              swift_bridgeObjectRelease_n();
              uint64_t v164 = v173;
LABEL_96:
              v64((char *)v164, v204);
              return 0;
            }
            swift_bridgeObjectRelease();
          }
          return 1;
        }
LABEL_82:
        swift_bridgeObjectRelease();
        return v79;
      }
    }
    unint64_t v150 = *(void *)(v132 + 32);
    if ((v150 & 0x2000000000000000) != 0) {
      uint64_t v151 = HIBYTE(v150) & 0xF;
    }
    else {
      uint64_t v151 = *(void *)(v132 + 24) & 0xFFFFFFFFFFFFLL;
    }
    sub_1DCD9A4AC(v132, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement);
    if (!v151)
    {
      swift_bridgeObjectRelease();
      uint64_t v166 = v186;
      sub_1DCDB40EC(v186);
      long long v167 = sub_1DD048048();
      os_log_type_t v168 = sub_1DD048848();
      if (os_log_type_enabled(v167, v168))
      {
        long long v169 = (uint8_t *)swift_slowAlloc();
        uint64_t v170 = swift_slowAlloc();
        v208[0] = v170;
        *(_DWORD *)long long v169 = 136315138;
        uint64_t v171 = sub_1DCD9C35C(v191);
        uint64_t v207 = sub_1DCED7FA0(v171, v172, v208);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DCCF9000, v167, v168, "Reject %s because it meets requirements but reject_domain is set.", v169, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v170, -1, -1);
        MEMORY[0x1E01B07E0](v169, -1, -1);

        v64((char *)v166, v204);
        return 0;
      }

      uint64_t v164 = v166;
      goto LABEL_96;
    }
    if (*(unsigned char *)(v93 + 64)) {
      goto LABEL_78;
    }
    uint64_t v79 = 1;
    goto LABEL_82;
  }
LABEL_99:
  __break(1u);
  return result;
}

float sub_1DCD99DE8(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v55 = a4;
  unint64_t v56 = (char *)a2;
  uint64_t v6 = sub_1DD048068();
  uint64_t v54 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v52 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85FF8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = *a3;
  sub_1DCD2889C((uint64_t)v56, (uint64_t)v14, &qword_1EBE85FF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    unint64_t v56 = v11;
    uint64_t v52 = v8;
    uint64_t v53 = v6;
    sub_1DCD9A384((uint64_t)v14, (uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig);
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t v57 = MEMORY[0x1E4FBC860];
    uint64_t v21 = *(void *)(a1 + 16);
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = 72;
      do
      {
        uint64_t v23 = swift_bridgeObjectRetain();
        sub_1DCFDE93C(v23);
        v22 += 48;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
      uint64_t v20 = v57;
    }
    uint64_t v24 = *(void *)(v20 + 16);
    if (!v24) {
      goto LABEL_34;
    }
    uint64_t v26 = *((void *)v18 + 1);
    uint64_t v25 = *((void *)v18 + 2);
    uint64_t v27 = (uint64_t *)(v20 + 48);
    while (1)
    {
      uint64_t v28 = *v27;
      BOOL v29 = *(v27 - 2) == v26 && *(v27 - 1) == v25;
      if (v29 || (sub_1DD048FA8() & 1) != 0) {
        break;
      }
      v27 += 3;
      if (!--v24) {
        goto LABEL_34;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (sub_1DCD9C35C(v19) == 1937006947 && v30 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v31 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0) {
        goto LABEL_23;
      }
    }
    if (*(void *)(v28 + 16) > 4uLL)
    {
      uint64_t v32 = sub_1DCD97140(4, v28);
      swift_bridgeObjectRelease();
      uint64_t v28 = v32;
      uint64_t v33 = *(void *)(v32 + 16);
      if (!v33)
      {
LABEL_34:
        swift_bridgeObjectRelease();
LABEL_35:
        sub_1DCD9A4AC((uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig);
        return 0.0;
      }
LABEL_24:
      uint64_t v34 = *(void *)(v28 + 32);
      unint64_t v35 = *(void *)(v28 + 40);
      float v36 = *(float *)(v28 + 48);
      uint64_t v37 = v33 - 1;
      if (v33 == 1)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = (uint64_t)v56;
        if (!v55) {
          goto LABEL_38;
        }
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v39 = (_DWORD *)(v28 + 72);
        unint64_t v40 = v35;
        do
        {
          float v41 = *(float *)v39;
          if (v36 < *(float *)v39)
          {
            uint64_t v34 = *((void *)v39 - 2);
            unint64_t v40 = *((void *)v39 - 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            float v36 = v41;
          }
          v39 += 6;
          --v37;
        }
        while (v37);
        swift_bridgeObjectRelease_n();
        unint64_t v35 = v40;
        uint64_t v38 = (uint64_t)v56;
        if (!v55) {
          goto LABEL_38;
        }
      }
      float v42 = *((float *)v18 + 8);
      swift_bridgeObjectRetain();
      unint64_t v43 = sub_1DCD33610(v34, v35, v42);
      swift_bridgeObjectRelease();
      if ((v43 & 0x100000000) == 0)
      {
        swift_bridgeObjectRelease();
        if (v36 >= *(float *)&v43)
        {
          sub_1DCD9A4AC((uint64_t)v18, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig);
          return v36;
        }
        goto LABEL_34;
      }
LABEL_38:
      swift_bridgeObjectRelease();
      sub_1DCDB40EC(v38);
      uint64_t v45 = (uint64_t)v52;
      sub_1DCDB4300((uint64_t)v52);
      uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
      uint64_t v47 = v38;
      uint64_t v48 = v53;
      v46(v47, v53);
      uint64_t v49 = sub_1DD048048();
      os_log_type_t v50 = sub_1DD048848();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v51 = 0;
        _os_log_impl(&dword_1DCCF9000, v49, v50, "Error getting threshold", v51, 2u);
        MEMORY[0x1E01B07E0](v51, -1, -1);
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      v46(v45, v48);
      goto LABEL_35;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void *)(v28 + 16);
    if (!v33) {
      goto LABEL_34;
    }
    goto LABEL_24;
  }
  sub_1DCD2479C((uint64_t)v14, &qword_1EBE85FF8);
  return 0.0;
}

uint64_t sub_1DCD9A384(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DCD9A3EC()
{
  unint64_t result = qword_1EBE86010;
  if (!qword_1EBE86010)
  {
    type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.Requirement(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86010);
  }
  return result;
}

uint64_t sub_1DCD9A444(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD9A4AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1DCD9A50C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v39[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v39[-v5];
  uint64_t v7 = v0[1];
  uint64_t v55 = *v0;
  uint64_t v8 = v0[3];
  uint64_t v52 = v0[2];
  uint64_t v9 = (int *)type metadata accessor for ObjectKnowledge();
  uint64_t v10 = (uint64_t)v0 + v9[6];
  unint64_t v56 = v6;
  sub_1DCD2889C(v10, (uint64_t)v6, &qword_1EBE848E0);
  float v11 = *(float *)((char *)v0 + v9[7]);
  uint64_t v12 = (uint64_t *)((char *)v0 + v9[8]);
  uint64_t v13 = v12[1];
  uint64_t v50 = *v12;
  uint64_t v14 = v9[10];
  uint64_t v15 = (uint64_t *)((char *)v0 + v9[9]);
  uint64_t v16 = v15[1];
  uint64_t v48 = *v15;
  uint64_t v54 = v3;
  sub_1DCD2889C((uint64_t)v0 + v14, (uint64_t)v3, &qword_1EBE848E0);
  uint64_t v17 = *(uint64_t *)((char *)v0 + v9[11]);
  uint64_t v53 = v7;
  swift_bridgeObjectRetain();
  uint64_t v51 = v8;
  swift_bridgeObjectRetain();
  uint64_t v49 = v13;
  swift_bridgeObjectRetain();
  uint64_t v47 = v16;
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_1DCD9A800(v17);
  uint64_t v18 = (char *)v0 + v9[13];
  uint64_t v19 = *(void *)v18;
  int v20 = v18[8];
  uint64_t v21 = (uint64_t *)((char *)v0 + v9[14]);
  uint64_t v22 = *v21;
  unint64_t v23 = v21[1];
  if (v23 >> 60 == 15)
  {
    long long v57 = 0u;
    long long v58 = 0u;
  }
  else
  {
    *((void *)&v58 + 1) = MEMORY[0x1E4F277C0];
    *(void *)&long long v57 = v22;
    *((void *)&v57 + 1) = v23;
  }
  BOOL v24 = v20 == 0;
  uint64_t v25 = v9[15];
  if (!v24) {
    uint64_t v19 = 0;
  }
  uint64_t v45 = v19;
  uint64_t v26 = (char *)v0 + v25;
  uint64_t v44 = *(uint64_t *)((char *)v0 + v25);
  int v42 = *(unsigned __int16 *)((char *)v0 + v25 + 8);
  uint64_t v27 = *(uint64_t *)((char *)v0 + v25 + 24);
  float v41 = *(void **)((char *)v0 + v25 + 16);
  uint64_t v28 = *(void **)((char *)v0 + v25 + 32);
  double v29 = *(double *)((char *)v0 + v25 + 40);
  int v40 = *((unsigned __int8 *)v0 + v25 + 48);
  uint64_t v30 = *(void **)((char *)v0 + v25 + 56);
  uint64_t v31 = *((void *)v26 + 8);
  uint64_t v32 = *((void *)v26 + 9);
  uint64_t v33 = *((void *)v26 + 10);
  uint64_t v34 = *((void *)v26 + 11);
  double v35 = *((double *)v26 + 12);
  double v36 = *((double *)v26 + 13);
  int v37 = *((_DWORD *)v26 + 28);
  id v43 = objc_allocWithZone((Class)VIObjectKnowledge);
  sub_1DCD8400C(v22, v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1DCD9BB40(v11, v29, v35, v36, v55, v53, v52, v51, (uint64_t)v56, v50, v49, v48, v47, (uint64_t)v54, v46, v45, &v57, v44, v42,
           v41,
           v27,
           v28,
           v40,
           v30,
           v31,
           v32,
           v33,
           v34,
           v37);
}

uint64_t sub_1DCD9A800(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1DD048C58();
    uint64_t v4 = a1 + 48;
    do
    {
      id v5 = objc_allocWithZone((Class)VIObjectKnowledgeProperty);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v6 = (void *)sub_1DD0483D8();
      swift_bridgeObjectRelease();
      uint64_t v7 = (void *)sub_1DD0483D8();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_initWithName_value_, v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1DD048C38();
      sub_1DD048C68();
      sub_1DD048C78();
      sub_1DD048C48();
      v4 += 64;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

void __swiftcall VisualUnderstanding.ImageRegion.toVIImageRegion()(VIImageRegion *__return_ptr retstr)
{
  uint64_t v2 = VisualUnderstanding.ImageRegion.domainInfo.getter();
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  double v29 = v1;
  uint64_t v40 = MEMORY[0x1E4FBC860];
  sub_1DD048C58();
  uint64_t v4 = v3 - 1;
  uint64_t v5 = 32;
  uint64_t v30 = v2;
  while (1)
  {
    long long v6 = *(_OWORD *)(v2 + v5 + 16);
    long long v31 = *(_OWORD *)(v2 + v5);
    long long v32 = v6;
    long long v7 = *(_OWORD *)(v2 + v5 + 32);
    long long v8 = *(_OWORD *)(v2 + v5 + 48);
    long long v9 = *(_OWORD *)(v2 + v5 + 80);
    long long v35 = *(_OWORD *)(v2 + v5 + 64);
    long long v36 = v9;
    long long v33 = v7;
    long long v34 = v8;
    long long v10 = *(_OWORD *)(v2 + v5 + 96);
    long long v11 = *(_OWORD *)(v2 + v5 + 112);
    long long v12 = *(_OWORD *)(v2 + v5 + 128);
    *(_OWORD *)&v39[13] = *(_OWORD *)(v2 + v5 + 141);
    *(_OWORD *)uint64_t v39 = v12;
    long long v37 = v10;
    long long v38 = v11;
    long long v13 = v9;
    VisualDomain.mappedDomainKey.getter();
    if (*((void *)&v13 + 1)) {
      swift_bridgeObjectRetain();
    }
    long long v14 = v35;
    long long v15 = v34;
    uint64_t v16 = v33;
    sub_1DCD32CC8((uint64_t)&v31);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_1DD0483D8();
    swift_bridgeObjectRelease();
    if (*((void *)&v13 + 1))
    {
      uint64_t v18 = (void *)sub_1DD0483D8();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v18 = 0;
      if (v16)
      {
LABEL_7:
        uint64_t v19 = (void *)sub_1DD0483D8();
        swift_bridgeObjectRelease();
        if (*((void *)&v15 + 1)) {
          goto LABEL_8;
        }
        goto LABEL_12;
      }
    }
    uint64_t v19 = 0;
    if (*((void *)&v15 + 1))
    {
LABEL_8:
      int v20 = (void *)sub_1DD0483D8();
      swift_bridgeObjectRelease();
      if (*((void *)&v14 + 1)) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
LABEL_12:
    int v20 = 0;
    if (*((void *)&v14 + 1))
    {
LABEL_9:
      uint64_t v21 = (void *)sub_1DD0483D8();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
LABEL_13:
    uint64_t v21 = 0;
LABEL_14:
    BYTE4(v28) = BYTE8(v33);
    BYTE3(v28) = v39[28];
    BYTE2(v28) = v39[1];
    BYTE1(v28) = v39[0];
    LOBYTE(v28) = BYTE14(v38);
    objc_msgSend(objc_allocWithZone((Class)VIImageRegionDomainInfo), sel_initWithDomainKey_labelName_glyphName_displayLabel_displayMessage_hasFocalPoint_focalPoint_isCornerGlyph_ocrResultsRequired_barcodeResultsRequired_isLowConfidence_shouldShowDynamicGlyph_, v17, v18, v19, v20, v21, 1, *((double *)&v31 + 1), *(double *)&v32, v28);

    sub_1DCD32DD4((uint64_t)&v31);
    sub_1DD048C38();
    sub_1DD048C68();
    sub_1DD048C78();
    sub_1DD048C48();
    if (!v4) {
      break;
    }
    --v4;
    uint64_t v2 = v30;
    v5 += 160;
  }
  swift_bridgeObjectRelease();
  uint64_t v1 = v29;
LABEL_18:
  double v22 = *v1;
  double v23 = v1[1];
  double v24 = v1[2];
  double v25 = v1[3];
  id v26 = objc_allocWithZone((Class)VIImageRegion);
  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85070);
  uint64_t v27 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_initWithRegionOfInterest_domainInfo_, v27, v22, v23, v24, v25);
}

id sub_1DCD9AC9C()
{
  uint64_t v1 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = v0[9];
  long long v6 = v0[7];
  long long v50 = v0[8];
  long long v51 = v5;
  long long v7 = v0[9];
  long long v52 = v0[10];
  long long v8 = v0[5];
  long long v9 = v0[3];
  long long v46 = v0[4];
  long long v47 = v8;
  long long v10 = v0[5];
  long long v11 = v0[7];
  long long v48 = v0[6];
  long long v49 = v11;
  long long v12 = v0[1];
  long long v42 = *v0;
  long long v43 = v12;
  long long v13 = v0[3];
  long long v15 = *v0;
  long long v14 = v0[1];
  long long v44 = v0[2];
  long long v45 = v13;
  long long v38 = v50;
  long long v39 = v7;
  long long v40 = v0[10];
  long long v34 = v46;
  long long v35 = v10;
  long long v36 = v48;
  long long v37 = v6;
  long long v30 = v15;
  long long v31 = v14;
  uint64_t v53 = *((void *)v0 + 22);
  uint64_t v41 = *((void *)v0 + 22);
  long long v32 = v44;
  long long v33 = v9;
  uint64_t v16 = VisualUnderstanding.imageRegions.getter();
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    *(void *)&long long v30 = MEMORY[0x1E4FBC860];
    sub_1DD048C58();
    uint64_t v18 = v16 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v19 = *(void *)(v2 + 72);
    do
    {
      sub_1DCD9C210(v18, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      VisualUnderstanding.ImageRegion.toVIImageRegion()(v20);
      sub_1DCD9C278((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DD048C38();
      sub_1DD048C68();
      sub_1DD048C78();
      sub_1DD048C48();
      v18 += v19;
      --v17;
    }
    while (v17);
  }
  swift_bridgeObjectRelease();
  sub_1DD046208();
  swift_allocObject();
  sub_1DCD433F0((uint64_t)&v42);
  sub_1DD0461F8();
  long long v38 = v50;
  long long v39 = v51;
  long long v40 = v52;
  uint64_t v41 = v53;
  long long v34 = v46;
  long long v35 = v47;
  long long v36 = v48;
  long long v37 = v49;
  long long v30 = v42;
  long long v31 = v43;
  long long v32 = v44;
  long long v33 = v45;
  sub_1DCD9C2D8();
  uint64_t v21 = sub_1DD0461E8();
  unint64_t v23 = v22;
  swift_release();
  sub_1DCD43B94((uint64_t)&v42);
  id v24 = objc_allocWithZone((Class)VIVisualUnderstanding);
  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85028);
  double v25 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  id v26 = (void *)sub_1DD0464D8();
  sub_1DCD21954(v21, v23);
  id v27 = objc_msgSend(v24, sel_initWithImageRegions_payload_, v25, v26);

  return v27;
}

id sub_1DCD9AFEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RegionSearchResult.ResultItem(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
  MEMORY[0x1F4188790](v5 - 8);
  long long v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)&v60 - v9;
  MEMORY[0x1F4188790](v11);
  long long v13 = (char *)&v60 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v60 - v15;
  uint64_t v72 = v1 + *(int *)(v2 + 28);
  sub_1DCD2889C(v72, (uint64_t)&v60 - v15, &qword_1EAB02630);
  uint64_t v17 = type metadata accessor for ObjectKnowledge();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v73 = v18 + 48;
  uint64_t v74 = v19;
  if (v19(v16, 1, v17) == 1)
  {
    sub_1DCD9BA74((uint64_t)v16);
  }
  else
  {
    uint64_t v20 = *((void *)v16 + 1);
    swift_bridgeObjectRetain();
    sub_1DCD9C278((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
    if (v20)
    {
      swift_bridgeObjectRelease();
      sub_1DCD9C210(v1, (uint64_t)v4, type metadata accessor for RegionSearchResult.ResultItem);
      sub_1DCD9C278((uint64_t)v4, type metadata accessor for RegionSearchResult.ResultItem);
      goto LABEL_10;
    }
  }
  sub_1DCD9C210(v1, (uint64_t)v4, type metadata accessor for RegionSearchResult.ResultItem);
  sub_1DCD2889C((uint64_t)&v4[*(int *)(v2 + 28)], (uint64_t)v13, &qword_1EAB02630);
  sub_1DCD9C278((uint64_t)v4, type metadata accessor for RegionSearchResult.ResultItem);
  if (v74(v13, 1, v17) == 1)
  {
    sub_1DCD9BA74((uint64_t)v13);
    return 0;
  }
  uint64_t v21 = (uint64_t *)&v13[*(int *)(v17 + 56)];
  uint64_t v22 = *v21;
  unint64_t v23 = v21[1];
  sub_1DCD8400C(*v21, v23);
  sub_1DCD9C278((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
  if (v23 >> 60 == 15) {
    return 0;
  }
  sub_1DCD392D4(v22, v23);
LABEL_10:
  char v75 = *(unsigned char *)v1;
  uint64_t v68 = VisualDomain.mappedDomainKey.getter();
  uint64_t v69 = v25;
  uint64_t v26 = *(void *)(v1 + 16);
  uint64_t v70 = *(void *)(v1 + 8);
  sub_1DCD2889C(v72, (uint64_t)v10, &qword_1EAB02630);
  unsigned int v27 = v74(v10, 1, v17);
  uint64_t v71 = v26;
  if (v27 != 1)
  {
    uint64_t v65 = v17;
    uint64_t v66 = v7;
    long long v36 = (uint64_t *)&v10[*(int *)(v17 + 48)];
    id v67 = v10;
    uint64_t v38 = *v36;
    uint64_t v37 = v36[1];
    uint64_t v39 = v36[2];
    uint64_t v40 = v36[3];
    uint64_t v41 = v36[4];
    uint64_t v42 = v36[5];
    uint64_t v43 = v36[6];
    unint64_t v44 = v36[7];
    swift_bridgeObjectRetain();
    uint64_t v63 = v39;
    uint64_t v64 = v38;
    uint64_t v45 = v39;
    uint64_t v62 = v41;
    uint64_t v46 = v42;
    uint64_t v47 = v42;
    unint64_t v48 = v44;
    sub_1DCD9BAD4(v38, v37, v45, v40, v41, v47, v43, v44);
    sub_1DCD9C278((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
    if (v37)
    {
      id v49 = objc_allocWithZone((Class)VIThirdPartyObject);
      uint64_t v50 = v46;
      uint64_t v61 = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DCD8400C(v43, v48);
      uint64_t v52 = v63;
      uint64_t v51 = v64;
      uint64_t v53 = v62;
      id v28 = sub_1DCD9C034(v64, v37, v63, v40, v62, v50, v43, v48);
      sub_1DCD9C14C(v51, v37, v52, v40, v53, v61, v43, v48);
    }
    else
    {
      id v28 = 0;
    }
    uint64_t v17 = v65;
    long long v7 = v66;
    uint64_t v29 = *(void *)(v1 + 32);
    if (v29) {
      goto LABEL_12;
    }
LABEL_17:
    id v67 = 0;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  sub_1DCD9BA74((uint64_t)v10);
  id v28 = 0;
  uint64_t v29 = *(void *)(v1 + 32);
  if (!v29) {
    goto LABEL_17;
  }
LABEL_12:
  uint64_t v30 = *(void *)(v1 + 24);
  id v31 = objc_allocWithZone((Class)VIOntologyNode);
  sub_1DCD32D4C(v30, v29);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v32 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v33 = v28;
  long long v34 = v7;
  long long v35 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v67 = objc_msgSend(v31, sel_initWithKnowledgeGraphID_labelDebugDescription_, v32, v35);

  long long v7 = v34;
  id v28 = v33;
  sub_1DCD32D90(v30, v29);
LABEL_18:
  sub_1DCD2889C(v72, (uint64_t)v7, &qword_1EAB02630);
  if (v74(v7, 1, v17) == 1)
  {
    sub_1DCD9BA74((uint64_t)v7);
    id v54 = 0;
  }
  else
  {
    id v54 = sub_1DCD9A50C();
    sub_1DCD9C278((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
  }
  id v55 = objc_allocWithZone((Class)VIRegionOfInterestResultItem);
  unint64_t v56 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  long long v57 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v58 = v67;
  id v24 = objc_msgSend(v55, sel_initWithDomain_caption_thirdPartyObject_ontologyNode_objectKnowledge_, v56, v57, v28, v67, v54);

  return v24;
}

id sub_1DCD9B64C()
{
  uint64_t v1 = type metadata accessor for RegionSearchResult.ResultItem(0) - 8;
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v5 = *v0;
  double v6 = v0[1];
  double v7 = v0[2];
  double v8 = v0[3];
  uint64_t v9 = *((void *)v0 + 4);
  uint64_t v10 = *((void *)v0 + 6);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v11 = *(void *)(v9 + 16);
  if (v11)
  {
    uint64_t v22 = v10;
    uint64_t v12 = v9 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v13 = *(void *)(v2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    do
    {
      sub_1DCD9C210(v12, (uint64_t)v4, type metadata accessor for RegionSearchResult.ResultItem);
      id v14 = sub_1DCD9AFEC();
      uint64_t v15 = sub_1DCD9C278((uint64_t)v4, type metadata accessor for RegionSearchResult.ResultItem);
      if (v14)
      {
        MEMORY[0x1E01AE350](v15);
        if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DD0486E8();
        }
        sub_1DD048708();
        sub_1DD0486D8();
      }
      v12 += v13;
      --v11;
    }
    while (v11);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  id v16 = objc_allocWithZone((Class)VIRegionOfInterestResult);
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  sub_1DCD95648(0, &qword_1EAB02A08);
  uint64_t v18 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  sub_1DCD95648(0, (unint64_t *)&qword_1EAB02A10);
  uint64_t v19 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v16, sel_initWithNormalizedBoundingBox_glyphName_resultItems_searchSections_, v17, v18, v19, v5, v6, v7, v8);

  return v20;
}

id sub_1DCD9B8F4()
{
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  unint64_t v3 = v0[25];
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1DD048C58();
    uint64_t v5 = v2 + 96;
    do
    {
      sub_1DCD9B64C();
      sub_1DD048C38();
      sub_1DD048C68();
      sub_1DD048C78();
      sub_1DD048C48();
      v5 += 72;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  sub_1DCD8400C(v1, v3);
  sub_1DCD95648(0, &qword_1EAB02A00);
  double v6 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  double v7 = 0;
  if (v3 >> 60 != 15)
  {
    double v7 = (void *)sub_1DD0464D8();
    sub_1DCD392D4(v1, v3);
  }
  id v8 = objc_msgSend(objc_allocWithZone((Class)VISearchResult), sel_initWithRegionOfInterestResults_userFeedbackPayload_, v6, v7);

  return v8;
}

uint64_t sub_1DCD9BA74(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DCD9BAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCD8400C(a7, a8);
  }
}

id sub_1DCD9BB40(float a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, unsigned __int16 a19, void *a20,uint64_t a21,void *a22,unsigned __int8 a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  uint64_t v83 = a12;
  uint64_t v84 = a10;
  if (a6)
  {
    uint64_t v87 = sub_1DD0483D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v87 = 0;
  }
  uint64_t v86 = sub_1DD0483D8();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_1DD046478();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  uint64_t v38 = 0;
  if (v37(a9, 1, v35) != 1)
  {
    uint64_t v38 = sub_1DD0463E8();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(a9, v35);
  }
  uint64_t v85 = (void *)v38;
  if (a11)
  {
    uint64_t v84 = sub_1DD0483D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v84 = 0;
  }
  uint64_t v74 = a17;
  if (a13)
  {
    uint64_t v83 = sub_1DD0483D8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v83 = 0;
  }
  id v75 = a22;
  id v76 = a24;
  id v72 = a20;
  uint64_t v73 = a21;
  uint64_t v82 = a28;
  if (v37(a14, 1, v35) == 1)
  {
    uint64_t v70 = 0;
  }
  else
  {
    uint64_t v70 = sub_1DD0463E8();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(a14, v35);
  }
  int v81 = a29;
  int v78 = a19;
  int v79 = a23;
  uint64_t v77 = a18;
  uint64_t v80 = a16;
  sub_1DCD95648(0, &qword_1EAB02A18);
  uint64_t v71 = sub_1DD0486A8();
  swift_bridgeObjectRelease();
  uint64_t v39 = v74;
  uint64_t v40 = v74[3];
  if (v40)
  {
    uint64_t v41 = __swift_project_boxed_opaque_existential_1(v74, v74[3]);
    uint64_t v42 = *(void *)(v40 - 8);
    double v43 = MEMORY[0x1F4188790](v41);
    uint64_t v45 = (char *)&v69 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v42 + 16))(v45, v43);
    uint64_t v46 = sub_1DD048F98();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  }
  else
  {
    uint64_t v46 = 0;
  }
  uint64_t v47 = (void *)sub_1DD0483D8();
  id v72 = v47;
  swift_bridgeObjectRelease();
  sub_1DD0465D8();
  sub_1DCD9C1B8();
  unint64_t v48 = (void *)sub_1DD0482C8();
  uint64_t v74 = v48;
  swift_bridgeObjectRelease();
  id v49 = (void *)sub_1DD0483D8();
  id v75 = v49;
  swift_bridgeObjectRelease();
  uint64_t v50 = (void *)sub_1DD0483D8();
  id v76 = v50;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02510);
  uint64_t v51 = (void *)sub_1DD0482C8();
  swift_bridgeObjectRelease();
  LODWORD(v68) = v81;
  id v67 = v50;
  uint64_t v66 = v49;
  LOBYTE(v65) = v79 & 1;
  uint64_t v64 = v48;
  LOWORD(v63) = v78;
  uint64_t v62 = v46;
  uint64_t v52 = (void *)v71;
  *(float *)&double v53 = a1;
  id v54 = (void *)v87;
  id v55 = v85;
  unint64_t v56 = (void *)v86;
  long long v57 = (void *)v83;
  id v58 = (void *)v84;
  uint64_t v59 = (void *)v70;
  id v60 = objc_msgSend(v88, sel_initWithKnowledgeGraphID_title_thumbnailURL_thumbnailAspectRatio_shortDescription_detailedDescription_webURL_knowledgeProperties_serializedDomainType_serializedDomainResponse_csuQid_csuIdType_csuLocalizedLabel_csuLocalizedLabelDictionary_csuConfidence_csuSensitiveLocation_csuCategory_csuVertical_csuLocalizedSynonyms_csuLongitute_csuLatitute_csuVersion_, v87, v86, v85, v84, v83, v70, v53, a2, a3, a4, v71, v80, v62, v77, v63, v47, v64,
          v65,
          v66,
          v67,
          v51,
          v68);

  swift_unknownObjectRelease();
  return v60;
}

id sub_1DCD9C034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v13 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  if (a4)
  {
    id v14 = (void *)sub_1DD0483D8();
    swift_bridgeObjectRelease();
    if (a6)
    {
LABEL_3:
      uint64_t v15 = (void *)sub_1DD0483D8();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    id v14 = 0;
    if (a6) {
      goto LABEL_3;
    }
  }
  uint64_t v15 = 0;
LABEL_6:
  if (a8 >> 60 == 15)
  {
    id v16 = 0;
  }
  else
  {
    id v16 = (void *)sub_1DD0464D8();
    sub_1DCD392D4(a7, a8);
  }
  id v17 = objc_msgSend(v8, sel_initWithObjectIdentifier_imageURL_thumbnailURL_metadata_, v13, v14, v15, v16);

  return v17;
}

void sub_1DCD9C14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCD392D4(a7, a8);
  }
}

unint64_t sub_1DCD9C1B8()
{
  unint64_t result = qword_1EAB02A20;
  if (!qword_1EAB02A20)
  {
    sub_1DD0465D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02A20);
  }
  return result;
}

uint64_t sub_1DCD9C210(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCD9C278(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DCD9C2D8()
{
  unint64_t result = qword_1EBE849B8;
  if (!qword_1EBE849B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE849B8);
  }
  return result;
}

uint64_t VisualDomain.name.getter()
{
  return sub_1DCD9C35C(*v0);
}

VisualIntelligence::VisualDomain_optional __swiftcall VisualDomain.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  result.value.domain = sub_1DCD9CB54();
  v2->value.domain = result.value.domain;
  return result;
}

uint64_t sub_1DCD9C35C(char a1)
{
  uint64_t result = 7631457;
  switch(a1)
  {
    case 1:
      return 0x65727574616ELL;
    case 2:
      return 0x6B72616D646E616CLL;
    case 3:
      return 0x4C6C61727574616ELL;
    case 4:
      return 0x616964656DLL;
    case 5:
      return 1802465122;
    case 6:
      return 0x6D75626C61;
    case 7:
      return 1937006947;
    case 8:
      return 1936158564;
    case 9:
      unsigned int v3 = 1835626081;
      return v3 | 0x736C6100000000;
    case 10:
      return 0x7364726962;
    case 11:
      return 0x73746365736E69;
    case 12:
      return 0x73656C6974706572;
    case 13:
      unsigned int v3 = 1835884909;
      return v3 | 0x736C6100000000;
    case 14:
      return 0x6C657261707061;
    case 15:
      return 0x726F737365636361;
    case 16:
      return 1685024614;
    case 17:
      return 0x6F726665726F7473;
    case 18:
      unsigned int v4 = 1852270963;
      goto LABEL_23;
    case 19:
      return 0xD000000000000011;
    case 20:
      unsigned int v4 = 1869903201;
LABEL_23:
      uint64_t result = v4 | 0x626D795300000000;
      break;
    case 21:
      uint64_t result = 0x676F4C646E617262;
      break;
    case 22:
      uint64_t result = 0x65646F63726162;
      break;
    case 23:
      uint64_t result = 0x727574706C756373;
      break;
    case 24:
      uint64_t result = 0x656E696C796B73;
      break;
    case 25:
      uint64_t result = 0x44327463656A626FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCD9C650@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCD9CB54();
  *a1 = result;
  return result;
}

uint64_t sub_1DCD9C680@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCD9C35C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DCD9C6AC()
{
  return sub_1DD048688();
}

uint64_t sub_1DCD9C70C()
{
  return sub_1DD048678();
}

void sub_1DCD9C75C(void *a1@<X8>)
{
  *a1 = &unk_1F3834338;
}

void static VisualDomain.art.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static VisualDomain.nature.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void static VisualDomain.landmark.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

void static VisualDomain.naturalLandmark.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

void static VisualDomain.apparel.getter(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

void static VisualDomain.accessories.getter(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

void static VisualDomain.food.getter(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

void static VisualDomain.storefront.getter(unsigned char *a1@<X8>)
{
  *a1 = 17;
}

void static VisualDomain.signSymbol.getter(unsigned char *a1@<X8>)
{
  *a1 = 18;
}

void static VisualDomain.cats.getter(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

void static VisualDomain.dogs.getter(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

void static VisualDomain.animals.getter(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

void static VisualDomain.birds.getter(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

void static VisualDomain.insects.getter(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

void static VisualDomain.reptiles.getter(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

void static VisualDomain.mammals.getter(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

void static VisualDomain.media.getter(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

void static VisualDomain.book.getter(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

void static VisualDomain.album.getter(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

void static VisualDomain.object2D.getter(unsigned char *a1@<X8>)
{
  *a1 = 25;
}

void static VisualDomain.barcode.getter(unsigned char *a1@<X8>)
{
  *a1 = 22;
}

void static VisualDomain.sculpture.getter(unsigned char *a1@<X8>)
{
  *a1 = 23;
}

void static VisualDomain.skyline.getter(unsigned char *a1@<X8>)
{
  *a1 = 24;
}

void static VisualDomain.laundryCareSymbol.getter(unsigned char *a1@<X8>)
{
  *a1 = 19;
}

void static VisualDomain.autoSymbol.getter(unsigned char *a1@<X8>)
{
  *a1 = 20;
}

void static VisualDomain.brandLogoSymbol.getter(unsigned char *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_1DCD9C8A0(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1DCD9C35C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1DCD9C35C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1DD048FA8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DCD9C92C()
{
  char v1 = *v0;
  sub_1DD0490B8();
  sub_1DCD9C35C(v1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  return sub_1DD049108();
}

uint64_t sub_1DCD9C990()
{
  sub_1DCD9C35C(*v0);
  sub_1DD0484F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCD9C9E4()
{
  char v1 = *v0;
  sub_1DD0490B8();
  sub_1DCD9C35C(v1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  return sub_1DD049108();
}

uint64_t sub_1DCD9CA44()
{
  return sub_1DD048688();
}

uint64_t sub_1DCD9CAA4()
{
  return sub_1DD048678();
}

uint64_t static VisualDomain.allVisualSearchDomains.getter()
{
  id v0 = VIAllVisualSearchDomains();
  uint64_t v1 = sub_1DD0487D8();

  uint64_t v2 = Set<>.toVisualDomains()(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1DCD9CB54()
{
  unint64_t v0 = sub_1DD048FE8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1A) {
    return 26;
  }
  else {
    return v0;
  }
}

unint64_t sub_1DCD9CBAC()
{
  unint64_t result = qword_1EBE849D0;
  if (!qword_1EBE849D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE849D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualDomain()
{
  return &type metadata for VisualDomain;
}

uint64_t _s18VisualIntelligence12VisualDomainV6DomainOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s18VisualIntelligence12VisualDomainV6DomainOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *unint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD9CD74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualDomain.Domain()
{
  return &type metadata for VisualDomain.Domain;
}

unint64_t sub_1DCD9CDB0()
{
  unint64_t result = qword_1EAB02A28;
  if (!qword_1EAB02A28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAB02A30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02A28);
  }
  return result;
}

unint64_t sub_1DCD9CE10()
{
  unint64_t result = qword_1EAB02A38;
  if (!qword_1EAB02A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02A38);
  }
  return result;
}

unint64_t sub_1DCD9CE64()
{
  unint64_t result = qword_1EAB02A40;
  if (!qword_1EAB02A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02A40);
  }
  return result;
}

unint64_t sub_1DCD9CEB8()
{
  unint64_t result = qword_1EBE849D8;
  if (!qword_1EBE849D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE849D8);
  }
  return result;
}

unint64_t sub_1DCD9CF14(char a1)
{
  unint64_t result = 0x746E696F70646E65;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x646E49616964656DLL;
      break;
    case 4:
      unint64_t result = 0x4C65736F62726576;
      break;
    case 5:
      unint64_t result = 0x626173694452434FLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCD9D074(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1DCD9CF14(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1DCD9CF14(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1DD048FA8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DCD9D100()
{
  char v1 = *v0;
  sub_1DD0490B8();
  sub_1DCD9CF14(v1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  return sub_1DD049108();
}

uint64_t sub_1DCD9D164()
{
  sub_1DCD9CF14(*v0);
  sub_1DD0484F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCD9D1B8()
{
  char v1 = *v0;
  sub_1DD0490B8();
  sub_1DCD9CF14(v1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  return sub_1DD049108();
}

uint64_t sub_1DCD9D218@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCD9EAA4();
  *a1 = result;
  return result;
}

unint64_t sub_1DCD9D248@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DCD9CF14(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1DCD9D274(void *a1@<X8>)
{
  *a1 = &unk_1F3835988;
}

void sub_1DCD9D284()
{
  char v1 = *(void **)(v0 + 32);
  char v2 = (void *)sub_1DD0483D8();
  id v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  if (v3)
  {
    uint64_t v4 = sub_1DD048408();
    unint64_t v6 = v5;

    uint64_t v7 = HIBYTE(v6) & 0xF;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFLL;
    if ((v6 & 0x2000000000000000) != 0) {
      uint64_t v9 = HIBYTE(v6) & 0xF;
    }
    else {
      uint64_t v9 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v9)
    {
      if ((v6 & 0x1000000000000000) != 0)
      {
        sub_1DCD9E0EC(v4, v6, 10);
LABEL_44:
        swift_bridgeObjectRelease();
        return;
      }
      if ((v6 & 0x2000000000000000) == 0)
      {
        if ((v4 & 0x1000000000000000) != 0) {
          uint64_t v10 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else {
          uint64_t v10 = (unsigned __int8 *)sub_1DD048C18();
        }
        sub_1DCD9E2B8(v10, v8, 10);
        goto LABEL_44;
      }
      v26[0] = v4;
      v26[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      if (v4 == 43)
      {
        if (v7)
        {
          if (v7 != 1 && (BYTE1(v4) - 48) <= 9u && v7 != 2 && (BYTE2(v4) - 48) <= 9u)
          {
            uint64_t v11 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
            uint64_t v12 = v7 - 3;
            if (v12)
            {
              uint64_t v13 = (unsigned __int8 *)v26 + 3;
              do
              {
                unsigned int v14 = *v13 - 48;
                if (v14 > 9) {
                  break;
                }
                uint64_t v15 = 10 * v11;
                if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
                  break;
                }
                uint64_t v11 = v15 + v14;
                if (__OFADD__(v15, v14)) {
                  break;
                }
                ++v13;
                --v12;
              }
              while (v12);
            }
          }
          goto LABEL_44;
        }
      }
      else
      {
        if (v4 != 45)
        {
          if (v7)
          {
            if ((v4 - 48) <= 9u && v7 != 1 && (BYTE1(v4) - 48) <= 9u)
            {
              uint64_t v16 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
              uint64_t v17 = v7 - 2;
              if (v17)
              {
                uint64_t v18 = (unsigned __int8 *)v26 + 2;
                do
                {
                  unsigned int v19 = *v18 - 48;
                  if (v19 > 9) {
                    break;
                  }
                  uint64_t v20 = 10 * v16;
                  if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
                    break;
                  }
                  uint64_t v16 = v20 + v19;
                  if (__OFADD__(v20, v19)) {
                    break;
                  }
                  ++v18;
                  --v17;
                }
                while (v17);
              }
            }
          }
          goto LABEL_44;
        }
        if (v7)
        {
          if (v7 != 1 && (BYTE1(v4) - 48) <= 9u && v7 != 2 && (BYTE2(v4) - 48) <= 9u)
          {
            uint64_t v21 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
            uint64_t v22 = v7 - 3;
            if (v22)
            {
              uint64_t v23 = (unsigned __int8 *)v26 + 3;
              do
              {
                unsigned int v24 = *v23 - 48;
                if (v24 > 9) {
                  break;
                }
                uint64_t v25 = 10 * v21;
                if ((unsigned __int128)(v21 * (__int128)10) >> 64 != (10 * v21) >> 63) {
                  break;
                }
                uint64_t v21 = v25 - v24;
                if (__OFSUB__(v25, v24)) {
                  break;
                }
                ++v23;
                --v22;
              }
              while (v22);
            }
          }
          goto LABEL_44;
        }
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1DCD9D5B8()
{
  if (!os_variant_has_internal_ui()) {
    return 0;
  }
  char v1 = *(void **)(v0 + 32);
  char v2 = (void *)sub_1DD0483D8();
  id v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_1DD048408();

  return v4;
}

uint64_t sub_1DCD9D660(uint64_t a1)
{
  return sub_1DCD9D6A8(a1, 0xD00000000000001CLL, 0x80000001DD069040, &qword_1EBE871E8);
}

uint64_t sub_1DCD9D684(uint64_t a1)
{
  return sub_1DCD9D6A8(a1, 0xD000000000000024, 0x80000001DD068FA0, &off_1EAB02A48);
}

uint64_t sub_1DCD9D6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  type metadata accessor for InternalSettings();
  swift_allocObject();
  uint64_t result = sub_1DCD9D700(a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_1DCD9D700(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_initWithSuiteName_, v10);

  if (v11)
  {
    v2[2] = a1;
    v2[3] = a2;
    v2[4] = v11;
    id v12 = v11;
    sub_1DCD9DAA4();

    return (uint64_t)v2;
  }
  else
  {
    if (qword_1EBE87190 != -1) {
      swift_once();
    }
    if (byte_1EBE87188 != 1) {
      goto LABEL_17;
    }
    if (sub_1DCDE82EC())
    {
      if (qword_1EAB01C28 != -1) {
        swift_once();
      }
      unsigned int v14 = (uint64_t *)&off_1EAB02A48;
    }
    else
    {
      if (qword_1EBE871A0 != -1) {
        swift_once();
      }
      unsigned int v14 = &qword_1EBE871E8;
    }
    uint64_t v15 = *(void **)(*v14 + 32);
    swift_retain();
    uint64_t v16 = (void *)sub_1DD0483D8();
    LODWORD(v15) = objc_msgSend(v15, sel_BOOLForKey_, v16);
    swift_release();

    if (v15)
    {
      if (qword_1EAB01C80 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_1EAB02B70;
    }
    else
    {
LABEL_17:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_1EBE871A8;
    }
    uint64_t v18 = __swift_project_value_buffer(v5, (uint64_t)v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v18, v5);
    unsigned int v19 = sub_1DD048048();
    os_log_type_t v20 = sub_1DD048858();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_1DCCF9000, v19, v20, "NSUserDefaults.init(suiteName:) unexpectedly returned nil", v21, 2u);
      MEMORY[0x1E01B07E0](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t result = sub_1DD048CA8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCD9DAA4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87208);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD04E760;
  *(unsigned char *)(inited + 32) = 2;
  uint64_t v1 = MEMORY[0x1E4FBB390];
  *(void *)(inited + 64) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 40) = 0;
  *(unsigned char *)(inited + 72) = 4;
  *(void *)(inited + 104) = v1;
  *(unsigned char *)(inited + 80) = 0;
  *(unsigned char *)(inited + 112) = 5;
  *(void *)(inited + 144) = v1;
  *(unsigned char *)(inited + 120) = 0;
  unint64_t v2 = sub_1DCDB7D80(inited);
  sub_1DCD9DB38(v2);
  return swift_bridgeObjectRelease();
}

void sub_1DCD9DB38(uint64_t a1)
{
  unint64_t v2 = (void *)sub_1DCDB7C48(MEMORY[0x1E4FBC860]);
  uint64_t v33 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v34 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v6 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_52;
    }
    if (v10 >= v34) {
      break;
    }
    unint64_t v11 = *(void *)(v33 + 8 * v10);
    ++v6;
    if (!v11)
    {
      int64_t v6 = v10 + 1;
      if (v10 + 1 >= v34) {
        break;
      }
      unint64_t v11 = *(void *)(v33 + 8 * v6);
      if (!v11)
      {
        int64_t v6 = v10 + 2;
        if (v10 + 2 >= v34) {
          break;
        }
        unint64_t v11 = *(void *)(v33 + 8 * v6);
        if (!v11)
        {
          int64_t v6 = v10 + 3;
          if (v10 + 3 >= v34) {
            break;
          }
          unint64_t v11 = *(void *)(v33 + 8 * v6);
          if (!v11)
          {
            int64_t v6 = v10 + 4;
            if (v10 + 4 >= v34) {
              break;
            }
            unint64_t v11 = *(void *)(v33 + 8 * v6);
            if (!v11)
            {
              int64_t v12 = v10 + 5;
              if (v12 >= v34) {
                break;
              }
              unint64_t v11 = *(void *)(v33 + 8 * v12);
              if (!v11)
              {
                while (1)
                {
                  int64_t v6 = v12 + 1;
                  if (__OFADD__(v12, 1)) {
                    goto LABEL_53;
                  }
                  if (v6 >= v34) {
                    goto LABEL_49;
                  }
                  unint64_t v11 = *(void *)(v33 + 8 * v6);
                  ++v12;
                  if (v11) {
                    goto LABEL_25;
                  }
                }
              }
              int64_t v6 = v12;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v6 << 6);
LABEL_26:
    char v13 = *(unsigned char *)(*(void *)(a1 + 48) + v9);
    sub_1DCD21A28(*(void *)(a1 + 56) + 32 * v9, (uint64_t)v40 + 8);
    LOBYTE(v40[0]) = v13;
    v38[0] = v40[0];
    v38[1] = v40[1];
    uint64_t v39 = v41;
    unint64_t v14 = 0xEE0079654B4C5255;
    uint64_t v15 = 0x746E696F70646E65;
    switch(v13)
    {
      case 1:
        uint64_t v16 = "vt";
        goto LABEL_31;
      case 2:
        uint64_t v16 = "debugParametersKey";
LABEL_31:
        unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
        uint64_t v15 = 0xD000000000000012;
        break;
      case 3:
        unint64_t v14 = 0xEA00000000007865;
        uint64_t v15 = 0x646E49616964656DLL;
        break;
      case 4:
        unint64_t v14 = 0xEE00676E6967676FLL;
        uint64_t v15 = 0x4C65736F62726576;
        break;
      case 5:
        unint64_t v14 = 0xEB0000000064656CLL;
        uint64_t v15 = 0x626173694452434FLL;
        break;
      case 6:
        uint64_t v15 = 0xD00000000000001ELL;
        uint64_t v17 = "rboseLogging";
        goto LABEL_37;
      case 7:
        uint64_t v15 = 0xD000000000000011;
        uint64_t v17 = "simulatedApplicationIdentifier";
        goto LABEL_37;
      case 8:
        uint64_t v15 = 0xD000000000000016;
        uint64_t v17 = "parseCacheVersion";
        goto LABEL_37;
      case 9:
        uint64_t v15 = 0xD000000000000018;
        uint64_t v17 = "reportAnIssueContainer";
LABEL_37:
        unint64_t v14 = (unint64_t)v17 | 0x8000000000000000;
        break;
      default:
        break;
    }
    char v36 = v38[0];
    sub_1DCD21A28((uint64_t)v38 + 8, (uint64_t)v37);
    sub_1DCD9E7E8(v37, v35);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v20 = sub_1DCEAD1A4(v15, v14);
    uint64_t v21 = v2[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      sub_1DD049028();
      __break(1u);
      JUMPOUT(0x1DCD9E048);
    }
    char v24 = v19;
    if (v2[3] >= v23)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v19) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1DCE87E8C();
        if (v24) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1DCE7CFE8(v23, isUniquelyReferenced_nonNull_native);
      unint64_t v25 = sub_1DCEAD1A4(v15, v14);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_54;
      }
      unint64_t v20 = v25;
      if (v24)
      {
LABEL_4:
        uint64_t v7 = (_OWORD *)(v2[7] + 32 * v20);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
        sub_1DCD9E7E8(v35, v7);
        goto LABEL_5;
      }
    }
    v2[(v20 >> 6) + 8] |= 1 << v20;
    unsigned int v27 = (uint64_t *)(v2[6] + 16 * v20);
    *unsigned int v27 = v15;
    v27[1] = v14;
    sub_1DCD9E7E8(v35, (_OWORD *)(v2[7] + 32 * v20));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_51;
    }
    v2[2] = v30;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCD9E7F8((uint64_t)v38);
  }
LABEL_49:
  swift_release();
  id v31 = (void *)sub_1DD0482C8();
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_registerDefaults_, v31);
}

uint64_t sub_1DCD9E070()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InternalSettings()
{
  return self;
}

unsigned __int8 *sub_1DCD9E0D4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCD9E534(a1, a2, a3);
}

unsigned __int8 *sub_1DCD9E0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DD048628();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1DCD4FA4C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_1DD048C18();
  }
LABEL_7:
  unint64_t v11 = sub_1DCD9E2B8(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1DCD9E1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DD048628();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1DCD4FA4C();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_1DD048C18();
  }
LABEL_7:
  unsigned __int16 v11 = (unsigned __int16)sub_1DCD9E534(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FF;
}

unsigned __int8 *sub_1DCD9E2B8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1DCD9E534(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          char v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            int v23 = (char)v8 * (char)a3;
            char v24 = v23;
            if ((char)v23 != v23) {
              goto LABEL_72;
            }
            int v8 = (char)v23 + (char)(v21 + v22);
            if ((char)(v24 + v21 + v22) != v8) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          LOBYTE(v28) = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            int v31 = (char)v28 * (char)a3;
            char v32 = v31;
            if ((char)v31 != v31) {
              goto LABEL_72;
            }
            int v28 = (char)v31 + (char)(v29 + v30);
            if ((char)(v32 + v29 + v30) != v28) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            int v14 = (char)v8 * (char)a3;
            char v15 = v14;
            if ((char)v14 != v14) {
              goto LABEL_72;
            }
            int v8 = (char)v14 - (char)(v10 + v11);
            if ((char)(v15 - (v10 + v11)) != v8) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

_OWORD *sub_1DCD9E7E8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1DCD9E7F8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE871D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalSettings.Key(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for InternalSettings.Key(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCD9E9B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalSettings.Key()
{
  return &type metadata for InternalSettings.Key;
}

unint64_t sub_1DCD9E9F0()
{
  unint64_t result = qword_1EAB02A50;
  if (!qword_1EAB02A50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAB02A58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02A50);
  }
  return result;
}

unint64_t sub_1DCD9EA50()
{
  unint64_t result = qword_1EBE871D8;
  if (!qword_1EBE871D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE871D8);
  }
  return result;
}

uint64_t sub_1DCD9EAA4()
{
  unint64_t v0 = sub_1DD048D38();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DCD9EAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    swift_bridgeObjectRetain();
    unsigned int v6 = (_DWORD *)(a3 + 48);
    uint64_t v7 = MEMORY[0x1E4FBC860];
    do
    {
      float v11 = *(float *)v6;
      if (*(float *)v6 >= 0.01)
      {
        uint64_t v13 = *((void *)v6 - 2);
        uint64_t v12 = *((void *)v6 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1DCFC49A8(0, *(void *)(v7 + 16) + 1, 1);
        }
        unint64_t v9 = *(void *)(v7 + 16);
        unint64_t v8 = *(void *)(v7 + 24);
        if (v9 >= v8 >> 1) {
          sub_1DCFC49A8(v8 > 1, v9 + 1, 1);
        }
        *(void *)(v7 + 16) = v9 + 1;
        uint64_t v10 = v7 + 24 * v9;
        *(void *)(v10 + 32) = v13;
        *(void *)(v10 + 40) = v12;
        *(float *)(v10 + 48) = v11;
      }
      v6 += 6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x1E4FBC860];
    int64_t v14 = *(void *)(v7 + 16);
    if (v14) {
      goto LABEL_11;
    }
LABEL_17:
    swift_release();
    uint64_t v15 = MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  uint64_t v7 = MEMORY[0x1E4FBC860];
  int64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (!v14) {
    goto LABEL_17;
  }
LABEL_11:
  uint64_t v29 = v4;
  sub_1DCFC4948(0, v14, 0);
  uint64_t v15 = v29;
  uint64_t v16 = (_DWORD *)(v7 + 48);
  uint64_t v17 = MEMORY[0x1E4FBB4D0];
  do
  {
    uint64_t v19 = *((void *)v16 - 2);
    uint64_t v18 = *((void *)v16 - 1);
    int v20 = *v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85228);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1DD04EF60;
    *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v21 + 64) = sub_1DCD52754();
    *(void *)(v21 + 32) = v19;
    *(void *)(v21 + 40) = v18;
    *(void *)(v21 + 96) = MEMORY[0x1E4FBB470];
    *(void *)(v21 + 104) = v17;
    *(_DWORD *)(v21 + 72) = v20;
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_1DD048438();
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    unint64_t v26 = *(void *)(v29 + 16);
    unint64_t v25 = *(void *)(v29 + 24);
    if (v26 >= v25 >> 1) {
      sub_1DCFC4948(v25 > 1, v26 + 1, 1);
    }
    v16 += 6;
    *(void *)(v29 + 16) = v26 + 1;
    uint64_t v27 = v29 + 16 * v26;
    *(void *)(v27 + 32) = v22;
    *(void *)(v27 + 40) = v24;
    --v14;
  }
  while (v14);
  swift_release();
LABEL_18:
  sub_1DD048B98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  MEMORY[0x1E01AE380](v15, MEMORY[0x1E4FBB1A0]);
  sub_1DD048548();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x4E52556C65646F6DLL;
}

uint64_t sub_1DCD9EE00(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = (uint64_t (*)(void *))result;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    uint64_t v21 = a3;
    while (v5 < *(void *)(a3 + 16))
    {
      uint64_t v6 = *(void *)(a3 + v4 + 32);
      uint64_t v7 = *(void *)(a3 + v4 + 40);
      uint64_t v8 = *(void *)(a3 + v4 + 48);
      uint64_t v9 = *(void *)(a3 + v4 + 56);
      uint64_t v10 = *(void *)(a3 + v4 + 64);
      uint64_t v11 = *(void *)(a3 + v4 + 72);
      uint64_t v12 = *(void *)(a3 + v4 + 80);
      uint64_t v14 = *(void *)(a3 + v4 + 88);
      uint64_t v13 = *(void *)(a3 + v4 + 96);
      int v15 = *(_DWORD *)(a3 + v4 + 104);
      v25[0] = v6;
      v25[1] = v7;
      int64x2_t v25[2] = v8;
      void v25[3] = v9;
      v25[4] = v10;
      v25[5] = v11;
      v25[6] = v12;
      v25[7] = v14;
      v25[8] = v13;
      int v26 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v16 = v23(v25);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v16)
      {
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v27 = v24;
        if ((result & 1) == 0)
        {
          unint64_t result = sub_1DCFC4968(0, *(void *)(v24 + 16) + 1, 1);
          uint64_t v24 = v27;
        }
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        unint64_t v19 = v18 + 1;
        if (v18 >= v17 >> 1)
        {
          unint64_t result = sub_1DCFC4968(v17 > 1, v18 + 1, 1);
          unint64_t v19 = v18 + 1;
          uint64_t v24 = v27;
        }
        *(void *)(v24 + 16) = v19;
        uint64_t v20 = v24 + 80 * v18;
        *(void *)(v20 + 32) = v6;
        *(void *)(v20 + 40) = v7;
        *(void *)(v20 + 48) = v8;
        *(void *)(v20 + 56) = v9;
        *(void *)(v20 + 64) = v10;
        *(void *)(v20 + 72) = v11;
        *(void *)(v20 + 80) = v12;
        *(void *)(v20 + 88) = v14;
        *(void *)(v20 + 96) = v13;
        *(_DWORD *)(v20 + 104) = v15;
        uint64_t v3 = 0;
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        uint64_t v3 = 0;
      }
      ++v5;
      v4 += 80;
      a3 = v21;
      if (v22 == v5) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
LABEL_16:
    swift_bridgeObjectRelease();
    return v24;
  }
  return result;
}

uint64_t sub_1DCD9F014(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v18 = *(void *)(a3 + 16);
  if (v18)
  {
    unint64_t v5 = (uint64_t (*)(void *))result;
    unint64_t v6 = 0;
    uint64_t v7 = (_DWORD *)(a3 + 48);
    uint64_t v8 = MEMORY[0x1E4FBC860];
    char v16 = (uint64_t (*)(void *))result;
    while (v6 < *(void *)(v4 + 16))
    {
      uint64_t v10 = *((void *)v7 - 2);
      uint64_t v9 = *((void *)v7 - 1);
      int v11 = *v7;
      v19[0] = v10;
      v19[1] = v9;
      int v20 = v11;
      swift_bridgeObjectRetain();
      char v12 = v5(v19);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v12)
      {
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v21 = v8;
        if ((result & 1) == 0)
        {
          unint64_t result = sub_1DCFC49A8(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v21;
        }
        unint64_t v14 = *(void *)(v8 + 16);
        unint64_t v13 = *(void *)(v8 + 24);
        if (v14 >= v13 >> 1)
        {
          unint64_t result = sub_1DCFC49A8(v13 > 1, v14 + 1, 1);
          uint64_t v8 = v21;
        }
        *(void *)(v8 + 16) = v14 + 1;
        uint64_t v15 = v8 + 24 * v14;
        *(void *)(v15 + 32) = v10;
        *(void *)(v15 + 40) = v9;
        *(_DWORD *)(v15 + 48) = v11;
        uint64_t v4 = a3;
        unint64_t v5 = v16;
      }
      else
      {
        unint64_t result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 6;
      if (v18 == v6) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1DCD9F1A4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v5 = (uint64_t (*)(void *))result;
    unint64_t v6 = 0;
    uint64_t v7 = (void *)(a3 + 80);
    uint64_t v8 = MEMORY[0x1E4FBC860];
    int v20 = (uint64_t (*)(void *))result;
    while (v6 < *(void *)(v4 + 16))
    {
      uint64_t v10 = *(v7 - 6);
      uint64_t v9 = *(v7 - 5);
      int v11 = *((_DWORD *)v7 - 8);
      uint64_t v12 = *(v7 - 3);
      uint64_t v13 = *(v7 - 2);
      uint64_t v14 = *(v7 - 1);
      uint64_t v15 = *v7;
      v23[0] = v10;
      v23[1] = v9;
      int v24 = v11;
      uint64_t v25 = v12;
      uint64_t v26 = v13;
      uint64_t v27 = v14;
      uint64_t v28 = v15;
      swift_bridgeObjectRetain();
      char v16 = v5(v23);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v16)
      {
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v29 = v8;
        if ((result & 1) == 0)
        {
          unint64_t result = sub_1DCFC5920(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v29;
        }
        unint64_t v18 = *(void *)(v8 + 16);
        unint64_t v17 = *(void *)(v8 + 24);
        if (v18 >= v17 >> 1)
        {
          unint64_t result = sub_1DCFC5920(v17 > 1, v18 + 1, 1);
          uint64_t v8 = v29;
        }
        *(void *)(v8 + 16) = v18 + 1;
        uint64_t v19 = v8 + 56 * v18;
        *(void *)(v19 + 32) = v10;
        *(void *)(v19 + 40) = v9;
        *(_DWORD *)(v19 + 48) = v11;
        *(void *)(v19 + 56) = v12;
        *(void *)(v19 + 64) = v13;
        *(void *)(v19 + 72) = v14;
        *(void *)(v19 + 80) = v15;
        uint64_t v4 = a3;
        unint64_t v5 = v20;
      }
      else
      {
        unint64_t result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 7;
      if (v22 == v6) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

double sub_1DCD9F35C@<D0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = *v3;
  switch(v11)
  {
    case 1:
      LOBYTE(v11) = 5;
      goto LABEL_26;
    case 2:
      LOBYTE(v11) = 17;
      goto LABEL_26;
    case 3:
      LOBYTE(v11) = 18;
      goto LABEL_26;
    case 4:
      LOBYTE(v11) = 13;
      goto LABEL_26;
    case 5:
      LOBYTE(v11) = 16;
      goto LABEL_26;
    case 6:
      LOBYTE(v11) = 14;
      goto LABEL_26;
    case 7:
      LOBYTE(v11) = 8;
      goto LABEL_26;
    case 8:
      LOBYTE(v11) = 7;
      goto LABEL_26;
    case 9:
      LOBYTE(v11) = 6;
      goto LABEL_26;
    case 10:
      LOBYTE(v11) = 9;
      goto LABEL_26;
    case 11:
      LOBYTE(v11) = 10;
      goto LABEL_26;
    case 12:
      LOBYTE(v11) = 11;
      goto LABEL_26;
    case 13:
      LOBYTE(v11) = 12;
      goto LABEL_26;
    case 14:
      LOBYTE(v11) = 3;
      goto LABEL_26;
    case 15:
      LOBYTE(v11) = 29;
      goto LABEL_26;
    case 16:
      LOBYTE(v11) = 27;
      goto LABEL_26;
    case 17:
      LOBYTE(v11) = 30;
      goto LABEL_26;
    case 18:
      LOBYTE(v11) = 31;
      goto LABEL_26;
    case 19:
      LOBYTE(v11) = 34;
      goto LABEL_26;
    case 20:
      LOBYTE(v11) = 35;
      goto LABEL_26;
    case 21:
      LOBYTE(v11) = 33;
      goto LABEL_26;
    case 22:
      LOBYTE(v11) = 19;
      goto LABEL_26;
    case 23:
      LOBYTE(v11) = 26;
      goto LABEL_26;
    case 24:
      LOBYTE(v11) = 28;
      goto LABEL_26;
    case 25:
      goto LABEL_32;
    default:
LABEL_26:
      unint64_t v12 = sub_1DCDE45B4(v11);
      if (*(void *)(v10 + 16) && (unint64_t v14 = sub_1DCEAD1A4(v12, v13), (v15 & 1) != 0))
      {
        char v16 = *(void **)(*(void *)(v10 + 56) + 8 * v14);
        uint64_t v18 = v16[2];
        uint64_t v17 = v16[3];
        uint64_t v20 = v16[4];
        uint64_t v19 = v16[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *a2 = v18;
        a2[1] = v17;
        a2[2] = v20;
        a2[3] = v19;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1DCDB40EC((uint64_t)v9);
        uint64_t v22 = sub_1DD048048();
        os_log_type_t v23 = sub_1DD048858();
        if (os_log_type_enabled(v22, v23))
        {
          int v24 = (uint8_t *)swift_slowAlloc();
          uint64_t v25 = swift_slowAlloc();
          uint64_t v30 = v6;
          uint64_t v26 = v25;
          uint64_t v32 = v25;
          *(_DWORD *)int v24 = 136315138;
          unint64_t v27 = sub_1DCDE45B4(v11);
          uint64_t v31 = sub_1DCED7FA0(v27, v28, &v32);
          sub_1DD048A28();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1DCCF9000, v22, v23, "trying to access node with kgid %s not present in default ontology graph", v24, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1E01B07E0](v26, -1, -1);
          MEMORY[0x1E01B07E0](v24, -1, -1);

          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v30);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
LABEL_32:
        double result = 0.0;
        *(_OWORD *)a2 = 0u;
        *((_OWORD *)a2 + 1) = 0u;
      }
      return result;
  }
}

void *sub_1DCD9F708(uint64_t a1)
{
  *(void *)&long long v29 = a1;
  swift_bridgeObjectRetain();
  sub_1DCD9F910((uint64_t *)&v29);
  uint64_t v1 = v29;
  uint64_t v2 = *(void *)(v29 + 16);
  if (!v2)
  {
    swift_release();
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v3 = v2 - 1;
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v5 = MEMORY[0x1E4FBC870];
  for (uint64_t i = 32; ; i += 160)
  {
    long long v7 = *(_OWORD *)(v1 + i + 16);
    long long v29 = *(_OWORD *)(v1 + i);
    long long v30 = v7;
    long long v8 = *(_OWORD *)(v1 + i + 32);
    long long v9 = *(_OWORD *)(v1 + i + 48);
    long long v10 = *(_OWORD *)(v1 + i + 80);
    long long v33 = *(_OWORD *)(v1 + i + 64);
    long long v34 = v10;
    long long v31 = v8;
    long long v32 = v9;
    long long v11 = *(_OWORD *)(v1 + i + 96);
    long long v12 = *(_OWORD *)(v1 + i + 112);
    long long v13 = *(_OWORD *)(v1 + i + 128);
    *(_OWORD *)((char *)v37 + 13) = *(_OWORD *)(v1 + i + 141);
    long long v36 = v12;
    v37[0] = v13;
    long long v35 = v11;
    char v14 = v29;
    sub_1DCD32CC8((uint64_t)&v29);
    swift_bridgeObjectRetain();
    char v15 = sub_1DCD7C698(v14, v5);
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      break;
    }
    sub_1DCD32DD4((uint64_t)&v29);
    if (!v3) {
      goto LABEL_12;
    }
LABEL_11:
    --v3;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1DCDA04D8(v14, isUniquelyReferenced_nonNull_native, &v28);
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1DCE9D680(0, v4[2] + 1, 1, v4);
  }
  unint64_t v18 = v4[2];
  unint64_t v17 = v4[3];
  if (v18 >= v17 >> 1) {
    uint64_t v4 = sub_1DCE9D680((void *)(v17 > 1), v18 + 1, 1, v4);
  }
  void v4[2] = v18 + 1;
  uint64_t v19 = &v4[20 * v18];
  long long v20 = v30;
  void v19[2] = v29;
  void v19[3] = v20;
  long long v21 = v31;
  long long v22 = v32;
  long long v23 = v34;
  v19[6] = v33;
  uint64_t v19[7] = v23;
  v19[4] = v21;
  v19[5] = v22;
  long long v24 = v35;
  long long v25 = v36;
  long long v26 = v37[0];
  *(_OWORD *)((char *)v19 + 173) = *(_OWORD *)((char *)v37 + 13);
  v19[9] = v25;
  v19[10] = v26;
  v19[8] = v24;
  if (v3) {
    goto LABEL_11;
  }
LABEL_12:
  swift_release();
LABEL_14:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1DCD9F910(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DCD74344(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1DCD9F97C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1DCD9F97C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DD048F68();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_131;
    }
    if (v3) {
      return sub_1DCDA0118(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_139;
  }
  uint64_t v94 = result;
  uint64_t v91 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v96 = (float *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      long long v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_97:
      uint64_t v82 = v11;
      uint64_t v93 = v8;
      if (v12 >= 2)
      {
        uint64_t v83 = *v91;
        do
        {
          unint64_t v84 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_126;
          }
          if (!v83) {
            goto LABEL_138;
          }
          uint64_t v85 = v82;
          uint64_t v86 = *(void *)&v82[16 * v84 + 32];
          uint64_t v87 = *(void *)&v82[16 * v12 + 24];
          sub_1DCDA0218((float *)(v83 + 160 * v86), (float *)(v83 + 160 * *(void *)&v82[16 * v12 + 16]), v83 + 160 * v87, v96);
          if (v1) {
            break;
          }
          if (v87 < v86) {
            goto LABEL_127;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v85 = sub_1DCD729EC((uint64_t)v85);
          }
          if (v84 >= *((void *)v85 + 2)) {
            goto LABEL_128;
          }
          id v88 = &v85[16 * v84 + 32];
          *(void *)id v88 = v86;
          *((void *)v88 + 1) = v87;
          unint64_t v89 = *((void *)v85 + 2);
          if (v12 > v89) {
            goto LABEL_129;
          }
          memmove(&v85[16 * v12 + 16], &v85[16 * v12 + 32], 16 * (v89 - v12));
          uint64_t v82 = v85;
          *((void *)v85 + 2) = v89 - 1;
          unint64_t v12 = v89 - 1;
        }
        while (v89 > 2);
      }
LABEL_94:
      swift_bridgeObjectRelease();
      *(void *)(v93 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v93 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1DD0486F8();
    *(void *)(v7 + 16) = v6;
    uint64_t v93 = v7;
    uint64_t v96 = (float *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v92 = *a1 + 440;
  uint64_t v90 = *a1 - 160;
  long long v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v95 = v3;
  uint64_t v97 = v10;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      float v14 = *(float *)(v10 + 160 * v9 + 116) + *(float *)(v10 + 160 * v9 + 120);
      float v15 = *(float *)(v10 + 160 * v13 + 116) + *(float *)(v10 + 160 * v13 + 120);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        char v16 = (float *)(v92 + 160 * v13);
        while (v15 < v14 != (float)(*(v16 - 41) + *(v16 - 40)) >= (float)(*(v16 - 1) + *v16))
        {
          ++v9;
          v16 += 40;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13) {
          goto LABEL_132;
        }
        if (v13 < v9)
        {
          unint64_t v17 = (_OWORD *)(v90 + 160 * v9);
          uint64_t v18 = v9;
          uint64_t v19 = v13;
          long long v20 = (long long *)(v10 + 160 * v13);
          do
          {
            if (v19 != --v18)
            {
              if (!v10) {
                goto LABEL_137;
              }
              long long v110 = v20[6];
              long long v112 = v20[7];
              *(_OWORD *)uint64_t v114 = v20[8];
              *(_OWORD *)&v114[13] = *(long long *)((char *)v20 + 141);
              long long v102 = v20[2];
              long long v104 = v20[3];
              long long v106 = v20[4];
              long long v108 = v20[5];
              long long v98 = *v20;
              long long v100 = v20[1];
              memmove(v20, v17, 0xA0uLL);
              v17[6] = v110;
              v17[7] = v112;
              v17[8] = *(_OWORD *)v114;
              *(_OWORD *)((char *)v17 + 141) = *(_OWORD *)&v114[13];
              _OWORD v17[2] = v102;
              v17[3] = v104;
              v17[4] = v106;
              v17[5] = v108;
              *unint64_t v17 = v98;
              v17[1] = v100;
              uint64_t v10 = v97;
            }
            ++v19;
            v17 -= 10;
            v20 += 10;
          }
          while (v19 < v18);
          uint64_t v3 = v95;
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_130;
    }
    if (v9 - v13 >= v94) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v94;
    if (__OFADD__(v13, v94)) {
      goto LABEL_133;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      uint64_t v22 = v10 + 160 * v9;
      do
      {
        uint64_t v23 = v13;
        uint64_t v24 = v22;
        do
        {
          if ((float)(*(float *)(v24 - 44) + *(float *)(v24 - 40)) >= (float)(*(float *)(v24 + 116)
                                                                             + *(float *)(v24 + 120)))
            break;
          if (!v10) {
            goto LABEL_135;
          }
          long long v25 = (_OWORD *)(v24 - 160);
          long long v111 = *(_OWORD *)(v24 + 96);
          long long v113 = *(_OWORD *)(v24 + 112);
          *(_OWORD *)uint64_t v115 = *(_OWORD *)(v24 + 128);
          *(_OWORD *)&v115[13] = *(_OWORD *)(v24 + 141);
          long long v103 = *(_OWORD *)(v24 + 32);
          long long v105 = *(_OWORD *)(v24 + 48);
          long long v107 = *(_OWORD *)(v24 + 64);
          long long v109 = *(_OWORD *)(v24 + 80);
          long long v99 = *(_OWORD *)v24;
          long long v101 = *(_OWORD *)(v24 + 16);
          long long v26 = *(_OWORD *)(v24 - 48);
          *(_OWORD *)(v24 + 96) = *(_OWORD *)(v24 - 64);
          *(_OWORD *)(v24 + 112) = v26;
          long long v27 = *(_OWORD *)(v24 - 16);
          *(_OWORD *)(v24 + 128) = *(_OWORD *)(v24 - 32);
          *(_OWORD *)(v24 + 144) = v27;
          long long v28 = *(_OWORD *)(v24 - 112);
          *(_OWORD *)(v24 + 32) = *(_OWORD *)(v24 - 128);
          *(_OWORD *)(v24 + 48) = v28;
          long long v29 = *(_OWORD *)(v24 - 80);
          *(_OWORD *)(v24 + 64) = *(_OWORD *)(v24 - 96);
          *(_OWORD *)(v24 + 80) = v29;
          long long v30 = *(_OWORD *)(v24 - 144);
          *(_OWORD *)uint64_t v24 = *(_OWORD *)(v24 - 160);
          *(_OWORD *)(v24 + 16) = v30;
          v25[6] = v111;
          v25[7] = v113;
          v25[8] = *(_OWORD *)v115;
          *(_OWORD *)((char *)v25 + 141) = *(_OWORD *)&v115[13];
          int64x2_t v25[2] = v103;
          void v25[3] = v105;
          v25[4] = v107;
          v25[5] = v109;
          ++v23;
          v24 -= 160;
          *long long v25 = v99;
          v25[1] = v101;
        }
        while (v9 != v23);
        ++v9;
        v22 += 160;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_125;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v11 = sub_1DCD71FDC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v32 = *((void *)v11 + 2);
    unint64_t v31 = *((void *)v11 + 3);
    unint64_t v12 = v32 + 1;
    uint64_t v10 = v97;
    if (v32 >= v31 >> 1)
    {
      int v81 = sub_1DCD71FDC((char *)(v31 > 1), v32 + 1, 1, v11);
      uint64_t v10 = v97;
      long long v11 = v81;
    }
    *((void *)v11 + 2) = v12;
    long long v33 = v11 + 32;
    long long v34 = &v11[16 * v32 + 32];
    *(void *)long long v34 = v13;
    *((void *)v34 + 1) = v9;
    if (v32)
    {
      while (1)
      {
        unint64_t v35 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v40 = &v33[16 * v12];
          uint64_t v41 = *((void *)v40 - 8);
          uint64_t v42 = *((void *)v40 - 7);
          BOOL v46 = __OFSUB__(v42, v41);
          uint64_t v43 = v42 - v41;
          if (v46) {
            goto LABEL_114;
          }
          uint64_t v45 = *((void *)v40 - 6);
          uint64_t v44 = *((void *)v40 - 5);
          BOOL v46 = __OFSUB__(v44, v45);
          uint64_t v38 = v44 - v45;
          char v39 = v46;
          if (v46) {
            goto LABEL_115;
          }
          unint64_t v47 = v12 - 2;
          unint64_t v48 = &v33[16 * v12 - 32];
          uint64_t v50 = *(void *)v48;
          uint64_t v49 = *((void *)v48 + 1);
          BOOL v46 = __OFSUB__(v49, v50);
          uint64_t v51 = v49 - v50;
          if (v46) {
            goto LABEL_117;
          }
          BOOL v46 = __OFADD__(v38, v51);
          uint64_t v52 = v38 + v51;
          if (v46) {
            goto LABEL_120;
          }
          if (v52 >= v43)
          {
            uint64_t v70 = &v33[16 * v35];
            uint64_t v72 = *(void *)v70;
            uint64_t v71 = *((void *)v70 + 1);
            BOOL v46 = __OFSUB__(v71, v72);
            uint64_t v73 = v71 - v72;
            if (v46) {
              goto LABEL_124;
            }
            BOOL v63 = v38 < v73;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v64 = *((void *)v11 + 4);
            uint64_t v65 = *((void *)v11 + 5);
            BOOL v46 = __OFSUB__(v65, v64);
            uint64_t v57 = v65 - v64;
            char v58 = v46;
            goto LABEL_78;
          }
          uint64_t v37 = *((void *)v11 + 4);
          uint64_t v36 = *((void *)v11 + 5);
          BOOL v46 = __OFSUB__(v36, v37);
          uint64_t v38 = v36 - v37;
          char v39 = v46;
        }
        if (v39) {
          goto LABEL_116;
        }
        unint64_t v47 = v12 - 2;
        double v53 = &v33[16 * v12 - 32];
        uint64_t v55 = *(void *)v53;
        uint64_t v54 = *((void *)v53 + 1);
        BOOL v56 = __OFSUB__(v54, v55);
        uint64_t v57 = v54 - v55;
        char v58 = v56;
        if (v56) {
          goto LABEL_119;
        }
        uint64_t v59 = &v33[16 * v35];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v46 = __OFSUB__(v60, v61);
        uint64_t v62 = v60 - v61;
        if (v46) {
          goto LABEL_122;
        }
        if (__OFADD__(v57, v62)) {
          goto LABEL_123;
        }
        if (v57 + v62 >= v38)
        {
          BOOL v63 = v38 < v62;
LABEL_84:
          if (v63) {
            unint64_t v35 = v47;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v58) {
          goto LABEL_118;
        }
        uint64_t v66 = &v33[16 * v35];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v46 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v46) {
          goto LABEL_121;
        }
        if (v69 < v57) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v74 = v35 - 1;
        if (v35 - 1 >= v12)
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!v10) {
          goto LABEL_136;
        }
        id v75 = v11;
        id v76 = &v33[16 * v74];
        uint64_t v77 = *(void *)v76;
        int v78 = &v33[16 * v35];
        uint64_t v79 = *((void *)v78 + 1);
        sub_1DCDA0218((float *)(v10 + 160 * *(void *)v76), (float *)(v10 + 160 * *(void *)v78), v10 + 160 * v79, v96);
        if (v1) {
          goto LABEL_94;
        }
        if (v79 < v77) {
          goto LABEL_111;
        }
        if (v35 > *((void *)v75 + 2)) {
          goto LABEL_112;
        }
        *(void *)id v76 = v77;
        *(void *)&v33[16 * v74 + 8] = v79;
        unint64_t v80 = *((void *)v75 + 2);
        if (v35 >= v80) {
          goto LABEL_113;
        }
        long long v11 = v75;
        unint64_t v12 = v80 - 1;
        memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
        *((void *)v75 + 2) = v80 - 1;
        uint64_t v10 = v97;
        if (v80 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v95;
    if (v9 >= v95)
    {
      uint64_t v8 = v93;
      goto LABEL_97;
    }
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCDA0118(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 160 * a3;
LABEL_5:
    uint64_t v6 = result;
    uint64_t v7 = v5;
    while (1)
    {
      if ((float)(*(float *)(v7 - 44) + *(float *)(v7 - 40)) >= (float)(*(float *)(v7 + 116) + *(float *)(v7 + 120)))
      {
LABEL_4:
        ++a3;
        v5 += 160;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v4) {
        break;
      }
      uint64_t v8 = (_OWORD *)(v7 - 160);
      long long v20 = *(_OWORD *)(v7 + 96);
      long long v21 = *(_OWORD *)(v7 + 112);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)(v7 + 128);
      *(_OWORD *)&v22[13] = *(_OWORD *)(v7 + 141);
      long long v16 = *(_OWORD *)(v7 + 32);
      long long v17 = *(_OWORD *)(v7 + 48);
      long long v18 = *(_OWORD *)(v7 + 64);
      long long v19 = *(_OWORD *)(v7 + 80);
      long long v14 = *(_OWORD *)v7;
      long long v15 = *(_OWORD *)(v7 + 16);
      long long v9 = *(_OWORD *)(v7 - 48);
      *(_OWORD *)(v7 + 96) = *(_OWORD *)(v7 - 64);
      *(_OWORD *)(v7 + 112) = v9;
      long long v10 = *(_OWORD *)(v7 - 16);
      *(_OWORD *)(v7 + 128) = *(_OWORD *)(v7 - 32);
      *(_OWORD *)(v7 + 144) = v10;
      long long v11 = *(_OWORD *)(v7 - 112);
      *(_OWORD *)(v7 + 32) = *(_OWORD *)(v7 - 128);
      *(_OWORD *)(v7 + 48) = v11;
      long long v12 = *(_OWORD *)(v7 - 80);
      *(_OWORD *)(v7 + 64) = *(_OWORD *)(v7 - 96);
      *(_OWORD *)(v7 + 80) = v12;
      long long v13 = *(_OWORD *)(v7 - 144);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)(v7 - 160);
      *(_OWORD *)(v7 + 16) = v13;
      v8[6] = v20;
      v8[7] = v21;
      v8[8] = *(_OWORD *)v22;
      *(_OWORD *)((char *)v8 + 141) = *(_OWORD *)&v22[13];
      v8[2] = v16;
      double v8[3] = v17;
      _OWORD v8[4] = v18;
      v8[5] = v19;
      ++v6;
      v7 -= 160;
      _OWORD *v8 = v14;
      v8[1] = v15;
      if (a3 == v6) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCDA0218(float *__dst, float *__src, unint64_t a3, float *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 160;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 160;
  long long v25 = __dst;
  uint64_t v24 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -159)
    {
      uint64_t v17 = 40 * v11;
      if (a4 != __src || &__src[v17] <= a4) {
        memmove(a4, __src, 160 * v11);
      }
      long long v18 = &v4[v17];
      uint64_t v23 = (char *)&v4[v17];
      long long v25 = v6;
      if (v7 < v6 && v10 >= 160)
      {
        long long v19 = (float *)(a3 - 160);
        do
        {
          long long v20 = v19 + 40;
          if ((float)(*(v6 - 11) + *(v6 - 10)) >= (float)(*(v18 - 11) + *(v18 - 10)))
          {
            uint64_t v23 = (char *)(v18 - 40);
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              memmove(v19, v18 - 40, 0xA0uLL);
            }
            long long v21 = v6;
            v18 -= 40;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            long long v21 = v6 - 40;
            if (v20 != v6 || v19 >= v6) {
              memmove(v19, v6 - 40, 0xA0uLL);
            }
            long long v25 = v6 - 40;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 40;
          uint64_t v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_1DCD722E4((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -159)
  {
    size_t v12 = 40 * v9;
    if (a4 != __dst || &__dst[v12] <= a4) {
      memmove(a4, __dst, v12 * 4);
    }
    long long v13 = &v4[v12];
    uint64_t v23 = (char *)v13;
    if ((unint64_t)v6 < a3 && v8 >= 160)
    {
      long long v14 = v4;
      while (1)
      {
        if ((float)(v14[29] + v14[30]) >= (float)(v6[29] + v6[30]))
        {
          uint64_t v4 = v14 + 40;
          long long v16 = v14;
          long long v15 = v6;
          if (v7 == v14)
          {
            v14 += 40;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v14 += 40;
          }
        }
        else
        {
          long long v15 = v6 + 40;
          long long v16 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_18;
          }
        }
        memmove(v7, v16, 0xA0uLL);
LABEL_18:
        v7 += 40;
        if (v14 < v13)
        {
          uint64_t v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        uint64_t v24 = v4;
        long long v25 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCDA04D8@<X0>(char a1@<W0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  sub_1DD0490B8();
  sub_1DCD9C35C(a1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1DD049108();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      unint64_t v12 = 0xE300000000000000;
      uint64_t v13 = 7631457;
      switch(*(unsigned char *)(*(void *)(v7 + 48) + v10))
      {
        case 1:
          unint64_t v12 = 0xE600000000000000;
          uint64_t v13 = 0x65727574616ELL;
          break;
        case 2:
          unint64_t v12 = 0xE800000000000000;
          uint64_t v13 = 0x6B72616D646E616CLL;
          break;
        case 3:
          uint64_t v13 = 0x4C6C61727574616ELL;
          unint64_t v12 = 0xEF6B72616D646E61;
          break;
        case 4:
          unint64_t v12 = 0xE500000000000000;
          uint64_t v13 = 0x616964656DLL;
          break;
        case 5:
          unint64_t v12 = 0xE400000000000000;
          uint64_t v13 = 1802465122;
          break;
        case 6:
          unint64_t v12 = 0xE500000000000000;
          uint64_t v13 = 0x6D75626C61;
          break;
        case 7:
          unint64_t v12 = 0xE400000000000000;
          uint64_t v13 = 1937006947;
          break;
        case 8:
          unint64_t v12 = 0xE400000000000000;
          uint64_t v13 = 1936158564;
          break;
        case 9:
          unint64_t v12 = 0xE700000000000000;
          unsigned int v14 = 1835626081;
          goto LABEL_22;
        case 0xA:
          unint64_t v12 = 0xE500000000000000;
          uint64_t v13 = 0x7364726962;
          break;
        case 0xB:
          unint64_t v12 = 0xE700000000000000;
          uint64_t v13 = 0x73746365736E69;
          break;
        case 0xC:
          unint64_t v12 = 0xE800000000000000;
          uint64_t v13 = 0x73656C6974706572;
          break;
        case 0xD:
          unint64_t v12 = 0xE700000000000000;
          unsigned int v14 = 1835884909;
LABEL_22:
          uint64_t v13 = v14 | 0x736C6100000000;
          break;
        case 0xE:
          unint64_t v12 = 0xE700000000000000;
          uint64_t v13 = 0x6C657261707061;
          break;
        case 0xF:
          uint64_t v13 = 0x726F737365636361;
          unint64_t v12 = 0xEB00000000736569;
          break;
        case 0x10:
          unint64_t v12 = 0xE400000000000000;
          uint64_t v13 = 1685024614;
          break;
        case 0x11:
          uint64_t v13 = 0x6F726665726F7473;
          unint64_t v12 = 0xEA0000000000746ELL;
          break;
        case 0x12:
          unsigned int v15 = 1852270963;
          goto LABEL_27;
        case 0x13:
          unint64_t v12 = 0x80000001DD066AB0;
          uint64_t v13 = 0xD000000000000011;
          break;
        case 0x14:
          unsigned int v15 = 1869903201;
LABEL_27:
          uint64_t v13 = v15 | 0x626D795300000000;
          unint64_t v12 = 0xEA00000000006C6FLL;
          break;
        case 0x15:
          uint64_t v13 = 0x676F4C646E617262;
          unint64_t v12 = 0xEF6C6F626D79536FLL;
          break;
        case 0x16:
          unint64_t v12 = 0xE700000000000000;
          uint64_t v13 = 0x65646F63726162;
          break;
        case 0x17:
          uint64_t v13 = 0x727574706C756373;
          unint64_t v12 = 0xE900000000000065;
          break;
        case 0x18:
          unint64_t v12 = 0xE700000000000000;
          uint64_t v13 = 0x656E696C796B73;
          break;
        case 0x19:
          unint64_t v12 = 0xE800000000000000;
          uint64_t v13 = 0x44327463656A626FLL;
          break;
        default:
          break;
      }
      unint64_t v16 = 0xE300000000000000;
      unint64_t v17 = 7631457;
      switch(a1)
      {
        case 1:
          unint64_t v16 = 0xE600000000000000;
          if (v13 == 0x65727574616ELL) {
            goto LABEL_80;
          }
          goto LABEL_81;
        case 2:
          unint64_t v16 = 0xE800000000000000;
          if (v13 != 0x6B72616D646E616CLL) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 3:
          unint64_t v16 = 0xEF6B72616D646E61;
          if (v13 != 0x4C6C61727574616ELL) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 4:
          unint64_t v16 = 0xE500000000000000;
          if (v13 != 0x616964656DLL) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 5:
          unint64_t v16 = 0xE400000000000000;
          if (v13 != 1802465122) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 6:
          unint64_t v16 = 0xE500000000000000;
          if (v13 != 0x6D75626C61) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 7:
          unint64_t v16 = 0xE400000000000000;
          if (v13 != 1937006947) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 8:
          unint64_t v16 = 0xE400000000000000;
          if (v13 != 1936158564) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 9:
          unint64_t v16 = 0xE700000000000000;
          uint64_t v19 = 1835626081;
          goto LABEL_63;
        case 10:
          unint64_t v16 = 0xE500000000000000;
          if (v13 != 0x7364726962) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 11:
          unint64_t v16 = 0xE700000000000000;
          unint64_t v18 = 0x746365736E69;
          goto LABEL_64;
        case 12:
          unint64_t v16 = 0xE800000000000000;
          if (v13 != 0x73656C6974706572) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 13:
          unint64_t v16 = 0xE700000000000000;
          uint64_t v19 = 1835884909;
LABEL_63:
          unint64_t v18 = v19 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_64:
          if (v13 != (v18 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 14:
          unint64_t v16 = 0xE700000000000000;
          if (v13 != 0x6C657261707061) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 15:
          unint64_t v16 = 0xEB00000000736569;
          if (v13 != 0x726F737365636361) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 16:
          unint64_t v16 = 0xE400000000000000;
          if (v13 != 1685024614) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 17:
          unint64_t v16 = 0xEA0000000000746ELL;
          if (v13 != 0x6F726665726F7473) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 18:
          unsigned int v21 = 1852270963;
          goto LABEL_73;
        case 19:
          unint64_t v16 = 0x80000001DD066AB0;
          unint64_t v17 = 0xD000000000000011;
          goto LABEL_79;
        case 20:
          unsigned int v21 = 1869903201;
LABEL_73:
          unint64_t v16 = 0xEA00000000006C6FLL;
          if (v13 != (v21 | 0x626D795300000000)) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 21:
          unint64_t v16 = 0xEF6C6F626D79536FLL;
          if (v13 != 0x676F4C646E617262) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 22:
          unint64_t v16 = 0xE700000000000000;
          uint64_t v20 = 0x646F63726162;
          goto LABEL_76;
        case 23:
          unint64_t v16 = 0xE900000000000065;
          if (v13 != 0x727574706C756373) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 24:
          unint64_t v16 = 0xE700000000000000;
          uint64_t v20 = 0x6E696C796B73;
LABEL_76:
          if (v13 != (v20 & 0xFFFFFFFFFFFFLL | 0x65000000000000)) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 25:
          unint64_t v16 = 0xE800000000000000;
          if (v13 != 0x44327463656A626FLL) {
            goto LABEL_81;
          }
          goto LABEL_80;
        default:
LABEL_79:
          if (v13 != v17) {
            goto LABEL_81;
          }
LABEL_80:
          if (v12 == v16)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v23 = 0;
            char v22 = 1;
            goto LABEL_90;
          }
LABEL_81:
          char v22 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v22)
          {
            uint64_t v23 = 0;
            goto LABEL_90;
          }
          unint64_t v10 = (v10 + 1) & v11;
          if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
            goto LABEL_87;
          }
          break;
      }
    }
  }
  char v22 = 0;
LABEL_87:
  uint64_t v23 = 1;
LABEL_90:
  uint64_t v24 = *(void *)(v7 + 16);
  uint64_t result = v24 + v23;
  if (__OFADD__(v24, v23))
  {
    __break(1u);
LABEL_194:
    __break(1u);
    goto LABEL_195;
  }
  uint64_t v26 = *(void *)(v7 + 24);
  if (v26 >= result && (a2 & 1) != 0)
  {
    if (v22) {
      goto LABEL_191;
    }
LABEL_94:
    unint64_t v27 = v10 >> 6;
    uint64_t v28 = 1 << v10;
    goto LABEL_187;
  }
  if (a2)
  {
    sub_1DCF5281C();
  }
  else
  {
    if (v26 >= result)
    {
      uint64_t result = (uint64_t)sub_1DCF544A8();
      if (v22) {
        goto LABEL_191;
      }
      goto LABEL_94;
    }
    sub_1DCF5503C();
  }
  uint64_t v29 = *v4;
  sub_1DD0490B8();
  sub_1DCD9C35C(a1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1DD049108();
  uint64_t v30 = -1 << *(unsigned char *)(v29 + 32);
  unint64_t v10 = result & ~v30;
  unint64_t v27 = v10 >> 6;
  uint64_t v28 = 1 << v10;
  if (((1 << v10) & *(void *)(v29 + 56 + 8 * (v10 >> 6))) == 0)
  {
LABEL_186:
    if ((v22 & 1) == 0)
    {
LABEL_187:
      uint64_t v43 = *v4;
      *(void *)(*v4 + 8 * v27 + 56) |= v28;
      *(unsigned char *)(*(void *)(v43 + 48) + v10) = a1;
      uint64_t v44 = *(void *)(v43 + 16);
      BOOL v45 = __OFADD__(v44, 1);
      uint64_t v46 = v44 + 1;
      if (!v45)
      {
        *(void *)(v43 + 16) = v46;
        *a3 = 26;
        return result;
      }
      goto LABEL_194;
    }
LABEL_195:
    sub_1DD049018();
    __break(1u);
    JUMPOUT(0x1DCDA12C8);
  }
  uint64_t v31 = ~v30;
  while (2)
  {
    unint64_t v32 = 0xE300000000000000;
    uint64_t v33 = 7631457;
    switch(*(unsigned char *)(*(void *)(v29 + 48) + v10))
    {
      case 1:
        unint64_t v32 = 0xE600000000000000;
        uint64_t v33 = 0x65727574616ELL;
        break;
      case 2:
        unint64_t v32 = 0xE800000000000000;
        uint64_t v33 = 0x6B72616D646E616CLL;
        break;
      case 3:
        uint64_t v33 = 0x4C6C61727574616ELL;
        unint64_t v32 = 0xEF6B72616D646E61;
        break;
      case 4:
        unint64_t v32 = 0xE500000000000000;
        uint64_t v33 = 0x616964656DLL;
        break;
      case 5:
        unint64_t v32 = 0xE400000000000000;
        uint64_t v33 = 1802465122;
        break;
      case 6:
        unint64_t v32 = 0xE500000000000000;
        uint64_t v33 = 0x6D75626C61;
        break;
      case 7:
        unint64_t v32 = 0xE400000000000000;
        uint64_t v33 = 1937006947;
        break;
      case 8:
        unint64_t v32 = 0xE400000000000000;
        uint64_t v33 = 1936158564;
        break;
      case 9:
        unint64_t v32 = 0xE700000000000000;
        unsigned int v34 = 1835626081;
        goto LABEL_121;
      case 0xA:
        unint64_t v32 = 0xE500000000000000;
        uint64_t v33 = 0x7364726962;
        break;
      case 0xB:
        unint64_t v32 = 0xE700000000000000;
        uint64_t v33 = 0x73746365736E69;
        break;
      case 0xC:
        unint64_t v32 = 0xE800000000000000;
        uint64_t v33 = 0x73656C6974706572;
        break;
      case 0xD:
        unint64_t v32 = 0xE700000000000000;
        unsigned int v34 = 1835884909;
LABEL_121:
        uint64_t v33 = v34 | 0x736C6100000000;
        break;
      case 0xE:
        unint64_t v32 = 0xE700000000000000;
        uint64_t v33 = 0x6C657261707061;
        break;
      case 0xF:
        uint64_t v33 = 0x726F737365636361;
        unint64_t v32 = 0xEB00000000736569;
        break;
      case 0x10:
        unint64_t v32 = 0xE400000000000000;
        uint64_t v33 = 1685024614;
        break;
      case 0x11:
        uint64_t v33 = 0x6F726665726F7473;
        unint64_t v32 = 0xEA0000000000746ELL;
        break;
      case 0x12:
        unsigned int v35 = 1852270963;
        goto LABEL_127;
      case 0x13:
        unint64_t v32 = 0x80000001DD066AB0;
        uint64_t v33 = 0xD000000000000011;
        break;
      case 0x14:
        unsigned int v35 = 1869903201;
LABEL_127:
        uint64_t v33 = v35 | 0x626D795300000000;
        unint64_t v32 = 0xEA00000000006C6FLL;
        break;
      case 0x15:
        uint64_t v33 = 0x676F4C646E617262;
        unint64_t v32 = 0xEF6C6F626D79536FLL;
        break;
      case 0x16:
        unint64_t v32 = 0xE700000000000000;
        uint64_t v33 = 0x65646F63726162;
        break;
      case 0x17:
        uint64_t v33 = 0x727574706C756373;
        unint64_t v32 = 0xE900000000000065;
        break;
      case 0x18:
        unint64_t v32 = 0xE700000000000000;
        uint64_t v33 = 0x656E696C796B73;
        break;
      case 0x19:
        unint64_t v32 = 0xE800000000000000;
        uint64_t v33 = 0x44327463656A626FLL;
        break;
      default:
        break;
    }
    unint64_t v36 = 0xE300000000000000;
    unint64_t v37 = 7631457;
    switch(a1)
    {
      case 1:
        unint64_t v36 = 0xE600000000000000;
        if (v33 != 0x65727574616ELL) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 2:
        unint64_t v36 = 0xE800000000000000;
        if (v33 != 0x6B72616D646E616CLL) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 3:
        unint64_t v36 = 0xEF6B72616D646E61;
        if (v33 != 0x4C6C61727574616ELL) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 4:
        unint64_t v36 = 0xE500000000000000;
        if (v33 != 0x616964656DLL) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 5:
        unint64_t v36 = 0xE400000000000000;
        if (v33 != 1802465122) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 6:
        unint64_t v36 = 0xE500000000000000;
        if (v33 != 0x6D75626C61) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 7:
        unint64_t v36 = 0xE400000000000000;
        if (v33 != 1937006947) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 8:
        unint64_t v36 = 0xE400000000000000;
        if (v33 != 1936158564) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 9:
        unint64_t v36 = 0xE700000000000000;
        uint64_t v39 = 1835626081;
        goto LABEL_162;
      case 10:
        unint64_t v36 = 0xE500000000000000;
        if (v33 != 0x7364726962) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 11:
        unint64_t v36 = 0xE700000000000000;
        unint64_t v38 = 0x746365736E69;
        goto LABEL_163;
      case 12:
        unint64_t v36 = 0xE800000000000000;
        if (v33 != 0x73656C6974706572) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 13:
        unint64_t v36 = 0xE700000000000000;
        uint64_t v39 = 1835884909;
LABEL_162:
        unint64_t v38 = v39 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_163:
        if (v33 != (v38 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 14:
        unint64_t v36 = 0xE700000000000000;
        if (v33 != 0x6C657261707061) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 15:
        unint64_t v36 = 0xEB00000000736569;
        if (v33 != 0x726F737365636361) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 16:
        unint64_t v36 = 0xE400000000000000;
        if (v33 != 1685024614) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 17:
        unint64_t v36 = 0xEA0000000000746ELL;
        if (v33 != 0x6F726665726F7473) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 18:
        unsigned int v41 = 1852270963;
        goto LABEL_173;
      case 19:
        unint64_t v36 = 0x80000001DD066AB0;
        unint64_t v37 = 0xD000000000000011;
        goto LABEL_179;
      case 20:
        unsigned int v41 = 1869903201;
LABEL_173:
        unint64_t v36 = 0xEA00000000006C6FLL;
        if (v33 != (v41 | 0x626D795300000000)) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 21:
        unint64_t v36 = 0xEF6C6F626D79536FLL;
        if (v33 != 0x676F4C646E617262) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 22:
        unint64_t v36 = 0xE700000000000000;
        uint64_t v40 = 0x646F63726162;
        goto LABEL_176;
      case 23:
        unint64_t v36 = 0xE900000000000065;
        if (v33 != 0x727574706C756373) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 24:
        unint64_t v36 = 0xE700000000000000;
        uint64_t v40 = 0x6E696C796B73;
LABEL_176:
        if (v33 != (v40 & 0xFFFFFFFFFFFFLL | 0x65000000000000)) {
          goto LABEL_181;
        }
        goto LABEL_180;
      case 25:
        unint64_t v36 = 0xE800000000000000;
        if (v33 != 0x44327463656A626FLL) {
          goto LABEL_181;
        }
        goto LABEL_180;
      default:
LABEL_179:
        if (v33 != v37) {
          goto LABEL_181;
        }
LABEL_180:
        if (v32 != v36)
        {
LABEL_181:
          char v42 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v42) {
            goto LABEL_190;
          }
          unint64_t v10 = (v10 + 1) & v31;
          unint64_t v27 = v10 >> 6;
          uint64_t v28 = 1 << v10;
          if ((*(void *)(v29 + 56 + 8 * (v10 >> 6)) & (1 << v10)) == 0) {
            goto LABEL_186;
          }
          continue;
        }
        uint64_t result = swift_bridgeObjectRelease_n();
LABEL_190:
        if ((v22 & 1) == 0) {
          goto LABEL_195;
        }
LABEL_191:
        uint64_t v47 = *(void *)(*v4 + 48);
        *a3 = *(unsigned char *)(v47 + v10);
        *(unsigned char *)(v47 + v10) = a1;
        return result;
    }
  }
}

uint64_t sub_1DCDA1468@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>, float a4@<S0>)
{
  uint64_t v9 = *v4;
  sub_1DD0490B8();
  sub_1DCD9C35C(a1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  sub_1DD0490E8();
  uint64_t v10 = sub_1DD049108();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
    char v27 = 0;
    uint64_t v28 = 1;
    goto LABEL_92;
  }
  uint64_t v58 = a3;
  uint64_t v13 = ~v11;
  while (2)
  {
    uint64_t v14 = *(void *)(v9 + 48) + 8 * v12;
    float v15 = *(float *)(v14 + 4);
    unint64_t v16 = 0xE300000000000000;
    uint64_t v17 = 7631457;
    switch(*(unsigned char *)v14)
    {
      case 1:
        unint64_t v16 = 0xE600000000000000;
        uint64_t v17 = 0x65727574616ELL;
        break;
      case 2:
        unint64_t v16 = 0xE800000000000000;
        uint64_t v17 = 0x6B72616D646E616CLL;
        break;
      case 3:
        uint64_t v17 = 0x4C6C61727574616ELL;
        unint64_t v16 = 0xEF6B72616D646E61;
        break;
      case 4:
        unint64_t v16 = 0xE500000000000000;
        uint64_t v17 = 0x616964656DLL;
        break;
      case 5:
        unint64_t v16 = 0xE400000000000000;
        uint64_t v17 = 1802465122;
        break;
      case 6:
        unint64_t v16 = 0xE500000000000000;
        uint64_t v17 = 0x6D75626C61;
        break;
      case 7:
        unint64_t v16 = 0xE400000000000000;
        uint64_t v17 = 1937006947;
        break;
      case 8:
        unint64_t v16 = 0xE400000000000000;
        uint64_t v17 = 1936158564;
        break;
      case 9:
        unint64_t v16 = 0xE700000000000000;
        unsigned int v18 = 1835626081;
        goto LABEL_25;
      case 0xA:
        unint64_t v16 = 0xE500000000000000;
        uint64_t v17 = 0x7364726962;
        break;
      case 0xB:
        unint64_t v16 = 0xE700000000000000;
        uint64_t v17 = 0x73746365736E69;
        break;
      case 0xC:
        unint64_t v16 = 0xE800000000000000;
        uint64_t v17 = 0x73656C6974706572;
        break;
      case 0xD:
        unint64_t v16 = 0xE700000000000000;
        unsigned int v18 = 1835884909;
LABEL_25:
        uint64_t v17 = v18 | 0x736C6100000000;
        break;
      case 0xE:
        unint64_t v16 = 0xE700000000000000;
        uint64_t v17 = 0x6C657261707061;
        break;
      case 0xF:
        uint64_t v17 = 0x726F737365636361;
        unint64_t v16 = 0xEB00000000736569;
        break;
      case 0x10:
        unint64_t v16 = 0xE400000000000000;
        uint64_t v17 = 1685024614;
        break;
      case 0x11:
        unint64_t v16 = 0xEA0000000000746ELL;
        uint64_t v17 = 0x6F726665726F7473;
        break;
      case 0x12:
        unsigned int v19 = 1852270963;
        goto LABEL_29;
      case 0x13:
        unint64_t v16 = 0x80000001DD066AB0;
        uint64_t v17 = 0xD000000000000011;
        break;
      case 0x14:
        unsigned int v19 = 1869903201;
LABEL_29:
        uint64_t v17 = v19 | 0x626D795300000000;
        unint64_t v16 = 0xEA00000000006C6FLL;
        break;
      case 0x15:
        uint64_t v17 = 0x676F4C646E617262;
        unint64_t v16 = 0xEF6C6F626D79536FLL;
        break;
      case 0x16:
        unint64_t v16 = 0xE700000000000000;
        uint64_t v17 = 0x65646F63726162;
        break;
      case 0x17:
        uint64_t v17 = 0x727574706C756373;
        unint64_t v16 = 0xE900000000000065;
        break;
      case 0x18:
        unint64_t v16 = 0xE700000000000000;
        uint64_t v17 = 0x656E696C796B73;
        break;
      case 0x19:
        unint64_t v16 = 0xE800000000000000;
        uint64_t v17 = 0x44327463656A626FLL;
        break;
      default:
        break;
    }
    unint64_t v20 = 0xE300000000000000;
    unint64_t v21 = 7631457;
    switch(a1)
    {
      case 1:
        unint64_t v20 = 0xE600000000000000;
        if (v17 == 0x65727574616ELL) {
          goto LABEL_83;
        }
        goto LABEL_84;
      case 2:
        unint64_t v20 = 0xE800000000000000;
        if (v17 != 0x6B72616D646E616CLL) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 3:
        unint64_t v20 = 0xEF6B72616D646E61;
        if (v17 != 0x4C6C61727574616ELL) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 4:
        unint64_t v20 = 0xE500000000000000;
        if (v17 != 0x616964656DLL) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 5:
        unint64_t v20 = 0xE400000000000000;
        if (v17 != 1802465122) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 6:
        unint64_t v20 = 0xE500000000000000;
        if (v17 != 0x6D75626C61) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 7:
        unint64_t v20 = 0xE400000000000000;
        if (v17 != 1937006947) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 8:
        unint64_t v20 = 0xE400000000000000;
        if (v17 != 1936158564) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 9:
        unint64_t v20 = 0xE700000000000000;
        uint64_t v23 = 1835626081;
        goto LABEL_66;
      case 10:
        unint64_t v20 = 0xE500000000000000;
        if (v17 != 0x7364726962) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 11:
        unint64_t v20 = 0xE700000000000000;
        unint64_t v22 = 0x746365736E69;
        goto LABEL_67;
      case 12:
        unint64_t v20 = 0xE800000000000000;
        if (v17 != 0x73656C6974706572) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 13:
        unint64_t v20 = 0xE700000000000000;
        uint64_t v23 = 1835884909;
LABEL_66:
        unint64_t v22 = v23 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_67:
        if (v17 != (v22 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 14:
        unint64_t v20 = 0xE700000000000000;
        if (v17 != 0x6C657261707061) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 15:
        unint64_t v20 = 0xEB00000000736569;
        if (v17 != 0x726F737365636361) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 16:
        unint64_t v20 = 0xE400000000000000;
        if (v17 != 1685024614) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 17:
        unint64_t v20 = 0xEA0000000000746ELL;
        if (v17 != 0x6F726665726F7473) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 18:
        unsigned int v25 = 1852270963;
        goto LABEL_74;
      case 19:
        unint64_t v20 = 0x80000001DD066AB0;
        unint64_t v21 = 0xD000000000000011;
        goto LABEL_82;
      case 20:
        unsigned int v25 = 1869903201;
LABEL_74:
        unint64_t v20 = 0xEA00000000006C6FLL;
        if (v17 != (v25 | 0x626D795300000000)) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 21:
        unint64_t v20 = 0xEF6C6F626D79536FLL;
        if (v17 != 0x676F4C646E617262) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 22:
        unint64_t v20 = 0xE700000000000000;
        uint64_t v24 = 0x646F63726162;
        goto LABEL_79;
      case 23:
        unint64_t v20 = 0xE900000000000065;
        if (v17 != 0x727574706C756373) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 24:
        unint64_t v20 = 0xE700000000000000;
        uint64_t v24 = 0x6E696C796B73;
LABEL_79:
        if (v17 != (v24 & 0xFFFFFFFFFFFFLL | 0x65000000000000)) {
          goto LABEL_84;
        }
        goto LABEL_83;
      case 25:
        unint64_t v20 = 0xE800000000000000;
        if (v17 != 0x44327463656A626FLL) {
          goto LABEL_84;
        }
        goto LABEL_83;
      default:
LABEL_82:
        if (v17 != v21) {
          goto LABEL_84;
        }
LABEL_83:
        if (v16 == v20)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
LABEL_84:
          char v26 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v26 & 1) == 0) {
            goto LABEL_5;
          }
        }
        if (v15 != a4)
        {
LABEL_5:
          unint64_t v12 = (v12 + 1) & v13;
          if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          {
            char v27 = 0;
            uint64_t v28 = 1;
            goto LABEL_91;
          }
          continue;
        }
        uint64_t v28 = 0;
        char v27 = 1;
LABEL_91:
        a3 = v58;
LABEL_92:
        uint64_t v29 = *(void *)(v9 + 16);
        uint64_t result = v29 + v28;
        uint64_t v31 = v59;
        if (__OFADD__(v29, v28))
        {
          __break(1u);
          goto LABEL_198;
        }
        uint64_t v32 = *(void *)(v9 + 24);
        if (v32 >= result && (a2 & 1) != 0)
        {
          if ((v27 & 1) == 0)
          {
LABEL_96:
            unint64_t v33 = v12 >> 6;
            uint64_t v34 = 1 << v12;
            goto LABEL_195;
          }
LABEL_193:
          uint64_t v51 = *(void *)(*v31 + 48) + 8 * v12;
          int v52 = *(_DWORD *)(v51 + 4);
          *(unsigned char *)a3 = *(unsigned char *)v51;
          *(_DWORD *)(a3 + 4) = v52;
          *(unsigned char *)uint64_t v51 = a1;
          *(float *)(v51 + 4) = a4;
          return result;
        }
        if (a2)
        {
          sub_1DCF530B4();
        }
        else
        {
          if (v32 >= result)
          {
            uint64_t result = (uint64_t)sub_1DCF54980();
            if ((v27 & 1) == 0) {
              goto LABEL_96;
            }
            goto LABEL_193;
          }
          sub_1DCF5583C();
        }
        uint64_t v35 = *v59;
        sub_1DD0490B8();
        sub_1DCD9C35C(a1);
        sub_1DD0484F8();
        swift_bridgeObjectRelease();
        sub_1DD0490E8();
        uint64_t result = sub_1DD049108();
        uint64_t v36 = -1 << *(unsigned char *)(v35 + 32);
        unint64_t v12 = result & ~v36;
        unint64_t v33 = v12 >> 6;
        uint64_t v34 = 1 << v12;
        if (((1 << v12) & *(void *)(v35 + 56 + 8 * (v12 >> 6))) != 0)
        {
          uint64_t v37 = ~v36;
          while (1)
          {
            uint64_t v38 = *(void *)(v35 + 48) + 8 * v12;
            float v39 = *(float *)(v38 + 4);
            unint64_t v40 = 0xE300000000000000;
            uint64_t v41 = 7631457;
            switch(*(unsigned char *)v38)
            {
              case 1:
                unint64_t v40 = 0xE600000000000000;
                uint64_t v41 = 0x65727574616ELL;
                break;
              case 2:
                unint64_t v40 = 0xE800000000000000;
                uint64_t v41 = 0x6B72616D646E616CLL;
                break;
              case 3:
                uint64_t v41 = 0x4C6C61727574616ELL;
                unint64_t v40 = 0xEF6B72616D646E61;
                break;
              case 4:
                unint64_t v40 = 0xE500000000000000;
                uint64_t v41 = 0x616964656DLL;
                break;
              case 5:
                unint64_t v40 = 0xE400000000000000;
                uint64_t v41 = 1802465122;
                break;
              case 6:
                unint64_t v40 = 0xE500000000000000;
                uint64_t v41 = 0x6D75626C61;
                break;
              case 7:
                unint64_t v40 = 0xE400000000000000;
                uint64_t v41 = 1937006947;
                break;
              case 8:
                unint64_t v40 = 0xE400000000000000;
                uint64_t v41 = 1936158564;
                break;
              case 9:
                unint64_t v40 = 0xE700000000000000;
                unsigned int v42 = 1835626081;
                goto LABEL_127;
              case 0xA:
                unint64_t v40 = 0xE500000000000000;
                uint64_t v41 = 0x7364726962;
                break;
              case 0xB:
                unint64_t v40 = 0xE700000000000000;
                uint64_t v41 = 0x73746365736E69;
                break;
              case 0xC:
                unint64_t v40 = 0xE800000000000000;
                uint64_t v41 = 0x73656C6974706572;
                break;
              case 0xD:
                unint64_t v40 = 0xE700000000000000;
                unsigned int v42 = 1835884909;
LABEL_127:
                uint64_t v41 = v42 | 0x736C6100000000;
                break;
              case 0xE:
                unint64_t v40 = 0xE700000000000000;
                uint64_t v41 = 0x6C657261707061;
                break;
              case 0xF:
                uint64_t v41 = 0x726F737365636361;
                unint64_t v40 = 0xEB00000000736569;
                break;
              case 0x10:
                unint64_t v40 = 0xE400000000000000;
                uint64_t v41 = 1685024614;
                break;
              case 0x11:
                unint64_t v40 = 0xEA0000000000746ELL;
                uint64_t v41 = 0x6F726665726F7473;
                break;
              case 0x12:
                unsigned int v43 = 1852270963;
                goto LABEL_132;
              case 0x13:
                unint64_t v40 = 0x80000001DD066AB0;
                uint64_t v41 = 0xD000000000000011;
                break;
              case 0x14:
                unsigned int v43 = 1869903201;
LABEL_132:
                uint64_t v41 = v43 | 0x626D795300000000;
                unint64_t v40 = 0xEA00000000006C6FLL;
                break;
              case 0x15:
                uint64_t v41 = 0x676F4C646E617262;
                unint64_t v40 = 0xEF6C6F626D79536FLL;
                break;
              case 0x16:
                unint64_t v40 = 0xE700000000000000;
                uint64_t v41 = 0x65646F63726162;
                break;
              case 0x17:
                uint64_t v41 = 0x727574706C756373;
                unint64_t v40 = 0xE900000000000065;
                break;
              case 0x18:
                unint64_t v40 = 0xE700000000000000;
                uint64_t v41 = 0x656E696C796B73;
                break;
              case 0x19:
                unint64_t v40 = 0xE800000000000000;
                uint64_t v41 = 0x44327463656A626FLL;
                break;
              default:
                break;
            }
            unint64_t v44 = 0xE300000000000000;
            unint64_t v45 = 7631457;
            switch(a1)
            {
              case 1:
                unint64_t v44 = 0xE600000000000000;
                if (v41 != 0x65727574616ELL) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 2:
                unint64_t v44 = 0xE800000000000000;
                if (v41 != 0x6B72616D646E616CLL) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 3:
                unint64_t v44 = 0xEF6B72616D646E61;
                if (v41 != 0x4C6C61727574616ELL) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 4:
                unint64_t v44 = 0xE500000000000000;
                if (v41 != 0x616964656DLL) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 5:
                unint64_t v44 = 0xE400000000000000;
                if (v41 != 1802465122) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 6:
                unint64_t v44 = 0xE500000000000000;
                if (v41 != 0x6D75626C61) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 7:
                unint64_t v44 = 0xE400000000000000;
                if (v41 != 1937006947) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 8:
                unint64_t v44 = 0xE400000000000000;
                if (v41 != 1936158564) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 9:
                unint64_t v44 = 0xE700000000000000;
                uint64_t v47 = 1835626081;
                goto LABEL_168;
              case 10:
                unint64_t v44 = 0xE500000000000000;
                if (v41 != 0x7364726962) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 11:
                unint64_t v44 = 0xE700000000000000;
                unint64_t v46 = 0x746365736E69;
                goto LABEL_169;
              case 12:
                unint64_t v44 = 0xE800000000000000;
                if (v41 != 0x73656C6974706572) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 13:
                unint64_t v44 = 0xE700000000000000;
                uint64_t v47 = 1835884909;
LABEL_168:
                unint64_t v46 = v47 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_169:
                if (v41 != (v46 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 14:
                unint64_t v44 = 0xE700000000000000;
                if (v41 != 0x6C657261707061) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 15:
                unint64_t v44 = 0xEB00000000736569;
                if (v41 != 0x726F737365636361) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 16:
                unint64_t v44 = 0xE400000000000000;
                if (v41 != 1685024614) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 17:
                unint64_t v44 = 0xEA0000000000746ELL;
                if (v41 != 0x6F726665726F7473) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 18:
                unsigned int v49 = 1852270963;
                goto LABEL_178;
              case 19:
                unint64_t v44 = 0x80000001DD066AB0;
                unint64_t v45 = 0xD000000000000011;
                goto LABEL_184;
              case 20:
                unsigned int v49 = 1869903201;
LABEL_178:
                unint64_t v44 = 0xEA00000000006C6FLL;
                if (v41 != (v49 | 0x626D795300000000)) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 21:
                unint64_t v44 = 0xEF6C6F626D79536FLL;
                if (v41 != 0x676F4C646E617262) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 22:
                unint64_t v44 = 0xE700000000000000;
                uint64_t v48 = 0x646F63726162;
                goto LABEL_181;
              case 23:
                unint64_t v44 = 0xE900000000000065;
                if (v41 != 0x727574706C756373) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 24:
                unint64_t v44 = 0xE700000000000000;
                uint64_t v48 = 0x6E696C796B73;
LABEL_181:
                if (v41 != (v48 & 0xFFFFFFFFFFFFLL | 0x65000000000000)) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              case 25:
                unint64_t v44 = 0xE800000000000000;
                if (v41 != 0x44327463656A626FLL) {
                  goto LABEL_186;
                }
                goto LABEL_185;
              default:
LABEL_184:
                if (v41 != v45) {
                  goto LABEL_186;
                }
LABEL_185:
                if (v40 == v44)
                {
                  uint64_t result = swift_bridgeObjectRelease_n();
                }
                else
                {
LABEL_186:
                  char v50 = sub_1DD048FA8();
                  swift_bridgeObjectRelease();
                  uint64_t result = swift_bridgeObjectRelease();
                  if ((v50 & 1) == 0) {
                    goto LABEL_107;
                  }
                }
                if (v39 == a4)
                {
                  uint64_t v31 = v59;
                  if (v27) {
                    goto LABEL_193;
                  }
                  goto LABEL_199;
                }
LABEL_107:
                unint64_t v12 = (v12 + 1) & v37;
                unint64_t v33 = v12 >> 6;
                uint64_t v34 = 1 << v12;
                if ((*(void *)(v35 + 56 + 8 * (v12 >> 6)) & (1 << v12)) == 0)
                {
                  uint64_t v31 = v59;
                  if ((v27 & 1) == 0) {
                    goto LABEL_195;
                  }
LABEL_199:
                  sub_1DD049018();
                  __break(1u);
                  JUMPOUT(0x1DCDA22E0);
                }
                return result;
            }
          }
        }
        if (v27) {
          goto LABEL_199;
        }
LABEL_195:
        uint64_t v53 = *v31;
        *(void *)(*v31 + 8 * v33 + 56) |= v34;
        uint64_t v54 = *(void *)(v53 + 48) + 8 * v12;
        *(unsigned char *)uint64_t v54 = a1;
        *(float *)(v54 + 4) = a4;
        uint64_t v55 = *(void *)(v53 + 16);
        BOOL v56 = __OFADD__(v55, 1);
        uint64_t v57 = v55 + 1;
        if (v56)
        {
LABEL_198:
          __break(1u);
          goto LABEL_199;
        }
        *(void *)(v53 + 16) = v57;
        *(void *)a3 = 26;
        return result;
    }
  }
}