uint64_t sub_1DCE3F0DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  double *v31;
  char v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  double *v51;

  v4 = sub_1DD047BF8();
  v47 = *(void *)(v4 - 8);
  v48 = v4;
  MEMORY[0x1F4188790](v4);
  v46 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v45 = (char *)&v44 - v7;
  v8 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  v51 = (double *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03878);
  v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  MEMORY[0x1F4188790](v15 - 8);
  v17 = (double *)((char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  v20 = (char *)&v44 - v19;
  MEMORY[0x1F4188790](v21);
  v23 = (char *)&v44 - v22;
  v24 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion(0);
  v25 = *(int *)(v24 + 36);
  v49 = a1;
  v26 = (uint64_t)a1 + v25;
  v27 = v24;
  sub_1DCD2889C(v26, (uint64_t)v23, &qword_1EBE86570);
  v28 = *(int *)(v27 + 36);
  v50 = a2;
  sub_1DCD2889C((uint64_t)a2 + v28, (uint64_t)v20, &qword_1EBE86570);
  v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1DCD2889C((uint64_t)v23, (uint64_t)v14, &qword_1EBE86570);
  sub_1DCD2889C((uint64_t)v20, v29, &qword_1EBE86570);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) != 1)
  {
    v31 = v51;
    sub_1DCD2889C((uint64_t)v14, (uint64_t)v17, &qword_1EBE86570);
    if (v30(v29, 1, v8) != 1)
    {
      sub_1DCE3E3B8(v29, (uint64_t)v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
      v32 = sub_1DCE41070(v17, v31);
      sub_1DCE33934((uint64_t)v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
      sub_1DCD2479C((uint64_t)v20, &qword_1EBE86570);
      sub_1DCD2479C((uint64_t)v23, &qword_1EBE86570);
      sub_1DCE33934((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
      sub_1DCD2479C((uint64_t)v14, &qword_1EBE86570);
      if (v32) {
        goto LABEL_8;
      }
LABEL_13:
      v41 = 0;
      return v41 & 1;
    }
    sub_1DCD2479C((uint64_t)v20, &qword_1EBE86570);
    sub_1DCD2479C((uint64_t)v23, &qword_1EBE86570);
    sub_1DCE33934((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
LABEL_6:
    sub_1DCD2479C((uint64_t)v14, &qword_1EAB03878);
    goto LABEL_13;
  }
  sub_1DCD2479C((uint64_t)v20, &qword_1EBE86570);
  sub_1DCD2479C((uint64_t)v23, &qword_1EBE86570);
  if (v30(v29, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_1DCD2479C((uint64_t)v14, &qword_1EBE86570);
LABEL_8:
  v33 = v49;
  v34 = v50;
  if ((sub_1DCFB527C(*v49, *v50) & 1) == 0
    || *((float *)v33 + 2) != *((float *)v34 + 2)
    || (sub_1DCFB52D0(v33[2], v34[2]) & 1) == 0
    || (sub_1DCFB58CC(v33[3], v34[3]) & 1) == 0)
  {
    goto LABEL_13;
  }
  v36 = v47;
  v35 = v48;
  v37 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v38 = v45;
  v37(v45, (char *)v33 + *(int *)(v27 + 32), v48);
  v39 = (char *)v34 + *(int *)(v27 + 32);
  v40 = v46;
  v37(v46, v39, v35);
  sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
  v41 = sub_1DD0483B8();
  v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v40, v35);
  v42(v38, v35);
  return v41 & 1;
}

uint64_t sub_1DCE3F620(float *a1, float *a2)
{
  uint64_t v74 = sub_1DD047BF8();
  uint64_t v70 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  v69 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v68 = (char *)&v64 - v6;
  uint64_t v77 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v71 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03898);
  MEMORY[0x1F4188790](v8);
  uint64_t v78 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v72 = (uint64_t)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v79 = (uint64_t)&v64 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v76 = (uint64_t)&v64 - v15;
  uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  v73 = (double *)((char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03878);
  MEMORY[0x1F4188790](v19);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  MEMORY[0x1F4188790](v22 - 8);
  v24 = (double *)((char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  v27 = (char *)&v64 - v26;
  MEMORY[0x1F4188790](v28);
  v30 = (char *)&v64 - v29;
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    goto LABEL_25;
  }
  uint64_t v64 = v8;
  uint64_t v31 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult(0);
  uint64_t v32 = *(int *)(v31 + 28);
  v65 = a1;
  sub_1DCD2889C((uint64_t)a1 + v32, (uint64_t)v30, &qword_1EBE86570);
  v66 = a2;
  uint64_t v67 = v31;
  sub_1DCD2889C((uint64_t)a2 + *(int *)(v31 + 28), (uint64_t)v27, &qword_1EBE86570);
  uint64_t v33 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_1DCD2889C((uint64_t)v30, (uint64_t)v21, &qword_1EBE86570);
  sub_1DCD2889C((uint64_t)v27, v33, &qword_1EBE86570);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v34((uint64_t)v21, 1, v16) == 1)
  {
    sub_1DCD2479C((uint64_t)v27, &qword_1EBE86570);
    sub_1DCD2479C((uint64_t)v30, &qword_1EBE86570);
    if (v34(v33, 1, v16) == 1)
    {
      sub_1DCD2479C((uint64_t)v21, &qword_1EBE86570);
      goto LABEL_9;
    }
LABEL_7:
    v35 = &qword_1EAB03878;
    uint64_t v36 = (uint64_t)v21;
LABEL_24:
    sub_1DCD2479C(v36, v35);
    goto LABEL_25;
  }
  sub_1DCD2889C((uint64_t)v21, (uint64_t)v24, &qword_1EBE86570);
  if (v34(v33, 1, v16) == 1)
  {
    sub_1DCD2479C((uint64_t)v27, &qword_1EBE86570);
    sub_1DCD2479C((uint64_t)v30, &qword_1EBE86570);
    sub_1DCE33934((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    goto LABEL_7;
  }
  v37 = v73;
  sub_1DCE3E3B8(v33, (uint64_t)v73, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  char v38 = sub_1DCE41070(v24, v37);
  sub_1DCE33934((uint64_t)v37, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  sub_1DCD2479C((uint64_t)v27, &qword_1EBE86570);
  sub_1DCD2479C((uint64_t)v30, &qword_1EBE86570);
  sub_1DCE33934((uint64_t)v24, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  sub_1DCD2479C((uint64_t)v21, &qword_1EBE86570);
  if ((v38 & 1) == 0)
  {
LABEL_25:
    char v57 = 0;
    return v57 & 1;
  }
LABEL_9:
  uint64_t v39 = v67;
  v40 = v65;
  uint64_t v41 = v76;
  sub_1DCD2889C((uint64_t)v65 + *(int *)(v67 + 32), v76, &qword_1EBE86530);
  v42 = v66;
  uint64_t v43 = v79;
  sub_1DCD2889C((uint64_t)v66 + *(int *)(v39 + 32), v79, &qword_1EBE86530);
  uint64_t v44 = v78;
  uint64_t v45 = v78 + *(int *)(v64 + 48);
  sub_1DCD2889C(v41, v78, &qword_1EBE86530);
  sub_1DCD2889C(v43, v45, &qword_1EBE86530);
  v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
  uint64_t v47 = v77;
  if (v46(v44, 1, v77) == 1)
  {
    sub_1DCD2479C(v43, &qword_1EBE86530);
    sub_1DCD2479C(v41, &qword_1EBE86530);
    int v48 = v46(v45, 1, v47);
    uint64_t v49 = v74;
    if (v48 == 1)
    {
      sub_1DCD2479C(v44, &qword_1EBE86530);
      goto LABEL_12;
    }
    goto LABEL_16;
  }
  uint64_t v59 = v72;
  sub_1DCD2889C(v44, v72, &qword_1EBE86530);
  int v60 = v46(v45, 1, v47);
  uint64_t v49 = v74;
  if (v60 == 1)
  {
    sub_1DCD2479C(v79, &qword_1EBE86530);
    sub_1DCD2479C(v41, &qword_1EBE86530);
    sub_1DCE33934(v59, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
LABEL_16:
    v35 = &qword_1EAB03898;
    uint64_t v36 = v44;
    goto LABEL_24;
  }
  uint64_t v61 = v71;
  sub_1DCE3E3B8(v45, v71, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  if (!sub_1DCFB7104(*(void **)v59, *(void **)v61)
    || (*(void *)(v59 + 8) != *(void *)(v61 + 8) || *(void *)(v59 + 16) != *(void *)(v61 + 16))
    && (sub_1DD048FA8() & 1) == 0)
  {
    sub_1DCE33934(v61, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    sub_1DCD2479C(v79, &qword_1EBE86530);
    sub_1DCD2479C(v41, &qword_1EBE86530);
    sub_1DCE33934(v59, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    uint64_t v36 = v44;
    v35 = &qword_1EBE86530;
    goto LABEL_24;
  }
  sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
  char v62 = sub_1DD0483B8();
  sub_1DCE33934(v61, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  sub_1DCD2479C(v79, &qword_1EBE86530);
  sub_1DCD2479C(v41, &qword_1EBE86530);
  sub_1DCE33934(v59, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  sub_1DCD2479C(v44, &qword_1EBE86530);
  if ((v62 & 1) == 0) {
    goto LABEL_25;
  }
LABEL_12:
  if (v40[1] != v42[1]) {
    goto LABEL_25;
  }
  uint64_t v50 = v67;
  uint64_t v51 = (uint64_t)v40 + *(int *)(v67 + 24);
  uint64_t v52 = v70;
  v53 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
  v54 = v68;
  v53(v68, v51, v49);
  uint64_t v55 = (uint64_t)v42 + *(int *)(v50 + 24);
  v56 = v69;
  v53(v69, v55, v49);
  sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
  char v57 = sub_1DD0483B8();
  v58 = *(void (**)(char *, uint64_t))(v52 + 8);
  v58(v56, v49);
  v58(v54, v49);
  return v57 & 1;
}

uint64_t sub_1DCE3FFA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, double), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - v14;
  if ((a3(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)a2, *(unsigned __int8 *)(a2 + 8), v13) & 1) != 0
    && *(float *)(a1 + 12) == *(float *)(a2 + 12))
  {
    uint64_t v16 = a4(0);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v17(v15, a1 + *(int *)(v16 + 24), v8);
    v17(v11, a2 + *(int *)(v16 + 24), v8);
    sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v18 = sub_1DD0483B8();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v11, v8);
    v19(v15, v8);
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1DCE40180(char *a1, char *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v18 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v11 || (char v12 = 0, (sub_1DD048FA8() & 1) != 0))
  {
    BOOL v13 = *((void *)a1 + 2) == *((void *)a2 + 2) && *((void *)a1 + 3) == *((void *)a2 + 3);
    if (v13 || (char v12 = 0, (sub_1DD048FA8() & 1) != 0))
    {
      uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v15(v10, &a1[*(int *)(v14 + 24)], v4);
      v15(v7, &a2[*(int *)(v14 + 24)], v4);
      sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v12 = sub_1DD0483B8();
      uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v7, v4);
      v16(v10, v4);
    }
  }
  return v12 & 1;
}

uint64_t sub_1DCE40368(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v44 = (char *)&v40 - v7;
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v43 = (double *)((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03878);
  MEMORY[0x1F4188790](v11);
  BOOL v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (double *)((char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v40 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v40 - v21;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v23 = 0, (sub_1DD048FA8() & 1) != 0))
  {
    if (*(float *)(a1 + 16) == *(float *)(a2 + 16))
    {
      v42 = v16;
      uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.RegionalAnnotation(0);
      sub_1DCD2889C(a1 + *(int *)(v24 + 28), (uint64_t)v22, &qword_1EBE86570);
      uint64_t v41 = v24;
      sub_1DCD2889C(a2 + *(int *)(v24 + 28), (uint64_t)v19, &qword_1EBE86570);
      uint64_t v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
      sub_1DCD2889C((uint64_t)v22, (uint64_t)v13, &qword_1EBE86570);
      sub_1DCD2889C((uint64_t)v19, v25, &qword_1EBE86570);
      uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v26((uint64_t)v13, 1, v8) == 1)
      {
        sub_1DCD2479C((uint64_t)v19, &qword_1EBE86570);
        sub_1DCD2479C((uint64_t)v22, &qword_1EBE86570);
        if (v26(v25, 1, v8) == 1)
        {
          sub_1DCD2479C((uint64_t)v13, &qword_1EBE86570);
LABEL_13:
          uint64_t v30 = v41;
          uint64_t v31 = a1 + *(int *)(v41 + 24);
          uint64_t v33 = v46;
          uint64_t v32 = v47;
          v34 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
          v35 = v44;
          v34(v44, v31, v47);
          uint64_t v36 = a2 + *(int *)(v30 + 24);
          v37 = v45;
          v34(v45, v36, v32);
          sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
          char v23 = sub_1DD0483B8();
          char v38 = *(void (**)(char *, uint64_t))(v33 + 8);
          v38(v37, v32);
          v38(v35, v32);
          return v23 & 1;
        }
      }
      else
      {
        v27 = v42;
        sub_1DCD2889C((uint64_t)v13, (uint64_t)v42, &qword_1EBE86570);
        if (v26(v25, 1, v8) != 1)
        {
          uint64_t v28 = v43;
          sub_1DCE3E3B8(v25, (uint64_t)v43, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          char v29 = sub_1DCE41070(v27, v28);
          sub_1DCE33934((uint64_t)v28, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          sub_1DCD2479C((uint64_t)v19, &qword_1EBE86570);
          sub_1DCD2479C((uint64_t)v22, &qword_1EBE86570);
          sub_1DCE33934((uint64_t)v27, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
          sub_1DCD2479C((uint64_t)v13, &qword_1EBE86570);
          if (v29) {
            goto LABEL_13;
          }
          goto LABEL_11;
        }
        sub_1DCD2479C((uint64_t)v19, &qword_1EBE86570);
        sub_1DCD2479C((uint64_t)v22, &qword_1EBE86570);
        sub_1DCE33934((uint64_t)v27, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
      }
      sub_1DCD2479C((uint64_t)v13, &qword_1EAB03878);
    }
LABEL_11:
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1DCE408AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, double), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - v14;
  if (*(_DWORD *)a1 == *(_DWORD *)a2 && (a3(*(void *)(a1 + 8), *(void *)(a2 + 8), v13) & 1) != 0)
  {
    uint64_t v16 = a4(0);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v17(v15, a1 + *(int *)(v16 + 24), v8);
    v17(v11, a2 + *(int *)(v16 + 24), v8);
    sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v18 = sub_1DD0483B8();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v11, v8);
    v19(v15, v8);
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1DCE40A84(float *a1, float *a2)
{
  uint64_t v49 = sub_1DD047BF8();
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v46 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v45 = (char *)&v44 - v6;
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v48 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03898);
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  double v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v44 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v44 - v21;
  uint64_t v23 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult(0);
  uint64_t v24 = *(int *)(v23 + 24);
  uint64_t v50 = a1;
  uint64_t v25 = (uint64_t)a1 + v24;
  uint64_t v26 = v23;
  sub_1DCD2889C(v25, (uint64_t)v22, &qword_1EBE86530);
  uint64_t v27 = *(int *)(v26 + 24);
  uint64_t v51 = a2;
  sub_1DCD2889C((uint64_t)a2 + v27, (uint64_t)v19, &qword_1EBE86530);
  uint64_t v28 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_1DCD2889C((uint64_t)v22, (uint64_t)v13, &qword_1EBE86530);
  sub_1DCD2889C((uint64_t)v19, v28, &qword_1EBE86530);
  char v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v29((uint64_t)v13, 1, v7) == 1)
  {
    sub_1DCD2479C((uint64_t)v19, &qword_1EBE86530);
    sub_1DCD2479C((uint64_t)v22, &qword_1EBE86530);
    if (v29(v28, 1, v7) == 1)
    {
      sub_1DCD2479C((uint64_t)v13, &qword_1EBE86530);
      goto LABEL_4;
    }
    goto LABEL_8;
  }
  sub_1DCD2889C((uint64_t)v13, (uint64_t)v16, &qword_1EBE86530);
  if (v29(v28, 1, v7) == 1)
  {
    sub_1DCD2479C((uint64_t)v19, &qword_1EBE86530);
    sub_1DCD2479C((uint64_t)v22, &qword_1EBE86530);
    sub_1DCE33934((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
LABEL_8:
    uint64_t v39 = &qword_1EAB03898;
    uint64_t v40 = (uint64_t)v13;
LABEL_16:
    sub_1DCD2479C(v40, v39);
    goto LABEL_17;
  }
  uint64_t v41 = v48;
  sub_1DCE3E3B8(v28, v48, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  if (!sub_1DCFB7104(*(void **)v16, *(void **)v41)
    || (*((void *)v16 + 1) != *(void *)(v41 + 8) || *((void *)v16 + 2) != *(void *)(v41 + 16))
    && (sub_1DD048FA8() & 1) == 0)
  {
    sub_1DCE33934(v41, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    sub_1DCD2479C((uint64_t)v19, &qword_1EBE86530);
    sub_1DCD2479C((uint64_t)v22, &qword_1EBE86530);
    sub_1DCE33934((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    uint64_t v40 = (uint64_t)v13;
    uint64_t v39 = &qword_1EBE86530;
    goto LABEL_16;
  }
  sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
  char v42 = sub_1DD0483B8();
  sub_1DCE33934(v41, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  sub_1DCD2479C((uint64_t)v19, &qword_1EBE86530);
  sub_1DCD2479C((uint64_t)v22, &qword_1EBE86530);
  sub_1DCE33934((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
  sub_1DCD2479C((uint64_t)v13, &qword_1EBE86530);
  if ((v42 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_4:
  uint64_t v30 = v51;
  if (*v50 != *v51)
  {
LABEL_17:
    char v37 = 0;
    return v37 & 1;
  }
  uint64_t v31 = v47;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t, float))(v47 + 16);
  uint64_t v33 = v45;
  uint64_t v34 = v49;
  v32(v45, (char *)v50 + *(int *)(v26 + 20), v49, *v50);
  v35 = (char *)v30 + *(int *)(v26 + 20);
  uint64_t v36 = v46;
  ((void (*)(char *, char *, uint64_t))v32)(v46, v35, v34);
  sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
  char v37 = sub_1DD0483B8();
  char v38 = *(void (**)(char *, uint64_t))(v31 + 8);
  v38(v36, v34);
  v38(v33, v34);
  return v37 & 1;
}

uint64_t sub_1DCE41070(double *a1, double *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3])
  {
    uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, (char *)a1 + *(int *)(v11 + 32), v4);
    v12(v7, (char *)a2 + *(int *)(v11 + 32), v4);
    sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v13 = sub_1DD0483B8();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1DCE41258(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v49 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v44 - v7;
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (double *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03878);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (double *)((char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v44 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = a1;
  if ((sub_1DCFB6860(*a1, *a2) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v47 = v8;
  uint64_t v48 = v17;
  uint64_t v45 = v11;
  uint64_t v25 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals(0);
  sub_1DCD2889C((uint64_t)a1 + *(int *)(v25 + 24), (uint64_t)v23, &qword_1EBE86570);
  uint64_t v46 = v25;
  uint64_t v26 = *(int *)(v25 + 24);
  uint64_t v27 = a2;
  sub_1DCD2889C((uint64_t)a2 + v26, (uint64_t)v20, &qword_1EBE86570);
  uint64_t v28 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1DCD2889C((uint64_t)v23, (uint64_t)v14, &qword_1EBE86570);
  sub_1DCD2889C((uint64_t)v20, v28, &qword_1EBE86570);
  uint64_t v29 = v53;
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  if (v30((uint64_t)v14, 1, v53) == 1)
  {
    sub_1DCD2479C((uint64_t)v20, &qword_1EBE86570);
    sub_1DCD2479C((uint64_t)v23, &qword_1EBE86570);
    if (v30(v28, 1, v29) == 1)
    {
      sub_1DCD2479C((uint64_t)v14, &qword_1EBE86570);
LABEL_11:
      uint64_t v36 = v46;
      char v37 = v47;
      uint64_t v39 = v50;
      uint64_t v38 = v51;
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
      v40(v47, (char *)v24 + *(int *)(v46 + 20), v51);
      uint64_t v41 = (char *)v27 + *(int *)(v36 + 20);
      char v42 = v49;
      v40(v49, v41, v38);
      sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v32 = sub_1DD0483B8();
      uint64_t v43 = *(void (**)(char *, uint64_t))(v39 + 8);
      v43(v42, v38);
      v43(v37, v38);
      return v32 & 1;
    }
    goto LABEL_7;
  }
  uint64_t v31 = v48;
  sub_1DCD2889C((uint64_t)v14, (uint64_t)v48, &qword_1EBE86570);
  if (v30(v28, 1, v29) == 1)
  {
    sub_1DCD2479C((uint64_t)v20, &qword_1EBE86570);
    sub_1DCD2479C((uint64_t)v23, &qword_1EBE86570);
    sub_1DCE33934((uint64_t)v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
LABEL_7:
    sub_1DCD2479C((uint64_t)v14, &qword_1EAB03878);
    goto LABEL_8;
  }
  uint64_t v34 = v45;
  sub_1DCE3E3B8(v28, (uint64_t)v45, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  char v35 = sub_1DCE41070(v31, v34);
  sub_1DCE33934((uint64_t)v34, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  sub_1DCD2479C((uint64_t)v20, &qword_1EBE86570);
  sub_1DCD2479C((uint64_t)v23, &qword_1EBE86570);
  sub_1DCE33934((uint64_t)v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
  sub_1DCD2479C((uint64_t)v14, &qword_1EBE86570);
  if (v35) {
    goto LABEL_11;
  }
LABEL_8:
  char v32 = 0;
  return v32 & 1;
}

uint64_t sub_1DCE41780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v17 - v9;
  if (sub_1DCFB7104(*(void **)a1, *(void **)a2))
  {
    BOOL v11 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
    if (v11 || (char v12 = 0, (sub_1DD048FA8() & 1) != 0))
    {
      uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
      uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v14(v10, a1 + *(int *)(v13 + 24), v4);
      v14(v7, a2 + *(int *)(v13 + 24), v4);
      sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v12 = sub_1DD0483B8();
      uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v7, v4);
      v15(v10, v4);
    }
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1DCE4195C(char *a1, char *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v17 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v11 || (char v12 = 0, (sub_1DD048FA8() & 1) != 0))
  {
    if (sub_1DCFB7108(*((void *)a1 + 2), *((void *)a2 + 2)))
    {
      uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v14(v10, &a1[*(int *)(v13 + 24)], v4);
      v14(v7, &a2[*(int *)(v13 + 24)], v4);
      sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v12 = sub_1DD0483B8();
      uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v7, v4);
      v15(v10, v4);
    }
    else
    {
      char v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t sub_1DCE41B38(void *a1, void *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v52 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v51 = (char *)v49 - v7;
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v57 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03890);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE865E8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (void *)((char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v49 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v49 - v22;
  uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  uint64_t v25 = *(int *)(v24 + 28);
  uint64_t v55 = a1;
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = v24;
  sub_1DCD2889C(v26, (uint64_t)v23, &qword_1EBE865E8);
  uint64_t v50 = v27;
  uint64_t v28 = *(int *)(v27 + 28);
  v56 = a2;
  sub_1DCD2889C((uint64_t)a2 + v28, (uint64_t)v20, &qword_1EBE865E8);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1DCD2889C((uint64_t)v23, (uint64_t)v14, &qword_1EBE865E8);
  sub_1DCD2889C((uint64_t)v20, v29, &qword_1EBE865E8);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v20, &qword_1EBE865E8);
    sub_1DCD2479C((uint64_t)v23, &qword_1EBE865E8);
    if (v30(v29, 1, v8) == 1)
    {
      sub_1DCD2479C((uint64_t)v14, &qword_1EBE865E8);
      goto LABEL_19;
    }
    goto LABEL_6;
  }
  uint64_t v31 = v57;
  sub_1DCD2889C((uint64_t)v14, (uint64_t)v17, &qword_1EBE865E8);
  v49[1] = v8;
  if (v30(v29, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v20, &qword_1EBE865E8);
    sub_1DCD2479C((uint64_t)v23, &qword_1EBE865E8);
    sub_1DCE33934((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
LABEL_6:
    char v32 = &qword_1EAB03890;
    uint64_t v33 = (uint64_t)v14;
LABEL_7:
    sub_1DCD2479C(v33, v32);
LABEL_8:
    char v34 = 0;
    return v34 & 1;
  }
  sub_1DCE3E3B8(v29, (uint64_t)v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
  BOOL v36 = *v17 == *v31 && v17[1] == v31[1];
  if (!v36 && (sub_1DD048FA8() & 1) == 0 || (v17[2] != v31[2] || v17[3] != v31[3]) && (sub_1DD048FA8() & 1) == 0)
  {
    sub_1DCE33934((uint64_t)v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
    sub_1DCD2479C((uint64_t)v20, &qword_1EBE865E8);
    sub_1DCD2479C((uint64_t)v23, &qword_1EBE865E8);
    sub_1DCE33934((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
    uint64_t v33 = (uint64_t)v14;
    char v32 = &qword_1EBE865E8;
    goto LABEL_7;
  }
  sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
  char v37 = sub_1DD0483B8();
  sub_1DCE33934((uint64_t)v31, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
  sub_1DCD2479C((uint64_t)v20, &qword_1EBE865E8);
  sub_1DCD2479C((uint64_t)v23, &qword_1EBE865E8);
  sub_1DCE33934((uint64_t)v17, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
  sub_1DCD2479C((uint64_t)v14, &qword_1EBE865E8);
  if ((v37 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_19:
  uint64_t v38 = v55;
  uint64_t v39 = v56;
  if (*v55 == *v56 && v55[1] == v56[1] || (char v34 = 0, (sub_1DD048FA8() & 1) != 0))
  {
    if (sub_1DCFB74F8(v38[2], v39[2]))
    {
      uint64_t v41 = v50;
      uint64_t v40 = v51;
      char v42 = (char *)v38 + *(int *)(v50 + 24);
      uint64_t v44 = v53;
      uint64_t v43 = v54;
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
      v45(v51, v42, v54);
      uint64_t v46 = (char *)v39 + *(int *)(v41 + 24);
      uint64_t v47 = v52;
      v45(v52, v46, v43);
      sub_1DCE3D1E0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v34 = sub_1DD0483B8();
      uint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
      v48(v47, v43);
      v48(v40, v43);
      return v34 & 1;
    }
    goto LABEL_8;
  }
  return v34 & 1;
}

unint64_t sub_1DCE4215C()
{
  unint64_t result = qword_1EBE86698;
  if (!qword_1EBE86698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86698);
  }
  return result;
}

unint64_t sub_1DCE421B0()
{
  unint64_t result = qword_1EBE86618;
  if (!qword_1EBE86618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86618);
  }
  return result;
}

ValueMetadata *type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult.CoarseClassificatioLabel()
{
  return &type metadata for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult.CoarseClassificatioLabel;
}

uint64_t *sub_1DCE42214(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (_OWORD *)((char *)v7 + v13);
    uint64_t v15 = (_OWORD *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      long long v19 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v19;
      v12((char *)v14 + *(int *)(v16 + 32), (char *)v15 + *(int *)(v16 + 32), v11);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t sub_1DCE423E4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = v6 + *(int *)(v7 + 32);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

void *sub_1DCE424F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *sub_1DCE42674(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v20 = *(void *)(v9 - 8);
  uint64_t v21 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v20 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      *uint64_t v12 = *v13;
      v12[1] = v13[1];
      v12[2] = v13[2];
      v12[3] = v13[3];
      ((void (*)(char *, char *, uint64_t))v10)((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v21);
      return a1;
    }
    sub_1DCE33934((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v21);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

void *sub_1DCE428B8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *sub_1DCE42A2C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v22 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v22 + 40);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      long long v21 = v13[1];
      *uint64_t v12 = *v13;
      v12[1] = v21;
      ((void (*)(char *, char *, uint64_t))v10)((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v23);
      return a1;
    }
    sub_1DCE33934((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  long long v18 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v18;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v23);
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1DCE42C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE42C4C);
}

uint64_t sub_1DCE42C4C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DCE42D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE42D90);
}

void *sub_1DCE42D90(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1DCE42EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1DCE42F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_141Tm_2);
}

uint64_t sub_1DCE42F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_142Tm_2);
}

uint64_t sub_1DCE42F30()
{
  return sub_1DCE0BB54();
}

uint64_t *sub_1DCE42F4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (uint64_t *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v19 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v19;
      v13[2] = v14[2];
      uint64_t v20 = *(int *)(v15 + 24);
      long long v21 = (char *)v13 + v20;
      uint64_t v22 = (char *)v14 + v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11(v21, v22, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t sub_1DCE43134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

_DWORD *sub_1DCE43248(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v12[2] = v13[2];
    uint64_t v18 = *(int *)(v14 + 24);
    uint64_t v19 = (char *)v12 + v18;
    uint64_t v20 = (char *)v13 + v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v19, v20, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *sub_1DCE433E0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *))(v10 + 24);
  uint64_t v25 = v9;
  v11(v7, v8);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v26 = a1;
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v8)
  {
    if (!v18)
    {
      *uint64_t v13 = *v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13[1] = v14[1];
      v13[2] = v14[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v11)((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v25);
      return v26;
    }
    sub_1DCE33934((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
    memcpy(v13, v14, *(void *)(*(void *)(v23 - 8) + 64));
    return v26;
  }
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  v13[2] = v14[2];
  uint64_t v19 = *(int *)(v15 + 24);
  uint64_t v20 = (char *)v13 + v19;
  long long v21 = (char *)v14 + v19;
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v20, v21, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return v26;
}

_DWORD *sub_1DCE43640(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    *(_OWORD *)(v12 + 1) = *(_OWORD *)(v13 + 1);
    v10((char *)v12 + *(int *)(v14 + 24), (char *)v13 + *(int *)(v14 + 24), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *sub_1DCE437BC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *))(v10 + 40);
  uint64_t v22 = v9;
  v11(v7, v8);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v23 = a1;
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v8)
  {
    if (!v18)
    {
      *uint64_t v13 = *v14;
      swift_bridgeObjectRelease();
      uint64_t v21 = v14[2];
      v13[1] = v14[1];
      v13[2] = v21;
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v11)((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v22);
      return v23;
    }
    sub_1DCE33934((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return v23;
  }
  *uint64_t v13 = *v14;
  *(_OWORD *)(v13 + 1) = *(_OWORD *)(v14 + 1);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v22);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return v23;
}

uint64_t sub_1DCE439E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE439FC);
}

uint64_t sub_1DCE439FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_1DCE43AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE43B10);
}

uint64_t sub_1DCE43B10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 24);
    return v15(v17, a2, a2, v16);
  }
}

void sub_1DCE43C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1DCE43C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  sub_1DD047BF8();
  if (v8 <= 0x3F)
  {
    sub_1DCE34AB0(319, a5, a6);
    if (v9 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1DCE43D2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    unint64_t v8 = (char *)a1 + v7;
    unint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_1DCE43E20(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_1DCE43EA0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1DD047BF8();
  unint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1DCE43F48(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCE43FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1DCE44080(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1DCE4411C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE44130);
}

uint64_t sub_1DCE44130(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCE441E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE441F4);
}

void *sub_1DCE441F4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCE4429C()
{
  return sub_1DCE0BB54();
}

uint64_t *sub_1DCE442B4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[7];
    uint64_t v13 = (_OWORD *)((char *)v4 + v12);
    uint64_t v14 = (_OWORD *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      long long v19 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v19;
      v11((char *)v13 + *(int *)(v15 + 32), (char *)v14 + *(int *)(v15 + 32), v10);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v20 = a3[8];
    uint64_t v21 = (uint64_t *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v26 = v22[1];
      void *v21 = *v22;
      v21[1] = v26;
      v21[2] = v22[2];
      uint64_t v27 = *(int *)(v23 + 24);
      uint64_t v28 = (char *)v21 + v27;
      uint64_t v29 = (char *)v22 + v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11(v28, v29, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
  }
  return v4;
}

uint64_t sub_1DCE4458C(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7)) {
    v12(v6 + *(int *)(v7 + 32), v5);
  }
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v8 + *(int *)(v9 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

void *sub_1DCE44714(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[8];
  long long v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = v20[1];
    *long long v19 = *v20;
    v19[1] = v24;
    v19[2] = v20[2];
    uint64_t v25 = *(int *)(v21 + 24);
    uint64_t v26 = (char *)v19 + v25;
    uint64_t v27 = (char *)v20 + v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v26, v27, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

_DWORD *sub_1DCE4499C(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  uint64_t v33 = *(void (**)(char *, char *))(v34 + 24);
  v33(v7, v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      *((void *)v11 + 1) = *((void *)v12 + 1);
      *((void *)v11 + 2) = *((void *)v12 + 2);
      *((void *)v11 + 3) = *((void *)v12 + 3);
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(&v11[*(int *)(v13 + 32)], &v12[*(int *)(v13 + 32)], v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1DCE33934((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  *((void *)v11 + 2) = *((void *)v12 + 2);
  *((void *)v11 + 3) = *((void *)v12 + 3);
  ((void (*)(char *, char *, uint64_t))v33)(&v11[*(int *)(v13 + 32)], &v12[*(int *)(v13 + 32)], v35);
LABEL_7:
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      *uint64_t v20 = *v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20[1] = v21[1];
      v20[2] = v21[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v33)((char *)v20 + *(int *)(v22 + 24), (char *)v21 + *(int *)(v22 + 24), v35);
      return a1;
    }
    sub_1DCE33934((uint64_t)v20, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
    memcpy(v20, v21, *(void *)(*(void *)(v31 - 8) + 64));
    return a1;
  }
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  v20[2] = v21[2];
  uint64_t v27 = *(int *)(v22 + 24);
  uint64_t v28 = (char *)v20 + v27;
  uint64_t v29 = (char *)v21 + v27;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30(v28, v29, v35);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

void *sub_1DCE44D98(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *v20;
    *(_OWORD *)(v19 + 1) = *(_OWORD *)(v20 + 1);
    v10((char *)v19 + *(int *)(v21 + 24), (char *)v20 + *(int *)(v21 + 24), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

_DWORD *sub_1DCE4500C(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  char v32 = *(void (**)(char *, char *))(v33 + 40);
  v32(v7, v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      long long v18 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v18;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v11[*(int *)(v13 + 32)], &v12[*(int *)(v13 + 32)], v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1DCE33934((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  long long v30 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v30;
  ((void (*)(char *, char *, uint64_t))v32)(&v11[*(int *)(v13 + 32)], &v12[*(int *)(v13 + 32)], v34);
LABEL_7:
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v24 = *(void *)(v23 - 8);
  int v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  int v26 = v25(v21, 1, v23);
  int v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      void *v21 = *v22;
      swift_bridgeObjectRelease();
      uint64_t v31 = v22[2];
      v21[1] = v22[1];
      v21[2] = v31;
      swift_bridgeObjectRelease();
      ((void (*)(char *, char *, uint64_t))v32)((char *)v21 + *(int *)(v23 + 24), (char *)v22 + *(int *)(v23 + 24), v34);
      return a1;
    }
    sub_1DCE33934((uint64_t)v21, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  void *v21 = *v22;
  *(_OWORD *)(v21 + 1) = *(_OWORD *)(v22 + 1);
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))((char *)v21 + *(int *)(v23 + 24), (char *)v22 + *(int *)(v23 + 24), v34);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t sub_1DCE453A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE453B4);
}

uint64_t sub_1DCE453B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1DD047BF8();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
  uint64_t v15 = v13;
  uint64_t v16 = a1 + a3[8];
  return v14(v16, a2, v15);
}

uint64_t sub_1DCE45504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE45518);
}

uint64_t sub_1DCE45518(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1DD047BF8();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_5:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(a1 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_5;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[8];
  return v16(v18, a2, a2, v17);
}

void sub_1DCE45674()
{
  sub_1DD047BF8();
  if (v0 <= 0x3F)
  {
    sub_1DCE34AB0(319, &qword_1EBE86578, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    if (v1 <= 0x3F)
    {
      sub_1DCE34AB0(319, &qword_1EBE86538, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_1DCE457C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    a1[1] = a2[1];
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1DCE458B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCE45950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCE459EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCE45A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCE45B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_141Tm_3);
}

uint64_t sub_1DCE45B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_142Tm_3);
}

ValueMetadata *type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainPredictionSupportedDomain()
{
  return &type metadata for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainPredictionSupportedDomain;
}

uint64_t sub_1DCE45B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_42Tm);
}

uint64_t sub_1DCE45B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_43Tm);
}

uint64_t sub_1DCE45B88()
{
  return sub_1DCE0BB54();
}

void *sub_1DCE45BA0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (_OWORD *)((char *)v4 + v13);
    uint64_t v15 = (_OWORD *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      long long v20 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v20;
      v12((uint64_t)v14 + *(int *)(v16 + 32), (uint64_t)v15 + *(int *)(v16 + 32), v11);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_1DCE45D7C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = v6 + *(int *)(v7 + 32);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

uint64_t sub_1DCE45E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = sub_1DD047BF8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (_OWORD *)(a1 + v12);
  uint64_t v14 = (_OWORD *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    long long v18 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v18;
    v11((char *)v13 + *(int *)(v15 + 32), (char *)v14 + *(int *)(v15 + 32), v10);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_1DCE46014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v20 = *(void *)(v9 - 8);
  uint64_t v21 = v9;
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v20 + 24);
  ((void (*)(uint64_t, uint64_t))v10)(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      *((void *)v12 + 2) = *((void *)v13 + 2);
      *((void *)v12 + 3) = *((void *)v13 + 3);
      v10(&v12[*(int *)(v14 + 32)], &v13[*(int *)(v14 + 32)], v21);
      return a1;
    }
    sub_1DCE33934((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  *((void *)v12 + 2) = *((void *)v13 + 2);
  *((void *)v12 + 3) = *((void *)v13 + 3);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(&v12[*(int *)(v14 + 32)], &v13[*(int *)(v14 + 32)], v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1DCE46268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1DCE463E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1DD047BF8();
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v24 = v10;
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v23 + 40);
  ((void (*)(uint64_t, uint64_t))v11)(v8, v9);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v16 = *(void *)(v15 - 8);
  long long v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v9) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v9)
  {
    if (!v18)
    {
      long long v22 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v22;
      v11(&v13[*(int *)(v15 + 32)], &v14[*(int *)(v15 + 32)], v24);
      return a1;
    }
    sub_1DCE33934((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  long long v19 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v19;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v13[*(int *)(v15 + 32)], &v14[*(int *)(v15 + 32)], v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_1DCE465F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE4660C);
}

uint64_t sub_1DCE4660C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_5Tm(a1, a2, a3, &qword_1EBE86570);
}

uint64_t __swift_get_extra_inhabitant_index_5Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v5 = *(void *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = a1 + *(int *)(a3 + 24);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a4);
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
      uint64_t v17 = v15;
      uint64_t v18 = a1 + *(int *)(a3 + 28);
      return v16(v18, a2, v17);
    }
  }
}

uint64_t sub_1DCE46748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE4675C);
}

uint64_t sub_1DCE4675C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_6Tm(a1, a2, a3, a4, &qword_1EBE86570);
}

uint64_t __swift_store_extra_inhabitant_index_6Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a3)
    {
      uint64_t v12 = v10;
      uint64_t v13 = v6 + *(int *)(a4 + 24);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
      return v14(v13, a2, a2, v12);
    }
    else
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
      uint64_t v17 = v15;
      uint64_t v18 = v6 + *(int *)(a4 + 28);
      return v16(v18, a2, a2, v17);
    }
  }
  return result;
}

void sub_1DCE468A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1DCE468D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  sub_1DD047BF8();
  if (v8 <= 0x3F)
  {
    sub_1DCE34AB0(319, a5, a6);
    if (v9 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DCE469C0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v21 = (char *)(a1 + v9);
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v21, v10, v11);
    uint64_t v13 = *(int *)(a3 + 36);
    uint64_t v14 = (_OWORD *)(v7 + v13);
    uint64_t v15 = (_OWORD *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      long long v19 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v19;
      v12((char *)v14 + *(int *)(v16 + 32), (char *)v15 + *(int *)(v16 + 32), v11);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t sub_1DCE46BBC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = v6 + *(int *)(v7 + 32);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

uint64_t sub_1DCE46CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(int *)(a3 + 32);
  long long v19 = (char *)(a1 + v7);
  uint64_t v8 = (char *)(a2 + v7);
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v19, v8, v9);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1DCE46E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v20 = *(void *)(v9 - 8);
  uint64_t v21 = v9;
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v20 + 24);
  ((void (*)(uint64_t, uint64_t))v10)(v7, v8);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      *((void *)v12 + 2) = *((void *)v13 + 2);
      *((void *)v12 + 3) = *((void *)v13 + 3);
      v10(&v12[*(int *)(v14 + 32)], &v13[*(int *)(v14 + 32)], v21);
      return a1;
    }
    sub_1DCE33934((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  *((void *)v12 + 2) = *((void *)v13 + 2);
  *((void *)v12 + 3) = *((void *)v13 + 3);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(&v12[*(int *)(v14 + 32)], &v13[*(int *)(v14 + 32)], v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1DCE47104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1DCE47288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v22 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v22 + 40);
  ((void (*)(uint64_t, uint64_t))v10)(v7, v8);
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      long long v21 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v21;
      v10(&v12[*(int *)(v14 + 32)], &v13[*(int *)(v14 + 32)], v23);
      return a1;
    }
    sub_1DCE33934((uint64_t)v12, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  long long v18 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v18;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v12[*(int *)(v14 + 32)], &v13[*(int *)(v14 + 32)], v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1DCE474BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE474D0);
}

uint64_t sub_1DCE474D0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DCE47600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE47614);
}

void *sub_1DCE47614(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 36);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1DCE47744()
{
  sub_1DD047BF8();
  if (v0 <= 0x3F)
  {
    sub_1DCE34AB0(319, &qword_1EBE86578, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_1DCE47848(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1DCE47924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCE479B0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = (uint64_t)a2 + v5;
  uint64_t v8 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t sub_1DCE47A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCE47AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCE47B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE47B68);
}

uint64_t __swift_get_extra_inhabitant_index_42Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1DCE47BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE47BF0);
}

uint64_t __swift_store_extra_inhabitant_index_43Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

unint64_t sub_1DCE47C6C()
{
  unint64_t result = qword_1EBE86628;
  if (!qword_1EBE86628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86628);
  }
  return result;
}

uint64_t sub_1DCE47CC0()
{
  return sub_1DCE05490(&qword_1EAB03920, &qword_1EAB03928);
}

unint64_t sub_1DCE47CEC()
{
  unint64_t result = qword_1EBE866A8;
  if (!qword_1EBE866A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE866A8);
  }
  return result;
}

uint64_t sub_1DCE47D40()
{
  return sub_1DCE05490(&qword_1EAB03930, &qword_1EAB03938);
}

unint64_t sub_1DCE47D6C()
{
  unint64_t result = qword_1EBE86620;
  if (!qword_1EBE86620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86620);
  }
  return result;
}

unint64_t sub_1DCE47DC4()
{
  unint64_t result = qword_1EBE86630;
  if (!qword_1EBE86630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86630);
  }
  return result;
}

unint64_t sub_1DCE47E1C()
{
  unint64_t result = qword_1EBE866A0;
  if (!qword_1EBE866A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE866A0);
  }
  return result;
}

unint64_t sub_1DCE47E74()
{
  unint64_t result = qword_1EBE866B0;
  if (!qword_1EBE866B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE866B0);
  }
  return result;
}

uint64_t sub_1DCE47EC8(uint64_t result)
{
  switch(result)
  {
    case 2:
      unint64_t result = 3;
      break;
    case 3:
      unint64_t result = 4;
      break;
    case 4:
      unint64_t result = 5;
      break;
    case 5:
      unint64_t result = 6;
      break;
    case 6:
      unint64_t result = 8;
      break;
    case 7:
      unint64_t result = 9;
      break;
    case 8:
      unint64_t result = 10;
      break;
    case 9:
      unint64_t result = 11;
      break;
    case 10:
      unint64_t result = 15;
      break;
    case 11:
      unint64_t result = 2;
      break;
    case 14:
      unint64_t result = 7;
      break;
    case 15:
      unint64_t result = 14;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *sub_1DCE48010(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(int *)(v4 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_1DCE48100(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1
     + *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
              + 20);
  uint64_t v3 = sub_1DD047BF8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *sub_1DCE4817C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
              + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_1DCE48220(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
              + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_1DCE482B8(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
              + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1DCE48340(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0)
              + 20);
  int v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCE483D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE483E4);
}

uint64_t sub_1DCE483E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1DCE48450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE48464);
}

uint64_t sub_1DCE48464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SignSymbolConverter()
{
  uint64_t result = qword_1EBE82D28;
  if (!qword_1EBE82D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCE48520()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_LabelCachingConverterConfig.SignSymbolConverterConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCE485AC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v49 = a2;
  uint64_t v51 = a3;
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v47 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v48 = (uint64_t)&v45 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v45 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86530);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v45 - v21;
  uint64_t v46 = (uint8_t *)a1;
  uint64_t v23 = a1;
  unint64_t v24 = v49;
  sub_1DCE48B4C(v23, v49, v3, (uint64_t)v15);
  uint64_t v50 = v17;
  int v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v52 = v16;
  if (v25(v15, 1, v16) == 1)
  {
    sub_1DCE2C78C((uint64_t)v15);
    uint64_t v26 = v47;
    sub_1DCDB40EC(v47);
    swift_bridgeObjectRetain_n();
    int v27 = sub_1DD048048();
    os_log_type_t v28 = sub_1DD048848();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v54 = v30;
      *(_DWORD *)uint64_t v29 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1DCED7FA0((uint64_t)v46, v24, &v54);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v27, v28, "Failed to parse label %s", v29, 0xCu);
      uint64_t v31 = 1;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v30, -1, -1);
      MEMORY[0x1E01B07E0](v29, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v26, v5);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v26, v5);
      uint64_t v31 = 1;
    }
    uint64_t v43 = v51;
  }
  else
  {
    sub_1DCE2C7EC((uint64_t)v15, (uint64_t)v22);
    sub_1DCDB40EC((uint64_t)v12);
    uint64_t v32 = v48;
    sub_1DCDB4300(v48);
    uint64_t v35 = *(void (**)(uint64_t, unint64_t))(v6 + 8);
    uint64_t v34 = v6 + 8;
    uint64_t v33 = v35;
    v35((uint64_t)v12, v5);
    sub_1DCDD056C((uint64_t)v22, (uint64_t)v19);
    BOOL v36 = sub_1DD048048();
    os_log_type_t v37 = sub_1DD048848();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      unint64_t v49 = v5;
      uint64_t v39 = (uint8_t *)v38;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v54 = v40;
      uint64_t v47 = v34;
      *(_DWORD *)uint64_t v39 = 136315138;
      uint64_t v46 = v39 + 4;
      sub_1DCE4A680((unint64_t *)&qword_1EBE86518);
      uint64_t v41 = sub_1DD048FB8();
      uint64_t v53 = sub_1DCED7FA0(v41, v42, &v54);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCDD05D0((uint64_t)v19);
      _os_log_impl(&dword_1DCCF9000, v36, v37, "Encoding Signs and Symbols: %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v40, -1, -1);
      MEMORY[0x1E01B07E0](v39, -1, -1);

      v33(v32, v49);
    }
    else
    {
      sub_1DCDD05D0((uint64_t)v19);

      v33(v32, v5);
    }
    uint64_t v43 = v51;
    sub_1DCE2C7EC((uint64_t)v22, v51);
    uint64_t v31 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v43, v31, 1, v52);
}

uint64_t sub_1DCE48B4C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v107 = a4;
  uint64_t v7 = (unint64_t *)sub_1DD048068();
  uint64_t v110 = *(v7 - 1);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v106 = (uint64_t)&v100 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v102 = (uint64_t)&v100 - v13;
  v113 = a3;
  uint64_t v119 = *a3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82D40);
  sub_1DCD52850(&qword_1EBE82D38, &qword_1EBE82D40);
  sub_1DCD21A84();
  uint64_t v14 = sub_1DD048658();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  id v17 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
  id v18 = sub_1DCE4A1B4(v14, v16, 0);
  v109 = v9;
  uint64_t v19 = v18;
  uint64_t v20 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v20 = a1;
  }
  uint64_t v21 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0) {
    uint64_t v21 = 11;
  }
  uint64_t v119 = 15;
  uint64_t v120 = v21 | (v20 << 16);
  v117 = (void *)a1;
  unint64_t v118 = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B60);
  sub_1DCD52850(&qword_1EBE86B68, &qword_1EBE86B60);
  uint64_t v22 = sub_1DD0489C8();
  unint64_t v24 = (void *)MEMORY[0x1E4FBC860];
  v115 = (void *)a2;
  id v108 = v19;
  if (v19)
  {
    uint64_t v25 = v22;
    uint64_t v26 = v23;
    id v27 = v19;
    os_log_type_t v28 = (void *)sub_1DD0483D8();
    uint64_t v29 = v7;
    uint64_t v30 = (void *)sub_1DD0483D8();
    id v31 = objc_msgSend(v27, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v28, 0, v25, v26, v30);

    uint64_t v7 = v29;
    uint64_t v32 = sub_1DD048408();
    uint64_t v34 = v33;

    uint64_t v119 = v32;
    uint64_t v120 = v34;
    uint64_t v35 = (void *)sub_1DD048AA8();
    uint64_t v22 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v36 = v110;
  MEMORY[0x1F4188790](v22);
  uint64_t v105 = a1;
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v38 = (void *)sub_1DCE4A500(v37, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCE4A4F8);
  swift_bridgeObjectRelease();
  v117 = v24;
  uint64_t v111 = v38[2];
  if (!v111)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v40 = (uint64_t)v109;
LABEL_49:
    uint64_t v88 = v106;
    sub_1DCDB40EC(v106);
    sub_1DCDB4300(v40);
    v89 = *(void (**)(uint64_t, unint64_t *))(v36 + 8);
    v89(v88, v7);
    swift_bridgeObjectRetain_n();
    v90 = sub_1DD048048();
    os_log_type_t v91 = sub_1DD048848();
    if (os_log_type_enabled(v90, v91))
    {
      v103 = v7;
      v114 = 0;
      uint64_t v92 = v40;
      v93 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      uint64_t v119 = v94;
      *(_DWORD *)v93 = 136315138;
      uint64_t v95 = v107;
      swift_bridgeObjectRetain();
      uint64_t v116 = sub_1DCED7FA0(v105, (unint64_t)v115, &v119);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v90, v91, "Parsing %s", v93, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v94, -1, -1);
      MEMORY[0x1E01B07E0](v93, -1, -1);

      v89(v92, v103);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v89(v40, v7);
      uint64_t v95 = v107;
    }
    id v96 = v108;
    uint64_t v97 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
    MEMORY[0x1F4188790](v97);
    sub_1DCE4A680(&qword_1EBE86510);
    sub_1DD047E78();

    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v95, 0, 1, v97);
    return swift_bridgeObjectRelease();
  }
  uint64_t v39 = *v113;
  uint64_t v40 = (uint64_t)v109;
  if (!*(void *)(*v113 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  uint64_t v42 = v38[4];
  uint64_t v41 = v38[5];
  swift_bridgeObjectRetain();
  unint64_t v43 = sub_1DCEAD1A4(v42, v41);
  if ((v44 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v110;
    goto LABEL_49;
  }
  uint64_t v45 = *(unsigned int *)(*(void *)(v39 + 56) + 4 * v43);
  swift_bridgeObjectRelease();
  if (!v35[2])
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  unint64_t v46 = v35[4];
  v101 = v35 + 4;
  unint64_t v47 = v35[5];
  if ((v47 ^ v46) >= 0x4000)
  {
    v103 = v7;
    v104 = v38;
    v114 = v38 + 7;
    uint64_t v48 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v49 = 1;
    uint64_t v50 = 56;
    while (1)
    {
      uint64_t v51 = v35;
      uint64_t v112 = v50;
      uint64_t v7 = (void *)((char *)v35 + v50);
      uint64_t v53 = *(void *)((char *)v35 + v50 - 8);
      unint64_t v52 = *v7;
      swift_bridgeObjectRetain();
      if ((v52 & 0x1000000000000000) != 0)
      {
        uint64_t v55 = (uint64_t)sub_1DCD4F45C(v46, v47, v53, v52, 16);
        char v57 = v69;
      }
      else
      {
        if ((v52 & 0x2000000000000000) != 0)
        {
          uint64_t v119 = v53;
          uint64_t v120 = v52 & 0xFFFFFFFFFFFFFFLL;
          uint64_t v54 = &v119;
        }
        else if ((v53 & 0x1000000000000000) != 0)
        {
          uint64_t v54 = (uint64_t *)((v52 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }
        else
        {
          uint64_t v54 = (uint64_t *)sub_1DD048C18();
        }
        uint64_t v55 = sub_1DCD511C4((uint64_t)v54, v46, v47, v53, v52, 16);
        LOBYTE(v116) = v56 & 1;
        char v57 = v56 & 1;
      }
      swift_bridgeObjectRelease();
      uint64_t v35 = v51;
      v58 = v104;
      if (v57)
      {
        --v49;
LABEL_41:
        uint64_t v7 = v103;
        goto LABEL_42;
      }
      if ((v45 & 0x80000000) != 0) {
        goto LABEL_61;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v48 = sub_1DCE9E960(0, v48[2] + 1, 1, v48);
      }
      unint64_t v60 = v48[2];
      unint64_t v59 = v48[3];
      int64_t v61 = v59 >> 1;
      unint64_t v62 = v60 + 1;
      if (v59 >> 1 <= v60)
      {
        uint64_t v48 = sub_1DCE9E960((void *)(v59 > 1), v60 + 1, 1, v48);
        unint64_t v59 = v48[3];
        int64_t v61 = v59 >> 1;
      }
      v48[2] = v62;
      v48[v60 + 4] = v45;
      int64_t v63 = v60 + 2;
      if (v61 < v63) {
        uint64_t v48 = sub_1DCE9E960((void *)(v59 > 1), v63, 1, v48);
      }
      v48[2] = v63;
      v48[v62 + 4] = v55;
      v117 = v48;
      if (v111 == v49)
      {
        swift_bridgeObjectRelease();
LABEL_48:
        swift_bridgeObjectRelease();
        uint64_t v7 = v103;
        uint64_t v40 = (uint64_t)v109;
        uint64_t v36 = v110;
        goto LABEL_49;
      }
      if (v49 >= v58[2]) {
        break;
      }
      uint64_t v64 = *v113;
      if (!*(void *)(*v113 + 16))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = v103;
        uint64_t v40 = (uint64_t)v109;
        uint64_t v36 = v110;
        goto LABEL_49;
      }
      uint64_t v66 = *(v114 - 1);
      uint64_t v65 = *v114;
      swift_bridgeObjectRetain();
      unint64_t v67 = sub_1DCEAD1A4(v66, v65);
      if ((v68 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
      uint64_t v45 = *(unsigned int *)(*(void *)(v64 + 56) + 4 * v67);
      swift_bridgeObjectRelease();
      if (v49 >= v35[2]) {
        goto LABEL_57;
      }
      unint64_t v46 = v7[1];
      unint64_t v47 = v7[2];
      if ((v47 ^ v46) < 0x4000) {
        goto LABEL_41;
      }
      uint64_t v50 = v112 + 32;
      v114 += 2;
      ++v49;
    }
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
LABEL_59:
  unint64_t v49 = 0;
LABEL_42:
  swift_bridgeObjectRelease();
  uint64_t v70 = v102;
  sub_1DCDB40EC(v102);
  swift_bridgeObjectRetain();
  uint64_t v71 = sub_1DD048048();
  os_log_type_t v72 = sub_1DD048848();
  BOOL v73 = os_log_type_enabled(v71, v72);
  uint64_t v74 = v110;
  id v75 = v108;
  if (!v73)
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, unint64_t *))(v74 + 8))(v70, v7);
    goto LABEL_55;
  }
  uint64_t v76 = (uint8_t *)swift_slowAlloc();
  uint64_t v77 = swift_slowAlloc();
  uint64_t v119 = v77;
  *(_DWORD *)uint64_t v76 = 136315138;
  unint64_t v78 = v35[2];
  v115 = v35;
  if (v49 < v78)
  {
    uint64_t v79 = v77;
    v80 = &v101[4 * v49];
    uint64_t v81 = *v80;
    uint64_t v82 = v80[1];
    uint64_t v83 = v80[2];
    uint64_t v84 = v80[3];
    swift_bridgeObjectRetain();
    uint64_t v85 = MEMORY[0x1E01AE180](v81, v82, v83, v84);
    unint64_t v87 = v86;
    swift_bridgeObjectRelease();
    uint64_t v116 = sub_1DCED7FA0(v85, v87, &v119);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v71, v72, "Error: unexpected ontology node id %s", v76, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v79, -1, -1);
    MEMORY[0x1E01B07E0](v76, -1, -1);

    (*(void (**)(uint64_t, unint64_t *))(v110 + 8))(v102, v7);
LABEL_55:
    uint64_t v99 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v107, 1, 1, v99);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_61:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCE49760(void *a1)
{
  uint64_t v3 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v37 = sub_1DCE49BCC(a1, v1);
  unint64_t v17 = v16;
  if (v16)
  {
    sub_1DCDB40EC((uint64_t)v15);
    sub_1DCDB4300((uint64_t)v12);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v18 = v7 + 8;
    uint64_t v19 = v20;
    v20(v15, v6);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_1DD048048();
    os_log_type_t v22 = sub_1DD048848();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v35 = v19;
      uint64_t v36 = v18;
      unint64_t v24 = (uint8_t *)v23;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v39 = v25;
      *(_DWORD *)unint64_t v24 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v26 = v37;
      uint64_t v38 = sub_1DCED7FA0(v37, v17, &v39);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v21, v22, "Successfully decoded Signs and Symbols label %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v25, -1, -1);
      MEMORY[0x1E01B07E0](v24, -1, -1);

      v35(v12, v6);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v19(v12, v6);
      return v37;
    }
  }
  else
  {
    uint64_t v35 = 0;
    uint64_t v36 = v7;
    uint64_t v37 = v6;
    sub_1DCDB40EC((uint64_t)v9);
    sub_1DCDD056C((uint64_t)a1, (uint64_t)v5);
    id v27 = sub_1DD048048();
    uint64_t v28 = sub_1DD048848();
    if (os_log_type_enabled(v27, (os_log_type_t)v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v39 = v30;
      *(_DWORD *)uint64_t v29 = 136315138;
      sub_1DCE4A680((unint64_t *)&qword_1EBE86518);
      uint64_t v31 = sub_1DD048FB8();
      uint64_t v38 = sub_1DCED7FA0(v31, v32, &v39);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCDD05D0((uint64_t)v5);
      _os_log_impl(&dword_1DCCF9000, v27, (os_log_type_t)v28, "Failed to decode node %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v30, -1, -1);
      MEMORY[0x1E01B07E0](v29, -1, -1);
    }
    else
    {
      sub_1DCDD05D0((uint64_t)v5);
    }

    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v37);
    return 0;
  }
  return v26;
}

uint64_t sub_1DCE49BCC(void *a1, uint64_t a2)
{
  uint64_t v40 = a2;
  uint64_t v3 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DD048068();
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(*a1 + 16);
  if (v11)
  {
    uint64_t v12 = v11 - 1;
    if (v11 == 1)
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
LABEL_4:
      uint64_t v41 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84FF0);
      sub_1DCD52850((unint64_t *)&qword_1EBE84FF8, &qword_1EBE84FF0);
      uint64_t v14 = sub_1DD048398();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v35 = v3;
      uint64_t v36 = v5;
      uint64_t v37 = v10;
      uint64_t v38 = v8;
      uint64_t v39 = isUniquelyReferenced_nonNull_native;
      uint64_t v15 = 0;
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
        *(&v35 - 2) = (uint64_t)a1;
        *(&v35 - 1) = v15;
        uint64_t v16 = swift_bridgeObjectRetain();
        uint64_t v17 = sub_1DCE4A290(v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1DCE4A464);
        uint64_t v19 = v18;
        uint64_t result = swift_bridgeObjectRelease();
        if (!v19) {
          break;
        }
        uint64_t v21 = v15 + 1;
        if ((unint64_t)(v15 + 1) >= *(void *)(*a1 + 16))
        {
          __break(1u);
          return result;
        }
        uint64_t v41 = *(void **)(*a1 + 8 * v15 + 40);
        sub_1DCE4A4A4();
        sub_1DD0485F8();
        sub_1DD0484A8();
        swift_bridgeObjectRelease();
        uint64_t v41 = (void *)v17;
        uint64_t v42 = v19;
        swift_bridgeObjectRetain();
        sub_1DD048548();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v22 = (uint64_t)v41;
        uint64_t v23 = v42;
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DCE9E328(0, v13[2] + 1, 1, v13);
          uint64_t v13 = (void *)isUniquelyReferenced_nonNull_native;
        }
        unint64_t v25 = v13[2];
        unint64_t v24 = v13[3];
        if (v25 >= v24 >> 1)
        {
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DCE9E328((void *)(v24 > 1), v25 + 1, 1, v13);
          uint64_t v13 = (void *)isUniquelyReferenced_nonNull_native;
        }
        v13[2] = v25 + 1;
        uint64_t v26 = &v13[2 * v25];
        v26[4] = v22;
        v26[5] = v23;
        uint64_t v15 = v21 + 1;
        if (v21 + 1 >= v12) {
          goto LABEL_4;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = (uint64_t)v37;
      sub_1DCDB40EC((uint64_t)v37);
      uint64_t v28 = (uint64_t)v36;
      sub_1DCDD056C((uint64_t)a1, (uint64_t)v36);
      uint64_t v29 = sub_1DD048048();
      os_log_type_t v30 = sub_1DD048848();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        uint64_t v41 = (void *)v32;
        *(_DWORD *)uint64_t v31 = 136315138;
        sub_1DCE4A680((unint64_t *)&qword_1EBE86518);
        uint64_t v33 = sub_1DD048FB8();
        uint64_t v43 = sub_1DCED7FA0(v33, v34, (uint64_t *)&v41);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        sub_1DCDD05D0(v28);
        _os_log_impl(&dword_1DCCF9000, v29, v30, "Error: unable to decode prefix string for %s", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v32, -1, -1);
        MEMORY[0x1E01B07E0](v31, -1, -1);
      }
      else
      {
        sub_1DCDD05D0(v28);
      }

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v27, v39);
      return 0;
    }
  }
  else
  {
    uint64_t v14 = a1[1];
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_1DCE4A078(unint64_t a1)
{
  sub_1DCD21A84();
  uint64_t result = sub_1DD048AA8();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(result + 16) > a1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1DCE4A710();
    uint64_t v3 = sub_1DD048A68();
    swift_bridgeObjectRelease();
    return v3;
  }
  __break(1u);
  return result;
}

id sub_1DCE4A1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v5 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1DD046378();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1DCE4A290(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v19 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t j = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (j << 6); ; unint64_t i = __clz(__rbit64(v13)) + (j << 6))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = *(unsigned int *)(*(void *)(a1 + 56) + 4 * i);
    swift_bridgeObjectRetain();
    if (a2(v16, v17, v18))
    {
      swift_release();
      return v16;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = j + 1;
    if (__OFADD__(j, 1)) {
      break;
    }
    if (v12 >= v19) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++j;
    if (v13) {
      goto LABEL_19;
    }
    int64_t j = v12 + 1;
    if (v12 + 1 >= v19) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v4 + 8 * j);
    if (v13) {
      goto LABEL_19;
    }
    int64_t j = v12 + 2;
    if (v12 + 2 >= v19) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v4 + 8 * j);
    if (v13) {
      goto LABEL_19;
    }
    int64_t j = v12 + 3;
    if (v12 + 3 >= v19) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v4 + 8 * j);
    if (v13) {
      goto LABEL_19;
    }
    int64_t v14 = v12 + 4;
    if (v14 >= v19)
    {
LABEL_24:
      swift_release();
      return 0;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v14);
    for (int64_t j = v14; !v13; ++v14)
    {
      int64_t j = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_27;
      }
      if (j >= v19) {
        goto LABEL_24;
      }
      unint64_t v13 = *(void *)(v4 + 8 * j);
    }
LABEL_19:
    unint64_t v7 = (v13 - 1) & v13;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

BOOL sub_1DCE4A464(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t v4 = *(void *)(v3 + 24);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = **(void **)(v3 + 16);
  if (*(void *)(v5 + 16) <= v4)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(v5 + 8 * v4 + 32);
  return a3 >= 0 && v6 == a3;
}

unint64_t sub_1DCE4A4A4()
{
  unint64_t result = qword_1EBE84890;
  if (!qword_1EBE84890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84890);
  }
  return result;
}

uint64_t sub_1DCE4A4F8(unint64_t a1)
{
  return sub_1DCE4A078(a1);
}

uint64_t sub_1DCE4A500(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1DCFC4948(0, 0, 0);
  uint64_t v3 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v6 = *v5;
      uint64_t v9 = *(v5 - 3);
      uint64_t v8 = *(v5 - 2);
      swift_bridgeObjectRetain();
      uint64_t v10 = a2(v4, v9, v8, v7, v6);
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      unint64_t v14 = *(void *)(v18 + 16);
      unint64_t v13 = *(void *)(v18 + 24);
      if (v14 >= v13 >> 1) {
        sub_1DCFC4948(v13 > 1, v14 + 1, 1);
      }
      ++v4;
      *(void *)(v18 + 16) = v14 + 1;
      uint64_t v15 = v18 + 16 * v14;
      *(void *)(v15 + 32) = v10;
      *(void *)(v15 + 40) = v12;
      v5 += 4;
    }
    while (v3 != v4);
  }
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1DCE4A630(void *a1)
{
  uint64_t v3 = **(void **)(v1 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1DCE4A680(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.OntologyNode(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCE4A6C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v3;
  return result;
}

unint64_t sub_1DCE4A710()
{
  unint64_t result = qword_1EBE82C00;
  if (!qword_1EBE82C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82C00);
  }
  return result;
}

ValueMetadata *type metadata accessor for CVPixelBufferUtilsError()
{
  return &type metadata for CVPixelBufferUtilsError;
}

unint64_t sub_1DCE4A778()
{
  unint64_t result = qword_1EAB03940;
  if (!qword_1EAB03940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03940);
  }
  return result;
}

unint64_t sub_1DCE4A7CC()
{
  return 0xD000000000000018;
}

uint64_t sub_1DCE4A898()
{
  return 0x2064656C696166;
}

unint64_t sub_1DCE4A910()
{
  return sub_1DCE4A7CC();
}

uint64_t sub_1DCE4A918(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DD048068();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v67 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD0473D8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v65 = (char *)&v51 - v12;
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v57 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v63 = v8 + 32;
  uint64_t v64 = v8 + 16;
  unint64_t v60 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  int64_t v58 = (unint64_t)(v14 + 63) >> 6;
  unint64_t v59 = (void (**)(char *, uint64_t))(v5 + 8);
  unint64_t v62 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  uint64_t v54 = "coarseCategoryDistribution";
  unint64_t v52 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v53 = 0x80000001DD067880;
  *(void *)&long long v19 = 138412290;
  long long v55 = v19;
  uint64_t v56 = a1;
  uint64_t v61 = v4;
  uint64_t v66 = v7;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v20 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v18 << 6))
  {
    unint64_t v25 = v65;
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v65, *(void *)(a1 + 48) + *(void *)(v8 + 72) * i, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v25, v7);
    sub_1DCE4B5B8(&v68);
    if (v2)
    {
      if (qword_1EBE87190 != -1) {
        swift_once();
      }
      if (byte_1EBE87188 != 1) {
        goto LABEL_34;
      }
      id v26 = objc_msgSend(self, sel_mainBundle);
      id v27 = objc_msgSend(v26, sel_bundleIdentifier);

      if (v27)
      {
        uint64_t v28 = sub_1DD048408();
        uint64_t v30 = v29;

        if (v28 == 0xD00000000000002BLL && v30 == v53)
        {
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        char v31 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v31)
        {
LABEL_27:
          uint64_t v32 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            uint64_t v32 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_31;
        }
      }
      uint64_t v32 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v32 = &qword_1EBE871E8;
      }
LABEL_31:
      uint64_t v33 = *(void **)(*v32 + 32);
      swift_retain();
      unint64_t v34 = (void *)sub_1DD0483D8();
      LODWORD(v33) = objc_msgSend(v33, sel_BOOLForKey_, v34);
      swift_release();

      uint64_t v4 = v61;
      if (v33)
      {
        uint64_t v35 = qword_1EAB02B70;
        if (qword_1EAB01C80 != -1)
        {
          swift_once();
          uint64_t v35 = qword_1EAB02B70;
        }
        goto LABEL_36;
      }
LABEL_34:
      uint64_t v35 = qword_1EBE871A8;
      if (qword_1EBE871C8 != -1)
      {
        swift_once();
        uint64_t v35 = qword_1EBE871A8;
      }
LABEL_36:
      uint64_t v36 = __swift_project_value_buffer(v4, (uint64_t)v35);
      (*v60)(v67, v36, v4);
      id v37 = v2;
      id v38 = v2;
      uint64_t v39 = sub_1DD048048();
      os_log_type_t v40 = sub_1DD048858();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v42 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = v55;
        id v43 = v2;
        uint64_t v44 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v41 + 4) = v44;
        void *v42 = v44;

        _os_log_impl(&dword_1DCCF9000, v39, v40, "fetchEnabledDomains(): Apple_Parsec_Visualsearch_V2_VisualSearchDomain.mapToDomain() %@", (uint8_t *)v41, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
        swift_arrayDestroy();
        uint64_t v45 = v42;
        a1 = v56;
        MEMORY[0x1E01B07E0](v45, -1, -1);
        uint64_t v46 = v41;
        uint64_t v4 = v61;
        MEMORY[0x1E01B07E0](v46, -1, -1);
      }
      else
      {
      }
      (*v59)(v67, v4);
      uint64_t v7 = v66;
      uint64_t result = (*v62)(v10, v66);
      uint64_t v2 = 0;
      if (v16) {
        goto LABEL_4;
      }
      goto LABEL_5;
    }
    char v47 = v68;
    (*v62)(v10, v7);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1DCE9D7D4(0, *((void *)v52 + 2) + 1, 1, v52);
      unint64_t v52 = (char *)result;
    }
    unint64_t v49 = *((void *)v52 + 2);
    unint64_t v48 = *((void *)v52 + 3);
    if (v49 >= v48 >> 1)
    {
      uint64_t result = (uint64_t)sub_1DCE9D7D4((char *)(v48 > 1), v49 + 1, 1, v52);
      unint64_t v52 = (char *)result;
    }
    uint64_t v50 = v52;
    *((void *)v52 + 2) = v49 + 1;
    v50[v49 + 32] = v47;
    a1 = v56;
    uint64_t v7 = v66;
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v18 >= v58) {
      goto LABEL_51;
    }
    unint64_t v23 = *(void *)(v57 + 8 * v18);
    if (!v23) {
      break;
    }
LABEL_17:
    unint64_t v16 = (v23 - 1) & v23;
  }
  int64_t v24 = v18 + 1;
  if (v18 + 1 >= v58) {
    goto LABEL_51;
  }
  unint64_t v23 = *(void *)(v57 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v18 + 2;
  if (v18 + 2 >= v58) {
    goto LABEL_51;
  }
  unint64_t v23 = *(void *)(v57 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v18 + 3;
  if (v18 + 3 >= v58) {
    goto LABEL_51;
  }
  unint64_t v23 = *(void *)(v57 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v18 + 4;
  if (v18 + 4 >= v58)
  {
LABEL_51:
    swift_release();
    return (uint64_t)v52;
  }
  unint64_t v23 = *(void *)(v57 + 8 * v24);
  if (v23)
  {
LABEL_16:
    int64_t v18 = v24;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v18 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v18 >= v58) {
      goto LABEL_51;
    }
    unint64_t v23 = *(void *)(v57 + 8 * v18);
    ++v24;
    if (v23) {
      goto LABEL_17;
    }
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_1DCE4B0FC()
{
  uint64_t v0 = sub_1DD048068();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v36 - v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v36 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = sub_1DD047998();
  sub_1DCDB40EC((uint64_t)v12);
  sub_1DCDB4300((uint64_t)v9);
  uint64_t v14 = v12;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15(v14, v0);
  swift_bridgeObjectRetain_n();
  unint64_t v16 = sub_1DD048048();
  os_log_type_t v17 = sub_1DD048848();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v39 = v3;
  uint64_t v40 = v1 + 8;
  id v38 = v15;
  if (v18)
  {
    long long v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v43[0] = v20;
    uint64_t v37 = v0;
    *(_DWORD *)long long v19 = 136315138;
    uint64_t v36 = v19 + 4;
    sub_1DD0473D8();
    sub_1DCE4BAB0();
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1DD0487E8();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_1DCED7FA0(v21, v23, v43);
    uint64_t v0 = v37;
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v16, v17, "fetchEnabledDomains(): supportedDomains: %s", v19, 0xCu);
    swift_arrayDestroy();
    uint64_t v24 = v20;
    uint64_t v3 = v39;
    MEMORY[0x1E01B07E0](v24, -1, -1);
    unint64_t v25 = v19;
    uint64_t v15 = v38;
    MEMORY[0x1E01B07E0](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v15(v9, v0);
  uint64_t v26 = sub_1DCE4A918(v13);
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_1DCD54820(v26);
  swift_bridgeObjectRelease();
  uint64_t v44 = v27;
  sub_1DCDB40EC((uint64_t)v6);
  sub_1DCDB4300((uint64_t)v3);
  v15(v6, v0);
  uint64_t v28 = sub_1DD048048();
  os_log_type_t v29 = sub_1DD048848();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v43[0] = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    swift_beginAccess();
    sub_1DCD56564();
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1DD0487E8();
    unint64_t v34 = v33;
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_1DCED7FA0(v32, v34, v43);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v28, v29, "fetchEnabledDomains(): enabledDomains: %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v31, -1, -1);
    MEMORY[0x1E01B07E0](v30, -1, -1);

    v38(v39, v0);
  }
  else
  {

    v15(v3, v0);
  }
  swift_beginAccess();
  return v44;
}

uint64_t sub_1DCE4B5B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DD0473D8();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (result == *MEMORY[0x1E4F895F8] || result == *MEMORY[0x1E4F89610])
  {
    sub_1DCE4BA5C();
    swift_allocError();
    return swift_willThrow();
  }
  else if (result == *MEMORY[0x1E4F89628])
  {
    *a1 = 0;
  }
  else if (result == *MEMORY[0x1E4F89630])
  {
    *a1 = 5;
  }
  else if (result == *MEMORY[0x1E4F89638])
  {
    *a1 = 7;
  }
  else if (result == *MEMORY[0x1E4F89640])
  {
    *a1 = 8;
  }
  else if (result == *MEMORY[0x1E4F89668])
  {
    *a1 = 1;
  }
  else if (result == *MEMORY[0x1E4F89660])
  {
    *a1 = 4;
  }
  else if (result == *MEMORY[0x1E4F89698])
  {
    *a1 = 2;
  }
  else if (result == *MEMORY[0x1E4F896A0])
  {
    *a1 = 25;
  }
  else if (result == *MEMORY[0x1E4F89650])
  {
    *a1 = 6;
  }
  else if (result == *MEMORY[0x1E4F89670])
  {
    *a1 = 9;
  }
  else if (result == *MEMORY[0x1E4F89608])
  {
    *a1 = 3;
  }
  else if (result == *MEMORY[0x1E4F896B0])
  {
    *a1 = 23;
  }
  else if (result == *MEMORY[0x1E4F89690])
  {
    *a1 = 24;
  }
  else if (result == *MEMORY[0x1E4F89658])
  {
    *a1 = 10;
  }
  else if (result == *MEMORY[0x1E4F89680])
  {
    *a1 = 11;
  }
  else if (result == *MEMORY[0x1E4F89678])
  {
    *a1 = 14;
  }
  else if (result == *MEMORY[0x1E4F895F0])
  {
    *a1 = 15;
  }
  else if (result == *MEMORY[0x1E4F89648])
  {
    *a1 = 16;
  }
  else if (result == *MEMORY[0x1E4F895E8])
  {
    *a1 = 17;
  }
  else if (result == *MEMORY[0x1E4F895E0])
  {
    *a1 = 18;
  }
  else if (result == *MEMORY[0x1E4F89620])
  {
    *a1 = 19;
  }
  else if (result == *MEMORY[0x1E4F895D8])
  {
    *a1 = 20;
  }
  else if (result == *MEMORY[0x1E4F89600])
  {
    *a1 = 21;
  }
  else if (result == *MEMORY[0x1E4F89688])
  {
    *a1 = 13;
  }
  else if (result == *MEMORY[0x1E4F896A8])
  {
    *a1 = 12;
  }
  else
  {
    sub_1DCE4BA5C();
    swift_allocError();
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

unint64_t sub_1DCE4BA5C()
{
  unint64_t result = qword_1EBE82C68;
  if (!qword_1EBE82C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82C68);
  }
  return result;
}

unint64_t sub_1DCE4BAB0()
{
  unint64_t result = qword_1EBE86B88;
  if (!qword_1EBE86B88)
  {
    sub_1DD0473D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86B88);
  }
  return result;
}

unsigned char *_s12MappingErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCE4BBA4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s12MappingErrorOMa()
{
  return &_s12MappingErrorON;
}

unint64_t sub_1DCE4BBE0()
{
  unint64_t result = qword_1EAB03948;
  if (!qword_1EAB03948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03948);
  }
  return result;
}

uint64_t sub_1DCE4BC34(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_1DD047BF8();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1DCE4BD20(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1DCE4BD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCE4BE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCE4BED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCE4BF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCE4BFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE4C000);
}

uint64_t sub_1DCE4C000(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCE4C0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE4C0C4);
}

void *sub_1DCE4C0C4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig()
{
  uint64_t result = qword_1EBE86FA0;
  if (!qword_1EBE86FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCE4C1B8()
{
  uint64_t result = sub_1DD047BF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCE4C260()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EAB1D138);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EAB1D138);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  unint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF60;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "scenenet_label_allowlist";
  *(void *)(v6 + 8) = 24;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "max_num_labels";
  *((void *)v10 + 1) = 14;
  v10[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCE4C418()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_1DD047D48();
      }
      else if (result == 1)
      {
        sub_1DD047D78();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCE4C4BC()
{
  if (!*(void *)(*(void *)v0 + 16) || (uint64_t result = sub_1DD047EE8(), !v1))
  {
    if (!v0[2] || (uint64_t result = sub_1DD047F48(), !v1))
    {
      type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCE4C57C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(_DWORD *)(a1 + 8) = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCE4C5AC()
{
  return 0xD000000000000027;
}

uint64_t sub_1DCE4C5C8()
{
  return sub_1DCE4C418();
}

uint64_t sub_1DCE4C5E0()
{
  return sub_1DCE4C4BC();
}

uint64_t sub_1DCE4C5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCE4CAF0(&qword_1EAB03968, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCE4C674@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EAB01F08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1DD048008();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EAB1D138);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_1DCE4C71C(uint64_t a1)
{
  uint64_t v2 = sub_1DCE4CAF0((unint64_t *)&qword_1EAB026E8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCE4C788()
{
  sub_1DCE4CAF0((unint64_t *)&qword_1EAB026E8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
  return sub_1DD047E68();
}

uint64_t sub_1DCE4C808()
{
  return sub_1DCE4CAF0(&qword_1EAB03950, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
}

uint64_t sub_1DCE4C850()
{
  return sub_1DCE4CAF0((unint64_t *)&qword_1EAB026E8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
}

uint64_t sub_1DCE4C898()
{
  return sub_1DCE4CAF0(&qword_1EAB03958, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
}

uint64_t sub_1DCE4C8E0()
{
  return sub_1DCE4CAF0(&qword_1EAB03960, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
}

uint64_t sub_1DCE4C928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if (sub_1DCFB76E8(*(void *)a1, *(void *)a2) && *(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8))
  {
    uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12(v10, a1 + *(int *)(v11 + 24), v4);
    v12(v7, a2 + *(int *)(v11 + 24), v4);
    sub_1DCE4CAF0(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v13 = sub_1DD0483B8();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1DCE4CAF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCE4CB3C(uint64_t a1, double a2, double a3)
{
  if (sub_1DD048508() >= a1) {
    return 0;
  }
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  char v8 = 1;
  double v9 = -90.0;
  double v10 = 90.0;
  double v11 = -180.0;
  double v12 = 180.0;
  while (1)
  {
    v7 *= 2;
    if (v8)
    {
      if ((v12 + v11) * 0.5 >= a3)
      {
        double v12 = (v12 + v11) * 0.5;
      }
      else
      {
        v7 |= 1uLL;
        double v11 = (v12 + v11) * 0.5;
      }
    }
    else if ((v10 + v9) * 0.5 >= a2)
    {
      double v10 = (v10 + v9) * 0.5;
    }
    else
    {
      v7 |= 1uLL;
      double v9 = (v10 + v9) * 0.5;
    }
    if (__OFADD__(v6++, 1)) {
      break;
    }
    if (v6 == 5)
    {
      uint64_t v15 = sub_1DD048508();
      if (v15)
      {
        uint64_t v16 = v15;
        if (v15 < 1)
        {
          os_log_type_t v17 = (void *)MEMORY[0x1E4FBC860];
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026C8);
          os_log_type_t v17 = (void *)swift_allocObject();
          int64_t v18 = _swift_stdlib_malloc_size(v17);
          uint64_t v19 = v18 - 32;
          if (v18 < 32) {
            uint64_t v19 = v18 - 17;
          }
          v17[2] = v16;
          v17[3] = 2 * (v19 >> 4);
        }
        uint64_t v20 = v16 & ~(v16 >> 63);
        uint64_t v21 = 4;
        while (v20)
        {
          uint64_t v22 = sub_1DD048568();
          if (!v23) {
            goto LABEL_33;
          }
          uint64_t v24 = &v17[v21];
          uint64_t *v24 = v22;
          v24[1] = v23;
          --v20;
          v21 += 2;
          if (!--v16)
          {
            swift_bridgeObjectRelease();
            goto LABEL_25;
          }
        }
        __break(1u);
        break;
      }
      os_log_type_t v17 = (void *)MEMORY[0x1E4FBC860];
LABEL_25:
      if ((v7 & 0x8000000000000000) != 0) {
        goto LABEL_31;
      }
      if (v7 >= v17[2]) {
        goto LABEL_32;
      }
      unint64_t v25 = &v17[2 * v7];
      uint64_t v26 = v25[4];
      uint64_t v27 = v25[5];
      swift_bridgeObjectRetain();
      swift_release();
      MEMORY[0x1E01AE1F0](v26, v27);
      swift_bridgeObjectRelease();
      uint64_t v6 = 0;
      unint64_t v7 = 0;
    }
    v8 ^= 1u;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1DD048508();
    swift_bridgeObjectRelease();
    if (v13 >= a1) {
      return 0;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for Geohash()
{
  return &type metadata for Geohash;
}

VisualIntelligence::R2Vector __swiftcall R2Vector.init(x:y:)(Swift::Double x, Swift::Double y)
{
  *uint64_t v2 = x;
  v2[1] = y;
  result.y = y;
  result.x = x;
  return result;
}

double R2Vector.x.getter()
{
  return *(double *)v0;
}

double R2Vector.y.getter()
{
  return *(double *)(v0 + 8);
}

Swift::Double __swiftcall R2Vector.get(index:)(Swift::Int index)
{
  uint64_t v2 = v1 + 1;
  if (!index) {
    uint64_t v2 = v1;
  }
  return *v2;
}

double R2Vector.norm2.getter()
{
  return *v0 * *v0 + v0[1] * v0[1];
}

Swift::Double __swiftcall R2Vector.dotProd(_:)(VisualIntelligence::R2Vector a1)
{
  return vaddvq_f64(vmulq_f64(*v1, *v2));
}

Swift::Double __swiftcall R2Vector.crossProd(_:)(VisualIntelligence::R2Vector a1)
{
  return v1[1] * *v2 - *v1 * v2[1];
}

BOOL sub_1DCE4CE6C(double *a1, double *a2)
{
  if (*a1 < *a2) {
    return 1;
  }
  if (*a2 >= *a1) {
    return a1[1] < a2[1];
  }
  return 0;
}

BOOL sub_1DCE4CEE4(double *a1, double *a2)
{
  if (*a2 < *a1) {
    return 0;
  }
  if (*a1 >= *a2) {
    return a2[1] >= a1[1];
  }
  return 1;
}

BOOL sub_1DCE4CF20(double *a1, double *a2)
{
  if (*a1 < *a2) {
    return 0;
  }
  if (*a2 >= *a1) {
    return a1[1] >= a2[1];
  }
  return 1;
}

BOOL sub_1DCE4CF5C(double *a1, double *a2)
{
  if (*a2 < *a1) {
    return 1;
  }
  if (*a1 >= *a2) {
    return a2[1] < a1[1];
  }
  return 0;
}

BOOL sub_1DCE4CF98(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

float64x2_t + infix(_:_:)@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t result = vaddq_f64(*a1, *a2);
  *a3 = result;
  return result;
}

{
  float64x2_t result;

  float64x2_t result = vaddq_f64(*a1, *a2);
  *a3 = result;
  return result;
}

float64x2_t - infix(_:_:)@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t result = vsubq_f64(*a1, *a2);
  *a3 = result;
  return result;
}

{
  float64x2_t result;

  float64x2_t result = vsubq_f64(*a1, *a2);
  *a3 = result;
  return result;
}

float64x2_t * infix(_:_:)@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X8>, double a3@<D0>)
{
  float64x2_t result = vmulq_n_f64(*a1, a3);
  *a2 = result;
  return result;
}

{
  float64_t v3;
  float64x2_t result;

  uint64_t v3 = a1[1].f64[0] * a3;
  float64x2_t result = vmulq_n_f64(*a1, a3);
  *a2 = result;
  a2[1].f64[0] = v3;
  return result;
}

{
  float64x2_t result;

  float64x2_t result = vmulq_n_f64(*a1, a3);
  *a2 = result;
  return result;
}

double ⋅ infix(_:_:)(float64x2_t *a1, float64x2_t *a2)
{
  return vaddvq_f64(vmulq_f64(*a1, *a2));
}

double × infix(_:_:)(double *a1, double *a2)
{
  return *a1 * a2[1] - a1[1] * *a2;
}

unint64_t sub_1DCE4D038()
{
  unint64_t result = qword_1EAB03970;
  if (!qword_1EAB03970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03970);
  }
  return result;
}

ValueMetadata *type metadata accessor for R2Vector()
{
  return &type metadata for R2Vector;
}

uint64_t sub_1DCE4D09C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v9 - 8);
  double v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(ObjectType, a3);
  sub_1DCECD634((uint64_t)&v23);
  sub_1DCE50A3C((uint64_t)v11, type metadata accessor for MLModelInfo);
  uint64_t v13 = v25;
  if (v25)
  {
    v22[1] = v32;
    v22[2] = v31;
    v22[4] = v30;
    v22[3] = v29;
    v22[6] = v28;
    v22[5] = v27;
    uint64_t v14 = v24;
    uint64_t v15 = v23;
    uint64_t v37 = v23;
    uint64_t v38 = v24;
    uint64_t v39 = v25;
    uint64_t v40 = v26;
    uint64_t v41 = v27;
    uint64_t v42 = v28;
    int v43 = v29;
    uint64_t v44 = v30;
    char v45 = v31 & 1;
    uint64_t v46 = v32;
    uint64_t v47 = v33;
    char v48 = v34 & 1;
    uint64_t v49 = v35;
    uint64_t v50 = v36;
    id v16 = objc_msgSend(a1, sel_modelDescription);
    char v17 = sub_1DCF333A0(v16);

    sub_1DCE50950(v15, v14, v13);
  }
  else
  {
    sub_1DCDB40EC((uint64_t)v8);
    int64_t v18 = sub_1DD048048();
    os_log_type_t v19 = sub_1DD048858();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1DCCF9000, v18, v19, "metadata not present, unable to validate the detection model", v20, 2u);
      MEMORY[0x1E01B07E0](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v17 = 0;
  }
  return v17 & 1;
}

NSObject *sub_1DCE4D3C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, NSObject **a4@<X8>)
{
  uint64_t v7 = a1;
  unint64_t result = sub_1DCE500B8(&v7, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

void sub_1DCE4D3F4(unint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v6 - 8);
  char v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
    a1 = sub_1DCD283D8();
    sub_1DCE50A3C((uint64_t)v8, type metadata accessor for MLModelInfo);
  }
  *a3 = a1;
}

uint64_t sub_1DCE4D4D0()
{
  sub_1DCE50950(v0[3], v0[4], v0[5]);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObjectDetector()
{
  return self;
}

void sub_1DCE4D57C(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(v3 + 40);
  if (!v6) {
    goto LABEL_5;
  }
  int v7 = *(_DWORD *)(v3 + 112);
  uint64_t v9 = *(void *)(v3 + 96);
  uint64_t v8 = *(void *)(v3 + 104);
  char v10 = *(unsigned char *)(v3 + 88);
  uint64_t v12 = *(void *)(v3 + 72);
  uint64_t v11 = *(void *)(v3 + 80);
  uint64_t v13 = *(void *)(v3 + 64);
  long long v56 = *(_OWORD *)(v3 + 24);
  uint64_t v57 = v6;
  long long v58 = *(_OWORD *)(v3 + 48);
  uint64_t v59 = v13;
  int v60 = v12;
  uint64_t v61 = v11;
  char v62 = v10 & 1;
  uint64_t v63 = v9;
  uint64_t v64 = v8;
  char v65 = v7 & 1;
  long long v66 = *(_OWORD *)(v3 + 120);
  uint64_t v14 = *(void *)(v3 + 176);
  if (!v14)
  {
LABEL_5:
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v19 = 0xD00000000000001CLL;
    *(void *)(v19 + 8) = 0x80000001DD06C5D0;
    *(unsigned char *)(v19 + 16) = 5;
    swift_willThrow();
    return;
  }
  uint64_t v17 = *(void *)(v3 + 168);
  swift_bridgeObjectRetain();
  int64_t v18 = sub_1DCFE3090();
  if (v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v47 = v17;
  if (*(void *)(v3 + 136))
  {
    uint64_t v71 = v18;
    sub_1DCFE2DE4((uint64_t)&aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85668);
    if (swift_dynamicCast())
    {
      uint64_t v46 = v53[0];
      uint64_t v20 = *((void *)a1 + 3);
      uint64_t v21 = *((void *)a1 + 4);
      __swift_project_boxed_opaque_existential_1(a1, v20);
      sub_1DCF3AFAC(v20, v21, v53);
      v69[0] = 0x65447463656A626FLL;
      v69[1] = 0xEF6E6F6974636574;
      v69[2] = "ObjectDetector Model Execution";
      v69[3] = 30;
      char v70 = 2;
      type metadata accessor for DurationMeasurement();
      swift_allocObject();
      swift_retain();
      uint64_t v23 = sub_1DCEA469C((uint64_t)v69, a2);
      swift_release();
      sub_1DCF3B26C(*((void *)a1 + 10));
      id v42 = objc_allocWithZone(MEMORY[0x1E4F45730]);
      uint64_t v51 = sub_1DCE509B4;
      uint64_t v52 = v23;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v50 = sub_1DCFE5678;
      *((void *)&v50 + 1) = &block_descriptor_1;
      uint64_t v24 = _Block_copy(&aBlock);
      uint64_t v25 = v46;
      swift_retain();
      swift_release();
      id v26 = objc_msgSend(v42, sel_initWithModel_completionHandler_, v25, v24);

      _Block_release(v24);
      objc_msgSend(v26, sel_setImageCropAndScaleOption_, v9);
      CGFloat v27 = a1[5];
      CGFloat v28 = a1[6];
      CGFloat v29 = a1[7];
      CGFloat v30 = a1[8];
      id v31 = v26;
      v74.origin.x = 0.0;
      v74.origin.y = 0.0;
      v74.size.width = 1.0;
      v74.size.height = 1.0;
      v72.origin.x = v27;
      v72.origin.y = v28;
      v72.size.width = v29;
      v72.size.height = v30;
      CGRect v73 = CGRectIntersection(v72, v74);
      objc_msgSend(v31, sel_setRegionOfInterest_, v73.origin.x, v73.origin.y, v73.size.width, v73.size.height);

      swift_release();
      uint64_t v32 = v55;
      uint64_t v40 = v54;
      __swift_project_boxed_opaque_existential_1(v53, v54);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A70);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1DD04E910;
      uint64_t v34 = sub_1DCD95648(0, (unint64_t *)&qword_1EBE850A8);
      *(void *)(inited + 32) = v31;
      uint64_t v37 = v34;
      *(void *)(inited + 56) = v34;
      *(void *)(inited + 64) = &off_1F383D738;
      uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 8);
      id v44 = v31;
      v38(inited, v40, v32);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85780);
      swift_arrayDestroy();
      v67[0] = 0x65447463656A626FLL;
      v67[1] = 0xEF6E6F6974636574;
      v67[2] = "ObjectDetector Model Postprocess Results";
      v67[3] = 40;
      char v68 = 2;
      swift_allocObject();
      swift_retain();
      sub_1DCEA469C((uint64_t)v67, a2);
      swift_release();
      v48[3] = v37;
      v48[4] = &off_1F383D738;
      v48[0] = v44;
      id v35 = v44;
      sub_1DCE921E0((uint64_t)a1, v48, &v56, (uint64_t)v71, &aBlock);
      long long v36 = aBlock;
      id v43 = (id)*((void *)&v50 + 1);
      uint64_t v45 = v50;
      uint64_t v39 = v52;
      uint64_t v41 = v51;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      sub_1DCEA3DA4();
      swift_release();
      swift_release();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
      *(void *)a3 = v47;
      *(void *)(a3 + 8) = v14;
      *(_OWORD *)(a3 + 16) = v36;
      *(void *)(a3 + 32) = v45;
      *(void *)(a3 + 40) = v43;
      *(void *)(a3 + 48) = v41;
      *(void *)(a3 + 56) = v39;
      return;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v51 = 0;
    long long aBlock = 0u;
    long long v50 = 0u;
    swift_bridgeObjectRelease();
    sub_1DCD2479C((uint64_t)&aBlock, (uint64_t *)&unk_1EAB03980);
  }
  sub_1DCD3A548();
  swift_allocError();
  *(void *)uint64_t v22 = 0;
  *(void *)(v22 + 8) = 0;
  *(unsigned char *)(v22 + 16) = 0;
  swift_willThrow();
  swift_release();
}

uint64_t sub_1DCE4DC28@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v50 = a2;
  uint64_t v71 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85788);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EspressoModel(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v5 + 40);
  if (!v14) {
    goto LABEL_5;
  }
  int v15 = *(_DWORD *)(v5 + 112);
  char v16 = *(unsigned char *)(v5 + 88);
  uint64_t v18 = *(void *)(v5 + 72);
  uint64_t v17 = *(void *)(v5 + 80);
  uint64_t v19 = *(void *)(v5 + 64);
  long long v59 = *(_OWORD *)(v5 + 24);
  long long v61 = *(_OWORD *)(v5 + 48);
  uint64_t v60 = v14;
  uint64_t v62 = v19;
  int v63 = v18;
  uint64_t v64 = v17;
  char v65 = v16 & 1;
  long long v66 = *(_OWORD *)(v5 + 96);
  char v67 = v15 & 1;
  long long v68 = *(_OWORD *)(v5 + 120);
  uint64_t v20 = *(void *)(v5 + 176);
  if (!v20)
  {
LABEL_5:
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v24 = 0xD00000000000001CLL;
    *(void *)(v24 + 8) = 0x80000001DD06C5D0;
    *(unsigned char *)(v24 + 16) = 5;
    return swift_willThrow();
  }
  char v48 = a3;
  uint64_t v49 = v13;
  uint64_t v21 = *(void *)(v5 + 168);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1DCFE3090();
  if (v4) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v45 = v21;
  uint64_t v47 = v20;
  if (!*(void *)(v5 + 136))
  {
    uint64_t v53 = 0;
    long long v51 = 0u;
    long long v52 = 0u;
    sub_1DCD2479C((uint64_t)&v51, (uint64_t *)&unk_1EAB03980);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1DCD2479C((uint64_t)v9, &qword_1EBE85788);
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v26 = 0;
    *(void *)(v26 + 8) = 0;
    *(unsigned char *)(v26 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  uint64_t v46 = v22;
  sub_1DCFE2DE4((uint64_t)&v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85668);
  int v25 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, v25 ^ 1u, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    goto LABEL_10;
  }
  uint64_t v27 = (uint64_t)v49;
  sub_1DCE509D4((uint64_t)v9, (uint64_t)v49, type metadata accessor for EspressoModel);
  CGFloat v28 = v71;
  uint64_t v29 = v71[3];
  uint64_t v30 = v71[4];
  __swift_project_boxed_opaque_existential_1(v71, v29);
  sub_1DCF3AFAC(v29, v30, v56);
  uint64_t v31 = sub_1DCE919A0((uint64_t)v28, (uint64_t)&v59, v27, v50);
  uint64_t v32 = v58;
  uint64_t v43 = v57;
  v42[1] = __swift_project_boxed_opaque_existential_1(v56, v57);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD04E910;
  uint64_t v34 = type metadata accessor for EspressoRequest(0);
  *(void *)(inited + 32) = v31;
  v42[0] = v34;
  *(void *)(inited + 56) = v34;
  *(void *)(inited + 64) = &off_1F3839ED0;
  id v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 8);
  uint64_t v44 = v31;
  swift_retain();
  v35(inited, v43, v32);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85780);
  swift_arrayDestroy();
  v69[0] = 0x65447463656A626FLL;
  v69[1] = 0xEF6E6F6974636574;
  v69[2] = "ObjectDetector Model Postprocess Results";
  v69[3] = 40;
  char v70 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  uint64_t v36 = v50;
  swift_retain();
  sub_1DCEA469C((uint64_t)v69, v36);
  swift_release();
  v55[3] = v42[0];
  v55[4] = &off_1F3839ED0;
  v55[0] = v44;
  swift_retain();
  sub_1DCE921E0((uint64_t)v71, v55, &v59, (uint64_t)v46, &v51);
  uint64_t v37 = *((void *)&v51 + 1);
  uint64_t v71 = (void *)v51;
  long long v38 = v52;
  uint64_t v50 = v53;
  uint64_t v43 = v54;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  sub_1DCEA3DA4();
  swift_release();
  swift_release();
  swift_release();
  sub_1DCE50A3C(v27, type metadata accessor for EspressoModel);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  uint64_t v39 = v48;
  uint64_t v40 = v47;
  *char v48 = v45;
  v39[1] = v40;
  v39[2] = v71;
  v39[3] = v37;
  *((_OWORD *)v39 + 2) = v38;
  uint64_t v41 = v43;
  v39[6] = v50;
  v39[7] = v41;
  return result;
}

uint64_t sub_1DCE4E2C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(v3 + 40);
  if (!v6) {
    goto LABEL_5;
  }
  int v7 = *(_DWORD *)(v3 + 112);
  uint64_t v9 = *(void *)(v3 + 96);
  uint64_t v8 = *(void *)(v3 + 104);
  char v10 = *(unsigned char *)(v3 + 88);
  uint64_t v12 = *(void *)(v3 + 72);
  uint64_t v11 = *(void *)(v3 + 80);
  uint64_t v13 = *(void *)(v3 + 64);
  long long v46 = *(_OWORD *)(v3 + 24);
  uint64_t v47 = v6;
  long long v48 = *(_OWORD *)(v3 + 48);
  uint64_t v49 = v13;
  int v50 = v12;
  uint64_t v51 = v11;
  char v52 = v10 & 1;
  uint64_t v53 = v9;
  uint64_t v54 = v8;
  char v55 = v7 & 1;
  long long v56 = *(_OWORD *)(v3 + 120);
  uint64_t v14 = *(void *)(v3 + 176);
  if (!v14)
  {
LABEL_5:
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v20 = 0xD00000000000001CLL;
    *(void *)(v20 + 8) = 0x80000001DD06C5D0;
    *(unsigned char *)(v20 + 16) = 5;
    return swift_willThrow();
  }
  uint64_t v17 = *(void *)(v3 + 168);
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1DCFE3090();
  if (v4) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v59 = v17;
  if (*(void *)(v3 + 136))
  {
    uint64_t v21 = (uint64_t)v18;
    sub_1DCFE2DE4((uint64_t)&v38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85668);
    type metadata accessor for E5Model();
    if (swift_dynamicCast())
    {
      uint64_t v22 = *(void *)(a1 + 24);
      uint64_t v35 = *(void *)(a1 + 32);
      __swift_project_boxed_opaque_existential_1((void *)a1, v22);
      sub_1DCF3AFAC(v22, v35, v43);
      sub_1DCF3B26C(*(void *)(a1 + 80));
      uint64_t v34 = type metadata accessor for E5Request();
      swift_allocObject();
      swift_retain();
      uint64_t v24 = swift_retain();
      uint64_t v25 = sub_1DCDD45FC(v24, v9, 0, a2, (uint64_t)faiss::NormalizationTransform::~NormalizationTransform, 0);
      swift_release();
      long long v26 = *(_OWORD *)(a1 + 56);
      *(_OWORD *)(v25 + 56) = *(_OWORD *)(a1 + 40);
      *(_OWORD *)(v25 + 72) = v26;
      uint64_t v31 = v44;
      uint64_t v36 = v45;
      __swift_project_boxed_opaque_existential_1(v43, v44);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A70);
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 32) = v25;
      *(_OWORD *)(inited + 16) = xmmword_1DD04E910;
      *(void *)(inited + 56) = v34;
      *(void *)(inited + 64) = &off_1F383D170;
      uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 8);
      swift_retain();
      v30(inited, v31, v36);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85780);
      swift_arrayDestroy();
      v57[0] = 0x65447463656A626FLL;
      v57[1] = 0xEF6E6F6974636574;
      v57[2] = "ObjectDetector Model Postprocess Results";
      v57[3] = 40;
      char v58 = 2;
      type metadata accessor for DurationMeasurement();
      swift_allocObject();
      swift_retain();
      sub_1DCEA469C((uint64_t)v57, a2);
      swift_release();
      v42[3] = v34;
      v42[4] = &off_1F383D170;
      v42[0] = v25;
      swift_retain();
      sub_1DCE921E0(a1, v42, &v46, v21, &v38);
      uint64_t v28 = v38;
      long long v29 = v39;
      uint64_t v37 = *((void *)&v38 + 1);
      uint64_t v32 = v41;
      uint64_t v33 = v40;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
      sub_1DCEA3DA4();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
      *(void *)a3 = v59;
      *(void *)(a3 + 8) = v14;
      *(void *)(a3 + 16) = v28;
      *(void *)(a3 + 24) = v37;
      *(_OWORD *)(a3 + 32) = v29;
      *(void *)(a3 + 48) = v33;
      *(void *)(a3 + 56) = v32;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
    swift_bridgeObjectRelease();
    sub_1DCD2479C((uint64_t)&v38, (uint64_t *)&unk_1EAB03980);
  }
  sub_1DCD3A548();
  swift_allocError();
  *(void *)uint64_t v23 = 0;
  *(void *)(v23 + 8) = 0;
  *(unsigned char *)(v23 + 16) = 0;
  swift_willThrow();
  return swift_release();
}

void sub_1DCE4E828(double a1@<X0>, unsigned int a2@<W1>, CGFloat *a3@<X2>, double *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  unsigned int v190 = a2;
  double v200 = a1;
  v189 = a4;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  MEMORY[0x1F4188790](v11 - 8);
  v191 = (char *)&v170 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  v195 = (char *)&v170 - v14;
  uint64_t v15 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v170 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
  MEMORY[0x1F4188790](v21 - 8);
  v192 = (char *)&v170 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  v194 = (uint64_t *)((char *)&v170 - v24);
  uint64_t v196 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v198 = *(void *)(v196 - 8);
  MEMORY[0x1F4188790](v196);
  v193 = (char *)&v170 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  v197 = (char *)&v170 - v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DF8);
  MEMORY[0x1F4188790](v28 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v199 = (uint64_t)&v170 - v31;
  uint64_t v32 = *(void *)(v6 + 40);
  if (v32)
  {
    uint64_t v186 = v30;
    uint64_t v188 = v15;
    v187 = v17;
    CGFloat v33 = *a3;
    CGFloat v34 = a3[1];
    CGFloat v35 = a3[2];
    CGFloat v36 = a3[3];
    uint64_t v38 = *(void *)(v6 + 120);
    uint64_t v37 = *(void *)(v6 + 128);
    char v39 = *(_DWORD *)(v6 + 112);
    char v40 = *(unsigned char *)(v6 + 88);
    uint64_t v42 = *(void *)(v6 + 72);
    uint64_t v41 = *(void *)(v6 + 80);
    uint64_t v43 = *(void *)(v6 + 56);
    uint64_t v44 = *(void *)(v6 + 64);
    uint64_t v45 = v6;
    uint64_t v46 = *(void *)(v6 + 48);
    uint64_t v47 = *(void *)(v6 + 32);
    v207[0] = *(void *)(v6 + 24);
    v207[1] = v47;
    v207[2] = v32;
    v207[3] = v46;
    v207[4] = v43;
    v207[5] = v44;
    int v208 = v42;
    uint64_t v209 = v41;
    char v210 = v40 & 1;
    long long v211 = *(_OWORD *)(v6 + 96);
    char v212 = v39 & 1;
    uint64_t v213 = v38;
    uint64_t v214 = v37;
    uint64_t v48 = sub_1DCFE30D0();
    if (v7) {
      return;
    }
    uint64_t v185 = v43;
    uint64_t v184 = v44;
    *(void *)&long long v183 = v38;
    *((void *)&v183 + 1) = v37;
    uint64_t v49 = v188;
    if (v48)
    {
      uint64_t v50 = v47;
      uint64_t v51 = *(void *)(v6 + 176);
      if (v51)
      {
        uint64_t v52 = (uint64_t)v20;
        uint64_t v182 = v48;
        uint64_t v180 = 0;
        uint64_t v179 = *(void *)(v6 + 168);
        uint64_t v53 = v50;
        *(void *)&long long v205 = v50;
        *((void *)&v205 + 1) = v32;
        swift_bridgeObjectRetain_n();
        uint64_t v181 = v51;
        swift_bridgeObjectRetain();
        id v54 = objc_msgSend(*(id *)&v200, sel___swift_objectForKeyedSubscript_, sub_1DD049008());
        swift_unknownObjectRelease();
        if (v54)
        {
          sub_1DD048AC8();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v206 = 0u;
          long long v205 = 0u;
        }
        sub_1DCE4FF54((uint64_t)&v205, (uint64_t)v201);
        if (!v202)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v68 = &qword_1EAB041B0;
          char v69 = v201;
LABEL_23:
          sub_1DCD2479C((uint64_t)v69, v68);
          goto LABEL_24;
        }
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86898);
        if ((swift_dynamicCast() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_24:
          sub_1DCD3A548();
          swift_allocError();
          unint64_t v56 = 0xD000000000000011;
          uint64_t v57 = "Invalid boxOutput";
          goto LABEL_9;
        }
        uint64_t v178 = v215;
        swift_bridgeObjectRelease();
        uint64_t v59 = v182;
        if (!*(void *)(v182 + 16))
        {
          uint64_t v70 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
          uint64_t v67 = v199;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v199, 1, 1, v70);
LABEL_22:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v68 = &qword_1EBE85DF8;
          char v69 = (void *)v67;
          goto LABEL_23;
        }
        swift_bridgeObjectRetain();
        unint64_t v60 = sub_1DCEAD1A4(v53, v32);
        uint64_t v176 = v58;
        if (v61)
        {
          unint64_t v62 = v60;
          uint64_t v63 = *(void *)(v59 + 56);
          uint64_t v64 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
          uint64_t v65 = *(void *)(v64 - 8);
          uint64_t v66 = v63 + *(void *)(v65 + 72) * v62;
          uint64_t v67 = v199;
          sub_1DCE508EC(v66, v199);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v67, 0, 1, v64);
        }
        else
        {
          uint64_t v64 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
          uint64_t v67 = v199;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v199, 1, 1, v64);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
        uint64_t v71 = *(void *)(v64 - 8);
        uint64_t v72 = v71;
        CGRect v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
        uint64_t v74 = v71 + 48;
        if (v73(v67, 1, v64) == 1) {
          goto LABEL_22;
        }
        uint64_t v177 = v74;
        uint64_t v174 = v64;
        id v75 = (unsigned int (*)(void, void, void))v194;
        sub_1DCD2889C(v67 + *(int *)(v64 + 28), (uint64_t)v194, &qword_1EBE85B60);
        uint64_t v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v198 + 48);
        uint64_t v77 = v196;
        v198 += 48;
        v172 = v76;
        int v78 = v76((uint64_t)v75, 1, v196);
        uint64_t v175 = v72;
        if (v78 == 1)
        {
          uint64_t v79 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
          v80 = v197;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v197, 1, 1, v79);
          v80[*(int *)(v77 + 20)] = 0;
          sub_1DD047BE8();
          sub_1DCD2479C((uint64_t)v75, &qword_1EBE85B60);
        }
        else
        {
          v80 = v197;
          sub_1DCE509D4((uint64_t)v75, (uint64_t)v197, type metadata accessor for Argos_Protos_MLModel_FeatureType);
        }
        uint64_t v81 = (uint64_t)v195;
        sub_1DCE50A3C(v199, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
        sub_1DCD2889C((uint64_t)v80, v81, &qword_1EBE85B28);
        uint64_t v82 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
        uint64_t v171 = *(void *)(v82 - 8);
        uint64_t v83 = *(void **)(v171 + 48);
        v195 = (char *)(v171 + 48);
        v194 = v83;
        unsigned int v84 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v83)(v81, 1, v82);
        uint64_t v85 = MEMORY[0x1E4FBC860];
        v173 = v73;
        if (v84 == 1)
        {
          sub_1DCD2479C(v81, &qword_1EBE85B28);
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1DCE509D4(v81, v52, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
            goto LABEL_34;
          }
          sub_1DCE50A3C(v81, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
        }
        *(void *)uint64_t v52 = v85;
        *(void *)(v52 + 8) = 0;
        *(unsigned char *)(v52 + 16) = 1;
        uint64_t v86 = v52 + *(int *)(v49 + 24);
        uint64_t v87 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v86, 1, 1, v87);
        uint64_t v88 = v52 + *(int *)(v49 + 28);
        *(void *)uint64_t v88 = 0;
        *(unsigned char *)(v88 + 8) = -1;
        sub_1DD047BE8();
LABEL_34:
        sub_1DCE50A3C((uint64_t)v197, type metadata accessor for Argos_Protos_MLModel_FeatureType);
        uint64_t v89 = *(void *)v52;
        swift_bridgeObjectRetain();
        sub_1DCE50A3C(v52, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
        uint64_t v90 = *(void *)(v89 + 16);
        uint64_t v199 = v82;
        if (v90)
        {
          uint64_t v91 = v45;
          v201[0] = v85;
          sub_1DD048C58();
          uint64_t v92 = 0;
          do
          {
            uint64_t v93 = v92 + 1;
            objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, *(void *)(v89 + 8 * v92 + 32));
            sub_1DD048C38();
            sub_1DD048C68();
            sub_1DD048C78();
            sub_1DD048C48();
            uint64_t v92 = v93;
          }
          while (v90 != v93);
          uint64_t v85 = v201[0];
          swift_bridgeObjectRelease();
          uint64_t v45 = v91;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        id v94 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
        uint64_t v95 = v180;
        id v96 = (char *)sub_1DCE4FFBC(v85, 65568);
        if (v95)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_41:
          swift_bridgeObjectRelease();
          return;
        }
        uint64_t v170 = v45;
        uint64_t v180 = 0;
        uint64_t v97 = *(void *)(v178 + 16);
        v98 = v96;
        if (v97)
        {
          uint64_t v99 = 0;
          uint64_t v100 = v178 + 32;
          do
          {
            int v101 = *(_DWORD *)(v100 + 4 * v99);
            id v102 = objc_allocWithZone(NSNumber);
            LODWORD(v103) = v101;
            id v104 = objc_msgSend(v102, sel_initWithFloat_, v103, v170);
            objc_msgSend(v98, sel_setObject_atIndexedSubscript_, v104, v99);

            ++v99;
          }
          while (v97 != v99);
        }
        v197 = v98;
        swift_bridgeObjectRelease();
        *(void *)&long long v205 = v185;
        uint64_t v105 = v184;
        *((void *)&v205 + 1) = v184;
        swift_bridgeObjectRetain_n();
        id v106 = objc_msgSend(*(id *)&v200, sel___swift_objectForKeyedSubscript_, sub_1DD049008());
        swift_unknownObjectRelease();
        if (v106)
        {
          sub_1DD048AC8();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v206 = 0u;
          long long v205 = 0u;
        }
        uint64_t v107 = (uint64_t)v187;
        uint64_t v108 = (uint64_t)v193;
        uint64_t v109 = (uint64_t)v192;
        uint64_t v110 = v196;
        uint64_t v111 = v175;
        sub_1DCE4FF54((uint64_t)&v205, (uint64_t)v201);
        if (!v202)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v119 = &qword_1EAB041B0;
          uint64_t v120 = v201;
LABEL_60:
          sub_1DCD2479C((uint64_t)v120, v119);
          goto LABEL_61;
        }
        if ((swift_dynamicCast() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_61:
          sub_1DCD3A548();
          swift_allocError();
          *(void *)uint64_t v124 = 0xD000000000000018;
          *(void *)(v124 + 8) = 0x80000001DD06C5B0;
          *(unsigned char *)(v124 + 16) = 4;
          swift_willThrow();

          return;
        }
        uint64_t v196 = v215;
        swift_bridgeObjectRelease();
        uint64_t v112 = v182;
        if (*(void *)(v182 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v113 = sub_1DCEAD1A4(v185, v105);
          if (v114)
          {
            uint64_t v115 = v186;
            sub_1DCE508EC(*(void *)(v112 + 56) + *(void *)(v111 + 72) * v113, v186);
            uint64_t v116 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56);
            uint64_t v117 = v115;
            uint64_t v118 = 0;
          }
          else
          {
            uint64_t v116 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56);
            uint64_t v115 = v186;
            uint64_t v117 = v186;
            uint64_t v118 = 1;
          }
          uint64_t v122 = v174;
          v116(v117, v118, 1, v174);
          swift_bridgeObjectRelease();
        }
        else
        {
          v121 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56);
          uint64_t v115 = v186;
          uint64_t v122 = v174;
          v121(v186, 1, 1, v174);
        }
        uint64_t v123 = (uint64_t)v191;
        swift_bridgeObjectRelease();
        if (v173(v115, 1, v122) == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v119 = &qword_1EBE85DF8;
          uint64_t v120 = (void *)v115;
          goto LABEL_60;
        }
        sub_1DCD2889C(v115 + *(int *)(v122 + 28), v109, &qword_1EBE85B60);
        int v125 = v172(v109, 1, v110);
        uint64_t v126 = v196;
        uint64_t v127 = v108;
        if (v125 == 1)
        {
          uint64_t v128 = v199;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v171 + 56))(v108, 1, 1, v199);
          *(unsigned char *)(v108 + *(int *)(v110 + 20)) = 0;
          sub_1DD047BE8();
          sub_1DCD2479C(v109, &qword_1EBE85B60);
          uint64_t v129 = MEMORY[0x1E4FBC860];
        }
        else
        {
          sub_1DCE509D4(v109, v108, type metadata accessor for Argos_Protos_MLModel_FeatureType);
          uint64_t v129 = MEMORY[0x1E4FBC860];
          uint64_t v128 = v199;
        }
        sub_1DCE50A3C(v186, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
        sub_1DCD2889C(v108, v123, &qword_1EBE85B28);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v194)(v123, 1, v128) == 1)
        {
          sub_1DCD2479C(v123, &qword_1EBE85B28);
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1DCE509D4(v123, v107, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
            goto LABEL_71;
          }
          sub_1DCE50A3C(v123, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
        }
        *(void *)uint64_t v107 = v129;
        *(void *)(v107 + 8) = 0;
        *(unsigned char *)(v107 + 16) = 1;
        uint64_t v130 = v188;
        uint64_t v131 = v107 + *(int *)(v188 + 24);
        uint64_t v132 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v131, 1, 1, v132);
        uint64_t v133 = v107 + *(int *)(v130 + 28);
        *(void *)uint64_t v133 = 0;
        *(unsigned char *)(v133 + 8) = -1;
        sub_1DD047BE8();
LABEL_71:
        sub_1DCE50A3C(v127, type metadata accessor for Argos_Protos_MLModel_FeatureType);
        uint64_t v134 = *(void *)v107;
        swift_bridgeObjectRetain();
        sub_1DCE50A3C(v107, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
        uint64_t v135 = *(void *)(v134 + 16);
        if (v135)
        {
          v201[0] = v129;
          sub_1DD048C58();
          uint64_t v136 = 0;
          do
          {
            uint64_t v137 = v136 + 1;
            objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, *(void *)(v134 + 8 * v136 + 32));
            sub_1DD048C38();
            sub_1DD048C68();
            sub_1DD048C78();
            sub_1DD048C48();
            uint64_t v136 = v137;
          }
          while (v135 != v137);
          uint64_t v138 = v201[0];
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v138 = MEMORY[0x1E4FBC860];
        }
        id v139 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
        uint64_t v140 = v180;
        v141 = sub_1DCE4FFBC(v138, 65568);
        if (v140)
        {
          swift_bridgeObjectRelease();

          goto LABEL_41;
        }
        uint64_t v180 = 0;
        uint64_t v142 = *(void *)(v126 + 16);
        v143 = v141;
        if (v142)
        {
          uint64_t v144 = 0;
          uint64_t v145 = v196 + 32;
          do
          {
            int v146 = *(_DWORD *)(v145 + 4 * v144);
            id v147 = objc_allocWithZone(NSNumber);
            LODWORD(v148) = v146;
            id v149 = objc_msgSend(v147, sel_initWithFloat_, v148);
            objc_msgSend(v143, sel_setObject_atIndexedSubscript_, v149, v144);

            ++v144;
          }
          while (v142 != v144);
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v183 + 1))
        {
          long long v205 = v183;
          swift_bridgeObjectRetain_n();
          id v150 = objc_msgSend(*(id *)&v200, sel___swift_objectForKeyedSubscript_, sub_1DD049008());
          swift_unknownObjectRelease();
          if (v150)
          {
            sub_1DD048AC8();
            swift_unknownObjectRelease();
          }
          else
          {
            long long v206 = 0u;
            long long v205 = 0u;
          }
          sub_1DCE4FF54((uint64_t)&v205, (uint64_t)v201);
          if (v202)
          {
            if (swift_dynamicCast())
            {
              uint64_t v151 = v215;
              swift_bridgeObjectRelease();
              sub_1DCD95648(0, &qword_1EBE853A0);
              v201[0] = v151;
              sub_1DCE50890();
              uint64_t v152 = v180;
              uint64_t v153 = sub_1DD048818();
              uint64_t v180 = v152;
              if (v152)
              {
                swift_bridgeObjectRelease();

                return;
              }
              v154 = (void *)v153;
LABEL_92:
              uint64_t v155 = v180;
              v156 = sub_1DCFE3090();
              if (v155)
              {
                swift_bridgeObjectRelease();

                return;
              }
              uint64_t v157 = (uint64_t)v156;
              if (v190 >= 5)
              {
                double v200 = a6;
                if (v190 - 5 >= 4)
                {
                  type metadata accessor for CGImagePropertyOrientation(0);
                  LODWORD(v201[0]) = v190;
                  sub_1DD048FF8();
                  __break(1u);
                  return;
                }
              }
              else
              {
                double v200 = a5;
                a5 = a6;
              }
              v216.origin.x = v33;
              v216.origin.y = v34;
              v216.size.width = v35;
              v216.size.height = v36;
              CGFloat MinX = CGRectGetMinX(v216);
              v217.origin.x = v33;
              v217.origin.y = v34;
              v217.size.width = v35;
              v217.size.height = v36;
              CGFloat v159 = 1.0 - CGRectGetMaxY(v217);
              v218.origin.x = v33;
              v218.origin.y = v34;
              v218.size.width = v35;
              v218.size.height = v36;
              CGFloat Width = CGRectGetWidth(v218);
              v219.origin.x = v33;
              v219.origin.y = v34;
              v219.size.width = v35;
              v219.size.height = v36;
              CGFloat Height = CGRectGetHeight(v219);
              v162 = v197;
              sub_1DCE91E34(0, (uint64_t)v207, v157, v197, v143, v154, v201, v200, a5, MinX, v159, Width, Height);
              uint64_t v163 = v201[0];
              double v200 = *(double *)&v201[1];
              uint64_t v199 = v201[2];
              uint64_t v164 = v202;
              uint64_t v165 = v203;
              uint64_t v166 = v204;

              swift_release();
              v167 = v189;
              uint64_t v168 = v181;
              *(void *)v189 = v179;
              *((void *)v167 + 1) = v168;
              double v169 = v200;
              *((void *)v167 + 2) = v163;
              v167[3] = v169;
              *((void *)v167 + 4) = v199;
              *((void *)v167 + 5) = v164;
              *((void *)v167 + 6) = v165;
              *((void *)v167 + 7) = v166;
              return;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            sub_1DCD2479C((uint64_t)v201, &qword_1EAB041B0);
          }
        }
        v154 = 0;
        goto LABEL_92;
      }
      swift_bridgeObjectRelease();
    }
  }
  sub_1DCD3A548();
  swift_allocError();
  unint64_t v56 = 0xD000000000000029;
  uint64_t v57 = "Invalid model info or outputs or modelURL";
LABEL_9:
  *(void *)uint64_t v55 = v56;
  *(void *)(v55 + 8) = (unint64_t)(v57 - 32) | 0x8000000000000000;
  *(unsigned char *)(v55 + 16) = 4;
  swift_willThrow();
}

uint64_t sub_1DCE4FF54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB041B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1DCE4FFBC(uint64_t a1, uint64_t a2)
{
  v9[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1DCD95648(0, (unint64_t *)&qword_1EBE850A0);
  uint64_t v4 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  id v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v9);

  if (v5)
  {
    id v6 = v9[0];
  }
  else
  {
    id v7 = v9[0];
    sub_1DD046378();

    swift_willThrow();
  }
  return v5;
}

NSObject *sub_1DCE500B8(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v54 = a3;
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v73 = (uint64_t)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v59 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DD046478();
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v52 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v53 = (char *)v42 - v14;
  uint64_t v15 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v42 - v19;
  uint64_t v51 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  if (sub_1DCE12B64(0))
  {
    uint64_t v22 = v21;
    uint64_t v55 = v7;
    uint64_t v56 = v6;
    uint64_t v50 = v3;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v24(ObjectType, v22);
    sub_1DCECD634((uint64_t)v60);
    sub_1DCE50A3C((uint64_t)v20, type metadata accessor for MLModelInfo);
    if (v61)
    {
      uint64_t v49 = v61;
      uint64_t v43 = v60[0];
      uint64_t v44 = v60[1];
      uint64_t v45 = v62;
      uint64_t v25 = v64;
      uint64_t v46 = v63;
      uint64_t v47 = v65;
      uint64_t v48 = v66;
      void v42[5] = v67;
      v42[4] = v68;
      v42[3] = v69;
      void v42[2] = v70;
      v42[1] = v71;
      v42[0] = v72;
      v24(ObjectType, v22);
      uint64_t v26 = *(void *)&v17[*(int *)(v15 + 36)];
      swift_bridgeObjectRetain();
      sub_1DCE50A3C((uint64_t)v17, type metadata accessor for MLModelInfo);
      if (*(void *)(v26 + 16))
      {
        uint64_t v27 = sub_1DCEAD428(1);
        uint64_t v7 = v55;
        uint64_t v6 = v56;
        uint64_t v29 = v57;
        uint64_t v28 = v58;
        if (v30) {
          (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v59, *(void *)(v26 + 56) + *(void *)(v57 + 72) * v27, v58);
        }
      }
      else
      {
        uint64_t v7 = v55;
        uint64_t v6 = v56;
        uint64_t v29 = v57;
        uint64_t v28 = v58;
      }
      uint64_t v31 = (uint64_t)v59;
      (*(void (**)(void))(v29 + 56))();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v28) != 1)
      {
        uint64_t v38 = v53;
        (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v53, v31, v28);
        uint64_t v39 = (uint64_t)v52;
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v52, v38, v28);
        v60[0] = v51;
        type metadata accessor for ObjectOntology();
        swift_allocObject();
        swift_bridgeObjectRetain();
        uint64_t v40 = v54;
        swift_retain();
        swift_bridgeObjectRetain();
        CGFloat v33 = sub_1DCDE4B74(v39, v46, v25, v40, v60);
        sub_1DCE50950(v43, v44, v49);
        if (v33)
        {
          (*(void (**)(char *, uint64_t))(v29 + 8))(v38, v28);
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1DCD3A548();
          swift_allocError();
          *(void *)uint64_t v41 = 0xD000000000000016;
          *(void *)(v41 + 8) = 0x80000001DD06C610;
          *(unsigned char *)(v41 + 16) = 5;
          swift_willThrow();
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v38, v28);
        }
        return v33;
      }
      sub_1DCE50950(v43, v44, v49);
      swift_unknownObjectRelease();
      sub_1DCD2479C(v31, &qword_1EBE848E0);
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t v7 = v55;
      uint64_t v6 = v56;
    }
  }
  uint64_t v32 = v73;
  sub_1DCDB40EC(v73);
  CGFloat v33 = sub_1DD048048();
  os_log_type_t v34 = sub_1DD048858();
  if (os_log_type_enabled(v33, v34))
  {
    CGFloat v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CGFloat v35 = 0;
    _os_log_impl(&dword_1DCCF9000, v33, v34, "missing VIModel mapping file", v35, 2u);
    MEMORY[0x1E01B07E0](v35, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v32, v6);
  sub_1DCD3A548();
  swift_allocError();
  *(void *)uint64_t v36 = 0xD00000000000001CLL;
  *(void *)(v36 + 8) = 0x80000001DD06C5F0;
  *(unsigned char *)(v36 + 16) = 5;
  swift_willThrow();
  return v33;
}

unint64_t sub_1DCE50890()
{
  unint64_t result = qword_1EAB03978;
  if (!qword_1EAB03978)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE86898);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03978);
  }
  return result;
}

uint64_t sub_1DCE508EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCE50950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCE509B4()
{
  return sub_1DCE91BE0();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1DCE509D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCE50A3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCE50A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void (*v33)(void *__return_ptr, long long *, void (*)(uint64_t), void *);
  long long v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  void *v41;
  long long v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  int64x2_t v55;
  uint64_t v56;
  void v57[8];
  uint64_t v58;

  uint64_t v6 = v4;
  uint64_t v58 = a2;
  uint64_t v41 = (void *)a1;
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v6 + 16);
  uint64_t v13 = v12 + OBJC_IVAR____TtC18VisualIntelligence19DomainModelRegistry_domainModelConfig;
  swift_bridgeObjectRetain();
  unsigned __int8 v14 = sub_1DCEA523C();
  if (v14 == 7) {
    goto LABEL_9;
  }
  unsigned __int8 v15 = v14;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v16 = sub_1DCE51778(v13, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig);
  MEMORY[0x1F4188790](v16);
  *(&v39 - 2) = (uint64_t)v11;
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_1DCE50F74(v17, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))sub_1DCE50F6C);
  swift_bridgeObjectRelease();
  if (!*(void *)(v18 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1DCE51280((uint64_t)v11);
LABEL_9:
    *(void *)&uint64_t v42 = 0;
    *((void *)&v42 + 1) = 0xE000000000000000;
    sub_1DD048B98();
    swift_bridgeObjectRelease();
    *(void *)&uint64_t v42 = 0xD00000000000001FLL;
    *((void *)&v42 + 1) = 0x80000001DD06C670;
    swift_bridgeObjectRetain();
    sub_1DD048548();
    swift_bridgeObjectRelease();
    CGFloat v35 = v42;
    sub_1DCD3A548();
    swift_allocError();
    *(_OWORD *)uint64_t v36 = v35;
    *(unsigned char *)(v36 + 16) = 2;
    return swift_willThrow();
  }
  char v19 = *(unsigned char *)(v18 + 32);
  swift_bridgeObjectRelease();
  sub_1DCE51280((uint64_t)v11);
  uint64_t v20 = *(void *)(v12 + 16);
  if (*(void *)(v20 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1DCEAD624(v15);
    if (v22)
    {
      uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
      swift_retain();
      swift_bridgeObjectRelease();
      if (v23)
      {
        uint64_t v24 = v41;
        sub_1DCD3A3BC((uint64_t)v41, (uint64_t)&v42);
        uint64_t v25 = v24[5];
        uint64_t v26 = v24[6];
        uint64_t v27 = v24[7];
        uint64_t v28 = v24[8];
        uint64_t v29 = v24[9];
        uint64_t v30 = v24[10];
        uint64_t v44 = v25;
        uint64_t v45 = v26;
        uint64_t v46 = v27;
        uint64_t v47 = v28;
        uint64_t v48 = v25;
        uint64_t v49 = v26;
        uint64_t v50 = v27;
        uint64_t v51 = v28;
        uint64_t v52 = v19;
        uint64_t v53 = 1;
        uint64_t v54 = v29;
        uint64_t v55 = vdupq_n_s64(3uLL);
        uint64_t v56 = v30;
        uint64_t v31 = (void *)swift_allocObject();
        uint64_t v32 = v58;
        v31[2] = v6;
        v31[3] = v32;
        v31[4] = v39;
        CGFloat v33 = *(void (**)(void *__return_ptr, long long *, void (*)(uint64_t), void *))(*(void *)v23 + 80);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_unknownObjectRetain();
        v33(v57, &v42, sub_1DCE51384, v31);
        sub_1DCD42DC4((uint64_t)&v42);
        if (v5)
        {
          swift_release();
          return swift_release_n();
        }
        swift_release();
        swift_release();
        goto LABEL_12;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  memset(v57, 0, 40);
LABEL_12:
  sub_1DCE512DC((uint64_t)v57, (uint64_t)&v42);
  uint64_t v37 = v40;
  if (v43)
  {
    sub_1DCD2479C((uint64_t)v57, &qword_1EAB024A8);
    swift_release();
    return sub_1DCD3A4DC(&v42, (uint64_t)v37);
  }
  else
  {
    if (qword_1EBE857F0 != -1) {
      swift_once();
    }
    uint64_t v38 = qword_1EBE9C870;
    v37[3] = (uint64_t)&type metadata for BatchModelRequest;
    v37[4] = (uint64_t)&off_1F383AB90;
    swift_bridgeObjectRetain();
    swift_release();
    char *v37 = v38;
    sub_1DCD2479C((uint64_t)v57, &qword_1EAB024A8);
    return sub_1DCD2479C((uint64_t)&v42, &qword_1EAB024A8);
  }
}

uint64_t type metadata accessor for ImageFingerprintRequestFactory()
{
  return self;
}

uint64_t sub_1DCE50F6C@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  return sub_1DCF169E4(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1DCE50F74(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  void (*v31)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v32;

  uint64_t v31 = a2;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03990);
  MEMORY[0x1F4188790](v30);
  uint64_t v4 = (uint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v28 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v29 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v27 = (char *)MEMORY[0x1E4FBC860];
  if (!v8) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v10 << 6))
  {
    uint64_t v13 = *(void *)(a1 + 56);
    unsigned __int8 v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v17 = v13
        + *(void *)(*(void *)(type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels(0)
                                - 8)
                    + 72)
        * i;
    uint64_t v18 = (uint64_t)v4 + *(int *)(v30 + 48);
    sub_1DCE51778(v17, v18, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig.DomainModels);
    *uint64_t v4 = v16;
    v4[1] = v15;
    swift_bridgeObjectRetain();
    v31(&v32, v16, v15, v18);
    uint64_t result = sub_1DCD2479C((uint64_t)v4, &qword_1EAB03990);
    char v19 = v32;
    if (v32 == 26)
    {
      if (v8) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DCE9D7D4(0, *((void *)v27 + 2) + 1, 1, v27);
        uint64_t v27 = (char *)result;
      }
      unint64_t v24 = *((void *)v27 + 2);
      unint64_t v23 = *((void *)v27 + 3);
      if (v24 >= v23 >> 1)
      {
        uint64_t result = (uint64_t)sub_1DCE9D7D4((char *)(v23 > 1), v24 + 1, 1, v27);
        uint64_t v27 = (char *)result;
      }
      uint64_t v25 = v27;
      *((void *)v27 + 2) = v24 + 1;
      v25[v24 + 32] = v19;
      if (v8) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v20 >= v29) {
      goto LABEL_29;
    }
    unint64_t v21 = *(void *)(v28 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v29) {
        goto LABEL_29;
      }
      unint64_t v21 = *(void *)(v28 + 8 * v10);
      if (!v21)
      {
        int64_t v10 = v20 + 2;
        if (v20 + 2 >= v29) {
          goto LABEL_29;
        }
        unint64_t v21 = *(void *)(v28 + 8 * v10);
        if (!v21)
        {
          int64_t v10 = v20 + 3;
          if (v20 + 3 >= v29) {
            goto LABEL_29;
          }
          unint64_t v21 = *(void *)(v28 + 8 * v10);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v21 - 1) & v21;
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v29)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v27;
  }
  unint64_t v21 = *(void *)(v28 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_29;
    }
    unint64_t v21 = *(void *)(v28 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1DCE51280(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCE512DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB024A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCE51344()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1DCE51384(uint64_t a1)
{
  uint64_t v2 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v1 + 24);
  char v3 = *(unsigned char *)(a1 + 48);
  long long v4 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v4;
  v5[2] = *(_OWORD *)(a1 + 32);
  char v6 = v3;
  sub_1DCE513C4((uint64_t)v5, v2);
}

void sub_1DCE513C4(uint64_t a1, void (*a2)(void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = sub_1DD048068();
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  unsigned __int8 v14 = *(void **)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  if (*(unsigned char *)(a1 + 48) == 1)
  {
    id v15 = v10;
    a2(v10, 0, 0, 1);
    sub_1DCD433A0(v10, v9, v12, v11, (uint64_t)v14, v13, 1);
  }
  else
  {
    uint64_t v16 = v14[2];
    if (v16 == 1)
    {
      uint64_t v17 = v14[5];
      uint64_t v26 = (void *)v14[4];
      uint64_t v27 = v17;
      uint64_t v28 = v14[6];
      swift_bridgeObjectRetain();
      sub_1DCD43350(v10, v9, v12, v11, (uint64_t)v14, v13, 0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DD048548();
      sub_1DCD433A0(v10, v9, v12, v11, (uint64_t)v14, v13, 0);
      swift_bridgeObjectRelease();
      a2(v26, v27, v28, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = v6;
      uint64_t v26 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1DCDB40EC((uint64_t)v8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1DD048048();
      os_log_type_t v19 = sub_1DD048858();
      int v20 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        unint64_t v21 = (uint8_t *)swift_slowAlloc();
        HIDWORD(v23) = v20;
        int64_t v22 = v21;
        unint64_t v24 = v18;
        *(_DWORD *)unint64_t v21 = 134217984;
        sub_1DCD433A0(v10, v9, v12, v11, (uint64_t)v14, v13, 0);
        uint64_t v27 = v16;
        uint64_t v18 = v24;
        sub_1DD048A28();
        sub_1DCD433A0(v10, v9, v12, v11, (uint64_t)v14, v13, 0);
        _os_log_impl(&dword_1DCCF9000, v18, BYTE4(v23), "Unexpected number of outputs for fingerprint model: %ld", v22, 0xCu);
        MEMORY[0x1E01B07E0](v22, -1, -1);
      }
      else
      {
        sub_1DCD433A0(v10, v9, v12, v11, (uint64_t)v14, v13, 0);
        sub_1DCD433A0(v10, v9, v12, v11, (uint64_t)v14, v13, 0);
      }

      (*(void (**)(char *, void *))(v25 + 8))(v8, v26);
    }
  }
}

uint64_t sub_1DCE51778(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t destroy for FingerprintModelRequestInput(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for FingerprintModelRequestInput(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for FingerprintModelRequestInput(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FingerprintModelRequestInput(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_unknownObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FingerprintModelRequestInput(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FingerprintModelRequestInput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FingerprintModelRequestInput()
{
  return &type metadata for FingerprintModelRequestInput;
}

uint64_t sub_1DCE51A3C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v30 = sub_1DD048068();
  uint64_t v5 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  int64_t v10 = (char *)v29 - v9;
  uint64_t v11 = sub_1DD047C38();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v32 = type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapperConfig(0);
  MEMORY[0x1F4188790](v32);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(self, sel_defaultManager);
  id v15 = (void *)sub_1DD0483D8();
  id v16 = objc_msgSend(v14, sel_contentsAtPath_, v15);

  if (v16)
  {
    v29[3] = v7;
    v29[4] = a1;
    uint64_t v17 = sub_1DD0464E8();
    unint64_t v19 = v18;

    uint64_t v24 = sub_1DCF47ED8(v17, v19);
    uint64_t v25 = v17;
    unint64_t v27 = v26;
    sub_1DCD21954(v25, v19);

    uint64_t v35 = v24;
    unint64_t v36 = v27;
    uint64_t v34 = 0;
    memset(v33, 0, sizeof(v33));
    sub_1DCD33F64(v24, v27);
    sub_1DD047C28();
    sub_1DCE5348C();
    sub_1DD047E38();
    sub_1DCD21954(v24, v27);
    return sub_1DCE534E4((uint64_t)v13, (uint64_t)v31);
  }
  else
  {

    sub_1DCDB40EC((uint64_t)v10);
    swift_bridgeObjectRetain_n();
    int v20 = sub_1DD048048();
    os_log_type_t v21 = sub_1DD048858();
    if (os_log_type_enabled(v20, v21))
    {
      int64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(void *)&v33[0] = v23;
      *(_DWORD *)int64_t v22 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1DCED7FA0(a1, a2, (uint64_t *)v33);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v20, v21, "Failed to load rich label kg mapper at path %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v23, -1, -1);
      MEMORY[0x1E01B07E0](v22, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v30);
    *uint64_t v31 = MEMORY[0x1E4FBC860];
    return sub_1DD047BE8();
  }
}

uint64_t sub_1DCE52080(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v61 = *v3;
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v63 = (void (*)(char *, uint64_t))((char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v62 = (uint64_t)&v58 - v11;
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v58 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v58 - v16;
  MEMORY[0x1F4188790](v18);
  int v20 = (char *)&v58 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v58 - v22;
  int v24 = sub_1DCFDDF30();
  if (v24 == 63)
  {
    uint64_t v64 = a1;
    sub_1DCDB40EC((uint64_t)v23);
    sub_1DCDB4300((uint64_t)v20);
    uint64_t v25 = *(void (**)(char *, uint64_t))(v8 + 8);
    v25(v23, v7);
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_1DD048048();
    os_log_type_t v27 = sub_1DD048848();
    uint64_t v28 = v8 + 8;
    if (os_log_type_enabled(v26, v27))
    {
      int64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v63 = v25;
      uint64_t v31 = v30;
      uint64_t v67 = v30;
      uint64_t v62 = v28;
      *(_DWORD *)int64_t v29 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_1DCED7FA0(a2, a3, &v67);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v26, v27, "RichLabelMapper not support for locale: %s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v31, -1, -1);
      MEMORY[0x1E01B07E0](v29, -1, -1);

      v63(v20, v7);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v25(v20, v7);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE862B8);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 24) = 0;
    *(unsigned char *)(v46 + 32) = -1;
    *(void *)(v46 + 56) = 0;
    *(void *)(v46 + 64) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
    uint64_t v47 = swift_allocObject();
    *(_DWORD *)(v47 + 16) = 0;
    *(void *)(v46 + 80) = v47;
    *(void *)(v46 + 40) = sub_1DCE5279C;
    *(void *)(v46 + 48) = 0;
    swift_retain();
    sub_1DCD33E90(0);
    *(void *)(v46 + 72) = 4;
    swift_release();
    uint64_t v48 = sub_1DCF31D08();
    swift_release();
    *(void *)(v65 + 16) = v48;
  }
  else
  {
    int v32 = v24;
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_1DCFD9704(v32, 0, 25200, 0xE200000000000000);
    unint64_t v35 = v34;
    sub_1DCDB40EC((uint64_t)v17);
    sub_1DCDB4300((uint64_t)v14);
    unint64_t v36 = *(void (**)(char *, uint64_t))(v8 + 8);
    v36(v17, v7);
    swift_bridgeObjectRetain_n();
    uint64_t v37 = sub_1DD048048();
    os_log_type_t v38 = sub_1DD048848();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v64 = a1;
      uint64_t v40 = (uint8_t *)v39;
      uint64_t v41 = swift_slowAlloc();
      uint64_t v60 = v33;
      uint64_t v42 = v41;
      uint64_t v67 = v41;
      uint64_t v59 = (void (*)(uint64_t, uint64_t))v36;
      *(_DWORD *)uint64_t v40 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v66 = sub_1DCED7FA0(v60, v35, &v67);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v37, v38, "RichLabelMapper [init]: %s", v40, 0xCu);
      swift_arrayDestroy();
      uint64_t v43 = v42;
      uint64_t v33 = v60;
      MEMORY[0x1E01B07E0](v43, -1, -1);
      MEMORY[0x1E01B07E0](v40, -1, -1);

      uint64_t v44 = v59;
      v59((uint64_t)v14, v7);
      uint64_t v45 = (uint64_t)v63;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v36(v14, v7);
      uint64_t v45 = (uint64_t)v63;
      uint64_t v44 = (void (*)(uint64_t, uint64_t))v36;
    }
    uint64_t v49 = (void *)swift_allocObject();
    void v49[2] = v33;
    v49[3] = v35;
    v49[4] = v61;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE862B8);
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 24) = 0;
    *(unsigned char *)(v50 + 32) = -1;
    *(void *)(v50 + 56) = 0;
    *(void *)(v50 + 64) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
    uint64_t v51 = swift_allocObject();
    *(_DWORD *)(v51 + 16) = 0;
    *(void *)(v50 + 80) = v51;
    *(void *)(v50 + 40) = sub_1DCE530C0;
    *(void *)(v50 + 48) = v49;
    swift_retain();
    swift_retain();
    sub_1DCD33E90(0);
    *(void *)(v50 + 72) = 4;
    swift_release();
    uint64_t v52 = sub_1DCF31D08();
    swift_release();
    *(void *)(v65 + 16) = v52;
    uint64_t v53 = v62;
    sub_1DCDB40EC(v62);
    sub_1DCDB4300(v45);
    v44(v53, v7);
    uint64_t v54 = sub_1DD048048();
    os_log_type_t v55 = sub_1DD048848();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl(&dword_1DCCF9000, v54, v55, "RichLabelMapper [init]: loaded file", v56, 2u);
      MEMORY[0x1E01B07E0](v56, -1, -1);
    }

    swift_release();
    v44(v45, v7);
  }
  return v65;
}

unint64_t sub_1DCE5279C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DCDBC8E8(MEMORY[0x1E4FBC860]);
  *a1 = result;
  return result;
}

uint64_t sub_1DCE527D4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v34 - v11;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1DCDB40EC((uint64_t)v12);
    sub_1DCDB4300((uint64_t)v9);
    uint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
    v13(v12, v6);
    swift_bridgeObjectRetain_n();
    id v14 = sub_1DD048048();
    os_log_type_t v15 = sub_1DD048848();
    if (os_log_type_enabled(v14, v15))
    {
      v34[1] = v3;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v35 = a1;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v18 = swift_slowAlloc();
      v34[0] = v13;
      uint64_t v19 = v18;
      uint64_t v37 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1DCED7FA0(v35, a2, &v37);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v14, v15, "RichLabelMapper [convertKnowledgeIdToLabel]: %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v19, -1, -1);
      int v20 = v17;
      a1 = v35;
      MEMORY[0x1E01B07E0](v20, -1, -1);

      ((void (*)(char *, uint64_t))v34[0])(v9, v6);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v13(v9, v6);
    }
    unint64_t v21 = sub_1DCEBBF08(1uLL, a1, a2);
    unint64_t v23 = v22;
    unint64_t v25 = v24;
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    if ((v21 ^ v23) >> 14)
    {
      uint64_t v28 = sub_1DCE52B8C(v21, v23, v25, v27, 10);
      if ((v28 & 0x10000000000) != 0) {
        uint64_t v28 = sub_1DCD4F368(v21, v23, v25, v27, 10);
      }
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();
      if ((v29 & 0x100000000) != 0) {
        return 0;
      }
      swift_retain();
      uint64_t v30 = sub_1DCFE2DA4();
      swift_release();
      if (v30[2])
      {
        unint64_t v31 = sub_1DCEAD480(v29);
        if (v32)
        {
          a1 = *(void *)(v30[7] + 16 * v31);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          return a1;
        }
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return a1;
}

uint64_t type metadata accessor for RichLabelMapper()
{
  return self;
}

uint64_t sub_1DCE52B8C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    LODWORD(result) = 0;
    unsigned __int8 v14 = 0;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v13[0] = a3;
    v13[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v13;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v11 = (void *)sub_1DD048C18();
  }
  uint64_t result = sub_1DCE52C60((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    unsigned __int8 v14 = BYTE4(result) & 1;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  return result;
}

uint64_t sub_1DCE52C60(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_1DCD4E748(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_104;
  }
  uint64_t result = sub_1DD0485A8();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_1DCD4E748(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_1DCD4E748(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_100;
  }
  if (v17 < a3 >> 16)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  uint64_t result = sub_1DD0485A8();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_99;
  }
  if (v18 < v15)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  uint64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    uint64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v34 = a6 + 55;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v34 = 65;
        }
        if (a6 <= 10) {
          unsigned __int8 v35 = a6 + 48;
        }
        else {
          unsigned __int8 v35 = 58;
        }
        if (v19)
        {
          unsigned int v24 = 0;
          uint64_t v36 = v19 + 1;
          uint64_t v37 = result - 1;
          do
          {
            unsigned int v38 = *v36;
            if (v38 < 0x30 || v38 >= v35)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                unsigned int v29 = 0;
                unsigned __int8 v30 = 1;
                if (v38 < 0x61 || v38 >= v33) {
                  return v29 | ((unint64_t)v30 << 32);
                }
                char v39 = -87;
              }
              else
              {
                char v39 = -55;
              }
            }
            else
            {
              char v39 = -48;
            }
            uint64_t v40 = (int)v24 * (uint64_t)(int)a6;
            if (v40 != (int)v40) {
              goto LABEL_96;
            }
            unsigned __int8 v41 = v38 + v39;
            unsigned int v24 = v40 + v41;
            if (__OFADD__(v40, v41)) {
              goto LABEL_96;
            }
            ++v36;
            --v37;
          }
          while (v37);
LABEL_94:
          unsigned __int8 v30 = 0;
          unsigned int v29 = v24;
          return v29 | ((unint64_t)v30 << 32);
        }
        goto LABEL_95;
      }
      goto LABEL_96;
    }
    goto LABEL_103;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v42 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v43 = a6 + 55;
      }
      else
      {
        unsigned __int8 v42 = 97;
        unsigned __int8 v43 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v44 = a6 + 48;
      }
      else {
        unsigned __int8 v44 = 58;
      }
      if (v19)
      {
        unsigned int v24 = 0;
        while (1)
        {
          unsigned int v45 = *v19;
          if (v45 < 0x30 || v45 >= v44)
          {
            if (v45 < 0x41 || v45 >= v43)
            {
              unsigned int v29 = 0;
              unsigned __int8 v30 = 1;
              if (v45 < 0x61 || v45 >= v42) {
                return v29 | ((unint64_t)v30 << 32);
              }
              char v46 = -87;
            }
            else
            {
              char v46 = -55;
            }
          }
          else
          {
            char v46 = -48;
          }
          uint64_t v47 = (int)v24 * (uint64_t)(int)a6;
          if (v47 != (int)v47) {
            goto LABEL_96;
          }
          unsigned __int8 v48 = v45 + v46;
          unsigned int v24 = v47 + v48;
          if (__OFADD__(v47, v48)) {
            goto LABEL_96;
          }
          ++v19;
          if (!--result) {
            goto LABEL_94;
          }
        }
      }
      goto LABEL_95;
    }
LABEL_96:
    unsigned int v29 = 0;
    unsigned __int8 v30 = 1;
    return v29 | ((unint64_t)v30 << 32);
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v22 = a6 + 55;
      }
      else
      {
        unsigned __int8 v21 = 97;
        unsigned __int8 v22 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v23 = a6 + 48;
      }
      else {
        unsigned __int8 v23 = 58;
      }
      if (v19)
      {
        unsigned int v24 = 0;
        unint64_t v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              unsigned int v29 = 0;
              unsigned __int8 v30 = 1;
              if (v27 < 0x61 || v27 >= v21) {
                return v29 | ((unint64_t)v30 << 32);
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v31 = (int)v24 * (uint64_t)(int)a6;
          if (v31 != (int)v31) {
            goto LABEL_96;
          }
          unsigned __int8 v32 = v27 + v28;
          unsigned int v24 = v31 - v32;
          if (__OFSUB__(v31, v32)) {
            goto LABEL_96;
          }
          ++v25;
          if (!--v26) {
            goto LABEL_94;
          }
        }
      }
LABEL_95:
      unsigned int v29 = 0;
      unsigned __int8 v30 = 0;
      return v29 | ((unint64_t)v30 << 32);
    }
    goto LABEL_96;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t sub_1DCE53088()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1DCE530C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DCE530F4(*(void *)(v1 + 16), *(void *)(v1 + 24));
  *a1 = result;
  return result;
}

uint64_t sub_1DCE530F4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapper(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapperConfig(0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (void *)sub_1DCDBC8E8(MEMORY[0x1E4FBC860]);
  sub_1DCE51A3C(a1, a2, v10);
  uint64_t v12 = *v10;
  uint64_t v13 = *(void *)(*v10 + 16);
  if (!v13)
  {
LABEL_17:
    sub_1DCE5342C((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapperConfig);
    return (uint64_t)v11;
  }
  uint64_t v14 = v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v15 = *(void *)(v5 + 72);
  unsigned __int8 v35 = v10;
  uint64_t v36 = v15;
  uint64_t v34 = v12;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1DCE533C8(v14, (uint64_t)v7);
    unsigned int v17 = *(_DWORD *)v7;
    uint64_t v18 = *((void *)v7 + 1);
    uint64_t v19 = *((void *)v7 + 2);
    swift_bridgeObjectRetain();
    sub_1DCE5342C((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapper);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v37 = v11;
    unint64_t v22 = sub_1DCEAD480(v17);
    uint64_t v23 = v11[2];
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v26 = v21;
    if (v11[3] >= v25)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v11 = v37;
        if (v21) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1DCE8A9B8();
        uint64_t v11 = v37;
        if (v26) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1DCE81E90(v25, isUniquelyReferenced_nonNull_native);
      unint64_t v27 = sub_1DCEAD480(v17);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_20;
      }
      unint64_t v22 = v27;
      uint64_t v11 = v37;
      if (v26)
      {
LABEL_3:
        unint64_t v16 = (void *)(v11[7] + 16 * v22);
        swift_bridgeObjectRelease();
        *unint64_t v16 = v18;
        v16[1] = v19;
        goto LABEL_4;
      }
    }
    v11[(v22 >> 6) + 8] |= 1 << v22;
    *(_DWORD *)(v11[6] + 4 * v22) = v17;
    unsigned int v29 = (void *)(v11[7] + 16 * v22);
    *unsigned int v29 = v18;
    v29[1] = v19;
    uint64_t v30 = v11[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_19;
    }
    v11[2] = v32;
LABEL_4:
    swift_bridgeObjectRelease();
    v14 += v36;
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      unint64_t v10 = v35;
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCE533C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapper(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCE5342C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DCE5348C()
{
  unint64_t result = qword_1EBE86158;
  if (!qword_1EBE86158)
  {
    type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapperConfig(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86158);
  }
  return result;
}

uint64_t sub_1DCE534E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_RichLabelKgMapperConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCE53548(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DCEC1CA4(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = v2 + 4;
  v5[1] = v3;
  uint64_t result = sub_1DCE548C0(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_1DCE535B8(unint64_t result, unint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    int64_t v3 = 0;
    unint64_t v4 = result + 32;
    unint64_t v5 = *(void *)(result + 16);
    while (!__OFSUB__(v5, v3))
    {
      uint64_t result = v3 + (uint64_t)(v5 - v3) / 2;
      if (__OFADD__(v3, (uint64_t)(v5 - v3) / 2)) {
        goto LABEL_15;
      }
      if (result >= v2) {
        goto LABEL_16;
      }
      unint64_t v6 = *(void *)(v4 + 8 * result);
      if (v6 == a2) {
        return result;
      }
      if (v6 < a2)
      {
        int64_t v3 = result + 1;
        if (__OFADD__(result, 1)) {
          goto LABEL_17;
        }
        uint64_t result = v5;
      }
      unint64_t v5 = result;
      if (v3 >= (uint64_t)result) {
        return ~result;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    uint64_t result = 0;
    return ~result;
  }
  return result;
}

uint64_t S2CellUnion.cellIds.getter()
{
  return swift_bridgeObjectRetain();
}

VisualIntelligence::S2CellUnion __swiftcall S2CellUnion.init(cellIds:)(Swift::OpaquePointer cellIds)
{
  v1->_rawValue = cellIds._rawValue;
  return (VisualIntelligence::S2CellUnion)S2CellUnion.normalize()();
}

Swift::Bool __swiftcall S2CellUnion.normalize()()
{
  uint64_t v1 = sub_1DCE9FE74(0, (*v0)[2], 0, MEMORY[0x1E4FBC860]);
  sub_1DCE53548(v0);
  unint64_t v2 = *v0;
  uint64_t v3 = (*v0)[2];
  if (!v3)
  {
LABEL_47:
    swift_bridgeObjectRelease();
    LOBYTE(v4) = 0;
    return (char)v4;
  }
  LOBYTE(v4) = swift_bridgeObjectRetain();
  for (unint64_t i = 0; i != v3; ++i)
  {
    if (i >= v2[2])
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      return (char)v4;
    }
    unint64_t v7 = v2[i + 4];
    unint64_t v8 = v1[2];
    if (!v8) {
      goto LABEL_3;
    }
    uint64_t v9 = v1[v8 + 3];
    if (__OFSUB__(0, v9)) {
      goto LABEL_53;
    }
    uint64_t v10 = -v9 & v9;
    BOOL v11 = __OFSUB__(v10, 1);
    uint64_t v12 = v10 - 1;
    if (v11) {
      goto LABEL_54;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_55;
    }
    if (v7 < v9 - v12) {
      goto LABEL_15;
    }
    BOOL v11 = __OFADD__(v9, v12);
    unint64_t v13 = v9 + v12;
    if (v11) {
      goto LABEL_59;
    }
    if (v7 > v13)
    {
LABEL_15:
      if (__OFSUB__(0, v7)) {
        goto LABEL_56;
      }
      unint64_t v14 = -(uint64_t)v7 & v7;
      BOOL v11 = __OFSUB__(v14, 1);
      unint64_t v15 = v14 - 1;
      if (v11) {
        goto LABEL_57;
      }
      unint64_t v16 = v7 - v15;
      if (__OFSUB__(v7, v15)) {
        goto LABEL_58;
      }
      unint64_t v17 = v7 + v15;
      BOOL v18 = __OFADD__(v7, v15);
      uint64_t v19 = &v1[v8 + 3];
      while (1)
      {
        unint64_t v20 = v1[v8 + 3];
        if (v20 < v16) {
          break;
        }
        if (v18)
        {
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        if (v20 > v17) {
          break;
        }
        --v19;
        v1[2] = --v8;
        if (!v8) {
          goto LABEL_3;
        }
      }
      if (v8 >= 3)
      {
        do
        {
          uint64_t v21 = *(v19 - 2);
          uint64_t v22 = *(v19 - 1);
          if ((v22 ^ v21 ^ *v19) != v7) {
            break;
          }
          uint64_t v23 = -(uint64_t)v7;
          if (__OFSUB__(0, v7)) {
            goto LABEL_49;
          }
          unint64_t v24 = v23 & v7;
          uint64_t v25 = 4 * (v23 & v7);
          BOOL v11 = __OFADD__(v25, 2 * v24);
          uint64_t v26 = v25 + 2 * v24;
          if (v11) {
            goto LABEL_50;
          }
          unint64_t v27 = v7 & ~v26;
          uint64_t v28 = v22 & ~v26;
          BOOL v29 = (v21 & ~v26) == v27 && v28 == v27;
          BOOL v30 = !v29 || (v7 & 0xFFFFFFFFFFFFFFFLL) == 0;
          if (v30 || (*v19 & ~v26) != v27) {
            break;
          }
          v8 -= 3;
          v1[2] = v8;
          if (__OFSUB__(0, v25)) {
            goto LABEL_51;
          }
          v19 -= 3;
          unint64_t v7 = -v25 & v7 | v25;
        }
        while (v8 + 3 > 5);
      }
LABEL_3:
      unint64_t v6 = v1[3];
      if (v8 >= v6 >> 1)
      {
        unint64_t v4 = sub_1DCE9FE74((void *)(v6 > 1), v8 + 1, 1, v1);
        uint64_t v1 = v4;
      }
      v1[2] = v8 + 1;
      v1[v8 + 4] = v7;
      continue;
    }
  }
  swift_bridgeObjectRelease();
  if (v1[2] >= v2[2]) {
    goto LABEL_47;
  }
  swift_bridgeObjectRelease();
  *uint64_t v0 = v1;
  LOBYTE(v4) = 1;
  return (char)v4;
}

uint64_t S2CellUnion.denormalize(minLevel:levelMod:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  unint64_t v6 = sub_1DCE9FE74(0, *(void *)(*v2 + 16), 0, MEMORY[0x1E4FBC860]);
  if (!*(void *)(v5 + 16)) {
    return (uint64_t)v6;
  }
  uint64_t v35 = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  uint64_t v7 = v35;
  unint64_t v8 = 0;
  uint64_t result = 1;
  while (v8 < *(void *)(v5 + 16))
  {
    unint64_t v12 = *(void *)(v5 + 32 + 8 * v8);
    if (v12)
    {
      if (a1 < 31)
      {
        if (a2 <= 1) {
          goto LABEL_3;
        }
        uint64_t v17 = 30;
        uint64_t v18 = 30;
      }
      else
      {
        uint64_t v18 = a1;
        if (a2 <= 1) {
          goto LABEL_41;
        }
        uint64_t v17 = 30;
        uint64_t v18 = a1;
      }
    }
    else
    {
      unint64_t v13 = HIDWORD(v12);
      if (v12) {
        LODWORD(v13) = *(void *)(v5 + 32 + 8 * v8);
      }
      if (__OFSUB__(0, v13)) {
        goto LABEL_66;
      }
      if (v12) {
        uint64_t v14 = 15;
      }
      else {
        uint64_t v14 = -1;
      }
      int v15 = -(int)v13 & v13;
      uint64_t v16 = v14 + 8;
      if ((v15 & 0x5555) == 0) {
        uint64_t v16 = v14;
      }
      if ((v15 & 0x550055) != 0) {
        v16 += 4;
      }
      if ((v15 & 0x5050505) != 0) {
        v16 += 2;
      }
      if ((v15 & 0x11111111) != 0) {
        uint64_t v17 = v16 + 1;
      }
      else {
        uint64_t v17 = v16;
      }
      if (v17 <= a1) {
        uint64_t v18 = a1;
      }
      else {
        uint64_t v18 = v17;
      }
      if (a2 < 2)
      {
        if (v18 == v17) {
          goto LABEL_3;
        }
        goto LABEL_41;
      }
    }
    uint64_t v19 = v18 - a1;
    if (__OFSUB__(v18, a1)) {
      goto LABEL_67;
    }
    BOOL v20 = __OFSUB__(30, v19);
    uint64_t v21 = 30 - v19;
    if (v20) {
      goto LABEL_68;
    }
    uint64_t v22 = v21 % a2;
    BOOL v20 = __OFADD__(v18, v22);
    v18 += v22;
    if (v20) {
      goto LABEL_69;
    }
    if (v18 >= 30) {
      uint64_t v18 = 30;
    }
    if (v18 == v17)
    {
LABEL_3:
      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1)
      {
        uint64_t v34 = sub_1DCE9FE74((void *)(v10 > 1), v11 + 1, 1, v6);
        uint64_t v7 = v35;
        unint64_t v6 = v34;
        uint64_t result = 1;
      }
      v6[2] = v11 + 1;
      v6[v11 + 4] = v12;
      goto LABEL_6;
    }
LABEL_41:
    if (__OFSUB__(0, v12)) {
      goto LABEL_70;
    }
    BOOL v20 = __OFSUB__(30, v18);
    uint64_t v23 = 30 - v18;
    if (v20) {
      goto LABEL_71;
    }
    if (v23 + 0x4000000000000000 < 0) {
      goto LABEL_72;
    }
    unint64_t v24 = 2 * v23;
    if (v24 - 65 <= 0xFFFFFFFFFFFFFF7ELL)
    {
LABEL_45:
      unint64_t v25 = 0;
      goto LABEL_49;
    }
    if ((v24 & 0x8000000000000000) != 0)
    {
      if (v24 <= 0xFFFFFFFFFFFFFFC0) {
        goto LABEL_45;
      }
      unint64_t v25 = 1uLL >> (-(char)v24 & 0x3E);
    }
    else
    {
      if (v24 >= 0x40) {
        goto LABEL_45;
      }
      unint64_t v25 = 1 << (v24 & 0x3E);
    }
LABEL_49:
    unint64_t v26 = -(uint64_t)v12 & v12;
    unint64_t v27 = v12 + v26;
    if (__CFADD__(v12, v26)) {
      goto LABEL_73;
    }
    unint64_t v28 = v27 + v25;
    if (__CFADD__(v27, v25)) {
      goto LABEL_74;
    }
    unint64_t v29 = v12 - v26;
    if (v12 < v26) {
      goto LABEL_75;
    }
    unint64_t v30 = v29 + (v26 >> 2);
    if (__CFADD__(v29, v26 >> 2)) {
      goto LABEL_76;
    }
    if (v30 != v28)
    {
      unint64_t v31 = v6[2];
      while (1)
      {
        unint64_t v32 = v6[3];
        if (v31 >= v32 >> 1)
        {
          unsigned __int8 v33 = sub_1DCE9FE74((void *)(v32 > 1), v31 + 1, 1, v6);
          uint64_t v7 = v35;
          unint64_t v6 = v33;
          uint64_t result = 1;
        }
        v6[2] = v31 + 1;
        v6[v31 + 4] = v12;
        if (__OFSUB__(0, v30)) {
          break;
        }
        v30 += 2 * (-(uint64_t)v30 & v30);
        ++v31;
        if (v30 == v28) {
          goto LABEL_6;
        }
      }
      __break(1u);
      break;
    }
LABEL_6:
    if (++v8 == v7)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v6;
    }
  }
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
  return result;
}

unint64_t S2CellUnion.contains(id:)(unint64_t *a1)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *v1;
  unint64_t result = sub_1DCE535B8(v3, *a1);
  if ((result & 0x8000000000000000) != 0)
  {
    uint64_t v5 = -(uint64_t)result;
    if (__OFSUB__(0, result))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    unint64_t result = v5 - 1;
    if (__OFSUB__(v5, 1))
    {
LABEL_25:
      __break(1u);
      return result;
    }
  }
  unint64_t v6 = *(void *)(v3 + 16);
  if (result >= v6) {
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(v3 + 8 * result + 32);
  if (__OFSUB__(0, v7))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = -v7 & v7;
  BOOL v9 = __OFSUB__(v8, 1);
  uint64_t v10 = v8 - 1;
  if (v9)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  BOOL v9 = __OFSUB__(v7, v10);
  unint64_t v11 = v7 - v10;
  if (v9)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v11 <= v2) {
    return 1;
  }
LABEL_9:
  if (result)
  {
    if (result - 1 < v6)
    {
      uint64_t v12 = *(void *)(v3 + 8 * (result - 1) + 32);
      if (!__OFSUB__(0, v12))
      {
        uint64_t v13 = -v12 & v12;
        BOOL v9 = __OFSUB__(v13, 1);
        uint64_t v14 = v13 - 1;
        if (!v9)
        {
          BOOL v9 = __OFADD__(v12, v14);
          unint64_t v15 = v12 + v14;
          if (!v9) {
            return v15 >= v2;
          }
          goto LABEL_23;
        }
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

unint64_t S2CellUnion.intersects(with:)(unint64_t *a1)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *v1;
  unint64_t result = sub_1DCE535B8(v3, *a1);
  if ((result & 0x8000000000000000) != 0)
  {
    uint64_t v5 = -(uint64_t)result;
    if (__OFSUB__(0, result))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t result = v5 - 1;
    if (__OFSUB__(v5, 1))
    {
LABEL_37:
      __break(1u);
      return result;
    }
  }
  unint64_t v6 = *(void *)(v3 + 16);
  if (result >= v6) {
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)(v3 + 8 * result + 32);
  if (__OFSUB__(0, v7))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = -v7 & v7;
  BOOL v9 = __OFSUB__(v8, 1);
  uint64_t v10 = v8 - 1;
  if (v9)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  BOOL v9 = __OFSUB__(v7, v10);
  unint64_t v11 = v7 - v10;
  if (v9)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (__OFSUB__(0, v2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v12 = -(uint64_t)v2 & v2;
  BOOL v9 = __OFSUB__(v12, 1);
  unint64_t v13 = v12 - 1;
  if (v9)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  BOOL v9 = __OFADD__(v2, v13);
  unint64_t v14 = v2 + v13;
  if (v9)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v11 <= v14) {
    return 1;
  }
LABEL_12:
  if (result)
  {
    if (result - 1 < v6)
    {
      uint64_t v15 = *(void *)(v3 + 8 * (result - 1) + 32);
      if (!__OFSUB__(0, v15))
      {
        uint64_t v16 = -v15 & v15;
        BOOL v9 = __OFSUB__(v16, 1);
        uint64_t v17 = v16 - 1;
        if (!v9)
        {
          BOOL v9 = __OFADD__(v15, v17);
          unint64_t v18 = v15 + v17;
          if (!v9)
          {
            if (!__OFSUB__(0, v2))
            {
              unint64_t v19 = -(uint64_t)v2 & v2;
              BOOL v9 = __OFSUB__(v19, 1);
              unint64_t v20 = v19 - 1;
              if (!v9)
              {
                BOOL v9 = __OFSUB__(v2, v20);
                unint64_t v21 = v2 - v20;
                if (!v9) {
                  return v18 >= v21;
                }
                goto LABEL_35;
              }
LABEL_34:
              __break(1u);
LABEL_35:
              __break(1u);
              goto LABEL_36;
            }
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  return result;
}

Swift::Bool __swiftcall S2CellUnion.contains(other:)(VisualIntelligence::S2CellUnion other)
{
  uint64_t v2 = *(void *)(*(void *)other.cellIds._rawValue + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v3 = 0;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  uint64_t v5 = *(void *)v1 + 32;
  while (1)
  {
    unint64_t v6 = *(void *)(*(void *)other.cellIds._rawValue + 32 + 8 * v3);
    if (v4) {
      break;
    }
    int64_t v9 = 0;
LABEL_15:
    BOOL v11 = __OFSUB__(0, v9);
    uint64_t v12 = -v9;
    if (v11) {
      goto LABEL_41;
    }
    BOOL v11 = __OFSUB__(v12, 1);
    int64_t v9 = v12 - 1;
    if (v11) {
      goto LABEL_42;
    }
    if (v9 < 0)
    {
      BOOL v11 = __OFSUB__(0, v9);
      uint64_t v13 = -v9;
      if (v11) {
        goto LABEL_46;
      }
      BOOL v11 = __OFSUB__(v13, 1);
      int64_t v9 = v13 - 1;
      if (v11) {
        goto LABEL_47;
      }
    }
LABEL_20:
    if (v9 >= v4) {
      goto LABEL_25;
    }
    uint64_t v14 = *(void *)(v5 + 8 * v9);
    if (__OFSUB__(0, v14)) {
      goto LABEL_43;
    }
    uint64_t v15 = -v14 & v14;
    BOOL v11 = __OFSUB__(v15, 1);
    uint64_t v16 = v15 - 1;
    if (v11) {
      goto LABEL_44;
    }
    BOOL v11 = __OFSUB__(v14, v16);
    unint64_t v17 = v14 - v16;
    if (v11) {
      goto LABEL_45;
    }
    if (v17 > v6)
    {
LABEL_25:
      if (!v9) {
        goto LABEL_31;
      }
      if (v9 > v4) {
        goto LABEL_37;
      }
      uint64_t v18 = *(void *)(v5 + 8 * v9 - 8);
      if (__OFSUB__(0, v18)) {
        goto LABEL_38;
      }
      uint64_t v19 = -v18 & v18;
      BOOL v11 = __OFSUB__(v19, 1);
      uint64_t v20 = v19 - 1;
      if (v11) {
        goto LABEL_39;
      }
      BOOL v11 = __OFADD__(v18, v20);
      unint64_t v21 = v18 + v20;
      if (v11) {
        goto LABEL_40;
      }
      if (v21 < v6)
      {
LABEL_31:
        LOBYTE(other.cellIds._rawValue) = 0;
        return (Swift::Bool)other.cellIds._rawValue;
      }
    }
    if (++v3 == v2) {
      return 1;
    }
  }
  uint64_t v7 = 0;
  uint64_t v8 = *(void *)(*(void *)v1 + 16);
  while (!__OFSUB__(v8, v7))
  {
    int64_t v9 = v7 + (v8 - v7) / 2;
    if (__OFADD__(v7, (v8 - v7) / 2)) {
      goto LABEL_34;
    }
    if (v9 >= (unint64_t)v4) {
      goto LABEL_35;
    }
    unint64_t v10 = *(void *)(v5 + 8 * v9);
    if (v10 == v6) {
      goto LABEL_20;
    }
    if (v10 < v6)
    {
      uint64_t v7 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_36;
      }
      int64_t v9 = v8;
    }
    uint64_t v8 = v9;
    if (v7 >= v9) {
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return (Swift::Bool)other.cellIds._rawValue;
}

Swift::Bool __swiftcall S2CellUnion.intersects(union:)(VisualIntelligence::S2CellUnion a1)
{
  uint64_t v2 = *(void *)(*(void *)a1.cellIds._rawValue + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = 0;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  uint64_t v5 = *(void *)v1 + 32;
  while (1)
  {
    unint64_t v6 = *(void *)(*(void *)a1.cellIds._rawValue + 32 + 8 * v3);
    if (v4) {
      break;
    }
    int64_t v9 = 0;
LABEL_15:
    BOOL v11 = __OFSUB__(0, v9);
    uint64_t v12 = -v9;
    if (v11) {
      goto LABEL_43;
    }
    BOOL v11 = __OFSUB__(v12, 1);
    int64_t v9 = v12 - 1;
    if (v11) {
      goto LABEL_44;
    }
    if (v9 < 0)
    {
      BOOL v11 = __OFSUB__(0, v9);
      uint64_t v13 = -v9;
      if (v11) {
        goto LABEL_58;
      }
      BOOL v11 = __OFSUB__(v13, 1);
      int64_t v9 = v13 - 1;
      if (v11) {
        goto LABEL_59;
      }
    }
LABEL_20:
    if (v9 < v4)
    {
      uint64_t v14 = *(void *)(v5 + 8 * v9);
      if (__OFSUB__(0, v14)) {
        goto LABEL_52;
      }
      uint64_t v15 = -v14 & v14;
      BOOL v11 = __OFSUB__(v15, 1);
      uint64_t v16 = v15 - 1;
      if (v11) {
        goto LABEL_53;
      }
      BOOL v11 = __OFSUB__(v14, v16);
      unint64_t v17 = v14 - v16;
      if (v11) {
        goto LABEL_54;
      }
      if (__OFSUB__(0, v6)) {
        goto LABEL_55;
      }
      uint64_t v18 = -(uint64_t)v6 & v6;
      BOOL v11 = __OFSUB__(v18, 1);
      uint64_t v19 = v18 - 1;
      if (v11) {
        goto LABEL_56;
      }
      BOOL v11 = __OFADD__(v6, v19);
      unint64_t v20 = v6 + v19;
      if (v11) {
        goto LABEL_57;
      }
      if (v17 <= v20) {
        goto LABEL_37;
      }
    }
    if (v9)
    {
      if (v9 > v4) {
        goto LABEL_45;
      }
      uint64_t v21 = *(void *)(v5 + 8 * v9 - 8);
      if (__OFSUB__(0, v21)) {
        goto LABEL_46;
      }
      uint64_t v22 = -v21 & v21;
      BOOL v11 = __OFSUB__(v22, 1);
      uint64_t v23 = v22 - 1;
      if (v11) {
        goto LABEL_47;
      }
      BOOL v11 = __OFADD__(v21, v23);
      unint64_t v24 = v21 + v23;
      if (v11) {
        goto LABEL_48;
      }
      if (__OFSUB__(0, v6)) {
        goto LABEL_49;
      }
      uint64_t v25 = -(uint64_t)v6 & v6;
      BOOL v11 = __OFSUB__(v25, 1);
      uint64_t v26 = v25 - 1;
      if (v11) {
        goto LABEL_50;
      }
      BOOL v11 = __OFSUB__(v6, v26);
      unint64_t v27 = v6 - v26;
      if (v11) {
        goto LABEL_51;
      }
      if (v24 >= v27)
      {
LABEL_37:
        LOBYTE(a1.cellIds._rawValue) = 1;
        return (Swift::Bool)a1.cellIds._rawValue;
      }
    }
    if (++v3 == v2) {
      return 0;
    }
  }
  uint64_t v7 = 0;
  uint64_t v8 = *(void *)(*(void *)v1 + 16);
  while (!__OFSUB__(v8, v7))
  {
    int64_t v9 = v7 + (v8 - v7) / 2;
    if (__OFADD__(v7, (v8 - v7) / 2)) {
      goto LABEL_40;
    }
    if (v9 >= (unint64_t)v4) {
      goto LABEL_41;
    }
    unint64_t v10 = *(void *)(v5 + 8 * v9);
    if (v10 == v6) {
      goto LABEL_20;
    }
    if (v10 < v6)
    {
      uint64_t v7 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_42;
      }
      int64_t v9 = v8;
    }
    uint64_t v8 = v9;
    if (v7 >= v9) {
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
  return (Swift::Bool)a1.cellIds._rawValue;
}

uint64_t S2CellUnion.leafCellsCovered.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v3 = (unint64_t *)(*(void *)v0 + 32);
  while (1)
  {
    unint64_t v5 = *v3++;
    unint64_t v4 = v5;
    if (v5)
    {
      char v7 = 30;
    }
    else
    {
      unint64_t v6 = HIDWORD(v4);
      if (v4) {
        LODWORD(v6) = v4;
      }
      if (__OFSUB__(0, v6)) {
        goto LABEL_25;
      }
      if (v4) {
        char v7 = 15;
      }
      else {
        char v7 = -1;
      }
      int v8 = -(int)v6 & v6;
      if ((v8 & 0x5555) != 0) {
        v7 += 8;
      }
      if ((v8 & 0x550055) != 0) {
        v7 += 4;
      }
      if ((v8 & 0x5050505) != 0) {
        v7 += 2;
      }
      if ((v8 & 0x11111111) != 0) {
        ++v7;
      }
    }
    uint64_t v9 = 1 << ((60 - 2 * v7) & 0x3E);
    BOOL v10 = __OFADD__(result, v9);
    result += v9;
    if (v10) {
      break;
    }
    if (!--v1) {
      return result;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

double S2CellUnion.averageBasedArea.getter()
{
  double v0 = scalb(0.523598776, -58.0);
  return v0 * (double)S2CellUnion.leafCellsCovered.getter();
}

double S2CellUnion.approxArea.getter()
{
  return sub_1DCE542D8((double (*)(uint64_t))S2Cell.approxArea.getter);
}

double S2CellUnion.exactArea.getter()
{
  return sub_1DCE542D8((double (*)(uint64_t))S2Cell.exactArea.getter);
}

double sub_1DCE542D8(double (*a1)(uint64_t))
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 16);
  if (!v3) {
    return 0.0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  double v6 = 0.0;
  do
  {
    unint64_t v7 = *(void *)(v2 + 8 * v5++ + 32);
    unint64_t v11 = v7;
    uint64_t v8 = S2Cell.init(cellId:)(&v11, (uint64_t)&v15);
    unint64_t v11 = v15;
    __int16 v12 = v16;
    char v13 = v17;
    uint64_t v14 = v18;
    double v9 = a1(v8);
    swift_bridgeObjectRelease();
    double v6 = v6 + v9;
  }
  while (v3 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t S2CellUnion.capBound.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  if (v4)
  {
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    double v7 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    do
    {
      double v13 = *(double *)(v3 + 8 * v6 + 32);
      if (LOBYTE(v13))
      {
        uint64_t v10 = 30;
      }
      else
      {
        uint64_t v14 = HIDWORD(*(void *)&v13);
        if (LODWORD(v13)) {
          LODWORD(v14) = *(void *)(v3 + 8 * v6 + 32);
        }
        if (__OFSUB__(0, v14))
        {
          __break(1u);
          return result;
        }
        if (LODWORD(v13)) {
          uint64_t v15 = 15;
        }
        else {
          uint64_t v15 = -1;
        }
        int v16 = -(int)v14 & v14;
        uint64_t v17 = v15 + 8;
        if ((v16 & 0x5555) == 0) {
          uint64_t v17 = v15;
        }
        if ((v16 & 0x550055) != 0) {
          v17 += 4;
        }
        if ((v16 & 0x5050505) != 0) {
          v17 += 2;
        }
        if ((v16 & 0x11111111) != 0) {
          uint64_t v10 = v17 + 1;
        }
        else {
          uint64_t v10 = v17;
        }
      }
      ++v6;
      double v11 = scalb(0.523598776, 1.0 - (double)v10 + 1.0 - (double)v10);
      double v31 = v13;
      uint64_t result = S2CellId.rawPoint.getter(&v35);
      double v12 = sqrt(v35 * v35 + v36 * v36 + v37 * v37);
      if (v12 != 0.0) {
        double v12 = 1.0 / v12;
      }
      double v7 = v7 + v11 * (v35 * v12);
      double v8 = v8 + v11 * (v36 * v12);
      double v9 = v9 + v11 * (v37 * v12);
    }
    while (v4 != v6);
    swift_bridgeObjectRelease();
    if (v7 == 0.0 && v8 == 0.0 && v9 == 0.0)
    {
      double v18 = 0.0;
      double v19 = 1.0;
      double v20 = 0.0;
    }
    else
    {
      double v21 = sqrt(v9 * v9 + v7 * v7 + v8 * v8);
      if (v21 != 0.0) {
        double v21 = 1.0 / v21;
      }
      double v19 = v7 * v21;
      double v18 = v8 * v21;
      double v20 = v9 * v21;
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    do
    {
      double v24 = *(double *)(v3 + 8 * v22++ + 32);
      double v31 = v19;
      double v32 = v18;
      double v33 = v20;
      uint64_t v34 = v23;
      double v35 = v24;
      S2Cell.init(cellId:)((unint64_t *)&v35, (uint64_t)&v27);
      double v35 = v27;
      LOWORD(v36) = v28;
      BYTE2(v36) = v29;
      double v37 = v30;
      S2Cell.capBound.getter((double *)&v25);
      swift_bridgeObjectRelease();
      *(void *)&v39.axis.x = v25;
      *(void *)&v39.axis.y = v26;
      S2Cap.add(cap:)(v39);
      double v19 = v35;
      double v18 = v36;
      double v20 = v37;
      uint64_t v23 = v38;
    }
    while (v4 != v22);
    uint64_t result = swift_bridgeObjectRelease();
    *(double *)a1 = v19;
    *(double *)(a1 + 8) = v18;
    *(double *)(a1 + 16) = v20;
    *(void *)(a1 + 24) = v23;
  }
  else
  {
    *(void *)a1 = 0x3FF0000000000000;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0xBFF0000000000000;
  }
  return result;
}

uint64_t S2CellUnion.rectBound.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  if (qword_1EAB01DA8 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v5 = *((void *)&xmmword_1EAB032D0 + 1);
  uint64_t v4 = xmmword_1EAB032D0;
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    double v8 = 0.0;
    double v9 = 1.0;
    do
    {
      *(void *)&long long v13 = *(void *)(v3 + 8 * v7 + 32);
      S2Cell.init(cellId:)((unint64_t *)&v13, (uint64_t)&v15);
      uint64_t v11 = v15;
      LOWORD(v12) = v16;
      BYTE2(v12) = v17;
      S2Cell.rectBound.getter(&v13);
      swift_bridgeObjectRelease();
      if (v8 < v9)
      {
        double v8 = *((double *)&v13 + 1);
        double v9 = *(double *)&v13;
      }
      else if (*((double *)&v13 + 1) >= *(double *)&v13)
      {
        if (*(double *)&v13 < v9) {
          double v9 = *(double *)&v13;
        }
        if (v8 <= *((double *)&v13 + 1)) {
          double v8 = *((double *)&v13 + 1);
        }
      }
      ++v7;
      S1Interval.union(with:)((VisualIntelligence::S1Interval)__PAIR128__(v13, v14));
      uint64_t v4 = v11;
      uint64_t v5 = v12;
    }
    while (v6 != v7);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    double v8 = 0.0;
    double v9 = 1.0;
  }
  *(double *)a1 = v9;
  *(double *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t S2CellUnion.contains(cell:)(void *a1)
{
  return sub_1DCE547F0(a1, (uint64_t (*)(void *))S2CellUnion.contains(id:));
}

uint64_t S2CellUnion.mayIntersect(cell:)(void *a1)
{
  return sub_1DCE547F0(a1, (uint64_t (*)(void *))S2CellUnion.intersects(with:));
}

uint64_t sub_1DCE547F0(void *a1, uint64_t (*a2)(void *))
{
  uint64_t v3 = *v2;
  v5[0] = *a1;
  v5[1] = v3;
  return a2(v5) & 1;
}

uint64_t sub_1DCE5483C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCE5486C(a1, a2, a3, (uint64_t (*)(void *))S2CellUnion.contains(id:));
}

uint64_t sub_1DCE54854(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCE5486C(a1, a2, a3, (uint64_t (*)(void *))S2CellUnion.intersects(with:));
}

uint64_t sub_1DCE5486C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *))
{
  uint64_t v5 = *v4;
  v7[0] = *a1;
  v7[1] = v5;
  return a4(v7) & 1;
}

ValueMetadata *type metadata accessor for S2CellUnion()
{
  return &type metadata for S2CellUnion;
}

uint64_t sub_1DCE548C0(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DD048F68();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          unint64_t v83 = *(void *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v86 = v11;
          uint64_t v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_1DCE54F4C((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v86 = sub_1DCD729EC((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1DD0486F8();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      unint64_t v14 = *(void *)(v10 + 8 * v9);
      unint64_t v15 = *(void *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        unint64_t v16 = v14;
        while (1)
        {
          unint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          unint64_t v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      uint64_t v22 = (unint64_t *)(v93 + 8 * v9);
      do
      {
        unint64_t v23 = *(void *)(v10 + 8 * v9);
        uint64_t v24 = v13;
        long long v25 = v22;
        do
        {
          unint64_t v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *long long v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1DCD71FDC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_1DCD71FDC((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    char v29 = v11 + 32;
    double v30 = &v11[16 * v28 + 32];
    *(void *)double v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          double v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          unsigned __int8 v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        os_log_type_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_1DCE54F4C((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        char v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCE54F4C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  unint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      unint64_t v16 = &v4[8 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        unint64_t v17 = (unint64_t *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = (char *)(v17 + 1);
          uint64_t v19 = v6 - 8;
          unint64_t v20 = *((void *)v6 - 1);
          if (*((void *)v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 8;
            if (v18 < v16 || v17 >= (unint64_t *)v16 || v18 != v16) {
              *unint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= (unint64_t *)v6) {
              *unint64_t v17 = v20;
            }
            uint64_t v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    unint64_t v14 = &v4[8 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          unint64_t v23 = v4;
          unint64_t v15 = v6;
        }
        else
        {
          unint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1DCD725EC((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCE551BC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = (void *)*v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = (uint64_t)v4;
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)sub_1DCEC1C00(v4);
  uint64_t v4 = (void *)result;
  *uint64_t v2 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v4[2] > a2) {
    return (uint64_t)faiss::NormalizationTransform::~NormalizationTransform;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1DCE55248(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1DCD742D8(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1DCE55834(v5);
  *a1 = v3;
}

uint64_t sub_1DCE552F0@<X0>(long long *a1@<X0>, char a2@<W1>, _OWORD *a3@<X2>, uint64_t *a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unsigned __int8 v44 = a4;
  unint64_t v45 = a5;
  uint64_t v73 = a6;
  uint64_t v10 = sub_1DD048068();
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = a1[7];
  long long v14 = a1[5];
  long long v70 = a1[6];
  long long v71 = v13;
  long long v15 = a1[7];
  v72[0] = a1[8];
  *(_OWORD *)((char *)v72 + 13) = *(long long *)((char *)a1 + 141);
  long long v16 = a1[3];
  long long v17 = a1[1];
  long long v66 = a1[2];
  long long v67 = v16;
  long long v18 = a1[3];
  long long v19 = a1[5];
  long long v68 = a1[4];
  long long v69 = v19;
  long long v20 = a1[1];
  long long v64 = *a1;
  long long v65 = v20;
  long long v61 = v70;
  long long v62 = v15;
  v63[0] = a1[8];
  *(_OWORD *)((char *)v63 + 13) = *(long long *)((char *)a1 + 141);
  v57[2] = v66;
  long long v58 = v18;
  long long v59 = v68;
  long long v60 = v14;
  v57[0] = v64;
  v57[1] = v17;
  uint64_t v21 = sub_1DCD9C35C(v64);
  uint64_t v23 = v22;
  if (v21 == sub_1DCD9C35C(a2) && v23 == v24)
  {
    sub_1DCD32CC8((uint64_t)&v64);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v25 = sub_1DD048FA8();
    sub_1DCD32CC8((uint64_t)&v64);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      long long v54 = v70;
      long long v55 = v71;
      v56[0] = v72[0];
      *(_OWORD *)((char *)v56 + 13) = *(_OWORD *)((char *)v72 + 13);
      v50[2] = v66;
      long long v51 = v67;
      long long v52 = v68;
      long long v53 = v69;
      v50[0] = v64;
      v50[1] = v65;
      faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v50);
      return sub_1DCD43B04((uint64_t)v50, v73, &qword_1EBE85400);
    }
  }
  uint64_t v46 = v6;
  sub_1DCDB40EC((uint64_t)v12);
  unint64_t v26 = sub_1DD048048();
  os_log_type_t v27 = sub_1DD048848();
  if (!os_log_type_enabled(v26, v27))
  {
LABEL_9:

    (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v48);
    swift_beginAccess();
    BYTE12(v62) = 0;
    LOBYTE(v50[0]) = v57[0];
    *(_OWORD *)((char *)v50 + 8) = *(_OWORD *)((char *)v57 + 8);
    *(_OWORD *)((char *)&v50[1] + 8) = *(_OWORD *)((char *)&v57[1] + 8);
    BYTE8(v50[2]) = BYTE8(v57[2]);
    long long v51 = v58;
    long long v52 = v59;
    long long v53 = v60;
    long long v54 = v61;
    *(void *)&long long v55 = v62;
    DWORD2(v55) = DWORD2(v62);
    WORD6(v55) = __PAIR16__(BYTE13(v62), 0);
    HIWORD(v55) = HIWORD(v62);
    LOWORD(v56[0]) = v63[0];
    *(_OWORD *)((char *)v56 + 8) = *(_OWORD *)((char *)v63 + 8);
    DWORD2(v56[1]) = DWORD2(v63[1]);
    BYTE12(v56[1]) = BYTE12(v63[1]);
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v50);
    return sub_1DCD43B04((uint64_t)v50, v73, &qword_1EBE85400);
  }
  uint64_t v28 = swift_slowAlloc();
  uint64_t v43 = swift_slowAlloc();
  v49[0] = v43;
  *(_DWORD *)uint64_t v28 = 136315650;
  swift_beginAccess();
  long long v29 = a3[1];
  v50[0] = *a3;
  v50[1] = v29;
  uint64_t v30 = NormalizedRect.loggingDescription.getter();
  *(void *)&v50[0] = sub_1DCED7FA0(v30, v31, v49);
  sub_1DD048A28();
  swift_bridgeObjectRelease();
  *(_WORD *)(v28 + 12) = 2080;
  swift_beginAccess();
  uint64_t v32 = sub_1DCD9C35C(v57[0]);
  *(void *)&v50[0] = sub_1DCED7FA0(v32, v33, v49);
  sub_1DD048A28();
  swift_bridgeObjectRelease();
  *(_WORD *)(v28 + 22) = 2080;
  uint64_t v34 = v44;
  uint64_t result = swift_beginAccess();
  unint64_t v36 = v45;
  if ((v45 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v37 = *v34;
    if (*(void *)(v37 + 16) > v45)
    {
      uint64_t v38 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
      uint64_t v39 = (_OWORD *)(v37
                     + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))
                     + *(void *)(v38 + 72) * v36);
      v50[0] = *v39;
      v50[1] = v39[1];
      uint64_t v40 = NormalizedRect.loggingDescription.getter();
      *(void *)&v50[0] = sub_1DCED7FA0(v40, v41, v49);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v26, v27, "%s unselects %s because this region overlaps with %s and satisfies region_suppression_rule.", (uint8_t *)v28, 0x20u);
      uint64_t v42 = v43;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v42, -1, -1);
      MEMORY[0x1E01B07E0](v28, -1, -1);
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

void sub_1DCE55834(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v132 = *(void *)(v4 - 8);
  uint64_t v133 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v129 = (uint64_t)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v139 = (uint64_t)&v124 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v136 = (uint64_t)&v124 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v135 = (uint64_t)&v124 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_1DD048F68();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      sub_1DCE56258(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v126 = v13;
  if (v12 < 2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    unint64_t v131 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      long long v20 = (char *)MEMORY[0x1E4FBC860];
LABEL_105:
      uint64_t v117 = v20;
      uint64_t v125 = v18;
      if (v21 >= 2)
      {
        uint64_t v118 = *a1;
        do
        {
          unint64_t v119 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v118) {
            goto LABEL_147;
          }
          uint64_t v120 = *(void *)&v117[16 * v119 + 32];
          uint64_t v121 = *(void *)&v117[16 * v21 + 24];
          sub_1DCE564DC(v118 + *(void *)(v132 + 72) * v120, v118 + *(void *)(v132 + 72) * *(void *)&v117[16 * v21 + 16], v118 + *(void *)(v132 + 72) * v121, v131);
          if (v2) {
            break;
          }
          if (v121 < v120) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v117 = sub_1DCD729EC((uint64_t)v117);
          }
          if (v119 >= *((void *)v117 + 2)) {
            goto LABEL_137;
          }
          uint64_t v122 = &v117[16 * v119 + 32];
          *(void *)uint64_t v122 = v120;
          *((void *)v122 + 1) = v121;
          unint64_t v123 = *((void *)v117 + 2);
          if (v21 > v123) {
            goto LABEL_138;
          }
          memmove(&v117[16 * v21 + 16], &v117[16 * v21 + 32], 16 * (v123 - v21));
          *((void *)v117 + 2) = v123 - 1;
          unint64_t v21 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v125 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v125 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1DD0486F8();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v132 + 80);
    uint64_t v125 = v16;
    unint64_t v131 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  long long v20 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v138 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    uint64_t v130 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v33 = v19 + 1;
      goto LABEL_25;
    }
    uint64_t v128 = *a1;
    uint64_t v140 = *(void *)(v132 + 72);
    uint64_t v24 = v140;
    uint64_t v25 = v135;
    sub_1DCE59284(v128 + v140 * v23, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v26 = v128 + v24 * v22;
    uint64_t v27 = v136;
    sub_1DCE59284(v26, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    float v28 = *(float *)(v25 + 76);
    float v29 = *(float *)(v27 + 76);
    sub_1DCE592EC(v27, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v30 = v25;
    uint64_t v31 = v128;
    sub_1DCE592EC(v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v32 = v140;
    uint64_t v33 = v22 + 2;
    if (v22 + 2 >= v12)
    {
LABEL_22:
      if (v28 >= v29) {
        goto LABEL_25;
      }
LABEL_43:
      if (v33 < v22) {
        goto LABEL_141;
      }
      if (v22 < v33)
      {
        uint64_t v134 = v12;
        uint64_t v127 = v20;
        uint64_t v55 = 0;
        uint64_t v56 = v32 * (v33 - 1);
        uint64_t v57 = v22;
        uint64_t v58 = v33 * v32;
        uint64_t v59 = v57;
        uint64_t v60 = v57 * v32;
        do
        {
          if (v59 != v33 + v55 - 1)
          {
            uint64_t v62 = v128;
            if (!v128) {
              goto LABEL_146;
            }
            unint64_t v63 = v128 + v60;
            uint64_t v137 = v128 + v56;
            sub_1DCD36EE0(v128 + v60, v129);
            if (v60 < v56 || v63 >= v62 + v58)
            {
              uint64_t v61 = v137;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v61 = v137;
              if (v60 != v56) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1DCD36EE0(v129, v61);
            uint64_t v32 = v140;
          }
          ++v59;
          --v55;
          v56 -= v32;
          v58 -= v32;
          v60 += v32;
        }
        while (v59 < v33 + v55);
        a1 = v138;
        long long v20 = v127;
        uint64_t v22 = v130;
        uint64_t v12 = v134;
      }
      goto LABEL_25;
    }
    uint64_t v124 = v2;
    uint64_t v127 = v20;
    uint64_t v137 = v140 * v23;
    uint64_t v134 = v140 * v33;
    while (1)
    {
      uint64_t v34 = v33;
      uint64_t v35 = v135;
      sub_1DCE59284(v31 + v134, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v36 = v136;
      sub_1DCE59284(v31 + v137, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      BOOL v37 = *(float *)(v35 + 76) >= *(float *)(v36 + 76);
      sub_1DCE592EC(v36, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCE592EC(v35, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v28 < v29 == v37) {
        break;
      }
      ++v33;
      uint64_t v32 = v140;
      v31 += v140;
      if (v12 == v34 + 1)
      {
        uint64_t v33 = v12;
        long long v20 = v127;
        uint64_t v2 = v124;
        uint64_t v22 = v130;
        goto LABEL_22;
      }
    }
    long long v20 = v127;
    uint64_t v2 = v124;
    uint64_t v22 = v130;
    uint64_t v32 = v140;
    if (v28 < v29) {
      goto LABEL_43;
    }
LABEL_25:
    if (v33 < v12)
    {
      if (__OFSUB__(v33, v22)) {
        goto LABEL_139;
      }
      if (v33 - v22 < v126) {
        break;
      }
    }
LABEL_57:
    if (v33 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      long long v20 = sub_1DCD71FDC(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v66 = *((void *)v20 + 2);
    unint64_t v65 = *((void *)v20 + 3);
    unint64_t v21 = v66 + 1;
    if (v66 >= v65 >> 1) {
      long long v20 = sub_1DCD71FDC((char *)(v65 > 1), v66 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    long long v67 = v20 + 32;
    long long v68 = &v20[16 * v66 + 32];
    uint64_t v69 = v137;
    *(void *)long long v68 = v22;
    *((void *)v68 + 1) = v69;
    if (v66)
    {
      while (1)
      {
        unint64_t v70 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v75 = &v67[16 * v21];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_123;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_124;
          }
          unint64_t v82 = v21 - 2;
          unint64_t v83 = &v67[16 * v21 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_126;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_129;
          }
          if (v87 >= v78)
          {
            uint64_t v105 = &v67[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_133;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v99 = *((void *)v20 + 4);
            uint64_t v100 = *((void *)v20 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_88;
          }
          uint64_t v72 = *((void *)v20 + 4);
          uint64_t v71 = *((void *)v20 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_125;
        }
        unint64_t v82 = v21 - 2;
        uint64_t v88 = &v67[16 * v21 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_128;
        }
        uint64_t v94 = &v67[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_131;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_132;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_94:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v93) {
          goto LABEL_127;
        }
        int v101 = &v67[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_130;
        }
        if (v104 < v92) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v110 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v111 = v20;
        uint64_t v112 = &v67[16 * v109];
        uint64_t v113 = *(void *)v112;
        char v114 = &v67[16 * v70];
        uint64_t v115 = *((void *)v114 + 1);
        sub_1DCE564DC(v110 + *(void *)(v132 + 72) * *(void *)v112, v110 + *(void *)(v132 + 72) * *(void *)v114, v110 + *(void *)(v132 + 72) * v115, v131);
        if (v2) {
          goto LABEL_116;
        }
        if (v115 < v113) {
          goto LABEL_120;
        }
        if (v70 > *((void *)v111 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v112 = v113;
        *(void *)&v67[16 * v109 + 8] = v115;
        unint64_t v116 = *((void *)v111 + 2);
        if (v70 >= v116) {
          goto LABEL_122;
        }
        long long v20 = v111;
        unint64_t v21 = v116 - 1;
        memmove(&v67[16 * v70], v114 + 16, 16 * (v116 - 1 - v70));
        *((void *)v111 + 2) = v116 - 1;
        a1 = v138;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v19 = v137;
    if (v137 >= v12)
    {
      uint64_t v18 = v125;
      goto LABEL_105;
    }
  }
  if (__OFADD__(v22, v126)) {
    goto LABEL_142;
  }
  if (v22 + v126 >= v12) {
    uint64_t v38 = v12;
  }
  else {
    uint64_t v38 = v22 + v126;
  }
  if (v38 >= v22)
  {
    if (v33 != v38)
    {
      uint64_t v127 = v20;
      uint64_t v128 = v38;
      uint64_t v124 = v2;
      uint64_t v39 = *(void *)(v132 + 72);
      uint64_t v140 = v39 * (v33 - 1);
      uint64_t v134 = v39;
      uint64_t v40 = v33 * v39;
      do
      {
        uint64_t v42 = 0;
        uint64_t v43 = v22;
        uint64_t v137 = v33;
        while (1)
        {
          unsigned __int8 v44 = v138;
          uint64_t v45 = *v138;
          uint64_t v46 = v40;
          uint64_t v47 = v40 + v42 + *v138;
          uint64_t v48 = v135;
          sub_1DCE59284(v47, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v49 = v140 + v42 + v45;
          uint64_t v50 = v136;
          sub_1DCE59284(v49, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          float v51 = *(float *)(v48 + 76);
          float v52 = *(float *)(v50 + 76);
          sub_1DCE592EC(v50, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCE592EC(v48, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v51 >= v52) {
            break;
          }
          uint64_t v53 = *v44;
          if (!*v44) {
            goto LABEL_144;
          }
          uint64_t v40 = v46;
          uint64_t v54 = v53 + v140 + v42;
          sub_1DCD36EE0(v53 + v46 + v42, v139);
          swift_arrayInitWithTakeFrontToBack();
          sub_1DCD36EE0(v139, v54);
          v42 -= v134;
          ++v43;
          uint64_t v41 = v137;
          if (v137 == v43) {
            goto LABEL_36;
          }
        }
        uint64_t v41 = v137;
        uint64_t v40 = v46;
LABEL_36:
        uint64_t v33 = v41 + 1;
        v140 += v134;
        v40 += v134;
        uint64_t v22 = v130;
      }
      while (v33 != v128);
      uint64_t v33 = v128;
      uint64_t v2 = v124;
      a1 = v138;
      long long v20 = v127;
    }
    goto LABEL_57;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_1DD048C98();
  __break(1u);
}

void sub_1DCE56258(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (float *)((char *)&v24 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (float *)((char *)&v24 - v13);
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v32 = v15 * (v29 - 1);
    uint64_t v28 = v15;
    uint64_t v31 = v15 * v29;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v26;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = a4;
      sub_1DCE59284(v31 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCE59284(v32 + v16 + v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      float v20 = v14[19];
      float v21 = v10[19];
      sub_1DCE592EC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCE592EC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v20 >= v21)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v25) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v23 = v22 + v32 + v16;
      sub_1DCD36EE0(v22 + v31 + v16, v30);
      swift_arrayInitWithTakeFrontToBack();
      sub_1DCD36EE0(v30, v23);
      v16 -= v28;
      ++v17;
      a4 = v19;
      if (v29 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DCE564DC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v40);
  uint64_t v9 = (float *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (float *)((char *)&v38 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      unint64_t v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v31 = a3 - v14;
          sub_1DCE59284(v29 - v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          unint64_t v32 = a2 - v14;
          sub_1DCE59284(a2 - v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          float v33 = v12[19];
          float v34 = v9[19];
          sub_1DCE592EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCE592EC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v33 >= v34)
          {
            unint64_t v35 = v41;
            v41 -= v14;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 -= v14;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v32;
          a3 -= v14;
        }
        while (v32 > v39);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1DCE59284(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCE59284(a4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        float v22 = v12[19];
        float v23 = v9[19];
        sub_1DCE592EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCE592EC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v24 = v43;
        if (v22 >= v23)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_67:
    sub_1DCD720D8(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCE56988(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v144 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v160 = (uint64_t)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v138 - v5;
  MEMORY[0x1F4188790](v7);
  uint64_t v151 = (unint64_t **)((char *)&v138 - v8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868B8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  v143 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868C0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (unint64_t *)((char *)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (unint64_t **)((char *)&v138 - v16);
  MEMORY[0x1F4188790](v18);
  uint64_t v139 = (unint64_t *)((char *)&v138 - v19);
  MEMORY[0x1F4188790](v20);
  uint64_t v138 = (unint64_t *)((char *)&v138 - v21);
  unint64_t v149 = *(void *)(a1 + 16);
  uint64_t v175 = sub_1DCDE1BE8(0, v149);
  id v147 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  double v148 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  unint64_t v22 = 0;
  long long v142 = xmmword_1DD04E910;
  uint64_t v152 = v14;
  uint64_t v153 = v9;
  uint64_t v140 = a1;
  v154 = v17;
  while (1)
  {
    if (v22 == v149)
    {
      unint64_t v24 = v139;
      unint64_t v25 = v149;
      uint64_t v145 = *v147;
      v145(v139, 1, 1, v9);
    }
    else
    {
      if (v22 >= v149) {
        goto LABEL_169;
      }
      unint64_t v25 = v22 + 1;
      unint64_t v26 = v22;
      uint64_t v27 = (uint64_t)&v143[*(int *)(v9 + 48)];
      sub_1DCE59284(a1+ ((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80))+ *(void *)(v144 + 72) * v22, v27, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v28 = v139;
      uint64_t v29 = (uint64_t)v139 + *(int *)(v9 + 48);
      *uint64_t v139 = v26;
      uint64_t v30 = v27;
      unint64_t v24 = v28;
      sub_1DCD36EE0(v30, v29);
      uint64_t v145 = *v147;
      v145(v24, 0, 1, v9);
    }
    unint64_t v141 = v25;
    uint64_t v31 = (uint64_t)v24;
    unint64_t v32 = v138;
    sub_1DCD43B04(v31, (uint64_t)v138, &qword_1EBE868C0);
    int v146 = *v148;
    if (v146(v32, 1, v9) == 1) {
      break;
    }
    unint64_t v161 = *v32;
    uint64_t v33 = (uint64_t)v32 + *(int *)(v9 + 48);
    float v23 = v151;
    sub_1DCD36EE0(v33, (uint64_t)v151);
    if ((v23[13] & 1) == 0)
    {
      swift_bridgeObjectRetain();
      unint64_t v34 = 0;
      while (1)
      {
        if (v34 == v149)
        {
          unint64_t v35 = v149;
          v145(v14, 1, 1, v9);
          unint64_t v158 = v35;
        }
        else
        {
          if (v34 >= v149) {
            goto LABEL_163;
          }
          unint64_t v36 = v34 + 1;
          unint64_t v37 = v34;
          uint64_t v38 = (uint64_t)&v143[*(int *)(v9 + 48)];
          sub_1DCE59284(a1+ ((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80))+ *(void *)(v144 + 72) * v34, v38, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v39 = (uint64_t)v14 + *(int *)(v9 + 48);
          *uint64_t v14 = v37;
          sub_1DCD36EE0(v38, v39);
          v145(v14, 0, 1, v9);
          unint64_t v158 = v36;
        }
        sub_1DCD43B04((uint64_t)v14, (uint64_t)v17, &qword_1EBE868C0);
        if (v146(v17, 1, v9) == 1) {
          break;
        }
        uint64_t v40 = *v17;
        sub_1DCD36EE0((uint64_t)v17 + *(int *)(v9 + 48), (uint64_t)v6);
        char v41 = v6[104];
        sub_1DCE59284((uint64_t)v6, v160, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        if ((v41 & 1) != 0 || v161 == v40 || (v42 = *(void *)(v160 + 48), (uint64_t v43 = *(void *)(v42 + 16)) == 0))
        {
LABEL_11:
          sub_1DCE592EC(v160, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          goto LABEL_12;
        }
        unsigned __int8 v44 = (unsigned char *)(v42 + 156);
        while ((*v44 & 1) == 0)
        {
          v44 += 160;
          if (!--v43) {
            goto LABEL_11;
          }
        }
        sub_1DCE592EC(v160, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v45 = v151[6];
        uint64_t v46 = *(void *)(v45 + 16);
        if (!v46) {
          goto LABEL_12;
        }
        uint64_t v162 = v45 + 32;
        swift_bridgeObjectRetain();
        unint64_t v47 = 0;
        uint64_t v156 = v46;
        uint64_t v157 = v45;
LABEL_27:
        uint64_t v48 = (_OWORD *)(v162 + 160 * v47);
        long long v49 = v48[1];
        v173[0] = *v48;
        v173[1] = v49;
        long long v50 = v48[2];
        long long v51 = v48[3];
        long long v52 = v48[5];
        v173[4] = v48[4];
        v173[5] = v52;
        v173[2] = v50;
        v173[3] = v51;
        long long v53 = v48[6];
        long long v54 = v48[7];
        long long v55 = v48[8];
        *(_OWORD *)((char *)v174 + 13) = *(_OWORD *)((char *)v48 + 141);
        v173[7] = v54;
        v174[0] = v55;
        v173[6] = v53;
        if ((BYTE12(v54) & 1) == 0) {
          goto LABEL_155;
        }
        uint64_t v56 = LOBYTE(v173[0]);
        uint64_t v57 = *((void *)v6 + 6);
        uint64_t v58 = *(void *)(v57 + 16);
        if (!v58)
        {
          sub_1DCD32CC8((uint64_t)v173);
LABEL_116:
          CGFloat v83 = *(double *)v151;
          CGFloat v84 = *((double *)v151 + 1);
          CGFloat v85 = *((double *)v151 + 2);
          CGFloat v86 = *((double *)v151 + 3);
          CGFloat v87 = *((double *)v6 + 1);
          double v159 = *(double *)v6;
          CGFloat v88 = *((double *)v6 + 2);
          CGFloat v89 = *((double *)v6 + 3);
          v176.origin.CGFloat x = v83;
          v176.origin.CGFloat y = v84;
          v176.size.width = v85;
          v176.size.height = v86;
          double Width = CGRectGetWidth(v176);
          CGFloat v150 = v83;
          v177.origin.CGFloat x = v83;
          CGFloat v91 = v84;
          CGFloat v92 = v159;
          v177.origin.CGFloat y = v91;
          v177.size.width = v85;
          v177.size.height = v86;
          double v93 = Width * CGRectGetHeight(v177);
          v178.origin.CGFloat x = v92;
          v178.origin.CGFloat y = v87;
          v178.size.width = v88;
          v178.size.height = v89;
          CGFloat v155 = CGRectGetWidth(v178);
          v179.origin.CGFloat x = v92;
          v179.origin.CGFloat y = v87;
          v179.size.width = v88;
          v179.size.height = v89;
          double Height = CGRectGetHeight(v179);
          if (v93 <= 0.0 || (double v95 = v155 * Height, v95 <= 0.0))
          {
            unint64_t v101 = v161;
            float v102 = 0.0;
          }
          else
          {
            CGFloat v155 = v95;
            v180.origin.CGFloat x = v150;
            v180.origin.CGFloat y = v91;
            v180.size.width = v85;
            v180.size.height = v86;
            v184.origin.CGFloat x = v92;
            v184.origin.CGFloat y = v87;
            v184.size.width = v88;
            v184.size.height = v89;
            CGRect v181 = CGRectIntersection(v180, v184);
            CGFloat x = v181.origin.x;
            CGFloat y = v181.origin.y;
            CGFloat v98 = v181.size.width;
            CGFloat v99 = v181.size.height;
            BOOL IsNull = CGRectIsNull(v181);
            unint64_t v101 = v161;
            float v102 = 0.0;
            if (!IsNull)
            {
              v182.origin.CGFloat x = x;
              v182.origin.CGFloat y = y;
              v182.size.width = v98;
              v182.size.height = v99;
              double v103 = CGRectGetWidth(v182);
              v183.origin.CGFloat x = x;
              v183.origin.CGFloat y = y;
              v183.size.width = v98;
              v183.size.height = v99;
              CGFloat v104 = CGRectGetHeight(v183);
              unint64_t v101 = v161;
              double v105 = v103 * v104;
              double v106 = v155;
              if (v155 >= v93) {
                double v106 = v93;
              }
              float v102 = v105 / v106;
            }
          }
          if ((v101 & 0x8000000000000000) != 0)
          {
LABEL_161:
            __break(1u);
          }
          else
          {
            uint64_t v107 = (void *)v175;
            if (v101 < *(void *)(v175 + 16))
            {
              uint64_t v108 = *(void *)(v175 + 8 * v101 + 32);
              if (v108)
              {
                if (*(void *)(v108 + 16))
                {
                  swift_bridgeObjectRetain();
                  uint64_t v109 = sub_1DCEAD454(v56);
                  float v110 = 0.0;
                  if (v111) {
                    float v110 = *(float *)(*(void *)(v108 + 56) + 4 * v109);
                  }
                  swift_bridgeObjectRelease();
                  unint64_t v101 = v161;
                }
                else
                {
                  float v110 = 0.0;
                }
                if (v102 > v110) {
                  float v110 = v102;
                }
                uint64_t v122 = (void (*)(long long *, void))sub_1DCE551BC((uint64_t)&v164, v101);
                if (!*v121)
                {
                  sub_1DCD32DD4((uint64_t)v173);
                  v122(&v164, 0);
                  goto LABEL_149;
                }
                unint64_t v123 = v121;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v163 = (void *)*v123;
                uint64_t v125 = v163;
                *unint64_t v123 = 0x8000000000000000;
                unint64_t v127 = sub_1DCEAD454(v56);
                uint64_t v128 = v125[2];
                BOOL v129 = (v126 & 1) == 0;
                uint64_t v130 = v128 + v129;
                if (!__OFADD__(v128, v129))
                {
                  char v131 = v126;
                  if (v125[3] < v130)
                  {
                    sub_1DCE7D61C(v130, isUniquelyReferenced_nonNull_native);
                    uint64_t v132 = sub_1DCEAD454(v56);
                    if ((v131 & 1) == (v133 & 1))
                    {
                      unint64_t v127 = v132;
                      goto LABEL_144;
                    }
LABEL_170:
                    sub_1DD049028();
                    __break(1u);
                    JUMPOUT(0x1DCE57B20);
                  }
                  uint64_t v46 = v156;
                  if (isUniquelyReferenced_nonNull_native)
                  {
                    uint64_t v45 = v157;
                    uint64_t v134 = v163;
                    if ((v126 & 1) == 0) {
                      goto LABEL_152;
                    }
LABEL_145:
                    *(float *)(v134[7] + 4 * v127) = v110;
LABEL_154:
                    *unint64_t v123 = v134;
                    swift_bridgeObjectRelease();
                    v122(&v164, 0);
                    sub_1DCD32DD4((uint64_t)v173);
                    uint64_t v14 = v152;
                    uint64_t v9 = v153;
                    uint64_t v17 = v154;
                    goto LABEL_155;
                  }
                  sub_1DCE88248();
LABEL_144:
                  uint64_t v46 = v156;
                  uint64_t v45 = v157;
                  uint64_t v134 = v163;
                  if (v131) {
                    goto LABEL_145;
                  }
LABEL_152:
                  v134[(v127 >> 6) + 8] |= 1 << v127;
                  *(unsigned char *)(v134[6] + v127) = v56;
                  *(float *)(v134[7] + 4 * v127) = v110;
                  uint64_t v135 = v134[2];
                  BOOL v119 = __OFADD__(v135, 1);
                  uint64_t v136 = v135 + 1;
                  if (!v119)
                  {
                    v134[2] = v136;
                    goto LABEL_154;
                  }
LABEL_168:
                  __break(1u);
LABEL_169:
                  __break(1u);
                  goto LABEL_170;
                }
LABEL_164:
                __break(1u);
LABEL_165:
                __break(1u);
                goto LABEL_166;
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03998);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = v142;
              *(unsigned char *)(inited + 32) = v56;
              *(float *)(inited + 36) = v102;
              sub_1DCD32DD4((uint64_t)v173);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039A0);
              uint64_t v113 = (void *)sub_1DD048D08();
              uint64_t v114 = *(unsigned __int8 *)(inited + 32);
              int v115 = *(_DWORD *)(inited + 36);
              swift_retain();
              unint64_t v116 = sub_1DCEAD454(v114);
              if (v117) {
                goto LABEL_165;
              }
              v113[(v116 >> 6) + 8] |= 1 << v116;
              *(unsigned char *)(v113[6] + v116) = v114;
              *(_DWORD *)(v113[7] + 4 * v116) = v115;
              uint64_t v118 = v113[2];
              BOOL v119 = __OFADD__(v118, 1);
              uint64_t v120 = v118 + 1;
              if (v119)
              {
LABEL_166:
                __break(1u);
              }
              else
              {
                v113[2] = v120;
                swift_release();
                swift_bridgeObjectRelease();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v107 = sub_1DCEC1C00(v107);
                }
                uint64_t v17 = v154;
                uint64_t v45 = v157;
                if (v161 < v107[2])
                {
                  v107[v161 + 4] = v113;
                  swift_bridgeObjectRelease();
                  uint64_t v175 = (uint64_t)v107;
                  uint64_t v46 = v156;
                  goto LABEL_155;
                }
              }
              __break(1u);
              goto LABEL_168;
            }
          }
          __break(1u);
LABEL_163:
          __break(1u);
          goto LABEL_164;
        }
        swift_bridgeObjectRetain();
        sub_1DCD32CC8((uint64_t)v173);
        swift_bridgeObjectRetain();
        long long v59 = *(_OWORD *)(v57 + 144);
        long long v170 = *(_OWORD *)(v57 + 128);
        long long v171 = v59;
        v172[0] = *(_OWORD *)(v57 + 160);
        *(_OWORD *)((char *)v172 + 13) = *(_OWORD *)(v57 + 173);
        long long v60 = *(_OWORD *)(v57 + 80);
        long long v166 = *(_OWORD *)(v57 + 64);
        long long v167 = v60;
        long long v61 = *(_OWORD *)(v57 + 112);
        long long v168 = *(_OWORD *)(v57 + 96);
        long long v169 = v61;
        long long v62 = *(_OWORD *)(v57 + 48);
        long long v164 = *(_OWORD *)(v57 + 32);
        long long v165 = v62;
        uint64_t v63 = v58 - 1;
        uint64_t v64 = 192;
        while (2)
        {
          if (BYTE12(v171) != 1) {
            goto LABEL_110;
          }
          unint64_t v65 = 0xE300000000000000;
          uint64_t v66 = 7631457;
          switch((char)v164)
          {
            case 1:
              unint64_t v65 = 0xE600000000000000;
              uint64_t v66 = 0x65727574616ELL;
              break;
            case 2:
              unint64_t v65 = 0xE800000000000000;
              uint64_t v66 = 0x6B72616D646E616CLL;
              break;
            case 3:
              uint64_t v66 = 0x4C6C61727574616ELL;
              unint64_t v65 = 0xEF6B72616D646E61;
              break;
            case 4:
              unint64_t v65 = 0xE500000000000000;
              uint64_t v66 = 0x616964656DLL;
              break;
            case 5:
              unint64_t v65 = 0xE400000000000000;
              uint64_t v66 = 1802465122;
              break;
            case 6:
              unint64_t v65 = 0xE500000000000000;
              uint64_t v66 = 0x6D75626C61;
              break;
            case 7:
              unint64_t v65 = 0xE400000000000000;
              uint64_t v66 = 1937006947;
              break;
            case 8:
              unint64_t v65 = 0xE400000000000000;
              uint64_t v66 = 1936158564;
              break;
            case 9:
              unint64_t v65 = 0xE700000000000000;
              unsigned int v67 = 1835626081;
              goto LABEL_50;
            case 10:
              unint64_t v65 = 0xE500000000000000;
              uint64_t v66 = 0x7364726962;
              break;
            case 11:
              unint64_t v65 = 0xE700000000000000;
              uint64_t v66 = 0x73746365736E69;
              break;
            case 12:
              unint64_t v65 = 0xE800000000000000;
              uint64_t v66 = 0x73656C6974706572;
              break;
            case 13:
              unint64_t v65 = 0xE700000000000000;
              unsigned int v67 = 1835884909;
LABEL_50:
              uint64_t v66 = v67 | 0x736C6100000000;
              break;
            case 14:
              unint64_t v65 = 0xE700000000000000;
              uint64_t v66 = 0x6C657261707061;
              break;
            case 15:
              uint64_t v66 = 0x726F737365636361;
              unint64_t v65 = 0xEB00000000736569;
              break;
            case 16:
              unint64_t v65 = 0xE400000000000000;
              uint64_t v66 = 1685024614;
              break;
            case 17:
              unint64_t v65 = 0xEA0000000000746ELL;
              uint64_t v66 = 0x6F726665726F7473;
              break;
            case 18:
              unsigned int v68 = 1852270963;
              goto LABEL_53;
            case 19:
              unint64_t v65 = 0x80000001DD066AB0;
              uint64_t v66 = 0xD000000000000011;
              break;
            case 20:
              unsigned int v68 = 1869903201;
LABEL_53:
              uint64_t v66 = v68 | 0x626D795300000000;
              unint64_t v65 = 0xEA00000000006C6FLL;
              break;
            case 21:
              uint64_t v66 = 0x676F4C646E617262;
              unint64_t v65 = 0xEF6C6F626D79536FLL;
              break;
            case 22:
              unint64_t v65 = 0xE700000000000000;
              uint64_t v66 = 0x65646F63726162;
              break;
            case 23:
              uint64_t v66 = 0x727574706C756373;
              unint64_t v65 = 0xE900000000000065;
              break;
            case 24:
              unint64_t v65 = 0xE700000000000000;
              uint64_t v66 = 0x656E696C796B73;
              break;
            case 25:
              unint64_t v65 = 0xE800000000000000;
              uint64_t v66 = 0x44327463656A626FLL;
              break;
            default:
              break;
          }
          unint64_t v69 = 0xE300000000000000;
          unint64_t v70 = 7631457;
          switch(v56)
          {
            case 1:
              unint64_t v69 = 0xE600000000000000;
              if (v66 != 0x65727574616ELL) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 2:
              unint64_t v69 = 0xE800000000000000;
              if (v66 != 0x6B72616D646E616CLL) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 3:
              unint64_t v69 = 0xEF6B72616D646E61;
              if (v66 != 0x4C6C61727574616ELL) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 4:
              unint64_t v69 = 0xE500000000000000;
              if (v66 != 0x616964656DLL) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 5:
              unint64_t v69 = 0xE400000000000000;
              if (v66 != 1802465122) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 6:
              unint64_t v69 = 0xE500000000000000;
              if (v66 != 0x6D75626C61) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 7:
              unint64_t v69 = 0xE400000000000000;
              if (v66 != 1937006947) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 8:
              unint64_t v69 = 0xE400000000000000;
              if (v66 != 1936158564) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 9:
              unint64_t v69 = 0xE700000000000000;
              uint64_t v72 = 1835626081;
              goto LABEL_91;
            case 10:
              unint64_t v69 = 0xE500000000000000;
              if (v66 != 0x7364726962) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 11:
              unint64_t v69 = 0xE700000000000000;
              unint64_t v71 = 0x746365736E69;
              goto LABEL_92;
            case 12:
              unint64_t v69 = 0xE800000000000000;
              if (v66 != 0x73656C6974706572) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 13:
              unint64_t v69 = 0xE700000000000000;
              uint64_t v72 = 1835884909;
LABEL_91:
              unint64_t v71 = v72 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_92:
              if (v66 != (v71 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 14:
              unint64_t v69 = 0xE700000000000000;
              if (v66 != 0x6C657261707061) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 15:
              unint64_t v69 = 0xEB00000000736569;
              if (v66 != 0x726F737365636361) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 16:
              unint64_t v69 = 0xE400000000000000;
              if (v66 != 1685024614) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 17:
              unint64_t v69 = 0xEA0000000000746ELL;
              if (v66 != 0x6F726665726F7473) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 18:
              unsigned int v74 = 1852270963;
              goto LABEL_97;
            case 19:
              unint64_t v69 = 0x80000001DD066AB0;
              unint64_t v70 = 0xD000000000000011;
              goto LABEL_107;
            case 20:
              unsigned int v74 = 1869903201;
LABEL_97:
              unint64_t v69 = 0xEA00000000006C6FLL;
              if (v66 != (v74 | 0x626D795300000000)) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 21:
              unint64_t v69 = 0xEF6C6F626D79536FLL;
              if (v66 != 0x676F4C646E617262) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 22:
              unint64_t v69 = 0xE700000000000000;
              uint64_t v73 = 0x646F63726162;
              goto LABEL_104;
            case 23:
              unint64_t v69 = 0xE900000000000065;
              if (v66 != 0x727574706C756373) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 24:
              unint64_t v69 = 0xE700000000000000;
              uint64_t v73 = 0x6E696C796B73;
LABEL_104:
              if (v66 != (v73 & 0xFFFFFFFFFFFFLL | 0x65000000000000)) {
                goto LABEL_109;
              }
              goto LABEL_108;
            case 25:
              unint64_t v69 = 0xE800000000000000;
              if (v66 != 0x44327463656A626FLL) {
                goto LABEL_109;
              }
              goto LABEL_108;
            default:
LABEL_107:
              if (v66 != v70) {
                goto LABEL_109;
              }
LABEL_108:
              if (v65 != v69)
              {
LABEL_109:
                char v75 = sub_1DD048FA8();
                sub_1DCD32CC8((uint64_t)&v164);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1DCD32DD4((uint64_t)&v164);
                if (v75) {
                  goto LABEL_148;
                }
LABEL_110:
                if (!v63)
                {
                  swift_bridgeObjectRelease_n();
                  uint64_t v14 = v152;
                  uint64_t v9 = v153;
                  goto LABEL_116;
                }
                long long v76 = *(_OWORD *)(v57 + v64 + 16);
                long long v164 = *(_OWORD *)(v57 + v64);
                long long v165 = v76;
                long long v77 = *(_OWORD *)(v57 + v64 + 32);
                long long v78 = *(_OWORD *)(v57 + v64 + 48);
                long long v79 = *(_OWORD *)(v57 + v64 + 80);
                long long v168 = *(_OWORD *)(v57 + v64 + 64);
                long long v169 = v79;
                long long v166 = v77;
                long long v167 = v78;
                long long v80 = *(_OWORD *)(v57 + v64 + 96);
                long long v81 = *(_OWORD *)(v57 + v64 + 112);
                long long v82 = *(_OWORD *)(v57 + v64 + 128);
                *(_OWORD *)((char *)v172 + 13) = *(_OWORD *)(v57 + v64 + 141);
                long long v171 = v81;
                v172[0] = v82;
                long long v170 = v80;
                v64 += 160;
                --v63;
                continue;
              }
              sub_1DCD32CC8((uint64_t)&v164);
              swift_bridgeObjectRelease_n();
              sub_1DCD32DD4((uint64_t)&v164);
LABEL_148:
              swift_bridgeObjectRelease_n();
              sub_1DCD32DD4((uint64_t)v173);
              uint64_t v14 = v152;
              uint64_t v9 = v153;
LABEL_149:
              uint64_t v17 = v154;
              uint64_t v46 = v156;
              uint64_t v45 = v157;
LABEL_155:
              if (++v47 != v46)
              {
                if (v47 >= *(void *)(v45 + 16))
                {
                  __break(1u);
                  goto LABEL_161;
                }
                goto LABEL_27;
              }
              swift_bridgeObjectRelease();
              a1 = v140;
LABEL_12:
              sub_1DCE592EC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              unint64_t v34 = v158;
              break;
          }
          break;
        }
      }
      swift_bridgeObjectRelease();
      float v23 = v151;
    }
    sub_1DCE592EC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    unint64_t v22 = v141;
  }
  swift_bridgeObjectRelease();
  return v175;
}

void sub_1DCE57BF0(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v67 = a3;
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v66 = (char *)&v64 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char **)((char *)&v64 - v15);
  uint64_t v17 = type metadata accessor for VisualUnderstanding.ImageRegion() - 8;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  unint64_t v22 = (char *)&v64 - v21;
  MEMORY[0x1F4188790](v23);
  unint64_t v25 = (_OWORD *)((char *)&v64 - v24);
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v64 - v28;
  if ((a5 & 0x100000000) == 0 && *(float *)&a5 > 0.0)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v30 = *(void *)(a1 + 16);
      if (v30 > a2)
      {
        uint64_t v64 = v11;
        uint64_t v31 = a1 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
        uint64_t v32 = *(void *)(v27 + 72);
        sub_1DCE59284(v31 + v32 * a2, (uint64_t)&v64 - v28, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        if (v30 > v67)
        {
          uint64_t v65 = a4;
          sub_1DCE59284(v31 + v32 * v67, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v33 = *((void *)v29 + 6);
          uint64_t v34 = *(void *)(v33 + 16);
          if (v34)
          {
            uint64_t v35 = *(void *)(v65 + 32);
            uint64_t v36 = *(void *)(v65 + 40);
            unint64_t v37 = (void *)(v33 + 136);
            while (1)
            {
              if (*(v37 - 2))
              {
                BOOL v38 = *(v37 - 1) == v35 && *v37 == v36;
                if (v38 || (sub_1DD048FA8() & 1) != 0) {
                  break;
                }
              }
              v37 += 20;
              if (!--v34) {
                goto LABEL_25;
              }
            }
            sub_1DCE59284((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            sub_1DCE59284(v65, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
            uint64_t v39 = *((void *)v22 + 6);
            uint64_t v40 = *(void *)(v39 + 16);
            if (v40)
            {
              uint64_t v41 = v16[2];
              uint64_t v42 = v16[3];
              uint64_t v43 = (void *)(v39 + 136);
              do
              {
                if (*(v43 - 2))
                {
                  BOOL v44 = *(v43 - 1) == v41 && *v43 == v42;
                  if (v44 || (sub_1DD048FA8() & 1) != 0) {
                    goto LABEL_45;
                  }
                }
                v43 += 20;
              }
              while (--v40);
            }
          }
          else
          {
LABEL_25:
            sub_1DCE59284((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            sub_1DCE59284(v65, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
          }
          sub_1DCE592EC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCE592EC((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
          uint64_t v45 = *((void *)v29 + 6);
          uint64_t v46 = *(void *)(v45 + 16);
          uint64_t v16 = v66;
          if (v46)
          {
            uint64_t v47 = *(void *)(v65 + 16);
            uint64_t v48 = *(void *)(v65 + 24);
            long long v49 = (void *)(v45 + 136);
            while (1)
            {
              if (*(v49 - 2))
              {
                BOOL v50 = *(v49 - 1) == v47 && *v49 == v48;
                if (v50 || (sub_1DD048FA8() & 1) != 0) {
                  break;
                }
              }
              v49 += 20;
              if (!--v46) {
                goto LABEL_47;
              }
            }
            sub_1DCE59284((uint64_t)v25, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            sub_1DCE59284(v65, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
            uint64_t v51 = *((void *)v19 + 6);
            uint64_t v52 = *(void *)(v51 + 16);
            if (v52)
            {
              uint64_t v53 = v16[4];
              uint64_t v54 = v16[5];
              long long v55 = (void *)(v51 + 136);
              while (1)
              {
                if (*(v55 - 2))
                {
                  BOOL v56 = *(v55 - 1) == v53 && *v55 == v54;
                  if (v56 || (sub_1DD048FA8() & 1) != 0) {
                    break;
                  }
                }
                v55 += 20;
                if (!--v52) {
                  goto LABEL_48;
                }
              }
              unint64_t v22 = v19;
LABEL_45:
              sub_1DCE592EC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              sub_1DCE592EC((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
              uint64_t v57 = v65;
              float v58 = *(float *)(v65 + 48);
              long long v59 = *((_OWORD *)v29 + 1);
              v68[2] = *(_OWORD *)v29;
              v68[3] = v59;
              long long v60 = v25[1];
              v68[0] = *v25;
              v68[1] = v60;
              float v61 = sub_1DCDBCB60((CGFloat *)v68);
              sub_1DCE592EC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              uint64_t v62 = (uint64_t)v64;
              sub_1DCE59284(v57, (uint64_t)v64, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
              if (v58 <= v61)
              {
                sub_1DCE592EC(v62, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
                sub_1DCE592EC((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                return;
              }
              sub_1DCE592EC(v62, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
              uint64_t v63 = (uint64_t)v29;
              goto LABEL_49;
            }
          }
          else
          {
LABEL_47:
            sub_1DCE59284((uint64_t)v25, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            sub_1DCE59284(v65, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
          }
LABEL_48:
          sub_1DCE592EC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCE592EC((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
          sub_1DCE592EC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v63 = (uint64_t)v29;
LABEL_49:
          sub_1DCE592EC(v63, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          return;
        }
LABEL_54:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_54;
  }
}

unint64_t sub_1DCE58258(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule(0);
  uint64_t v141 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v132 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v126 = (uint64_t)&v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v124 = (char *)&v122 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v123 = (uint64_t)&v122 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v125 = (uint64_t)&v122 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v128 = (uint64_t)&v122 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v140 = (uint64_t)&v122 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v151 = (_OWORD *)((char *)&v122 - v21);
  MEMORY[0x1F4188790](v22);
  uint64_t v130 = (uint64_t)&v122 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v129 = (uint64_t)&v122 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v139 = (uint64_t)&v122 - v27;
  v161[0] = a1;
  unint64_t v127 = a1;
  swift_bridgeObjectRetain();
  unint64_t v28 = 0;
  sub_1DCE55248(v161);
  uint64_t v162 = v161[0];
  uint64_t v131 = v161[0][2];
  if (!v131)
  {
    unint64_t v134 = MEMORY[0x1E4FBC860];
    goto LABEL_120;
  }
  swift_beginAccess();
  unint64_t v29 = 0;
  uint64_t v30 = MEMORY[0x1E4FBC860];
  unint64_t v134 = MEMORY[0x1E4FBC860];
  uint64_t v137 = a2;
  CGFloat v150 = v7;
  while (1)
  {
    unint64_t v33 = v162[2];
    if (v29 >= v33) {
      goto LABEL_136;
    }
    unint64_t v32 = v29 + 1;
    unint64_t v146 = (*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
    uint64_t v145 = *(void *)(v132 + 72);
    unint64_t v136 = v145 * v29;
    uint64_t v34 = (uint64_t)v162 + v146 + v145 * v29;
    if (*(unsigned char *)(v34 + 104) == 1) {
      goto LABEL_4;
    }
    unint64_t v152 = v29;
    unint64_t v133 = v29 + 1;
    unint64_t v135 = v33;
    sub_1DCE59284(v34, v139, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    unint64_t v35 = v135;
    if (v133 != v135) {
      break;
    }
LABEL_94:
    uint64_t v153 = v30;
    unint64_t v96 = v28;
    unint64_t v2 = *(void *)(v139 + 48);
    uint64_t v97 = *(void *)(v2 + 16);
    if (v97)
    {
      swift_bridgeObjectRetain();
      CGFloat v98 = (float *)(v2 + 156);
      CGFloat v99 = (char *)MEMORY[0x1E4FBC860];
      do
      {
        if (*(unsigned char *)v98) {
          float v100 = *(v98 - 3);
        }
        else {
          float v100 = 0.0;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          CGFloat v99 = sub_1DCE9D9E0(0, *((void *)v99 + 2) + 1, 1, v99);
        }
        unint64_t v102 = *((void *)v99 + 2);
        unint64_t v101 = *((void *)v99 + 3);
        if (v102 >= v101 >> 1) {
          CGFloat v99 = sub_1DCE9D9E0((char *)(v101 > 1), v102 + 1, 1, v99);
        }
        *((void *)v99 + 2) = v102 + 1;
        *(float *)&v99[4 * v102 + 32] = v100;
        v98 += 40;
        --v97;
      }
      while (v97);
      swift_bridgeObjectRelease();
      uint64_t v103 = *((void *)v99 + 2);
      if (v103)
      {
LABEL_105:
        float v104 = *((float *)v99 + 8);
        uint64_t v105 = v103 - 1;
        if (v105)
        {
          double v106 = (float *)(v99 + 36);
          do
          {
            float v107 = *v106++;
            float v108 = v107;
            if (v104 < v107) {
              float v104 = v108;
            }
            --v105;
          }
          while (v105);
        }
        goto LABEL_113;
      }
    }
    else
    {
      CGFloat v99 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v103 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v103) {
        goto LABEL_105;
      }
    }
    float v104 = 0.0;
LABEL_113:
    swift_bridgeObjectRelease();
    uint64_t v109 = v139;
    *(float *)(v139 + 72) = v104;
    sub_1DCE59284(v109, v128, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v134 = sub_1DCE9D7A0(0, *(void *)(v134 + 16) + 1, 1, v134);
    }
    unint64_t v111 = *(void *)(v134 + 16);
    unint64_t v110 = *(void *)(v134 + 24);
    if (v111 >= v110 >> 1) {
      unint64_t v134 = sub_1DCE9D7A0(v110 > 1, v111 + 1, 1, v134);
    }
    unint64_t v31 = v134;
    *(void *)(v134 + 16) = v111 + 1;
    sub_1DCD36EE0(v128, v31 + v146 + v111 * v145);
    sub_1DCE592EC(v139, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    unint64_t v28 = v96;
    uint64_t v30 = v153;
    unint64_t v32 = v133;
LABEL_4:
    unint64_t v29 = v32;
    if (v32 == v131)
    {
LABEL_119:
      swift_bridgeObjectRelease();
LABEL_120:
      uint64_t v112 = v127[2];
      if (v112)
      {
        unint64_t v28 = (*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
        uint64_t v113 = (uint64_t)v127 + v28;
        unint64_t v2 = *(void *)(v132 + 72);
        swift_bridgeObjectRetain();
        uint64_t v114 = (uint64_t)v124;
        while (1)
        {
          sub_1DCE59284(v113, v114, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (*(unsigned char *)(v114 + 104)) {
            break;
          }
          sub_1DCE592EC(v114, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          v113 += v2;
          if (!--v112)
          {
            swift_bridgeObjectRelease();
            goto LABEL_129;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v115 = v123;
        sub_1DCD36EE0(v114, v123);
        uint64_t v116 = v115;
        uint64_t v117 = v125;
        sub_1DCD36EE0(v116, v125);
        sub_1DCE59284(v117, v126, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_137;
        }
        goto LABEL_126;
      }
      goto LABEL_129;
    }
  }
  unint64_t v36 = v133;
  while (1)
  {
    if (v36 >= v35) {
      goto LABEL_131;
    }
    if (v36 >= v162[2]) {
      goto LABEL_132;
    }
    unint64_t v154 = v36;
    uint64_t v37 = (uint64_t)v162 + v146 + v36 * v145;
    if (*(unsigned char *)(v37 + 104)) {
      goto LABEL_92;
    }
    uint64_t v38 = *(void *)(v139 + 48);
    uint64_t v39 = *(void *)(v38 + 16);
    if (!v39) {
      goto LABEL_92;
    }
    uint64_t v40 = (unsigned char *)(v38 + 156);
    while ((*v40 & 1) == 0)
    {
      v40 += 160;
      if (!--v39) {
        goto LABEL_92;
      }
    }
    unint64_t v41 = v28;
    unint64_t v2 = (unint64_t)type metadata accessor for VisualUnderstanding.ImageRegion;
    uint64_t v42 = v129;
    sub_1DCE59284((uint64_t)v162 + v146 + v136, v129, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v43 = v37;
    uint64_t v44 = v130;
    sub_1DCE59284(v43, v130, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v45 = sub_1DCF2C830(v42, v44);
    sub_1DCE592EC(v44, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCE592EC(v42, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v147 = *((void *)v45 + 2);
    if (v147) {
      break;
    }
    swift_bridgeObjectRelease();
    unint64_t v28 = v41;
    unint64_t v35 = v135;
LABEL_92:
    unint64_t v48 = v154;
LABEL_93:
    unint64_t v36 = v48 + 1;
    if (v36 == v35) {
      goto LABEL_94;
    }
  }
  unint64_t v46 = 0;
  unint64_t v47 = *(void *)(a2 + 16);
  v143 = v45;
  uint64_t v144 = v45 + 32;
  unint64_t v28 = v41;
  unint64_t v48 = v154;
  unint64_t v142 = v47;
  while (1)
  {
    if (v46 >= *((void *)v45 + 2))
    {
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    if (v47) {
      break;
    }
LABEL_21:
    if (++v46 == v147)
    {
      swift_bridgeObjectRelease();
      unint64_t v35 = v135;
      goto LABEL_93;
    }
  }
  unint64_t v148 = v46;
  unint64_t v149 = v28;
  uint64_t v155 = v144[v46];
  uint64_t v49 = v141;
  uint64_t v50 = a2 + ((*(unsigned __int8 *)(v141 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v141 + 80));
  unint64_t v28 = v47;
  swift_bridgeObjectRetain();
  uint64_t v153 = *(void *)(v49 + 72);
  while (2)
  {
    sub_1DCE59284(v50, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
    unint64_t v57 = 0xE300000000000000;
    uint64_t v58 = 7631457;
    switch(v155)
    {
      case 1:
        unint64_t v57 = 0xE600000000000000;
        uint64_t v58 = 0x65727574616ELL;
        break;
      case 2:
        unint64_t v57 = 0xE800000000000000;
        uint64_t v58 = 0x6B72616D646E616CLL;
        break;
      case 3:
        unint64_t v57 = 0xEF6B72616D646E61;
        uint64_t v58 = 0x4C6C61727574616ELL;
        break;
      case 4:
        unint64_t v57 = 0xE500000000000000;
        uint64_t v58 = 0x616964656DLL;
        break;
      case 5:
        unint64_t v57 = 0xE400000000000000;
        uint64_t v58 = 1802465122;
        break;
      case 6:
        unint64_t v57 = 0xE500000000000000;
        uint64_t v58 = 0x6D75626C61;
        break;
      case 7:
        unint64_t v57 = 0xE400000000000000;
        uint64_t v58 = 1937006947;
        break;
      case 8:
        unint64_t v57 = 0xE400000000000000;
        uint64_t v58 = 1936158564;
        break;
      case 9:
        unint64_t v57 = 0xE700000000000000;
        unsigned int v59 = 1835626081;
        goto LABEL_47;
      case 10:
        unint64_t v57 = 0xE500000000000000;
        uint64_t v58 = 0x7364726962;
        break;
      case 11:
        unint64_t v57 = 0xE700000000000000;
        uint64_t v58 = 0x73746365736E69;
        break;
      case 12:
        unint64_t v57 = 0xE800000000000000;
        uint64_t v58 = 0x73656C6974706572;
        break;
      case 13:
        unint64_t v57 = 0xE700000000000000;
        unsigned int v59 = 1835884909;
LABEL_47:
        uint64_t v58 = v59 | 0x736C6100000000;
        break;
      case 14:
        unint64_t v57 = 0xE700000000000000;
        uint64_t v58 = 0x6C657261707061;
        break;
      case 15:
        unint64_t v57 = 0xEB00000000736569;
        uint64_t v58 = 0x726F737365636361;
        break;
      case 16:
        unint64_t v57 = 0xE400000000000000;
        uint64_t v58 = 1685024614;
        break;
      case 17:
        unint64_t v57 = 0xEA0000000000746ELL;
        uint64_t v58 = 0x6F726665726F7473;
        break;
      case 18:
        unsigned int v60 = 1852270963;
        goto LABEL_50;
      case 19:
        unint64_t v57 = 0x80000001DD066AB0;
        uint64_t v58 = 0xD000000000000011;
        break;
      case 20:
        unsigned int v60 = 1869903201;
LABEL_50:
        uint64_t v58 = v60 | 0x626D795300000000;
        unint64_t v57 = 0xEA00000000006C6FLL;
        break;
      case 21:
        unint64_t v57 = 0xEF6C6F626D79536FLL;
        uint64_t v58 = 0x676F4C646E617262;
        break;
      case 22:
        unint64_t v57 = 0xE700000000000000;
        uint64_t v58 = 0x65646F63726162;
        break;
      case 23:
        unint64_t v57 = 0xE900000000000065;
        uint64_t v58 = 0x727574706C756373;
        break;
      case 24:
        unint64_t v57 = 0xE700000000000000;
        uint64_t v58 = 0x656E696C796B73;
        break;
      case 25:
        unint64_t v57 = 0xE800000000000000;
        uint64_t v58 = 0x44327463656A626FLL;
        break;
      default:
        break;
    }
    if (*v7 == v58 && v7[1] == v57)
    {
      swift_bridgeObjectRelease();
      unint64_t v62 = *(void *)(v30 + 16);
      if (v62) {
        goto LABEL_62;
      }
      goto LABEL_68;
    }
    unint64_t v2 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if ((v2 & 1) == 0) {
      goto LABEL_27;
    }
    unint64_t v62 = *(void *)(v30 + 16);
    if (!v62)
    {
LABEL_68:
      swift_bridgeObjectRelease();
      uint64_t v68 = swift_bridgeObjectRetain();
      uint64_t v30 = sub_1DCE56988(v68);
      swift_bridgeObjectRelease();
      unint64_t v62 = *(void *)(v30 + 16);
    }
LABEL_62:
    if (v154 >= v62)
    {
      __break(1u);
      goto LABEL_119;
    }
    uint64_t v63 = (uint64_t)v162;
    uint64_t v64 = *(void *)(v30 + 8 * v154 + 32);
    if (v64)
    {
      uint64_t v65 = *(void *)(v64 + 16);
      swift_bridgeObjectRetain();
      uint64_t v51 = 3212836864;
      if (v65)
      {
        swift_bridgeObjectRetain();
        uint64_t v66 = sub_1DCEAD454(v155);
        if (v67)
        {
          uint64_t v51 = *(unsigned int *)(*(void *)(v64 + 56) + 4 * v66);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v51 = 3212836864;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v51 = 0;
    }
    LOBYTE(v161[0]) = v64 == 0;
    sub_1DCE57BF0(v63, v152, v154, (uint64_t)v7, v51 | ((unint64_t)(v64 == 0) << 32));
    unint64_t v53 = v52;
    unint64_t v2 = v54;
    char v56 = v55;
    swift_bridgeObjectRelease();
    if (v56)
    {
LABEL_27:
      sub_1DCE592EC((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
      v50 += v153;
      if (!--v28)
      {
        swift_bridgeObjectRelease();
        unint64_t v28 = v149;
        unint64_t v48 = v154;
        uint64_t v45 = v143;
LABEL_20:
        unint64_t v46 = v148;
        unint64_t v47 = v142;
        goto LABEL_21;
      }
      continue;
    }
    break;
  }
  if ((v53 & 0x8000000000000000) != 0) {
    goto LABEL_133;
  }
  if (v53 >= *(void *)(v63 + 16)) {
    goto LABEL_134;
  }
  uint64_t v69 = v53 * v145;
  unint64_t v70 = v151;
  sub_1DCE59284(v63 + v146 + v53 * v145, (uint64_t)v151, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  swift_beginAccess();
  uint64_t v71 = *((void *)v70 + 6);
  uint64_t v72 = *(void *)(v71 + 16);
  if (v72)
  {
    uint64_t v153 = v30;
    uint64_t v138 = v69;
    swift_bridgeObjectRetain();
    uint64_t v73 = v72 - 1;
    unsigned int v74 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v75 = 32;
    unint64_t v76 = v149;
    while (1)
    {
      long long v77 = *(_OWORD *)(v71 + v75 + 112);
      v158[6] = *(_OWORD *)(v71 + v75 + 96);
      v158[7] = v77;
      v159[0] = *(_OWORD *)(v71 + v75 + 128);
      *(_OWORD *)((char *)v159 + 13) = *(_OWORD *)(v71 + v75 + 141);
      long long v78 = *(_OWORD *)(v71 + v75 + 48);
      v158[2] = *(_OWORD *)(v71 + v75 + 32);
      v158[3] = v78;
      long long v79 = *(_OWORD *)(v71 + v75 + 80);
      v158[4] = *(_OWORD *)(v71 + v75 + 64);
      v158[5] = v79;
      long long v80 = *(_OWORD *)(v71 + v75 + 16);
      v158[0] = *(_OWORD *)(v71 + v75);
      v158[1] = v80;
      sub_1DCE552F0(v158, v155, v151, (uint64_t *)&v162, v2, (uint64_t)v156);
      sub_1DCD43B04((uint64_t)v156, (uint64_t)v160, &qword_1EBE85400);
      sub_1DCD43B04((uint64_t)v160, (uint64_t)v161, &qword_1EBE85400);
      if (sub_1DCD32CA4((uint64_t)v161) != 1)
      {
        unint64_t v81 = v76;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unsigned int v74 = sub_1DCE9D680(0, v74[2] + 1, 1, v74);
        }
        unint64_t v83 = v74[2];
        unint64_t v82 = v74[3];
        if (v83 >= v82 >> 1) {
          unsigned int v74 = sub_1DCE9D680((void *)(v82 > 1), v83 + 1, 1, v74);
        }
        sub_1DCD43B04((uint64_t)v160, (uint64_t)v156, &qword_1EBE85400);
        v74[2] = v83 + 1;
        CGFloat v84 = &v74[20 * v83];
        long long v85 = v156[1];
        v84[2] = v156[0];
        v84[3] = v85;
        long long v86 = v156[5];
        long long v88 = v156[2];
        long long v87 = v156[3];
        v84[6] = v156[4];
        v84[7] = v86;
        v84[4] = v88;
        v84[5] = v87;
        long long v90 = v156[7];
        long long v89 = v157[0];
        long long v91 = v156[6];
        *(_OWORD *)((char *)v84 + 173) = *(_OWORD *)((char *)v157 + 13);
        v84[9] = v90;
        v84[10] = v89;
        v84[8] = v91;
        unint64_t v76 = v81;
        uint64_t v7 = v150;
      }
      if (!v73) {
        break;
      }
      --v73;
      v75 += 160;
    }
    unint64_t v149 = v76;
    a2 = v137;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v69 = v138;
    uint64_t v30 = v153;
  }
  else
  {
    swift_bridgeObjectRelease();
    unsigned int v74 = (void *)MEMORY[0x1E4FBC860];
  }
  CGFloat v92 = v151;
  *((void *)v151 + 6) = v74;
  swift_bridgeObjectRelease();
  sub_1DCE59284((uint64_t)v92, v140, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  swift_beginAccess();
  unint64_t v2 = (unint64_t)v162;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v162 = (void *)v2;
  uint64_t v45 = v143;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v2 = sub_1DCEC1BEC(v2);
    uint64_t v162 = (void *)v2;
  }
  unint64_t v28 = v149;
  if ((int64_t)v53 < *(void *)(v2 + 16))
  {
    sub_1DCD3700C(v140, v2 + v146 + v69);
    swift_endAccess();
    sub_1DCE592EC((uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_RegionSelectionConfig.RegionSuppressionRule);
    if (v152 == v53)
    {
      uint64_t v94 = v139;
      sub_1DCE592EC(v139, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v95 = v94;
      unint64_t v28 = v149;
      sub_1DCE59284((uint64_t)v151, v95, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    }
    sub_1DCE592EC((uint64_t)v151, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    unint64_t v48 = v154;
    goto LABEL_20;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  unint64_t v134 = sub_1DCE9D7A0(0, *(void *)(v134 + 16) + 1, 1, v134);
LABEL_126:
  unint64_t v119 = *(void *)(v134 + 16);
  unint64_t v118 = *(void *)(v134 + 24);
  if (v119 >= v118 >> 1) {
    unint64_t v134 = sub_1DCE9D7A0(v118 > 1, v119 + 1, 1, v134);
  }
  unint64_t v120 = v134;
  *(void *)(v134 + 16) = v119 + 1;
  sub_1DCD36EE0(v126, v120 + v28 + v119 * v2);
  sub_1DCE592EC(v125, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_129:
  swift_bridgeObjectRelease();
  return v134;
}

uint64_t sub_1DCE59284(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCE592EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCE5934C()
{
  uint64_t v0 = sub_1DD0481A8();
  __swift_allocate_value_buffer(v0, qword_1EBE857C8);
  *(void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EBE857C8) = 10;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);
  return v1();
}

uint64_t sub_1DCE593DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v93 = a4;
  uint64_t v98 = a3;
  uint64_t v100 = a2;
  uint64_t v96 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v90 = (uint64_t)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1DD048068();
  uint64_t v101 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v94 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  CGFloat v92 = (char *)&v87 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v97 = (uint64_t)&v87 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85380);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1DD0481A8();
  uint64_t v99 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103);
  long long v89 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  long long v91 = (char *)&v87 - v16;
  MEMORY[0x1F4188790](v17);
  unint64_t v102 = (char *)&v87 - v18;
  uint64_t v19 = sub_1DD048878();
  MEMORY[0x1F4188790](v19);
  uint64_t v20 = sub_1DD0481D8();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v21 = sub_1DD048898();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCE6B034();
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, *MEMORY[0x1E4FBCC68], v21);
  sub_1DD0481C8();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  v106[0] = MEMORY[0x1E4FBC860];
  sub_1DCE6B074(&qword_1EBE87138, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87120);
  uint64_t v26 = v104;
  sub_1DCD52850((unint64_t *)&qword_1EBE87128, &qword_1EBE87120);
  uint64_t v27 = v99;
  sub_1DD048AE8();
  uint64_t v28 = v103;
  *(void *)(v26 + 16) = sub_1DD0488C8();
  uint64_t v29 = OBJC_IVAR____TtC18VisualIntelligence14NetworkService_completions;
  *(void *)(v26 + v29) = sub_1DCDB9ECC(v25);
  uint64_t v30 = OBJC_IVAR____TtC18VisualIntelligence14NetworkService_encryptedCompletions;
  *(void *)(v26 + v30) = sub_1DCDB9ED8(v25);
  uint64_t v31 = OBJC_IVAR____TtC18VisualIntelligence14NetworkService_batchEncryptedCompletions;
  *(void *)(v26 + v31) = sub_1DCDBA0D4(v25);
  uint64_t v32 = OBJC_IVAR____TtC18VisualIntelligence14NetworkService_fileCacheUtils;
  type metadata accessor for FileCacheUtils(0);
  swift_allocObject();
  *(void *)(v26 + v32) = sub_1DCDCAAF4();
  sub_1DCD2889C(v100, (uint64_t)v13, (uint64_t *)&unk_1EBE85380);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v13, 1, v28) == 1)
  {
    unint64_t v33 = v102;
    if (qword_1EBE857E0 != -1) {
      swift_once();
    }
    uint64_t v34 = __swift_project_value_buffer(v28, (uint64_t)qword_1EBE857C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v33, v34, v28);
    sub_1DCD2479C((uint64_t)v13, (uint64_t *)&unk_1EBE85380);
  }
  else
  {
    unint64_t v33 = v102;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v102, v13, v28);
  }
  unint64_t v35 = v91;
  uint64_t v36 = v97;
  sub_1DCDB40EC(v97);
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  v37(v35, v33, v28);
  uint64_t v38 = sub_1DD048048();
  os_log_type_t v39 = sub_1DD048848();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    long long v88 = v37;
    uint64_t v42 = v41;
    v106[0] = v41;
    *(_DWORD *)uint64_t v40 = 136315138;
    v88(v89, v35, v103);
    uint64_t v43 = sub_1DD048498();
    uint64_t v105 = sub_1DCED7FA0(v43, v44, v106);
    uint64_t v28 = v103;
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    long long v91 = *(char **)(v27 + 8);
    ((void (*)(char *, uint64_t))v91)(v35, v28);
    _os_log_impl(&dword_1DCCF9000, v38, v39, "requestTimeoutSeconds = %s", v40, 0xCu);
    swift_arrayDestroy();
    uint64_t v45 = v42;
    uint64_t v37 = v88;
    MEMORY[0x1E01B07E0](v45, -1, -1);
    MEMORY[0x1E01B07E0](v40, -1, -1);

    unint64_t v46 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
    uint64_t v47 = v97;
  }
  else
  {
    long long v91 = *(char **)(v27 + 8);
    ((void (*)(char *, uint64_t))v91)(v35, v28);

    unint64_t v46 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
    uint64_t v47 = v36;
  }
  uint64_t v48 = v95;
  v46(v47, v95);
  uint64_t v49 = v104;
  v37((char *)(v104 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_requestTimeout), v102, v28);
  *(void *)(v49 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_searchFetches) = sub_1DCDBA0E0(MEMORY[0x1E4FBC860]);
  uint64_t v50 = v96;
  uint64_t v51 = v90;
  sub_1DCD2889C(v96, v90, &qword_1EBE848E0);
  uint64_t v52 = sub_1DD046478();
  uint64_t v53 = *(void *)(v52 - 8);
  int v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52);
  uint64_t v55 = (uint64_t)v92;
  if (v54 == 1)
  {
    sub_1DCD2479C(v51, &qword_1EBE848E0);
    char v56 = sub_1DCDE82EC();
    uint64_t v57 = (uint64_t)v94;
    if (v56)
    {
      if (qword_1EAB01C28 != -1) {
        swift_once();
      }
      uint64_t v58 = (uint64_t *)&off_1EAB02A48;
    }
    else
    {
      if (qword_1EBE871A0 != -1) {
        swift_once();
      }
      uint64_t v58 = &qword_1EBE871E8;
    }
    unint64_t v62 = *(void **)(*v58 + 32);
    swift_retain();
    uint64_t v63 = (void *)sub_1DD0483D8();
    id v64 = objc_msgSend(v62, sel_stringForKey_, v63);

    if (!v64)
    {
      swift_release();
      goto LABEL_28;
    }
    uint64_t v59 = sub_1DD048408();
    unint64_t v61 = v65;
    swift_release();
  }
  else
  {
    uint64_t v59 = sub_1DD0463A8();
    unint64_t v61 = v60;
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
    uint64_t v57 = (uint64_t)v94;
  }
  uint64_t v66 = HIBYTE(v61) & 0xF;
  if ((v61 & 0x2000000000000000) == 0) {
    uint64_t v66 = v59 & 0xFFFFFFFFFFFFLL;
  }
  if (!v66)
  {
    swift_bridgeObjectRelease();
LABEL_28:
    sub_1DD0479E8();
    swift_allocObject();
    uint64_t v70 = sub_1DD0479D8();
    goto LABEL_29;
  }
  sub_1DCDB40EC(v55);
  char v67 = sub_1DD048048();
  os_log_type_t v68 = sub_1DD048858();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v69 = 0;
    _os_log_impl(&dword_1DCCF9000, v67, v68, "WARNING WARNING WARNING: using custom Pegasus endpoint.", v69, 2u);
    MEMORY[0x1E01B07E0](v69, -1, -1);
  }

  v46(v55, v48);
  sub_1DD0479E8();
  swift_allocObject();
  uint64_t v70 = sub_1DD0479C8();
LABEL_29:
  uint64_t v71 = v104;
  *(void *)(v104 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_searchClient) = v70;
  sub_1DD047A08();
  *(void *)(v71 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_cameraSearchClient) = sub_1DD0479F8();
  unint64_t v72 = v93;
  if (!v93)
  {
    if (sub_1DCDE82EC())
    {
      if (qword_1EAB01C28 != -1) {
        swift_once();
      }
      uint64_t v73 = (uint64_t *)&off_1EAB02A48;
    }
    else
    {
      if (qword_1EBE871A0 != -1) {
        swift_once();
      }
      uint64_t v73 = &qword_1EBE871E8;
    }
    unsigned int v74 = *(void **)(*v73 + 32);
    swift_retain();
    uint64_t v75 = (void *)sub_1DD0483D8();
    id v76 = objc_msgSend(v74, sel_stringForKey_, v75);

    if (!v76)
    {
      swift_release();
      goto LABEL_47;
    }
    uint64_t v98 = sub_1DD048408();
    unint64_t v72 = v77;
    swift_release();
  }
  uint64_t v78 = HIBYTE(v72) & 0xF;
  if ((v72 & 0x2000000000000000) == 0) {
    uint64_t v78 = v98 & 0xFFFFFFFFFFFFLL;
  }
  if (v78)
  {
    sub_1DCDB40EC(v57);
    long long v79 = sub_1DD048048();
    os_log_type_t v80 = sub_1DD048858();
    if (os_log_type_enabled(v79, v80))
    {
      unint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v81 = 0;
      _os_log_impl(&dword_1DCCF9000, v79, v80, "WARNING WARNING WARNING: using custom Pegasus debug parameters.", v81, 2u);
      MEMORY[0x1E01B07E0](v81, -1, -1);
    }

    v46(v57, v48);
    unint64_t v82 = (void (*)(uint64_t *, void))sub_1DD047948();
    CGFloat v84 = v83;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v105 = *v84;
    *CGFloat v84 = 0x8000000000000000;
    sub_1DCE85618(v98, v72, 0x2D656C7070612D78, 0xED00006775626564, isUniquelyReferenced_nonNull_native);
    *CGFloat v84 = v105;
    swift_bridgeObjectRelease();
    v82(v106, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_47:
  sub_1DCD2479C(v100, (uint64_t *)&unk_1EBE85380);
  sub_1DCD2479C(v50, &qword_1EBE848E0);
  ((void (*)(char *, uint64_t))v91)(v102, v103);
  return v104;
}

uint64_t sub_1DCE5A130(long long *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1DCE64DD0(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_1F3841280, (uint64_t)sub_1DCE6AA58, (uint64_t)&block_descriptor_159);
}

uint64_t sub_1DCE5A174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v45 = a7;
  unint64_t v46 = a8;
  uint64_t v44 = a6;
  uint64_t v49 = a4;
  uint64_t v11 = sub_1DD048068();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v47 = (uint64_t)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1DD046598();
  uint64_t v14 = *(void *)(v48 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v48);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    uint64_t v40 = v12;
    uint64_t v41 = v11;
    strcpy((char *)v52, "E2E - Search");
    HIBYTE(v52[6]) = 0;
    v52[7] = -5120;
    uint64_t v53 = "Search On Server";
    uint64_t v54 = 16;
    char v55 = 2;
    type metadata accessor for DurationMeasurement();
    swift_allocObject();
    swift_retain();
    uint64_t v19 = sub_1DCEA469C((uint64_t)v52, a2);
    uint64_t v50 = a3;
    uint64_t v43 = v19;
    swift_release();
    uint64_t v42 = a5;
    uint64_t v20 = v50 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier;
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    uint64_t v22 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v48);
    unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    unint64_t v24 = (v15 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v21;
    unint64_t v26 = v25 + v23;
    uint64_t v27 = v16;
    uint64_t v28 = v43;
    uint64_t v29 = v50;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v26, v27, v22);
    *(void *)(v25 + v24) = v28;
    uint64_t v30 = (void *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v31 = v42;
    void *v30 = v49;
    v30[1] = v31;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_1DCE6AA74;
    *(void *)(v32 + 24) = v25;
    unint64_t v33 = (uint64_t *)(v18 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_completions);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = *v33;
    *unint64_t v33 = 0x8000000000000000;
    sub_1DCE864CC((uint64_t)sub_1DCE6A2BC, v32, v20, isUniquelyReferenced_nonNull_native);
    *unint64_t v33 = v51;
    swift_bridgeObjectRelease();
    swift_endAccess();
    unint64_t v35 = (os_unfair_lock_s *)(*(void *)(v29 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
    os_unfair_lock_lock(v35);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
    os_unfair_lock_unlock(v35);
    if (v31 == 1)
    {
      uint64_t v36 = v47;
      sub_1DCDB40EC(v47);
      uint64_t v37 = sub_1DD048048();
      os_log_type_t v38 = sub_1DD048848();
      if (os_log_type_enabled(v37, v38))
      {
        os_log_type_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v39 = 0;
        _os_log_impl(&dword_1DCCF9000, v37, v38, "checkCancel(): has already been canceled", v39, 2u);
        MEMORY[0x1E01B07E0](v39, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v36, v41);
      sub_1DCE5B508(v20);
    }
    else
    {
      sub_1DCE5D448(v29);
      sub_1DCE5DB84(v44, v45, v46, v29);
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCE5A610(long long *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1DCE5AB50(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_1F3841190, (uint64_t)sub_1DCE6A580, (uint64_t)&block_descriptor_137);
}

uint64_t sub_1DCE5A658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9)
{
  uint64_t v51 = a6;
  uint64_t v52 = a8;
  uint64_t v50 = a5;
  uint64_t v53 = a4;
  uint64_t v54 = a3;
  char v55 = (char *)a2;
  uint64_t v9 = sub_1DD048068();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DD046598();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    uint64_t v45 = v12;
    uint64_t v46 = v10;
    uint64_t v47 = v9;
    strcpy((char *)v59, "E2E - Search");
    HIBYTE(v59[6]) = 0;
    v59[7] = -5120;
    unint64_t v60 = "Search On Server";
    uint64_t v61 = 16;
    char v62 = 2;
    type metadata accessor for DurationMeasurement();
    swift_allocObject();
    uint64_t v49 = sub_1DCEA469C((uint64_t)v59, 0);
    uint64_t v19 = &v55[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier];
    uint64_t v48 = (uint64_t)&v55[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier];
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v13);
    uint64_t v21 = v18;
    unint64_t v22 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    unint64_t v23 = (v15 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v25 + v22, v16, v13);
    *(void *)(v25 + v23) = v49;
    uint64_t v26 = v48;
    uint64_t v27 = (void *)(v25 + v24);
    uint64_t v28 = v53;
    void *v27 = v54;
    v27[1] = v28;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_1DCE6A654;
    *(void *)(v29 + 24) = v25;
    uint64_t v30 = (uint64_t *)(v21 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_batchEncryptedCompletions);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v58 = *v30;
    uint64_t *v30 = 0x8000000000000000;
    sub_1DCE864D8((uint64_t)sub_1DCE6A734, v29, v26, isUniquelyReferenced_nonNull_native);
    uint64_t *v30 = v58;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v32 = (uint64_t)v55;
    unint64_t v33 = (os_unfair_lock_s *)(*(void *)&v55[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
    os_unfair_lock_lock(v33);
    LODWORD(v32) = *(unsigned __int8 *)(v32 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
    os_unfair_lock_unlock(v33);
    if (v32 == 1)
    {
      uint64_t v34 = (uint64_t)v45;
      sub_1DCDB40EC((uint64_t)v45);
      unint64_t v35 = sub_1DD048048();
      os_log_type_t v36 = sub_1DD048848();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl(&dword_1DCCF9000, v35, v36, "checkCancel(): has already been canceled", v37, 2u);
        MEMORY[0x1E01B07E0](v37, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v34, v47);
      sub_1DCE5B508(v26);
    }
    else
    {
      os_log_type_t v38 = v55;
      sub_1DCE5D448((uint64_t)v55);
      long long v39 = *(_OWORD *)(v50 + 144);
      v56[8] = *(_OWORD *)(v50 + 128);
      v56[9] = v39;
      v56[10] = *(_OWORD *)(v50 + 160);
      uint64_t v57 = *(void *)(v50 + 176);
      long long v40 = *(_OWORD *)(v50 + 80);
      v56[4] = *(_OWORD *)(v50 + 64);
      v56[5] = v40;
      long long v41 = *(_OWORD *)(v50 + 112);
      v56[6] = *(_OWORD *)(v50 + 96);
      v56[7] = v41;
      long long v42 = *(_OWORD *)(v50 + 16);
      v56[0] = *(_OWORD *)v50;
      v56[1] = v42;
      long long v43 = *(_OWORD *)(v50 + 48);
      _OWORD v56[2] = *(_OWORD *)(v50 + 32);
      v56[3] = v43;
      sub_1DCE67A9C(v56, v51, v52, a9, v38);
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCE5AB08(long long *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1DCE5AB50(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_1F38410F0, (uint64_t)sub_1DCE6A288, (uint64_t)&block_descriptor_123);
}

uint64_t sub_1DCE5AB50(long long *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v52 = a8;
  uint64_t v51 = a7;
  uint64_t v57 = a6;
  uint64_t v56 = a5;
  char v55 = a3;
  uint64_t v58 = a11;
  uint64_t v53 = a10;
  v50[1] = a9;
  uint64_t v60 = sub_1DD0481B8();
  uint64_t v63 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v59 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1DD0481D8();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v17 = (char *)v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v22 = a1[8];
  long long v23 = a1[10];
  long long v75 = a1[9];
  long long v76 = v23;
  long long v24 = a1[4];
  long long v25 = a1[6];
  long long v26 = a1[7];
  long long v71 = a1[5];
  long long v72 = v25;
  uint64_t v77 = *((void *)a1 + 22);
  long long v73 = v26;
  long long v74 = v22;
  long long v27 = a1[1];
  long long v66 = *a1;
  long long v67 = v27;
  long long v28 = a1[3];
  long long v68 = a1[2];
  long long v69 = v28;
  long long v70 = v24;
  uint64_t v54 = *(void *)(v11 + 16);
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  sub_1DCE6A774(a2, (uint64_t)v21, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  unint64_t v30 = (*(unsigned __int8 *)(v19 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v31 = (v20 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  long long v33 = v75;
  long long v34 = v76;
  long long v35 = v73;
  *(_OWORD *)(v32 + 176) = v74;
  *(_OWORD *)(v32 + 192) = v33;
  *(_OWORD *)(v32 + 208) = v34;
  long long v36 = v71;
  long long v37 = v72;
  *(_OWORD *)(v32 + 112) = v70;
  *(_OWORD *)(v32 + 128) = v36;
  *(void *)(v32 + 16) = v29;
  *(void *)(v32 + 24) = a4;
  uint64_t v38 = v52;
  *(void *)(v32 + 32) = v51;
  *(void *)(v32 + 40) = v38;
  *(void *)(v32 + 224) = v77;
  *(_OWORD *)(v32 + 144) = v37;
  *(_OWORD *)(v32 + 160) = v35;
  long long v39 = v67;
  *(_OWORD *)(v32 + 48) = v66;
  *(_OWORD *)(v32 + 64) = v39;
  long long v40 = v69;
  *(_OWORD *)(v32 + 80) = v68;
  *(_OWORD *)(v32 + 96) = v40;
  sub_1DCE6A9EC((uint64_t)v21, v32 + v30, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  long long v41 = v55;
  *(void *)(v32 + v31) = v55;
  long long v42 = (void *)(v32 + ((v31 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v43 = v57;
  void *v42 = v56;
  v42[1] = v43;
  aBlock[4] = v53;
  aBlock[5] = v32;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCEC8CA4;
  aBlock[3] = v58;
  uint64_t v44 = _Block_copy(aBlock);
  swift_retain();
  id v45 = a4;
  swift_retain();
  sub_1DCD433F0((uint64_t)&v66);
  id v46 = v41;
  swift_unknownObjectRetain();
  sub_1DD0481C8();
  uint64_t v64 = MEMORY[0x1E4FBC860];
  sub_1DCE6B074(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCD52850((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  uint64_t v47 = v59;
  uint64_t v48 = v60;
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v17, v47, v44);
  _Block_release(v44);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v47, v48);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v17, v62);
  swift_release();
  return swift_release();
}

uint64_t sub_1DCE5B0A4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t (**a9)(uint64_t, void))
{
  uint64_t v48 = a7;
  uint64_t v49 = a8;
  uint64_t v50 = a4;
  uint64_t v51 = a3;
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DD046598();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v44 = v13;
    uint64_t v45 = v11;
    uint64_t v46 = v10;
    strcpy((char *)v54, "E2E - Search");
    HIBYTE(v54[6]) = 0;
    v54[7] = -5120;
    char v55 = "Search On Server";
    uint64_t v56 = 16;
    char v57 = 2;
    type metadata accessor for DurationMeasurement();
    swift_allocObject();
    uint64_t v20 = sub_1DCEA469C((uint64_t)v54, 0);
    uint64_t v52 = a2;
    uint64_t v47 = v20;
    uint64_t v21 = (uint64_t)&a2[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier];
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v14);
    unint64_t v23 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    unint64_t v24 = (v16 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v22;
    unint64_t v26 = v25 + v23;
    uint64_t v27 = v21;
    uint64_t v28 = v19;
    uint64_t v29 = v17;
    uint64_t v30 = v47;
    unint64_t v31 = v52;
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v26, v29, v14);
    *(void *)(v25 + v24) = v30;
    uint64_t v32 = (void *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v33 = v50;
    *uint64_t v32 = v51;
    v32[1] = v33;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_1DCE6A2A4;
    *(void *)(v34 + 24) = v25;
    long long v35 = (uint64_t *)(v28 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_encryptedCompletions);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v53 = *v35;
    uint64_t *v35 = 0x8000000000000000;
    sub_1DCE864E4((uint64_t)sub_1DCE6A2BC, v34, v27, isUniquelyReferenced_nonNull_native);
    uint64_t *v35 = v53;
    swift_bridgeObjectRelease();
    swift_endAccess();
    long long v37 = (os_unfair_lock_s *)(*(void *)&v31[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
    os_unfair_lock_lock(v37);
    LODWORD(v33) = v31[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
    os_unfair_lock_unlock(v37);
    if (v33 == 1)
    {
      uint64_t v38 = (uint64_t)v44;
      sub_1DCDB40EC((uint64_t)v44);
      long long v39 = sub_1DD048048();
      os_log_type_t v40 = sub_1DD048848();
      if (os_log_type_enabled(v39, v40))
      {
        long long v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v41 = 0;
        _os_log_impl(&dword_1DCCF9000, v39, v40, "checkCancel(): has already been canceled", v41, 2u);
        MEMORY[0x1E01B07E0](v41, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v38, v46);
      sub_1DCE5B508(v27);
    }
    else
    {
      uint64_t v42 = sub_1DCE5D448((uint64_t)v31);
      sub_1DCE5ED7C(v42, v43, v48, v49, a9, v31);
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCE5B508(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DD0481B8();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD0481D8();
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DD046598();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  v18[1] = *(void *)(v2 + 16);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1DCE6A1CC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCEC8CA4;
  aBlock[3] = &block_descriptor_116;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1DD0481C8();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1DCE6B074(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCD52850((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v9, v6, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_1DCE5B8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039C8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v38 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
  MEMORY[0x1F4188790](v4 - 8);
  long long v37 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DD046598();
  uint64_t v39 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = sub_1DD048068();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCDB40EC((uint64_t)v15);
  uint64_t v16 = sub_1DD048048();
  os_log_type_t v17 = sub_1DD048848();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_1DCCF9000, v16, v17, "cancel()", v18, 2u);
    MEMORY[0x1E01B07E0](v18, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v20 = result;
  uint64_t v21 = v39;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
  v22(v11, v40, v6);
  uint64_t v23 = v20 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_searchFetches;
  swift_beginAccess();
  if (!*(void *)(*(void *)v23 + 16)) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  sub_1DCEAD840((uint64_t)v11);
  if ((v24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v25 = *(void (**)(char *, uint64_t))(v21 + 8);
    v25(v11, v6);
    goto LABEL_9;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v21 + 8);
  v25(v11, v6);
  sub_1DD0480C8();
  swift_release();
LABEL_9:
  v22(v8, v40, v6);
  unint64_t v26 = (uint64_t *)(v20 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_completions);
  swift_beginAccess();
  uint64_t v27 = *v26;
  if (*(void *)(v27 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_1DCEAD840((uint64_t)v8);
    if (v29)
    {
      uint64_t v30 = *(void (**)(uint64_t, uint64_t, void *, void **))(*(void *)(v27 + 56) + 16 * v28);
      swift_retain();
      swift_bridgeObjectRelease();
      v25(v8, v6);
      uint64_t v31 = sub_1DD047488();
      uint64_t v32 = (uint64_t)v37;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v37, 1, 1, v31);
      uint64_t v33 = sub_1DD0474A8();
      uint64_t v34 = (uint64_t)v38;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v38, 1, 1, v33);
      sub_1DCE6A230();
      long long v35 = (void *)swift_allocError();
      *long long v36 = 0;
      v42[0] = 0;
      v42[1] = 0xE000000000000000;
      long long v41 = v35;
      swift_retain();
      v30(v32, v34, v42, &v41);

      swift_release();
      swift_release_n();
      sub_1DCD2479C(v34, &qword_1EAB039C8);
      return sub_1DCD2479C(v32, &qword_1EAB028D0);
    }
    swift_bridgeObjectRelease();
  }
  v25(v8, v6);
  return swift_release();
}

uint64_t sub_1DCE5BE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(char *, void *))
{
  uint64_t v76 = a7;
  uint64_t v77 = a8;
  uint64_t v72 = a3;
  uint64_t v73 = a4;
  uint64_t v70 = a1;
  uint64_t v71 = type metadata accessor for NetworkService.NetworkSearchResponse(0);
  MEMORY[0x1F4188790](v71);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DD0474A8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v65 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039C8);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v66 = (uint64_t)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v64 - v19;
  uint64_t v21 = sub_1DD048068();
  uint64_t v74 = *(void *)(v21 - 8);
  uint64_t v75 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCDB40EC((uint64_t)v23);
  uint64_t v67 = a2;
  sub_1DCD2889C(a2, (uint64_t)v20, &qword_1EAB039C8);
  id v24 = a5;
  id v25 = a5;
  unint64_t v26 = sub_1DD048048();
  os_log_type_t v27 = sub_1DD048848();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v68 = v14;
  uint64_t v69 = v13;
  if (v28)
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v64 = v12;
    uint64_t v30 = v29;
    uint64_t v31 = swift_slowAlloc();
    v79[0] = v31;
    *(_DWORD *)uint64_t v30 = 136315394;
    int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v20, 1, v13);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      uint64_t v34 = 28526;
    }
    else {
      uint64_t v34 = 7562617;
    }
    if (v33) {
      unint64_t v35 = 0xE200000000000000;
    }
    else {
      unint64_t v35 = 0xE300000000000000;
    }
    uint64_t v78 = sub_1DCED7FA0(v34, v35, v79);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD2479C((uint64_t)v20, &qword_1EAB039C8);
    *(_WORD *)(v30 + 12) = 2080;
    uint64_t v78 = (uint64_t)a5;
    id v36 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03AD8);
    uint64_t v37 = sub_1DD048478();
    uint64_t v78 = sub_1DCED7FA0(v37, v38, v79);
    sub_1DD048A28();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DCCF9000, v26, v27, "search(): completion, has response = %s, has error = %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v31, -1, -1);
    uint64_t v39 = v30;
    uint64_t v12 = v64;
    MEMORY[0x1E01B07E0](v39, -1, -1);
  }
  else
  {
    sub_1DCD2479C((uint64_t)v20, &qword_1EAB039C8);
  }
  (*(void (**)(char *, uint64_t))(v74 + 8))(v23, v75);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v41 = v76;
  if (Strong)
  {
    swift_beginAccess();
    sub_1DCE907D8(v41);
    swift_endAccess();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    uint64_t v42 = sub_1DCE908D0(v41);
    swift_endAccess();
    sub_1DCD33E90(v42);
    swift_release();
  }
  sub_1DCEA3DA4();
  if (a5)
  {
    sub_1DCD2889C(v70, (uint64_t)v12, &qword_1EAB028D0);
    uint64_t v43 = v71;
    *(void *)&v12[*(int *)(v71 + 20)] = MEMORY[0x1E4FBC860];
    uint64_t v44 = &v12[*(int *)(v43 + 24)];
    uint64_t v45 = v73;
    *(void *)uint64_t v44 = v72;
    *((void *)v44 + 1) = v45;
    id v46 = a5;
    id v47 = a5;
    swift_bridgeObjectRetain();
    a9(v12, a5);

    uint64_t v48 = a5;
LABEL_18:

    return sub_1DCE6A7DC((uint64_t)v12, type metadata accessor for NetworkService.NetworkSearchResponse);
  }
  uint64_t v49 = v66;
  sub_1DCD2889C(v67, v66, &qword_1EAB039C8);
  uint64_t v51 = v68;
  uint64_t v50 = v69;
  int v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v49, 1, v69);
  uint64_t v53 = v49;
  uint64_t v54 = v72;
  uint64_t v55 = v73;
  uint64_t v56 = v70;
  uint64_t v57 = v71;
  if (v52 == 1)
  {
    sub_1DCD2479C(v53, &qword_1EAB039C8);
    sub_1DCD2889C(v56, (uint64_t)v12, &qword_1EAB028D0);
    *(void *)&v12[*(int *)(v57 + 20)] = MEMORY[0x1E4FBC860];
    uint64_t v58 = &v12[*(int *)(v57 + 24)];
    *(void *)uint64_t v58 = v54;
    *((void *)v58 + 1) = v55;
    sub_1DCD676DC();
    uint64_t v59 = swift_allocError();
    *(void *)uint64_t v60 = 0;
    *(void *)(v60 + 8) = 0;
    *(unsigned char *)(v60 + 16) = 2;
    swift_bridgeObjectRetain();
    a9(v12, (void *)v59);
    uint64_t v48 = (void *)v59;
    goto LABEL_18;
  }
  uint64_t v62 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v65, v53, v50);
  sub_1DCD2889C(v56, (uint64_t)v12, &qword_1EAB028D0);
  *(void *)&v12[*(int *)(v57 + 20)] = sub_1DD047498();
  uint64_t v63 = &v12[*(int *)(v57 + 24)];
  *(void *)uint64_t v63 = v54;
  *((void *)v63 + 1) = v55;
  swift_bridgeObjectRetain();
  a9(v12, 0);
  sub_1DCE6A7DC((uint64_t)v12, type metadata accessor for NetworkService.NetworkSearchResponse);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v62, v50);
}

uint64_t sub_1DCE5C538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(char *, void *))
{
  uint64_t v76 = a8;
  uint64_t v67 = a7;
  uint64_t v68 = a1;
  uint64_t v72 = a3;
  uint64_t v73 = a4;
  uint64_t v70 = type metadata accessor for NetworkService.NetworkEncryptedSearchResponse(0);
  MEMORY[0x1F4188790](v70);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DD0478E8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v64 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02640);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v65 = (uint64_t)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v62 - v19;
  uint64_t v21 = sub_1DD048068();
  uint64_t v74 = *(void *)(v21 - 8);
  uint64_t v75 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCDB40EC((uint64_t)v23);
  uint64_t v66 = a2;
  sub_1DCD2889C(a2, (uint64_t)v20, &qword_1EAB02640);
  id v24 = a5;
  id v25 = a5;
  unint64_t v26 = sub_1DD048048();
  os_log_type_t v27 = sub_1DD048848();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v71 = v13;
  uint64_t v69 = v14;
  if (v28)
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v63 = v12;
    uint64_t v30 = v29;
    uint64_t v31 = swift_slowAlloc();
    v78[0] = v31;
    *(_DWORD *)uint64_t v30 = 136315394;
    int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v20, 1, v13);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      uint64_t v34 = 28526;
    }
    else {
      uint64_t v34 = 7562617;
    }
    if (v33) {
      unint64_t v35 = 0xE200000000000000;
    }
    else {
      unint64_t v35 = 0xE300000000000000;
    }
    uint64_t v77 = sub_1DCED7FA0(v34, v35, v78);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD2479C((uint64_t)v20, &qword_1EAB02640);
    *(_WORD *)(v30 + 12) = 2080;
    uint64_t v77 = (uint64_t)a5;
    id v36 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03AD8);
    uint64_t v37 = sub_1DD048478();
    uint64_t v77 = sub_1DCED7FA0(v37, v38, v78);
    sub_1DD048A28();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1DCCF9000, v26, v27, "encryptedSearch(): completion, has response = %s, has error = %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v31, -1, -1);
    uint64_t v39 = v30;
    uint64_t v12 = v63;
    MEMORY[0x1E01B07E0](v39, -1, -1);
  }
  else
  {
    sub_1DCD2479C((uint64_t)v20, &qword_1EAB02640);
  }
  (*(void (**)(char *, uint64_t))(v74 + 8))(v23, v75);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    uint64_t v40 = sub_1DCE90928(v67);
    swift_endAccess();
    sub_1DCD33E90(v40);
    swift_release();
  }
  sub_1DCEA3DA4();
  if (a5)
  {
    sub_1DCD2889C(v68, (uint64_t)v12, &qword_1EAB03A18);
    uint64_t v41 = v70;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(&v12[*(int *)(v70 + 20)], 1, 1, v71);
    uint64_t v42 = &v12[*(int *)(v41 + 24)];
    uint64_t v43 = v73;
    *(void *)uint64_t v42 = v72;
    *((void *)v42 + 1) = v43;
    id v44 = a5;
    swift_bridgeObjectRetain();
    a9(v12, a5);
    uint64_t v45 = a5;
LABEL_16:

    return sub_1DCE6A7DC((uint64_t)v12, type metadata accessor for NetworkService.NetworkEncryptedSearchResponse);
  }
  uint64_t v46 = v65;
  sub_1DCD2889C(v66, v65, &qword_1EAB02640);
  uint64_t v47 = v69;
  uint64_t v48 = v71;
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v46, 1, v71);
  uint64_t v50 = v72;
  uint64_t v51 = v73;
  uint64_t v52 = v70;
  uint64_t v53 = v68;
  if (v49 == 1)
  {
    sub_1DCD2479C(v46, &qword_1EAB02640);
    sub_1DCD2889C(v53, (uint64_t)v12, &qword_1EAB03A18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(&v12[*(int *)(v52 + 20)], 1, 1, v48);
    uint64_t v54 = &v12[*(int *)(v52 + 24)];
    *(void *)uint64_t v54 = v50;
    *((void *)v54 + 1) = v51;
    sub_1DCD676DC();
    uint64_t v55 = swift_allocError();
    *(void *)uint64_t v56 = 0;
    *(void *)(v56 + 8) = 0;
    *(unsigned char *)(v56 + 16) = 2;
    swift_bridgeObjectRetain();
    a9(v12, (void *)v55);
    uint64_t v45 = (void *)v55;
    goto LABEL_16;
  }
  uint64_t v58 = v46;
  uint64_t v59 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v64, v58, v48);
  sub_1DCD2889C(v53, (uint64_t)v12, &qword_1EAB03A18);
  uint64_t v60 = &v12[*(int *)(v52 + 20)];
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v60, v59, v48);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v60, 0, 1, v48);
  uint64_t v61 = &v12[*(int *)(v52 + 24)];
  *(void *)uint64_t v61 = v50;
  *((void *)v61 + 1) = v51;
  swift_bridgeObjectRetain();
  a9(v12, 0);
  sub_1DCE6A7DC((uint64_t)v12, type metadata accessor for NetworkService.NetworkEncryptedSearchResponse);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v59, v48);
}

uint64_t sub_1DCE5CC50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a10)
{
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v30 = a8;
  uint64_t v31 = a10;
  int v32 = a9;
  uint64_t v15 = sub_1DD048068();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a6 + 16;
  sub_1DCDB40EC((uint64_t)v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1DD048048();
  os_log_type_t v21 = sub_1DD048848();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (_DWORD *)swift_slowAlloc();
    uint64_t v29 = a1;
    uint64_t v23 = v22;
    *uint64_t v22 = 134218240;
    uint64_t v35 = *(void *)(a2 + 16);
    v28[1] = v19;
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    *((_WORD *)v23 + 6) = 2048;
    uint64_t v35 = *(void *)(a5 + 16);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v20, v21, "encryptedSearch(): completion, has response = %ld, has error = %ld", (uint8_t *)v23, 0x16u);
    id v24 = v23;
    a1 = v29;
    MEMORY[0x1E01B07E0](v24, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    uint64_t v25 = sub_1DCE908FC(a7);
    swift_endAccess();
    sub_1DCD33E90(v25);
    swift_release();
  }
  sub_1DCEA3DA4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = v34;
  swift_bridgeObjectRetain();
  v32(a1, a2, v33, v26, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1DCE5CF38(uint64_t a1))()
{
  uint64_t v3 = sub_1DD046598();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier, v3, v5);
  uint64_t v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_completions);
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1DCEAD840((uint64_t)v7);
    if (v11)
    {
      long long v13 = *(_OWORD *)(*(void *)(v9 + 56) + 16 * v10);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      *(_OWORD *)(swift_allocObject() + 16) = v13;
      return sub_1DCE6A09C;
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return 0;
}

uint64_t (*sub_1DCE5D0E8(uint64_t a1))()
{
  uint64_t v3 = sub_1DD046598();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier, v3, v5);
  uint64_t v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_encryptedCompletions);
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1DCEAD840((uint64_t)v7);
    if (v11)
    {
      long long v13 = *(_OWORD *)(*(void *)(v9 + 56) + 16 * v10);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      *(_OWORD *)(swift_allocObject() + 16) = v13;
      return sub_1DCE6A09C;
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return 0;
}

uint64_t (*sub_1DCE5D298(uint64_t a1))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v3 = sub_1DD046598();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier, v3, v5);
  uint64_t v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_batchEncryptedCompletions);
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1DCEAD840((uint64_t)v7);
    if (v11)
    {
      long long v13 = *(_OWORD *)(*(void *)(v9 + 56) + 16 * v10);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      *(_OWORD *)(swift_allocObject() + 16) = v13;
      return sub_1DCE6A050;
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return 0;
}

uint64_t sub_1DCE5D448(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1DCE6A008;
  *(void *)(v4 + 24) = v2;
  double v5 = (void **)(a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_onCancels);
  swift_beginAccess();
  uint64_t v6 = *v5;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *double v5 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v6 = sub_1DCE9FF98(0, v6[2] + 1, 1, v6);
    *double v5 = v6;
  }
  unint64_t v9 = v6[2];
  unint64_t v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    uint64_t v6 = sub_1DCE9FF98((void *)(v8 > 1), v9 + 1, 1, v6);
    *double v5 = v6;
  }
  v6[2] = v9 + 1;
  unint64_t v10 = &v6[2 * v9];
  v10[4] = sub_1DCE6A010;
  v10[5] = v4;
  swift_endAccess();
  os_unfair_lock_unlock(v3);
  return swift_release_n();
}

uint64_t sub_1DCE5D5C4(uint64_t a1)
{
  uint64_t v2 = sub_1DD048068();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  double v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCDB40EC((uint64_t)v5);
  uint64_t v6 = sub_1DD048048();
  os_log_type_t v7 = sub_1DD048848();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v8 = 0;
    _os_log_impl(&dword_1DCCF9000, v6, v7, "addOnCancel(): canceling", v8, 2u);
    MEMORY[0x1E01B07E0](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DCE5B508(a1);
    return swift_release();
  }
  return result;
}

void sub_1DCE5D744(void *a1)
{
  uint64_t v2 = sub_1DD048068();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  double v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v34 - v7;
  sub_1DD0466C8();
  unint64_t v9 = self;
  uint64_t v10 = (void *)sub_1DD0483D8();
  LODWORD(v9) = objc_msgSend(v9, sel_BOOLForEntitlement_, v10);

  if (v9)
  {
    sub_1DCDB40EC((uint64_t)v8);
    char v11 = sub_1DD048048();
    os_log_type_t v12 = sub_1DD048848();
    if (os_log_type_enabled(v11, v12))
    {
      long long v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v13 = 0;
      _os_log_impl(&dword_1DCCF9000, v11, v12, "maybeUpdateQueryContextForEval(): VI Eval locale override is enabled", v13, 2u);
      MEMORY[0x1E01B07E0](v13, -1, -1);
    }

    uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v8, v2);
    if (a1)
    {
      id v15 = objc_msgSend(a1, sel_locale);
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v17 = sub_1DD048408();
        unint64_t v19 = v18;

        id v20 = objc_msgSend(a1, sel_countryCode);
        if (v20)
        {
          os_log_type_t v21 = v20;
          uint64_t v22 = sub_1DD048408();
          unint64_t v24 = v23;

          uint64_t v25 = HIBYTE(v19) & 0xF;
          if ((v19 & 0x2000000000000000) == 0) {
            uint64_t v25 = v17 & 0xFFFFFFFFFFFFLL;
          }
          if (!v25) {
            goto LABEL_16;
          }
          uint64_t v26 = HIBYTE(v24) & 0xF;
          if ((v24 & 0x2000000000000000) == 0) {
            uint64_t v26 = v22 & 0xFFFFFFFFFFFFLL;
          }
          if (v26)
          {
            swift_bridgeObjectRetain();
            sub_1DD046678();
            swift_bridgeObjectRetain();
            sub_1DD046638();
            sub_1DCDB40EC((uint64_t)v5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            os_log_type_t v27 = sub_1DD048048();
            os_log_type_t v28 = sub_1DD048848();
            int v29 = v28;
            if (os_log_type_enabled(v27, v28))
            {
              uint64_t v30 = swift_slowAlloc();
              int v36 = v29;
              uint64_t v31 = v30;
              uint64_t v37 = swift_slowAlloc();
              uint64_t v39 = v37;
              *(_DWORD *)uint64_t v31 = 136315394;
              os_log_t v35 = v27;
              swift_bridgeObjectRetain();
              uint64_t v38 = sub_1DCED7FA0(v17, v19, &v39);
              sub_1DD048A28();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v31 + 12) = 2080;
              swift_bridgeObjectRetain();
              uint64_t v38 = sub_1DCED7FA0(v22, v24, &v39);
              sub_1DD048A28();
              swift_bridgeObjectRelease_n();
              os_log_t v32 = v35;
              _os_log_impl(&dword_1DCCF9000, v35, (os_log_type_t)v36, "maybeUpdateQueryContextForEval(): VI Eval locale and country set to: %s, %s", (uint8_t *)v31, 0x16u);
              uint64_t v33 = v37;
              swift_arrayDestroy();
              MEMORY[0x1E01B07E0](v33, -1, -1);
              MEMORY[0x1E01B07E0](v31, -1, -1);
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }
            v14(v5, v2);
          }
          else
          {
LABEL_16:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_1DCE5DB84(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1DCE5DBB4(a1, a2, a3, a4, (void (*)(char *, char *, uint64_t))sub_1DCE601F0);
}

uint64_t sub_1DCE5DB9C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1DCE5DBB4(a1, a2, a3, a4, (void (*)(char *, char *, uint64_t))sub_1DCE5E08C);
}

uint64_t sub_1DCE5DBB4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *, char *, uint64_t))
{
  uint64_t v50 = a5;
  uint64_t v51 = a4;
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v49 = sub_1DD047488();
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  unint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v40 - v10;
  uint64_t v12 = sub_1DD0466D8();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v44 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DD048068();
  uint64_t v41 = *(void *)(v15 - 8);
  uint64_t v42 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DD048208();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  os_log_type_t v21 = (uint64_t *)((char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v22 = *(_OWORD *)(a1 + 144);
  long long v72 = *(_OWORD *)(a1 + 128);
  long long v73 = v22;
  long long v74 = *(_OWORD *)(a1 + 160);
  uint64_t v75 = *(void *)(a1 + 176);
  long long v23 = *(_OWORD *)(a1 + 80);
  long long v68 = *(_OWORD *)(a1 + 64);
  long long v69 = v23;
  long long v24 = *(_OWORD *)(a1 + 112);
  long long v70 = *(_OWORD *)(a1 + 96);
  long long v71 = v24;
  long long v25 = *(_OWORD *)(a1 + 16);
  long long v64 = *(_OWORD *)a1;
  long long v65 = v25;
  long long v26 = *(_OWORD *)(a1 + 48);
  long long v66 = *(_OWORD *)(a1 + 32);
  long long v67 = v26;
  uint64_t v48 = v5;
  os_log_type_t v27 = *(void **)(v5 + 16);
  void *v21 = v27;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E4FBCBF0], v18);
  id v28 = v27;
  LOBYTE(v27) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if (v27)
  {
    uint64_t v30 = v51;
    uint64_t v31 = (os_unfair_lock_s *)(*(void *)(v51 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
    os_unfair_lock_lock(v31);
    int v32 = *(unsigned __int8 *)(v30 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
    os_unfair_lock_unlock(v31);
    if (v32 == 1)
    {
      sub_1DCDB40EC((uint64_t)v17);
      uint64_t v33 = sub_1DD048048();
      os_log_type_t v34 = sub_1DD048848();
      if (os_log_type_enabled(v33, v34))
      {
        os_log_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_t v35 = 0;
        _os_log_impl(&dword_1DCCF9000, v33, v34, "checkCancel(): has already been canceled", v35, 2u);
        MEMORY[0x1E01B07E0](v35, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v17, v42);
    }
    else
    {
      type metadata accessor for NetworkService(0);
      int v36 = v46;
      sub_1DCE5D744(v46);
      type metadata accessor for ServerSearchProcessor();
      long long v60 = v72;
      long long v61 = v73;
      long long v62 = v74;
      uint64_t v63 = v75;
      long long v56 = v68;
      long long v57 = v69;
      long long v58 = v70;
      long long v59 = v71;
      long long v52 = v64;
      long long v53 = v65;
      long long v54 = v66;
      long long v55 = v67;
      uint64_t v37 = v45;
      sub_1DCD5E01C(&v52, v45, (uint64_t)v14, v36, (uint64_t)v11);
      long long v60 = v72;
      long long v61 = v73;
      long long v62 = v74;
      uint64_t v63 = v75;
      long long v56 = v68;
      long long v57 = v69;
      long long v58 = v70;
      long long v59 = v71;
      long long v52 = v64;
      long long v53 = v65;
      long long v54 = v66;
      long long v55 = v67;
      sub_1DCD5EA2C(&v52, v37, (uint64_t)v14, v36, (uint64_t)v8);
      v50(v11, v8, v30);
      uint64_t v38 = *(void (**)(char *, uint64_t))(v47 + 8);
      uint64_t v39 = v49;
      v38(v8, v49);
      v38(v11, v39);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v14, v44);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCE5E08C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v50 = a3;
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  uint64_t v4 = sub_1DD047488();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039E8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v49 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DD048068();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v44 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DD048208();
  uint64_t v16 = *(void *)(v15 - 8);
  double v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (uint64_t *)((char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = v3;
  uint64_t v20 = *(void **)(v3 + 16);
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t, double))(v16 + 104))(v19, *MEMORY[0x1E4FBCBF0], v15, v17);
  id v21 = v20;
  LOBYTE(v20) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v19, v15);
  if (v20)
  {
    long long v23 = v50;
    long long v24 = (os_unfair_lock_s *)(*(void *)&v50[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
    os_unfair_lock_lock(v24);
    int v25 = v23[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
    os_unfair_lock_unlock(v24);
    if (v25 == 1)
    {
      sub_1DCDB40EC((uint64_t)v14);
      long long v26 = sub_1DD048048();
      os_log_type_t v27 = sub_1DD048848();
      if (os_log_type_enabled(v26, v27))
      {
        id v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v28 = 0;
        _os_log_impl(&dword_1DCCF9000, v26, v27, "checkCancel(): has already been canceled", v28, 2u);
        MEMORY[0x1E01B07E0](v28, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v14, v44);
    }
    else
    {
      uint64_t v29 = sub_1DD048758();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v49, 1, 1, v29);
      uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v30(v9, v45, v4);
      uint64_t v31 = v47;
      v30(v47, v46, v4);
      uint64_t v32 = *(unsigned __int8 *)(v5 + 80);
      uint64_t v33 = (v32 + 40) & ~v32;
      uint64_t v34 = v6 + 7;
      unint64_t v35 = (v6 + 7 + v33) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v36 = (v32 + v35 + 8) & ~v32;
      unint64_t v37 = (v34 + v36) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v38 = (char *)swift_allocObject();
      *((void *)v38 + 2) = 0;
      *((void *)v38 + 3) = 0;
      *((void *)v38 + 4) = v48;
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v39(&v38[v33], v9, v4);
      uint64_t v40 = v50;
      *(void *)&v38[v35] = v50;
      v39(&v38[v36], v31, v4);
      uint64_t v41 = &v38[v37];
      *(void *)uint64_t v41 = 0;
      *((void *)v41 + 1) = 0xE000000000000000;
      swift_retain();
      id v42 = v40;
      sub_1DCE64BE0(v49, (uint64_t)&unk_1EAB03A70, (uint64_t)v38);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCE5E520(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v30 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039E8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DD0478C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 32))(a1, ObjectType, a3);
  if (!v4)
  {
    uint64_t v16 = result;
    double v17 = v30;
    uint64_t v31 = v10;
    int64_t v18 = *(void *)(result + 16);
    if (v18)
    {
      v29[0] = v9;
      uint64_t v34 = MEMORY[0x1E4FBC860];
      sub_1DCFC5A00(0, v18, 0);
      uint64_t v19 = v34;
      v29[1] = v16;
      uint64_t v20 = (unint64_t *)(v16 + 40);
      do
      {
        uint64_t v22 = *(v20 - 1);
        unint64_t v21 = *v20;
        v33[0] = v22;
        v33[1] = v21;
        sub_1DCD33F64(v22, v21);
        sub_1DCE5E86C(v33, &v32, (uint64_t)v13);
        sub_1DCD21954(v22, v21);
        uint64_t v34 = v19;
        unint64_t v24 = *(void *)(v19 + 16);
        unint64_t v23 = *(void *)(v19 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1DCFC5A00(v23 > 1, v24 + 1, 1);
          uint64_t v19 = v34;
        }
        v20 += 2;
        *(void *)(v19 + 16) = v24 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v24, v13, v31);
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      double v17 = v30;
      uint64_t v9 = (char *)v29[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = MEMORY[0x1E4FBC860];
    }
    uint64_t v25 = v29[2];
    uint64_t v26 = sub_1DD048758();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 1, 1, v26);
    os_log_type_t v27 = (void *)swift_allocObject();
    v27[2] = 0;
    v27[3] = 0;
    v27[4] = v19;
    v27[5] = v25;
    v27[6] = v17;
    swift_bridgeObjectRetain();
    swift_retain();
    id v28 = v17;
    sub_1DCE627D4((uint64_t)v9, (uint64_t)&unk_1EAB03A60, (uint64_t)v27);
    swift_release();
    sub_1DCD2479C((uint64_t)v9, &qword_1EAB039E8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCE5E86C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v5 = sub_1DD047B98();
  MEMORY[0x1F4188790](v5 - 8);
  v30[1] = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD047C38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v34 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DD048108();
  uint64_t v31 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DD047878();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v35 = sub_1DD047378();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  unint64_t v16 = a1[1];
  uint64_t v42 = a3;
  sub_1DD0478B8();
  sub_1DD047368();
  sub_1DD047868();
  sub_1DD047358();
  double v17 = (void (*)(long long *, void))sub_1DD047348();
  sub_1DD047858();
  v17(&v37, 0);
  int64_t v18 = (void (*)(long long *, void))sub_1DD047348();
  uint64_t v19 = v9;
  sub_1DD047848();
  v18(&v37, 0);
  uint64_t v40 = v15;
  unint64_t v41 = v16;
  uint64_t v39 = 0;
  long long v37 = 0u;
  long long v38 = 0u;
  sub_1DCD33F64(v15, v16);
  sub_1DD047C28();
  uint64_t v20 = sub_1DCE6B074(&qword_1EAB02428, MEMORY[0x1E4F58FC8]);
  uint64_t v21 = v36;
  sub_1DD047E38();
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v35);
    uint64_t v26 = sub_1DD0478C8();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v42, v26);
    *uint64_t v32 = v21;
  }
  else
  {
    uint64_t v22 = v33;
    uint64_t v23 = v35;
    *((void *)&v38 + 1) = v19;
    uint64_t v39 = v20;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v37);
    uint64_t v25 = v31;
    (*(void (**)(uint64_t *, char *, uint64_t))(v31 + 16))(boxed_opaque_existential_1, v11, v19);
    sub_1DD047C48();
    sub_1DD047B88();
    sub_1DD047338();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039F0);
    unint64_t v28 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1DD04E910;
    (*(void (**)(unint64_t, char *, uint64_t))(v22 + 16))(v29 + v28, v14, v23);
    sub_1DD0474E8();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v23);
  }
  return result;
}

uint64_t sub_1DCE5ED7C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (**a5)(uint64_t, void), char *a6)
{
  long long v89 = a5;
  uint64_t v90 = a4;
  long long v86 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02640);
  MEMORY[0x1F4188790](v8 - 8);
  os_log_type_t v80 = (char *)v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A18);
  MEMORY[0x1F4188790](v10 - 8);
  long long v79 = (char *)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039E8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v78 = (char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A30);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v77 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v81 = (uint64_t)v75 - v17;
  uint64_t v18 = sub_1DD0477F8();
  uint64_t v82 = *(void *)(v18 - 8);
  uint64_t v83 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v76 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1DD0478C8();
  uint64_t v93 = *(void *)(v20 - 8);
  uint64_t v94 = v20;
  uint64_t v21 = *(void *)(v93 + 64);
  MEMORY[0x1F4188790](v20);
  uint64_t v87 = (char *)v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  unint64_t v24 = (char *)v75 - v23;
  MEMORY[0x1F4188790](v25);
  os_log_type_t v27 = (char *)v75 - v26;
  uint64_t v28 = sub_1DD048068();
  uint64_t v91 = *(void *)(v28 - 8);
  uint64_t v92 = v28;
  MEMORY[0x1F4188790](v28);
  long long v85 = (char *)v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)v75 - v31;
  uint64_t v33 = sub_1DD048208();
  uint64_t v34 = *(void *)(v33 - 8);
  double v35 = MEMORY[0x1F4188790](v33);
  long long v37 = (void *)((char *)v75 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v88 = v6;
  long long v38 = *(void **)(v6 + 16);
  void *v37 = v38;
  (*(void (**)(void *, void, uint64_t, double))(v34 + 104))(v37, *MEMORY[0x1E4FBCBF0], v33, v35);
  id v39 = v38;
  LOBYTE(v38) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v34 + 8))(v37, v33);
  if (v38)
  {
    unint64_t v41 = (os_unfair_lock_s *)(*(void *)&a6[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
    os_unfair_lock_lock(v41);
    int v42 = a6[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
    os_unfair_lock_unlock(v41);
    if (v42 == 1)
    {
      sub_1DCDB40EC((uint64_t)v32);
      uint64_t v43 = sub_1DD048048();
      os_log_type_t v44 = sub_1DD048848();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v45 = 0;
        _os_log_impl(&dword_1DCCF9000, v43, v44, "checkCancel(): has already been canceled", v45, 2u);
        MEMORY[0x1E01B07E0](v45, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v32, v92);
    }
    else
    {
      uint64_t v46 = a6;
      CGFloat v84 = v27;
      sub_1DD0478B8();
      uint64_t v47 = v90;
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v49 = (unint64_t)v89;
      if (v89[2](ObjectType, v89))
      {
        sub_1DCE5F93C(v86, v47, v49, v46);
        return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v84, v94);
      }
      else
      {
        uint64_t v51 = v93;
        uint64_t v50 = v94;
        long long v52 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
        v52(v24, v84, v94);
        v52(v87, v24, v50);
        unint64_t v53 = (*(unsigned __int8 *)(v51 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
        long long v54 = (char *)swift_allocObject();
        *((void *)v54 + 2) = v47;
        *((void *)v54 + 3) = v49;
        uint64_t v55 = v88;
        long long v56 = v86;
        *((void *)v54 + 4) = v88;
        *((void *)v54 + 5) = v56;
        *((void *)v54 + 6) = v46;
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v54[v53], v24, v50);
        id v57 = v56;
        v75[1] = v46;
        id v58 = v46;
        swift_unknownObjectRetain_n();
        swift_retain_n();
        long long v59 = (char *)v57;
        long long v60 = (uint64_t (**)(uint64_t, void))v58;
        uint64_t v61 = v81;
        sub_1DCDCB52C(v81);
        uint64_t v62 = v82;
        uint64_t v63 = v83;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v61, 1, v83) == 1)
        {
          sub_1DCD2479C(v61, &qword_1EAB03A30);
          uint64_t v64 = sub_1DD048758();
          uint64_t v65 = (uint64_t)v78;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v78, 1, 1, v64);
          long long v66 = (void *)swift_allocObject();
          v66[2] = 0;
          v66[3] = 0;
          v66[4] = v55;
          v66[5] = sub_1DCE66A50;
          v66[6] = v54;
          swift_retain();
          swift_retain();
          sub_1DCE61E70(v65, (uint64_t)&unk_1EAB03A40, (uint64_t)v66);
          swift_release();
          uint64_t v67 = (uint64_t)v87;
        }
        else
        {
          uint64_t v78 = v59;
          long long v68 = v60;
          long long v69 = v76;
          (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v76, v61, v63);
          uint64_t v70 = (uint64_t)v77;
          (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v77, v69, v63);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v70, 0, 1, v63);
          unint64_t v71 = (unint64_t)v89;
          long long v72 = v56;
          long long v89 = v68;
          uint64_t v67 = (uint64_t)v87;
          sub_1DCE687A8(v70, v47, v71, v55, v72, v68, (uint64_t)v87);
          sub_1DCD2479C(v70, &qword_1EAB03A30);
          (*(void (**)(char *, uint64_t))(v62 + 8))(v69, v63);
          long long v59 = v78;
          long long v60 = v89;
        }
        long long v73 = *(void (**)(char *, uint64_t))(v51 + 8);
        uint64_t v74 = v94;
        v73(v84, v94);

        swift_release();
        swift_unknownObjectRelease();
        swift_release();
        return ((uint64_t (*)(uint64_t, uint64_t))v73)(v67, v74);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCE5F93C(void *a1, uint64_t a2, unint64_t a3, void *a4)
{
  long long v72 = a4;
  unint64_t v84 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039E8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v75 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD0478C8();
  uint64_t v76 = *(void *)(v7 - 8);
  uint64_t v77 = v7;
  uint64_t v8 = *(void *)(v76 + 64);
  MEMORY[0x1F4188790](v7);
  long long v73 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v70 = (char *)&v69 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v74 = (char *)&v69 - v12;
  uint64_t v13 = sub_1DD047B98();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v78 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DD047C38();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v82 = sub_1DD048108();
  uint64_t v79 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v83 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DD047878();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v18 = sub_1DD047378();
  uint64_t v80 = *(void *)(v18 - 8);
  uint64_t v81 = v18;
  double v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1
    && (uint64_t v22 = v21, (v23 = objc_msgSend(a1, sel_location, v19)) != 0)
    && (unint64_t v24 = v23,
        objc_msgSend(v23, sel_coordinate),
        double v26 = v25,
        v24,
        (id v27 = objc_msgSend(a1, sel_location)) != 0))
  {
    uint64_t v28 = v27;
    objc_msgSend(v27, sel_coordinate);
    double v30 = v29;

    uint64_t v31 = sub_1DCE4CB3C(7, v26, v30);
    uint64_t v33 = v32;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v35 = v90;
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 32))(v31, v33, ObjectType);
    if (v35)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v40 = v37;
      uint64_t v41 = v36;
      swift_bridgeObjectRelease();
      int v42 = v22;
      sub_1DD047368();
      sub_1DD047868();
      sub_1DD047358();
      uint64_t v43 = (void (*)(long long *, void))sub_1DD047348();
      sub_1DD047858();
      v43(&v85, 0);
      os_log_type_t v44 = (void (*)(long long *, void))sub_1DD047348();
      sub_1DD047848();
      v44(&v85, 0);
      uint64_t v88 = v41;
      unint64_t v89 = v40;
      uint64_t v87 = 0;
      long long v85 = 0u;
      long long v86 = 0u;
      uint64_t v45 = v41;
      sub_1DCD33F64(v41, v40);
      sub_1DD047C28();
      uint64_t v46 = sub_1DCE6B074(&qword_1EAB02428, MEMORY[0x1E4F58FC8]);
      uint64_t v47 = v82;
      sub_1DD047E38();
      uint64_t v90 = v45;
      *((void *)&v86 + 1) = v47;
      uint64_t v87 = v46;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v85);
      (*(void (**)(uint64_t *, char *, uint64_t))(v79 + 16))(boxed_opaque_existential_1, v83, v47);
      sub_1DD047C48();
      sub_1DD047B88();
      long long v69 = v42;
      sub_1DD047338();
      unint64_t v49 = v74;
      sub_1DD0478B8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039F0);
      uint64_t v50 = v80;
      unint64_t v51 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
      uint64_t v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_1DD04E910;
      (*(void (**)(unint64_t, char *, uint64_t))(v50 + 16))(v52 + v51, v42, v81);
      sub_1DD0474E8();
      uint64_t v53 = sub_1DD048758();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v75, 1, 1, v53);
      unint64_t v84 = v40;
      uint64_t v55 = v76;
      uint64_t v54 = v77;
      long long v56 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
      id v57 = v70;
      v56(v70, v49, v77);
      v56(v73, v49, v54);
      uint64_t v58 = *(unsigned __int8 *)(v55 + 80);
      uint64_t v59 = (v58 + 32) & ~v58;
      unint64_t v60 = (v8 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v61 = (v60 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v62 = (v58 + v61 + 8) & ~v58;
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = 0;
      *(void *)(v63 + 24) = 0;
      uint64_t v64 = *(void (**)(uint64_t, char *, uint64_t))(v55 + 32);
      uint64_t v65 = v77;
      v64(v63 + v59, v57, v77);
      *(void *)(v63 + v60) = v71;
      long long v66 = v72;
      *(void *)(v63 + v61) = v72;
      v64(v63 + v62, v73, v65);
      swift_retain();
      id v67 = v66;
      uint64_t v68 = v75;
      sub_1DCE627D4(v75, (uint64_t)&unk_1EAB03A00, v63);
      swift_release();
      sub_1DCD2479C(v68, &qword_1EAB039E8);
      sub_1DCD21954(v90, v84);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v74, v65);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v83, v82);
      return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v69, v81);
    }
  }
  else
  {
    sub_1DCD676DC();
    swift_allocError();
    *(_OWORD *)uint64_t v39 = xmmword_1DD059E50;
    *(unsigned char *)(v39 + 16) = 2;
    return swift_willThrow();
  }
}

uint64_t sub_1DCE601F0(char *a1, uint64_t a2, char *a3)
{
  uint64_t v4 = v3;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v48 = a1;
  uint64_t v5 = sub_1DD047488();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  uint64_t v6 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v50 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039B8);
  uint64_t v53 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1DD048068();
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DD048208();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (void *)((char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)(v4 + 16);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E4FBCBF0], v12, v14);
  id v18 = v17;
  LOBYTE(v17) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v16, v12);
  if (v17)
  {
    uint64_t v20 = v55;
    uint64_t v21 = (os_unfair_lock_s *)(*(void *)&v55[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
    os_unfair_lock_lock(v21);
    LODWORD(v20) = v20[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
    os_unfair_lock_unlock(v21);
    if (v20 == 1)
    {
      sub_1DCDB40EC((uint64_t)v11);
      uint64_t v22 = sub_1DD048048();
      os_log_type_t v23 = sub_1DD048848();
      if (os_log_type_enabled(v22, v23))
      {
        unint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v24 = 0;
        _os_log_impl(&dword_1DCCF9000, v22, v23, "checkCancel(): has already been canceled", v24, 2u);
        MEMORY[0x1E01B07E0](v24, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v11, v49);
    }
    else
    {
      sub_1DD0479A8();
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      uint64_t v49 = v7;
      double v26 = v50;
      uint64_t v27 = v51;
      uint64_t v47 = *(void *)(v51 + 16);
      uint64_t v28 = v52;
      ((void (*)(char *, uint64_t, uint64_t))v47)(v50, v54, v52);
      uint64_t v29 = *(unsigned __int8 *)(v27 + 80);
      uint64_t v30 = (v29 + 32) & ~v29;
      unint64_t v31 = (v6 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
      v45[0] = v31 + 16;
      v45[1] = v29 | 7;
      uint64_t v32 = swift_allocObject();
      uint64_t v48 = v9;
      uint64_t v33 = v55;
      *(void *)(v32 + 16) = v25;
      *(void *)(v32 + 24) = v33;
      uint64_t v46 = v4;
      uint64_t v51 = *(void *)(v27 + 32);
      ((void (*)(uint64_t, char *, uint64_t))v51)(v32 + v30, v26, v28);
      uint64_t v34 = (void *)(v32 + v31);
      *uint64_t v34 = 0;
      v34[1] = 0xE000000000000000;
      uint64_t v35 = swift_allocObject();
      swift_weakInit();
      ((void (*)(char *, uint64_t, uint64_t))v47)(v26, v54, v28);
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v35;
      *(void *)(v36 + 24) = v33;
      ((void (*)(uint64_t, char *, uint64_t))v51)(v36 + v30, v26, v28);
      unint64_t v37 = (void *)(v36 + v31);
      void *v37 = 0;
      v37[1] = 0xE000000000000000;
      sub_1DCD52850(&qword_1EAB039C0, &qword_1EAB039B8);
      id v38 = v33;
      uint64_t v39 = v48;
      uint64_t v40 = v49;
      uint64_t v41 = sub_1DD0480D8();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v40);
      uint64_t v42 = (uint64_t)v38 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier;
      uint64_t v43 = (uint64_t *)(v46 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_searchFetches);
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v56 = *v43;
      *uint64_t v43 = 0x8000000000000000;
      sub_1DCE86324(v41, v42, isUniquelyReferenced_nonNull_native);
      *uint64_t v43 = v56;
      swift_bridgeObjectRelease();
      swift_endAccess();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCE607F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v34 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039C8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DD0479B8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039E0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v20, &qword_1EAB039E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v22 = sub_1DCE5CF38(a3);
      uint64_t result = swift_release();
      if (v22)
      {
        uint64_t v23 = sub_1DD047488();
        uint64_t v24 = *(void *)(v23 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v13, v34, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v13, 0, 1, v23);
        uint64_t v25 = sub_1DD0474A8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 1, 1, v25);
        sub_1DCD676DC();
        double v26 = (void *)swift_allocError();
        *(_OWORD *)uint64_t v27 = xmmword_1DD059E60;
        *(unsigned char *)(v27 + 16) = 2;
        ((void (*)(char *, char *, uint64_t, uint64_t, void *))v22)(v13, v10, v35, v36, v26);

        sub_1DCD33E90((uint64_t)v22);
        sub_1DCD2479C((uint64_t)v10, &qword_1EAB039C8);
        return sub_1DCD2479C((uint64_t)v13, &qword_1EAB028D0);
      }
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      uint64_t v28 = sub_1DCE5CF38(a3);
      swift_release();
      if (v28)
      {
        uint64_t v29 = sub_1DD047488();
        uint64_t v30 = *(void *)(v29 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v13, v34, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v13, 0, 1, v29);
        uint64_t v31 = sub_1DD0474A8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v10, 1, 1, v31);
        sub_1DCE6B074((unint64_t *)&qword_1EAB039D8, MEMORY[0x1E4F89C08]);
        uint64_t v32 = (void *)swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v33, v17, v14);
        ((void (*)(char *, char *, uint64_t, uint64_t, void *))v28)(v13, v10, v35, v36, v32);

        sub_1DCD33E90((uint64_t)v28);
        sub_1DCD2479C((uint64_t)v10, &qword_1EAB039C8);
        sub_1DCD2479C((uint64_t)v13, &qword_1EAB028D0);
      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return result;
}

uint64_t sub_1DCE60D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v69 = a4;
  uint64_t v10 = sub_1DD048068();
  uint64_t v67 = *(void *)(v10 - 8);
  uint64_t v68 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DD0479B8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v74 = v13;
  uint64_t v75 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v76 = (char *)v62 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039C8);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v71 = (char *)v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v70 = (char *)v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1DD0474A8();
  uint64_t v72 = *(void *)(v23 - 8);
  uint64_t v73 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039D0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v65 = a5;
    uint64_t v66 = a6;
    uint64_t v30 = a3 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier;
    swift_beginAccess();
    sub_1DCE907D8(v30);
    swift_endAccess();
    swift_release();
    sub_1DCD2889C(a1, (uint64_t)v28, &qword_1EAB039D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = v75;
      uint64_t v31 = v76;
      uint64_t v33 = v28;
      uint64_t v34 = v74;
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v76, v33, v74);
      sub_1DCDB40EC((uint64_t)v12);
      uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
      v63(v16, v31, v34);
      uint64_t v35 = sub_1DD048048();
      os_log_type_t v36 = sub_1DD048858();
      BOOL v37 = os_log_type_enabled(v35, v36);
      uint64_t v64 = v32 + 16;
      if (v37)
      {
        id v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        v78[0] = v39;
        *(_DWORD *)id v38 = 136315138;
        v62[1] = v38 + 4;
        uint64_t v40 = sub_1DCEC3CF0();
        uint64_t v77 = sub_1DCED7FA0(v40, v41, v78);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v75 + 8);
        v42(v16, v74);
        _os_log_impl(&dword_1DCCF9000, v35, v36, "performPegasusSearch failed with error: %s", v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v39, -1, -1);
        uint64_t v43 = v38;
        uint64_t v34 = v74;
        MEMORY[0x1E01B07E0](v43, -1, -1);
      }
      else
      {
        uint64_t v42 = *(void (**)(char *, uint64_t))(v32 + 8);
        v42(v16, v34);
      }

      (*(void (**)(char *, uint64_t))(v67 + 8))(v12, v68);
      uint64_t v52 = sub_1DCE5CF38(a3);
      if (v52)
      {
        uint64_t v53 = v52;
        uint64_t v54 = sub_1DD047488();
        uint64_t v55 = *(void *)(v54 - 8);
        uint64_t v56 = (uint64_t)v70;
        (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v70, v69, v54);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v54);
        uint64_t v57 = (uint64_t)v71;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v71, 1, 1, v73);
        sub_1DCE6B074((unint64_t *)&qword_1EAB039D8, MEMORY[0x1E4F89C08]);
        uint64_t v58 = (void *)swift_allocError();
        uint64_t v59 = v34;
        unint64_t v60 = v76;
        v63(v61, v76, v59);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void *))v53)(v56, v57, v65, v66, v58);

        sub_1DCD33E90((uint64_t)v53);
        swift_release();
        sub_1DCD2479C(v57, &qword_1EAB039C8);
        sub_1DCD2479C(v56, &qword_1EAB028D0);
        return ((uint64_t (*)(char *, uint64_t))v42)(v60, v59);
      }
      v42(v76, v34);
    }
    else
    {
      uint64_t v45 = v72;
      uint64_t v44 = v73;
      (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v25, v28, v73);
      uint64_t v46 = sub_1DCE5CF38(a3);
      if (v46)
      {
        uint64_t v47 = v46;
        uint64_t v48 = sub_1DD047488();
        uint64_t v49 = *(void *)(v48 - 8);
        uint64_t v50 = (uint64_t)v70;
        (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v70, v69, v48);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v48);
        uint64_t v51 = (uint64_t)v71;
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v71, v25, v44);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v51, 0, 1, v44);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))v47)(v50, v51, v65, v66, 0);
        sub_1DCD33E90((uint64_t)v47);
        swift_release();
        sub_1DCD2479C(v51, &qword_1EAB039C8);
        sub_1DCD2479C(v50, &qword_1EAB028D0);
        return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v25, v44);
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v44);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCE615E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  uint64_t v7 = sub_1DD046568();
  v6[5] = v7;
  v6[6] = *(void *)(v7 - 8);
  v6[7] = swift_task_alloc();
  uint64_t v8 = sub_1DD0477F8();
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  uint64_t v9 = sub_1DD047A38();
  v6[11] = v9;
  v6[12] = *(void *)(v9 - 8);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  v6[15] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A50);
  v6[16] = swift_task_alloc();
  v6[17] = swift_task_alloc();
  uint64_t v10 = sub_1DD047508();
  v6[18] = v10;
  v6[19] = *(void *)(v10 - 8);
  v6[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A30);
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DCE61858, 0, 0);
}

uint64_t sub_1DCE61858()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v0[24] = v4;
  v0[25] = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v4(v1, 1, 1, v2);
  sub_1DD047A28();
  swift_allocObject();
  v0[26] = sub_1DD047A18();
  sub_1DD0474F8();
  sub_1DD0474E8();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x1E4F89C48] + MEMORY[0x1E4F89C48]);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[27] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1DCE6197C;
  uint64_t v6 = v0[20];
  uint64_t v7 = v0[17];
  return v9(v7, v6);
}

uint64_t sub_1DCE6197C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DCE61A78, 0, 0);
}

uint64_t sub_1DCE61A78()
{
  sub_1DCD2889C(*(void *)(v0 + 136), *(void *)(v0 + 128), &qword_1EAB03A50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = *(void *)(v0 + 152);
    uint64_t v2 = *(void *)(v0 + 136);
    uint64_t v32 = *(void *)(v0 + 144);
    uint64_t v34 = *(void *)(v0 + 160);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 88);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 96) + 32);
    v6(v3, *(void *)(v0 + 128), v5);
    sub_1DCE6B074(&qword_1EAB03A28, MEMORY[0x1E4F89C58]);
    swift_willThrowTypedImpl();
    v6(v4, v3, v5);
    uint64_t v7 = (void *)swift_allocError();
    v6(v8, v4, v5);
    swift_release();
    sub_1DCD2479C(v2, &qword_1EAB03A50);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v34, v32);
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 192);
    uint64_t v10 = *(void *)(v0 + 176);
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v12 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 64);
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v14 + 32);
    ((void (*)(uint64_t, void, uint64_t))v35)(v10, *(void *)(v0 + 128), v13);
    sub_1DCD2479C(v11, &qword_1EAB03A30);
    v9(v10, 0, 1, v13);
    sub_1DCD43B04(v10, v11, &qword_1EAB03A30);
    sub_1DCD2889C(v11, v12, &qword_1EAB03A30);
    int v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    uint64_t v16 = *(void *)(v0 + 160);
    uint64_t v17 = *(void *)(v0 + 168);
    uint64_t v18 = *(void *)(v0 + 144);
    uint64_t v19 = *(void *)(v0 + 152);
    uint64_t v20 = *(void *)(v0 + 136);
    if (v15 == 1)
    {
      swift_release();
      sub_1DCD2479C(v20, &qword_1EAB03A50);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
      sub_1DCD2479C(v17, &qword_1EAB03A30);
    }
    else
    {
      uint64_t v31 = *(void *)(v0 + 160);
      uint64_t v33 = *(void *)(v0 + 144);
      uint64_t v21 = *(void *)(v0 + 72);
      uint64_t v22 = *(void *)(v0 + 80);
      uint64_t v23 = *(void *)(v0 + 56);
      uint64_t v24 = *(void *)(v0 + 48);
      uint64_t v28 = *(void *)(v0 + 40);
      uint64_t v29 = *(void *)(v0 + 64);
      uint64_t v30 = *(void *)(v0 + 136);
      v35(v22, v17);
      sub_1DD046558();
      sub_1DCDCC278(v22, 1, v23);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v28);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v29);
      sub_1DCD2479C(v30, &qword_1EAB03A50);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v31, v33);
    }
    uint64_t v7 = 0;
  }
  uint64_t v25 = *(void *)(v0 + 184);
  (*(void (**)(uint64_t, void *))(v0 + 24))(v25, v7);

  sub_1DCD2479C(v25, &qword_1EAB03A30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_1DCE61E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DD048758();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1DD048748();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1DCD2479C(a1, &qword_1EAB039E8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DD048738();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1DCE61FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  void v7[2] = a4;
  v7[3] = a5;
  uint64_t v8 = sub_1DD047A38();
  v7[6] = v8;
  v7[7] = *(void *)(v8 - 8);
  v7[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02640);
  v7[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A18);
  v7[10] = swift_task_alloc();
  uint64_t v9 = sub_1DD0478E8();
  v7[11] = v9;
  v7[12] = *(void *)(v9 - 8);
  v7[13] = swift_task_alloc();
  v7[14] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A20);
  v7[15] = swift_task_alloc();
  v7[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DCE621BC, 0, 0);
}

uint64_t sub_1DCE621BC()
{
  sub_1DD047A28();
  swift_allocObject();
  v0[17] = sub_1DD047A18();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x1E4F89C50] + MEMORY[0x1E4F89C50]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1DCE6228C;
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[2];
  return v5(v2, v3);
}

uint64_t sub_1DCE6228C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DCE62388, 0, 0);
}

uint64_t sub_1DCE62388()
{
  sub_1DCD2889C(v0[16], v0[15], &qword_1EAB03A20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[4];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = v0 + 8;
    uint64_t v5 = v0 + 7;
    uint64_t v6 = v0 + 6;
    (*(void (**)(void, uint64_t, void))(v0[7] + 32))(v0[8], v2, v0[6]);
    uint64_t v7 = sub_1DCE5D0E8(v3);
    if (v7)
    {
      uint64_t v8 = v0[12];
      uint64_t v9 = v0[10];
      uint64_t v27 = v0[9];
      uint64_t v28 = v0[11];
      uint64_t v10 = v0[7];
      uint64_t v11 = v0[5];
      uint64_t v29 = v0[6];
      uint64_t v31 = v0[8];
      uint64_t v12 = sub_1DD0478C8();
      uint64_t v13 = *(void *)(v12 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v9, v11, v12);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v27, 1, 1, v28);
      uint64_t v5 = v0 + 7;
      sub_1DCE6B074(&qword_1EAB03A28, MEMORY[0x1E4F89C58]);
      uint64_t v14 = (void *)swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v15, v31, v29);
      ((void (*)(uint64_t, uint64_t, void, unint64_t, void *))v7)(v9, v27, 0, 0xE000000000000000, v14);
      swift_release();

      sub_1DCD33E90((uint64_t)v7);
      sub_1DCD2479C(v27, &qword_1EAB02640);
      sub_1DCD2479C(v9, &qword_1EAB03A18);
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v4 = v0 + 13;
    uint64_t v5 = v0 + 12;
    uint64_t v6 = v0 + 11;
    (*(void (**)(void, uint64_t, void))(v0[12] + 32))(v0[13], v2, v0[11]);
    uint64_t v16 = sub_1DCE5D0E8(v3);
    if (v16)
    {
      uint64_t v17 = v0[12];
      uint64_t v18 = v0[10];
      uint64_t v30 = v0[11];
      uint64_t v32 = v0[13];
      uint64_t v19 = v0[9];
      uint64_t v20 = v0[5];
      uint64_t v21 = sub_1DD0478C8();
      uint64_t v22 = *(void *)(v21 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v18, v20, v21);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v19, v32, v30);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v30);
      ((void (*)(uint64_t, uint64_t, void, unint64_t, void))v16)(v18, v19, 0, 0xE000000000000000, 0);
      swift_release();
      sub_1DCD33E90((uint64_t)v16);
      uint64_t v23 = v19;
      uint64_t v5 = v0 + 12;
      sub_1DCD2479C(v23, &qword_1EAB02640);
      sub_1DCD2479C(v18, &qword_1EAB03A18);
      goto LABEL_7;
    }
  }
  swift_release();
LABEL_7:
  uint64_t v24 = v0[16];
  (*(void (**)(void, void))(*v5 + 8))(*v4, *v6);
  sub_1DCD2479C(v24, &qword_1EAB03A20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_1DCE627D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039E8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v8, &qword_1EAB039E8);
  uint64_t v9 = sub_1DD048758();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1DCD2479C((uint64_t)v8, &qword_1EAB039E8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1DD048738();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1DD048748();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_1DCE629C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  uint64_t v7 = sub_1DD047A38();
  v6[5] = v7;
  v6[6] = *(void *)(v7 - 8);
  v6[7] = swift_task_alloc();
  uint64_t v8 = sub_1DD0478E8();
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = swift_task_alloc();
  v6[12] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A20);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DCE62B3C, 0, 0);
}

uint64_t sub_1DCE62B3C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1DD047A28();
  swift_allocObject();
  *(void *)(v0 + 120) = sub_1DD047A18();
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 128) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(sub_1DD0478C8() - 8);
    int v5 = *(_DWORD *)(v4 + 80);
    *(_DWORD *)(v0 + 176) = v5;
    uint64_t v6 = *(void *)(v4 + 72);
    uint64_t v7 = MEMORY[0x1E4FBC860];
    *(void *)(v0 + 152) = MEMORY[0x1E4FBC860];
    *(void *)(v0 + 160) = v7;
    *(void *)(v0 + 136) = v6;
    *(void *)(v0 + 144) = 0;
    uint64_t v8 = v3 + ((v5 + 32) & ~(unint64_t)v5);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x1E4F89C50] + MEMORY[0x1E4F89C50]);
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1DCE62D6C;
    uint64_t v10 = *(void *)(v0 + 112);
    return v15(v10, v8);
  }
  else
  {
    uint64_t v12 = sub_1DCE5D298(*(void *)(v0 + 32));
    if (v12)
    {
      uint64_t v13 = (uint64_t)v12;
      v12(*(void *)(v0 + 16), MEMORY[0x1E4FBC860], 0, 0xE000000000000000, MEMORY[0x1E4FBC860]);
      sub_1DCD33E90(v13);
    }
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_1DCE62D6C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1DCE62E68, 0, 0);
}

uint64_t sub_1DCE62E68()
{
  sub_1DCD2889C(*(void *)(v0 + 112), *(void *)(v0 + 104), &qword_1EAB03A20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = *(void *)(v0 + 104);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v5 = *(void *)(v0 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v2, v5);
    sub_1DCE6B074(&qword_1EAB03A28, MEMORY[0x1E4F89C58]);
    uint64_t v6 = swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, v3, v5);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *(void **)(v0 + 160);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v9 = sub_1DCE9EB74(0, v9[2] + 1, 1, *(void **)(v0 + 160));
    }
    unint64_t v11 = v9[2];
    unint64_t v10 = v9[3];
    if (v11 >= v10 >> 1) {
      uint64_t v9 = sub_1DCE9EB74((void *)(v10 > 1), v11 + 1, 1, v9);
    }
    uint64_t v13 = *(void *)(v0 + 48);
    uint64_t v12 = *(void *)(v0 + 56);
    uint64_t v14 = *(void *)(v0 + 40);
    id v9[2] = v11 + 1;
    v9[v11 + 4] = v6;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    unint64_t v15 = *(void *)(v0 + 152);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 80);
    unint64_t v16 = *(void *)(v0 + 88);
    uint64_t v18 = *(void *)(v0 + 64);
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v20 = *(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 32);
    v20(v16, v2, v18);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v19 + 16))(v17, v16, v18);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v15 = *(void *)(v0 + 152);
    if ((v21 & 1) == 0) {
      unint64_t v15 = sub_1DCE9FFA4(0, *(void *)(v15 + 16) + 1, 1, *(void *)(v0 + 152));
    }
    unint64_t v23 = *(void *)(v15 + 16);
    unint64_t v22 = *(void *)(v15 + 24);
    if (v23 >= v22 >> 1) {
      unint64_t v15 = sub_1DCE9FFA4(v22 > 1, v23 + 1, 1, v15);
    }
    uint64_t v24 = *(void *)(v0 + 80);
    uint64_t v25 = *(void *)(v0 + 88);
    uint64_t v26 = *(void *)(v0 + 64);
    uint64_t v27 = *(void *)(v0 + 72);
    *(void *)(v15 + 16) = v23 + 1;
    v20(v15+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v23, v24, v26);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    uint64_t v9 = *(void **)(v0 + 160);
  }
  uint64_t v28 = *(void *)(v0 + 128);
  uint64_t v29 = *(void *)(v0 + 144) + 1;
  sub_1DCD2479C(*(void *)(v0 + 112), &qword_1EAB03A20);
  if (v29 == v28)
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_1DCE5D298(*(void *)(v0 + 32));
    if (v30)
    {
      uint64_t v31 = (uint64_t)v30;
      v30(*(void *)(v0 + 16), v15, 0, 0xE000000000000000, (uint64_t)v9);
      sub_1DCD33E90(v31);
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
  else
  {
    uint64_t v34 = *(void *)(v0 + 136);
    uint64_t v35 = *(void *)(v0 + 144) + 1;
    *(void *)(v0 + 152) = v15;
    *(void *)(v0 + 160) = v9;
    *(void *)(v0 + 144) = v35;
    unint64_t v36 = *(void *)(v0 + 16)
        + ((*(unsigned __int8 *)(v0 + 176) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 176))
        + v34 * v35;
    uint64_t v39 = (uint64_t (*)(uint64_t, unint64_t))((int)*MEMORY[0x1E4F89C50] + MEMORY[0x1E4F89C50]);
    BOOL v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v37;
    void *v37 = v0;
    v37[1] = sub_1DCE62D6C;
    uint64_t v38 = *(void *)(v0 + 112);
    return v39(v38, v36);
  }
}

uint64_t sub_1DCE63290()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_requestTimeout;
  uint64_t v2 = sub_1DD0481A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1DCE6336C()
{
  sub_1DCE63290();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCE633C4()
{
  return type metadata accessor for NetworkService(0);
}

uint64_t type metadata accessor for NetworkService(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86C10);
}

uint64_t sub_1DCE633EC()
{
  uint64_t result = sub_1DD0481A8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCE634B0()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCE634EC(uint64_t a1)
{
  return sub_1DCE63614(a1, sub_1DCE607F0);
}

uint64_t objectdestroy_27Tm()
{
  uint64_t v1 = sub_1DD047488();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1DCE635FC(uint64_t a1)
{
  return sub_1DCE63614(a1, sub_1DCE60D6C);
}

uint64_t sub_1DCE63614(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_1DD047488() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + v5;
  uint64_t v9 = (uint64_t *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  return a2(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1DCE636CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[20] = a8;
  v8[21] = v17;
  v8[18] = a6;
  v8[19] = a7;
  v8[16] = a4;
  v8[17] = a5;
  uint64_t v9 = sub_1DD0481B8();
  v8[22] = v9;
  v8[23] = *(void *)(v9 - 8);
  v8[24] = swift_task_alloc();
  uint64_t v10 = sub_1DD0481D8();
  v8[25] = v10;
  v8[26] = *(void *)(v10 - 8);
  v8[27] = swift_task_alloc();
  uint64_t v11 = sub_1DD047488();
  v8[28] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v8[29] = v12;
  v8[30] = *(void *)(v12 + 64);
  v8[31] = swift_task_alloc();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039C8);
  v8[32] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v8[33] = v14;
  v8[34] = *(void *)(v14 + 64);
  v8[35] = swift_task_alloc();
  v8[36] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DCE638D4, 0, 0);
}

uint64_t sub_1DCE638D4()
{
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 128) + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_requestTimeout;
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 296) = v7;
  *(void *)(v0 + 304) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v1, v4, v2);
  int v8 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 360) = v8;
  unint64_t v9 = (v8 + 24) & ~(unint64_t)v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 312) = v10;
  *(void *)(v10 + 16) = v6;
  uint64_t v11 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  *(void *)(v0 + 320) = v11;
  *(void *)(v0 + 328) = (v3 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v11(v10 + v9, v1, v2);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v12;
  v12[2] = &unk_1EAB03A88;
  v12[3] = v10;
  v12[4] = v5;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1DCE63AA4;
  uint64_t v14 = *(void *)(v0 + 288);
  return MEMORY[0x1F4188080](v14);
}

uint64_t sub_1DCE63AA4()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DCE63F20;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = sub_1DCE63BCC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DCE63BCC()
{
  unint64_t v22 = (void (*)(uint64_t, uint64_t, uint64_t))v0[40];
  uint64_t v1 = *((unsigned __int8 *)v0 + 360);
  uint64_t v3 = v0[35];
  uint64_t v2 = v0[36];
  uint64_t v26 = v2;
  uint64_t v4 = v0[33];
  uint64_t v19 = v0[34];
  uint64_t v6 = v0[30];
  uint64_t v5 = v0[31];
  uint64_t v7 = v0[28];
  uint64_t v23 = v0[27];
  uint64_t v28 = v0[26];
  uint64_t v29 = v0[25];
  uint64_t v27 = v0[23];
  uint64_t v24 = v0[24];
  uint64_t v25 = v0[22];
  uint64_t v20 = v0[20];
  uint64_t v21 = v0[21];
  int v8 = (void *)v0[18];
  uint64_t v9 = v0[16];
  ((void (*)(uint64_t, void, uint64_t))v0[37])(v5, v0[19], v7);
  sub_1DCD2889C(v2, v3, &qword_1EAB039C8);
  uint64_t v10 = (v1 + 32) & ~v1;
  unint64_t v11 = (v6 + v10 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v9;
  *(void *)(v12 + 24) = v8;
  uint64_t v13 = v8;
  v22(v12 + v10, v5, v7);
  sub_1DCD43B04(v3, v12 + v11, &qword_1EAB039C8);
  uint64_t v14 = (void *)(v12 + ((v19 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v14 = v20;
  v14[1] = v21;
  v0[12] = sub_1DCE69B9C;
  v0[13] = v12;
  v0[8] = MEMORY[0x1E4F143A8];
  v0[9] = 1107296256;
  v0[10] = sub_1DCEC8CA4;
  v0[11] = &block_descriptor_81;
  unint64_t v15 = _Block_copy(v0 + 8);
  swift_retain();
  id v16 = v13;
  swift_bridgeObjectRetain();
  sub_1DD0481C8();
  v0[15] = MEMORY[0x1E4FBC860];
  sub_1DCE6B074(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCD52850((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v23, v24, v15);
  _Block_release(v15);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v24, v25);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v23, v29);
  sub_1DCD2479C(v26, &qword_1EAB039C8);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1DCE63F20()
{
  uint64_t v21 = (void *)v0[44];
  uint64_t v20 = (void (*)(uint64_t, uint64_t, uint64_t))v0[40];
  uint64_t v1 = *((unsigned __int8 *)v0 + 360);
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[37];
  uint64_t v3 = v0[31];
  uint64_t v17 = v0[30];
  uint64_t v4 = v0[28];
  uint64_t v22 = v0[27];
  uint64_t v26 = v0[26];
  uint64_t v27 = v0[25];
  uint64_t v25 = v0[23];
  uint64_t v23 = v0[24];
  uint64_t v24 = v0[22];
  uint64_t v5 = v0[19];
  uint64_t v18 = v0[20];
  uint64_t v19 = v0[21];
  uint64_t v6 = (void *)v0[18];
  uint64_t v7 = v0[16];
  swift_task_dealloc();
  swift_release();
  v2(v3, v5, v4);
  uint64_t v8 = (v1 + 32) & ~v1;
  unint64_t v9 = (v17 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v6;
  v20(v10 + v8, v3, v4);
  unint64_t v11 = (void *)(v10 + v9);
  *unint64_t v11 = v18;
  v11[1] = v19;
  *(void *)(v10 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8)) = v21;
  v0[6] = sub_1DCE69918;
  v0[7] = v10;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1DCEC8CA4;
  v0[5] = &block_descriptor_2;
  uint64_t v12 = _Block_copy(v0 + 2);
  swift_retain();
  id v13 = v6;
  swift_bridgeObjectRetain();
  id v14 = v21;
  sub_1DD0481C8();
  v0[14] = MEMORY[0x1E4FBC860];
  sub_1DCE6B074(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCD52850((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v22, v23, v12);
  _Block_release(v12);

  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v22, v27);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1DCE64250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return MEMORY[0x1F4188298](sub_1DCE64274, 0, 0);
}

uint64_t sub_1DCE64274()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v0[8] = *(void *)(Strong + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_cameraSearchClient);
    swift_retain();
    swift_release();
    unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x1E4F89C20] + MEMORY[0x1E4F89C20]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[9] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1DCE643EC;
    uint64_t v3 = v0[7];
    uint64_t v4 = v0[5];
    return v9(v4, v3);
  }
  else
  {
    uint64_t v6 = v0[5];
    uint64_t v7 = sub_1DD0474A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1DCE643EC()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DCE645A8;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1DCE64508;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DCE64508()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = sub_1DD0474A8();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1DCE645A8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DCE6460C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
  MEMORY[0x1F4188790](v12 - 8);
  id v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DD046598();
  uint64_t v16 = *(void *)(v15 - 8);
  double v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))(v19, a2 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier, v15, v17);
  uint64_t v20 = (uint64_t *)(a1 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_completions);
  swift_beginAccess();
  uint64_t v21 = *v20;
  if (*(void *)(*v20 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1DCEAD840((uint64_t)v19);
    if (v23)
    {
      uint64_t v28 = *(void (**)(char *, uint64_t, void *, uint64_t *))(*(void *)(v21 + 56) + 16 * v22);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
      uint64_t v24 = sub_1DD047488();
      uint64_t v25 = *(void *)(v24 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v14, a3, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v14, 0, 1, v24);
      v30[0] = a5;
      v30[1] = a6;
      uint64_t v29 = 0;
      v28(v14, a4, v30, &v29);
      swift_release();
      return sub_1DCD2479C((uint64_t)v14, &qword_1EAB028D0);
    }
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t sub_1DCE648A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = a6;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039C8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DD046598();
  uint64_t v18 = *(void *)(v17 - 8);
  double v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))(v21, a2 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier, v17, v19);
  unint64_t v22 = (uint64_t *)(a1 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_completions);
  swift_beginAccess();
  uint64_t v23 = *v22;
  if (*(void *)(*v22 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_1DCEAD840((uint64_t)v21);
    if (v25)
    {
      uint64_t v30 = *(void (**)(char *, char *, void *, uint64_t *))(*(void *)(v23 + 56) + 16 * v24);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      uint64_t v26 = sub_1DD047488();
      uint64_t v27 = *(void *)(v26 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v16, a3, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v16, 0, 1, v26);
      uint64_t v28 = sub_1DD0474A8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v13, 1, 1, v28);
      v33[0] = a4;
      v33[1] = a5;
      uint64_t v32 = v31;
      v30(v16, v13, v33, &v32);
      swift_release();
      sub_1DCD2479C((uint64_t)v13, &qword_1EAB039C8);
      return sub_1DCD2479C((uint64_t)v16, &qword_1EAB028D0);
    }
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v17);
}

uint64_t sub_1DCE64BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD048758();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1DD048748();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1DCD2479C(a1, &qword_1EAB039E8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1DD048738();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1DCE64D8C(long long *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1DCE64DD0(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_1F3841320, (uint64_t)sub_1DCE6AD44, (uint64_t)&block_descriptor_173);
}

uint64_t sub_1DCE64DD0(long long *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v44[1] = a8;
  uint64_t v48 = a7;
  uint64_t v47 = a6;
  uint64_t v49 = a3;
  uint64_t v50 = a10;
  uint64_t v45 = a9;
  uint64_t v52 = sub_1DD0481B8();
  uint64_t v55 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v51 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1DD0481D8();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  MEMORY[0x1F4188790](v18 - 8);
  long long v21 = a1[8];
  long long v22 = a1[10];
  long long v67 = a1[9];
  long long v68 = v22;
  long long v23 = a1[4];
  long long v24 = a1[6];
  long long v25 = a1[7];
  long long v63 = a1[5];
  long long v64 = v24;
  uint64_t v69 = *((void *)a1 + 22);
  long long v65 = v25;
  long long v66 = v21;
  long long v26 = a1[1];
  long long v58 = *a1;
  long long v59 = v26;
  long long v27 = a1[3];
  long long v60 = a1[2];
  long long v61 = v27;
  long long v62 = v23;
  uint64_t v46 = *(void *)(v10 + 16);
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  sub_1DCE6A774(a2, (uint64_t)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  unint64_t v29 = (*(unsigned __int8 *)(v19 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v30 = swift_allocObject();
  long long v31 = v65;
  *(_OWORD *)(v30 + 184) = v66;
  long long v32 = v68;
  *(_OWORD *)(v30 + 200) = v67;
  *(_OWORD *)(v30 + 216) = v32;
  *(_OWORD *)(v30 + 120) = v62;
  long long v33 = v64;
  *(_OWORD *)(v30 + 136) = v63;
  *(_OWORD *)(v30 + 152) = v33;
  *(_OWORD *)(v30 + 168) = v31;
  long long v34 = v59;
  *(_OWORD *)(v30 + 56) = v58;
  *(_OWORD *)(v30 + 72) = v34;
  long long v35 = v61;
  *(_OWORD *)(v30 + 88) = v60;
  *(void *)(v30 + 16) = v28;
  *(void *)(v30 + 24) = a5;
  uint64_t v36 = v47;
  *(void *)(v30 + 32) = a4;
  *(void *)(v30 + 40) = v36;
  *(void *)(v30 + 48) = v48;
  *(void *)(v30 + 232) = v69;
  *(_OWORD *)(v30 + 104) = v35;
  sub_1DCE6A9EC((uint64_t)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  BOOL v37 = v49;
  *(void *)(v30 + ((v20 + v29 + 7) & 0xFFFFFFFFFFFFFFF8)) = v49;
  aBlock[4] = v45;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCEC8CA4;
  aBlock[3] = v50;
  uint64_t v38 = _Block_copy(aBlock);
  swift_retain();
  id v39 = a4;
  swift_retain();
  swift_retain();
  sub_1DCD433F0((uint64_t)&v58);
  id v40 = v37;
  sub_1DD0481C8();
  uint64_t v56 = MEMORY[0x1E4FBC860];
  sub_1DCE6B074(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCD52850((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  unint64_t v41 = v51;
  uint64_t v42 = v52;
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v17, v41, v38);
  _Block_release(v38);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v42);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v17, v54);
  swift_release();
  return swift_release();
}

uint64_t sub_1DCE6530C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v45 = a7;
  uint64_t v46 = a8;
  uint64_t v44 = a6;
  uint64_t v49 = a4;
  uint64_t v11 = sub_1DD048068();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v47 = (uint64_t)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1DD046598();
  uint64_t v14 = *(void *)(v48 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v48);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    uint64_t v40 = v12;
    uint64_t v41 = v11;
    strcpy((char *)v52, "E2E - Search");
    HIBYTE(v52[6]) = 0;
    v52[7] = -5120;
    uint64_t v53 = "Search On Server";
    uint64_t v54 = 16;
    char v55 = 2;
    type metadata accessor for DurationMeasurement();
    swift_allocObject();
    swift_retain();
    uint64_t v19 = sub_1DCEA469C((uint64_t)v52, a2);
    uint64_t v50 = a3;
    uint64_t v43 = v19;
    swift_release();
    uint64_t v42 = a5;
    uint64_t v20 = v50 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier;
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    uint64_t v22 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v48);
    unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    unint64_t v24 = (v15 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v21;
    unint64_t v26 = v25 + v23;
    long long v27 = v16;
    uint64_t v28 = v43;
    uint64_t v29 = v50;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v26, v27, v22);
    *(void *)(v25 + v24) = v28;
    uint64_t v30 = (void *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v31 = v42;
    void *v30 = v49;
    v30[1] = v31;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_1DCE6AA74;
    *(void *)(v32 + 24) = v25;
    long long v33 = (uint64_t *)(v18 + OBJC_IVAR____TtC18VisualIntelligence14NetworkService_completions);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = *v33;
    *long long v33 = 0x8000000000000000;
    sub_1DCE864CC((uint64_t)sub_1DCE6A2BC, v32, v20, isUniquelyReferenced_nonNull_native);
    *long long v33 = v51;
    swift_bridgeObjectRelease();
    swift_endAccess();
    long long v35 = (os_unfair_lock_s *)(*(void *)(v29 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
    os_unfair_lock_lock(v35);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
    os_unfair_lock_unlock(v35);
    if (v31 == 1)
    {
      uint64_t v36 = v47;
      sub_1DCDB40EC(v47);
      BOOL v37 = sub_1DD048048();
      os_log_type_t v38 = sub_1DD048848();
      if (os_log_type_enabled(v37, v38))
      {
        id v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v39 = 0;
        _os_log_impl(&dword_1DCCF9000, v37, v38, "checkCancel(): has already been canceled", v39, 2u);
        MEMORY[0x1E01B07E0](v39, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v36, v41);
      sub_1DCE5B508(v20);
    }
    else
    {
      sub_1DCE5D448(v29);
      sub_1DCE5DB9C(v44, v45, v46, v29);
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCE657A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  _OWORD v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03AA0);
  v5[7] = swift_task_alloc();
  uint64_t v6 = sub_1DD0481A8();
  v5[8] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[9] = v7;
  v5[10] = *(void *)(v7 + 64);
  v5[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039E8);
  v5[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1DCE658D8, 0, 0);
}

uint64_t sub_1DCE658D8()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v16 = v0[11];
  uint64_t v3 = v0[5];
  uint64_t v14 = v0[6];
  uint64_t v15 = v0[8];
  uint64_t v4 = v0[4];
  uint64_t v5 = sub_1DD048758();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v1, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  v7[5] = v3;
  swift_retain();
  sub_1DCE65F90(v1, (uint64_t)&unk_1EAB03AB0, (uint64_t)v7);
  sub_1DCD2479C(v1, &qword_1EAB039E8);
  v6(v1, 1, 1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v16, v14, v15);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v9 + v8, v16, v15);
  sub_1DCE65F90(v1, (uint64_t)&unk_1EAB03AC0, v9);
  sub_1DCD2479C(v1, &qword_1EAB039E8);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[13] = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03AC8);
  *uint64_t v10 = v0;
  v10[1] = sub_1DCE65B1C;
  uint64_t v12 = v0[7];
  return MEMORY[0x1F4187E30](v12, 0, 0, v11);
}

uint64_t sub_1DCE65B1C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1DCE65D48;
  }
  else {
    uint64_t v2 = sub_1DCE65C30;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1DCE65C30()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039C8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1DCD43B04(v1, v0[2], &qword_1EAB039C8);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
    sub_1DD048788();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  return result;
}

uint64_t sub_1DCE65D48()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DCE65DC0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  unint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1DCE65E9C;
  return v8(a1);
}

uint64_t sub_1DCE65E9C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1DCE65F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039E8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v9, &qword_1EAB039E8);
  uint64_t v10 = sub_1DD048758();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1DCD2479C((uint64_t)v9, &qword_1EAB039E8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_1DD048738();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1DD048748();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039C8);
  uint64_t v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  void v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1DCE66174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 32) = a4;
  return MEMORY[0x1F4188298](sub_1DCE66194, 0, 0);
}

uint64_t sub_1DCE66194()
{
  uint64_t v1 = sub_1DCFE69B0();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1DCE66234;
  return MEMORY[0x1F4187DE0](v1);
}

uint64_t sub_1DCE66234()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1DCE66364, 0, 0);
  }
}

uint64_t sub_1DCE66364()
{
  sub_1DD048B98();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_1DD048548();
  sub_1DD0481A8();
  sub_1DD048C88();
  sub_1DD048548();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  sub_1DCE69FB4();
  swift_allocError();
  *uint64_t v3 = v1;
  v3[1] = v2;
  swift_willThrow();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1DCE66470(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1DCE6654C;
  return v6(a1);
}

uint64_t sub_1DCE6654C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1DCE66644()
{
  uint64_t v1 = sub_1DD0478C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  unint64_t v7 = (((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = (v3 + v7 + 8) & ~v3;
  uint64_t v9 = v8 + v5;
  swift_unknownObjectRelease();
  uint64_t v10 = v0 + v4;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v10, v1);
  swift_release();

  v11(v0 + v8, v1);
  return MEMORY[0x1F4186498](v0, v9, v6);
}

uint64_t sub_1DCE66764(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1DD0478C8() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  unint64_t v7 = (*(void *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = *(void *)(v1 + v7);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = *(void *)(v1 + v8);
  uint64_t v14 = v1 + ((v5 + v8 + 8) & ~v5);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_1DCE65E9C;
  return sub_1DCE61FF8(a1, v9, v10, v12, v11, v13, v14);
}

uint64_t sub_1DCE668B4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1DCE6CD60;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EAB03A08 + dword_1EAB03A08);
  return v6(a1, v4);
}

uint64_t sub_1DCE6696C()
{
  uint64_t v1 = sub_1DD0478C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_1DCE66A50(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1DD0478C8() - 8);
  sub_1DCE687A8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), v1 + ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1DCE66ACC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1DCE6CD60;
  return sub_1DCE615E0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1DCE66B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for VisualUnderstanding.ImageRegion() - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v44 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v39 - v11;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v48 = MEMORY[0x1E4FBC860];
  uint64_t v46 = *(void *)(a1 + 16);
  if (v46)
  {
    uint64_t v14 = 0;
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v47 = *(void *)(v10 + 72);
    v39[1] = v3;
    uint64_t v40 = (v15 + 32) & ~v15;
    uint64_t v45 = a1 + v40;
    uint64_t v42 = a2;
    uint64_t v43 = a3;
    uint64_t v41 = (char *)v39 - v11;
    while (1)
    {
      sub_1DCE6A774(v45 + v47 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v16 = *((void *)v12 + 14);
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17) {
        break;
      }
      uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
      if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
        goto LABEL_3;
      }
LABEL_31:
      uint64_t v33 = v19[5];
      uint64_t v32 = v19[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v33 == a2 && v32 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v35 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0) {
          goto LABEL_4;
        }
      }
      sub_1DCE6A9EC((uint64_t)v12, v44, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v36 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCFC49E8(0, *(void *)(v36 + 16) + 1, 1);
        uint64_t v36 = v48;
      }
      unint64_t v38 = *(void *)(v36 + 16);
      unint64_t v37 = *(void *)(v36 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_1DCFC49E8(v37 > 1, v38 + 1, 1);
        uint64_t v36 = v48;
      }
      *(void *)(v36 + 16) = v38 + 1;
      sub_1DCE6A9EC(v44, v36 + v40 + v38 * v47, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_5:
      if (++v14 == v46) {
        return v48;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = 64;
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v20 = *(void *)(v16 + v18);
      uint64_t v21 = *(void *)(v20 + 16);
      int64_t v22 = v19[2];
      int64_t v23 = v22 + v21;
      if (__OFADD__(v22, v21))
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        uint64_t result = sub_1DD048D18();
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v23 <= v19[3] >> 1)
      {
        if (*(void *)(v20 + 16)) {
          goto LABEL_19;
        }
      }
      else
      {
        if (v22 <= v23) {
          int64_t v25 = v22 + v21;
        }
        else {
          int64_t v25 = v22;
        }
        uint64_t v19 = sub_1DCE9E590(isUniquelyReferenced_nonNull_native, v25, 1, v19);
        if (*(void *)(v20 + 16))
        {
LABEL_19:
          uint64_t v26 = v19[2];
          if ((v19[3] >> 1) - v26 < v21) {
            goto LABEL_47;
          }
          unint64_t v27 = (unint64_t)&v19[3 * v26 + 4];
          if (v20 + 32 < v27 + 24 * v21 && v27 < v20 + 32 + 24 * v21) {
            goto LABEL_49;
          }
          swift_arrayInitWithCopy();
          if (v21)
          {
            uint64_t v29 = v19[2];
            BOOL v30 = __OFADD__(v29, v21);
            uint64_t v31 = v29 + v21;
            if (v30) {
              goto LABEL_48;
            }
            v19[2] = v31;
          }
          goto LABEL_9;
        }
      }
      if (v21) {
        goto LABEL_46;
      }
LABEL_9:
      swift_bridgeObjectRelease();
      v18 += 48;
      if (!--v17)
      {
        swift_bridgeObjectRelease();
        a2 = v42;
        a3 = v43;
        uint64_t v12 = v41;
        if (v19[2]) {
          goto LABEL_31;
        }
LABEL_3:
        swift_bridgeObjectRelease();
LABEL_4:
        sub_1DCE6A7DC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        goto LABEL_5;
      }
    }
  }
  return result;
}

void sub_1DCE66FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v92 = a2;
  uint64_t v101 = a6;
  uint64_t v98 = (char *)a1;
  uint64_t v99 = a4;
  uint64_t v94 = a3;
  uint64_t v6 = sub_1DD048068();
  uint64_t v96 = *(void *)(v6 - 8);
  uint64_t v97 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v100 = (uint64_t)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1DD0471B8();
  uint64_t v95 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v93 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v88 = sub_1DD047B98();
  uint64_t v90 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  unint64_t v89 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A48);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v80 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v80 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A30);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1DD0477F8();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  int64_t v25 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v26;
  uint64_t v28 = swift_projectBox();
  sub_1DCD2889C((uint64_t)v98, (uint64_t)v21, &qword_1EAB03A30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v27) == 1)
  {
    sub_1DCD2479C((uint64_t)v21, &qword_1EAB03A30);
    sub_1DCD676DC();
    uint64_t v29 = (void *)swift_allocError();
    *(void *)uint64_t v30 = 0;
    *(void *)(v30 + 8) = 0;
    *(unsigned char *)(v30 + 16) = 2;
    swift_willThrow();
  }
  else
  {
    uint64_t v82 = v15;
    long long v86 = v12;
    uint64_t v81 = v28;
    unint64_t v31 = v88;
    uint64_t v98 = v18;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v21, v27);
    uint64_t v32 = sub_1DD0477E8();
    uint64_t v33 = *(void *)(v32 + 16);
    uint64_t v84 = v23;
    uint64_t v85 = v27;
    uint64_t v83 = v25;
    if (v33)
    {
      unint64_t v34 = sub_1DCEAD1A4(0xD000000000000014, 0x80000001DD067670);
      uint64_t v35 = (uint64_t)v98;
      if (v36)
      {
        unint64_t v37 = v34;
        uint64_t v38 = *(void *)(v32 + 56);
        uint64_t v39 = sub_1DD0474D8();
        uint64_t v40 = *(void *)(v39 - 8);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v40 + 16))(v35, v38 + *(void *)(v40 + 72) * v37, v39);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v35, 0, 1, v39);
      }
      else
      {
        uint64_t v39 = sub_1DD0474D8();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v35, 1, 1, v39);
      }
    }
    else
    {
      uint64_t v39 = sub_1DD0474D8();
      uint64_t v35 = (uint64_t)v98;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v98, 1, 1, v39);
    }
    uint64_t v41 = (uint64_t)v86;
    uint64_t v42 = (uint64_t)v82;
    swift_bridgeObjectRelease();
    sub_1DCD2889C(v35, v42, &qword_1EAB03A48);
    sub_1DD0474D8();
    uint64_t v43 = *(void *)(v39 - 8);
    uint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
    if (v44(v42, 1, v39) == 1)
    {
      sub_1DCD2479C(v42, &qword_1EAB03A48);
      long long v86 = 0;
      unint64_t v88 = 0xC000000000000000;
      uint64_t v46 = v89;
      uint64_t v45 = v90;
    }
    else
    {
      uint64_t v46 = v89;
      sub_1DD0474B8();
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v39);
      long long v86 = (char *)sub_1DD047B78();
      unint64_t v88 = v47;
      uint64_t v45 = v90;
      (*(void (**)(char *, unint64_t))(v90 + 8))(v46, v31);
    }
    sub_1DCD2889C(v35, v41, &qword_1EAB03A48);
    if (v44(v41, 1, v39) == 1)
    {
      sub_1DCD2479C(v41, &qword_1EAB03A48);
      uint64_t v48 = 0;
      unint64_t v49 = 0xC000000000000000;
    }
    else
    {
      sub_1DD0474C8();
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v39);
      uint64_t v48 = sub_1DD047B78();
      uint64_t v50 = v46;
      unint64_t v49 = v51;
      (*(void (**)(char *, unint64_t))(v45 + 8))(v50, v31);
    }
    uint64_t v52 = v95;
    uint64_t v53 = v92;
    uint64_t v54 = (uint64_t)v93;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v56 = v94;
    uint64_t v57 = (uint64_t)v86;
    unint64_t v58 = v88;
    long long v59 = v91;
    (*(void (**)(char *, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v94 + 24))(v86, v88, v48, v49, ObjectType, v94);
    uint64_t v29 = v59;
    if (!v59)
    {
      uint64_t v78 = v81;
      swift_beginAccess();
      uint64_t v79 = v87;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v54, v78, v87);
      sub_1DCE5E520(v54, v53, v56, v101);
      sub_1DCD21954(v48, v49);
      sub_1DCD21954((uint64_t)v86, v88);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v54, v79);
      sub_1DCD2479C((uint64_t)v98, &qword_1EAB03A48);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v85);
      return;
    }
    sub_1DCD21954(v48, v49);
    sub_1DCD21954(v57, v58);
    sub_1DCD2479C((uint64_t)v98, &qword_1EAB03A48);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v85);
  }
  uint64_t v61 = v100;
  uint64_t v60 = (uint64_t)v101;
  sub_1DCDB40EC(v100);
  id v62 = v29;
  id v63 = v29;
  long long v64 = sub_1DD048048();
  os_log_type_t v65 = sub_1DD048858();
  if (os_log_type_enabled(v64, v65))
  {
    long long v66 = (uint8_t *)swift_slowAlloc();
    long long v67 = (void *)swift_slowAlloc();
    *(_DWORD *)long long v66 = 138412290;
    id v68 = v29;
    uint64_t v69 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v102 = v69;
    uint64_t v61 = v100;
    sub_1DD048A28();
    *long long v67 = v69;

    _os_log_impl(&dword_1DCCF9000, v64, v65, "performExperimentalPegasusRequest(): processingConfigError %@", v66, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
    swift_arrayDestroy();
    uint64_t v60 = (uint64_t)v101;
    MEMORY[0x1E01B07E0](v67, -1, -1);
    MEMORY[0x1E01B07E0](v66, -1, -1);
  }
  else
  {
  }
  uint64_t v71 = v96;
  uint64_t v70 = v97;

  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v61, v70);
  sub_1DCDCCCB8();
  id v72 = v29;
  id v73 = v29;
  uint64_t v74 = sub_1DCE5D298(v60);
  if (v74)
  {
    uint64_t v75 = v74;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03AE0);
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = xmmword_1DD04E910;
    *(void *)(v76 + 32) = v29;
    id v77 = v29;
    v75(MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0, 0xE000000000000000, v76);

    sub_1DCD33E90((uint64_t)v75);
    swift_bridgeObjectRelease();
  }
  else
  {
  }
}

void sub_1DCE67A9C(long long *a1, uint64_t a2, uint64_t a3, char *a4, char *a5)
{
  uint64_t v6 = v5;
  float v108 = a4;
  uint64_t v109 = a3;
  uint64_t v107 = sub_1DD0471B8();
  uint64_t v104 = *(void **)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v102 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039E8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v101 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A30);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v100 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v103 = (uint64_t)&v97 - v15;
  uint64_t v16 = sub_1DD0477F8();
  uint64_t v105 = *(void *)(v16 - 8);
  uint64_t v106 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v99 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1DD048068();
  uint64_t v112 = *(void *)(v21 - 8);
  uint64_t v113 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v111 = (uint64_t)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  int64_t v25 = (char *)&v97 - v24;
  uint64_t v26 = sub_1DD048208();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (uint64_t *)((char *)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v30 = a1[9];
  long long v134 = a1[8];
  long long v135 = v30;
  long long v136 = a1[10];
  uint64_t v137 = *((void *)a1 + 22);
  long long v31 = a1[5];
  long long v130 = a1[4];
  long long v131 = v31;
  long long v32 = a1[7];
  long long v132 = a1[6];
  long long v133 = v32;
  long long v33 = a1[1];
  long long v126 = *a1;
  long long v127 = v33;
  long long v34 = a1[3];
  long long v128 = a1[2];
  long long v129 = v34;
  uint64_t v110 = v6;
  uint64_t v35 = *(void **)(v6 + 16);
  *uint64_t v29 = v35;
  (*(void (**)(void *, void, uint64_t))(v27 + 104))(v29, *MEMORY[0x1E4FBCBF0], v26);
  id v36 = v35;
  LOBYTE(v35) = sub_1DD048228();
  (*(void (**)(void *, uint64_t))(v27 + 8))(v29, v26);
  if ((v35 & 1) == 0)
  {
    __break(1u);
    return;
  }
  unint64_t v37 = (os_unfair_lock_s *)(*(void *)&a5[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
  os_unfair_lock_lock(v37);
  int v38 = a5[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
  os_unfair_lock_unlock(v37);
  if (v38 == 1)
  {
    sub_1DCDB40EC((uint64_t)v25);
    uint64_t v39 = sub_1DD048048();
    os_log_type_t v40 = sub_1DD048848();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl(&dword_1DCCF9000, v39, v40, "checkCancel(): has already been canceled", v41, 2u);
      MEMORY[0x1E01B07E0](v41, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v112 + 8))(v25, v113);
    return;
  }
  long long v122 = v134;
  long long v123 = v135;
  long long v124 = v136;
  uint64_t v125 = v137;
  long long v118 = v130;
  long long v119 = v131;
  long long v120 = v132;
  long long v121 = v133;
  long long v114 = v126;
  long long v115 = v127;
  long long v116 = v128;
  long long v117 = v129;
  uint64_t v42 = sub_1DCF22DA4();
  uint64_t v43 = sub_1DCE66B94(v42, 0xD00000000000002DLL, 0x80000001DD06C7B0);
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void *)(v43 + 16);
  uint64_t v45 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v46 = *(void *)(v45 - 8);
  if (v44)
  {
    sub_1DCE6A774(v43+ ((*(unsigned __int8 *)(*(void *)(v45 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v45 - 8) + 80)), (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v47 = 0;
  }
  else
  {
    uint64_t v47 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v20, v47, 1, v45);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v20, 1, v45) == 1)
  {
    sub_1DCD2479C((uint64_t)v20, &qword_1EBE855F0);
LABEL_20:
    sub_1DCD676DC();
    uint64_t v60 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v61 = xmmword_1DD059E70;
    *(unsigned char *)(v61 + 16) = 2;
    swift_willThrow();
    goto LABEL_21;
  }
  uint64_t v48 = *((void *)v20 + 14);
  swift_bridgeObjectRetain();
  sub_1DCE6A7DC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  *(void *)&long long v114 = MEMORY[0x1E4FBC860];
  uint64_t v49 = *(void *)(v48 + 16);
  if (!v49)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(MEMORY[0x1E4FBC860] + 16)) {
      goto LABEL_15;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v50 = 64;
  do
  {
    uint64_t v51 = swift_bridgeObjectRetain();
    sub_1DCFDE7E0(v51);
    v50 += 48;
    --v49;
  }
  while (v49);
  swift_bridgeObjectRelease_n();
  if (!*(void *)(v114 + 16)) {
    goto LABEL_19;
  }
LABEL_15:
  uint64_t v98 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v52 = v107;
  uint64_t v53 = swift_allocBox();
  sub_1DD0471A8();
  sub_1DD047198();
  sub_1DD046AE8();
  uint64_t v54 = v109;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v56 = (uint64_t)v108;
  if (((*((uint64_t (**)(uint64_t, char *))v108 + 2))(ObjectType, v108) & 1) == 0)
  {
    uint64_t v80 = (void *)swift_allocObject();
    v80[2] = v54;
    v80[3] = v56;
    uint64_t v81 = v110;
    v80[4] = v110;
    v80[5] = v53;
    v80[6] = a5;
    swift_unknownObjectRetain_n();
    swift_retain_n();
    swift_retain_n();
    uint64_t v107 = (uint64_t)a5;
    uint64_t v82 = a5;
    uint64_t v83 = v103;
    sub_1DCDCB52C(v103);
    uint64_t v85 = v105;
    uint64_t v84 = v106;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v83, 1, v106) == 1)
    {
      sub_1DCD2479C(v83, &qword_1EAB03A30);
      uint64_t v86 = sub_1DD048758();
      uint64_t v87 = (uint64_t)v101;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v101, 1, 1, v86);
      unint64_t v88 = (void *)swift_allocObject();
      v88[2] = 0;
      v88[3] = 0;
      v88[4] = v81;
      v88[5] = sub_1DCE6A8B4;
      v88[6] = v80;
      swift_retain();
      swift_retain();
      sub_1DCE61E70(v87, (uint64_t)&unk_1EAB03AE8, (uint64_t)v88);

      swift_release_n();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      uint64_t v104 = v80;
      unint64_t v89 = v82;
      uint64_t v90 = v99;
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v99, v83, v84);
      uint64_t v91 = v89;
      uint64_t v92 = v90;
      uint64_t v93 = (uint64_t)v100;
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v100, v92, v84);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v85 + 56))(v93, 0, 1, v84);
      uint64_t v94 = v53;
      float v108 = v91;
      uint64_t v95 = v98;
      sub_1DCE66FC0(v93, v54, v56, v81, v94, v91);
      uint64_t v96 = v85;
      if (v95)
      {
        uint64_t v60 = v95;
        sub_1DCD2479C(v93, &qword_1EAB03A30);
        (*(void (**)(char *, uint64_t))(v96 + 8))(v92, v84);

        swift_release_n();
        swift_release();
        swift_unknownObjectRelease();
        swift_release();
        a5 = (char *)v107;
        goto LABEL_21;
      }
      sub_1DCD2479C(v93, &qword_1EAB03A30);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v92, v84);

      swift_release_n();
      swift_release();
      swift_unknownObjectRelease();
    }
LABEL_35:
    swift_release();
    return;
  }
  uint64_t v106 = v53;
  uint64_t v57 = v104;
  uint64_t v58 = (uint64_t)v102;
  ((void (*)(void))v104[2])();
  long long v59 = v98;
  sub_1DCE5E520(v58, v54, v56, a5);
  if (!v59)
  {
    ((void (*)(uint64_t, uint64_t))v57[1])(v58, v52);
    goto LABEL_35;
  }
  uint64_t v60 = v59;
  ((void (*)(uint64_t, uint64_t))v57[1])(v58, v52);
  swift_release();
LABEL_21:
  sub_1DCDB40EC(v111);
  id v62 = v60;
  id v63 = v60;
  long long v64 = sub_1DD048048();
  os_log_type_t v65 = sub_1DD048858();
  if (os_log_type_enabled(v64, v65))
  {
    long long v66 = (uint8_t *)swift_slowAlloc();
    long long v67 = a5;
    id v68 = (void *)swift_slowAlloc();
    *(_DWORD *)long long v66 = 138412290;
    id v69 = v60;
    uint64_t v70 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)&long long v114 = v70;
    sub_1DD048A28();
    void *v68 = v70;

    _os_log_impl(&dword_1DCCF9000, v64, v65, "performExperimentalPegasusRequest(): %@", v66, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
    swift_arrayDestroy();
    uint64_t v71 = v68;
    a5 = v67;
    MEMORY[0x1E01B07E0](v71, -1, -1);
    MEMORY[0x1E01B07E0](v66, -1, -1);
  }
  else
  {
  }
  uint64_t v73 = v112;
  uint64_t v72 = v113;

  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v111, v72);
  sub_1DCDCCCB8();
  id v74 = v60;
  id v75 = v60;
  uint64_t v76 = sub_1DCE5D298((uint64_t)a5);
  if (v76)
  {
    id v77 = v76;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03AE0);
    uint64_t v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = xmmword_1DD04E910;
    *(void *)(v78 + 32) = v60;
    id v79 = v60;
    v77(MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0, 0xE000000000000000, v78);

    sub_1DCD33E90((uint64_t)v77);
    swift_bridgeObjectRelease();
  }
  else
  {
  }
}

void sub_1DCE687A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v99 = a2;
  unint64_t v101 = a3;
  uint64_t v102 = a7;
  uint64_t v107 = a4;
  float v108 = a6;
  uint64_t v100 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02640);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v104 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A18);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v103 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DD048068();
  uint64_t v105 = *(void *)(v12 - 8);
  uint64_t v106 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v109 = (uint64_t)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1DD047B98();
  unint64_t v97 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A48);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v89 - v21;
  MEMORY[0x1F4188790](v23);
  int64_t v25 = (char *)&v89 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A30);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1DD0477F8();
  MEMORY[0x1F4188790](v29);
  long long v31 = (char *)&v89 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_1DCD2889C(v32, (uint64_t)v28, &qword_1EAB03A30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v28, 1, v36) == 1)
  {
    sub_1DCD2479C((uint64_t)v28, &qword_1EAB03A30);
    sub_1DCD676DC();
    unint64_t v37 = (void *)swift_allocError();
    *(void *)uint64_t v38 = 0;
    *(void *)(v38 + 8) = 0;
    *(unsigned char *)(v38 + 16) = 2;
    swift_willThrow();
  }
  else
  {
    uint64_t v91 = v22;
    uint64_t v92 = v19;
    uint64_t v93 = v16;
    uint64_t v95 = v34;
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v28, v36);
    uint64_t v94 = v31;
    uint64_t v39 = sub_1DD0477E8();
    uint64_t v40 = *(void *)(v39 + 16);
    uint64_t v96 = v36;
    uint64_t v90 = v14;
    if (v40)
    {
      unint64_t v41 = sub_1DCEAD1A4(0xD000000000000016, 0x80000001DD067690);
      uint64_t v42 = (uint64_t)v25;
      uint64_t v43 = (uint64_t)v91;
      if (v44)
      {
        unint64_t v45 = v41;
        uint64_t v46 = *(void *)(v39 + 56);
        uint64_t v47 = sub_1DD0474D8();
        uint64_t v48 = *(void *)(v47 - 8);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v48 + 16))(v42, v46 + *(void *)(v48 + 72) * v45, v47);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v42, 0, 1, v47);
      }
      else
      {
        uint64_t v47 = sub_1DD0474D8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v25, 1, 1, v47);
      }
      unint64_t v49 = v97;
    }
    else
    {
      uint64_t v47 = sub_1DD0474D8();
      uint64_t v42 = (uint64_t)v25;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v25, 1, 1, v47);
      unint64_t v49 = v97;
      uint64_t v43 = (uint64_t)v91;
    }
    swift_bridgeObjectRelease();
    sub_1DCD2889C(v42, v43, &qword_1EAB03A48);
    sub_1DD0474D8();
    uint64_t v50 = *(void *)(v47 - 8);
    uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
    if (v51(v43, 1, v47) == 1)
    {
      sub_1DCD2479C(v43, &qword_1EAB03A48);
      uint64_t v52 = 0;
      unint64_t v97 = 0xC000000000000000;
      uint64_t v53 = v93;
    }
    else
    {
      uint64_t v54 = v93;
      sub_1DD0474B8();
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v43, v47);
      uint64_t v53 = v54;
      uint64_t v52 = sub_1DD047B78();
      unint64_t v97 = v55;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v54, v90);
    }
    uint64_t v56 = (uint64_t)v92;
    sub_1DCD2889C(v42, (uint64_t)v92, &qword_1EAB03A48);
    if (v51(v56, 1, v47) == 1)
    {
      sub_1DCD2479C(v56, &qword_1EAB03A48);
      uint64_t v57 = 0;
      unint64_t v58 = 0xC000000000000000;
    }
    else
    {
      sub_1DD0474C8();
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v56, v47);
      uint64_t v57 = sub_1DD047B78();
      unint64_t v59 = v49;
      unint64_t v58 = v60;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v53, v90);
    }
    uint64_t v61 = v99;
    id v62 = v100;
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v64 = v101;
    unint64_t v66 = v97;
    os_log_type_t v65 = v98;
    (*(void (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t))(v101 + 24))(v52, v97, v57, v58, ObjectType, v101);
    unint64_t v37 = v65;
    if (!v65)
    {
      sub_1DCE5F93C(v62, v61, v64, v108);
      sub_1DCD21954(v57, v58);
      sub_1DCD21954(v52, v97);
      sub_1DCD2479C(v42, &qword_1EAB03A48);
      (*(void (**)(char *, uint64_t))(v95 + 8))(v94, v96);
      return;
    }
    sub_1DCD21954(v57, v58);
    sub_1DCD21954(v52, v66);
    sub_1DCD2479C(v42, &qword_1EAB03A48);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v94, v96);
  }
  uint64_t v67 = v109;
  sub_1DCDB40EC(v109);
  id v68 = v37;
  id v69 = v37;
  uint64_t v70 = sub_1DD048048();
  os_log_type_t v71 = sub_1DD048858();
  if (os_log_type_enabled(v70, v71))
  {
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    uint64_t v73 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v72 = 138412290;
    id v74 = v37;
    uint64_t v75 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v110 = v75;
    sub_1DD048A28();
    void *v73 = v75;

    _os_log_impl(&dword_1DCCF9000, v70, v71, "performEncryptedPegasusRequest(): processingConfigError %@", v72, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
    swift_arrayDestroy();
    uint64_t v76 = v73;
    uint64_t v67 = v109;
    MEMORY[0x1E01B07E0](v76, -1, -1);
    MEMORY[0x1E01B07E0](v72, -1, -1);
  }
  else
  {
  }
  uint64_t v78 = v105;
  uint64_t v77 = v106;

  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v67, v77);
  sub_1DCDCCCB8();
  id v79 = v37;
  id v80 = v37;
  uint64_t v81 = sub_1DCE5D0E8((uint64_t)v108);
  if (v81)
  {
    uint64_t v82 = v81;
    uint64_t v83 = sub_1DD0478C8();
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v85 = (uint64_t)v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v103, v102, v83);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v85, 0, 1, v83);
    uint64_t v86 = sub_1DD0478E8();
    uint64_t v87 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v104, 1, 1, v86);
    id v88 = v37;
    ((void (*)(uint64_t, uint64_t, void, unint64_t, void *))v82)(v85, v87, 0, 0xE000000000000000, v37);

    sub_1DCD33E90((uint64_t)v82);
    sub_1DCD2479C(v87, &qword_1EAB02640);
    sub_1DCD2479C(v85, &qword_1EAB03A18);
  }
  else
  {
  }
}

uint64_t sub_1DCE692C8()
{
  return objectdestroy_53Tm(MEMORY[0x1E4FBC898]);
}

uint64_t sub_1DCE692E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1DCE6CD60;
  return sub_1DCE629C8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1DCE693A8()
{
  uint64_t v1 = sub_1DD047488();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + 7;
  unint64_t v7 = (v6 + v4) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = (v3 + v7 + 8) & ~v3;
  unint64_t v9 = (v6 + v8) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v10 = v0 + v4;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v10, v1);

  v11(v0 + v8, v1);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v9 + 16, v5);
}

uint64_t sub_1DCE694D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1DD047488() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 40) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64) + 7;
  unint64_t v8 = (v6 + v7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = (v5 + v8 + 8) & ~v5;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = *(void *)((char *)v1 + v8);
  uint64_t v15 = (uint64_t)v1 + v9;
  uint64_t v16 = *(void *)((char *)v1 + ((v9 + v7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v17;
  *uint64_t v17 = v2;
  v17[1] = sub_1DCE6CD60;
  return sub_1DCE636CC(a1, v10, v11, v12, v13, v14, v15, v16);
}

uint64_t sub_1DCE69640()
{
  return objectdestroy_68Tm(MEMORY[0x1E4F89750]);
}

uint64_t sub_1DCE69658(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1DD047488() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1DCE6CD60;
  v7[6] = v5;
  v7[7] = v6;
  v7[5] = a1;
  return MEMORY[0x1F4188298](sub_1DCE64274, 0, 0);
}

uint64_t sub_1DCE69750(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1DCE6CD60;
  return sub_1DCE657A8(a1, a2, v6, v7, v8);
}

uint64_t sub_1DCE69814()
{
  uint64_t v1 = sub_1DD047488();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1DCE69918()
{
  uint64_t v1 = *(void *)(sub_1DD047488() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v3 + 8);
  uint64_t v8 = *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  return sub_1DCE648A8(v4, v5, v0 + v2, v6, v7, v8);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1DCE699D0()
{
  uint64_t v1 = sub_1DD047488();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039C8) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = sub_1DD0474A8();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v8, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v8, v10);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, ((v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | v7 | 7);
}

uint64_t sub_1DCE69B9C()
{
  uint64_t v1 = *(void *)(sub_1DD047488() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039C8) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = v0 + v5;
  uint64_t v9 = (uint64_t *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  return sub_1DCE6460C(v6, v7, v0 + v2, v8, v10, v11);
}

uint64_t sub_1DCE69CA0()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1DCE69CE0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 32);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1DCE6CD60;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  void v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1DCE65E9C;
  return v8(a1);
}

uint64_t sub_1DCE69E04()
{
  uint64_t v1 = sub_1DD0481A8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1DCE69ED0()
{
  uint64_t v2 = *(void *)(sub_1DD0481A8() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1DCE6CD60;
  v4[4] = v3;
  return MEMORY[0x1F4188298](sub_1DCE66194, 0, 0);
}

unint64_t sub_1DCE69FB4()
{
  unint64_t result = qword_1EAB03AD0;
  if (!qword_1EAB03AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03AD0);
  }
  return result;
}

uint64_t sub_1DCE6A008(uint64_t a1)
{
  return sub_1DCE5D5C4(a1);
}

uint64_t sub_1DCE6A010(uint64_t a1)
{
  return sub_1DCE902A4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1DCE6A018()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DCE6A050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t *, uint64_t *, void *, uint64_t *))(v5 + 16);
  uint64_t v11 = a1;
  v9[1] = a4;
  uint64_t v10 = a2;
  uint64_t v8 = a5;
  v9[0] = a3;
  return v6(&v11, &v10, v9, &v8);
}

uint64_t sub_1DCE6A0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t *))(v5 + 16);
  v9[0] = a3;
  v9[1] = a4;
  uint64_t v8 = a5;
  return v6(a1, a2, v9, &v8);
}

uint64_t sub_1DCE6A0E0()
{
  return objectdestroy_68Tm(MEMORY[0x1E4F27990]);
}

uint64_t objectdestroy_68Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_1DCE6A1CC()
{
  uint64_t v1 = *(void *)(sub_1DD046598() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1DCE5B8C0(v2, v3);
}

unint64_t sub_1DCE6A230()
{
  unint64_t result = qword_1EBE82BC0;
  if (!qword_1EBE82BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82BC0);
  }
  return result;
}

uint64_t sub_1DCE6A288()
{
  return sub_1DCE6A598((uint64_t (*)(void, void, void, void, void *, char *, void, void, void))sub_1DCE5B0A4);
}

uint64_t sub_1DCE6A2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DCE6AF0C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, unint64_t, void, void, void))sub_1DCE5C538);
}

uint64_t type metadata accessor for NetworkService.NetworkEncryptedSearchResponse(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EAB03B00);
}

uint64_t objectdestroy_119Tm()
{
  uint64_t v1 = (int *)type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v14 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = (v2 + 232) & ~v2;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v3 + v1[7];
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = v0 + v3 + v1[8];
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v7 + *(int *)(v8 + 28), v5);
  }
  uint64_t v9 = v0 + v3 + v1[9];
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10)) {
    v6(v9 + *(int *)(v10 + 20), v5);
  }
  unint64_t v11 = (v14 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, v12 + 16, v2 | 7);
}

uint64_t sub_1DCE6A580()
{
  return sub_1DCE6A598((uint64_t (*)(void, void, void, void, void *, char *, void, void, void))sub_1DCE5A658);
}

uint64_t sub_1DCE6A598(uint64_t (*a1)(void, void, void, void, void *, char *, void, void, void))
{
  uint64_t v3 = *(void *)(type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a1(*((void *)v1 + 2), *((void *)v1 + 3), *((void *)v1 + 4), *((void *)v1 + 5), (void *)v1 + 6, &v1[v4], *(void *)&v1[v5], *(void *)&v1[(v5 + 15) & 0xFFFFFFFFFFFFFFF8], *(void *)&v1[((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8]);
}

uint64_t sub_1DCE6A654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(sub_1DD046598() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1DCE5CC50(a1, a2, a3, a4, a5, *(void *)(v5 + 16), v5 + v12, *(void *)(v5 + v13), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1DCE6A734(void *a1, void *a2, void *a3, void *a4)
{
  return (*(uint64_t (**)(void, void, void, void, void))(v4 + 16))(*a1, *a2, *a3, a3[1], *a4);
}

uint64_t sub_1DCE6A774(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCE6A7DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCE6A83C()
{
  return objectdestroy_53Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_53Tm(void (*a1)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v1 + 32));
  swift_release();

  return MEMORY[0x1F4186498](v1, 56, 7);
}

void sub_1DCE6A8B4(uint64_t a1)
{
  sub_1DCE66FC0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t objectdestroy_47Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1DCE6A924(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1DCE65E9C;
  return sub_1DCE615E0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1DCE6A9EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCE6AA58()
{
  return sub_1DCE6AD5C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, char *, uint64_t))sub_1DCE5A174);
}

uint64_t sub_1DCE6AA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1DCE6AF0C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, unint64_t, void, void, void))sub_1DCE5BE04);
}

uint64_t type metadata accessor for NetworkService.NetworkSearchResponse(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EAB03AF0);
}

uint64_t objectdestroy_155Tm()
{
  uint64_t v1 = (int *)type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v14 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = (v2 + 240) & ~v2;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 208))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v3 + v1[7];
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = v0 + v3 + v1[8];
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_ServerSearchConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v7 + *(int *)(v8 + 28), v5);
  }
  uint64_t v9 = v0 + v3 + v1[9];
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_UserFeedbackConfig(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10)) {
    v6(v9 + *(int *)(v10 + 20), v5);
  }
  unint64_t v11 = (v14 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = v11 + 8;

  return MEMORY[0x1F4186498](v0, v12, v2 | 7);
}

uint64_t sub_1DCE6AD44()
{
  return sub_1DCE6AD5C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, char *, uint64_t))sub_1DCE6530C);
}

uint64_t sub_1DCE6AD5C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, char *, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 240) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  uint64_t v9 = *(void *)&v1[(*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8];
  return a1(v4, v5, v6, v7, v8, (void *)v1 + 7, &v1[v3], v9);
}

uint64_t objectdestroy_126Tm()
{
  uint64_t v1 = sub_1DD046598();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, v6 + 16, v5);
}

uint64_t sub_1DCE6AF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, unint64_t, void, void, void))
{
  uint64_t v13 = *(void *)(sub_1DD046598() - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v15 = (*(void *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a6(a1, a2, a3, a4, a5, *(void *)(v6 + 16), v6 + v14, *(void *)(v6 + v15), *(void *)(v6 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v6 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1DCE6AFFC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void))(v4 + 16))(a1, a2, *a3, a3[1], *a4);
}

unint64_t sub_1DCE6B034()
{
  unint64_t result = qword_1EBE87140;
  if (!qword_1EBE87140)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE87140);
  }
  return result;
}

uint64_t sub_1DCE6B074(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1DCE6B0BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DD047488();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    unint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *unint64_t v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DCE6B250(uint64_t a1)
{
  uint64_t v2 = sub_1DD047488();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_1DCE6B32C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047488();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1DCE6B470(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047488();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1DCE6B638(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047488();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *sub_1DCE6B768(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047488();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCE6B918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE6B92C);
}

uint64_t sub_1DCE6B92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DCE6B9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE6BA04);
}

uint64_t sub_1DCE6BA04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_1DCE6BAC4()
{
  sub_1DCE6CCFC(319, (unint64_t *)&qword_1EAB028E8, MEMORY[0x1E4F89750]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1DCE6BB84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DD0478C8();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A18);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1DD0478E8();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02640);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DCE6BDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD0478C8();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_1DD0478E8();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  return swift_bridgeObjectRelease();
}

char *sub_1DCE6BF64(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD0478C8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A18);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1DD0478E8();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02640);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1DCE6C18C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD0478C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A18);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1DD0478E8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02640);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1DCE6C488(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD0478C8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A18);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1DD0478E8();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02640);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_1DCE6C6A4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD0478C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A18);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1DD0478E8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02640);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCE6C990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE6C9A4);
}

uint64_t sub_1DCE6C9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A18);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02640);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1DCE6CAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE6CAD8);
}

uint64_t sub_1DCE6CAD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03A18);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02640);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DCE6CBF4()
{
  sub_1DCE6CCFC(319, &qword_1EAB03B10, MEMORY[0x1E4F89B60]);
  if (v0 <= 0x3F)
  {
    sub_1DCE6CCFC(319, &qword_1EAB03B18, MEMORY[0x1E4F89B78]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1DCE6CCFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DD048A08();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for NetworkService.DebugInfo()
{
  return &type metadata for NetworkService.DebugInfo;
}

uint64_t *sub_1DCE6CDB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7)
    {
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
    }
    a1[3] = a2[3];
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = (int *)type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
    uint64_t v13 = *((void *)v12 - 1);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, int *))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v16 = sub_1DD046478();
      uint64_t v17 = *(void *)(v16 - 8);
      int v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      uint64_t v32 = v17;
      if (v18(v11, 1, v16))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
        memcpy(v10, v11, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v10, v11, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
      }
      uint64_t v20 = v12[5];
      uint64_t v21 = &v10[v20];
      uint64_t v22 = &v11[v20];
      if (v18(&v11[v20], 1, v16))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v21, v22, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v21, 0, 1, v16);
      }
      uint64_t v24 = v12[6];
      uint64_t v25 = *(void **)&v11[v24];
      *(void *)&v10[v24] = v25;
      uint64_t v26 = v12[7];
      uint64_t v27 = &v10[v26];
      uint64_t v28 = &v11[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      v27[8] = v28[8];
      *(void *)&v10[v12[8]] = *(void *)&v11[v12[8]];
      uint64_t v29 = *(void (**)(char *, void, uint64_t, int *))(v13 + 56);
      id v30 = v25;
      swift_bridgeObjectRetain();
      v29(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t type metadata accessor for DomainAssignmentSignals.ImageMetadata(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE84B60);
}

uint64_t sub_1DCE6D140(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_1DD046478();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v4, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
    }
    uint64_t v10 = v4 + *(int *)(v5 + 20);
    if (!v9(v10, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
    }

    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1DCE6D2E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  if (v6)
  {
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
  }
  a1[3] = a2[3];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = sub_1DD046478();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v30 = v15;
    if (v16(v9, 1, v14))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
      memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v8, v9, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
    }
    uint64_t v18 = v10[5];
    uint64_t v19 = &v8[v18];
    uint64_t v20 = &v9[v18];
    if (v16(&v9[v18], 1, v14))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v19, v20, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v19, 0, 1, v14);
    }
    uint64_t v22 = v10[6];
    uint64_t v23 = *(void **)&v9[v22];
    *(void *)&v8[v22] = v23;
    uint64_t v24 = v10[7];
    uint64_t v25 = &v8[v24];
    uint64_t v26 = &v9[v24];
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
    uint64_t v27 = *(void (**)(char *, void, uint64_t, int *))(v11 + 56);
    id v28 = v23;
    swift_bridgeObjectRetain();
    v27(v8, 0, 1, v10);
  }
  return a1;
}

void *sub_1DCE6D600(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  if (a1[1])
  {
    if (v6)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DCE6DC50((uint64_t)a1);
      uint64_t v7 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = v7;
    }
  }
  else if (v6)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v8;
  }
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = (int *)type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_1DCD68C2C((uint64_t)v10);
      goto LABEL_14;
    }
    uint64_t v22 = sub_1DD046478();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
    int v25 = v24(v10, 1, v22);
    int v26 = v24(v11, 1, v22);
    uint64_t v56 = v23;
    if (v25)
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v10, v11, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v22);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v10, v11, v22);
LABEL_26:
        uint64_t v40 = v12[5];
        unint64_t v41 = &v10[v40];
        uint64_t v42 = &v11[v40];
        int v43 = v24(&v10[v40], 1, v22);
        int v44 = v24(v42, 1, v22);
        if (v43)
        {
          if (!v44)
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v41, v42, v22);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v41, 0, 1, v22);
LABEL_32:
            uint64_t v46 = v12[6];
            uint64_t v47 = *(void **)&v10[v46];
            uint64_t v48 = *(void **)&v11[v46];
            *(void *)&v10[v46] = v48;
            id v49 = v48;

            uint64_t v50 = v12[7];
            uint64_t v51 = &v10[v50];
            uint64_t v52 = &v11[v50];
            uint64_t v53 = *(void *)v52;
            v51[8] = v52[8];
            *(void *)uint64_t v51 = v53;
            *(void *)&v10[v12[8]] = *(void *)&v11[v12[8]];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v44)
          {
            (*(void (**)(char *, char *, uint64_t))(v56 + 24))(v41, v42, v22);
            goto LABEL_32;
          }
          (*(void (**)(char *, uint64_t))(v56 + 8))(v41, v22);
        }
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
        memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
        goto LABEL_32;
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v22);
    }
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v10, v11, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_26;
  }
  if (v16)
  {
LABEL_14:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
    memcpy(v10, v11, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  uint64_t v17 = sub_1DD046478();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v55 = v18;
  if (v19(v11, 1, v17))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v10, v11, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
  }
  uint64_t v27 = v12[5];
  id v28 = &v10[v27];
  uint64_t v29 = &v11[v27];
  if (v19(&v11[v27], 1, v17))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v28, v29, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v28, 0, 1, v17);
  }
  uint64_t v31 = v12[6];
  uint64_t v32 = *(void **)&v11[v31];
  *(void *)&v10[v31] = v32;
  uint64_t v33 = v12[7];
  uint64_t v34 = &v10[v33];
  uint64_t v35 = &v11[v33];
  uint64_t v36 = *(void *)v35;
  v34[8] = v35[8];
  *(void *)uint64_t v34 = v36;
  *(void *)&v10[v12[8]] = *(void *)&v11[v12[8]];
  unint64_t v37 = *(void (**)(char *, void, uint64_t, int *))(v13 + 56);
  id v38 = v32;
  swift_bridgeObjectRetain();
  v37(v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1DCE6DC50(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCE6DCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  long long v8 = (int *)type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  uint64_t v9 = *((void *)v8 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_1DD046478();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v23 = v12;
    if (v13(v7, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
      memcpy(v6, v7, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v6, v7, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
    }
    uint64_t v15 = v8[5];
    int v16 = &v6[v15];
    uint64_t v17 = &v7[v15];
    if (v13(&v7[v15], 1, v11))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v11);
    }
    *(void *)&v6[v8[6]] = *(void *)&v7[v8[6]];
    uint64_t v19 = v8[7];
    uint64_t v20 = &v6[v19];
    uint64_t v21 = &v7[v19];
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = v21[8];
    *(void *)&v6[v8[8]] = *(void *)&v7[v8[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_1DCE6DF70(void *a1, void *a2, uint64_t a3)
{
  if (a1[1])
  {
    uint64_t v6 = a2[1];
    if (v6)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1DCE6DC50((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = a2[2];
LABEL_6:
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  long long v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_1DCD68C2C((uint64_t)v8);
      goto LABEL_12;
    }
    uint64_t v20 = sub_1DD046478();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
    int v23 = v22(v8, 1, v20);
    int v24 = v22(v9, 1, v20);
    uint64_t v46 = v21;
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v8, v9, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v8, 0, 1, v20);
        goto LABEL_24;
      }
    }
    else
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v8, v9, v20);
LABEL_24:
        uint64_t v33 = v10[5];
        uint64_t v34 = &v8[v33];
        uint64_t v35 = &v9[v33];
        int v36 = v22(&v8[v33], 1, v20);
        int v37 = v22(v35, 1, v20);
        if (v36)
        {
          if (!v37)
          {
            (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v34, v35, v20);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v34, 0, 1, v20);
LABEL_30:
            uint64_t v39 = v10[6];
            uint64_t v40 = *(void **)&v8[v39];
            *(void *)&v8[v39] = *(void *)&v9[v39];

            uint64_t v41 = v10[7];
            uint64_t v42 = &v8[v41];
            int v43 = &v9[v41];
            *(void *)uint64_t v42 = *(void *)v43;
            v42[8] = v43[8];
            *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v37)
          {
            (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v34, v35, v20);
            goto LABEL_30;
          }
          (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v20);
        }
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v20);
    }
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v8, v9, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_24;
  }
  if (v14)
  {
LABEL_12:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
    memcpy(v8, v9, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  uint64_t v15 = sub_1DD046478();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v45 = v16;
  if (v17(v9, 1, v15))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v8, v9, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v9, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  }
  uint64_t v25 = v10[5];
  int v26 = &v8[v25];
  uint64_t v27 = &v9[v25];
  if (v17(&v9[v25], 1, v15))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v26, v27, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v26, 0, 1, v15);
  }
  *(void *)&v8[v10[6]] = *(void *)&v9[v10[6]];
  uint64_t v29 = v10[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1DCE6E548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE6E55C);
}

uint64_t sub_1DCE6E55C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCE6E610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE6E624);
}

uint64_t sub_1DCE6E624(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DomainAssignmentSignals(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE84B80);
}

void sub_1DCE6E6F0()
{
  sub_1DCE6F738(319, &qword_1EBE84B78, (void (*)(uint64_t))type metadata accessor for DomainAssignmentSignals.ImageMetadata);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1DCE6E7B0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DD046478();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    int v13 = (char *)a1 + v12;
    int v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = *(void **)((char *)a2 + v16);
    *(uint64_t *)((char *)a1 + v16) = (uint64_t)v18;
    uint64_t v19 = (char *)a1 + v17;
    uint64_t v20 = (char *)a2 + v17;
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    id v21 = v18;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1DCE6EA04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD046478();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  if (!v6(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }

  return swift_bridgeObjectRelease();
}

char *sub_1DCE6EB2C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = *(void **)&a2[v14];
  *(void *)&a1[v14] = v16;
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  id v19 = v16;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1DCE6ED30(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  id v19 = *(void **)&a1[v18];
  uint64_t v20 = *(void **)&a2[v18];
  *(void *)&a1[v18] = v20;
  id v21 = v20;

  uint64_t v22 = a3[7];
  int v23 = &a1[v22];
  int v24 = &a2[v22];
  uint64_t v25 = *(void *)v24;
  v23[8] = v24[8];
  *(void *)int v23 = v25;
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1DCE6F004(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  *(void *)int v15 = *(void *)v16;
  v15[8] = v16[8];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  return a1;
}

char *sub_1DCE6F1FC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  id v19 = *(void **)&a1[v18];
  *(void *)&a1[v18] = *(void *)&a2[v18];

  uint64_t v20 = a3[7];
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v20];
  int v23 = &a2[v20];
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCE6F4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE6F4D4);
}

uint64_t sub_1DCE6F4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1DCE6F5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE6F5B8);
}

uint64_t sub_1DCE6F5B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

void sub_1DCE6F678()
{
  sub_1DCE6F738(319, (unint64_t *)&qword_1EBE84920, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1DCE6F738(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DD048A08();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DCE6F78C()
{
  type metadata accessor for CipherMLPIRClient();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  id v1 = objc_allocWithZone(MEMORY[0x1E4F58FF0]);
  uint64_t v2 = (void *)sub_1DD0483D8();
  id v3 = objc_msgSend(v1, sel_initWithUseCase_, v2);

  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F58FF8]), sel_initWithClientConfig_, v3);
  *(void *)(v0 + 24) = v4;
  *(_OWORD *)(v0 + 32) = xmmword_1DD050130;
  return v0;
}

uint64_t sub_1DCE6F860@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = sub_1DD048068();
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = a1[1];
  uint64_t v11 = *a2;
  uint64_t v12 = &unk_1F3834000;
  if (!qword_1F3834348)
  {
LABEL_65:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    char v45 = 26;
    goto LABEL_72;
  }
  uint64_t v58 = a1[3];
  uint64_t v59 = v10;
  unint64_t v13 = 0;
  uint64_t v57 = *a1;
  uint64_t v56 = a1[2];
  uint64_t v52 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a3;
  uint64_t v50 = v9;
  uint64_t v51 = v7;
  uint64_t v47 = qword_1F3834348;
LABEL_3:
  if (v13 >= v12[105]) {
    goto LABEL_74;
  }
  int v14 = *((unsigned __int8 *)&unk_1F3834338 + v13 + 32);
  unint64_t v48 = v13 + 1;
  int v49 = v14;
  uint64_t v15 = sub_1DCE7011C(v14);
  int64_t v16 = 0;
  uint64_t v17 = *(void *)(v15 + 56);
  uint64_t v54 = v15 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(v15 + 32);
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v17;
  int64_t v55 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v23 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      JUMPOUT(0x1DCE7008CLL);
    }
    if (v23 >= v55) {
      goto LABEL_64;
    }
    unint64_t v24 = *(void *)(v54 + 8 * v23);
    ++v16;
    if (!v24)
    {
      int64_t v16 = v23 + 1;
      if (v23 + 1 >= v55) {
        goto LABEL_64;
      }
      unint64_t v24 = *(void *)(v54 + 8 * v16);
      if (!v24)
      {
        int64_t v16 = v23 + 2;
        if (v23 + 2 >= v55) {
          goto LABEL_64;
        }
        unint64_t v24 = *(void *)(v54 + 8 * v16);
        if (!v24)
        {
          int64_t v25 = v23 + 3;
          if (v25 >= v55)
          {
LABEL_64:
            swift_release();
            unint64_t v13 = v48;
            a3 = v53;
            uint64_t v12 = (void *)&unk_1F3834000;
            if (v48 == v47) {
              goto LABEL_65;
            }
            goto LABEL_3;
          }
          unint64_t v24 = *(void *)(v54 + 8 * v25);
          if (!v24)
          {
            while (1)
            {
              int64_t v16 = v25 + 1;
              if (__OFADD__(v25, 1)) {
                goto LABEL_75;
              }
              if (v16 >= v55) {
                goto LABEL_64;
              }
              unint64_t v24 = *(void *)(v54 + 8 * v16);
              ++v25;
              if (v24) {
                goto LABEL_23;
              }
            }
          }
          int64_t v16 = v25;
        }
      }
    }
LABEL_23:
    unint64_t v20 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v16 << 6);
LABEL_24:
    char v26 = *(unsigned char *)(*(void *)(v15 + 48) + v22);
    uint64_t v27 = 0xE700000000000000;
    uint64_t v28 = 0x38343938333851;
    switch(v26)
    {
      case 1:
        uint64_t v27 = 0xE600000000000000;
        uint64_t v28 = 0x363736323251;
        break;
      case 2:
        uint64_t v27 = 0xE900000000000036;
        uint64_t v28 = 0x3935373131353651;
        break;
      case 3:
        uint64_t v27 = 0xE600000000000000;
        uint64_t v28 = 0x343836323151;
        break;
      case 4:
        uint64_t v27 = 0xE600000000000000;
        uint64_t v28 = 0x353437343151;
        break;
      case 5:
        uint64_t v27 = 0xE400000000000000;
        uint64_t v28 = 909457233;
        break;
      case 6:
        uint64_t v27 = 0xE400000000000000;
        uint64_t v28 = 959592273;
        break;
      case 7:
        uint64_t v27 = 0xE400000000000000;
        uint64_t v28 = 875835729;
        break;
      case 8:
        uint64_t v27 = 0xE400000000000000;
        uint64_t v28 = 909390161;
        break;
      case 9:
        uint64_t v27 = 0xE500000000000000;
        uint64_t v28 = 0x3331313551;
        break;
      case 10:
        uint64_t v27 = 0xE600000000000000;
        uint64_t v28 = 0x363038333451;
        break;
      case 11:
        uint64_t v27 = 0xE600000000000000;
        uint64_t v28 = 0x313138303151;
        break;
      case 12:
        uint64_t v28 = 0x3937343138373551;
        uint64_t v27 = 0xE900000000000035;
        break;
      case 13:
        uint64_t v28 = 0x39363130343351;
        break;
      case 14:
        uint64_t v27 = 0xE500000000000000;
        uint64_t v28 = 0x3439323551;
        break;
      case 15:
        uint64_t v27 = 0xE600000000000000;
        uint64_t v28 = 0x303634313151;
        break;
      case 16:
        uint64_t v27 = 0xE400000000000000;
        uint64_t v28 = 825701713;
        break;
      case 17:
        uint64_t v28 = 0x39373931313851;
        break;
      case 18:
        uint64_t v28 = 0x36323436383351;
        break;
      case 19:
        uint64_t v28 = 909457489;
        uint64_t v27 = 0xE400000000000000;
        break;
      case 20:
        uint64_t v27 = 0xE800000000000000;
        uint64_t v28 = 0x3331323530333351;
        break;
      case 21:
        uint64_t v28 = 0x31393135323151;
        break;
      case 22:
        uint64_t v27 = 0xE800000000000000;
        uint64_t v28 = 0x3130303132393251;
        break;
      case 23:
        uint64_t v27 = 0xE600000000000000;
        uint64_t v28 = 0x343330313151;
        break;
      case 24:
        uint64_t v28 = 0x35383739323451;
        break;
      case 25:
        uint64_t v28 = 0x34393538303251;
        break;
      case 26:
        uint64_t v28 = 0x31363830363851;
        break;
      case 27:
        uint64_t v28 = 0x39343536343751;
        break;
      case 28:
        uint64_t v28 = 0x37333835363451;
        break;
      case 29:
        uint64_t v27 = 0xE800000000000000;
        uint64_t v28 = 0x3538393839383851;
        break;
      case 30:
        uint64_t v27 = 0xE900000000000038;
        uint64_t v28 = 0x3234353231373151;
        break;
      case 31:
        uint64_t v27 = 0xE800000000000000;
        uint64_t v28 = 0x3238303539363351;
        break;
      case 32:
        uint64_t v27 = 0xE600000000000000;
        uint64_t v28 = 0x303530303451;
        break;
      case 33:
        uint64_t v27 = 0x80000001DD066F50;
        uint64_t v28 = 0xD000000000000011;
        break;
      case 34:
        uint64_t v28 = 0x33313138353251;
        break;
      case 35:
        uint64_t v27 = 0xE800000000000000;
        uint64_t v28 = 0x3432333338373151;
        break;
      default:
        break;
    }
    if (!*(void *)(v11 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_68;
    }
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_1DCEAD1A4(v28, v27);
    if ((v30 & 1) == 0) {
      break;
    }
    uint64_t v31 = *(void **)(*(void *)(v11 + 56) + 8 * v29);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v32 = v31[2];
    uint64_t v33 = v31[3];
    uint64_t v35 = v31[4];
    uint64_t v34 = v31[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_release();
    v61[0] = v57;
    v61[1] = v59;
    v61[2] = v56;
    v61[3] = v58;
    v61[4] = v11;
    v60[0] = v32;
    v60[1] = v33;
    uint64_t v60[2] = v35;
    v60[3] = v34;
    char v36 = sub_1DCDACA6C(v61, v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      a3 = v53;
      char v45 = v49;
      goto LABEL_72;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_68:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = v52;
  sub_1DCDB40EC(v52);
  uint64_t v38 = sub_1DD048048();
  os_log_type_t v39 = sub_1DD048858();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v61[0] = v41;
    *(_DWORD *)uint64_t v40 = 136315138;
    unint64_t v42 = sub_1DCDE45B4(v26);
    v60[0] = sub_1DCED7FA0(v42, v43, v61);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v38, v39, "trying to access domain with kgid %s not present in the specified ontology graph", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v41, -1, -1);
    MEMORY[0x1E01B07E0](v40, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v52, v51);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v37, v51);
  }
  uint64_t result = swift_release();
  char v45 = 26;
  a3 = v53;
LABEL_72:
  *a3 = v45;
  return result;
}

uint64_t sub_1DCE7011C(char a1)
{
  uint64_t v2 = &unk_1F3834310;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F38342E8);
      break;
    case 2:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3834018);
      break;
    case 3:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3834040);
      break;
    case 4:
    case 9:
    case 18:
    case 22:
    case 25:
      uint64_t result = MEMORY[0x1E4FBC870];
      break;
    case 5:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3834270);
      break;
    case 6:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3834298);
      break;
    case 7:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3834068);
      break;
    case 8:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3834090);
      break;
    case 10:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F38340B8);
      break;
    case 11:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F38340E0);
      break;
    case 12:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3834108);
      break;
    case 13:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3834130);
      break;
    case 14:
      goto LABEL_4;
    case 15:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3833FF0);
      break;
    case 16:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F38341A8);
      break;
    case 17:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F38341D0);
      break;
    case 19:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F38341F8);
      break;
    case 20:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3834248);
      break;
    case 21:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3834220);
      break;
    case 23:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3834158);
      break;
    case 24:
      uint64_t result = sub_1DCFEB76C((uint64_t)&unk_1F3834180);
      break;
    default:
      uint64_t v2 = &unk_1F38342C0;
LABEL_4:
      uint64_t result = sub_1DCFEB76C((uint64_t)v2);
      break;
  }
  return result;
}

uint64_t sub_1DCE702B0(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v9 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0) + 32);
    uint64_t v17 = v7 + v9;
    uint64_t v10 = (uint64_t)a2 + v9;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v17, v10, v11);
    uint64_t v13 = a3[6];
    *(unsigned char *)(v7 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v14 = v7 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    *(void *)uint64_t v14 = *(void *)v15;
    *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
    *(void *)(v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1DCE7040C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1
     + *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0) + 32);
  uint64_t v3 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCE704B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0) + 32);
  uint64_t v15 = a1 + v7;
  uint64_t v8 = a2 + v7;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v15, v8, v9);
  uint64_t v11 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCE705C0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0) + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  char v13 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = v13;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCE706E0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0) + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1DCE707B4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0) + 32);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCE708B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE708C4);
}

uint64_t sub_1DCE708C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DCE70984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE70998);
}

uint64_t sub_1DCE70998(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CoarseClassificationDomainAssignmentRule()
{
  uint64_t result = qword_1EBE84CE8;
  if (!qword_1EBE84CE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCE70AA0()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_CoarseClassificationDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCE70B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v10 - 8);
  long long v114 = (long long *)&v108[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v113 = (long long *)&v108[-v13];
  uint64_t v14 = sub_1DD048068();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v123 = v14;
  uint64_t v124 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = &v108[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = &v108[-v19];
  MEMORY[0x1F4188790](v21);
  long long v118 = &v108[-v22];
  MEMORY[0x1F4188790](v23);
  long long v117 = &v108[-v24];
  MEMORY[0x1F4188790](v25);
  long long v121 = (uint64_t *)&v108[-v26];
  MEMORY[0x1F4188790](v27);
  long long v120 = &v108[-v28];
  MEMORY[0x1F4188790](v29);
  long long v116 = &v108[-v30];
  MEMORY[0x1F4188790](v31);
  long long v115 = &v108[-v32];
  uint64_t v122 = type metadata accessor for CoarseClassificationDomainAssignmentRule();
  MEMORY[0x1F4188790](v122);
  uint64_t v112 = &v108[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v34);
  char v36 = &v108[-v35];
  uint64_t v37 = type metadata accessor for DomainAssignmentSignals(0);
  MEMORY[0x1F4188790](v37 - 8);
  os_log_type_t v39 = &v108[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DCD32C3C(a1, (uint64_t)v154);
  uint64_t v119 = a2;
  if ((*(unsigned char *)(a2 + 104) & 1) == 0)
  {
    uint64_t v50 = a4;
LABEL_22:
    sub_1DCD32C3C((uint64_t)v154, v50);
    return sub_1DCD5D8A8((uint64_t)v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  }
  uint64_t v111 = a4;
  uint64_t v40 = *v5;
  sub_1DCD5D8A8((uint64_t)v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  sub_1DCD370D0(v40);
  if (!v41)
  {
    sub_1DCD5D8A8((uint64_t)v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
    sub_1DCDB40EC((uint64_t)v20);
    sub_1DCDB4300((uint64_t)v17);
    uint64_t v51 = v123;
    uint64_t v52 = *(void (**)(unsigned char *, uint64_t))(v124 + 8);
    v52(v20, v123);
    uint64_t v53 = sub_1DD048048();
    os_log_type_t v54 = sub_1DD048848();
    if (os_log_type_enabled(v53, v54))
    {
      int64_t v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v55 = 0;
      _os_log_impl(&dword_1DCCF9000, v53, v54, "No satisfied coarse label", v55, 2u);
      MEMORY[0x1E01B07E0](v55, -1, -1);
    }

    v52(v17, v51);
    goto LABEL_21;
  }
  unsigned int v109 = v42;
  uint64_t v110 = v41;
  uint64_t v43 = *(void *)(v5[1] + 16);
  sub_1DCE71954(a3, (uint64_t)v39, type metadata accessor for DomainAssignmentSignals);
  sub_1DCE71954((uint64_t)v5, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CoarseClassificationDomainAssignmentRule);
  int v44 = v5;
  if (v43)
  {
    uint64_t v45 = *((void *)v36 + 1);
    uint64_t v46 = *(void *)&v36[*(int *)(v122 + 28)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v47 = swift_bridgeObjectRetain();
    uint64_t v48 = sub_1DCD973D8(v47, v45, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v49 = *(void *)(v48 + 16);
    swift_bridgeObjectRelease();
    sub_1DCE719BC((uint64_t)v39, type metadata accessor for DomainAssignmentSignals);
    sub_1DCE719BC((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CoarseClassificationDomainAssignmentRule);
    if (!v49)
    {
      sub_1DCD5D8A8((uint64_t)v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
      swift_bridgeObjectRelease();
      id v79 = v117;
      sub_1DCDB40EC((uint64_t)v117);
      id v80 = v118;
      sub_1DCDB4300((uint64_t)v118);
      uint64_t v81 = v123;
      uint64_t v82 = *(void (**)(unsigned char *, uint64_t))(v124 + 8);
      v82(v79, v123);
      uint64_t v83 = sub_1DD048048();
      os_log_type_t v84 = sub_1DD048848();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v85 = 0;
        _os_log_impl(&dword_1DCCF9000, v83, v84, "No satisfied allowlist detector results.", v85, 2u);
        MEMORY[0x1E01B07E0](v85, -1, -1);
      }

      v82(v80, v81);
      goto LABEL_21;
    }
    int v44 = v5;
  }
  else
  {
    sub_1DCE719BC((uint64_t)v39, type metadata accessor for DomainAssignmentSignals);
    sub_1DCE719BC((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CoarseClassificationDomainAssignmentRule);
  }
  uint64_t v56 = v44[2];
  uint64_t v57 = v122;
  uint64_t v58 = *(int *)(v122 + 28);
  uint64_t v59 = *(uint64_t *)((char *)v44 + v58);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v60 = swift_bridgeObjectRetain();
  uint64_t v61 = sub_1DCD973D8(v60, v56, v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v62 = *(void *)(v61 + 16);
  swift_bridgeObjectRelease();
  if (v62)
  {
    sub_1DCD5D8A8((uint64_t)v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
    swift_bridgeObjectRelease();
    id v63 = v120;
    sub_1DCDB40EC((uint64_t)v120);
    unint64_t v64 = v121;
    sub_1DCDB4300((uint64_t)v121);
    uint64_t v65 = v123;
    unint64_t v66 = *(void (**)(uint64_t *, uint64_t))(v124 + 8);
    v66((uint64_t *)v63, v123);
    uint64_t v67 = sub_1DD048048();
    os_log_type_t v68 = sub_1DD048848();
    if (os_log_type_enabled(v67, v68))
    {
      id v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v69 = 0;
      _os_log_impl(&dword_1DCCF9000, v67, v68, "Has satisfied denylist detector results.", v69, 2u);
      MEMORY[0x1E01B07E0](v69, -1, -1);
    }

    v66(v64, v65);
LABEL_21:
    uint64_t v50 = v111;
    goto LABEL_22;
  }
  if (*((unsigned char *)v44 + 24) != 1)
  {
    uint64_t v87 = v116;
    sub_1DCDB40EC((uint64_t)v116);
    long long v121 = v44;
    id v88 = v112;
    sub_1DCE71954((uint64_t)v44, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for CoarseClassificationDomainAssignmentRule);
    uint64_t v89 = v114;
    sub_1DCE71954(v119, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v90 = sub_1DD048048();
    os_log_type_t v91 = sub_1DD048848();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = swift_slowAlloc();
      uint64_t v93 = swift_slowAlloc();
      *(void *)&v138[0] = v93;
      *(_DWORD *)uint64_t v92 = 136315394;
      uint64_t v94 = sub_1DCD9C35C(v88[*(int *)(v57 + 20)]);
      *(void *)&long long v145 = sub_1DCED7FA0(v94, v95, (uint64_t *)v138);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCE719BC((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for CoarseClassificationDomainAssignmentRule);
      *(_WORD *)(v92 + 12) = 2080;
      long long v96 = v89[1];
      long long v145 = *v89;
      long long v146 = v96;
      uint64_t v97 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v145 = sub_1DCED7FA0(v97, v98, (uint64_t *)v138);
      uint64_t v57 = v122;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCE719BC((uint64_t)v89, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1DCCF9000, v90, v91, "Assign %s to region: %s", (uint8_t *)v92, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v93, -1, -1);
      MEMORY[0x1E01B07E0](v92, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v124 + 8))(v116, v123);
    }
    else
    {
      sub_1DCE719BC((uint64_t)v88, (uint64_t (*)(void))type metadata accessor for CoarseClassificationDomainAssignmentRule);
      sub_1DCE719BC((uint64_t)v89, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

      (*(void (**)(unsigned char *, uint64_t))(v124 + 8))(v87, v123);
    }
    LOBYTE(v136[0]) = *((unsigned char *)v121 + *(int *)(v57 + 20));
    char v100 = v136[0];
    *(void *)&v138[0] = *(uint64_t *)((char *)v121 + v58);
    sub_1DCD9F35C((uint64_t *)v138, &v145);
    swift_bridgeObjectRelease();
    LOBYTE(v138[0]) = v100;
    *(_OWORD *)((char *)v138 + 8) = 0u;
    *(_OWORD *)((char *)&v138[1] + 8) = 0u;
    BYTE8(v138[2]) = 0;
    long long v139 = 0u;
    long long v140 = 0u;
    long long v141 = v145;
    long long v142 = v146;
    *(void *)&long long v143 = 0;
    *((void *)&v143 + 1) = v109;
    LOWORD(v144[0]) = 0;
    *(void *)&v144[1] = 0;
    *((void *)&v144[0] + 1) = 0;
    *(void *)((char *)&v144[1] + 5) = 0;
    sub_1DCD32C3C((uint64_t)v154, (uint64_t)&v145);
    if (sub_1DCD32CA4((uint64_t)&v145) == 1) {
      goto LABEL_29;
    }
    uint64_t v103 = sub_1DCD9C35C(v145);
    uint64_t v105 = v104;
    if (v103 == sub_1DCD9C35C(v100) && v105 == v106)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v107 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v107 & 1) == 0)
      {
        sub_1DCD5D8A8((uint64_t)v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
LABEL_29:
        long long v133 = v142;
        long long v134 = v143;
        v135[0] = v144[0];
        *(_OWORD *)((char *)v135 + 13) = *(_OWORD *)((char *)v144 + 13);
        long long v129 = v138[2];
        long long v130 = v139;
        long long v131 = v140;
        long long v132 = v141;
        long long v101 = v138[0];
        long long v102 = v138[1];
LABEL_35:
        long long v127 = v101;
        long long v128 = v102;
        faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v127);
        sub_1DCD32C3C((uint64_t)&v127, (uint64_t)v136);
        return sub_1DCD32C3C((uint64_t)v136, v111);
      }
    }
    v136[6] = v151;
    v136[7] = v152;
    v137[0] = v153[0];
    *(_OWORD *)((char *)v137 + 13) = *(_OWORD *)((char *)v153 + 13);
    v136[2] = v147;
    v136[3] = v148;
    v136[4] = v149;
    v136[5] = v150;
    v136[0] = v145;
    v136[1] = v146;
    long long v133 = v142;
    long long v134 = v143;
    v135[0] = v144[0];
    *(_OWORD *)((char *)v135 + 13) = *(_OWORD *)((char *)v144 + 13);
    long long v129 = v138[2];
    long long v130 = v139;
    long long v131 = v140;
    long long v132 = v141;
    long long v127 = v138[0];
    long long v128 = v138[1];
    sub_1DCF22BB0((uint64_t)v136, &v127, (uint64_t)v125);
    sub_1DCD5D8A8((uint64_t)v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
    sub_1DCD32DD4((uint64_t)v138);
    long long v133 = v125[6];
    long long v134 = v125[7];
    v135[0] = v126[0];
    *(_OWORD *)((char *)v135 + 13) = *(_OWORD *)((char *)v126 + 13);
    long long v129 = v125[2];
    long long v130 = v125[3];
    long long v131 = v125[4];
    long long v132 = v125[5];
    long long v101 = v125[0];
    long long v102 = v125[1];
    goto LABEL_35;
  }
  sub_1DCD5D8A8((uint64_t)v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
  swift_bridgeObjectRelease();
  uint64_t v70 = v115;
  sub_1DCDB40EC((uint64_t)v115);
  os_log_type_t v71 = v113;
  sub_1DCE71954(v119, (uint64_t)v113, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  uint64_t v72 = sub_1DD048048();
  os_log_type_t v73 = sub_1DD048848();
  if (os_log_type_enabled(v72, v73))
  {
    id v74 = (uint8_t *)swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    *(_DWORD *)id v74 = 136315138;
    *(void *)&v138[0] = v75;
    long long v76 = v71[1];
    long long v145 = *v71;
    long long v146 = v76;
    uint64_t v77 = NormalizedRect.loggingDescription.getter();
    *(void *)&long long v145 = sub_1DCED7FA0(v77, v78, (uint64_t *)v138);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCE719BC((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    _os_log_impl(&dword_1DCCF9000, v72, v73, "Reject any domain to region: %s", v74, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v75, -1, -1);
    MEMORY[0x1E01B07E0](v74, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v124 + 8))(v115, v123);
  }
  else
  {
    sub_1DCE719BC((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

    (*(void (**)(unsigned char *, uint64_t))(v124 + 8))(v70, v123);
  }
  uint64_t v99 = v111;
  sub_1DCD5DA7C((uint64_t)&v145);
  return sub_1DCD32C3C((uint64_t)&v145, v99);
}

uint64_t sub_1DCE71948()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1DCE71954(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCE719BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCE71A1C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v138 = a2;
  uint64_t v127 = type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule(0);
  uint64_t v122 = *(void *)(v127 - 8);
  MEMORY[0x1F4188790](v127);
  uint64_t v8 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v133 = (uint64_t)&v117 - v10;
  uint64_t v11 = sub_1DD048068();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v117 - v16;
  uint64_t v124 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
  uint64_t v140 = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124);
  uint64_t v149 = (uint64_t)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F28);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (uint64_t *)((char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (uint64_t *)((char *)&v117 - v23);
  uint64_t v137 = *a1;
  unint64_t v141 = sub_1DCDBA2D4(MEMORY[0x1E4FBC860]);
  uint64_t v25 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20);
  uint64_t v125 = a3;
  uint64_t v26 = *(void *)(a3 + v25);
  swift_beginAccess();
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v28 = *(void *)(v27 + 64);
  uint64_t v129 = v27 + 64;
  uint64_t v29 = 1 << *(unsigned char *)(v27 + 32);
  uint64_t v30 = -1;
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  uint64_t v150 = v30 & v28;
  unint64_t v31 = (unint64_t)(v29 + 63) >> 6;
  long long v146 = (void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  long long v145 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v32 = v24;
  unint64_t v118 = v31 - 1;
  uint64_t v33 = swift_bridgeObjectRetain();
  long long v134 = 0;
  unint64_t v34 = 0;
  int64_t v131 = v31;
  unint64_t v119 = v31 - 5;
  uint64_t v142 = v33;
  uint64_t v121 = v33 + 104;
  unint64_t v130 = (unint64_t)"coarseCategoryDistribution";
  unint64_t v128 = 0x80000001DD067880;
  *(void *)&long long v35 = 136315138;
  long long v135 = v35;
  uint64_t v132 = MEMORY[0x1E4FBC840] + 8;
  long long v139 = v8;
  uint64_t v144 = v17;
  long long v147 = v24;
  long long v143 = v21;
  unint64_t v36 = v150;
  if (!v150) {
    goto LABEL_9;
  }
  while (2)
  {
    uint64_t v150 = (v36 - 1) & v36;
    unint64_t v148 = v34;
    unint64_t v37 = __clz(__rbit64(v36)) | (v34 << 6);
LABEL_5:
    uint64_t v38 = *(void *)(v142 + 56);
    os_log_type_t v39 = (void *)(*(void *)(v142 + 48) + 16 * v37);
    uint64_t v40 = v39[1];
    void *v21 = *v39;
    v21[1] = v40;
    uint64_t v41 = v38 + *(void *)(v140 + 72) * v37;
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F20);
    sub_1DCE74AC8(v41, (uint64_t)v21 + *(int *)(v42 + 48), type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v21, 0, 1, v42);
    swift_bridgeObjectRetain();
    uint64_t v32 = v147;
LABEL_15:
    sub_1DCD43B04((uint64_t)v21, (uint64_t)v32, &qword_1EBE84F28);
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F20);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v32, 1, v47) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1DCE74B30(v125, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
      swift_release();
      *(void *)(v4 + 16) = v141;
      sub_1DCD33E90((uint64_t)v134);
      return v4;
    }
    uint64_t v49 = *v32;
    unint64_t v48 = v32[1];
    sub_1DCE74A60((uint64_t)v32 + *(int *)(v47 + 48), v149, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1DCD9CB54();
    if (v50 == 26)
    {
      if (qword_1EBE87190 != -1) {
        swift_once();
      }
      if (byte_1EBE87188 != 1) {
        goto LABEL_32;
      }
      id v51 = objc_msgSend(self, sel_mainBundle);
      id v52 = objc_msgSend(v51, sel_bundleIdentifier);

      if (v52)
      {
        uint64_t v53 = sub_1DD048408();
        uint64_t v55 = v54;

        if (v53 == 0xD00000000000002BLL && v55 == v128)
        {
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
        char v56 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v56)
        {
LABEL_25:
          uint64_t v57 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            uint64_t v57 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_29;
        }
      }
      uint64_t v57 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v57 = &qword_1EBE871E8;
      }
LABEL_29:
      uint64_t v58 = *(void **)(*v57 + 32);
      swift_retain();
      uint64_t v59 = (void *)sub_1DD0483D8();
      LODWORD(v58) = objc_msgSend(v58, sel_BOOLForKey_, v59);
      swift_release();

      if (v58)
      {
        uint64_t v60 = qword_1EAB02B70;
        if (qword_1EAB01C80 != -1)
        {
          swift_once();
          uint64_t v60 = qword_1EAB02B70;
        }
LABEL_34:
        uint64_t v61 = __swift_project_value_buffer(v11, (uint64_t)v60);
        (*v146)(v17, v61, v11);
        swift_bridgeObjectRetain();
        uint64_t v62 = sub_1DD048048();
        os_log_type_t v63 = sub_1DD048858();
        if (os_log_type_enabled(v62, v63))
        {
          uint64_t v64 = swift_slowAlloc();
          uint64_t v65 = swift_slowAlloc();
          uint64_t v155 = v65;
          *(_DWORD *)uint64_t v64 = v135;
          swift_bridgeObjectRetain();
          *(void *)(v64 + 4) = sub_1DCED7FA0(v49, v48, &v155);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1DCCF9000, v62, v63, "Failed to convert visual domain %s.", (uint8_t *)v64, 0xCu);
          swift_arrayDestroy();
          uint64_t v66 = v65;
          uint64_t v17 = v144;
          MEMORY[0x1E01B07E0](v66, -1, -1);
          MEMORY[0x1E01B07E0](v64, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*v145)(v17, v11);
        sub_1DCE74B30(v149, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
        uint64_t v21 = v143;
        uint64_t v32 = v147;
        goto LABEL_8;
      }
LABEL_32:
      uint64_t v60 = qword_1EBE871A8;
      if (qword_1EBE871C8 != -1)
      {
        swift_once();
        uint64_t v60 = qword_1EBE871A8;
      }
      goto LABEL_34;
    }
    uint64_t v67 = v50;
    uint64_t v123 = v4;
    swift_bridgeObjectRelease();
    uint64_t v68 = *(void *)(v149 + *(int *)(v124 + 20));
    swift_beginAccess();
    uint64_t v69 = *(void *)(v68 + 16);
    uint64_t v70 = *(void *)(v69 + 16);
    if (!v70) {
      goto LABEL_86;
    }
    uint64_t v71 = v122;
    uint64_t v72 = v69 + ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
    uint64_t v120 = v69;
    swift_bridgeObjectRetain();
    uint64_t v136 = *(void *)(v71 + 72);
    uint64_t v73 = v133;
    id v74 = v134;
    long long v126 = v14;
    do
    {
      sub_1DCE74AC8(v72, v73, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
      unsigned __int8 v152 = v67;
      long long v151 = (void *)v137;
      sub_1DCD37500(v73, &v152, (uint64_t *)&v151, v138, (uint64_t)&v153);
      if (!v154)
      {
        long long v134 = v74;
        sub_1DCD2479C((uint64_t)&v153, &qword_1EAB03B30);
        if (qword_1EBE87190 != -1) {
          swift_once();
        }
        if (byte_1EBE87188 != 1) {
          goto LABEL_78;
        }
        id v85 = objc_msgSend(self, sel_mainBundle);
        id v86 = objc_msgSend(v85, sel_bundleIdentifier);

        if (v86)
        {
          uint64_t v87 = sub_1DD048408();
          uint64_t v89 = v88;

          if (v87 == 0xD00000000000002BLL && v89 == (v130 | 0x8000000000000000))
          {
            swift_bridgeObjectRelease();
            goto LABEL_71;
          }
          char v99 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v99)
          {
LABEL_71:
            char v100 = (uint64_t *)&off_1EAB02A48;
            if (qword_1EAB01C28 != -1)
            {
              swift_once();
              char v100 = (uint64_t *)&off_1EAB02A48;
            }
            goto LABEL_75;
          }
        }
        char v100 = &qword_1EBE871E8;
        if (qword_1EBE871A0 != -1)
        {
          swift_once();
          char v100 = &qword_1EBE871E8;
        }
LABEL_75:
        long long v101 = *(void **)(*v100 + 32);
        swift_retain();
        long long v102 = (void *)sub_1DD0483D8();
        LODWORD(v101) = objc_msgSend(v101, sel_BOOLForKey_, v102);
        swift_release();

        uint64_t v73 = v133;
        if (v101)
        {
          uint64_t v103 = qword_1EAB02B70;
          if (qword_1EAB01C80 != -1)
          {
            swift_once();
            uint64_t v103 = qword_1EAB02B70;
          }
LABEL_80:
          uint64_t v104 = __swift_project_value_buffer(v11, (uint64_t)v103);
          (*v146)(v14, v104, v11);
          sub_1DCE74AC8(v73, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
          uint64_t v105 = v14;
          uint64_t v106 = sub_1DD048048();
          os_log_type_t v107 = sub_1DD048858();
          uint64_t v108 = v11;
          uint64_t v109 = v73;
          if (os_log_type_enabled(v106, v107))
          {
            uint64_t v110 = swift_slowAlloc();
            uint64_t v111 = swift_slowAlloc();
            uint64_t v155 = v111;
            *(_DWORD *)uint64_t v110 = v135;
            sub_1DCE74B90();
            uint64_t v112 = sub_1DD048FB8();
            *(void *)(v110 + 4) = sub_1DCED7FA0(v112, v113, &v155);
            swift_bridgeObjectRelease();
            sub_1DCE74B30((uint64_t)v139, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
            _os_log_impl(&dword_1DCCF9000, v106, v107, "Failed to parse rule %s", (uint8_t *)v110, 0xCu);
            swift_arrayDestroy();
            uint64_t v114 = v111;
            uint64_t v8 = v139;
            MEMORY[0x1E01B07E0](v114, -1, -1);
            MEMORY[0x1E01B07E0](v110, -1, -1);

            long long v115 = v126;
            (*v145)(v126, v108);
            sub_1DCE74B30(v109, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
            uint64_t v73 = v109;
            uint64_t v11 = v108;
            uint64_t v14 = v115;
          }
          else
          {

            sub_1DCE74B30((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
            (*v145)(v105, v108);
            sub_1DCE74B30(v73, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
            uint64_t v11 = v108;
            uint64_t v14 = v105;
          }
          uint64_t v17 = v144;
          id v74 = v134;
          goto LABEL_43;
        }
LABEL_78:
        uint64_t v103 = qword_1EBE871A8;
        if (qword_1EBE871C8 != -1)
        {
          swift_once();
          uint64_t v103 = qword_1EBE871A8;
        }
        goto LABEL_80;
      }
      sub_1DCD3A4DC(&v153, (uint64_t)&v155);
      sub_1DCD3A3BC((uint64_t)&v155, (uint64_t)&v153);
      sub_1DCD33E90((uint64_t)v74);
      uint64_t v75 = v141;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      long long v151 = (void *)v75;
      unint64_t v78 = sub_1DCEAD454(v67);
      uint64_t v79 = *(void *)(v75 + 16);
      BOOL v80 = (v77 & 1) == 0;
      uint64_t v81 = v79 + v80;
      if (__OFADD__(v79, v80)) {
        goto LABEL_95;
      }
      char v82 = v77;
      if (*(void *)(v75 + 24) >= v81)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1DCE8AE24();
        }
      }
      else
      {
        sub_1DCE8299C(v81, isUniquelyReferenced_nonNull_native);
        uint64_t v83 = sub_1DCEAD454(v67);
        if ((v82 & 1) != (v84 & 1)) {
          goto LABEL_97;
        }
        unint64_t v78 = v83;
      }
      uint64_t v90 = v151;
      swift_bridgeObjectRelease();
      if (v82)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v90[(v78 >> 6) + 8] |= 1 << v78;
        *(unsigned char *)(v90[6] + v78) = v67;
        *(void *)(v90[7] + 8 * v78) = MEMORY[0x1E4FBC860];
        uint64_t v91 = v90[2];
        uint64_t v92 = v91 + 1;
        BOOL v93 = __OFADD__(v91, 1);
        swift_bridgeObjectRetain();
        if (v93) {
          goto LABEL_96;
        }
        v90[2] = v92;
      }
      uint64_t v94 = v90[7];
      swift_bridgeObjectRelease();
      unint64_t v95 = *(void **)(v94 + 8 * v78);
      char v96 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v94 + 8 * v78) = v95;
      unint64_t v141 = (unint64_t)v90;
      if ((v96 & 1) == 0)
      {
        unint64_t v95 = sub_1DCE9FFD8(0, v95[2] + 1, 1, v95);
        *(void *)(v94 + 8 * v78) = v95;
      }
      unint64_t v98 = v95[2];
      unint64_t v97 = v95[3];
      if (v98 >= v97 >> 1)
      {
        unint64_t v95 = sub_1DCE9FFD8((void *)(v97 > 1), v98 + 1, 1, v95);
        *(void *)(v94 + 8 * v78) = v95;
      }
      uint64_t v17 = v144;
      v95[2] = v98 + 1;
      sub_1DCD3A4DC(&v153, (uint64_t)&v95[5 * v98 + 4]);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v155);
      uint64_t v73 = v133;
      sub_1DCE74B30(v133, type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule);
      id v74 = sub_1DCDC8E78;
      uint64_t v8 = v139;
LABEL_43:
      v72 += v136;
      --v70;
    }
    while (v70);
    long long v134 = v74;
    swift_bridgeObjectRelease();
LABEL_86:
    sub_1DCE74B30(v149, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
    uint64_t v4 = v123;
    uint64_t v21 = v143;
    uint64_t v32 = v147;
LABEL_8:
    unint64_t v34 = v148;
    unint64_t v36 = v150;
    if (v150) {
      continue;
    }
    break;
  }
LABEL_9:
  int64_t v43 = v34 + 1;
  if (!__OFADD__(v34, 1))
  {
    if (v43 >= v131)
    {
      unint64_t v45 = v34;
      goto LABEL_14;
    }
    unint64_t v44 = *(void *)(v129 + 8 * v43);
    if (v44) {
      goto LABEL_12;
    }
    unint64_t v45 = v34 + 1;
    if ((uint64_t)(v34 + 2) < v131)
    {
      unint64_t v44 = *(void *)(v129 + 8 * (v34 + 2));
      if (v44)
      {
        int64_t v43 = v34 + 2;
        goto LABEL_12;
      }
      unint64_t v45 = v34 + 2;
      if ((uint64_t)(v34 + 3) < v131)
      {
        unint64_t v44 = *(void *)(v129 + 8 * (v34 + 3));
        if (v44)
        {
          int64_t v43 = v34 + 3;
          goto LABEL_12;
        }
        int64_t v43 = v34 + 4;
        unint64_t v45 = v34 + 3;
        if ((uint64_t)(v34 + 4) < v131)
        {
          unint64_t v44 = *(void *)(v129 + 8 * v43);
          if (!v44)
          {
            while (v119 != v34)
            {
              unint64_t v44 = *(void *)(v121 + 8 * v34++);
              if (v44)
              {
                int64_t v43 = v34 + 4;
                goto LABEL_12;
              }
            }
            unint64_t v45 = v118;
            goto LABEL_14;
          }
LABEL_12:
          uint64_t v150 = (v44 - 1) & v44;
          unint64_t v37 = __clz(__rbit64(v44)) + (v43 << 6);
          unint64_t v148 = v43;
          goto LABEL_5;
        }
      }
    }
LABEL_14:
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F20);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v21, 1, 1, v46);
    uint64_t v150 = 0;
    unint64_t v148 = v45;
    goto LABEL_15;
  }
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

unint64_t sub_1DCE72D18(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v221 = a2;
  id v224 = a3;
  uint64_t v6 = sub_1DD048068();
  long long v206 = *(void (***)(char *, uint64_t, uint64_t))(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v205 = (uint64_t)v192 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v204 = (uint64_t)v192 - v9;
  MEMORY[0x1F4188790](v10);
  char v210 = (char *)v192 - v11;
  MEMORY[0x1F4188790](v12);
  long long v211 = (char *)v192 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v192 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v223 = (void *)((char *)v192 - v18);
  MEMORY[0x1F4188790](v19);
  uint64_t v209 = (char *)v192 - v20;
  MEMORY[0x1F4188790](v21);
  v222 = (void (*)(uint64_t, uint64_t))((char *)v192 - v22);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v218 = (uint64_t)v192 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v25 = *(void *)(v199 - 8);
  MEMORY[0x1F4188790](v199);
  uint64_t v208 = (uint64_t)v192 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v198 = (uint64_t)v192 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v197 = (uint64_t)v192 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v226 = (uint64_t)v192 - v32;
  MEMORY[0x1F4188790](v33);
  long long v35 = (char *)v192 - v34;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (void *)((char *)v192 - v37);
  unint64_t v217 = type metadata accessor for DomainAssignmentSignals(0);
  MEMORY[0x1F4188790](v217);
  v225 = (void *)((char *)v192 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v245[0] = 0x6E69616D6F44;
  v245[1] = 0xE600000000000000;
  v245[2] = "Domain assignment";
  v245[3] = 17;
  char v246 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  v192[1] = sub_1DCEA469C((uint64_t)v245, a4);
  swift_release();
  uint64_t v40 = *(void *)(a1 + 16);
  uint64_t v212 = a1;
  uint64_t v213 = v6;
  uint64_t v219 = v40;
  uint64_t v202 = (uint8_t *)v25;
  if (v40)
  {
    v207 = v16;
    unint64_t v41 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v42 = a1 + v41;
    uint64_t v43 = *(void *)(v25 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1DCE74AC8(v42, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v35[104] == 1) {
        break;
      }
      sub_1DCE74B30((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      v42 += v43;
      if (!--v40)
      {
        swift_bridgeObjectRelease();
        uint64_t v215 = 0;
        uint64_t v216 = 0;
        uint64_t v214 = 0;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    sub_1DCE74A60((uint64_t)v35, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v45 = v38[10];
    uint64_t v46 = (void *)v38[12];
    uint64_t v215 = (void *)v38[11];
    uint64_t v216 = v45;
    uint64_t v214 = v46;
    sub_1DCD55D64(v45, (uint64_t)v215);
    sub_1DCE74B30((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_8:
    swift_bridgeObjectRetain();
    uint64_t v47 = 0;
    unint64_t v48 = v41 + 56;
    unint64_t v44 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v49 = v47 + 1;
      if (__OFADD__(v47, 1)) {
        goto LABEL_152;
      }
      uint64_t v50 = *(void *)(a1 + v48);
      uint64_t v51 = *(void *)(v50 + 16);
      int64_t v52 = v44[2];
      int64_t v53 = v52 + v51;
      if (__OFADD__(v52, v51))
      {
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        sub_1DD048D18();
        __break(1u);
        JUMPOUT(0x1DCE74584);
      }
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v53 > v44[3] >> 1)
      {
        if (v52 <= v53) {
          int64_t v55 = v52 + v51;
        }
        else {
          int64_t v55 = v52;
        }
        unint64_t v44 = sub_1DCE9DE38(isUniquelyReferenced_nonNull_native, v55, 1, v44);
      }
      a1 = v212;
      if (*(void *)(v50 + 16))
      {
        uint64_t v56 = v44[2];
        if ((v44[3] >> 1) - v56 < v51) {
          goto LABEL_155;
        }
        unint64_t v57 = (unint64_t)&v44[10 * v56 + 4];
        if (v50 + 32 < v57 + 80 * v51 && v57 < v50 + 32 + 80 * v51) {
          goto LABEL_157;
        }
        swift_arrayInitWithCopy();
        if (v51)
        {
          uint64_t v59 = v44[2];
          BOOL v60 = __OFADD__(v59, v51);
          uint64_t v61 = v59 + v51;
          if (v60) {
            goto LABEL_156;
          }
          void v44[2] = v61;
        }
      }
      else if (v51)
      {
        goto LABEL_154;
      }
      swift_bridgeObjectRelease();
      ++v47;
      v48 += v43;
    }
    while (v49 != v219);
    swift_bridgeObjectRelease();
    uint64_t v6 = v213;
    uint64_t v16 = v207;
  }
  else
  {
    uint64_t v215 = 0;
    uint64_t v216 = 0;
    uint64_t v214 = 0;
    unint64_t v44 = (void *)MEMORY[0x1E4FBC860];
  }
  id v62 = v224;
  uint64_t v63 = (uint64_t)v209;
  if (v224)
  {
    id v64 = objc_msgSend(v224, sel_imageURL);
    if (v64)
    {
      uint64_t v65 = v64;
      sub_1DD046438();

      uint64_t v66 = sub_1DD046478();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v63, 0, 1, v66);
    }
    else
    {
      uint64_t v69 = sub_1DD046478();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v63, 1, 1, v69);
    }
    sub_1DCD43B04(v63, (uint64_t)v222, &qword_1EBE848E0);
    id v70 = objc_msgSend(v62, sel_referralURL);
    if (v70)
    {
      uint64_t v71 = v70;
      sub_1DD046438();

      uint64_t v72 = sub_1DD046478();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v16, 0, 1, v72);
    }
    else
    {
      uint64_t v73 = sub_1DD046478();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v16, 1, 1, v73);
    }
    sub_1DCD43B04((uint64_t)v16, (uint64_t)v223, &qword_1EBE848E0);
  }
  else
  {
    uint64_t v67 = sub_1DD046478();
    uint64_t v68 = *(void (**)(void (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8)
                                                                                                  + 56);
    v68(v222, 1, 1, v67);
    v68((void (*)(uint64_t, uint64_t))v223, 1, 1, v67);
  }
  uint64_t v209 = (char *)objc_msgSend(v62, sel_location);
  if (v62)
  {
    id v74 = objc_msgSend(v62, sel_imageType);
    id v75 = objc_msgSend(v62, sel_customDetectorThreshold);
    uint64_t v76 = sub_1DD0482D8();

    unint64_t v77 = sub_1DCE74594(v76);
    id v62 = v224;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v77 = 0;
    id v74 = 0;
  }
  BOOL v78 = v62 == 0;
  uint64_t v79 = v218;
  sub_1DCD43B04((uint64_t)v222, v218, &qword_1EBE848E0);
  BOOL v80 = (int *)type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  id v81 = v224;
  sub_1DCD43B04((uint64_t)v223, v79 + v80[5], &qword_1EBE848E0);
  *(void *)(v79 + v80[6]) = v209;
  uint64_t v82 = v79 + v80[7];
  *(void *)uint64_t v82 = v74;
  *(unsigned char *)(v82 + 8) = v78;
  *(void *)(v79 + v80[8]) = v77;
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v80 - 1) + 56))(v79, 0, 1, v80);
  uint64_t v83 = v225;
  char v84 = v215;
  uint64_t *v225 = v216;
  v83[1] = (uint64_t)v84;
  v83[2] = (uint64_t)v214;
  v83[3] = (uint64_t)v44;
  sub_1DCD43B04(v79, (uint64_t)v83 + *(int *)(v217 + 24), &qword_1EBE84B70);
  if (v81)
  {
    id v85 = (char *)objc_msgSend(v81, sel_imageType);
    if ((unint64_t)(v85 - 1) >= 3) {
      id v86 = 0;
    }
    else {
      id v86 = v85;
    }
  }
  else
  {
    id v86 = 0;
  }
  uint64_t v87 = v220;
  uint64_t v88 = v221;
  uint64_t v89 = v212;
  uint64_t v90 = v219;
  LODWORD(v209) = sub_1DCDA2480(v81);
  if (!v90)
  {
    unint64_t v190 = MEMORY[0x1E4FBC860];
    goto LABEL_149;
  }
  unint64_t v203 = (v202[80] + 32) & ~(unint64_t)v202[80];
  v207 = (char *)(v89 + v203);
  uint64_t v91 = *((void *)v202 + 9);
  v223 = (void *)(v88 + 56);
  uint64_t v215 = v206 + 1;
  uint64_t v216 = v91;
  uint64_t v196 = &v243;
  v206 += 2;
  swift_bridgeObjectRetain();
  unint64_t v200 = (unint64_t)"coarseCategoryDistribution";
  unint64_t v193 = 0x80000001DD067880;
  *(void *)&long long v92 = 136315138;
  long long v195 = v92;
  uint64_t v194 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v93 = 0;
  unint64_t v217 = MEMORY[0x1E4FBC860];
  uint64_t v94 = v226;
  while (2)
  {
    sub_1DCE74AC8((uint64_t)&v207[v216 * v93], v94, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    swift_beginAccess();
    char v95 = *(unsigned char *)(v94 + 104) & v209;
    uint64_t v218 = v93;
    if (v95)
    {
      if (qword_1EBE87190 != -1) {
        swift_once();
      }
      if (byte_1EBE87188 != 1) {
        goto LABEL_126;
      }
      id v96 = objc_msgSend(self, sel_mainBundle);
      id v97 = objc_msgSend(v96, sel_bundleIdentifier);

      if (v97)
      {
        uint64_t v98 = sub_1DD048408();
        uint64_t v100 = v99;

        if (v98 == 0xD00000000000002BLL && v100 == v193)
        {
          swift_bridgeObjectRelease();
          goto LABEL_118;
        }
        char v166 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v166)
        {
LABEL_118:
          long long v167 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            long long v167 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_122;
        }
      }
      long long v167 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        long long v167 = &qword_1EBE871E8;
      }
LABEL_122:
      long long v168 = *(void **)(*v167 + 32);
      swift_retain();
      long long v169 = (void *)sub_1DD0483D8();
      LODWORD(v168) = objc_msgSend(v168, sel_BOOLForKey_, v169);
      swift_release();

      uint64_t v88 = v221;
      if (v168)
      {
        if (qword_1EAB01C80 != -1) {
          swift_once();
        }
        uint64_t v170 = v6;
        long long v171 = qword_1EAB02B70;
        goto LABEL_129;
      }
LABEL_126:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v170 = v6;
      long long v171 = qword_1EBE871A8;
LABEL_129:
      uint64_t v172 = __swift_project_value_buffer(v170, (uint64_t)v171);
      v173 = *v206;
      (*v206)(v211, v172, v6);
      if ((byte_1EBE87188 & 1) == 0) {
        goto LABEL_141;
      }
      id v174 = objc_msgSend(self, sel_mainBundle);
      id v175 = objc_msgSend(v174, sel_bundleIdentifier);

      if (v175)
      {
        uint64_t v176 = sub_1DD048408();
        uint64_t v178 = v177;

        if (v176 == 0xD00000000000002BLL && v178 == (v200 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
          goto LABEL_135;
        }
        char v179 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v179)
        {
LABEL_135:
          CGRect v180 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            CGRect v180 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_139;
        }
      }
      CGRect v180 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        CGRect v180 = &qword_1EBE871E8;
      }
LABEL_139:
      CGRect v181 = *(void **)(*v180 + 32);
      swift_retain();
      CGRect v182 = (void *)sub_1DD0483D8();
      LODWORD(v181) = objc_msgSend(v181, sel_BOOLForKey_, v182);
      swift_release();

      uint64_t v88 = v221;
      if (v181)
      {
        CGRect v184 = v210;
        uint64_t v183 = (uint64_t)v211;
LABEL_144:
        v173(v184, v183, v6);
        uint64_t v185 = (void (*)(char *, uint64_t))*v215;
        ((void (*)(char *, uint64_t))*v215)(v211, v6);
        uint64_t v186 = sub_1DD048048();
        os_log_type_t v187 = sub_1DD048848();
        if (os_log_type_enabled(v186, v187))
        {
          uint64_t v188 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v188 = 0;
          _os_log_impl(&dword_1DCCF9000, v186, v187, "Skip whole image region", v188, 2u);
          v189 = v188;
          uint64_t v88 = v221;
          MEMORY[0x1E01B07E0](v189, -1, -1);
        }

        v185(v210, v6);
        uint64_t v87 = v220;
        goto LABEL_50;
      }
LABEL_141:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v183 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBE871A8);
      CGRect v184 = v210;
      goto LABEL_144;
    }
    uint64_t v101 = 1 << *(unsigned char *)(v88 + 32);
    if (v101 < 64) {
      uint64_t v102 = ~(-1 << v101);
    }
    else {
      uint64_t v102 = -1;
    }
    unint64_t v103 = v102 & *(void *)(v88 + 56);
    id v224 = (id)((unint64_t)(v101 + 63) >> 6);
    swift_bridgeObjectRetain();
    uint64_t v104 = 0;
    uint64_t v214 = (void *)MEMORY[0x1E4FBC860];
LABEL_63:
    while (2)
    {
      if (v103)
      {
        unint64_t v105 = __clz(__rbit64(v103));
        v103 &= v103 - 1;
        unint64_t v106 = v105 | (v104 << 6);
        goto LABEL_79;
      }
      uint64_t v107 = v104 + 1;
      if (__OFADD__(v104, 1))
      {
        __break(1u);
        goto LABEL_151;
      }
      if (v107 >= (uint64_t)v224) {
        goto LABEL_109;
      }
      unint64_t v108 = v223[v107];
      ++v104;
      if (v108) {
        goto LABEL_78;
      }
      uint64_t v104 = v107 + 1;
      if (v107 + 1 >= (uint64_t)v224) {
        goto LABEL_109;
      }
      unint64_t v108 = v223[v104];
      if (v108) {
        goto LABEL_78;
      }
      uint64_t v104 = v107 + 2;
      if (v107 + 2 >= (uint64_t)v224) {
        goto LABEL_109;
      }
      unint64_t v108 = v223[v104];
      if (v108)
      {
LABEL_78:
        unint64_t v103 = (v108 - 1) & v108;
        unint64_t v106 = __clz(__rbit64(v108)) + (v104 << 6);
LABEL_79:
        uint64_t v110 = *(void *)(v87 + 16);
        if (!*(void *)(v110 + 16)) {
          continue;
        }
        uint64_t v111 = sub_1DCEAD454(*(unsigned __int8 *)(*(void *)(v88 + 48) + v106));
        if ((v112 & 1) == 0) {
          continue;
        }
        uint64_t v113 = *(void *)(*(void *)(v110 + 56) + 8 * v111);
        sub_1DCD5DA7C((uint64_t)v244);
        uint64_t v114 = (void (*)(uint64_t, uint64_t))v113;
        uint64_t v115 = *(void *)(v113 + 16);
        if (!v115) {
          continue;
        }
        uint64_t v116 = (uint64_t)v114 + 32;
        v222 = v114;
        swift_bridgeObjectRetain();
        sub_1DCD43B04((uint64_t)v244, (uint64_t)&v242, &qword_1EBE85400);
        for (uint64_t i = v115 - 1; ; --i)
        {
          sub_1DCD3A3BC(v116, (uint64_t)v239);
          uint64_t v118 = v240;
          uint64_t v119 = v241;
          __swift_project_boxed_opaque_existential_1(v239, v240);
          uint64_t v120 = (*(uint64_t (**)(uint64_t, uint64_t))(v119 + 16))(v118, v119);
          sub_1DCD3A3BC((uint64_t)v239, (uint64_t)v235);
          if ((char *)v120 == v86) {
            break;
          }
          uint64_t v124 = v236;
          uint64_t v125 = v237;
          __swift_project_boxed_opaque_existential_1(v235, v236);
          uint64_t v126 = (*(uint64_t (**)(uint64_t, uint64_t))(v125 + 16))(v124, v125);
          uint64_t v127 = v126;
          if (v128)
          {
            switch(v126)
            {
              case 1:
              case 2:
              case 3:
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v235);
                goto LABEL_99;
              default:
                goto LABEL_84;
            }
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v235);
          if (!v127) {
            goto LABEL_85;
          }
LABEL_99:
          long long v134 = &v242;
LABEL_100:
          sub_1DCD43B04((uint64_t)v134, (uint64_t)v238, &qword_1EBE85400);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v239);
          if (!i)
          {
            swift_bridgeObjectRelease();
            sub_1DCD43B04((uint64_t)v238, (uint64_t)v233, &qword_1EBE85400);
            if (sub_1DCD32CA4((uint64_t)v233) == 1)
            {
              uint64_t v87 = v220;
              uint64_t v88 = v221;
            }
            else
            {
              sub_1DCD43B04((uint64_t)v238, (uint64_t)v232, &qword_1EBE85400);
              sub_1DCD32CC8((uint64_t)v232);
              char v135 = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v87 = v220;
              uint64_t v88 = v221;
              if ((v135 & 1) == 0) {
                uint64_t v214 = sub_1DCE9D680(0, v214[2] + 1, 1, v214);
              }
              unint64_t v137 = v214[2];
              unint64_t v136 = v214[3];
              if (v137 >= v136 >> 1) {
                uint64_t v214 = sub_1DCE9D680((void *)(v136 > 1), v137 + 1, 1, v214);
              }
              uint64_t v138 = v214;
              v214[2] = v137 + 1;
              long long v139 = &v138[20 * v137];
              long long v140 = v233[1];
              v139[2] = v233[0];
              v139[3] = v140;
              long long v141 = v233[2];
              long long v142 = v233[3];
              long long v143 = v233[5];
              v139[6] = v233[4];
              v139[7] = v143;
              v139[4] = v141;
              v139[5] = v142;
              long long v144 = v233[6];
              long long v145 = v233[7];
              long long v146 = v234[0];
              *(_OWORD *)((char *)v139 + 173) = *(_OWORD *)((char *)v234 + 13);
              v139[9] = v145;
              v139[10] = v146;
              v139[8] = v144;
              sub_1DCE74994(v238);
            }
            goto LABEL_63;
          }
          sub_1DCD43B04((uint64_t)v238, (uint64_t)&v242, &qword_1EBE85400);
          v116 += 40;
        }
LABEL_84:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v235);
LABEL_85:
        uint64_t v121 = v240;
        uint64_t v122 = v241;
        __swift_project_boxed_opaque_existential_1(v239, v240);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v122 + 8))(v121, v122))
        {
          int v123 = sub_1DCD32CA4((uint64_t)&v242);
          sub_1DCD3A3BC((uint64_t)v239, (uint64_t)v229);
          if (!v123) {
            goto LABEL_94;
          }
        }
        else
        {
          sub_1DCD3A3BC((uint64_t)v239, (uint64_t)v229);
        }
        uint64_t v129 = v230;
        uint64_t v130 = v231;
        __swift_project_boxed_opaque_existential_1(v229, v230);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v130 + 8))(v129, v130) & 1) != 0
          || (sub_1DCD43B04((uint64_t)&v242, (uint64_t)v232, &qword_1EBE85400),
              sub_1DCD32CA4((uint64_t)v232) != 1))
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v229);
          uint64_t v133 = &v242;
          goto LABEL_96;
        }
LABEL_94:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v229);
        uint64_t v131 = v240;
        uint64_t v132 = v241;
        __swift_project_boxed_opaque_existential_1(v239, v240);
        sub_1DCD43B04((uint64_t)&v242, (uint64_t)v232, &qword_1EBE85400);
        (*(void (**)(void *__return_ptr, unsigned char *, uint64_t, uint64_t *, uint64_t, uint64_t))(v132 + 24))(v227, v232, v226, v225, v131, v132);
        sub_1DCD43B04((uint64_t)v232, (uint64_t)v228, &qword_1EBE85400);
        sub_1DCE74994(v228);
        sub_1DCD43B04((uint64_t)v227, (uint64_t)v232, &qword_1EBE85400);
        uint64_t v133 = (uint64_t *)v232;
LABEL_96:
        sub_1DCD43B04((uint64_t)v133, (uint64_t)v233, &qword_1EBE85400);
        long long v134 = (uint64_t *)v233;
        goto LABEL_100;
      }
      break;
    }
    uint64_t v109 = v107 + 3;
    if (v109 < (uint64_t)v224)
    {
      unint64_t v108 = v223[v109];
      if (!v108)
      {
        while (1)
        {
          uint64_t v104 = v109 + 1;
          if (__OFADD__(v109, 1)) {
            break;
          }
          if (v104 >= (uint64_t)v224) {
            goto LABEL_109;
          }
          unint64_t v108 = v223[v104];
          ++v109;
          if (v108) {
            goto LABEL_78;
          }
        }
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
        goto LABEL_153;
      }
      uint64_t v104 = v109;
      goto LABEL_78;
    }
LABEL_109:
    swift_release();
    long long v147 = sub_1DCD9F708((uint64_t)v214);
    swift_bridgeObjectRelease();
    uint64_t v148 = v226;
    *(void *)(v226 + 48) = v147;
    swift_bridgeObjectRelease();
    uint64_t v149 = v204;
    sub_1DCDB40EC(v204);
    uint64_t v150 = v205;
    sub_1DCDB4300(v205);
    long long v151 = (void (*)(uint64_t, uint64_t))*v215;
    uint64_t v152 = v213;
    ((void (*)(uint64_t, uint64_t))*v215)(v149, v213);
    long long v153 = sub_1DD048048();
    os_log_type_t v154 = sub_1DD048848();
    LODWORD(v224) = v154;
    if (os_log_type_enabled(v153, v154))
    {
      uint64_t v155 = (uint8_t *)swift_slowAlloc();
      uint64_t v214 = (void *)swift_slowAlloc();
      v244[0] = (uint64_t)v214;
      *(_DWORD *)uint64_t v155 = v195;
      v201 = v155 + 4;
      uint64_t v202 = v155;
      v222 = v151;
      uint64_t v156 = v197;
      sub_1DCE74AC8(v148, v197, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCE74AC8(v156, v198, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v157 = sub_1DD048498();
      unint64_t v159 = v158;
      sub_1DCE74B30(v156, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v242 = sub_1DCED7FA0(v157, v159, v244);
      sub_1DD048A28();
      uint64_t v148 = v226;
      swift_bridgeObjectRelease();
      uint64_t v160 = v202;
      _os_log_impl(&dword_1DCCF9000, v153, (os_log_type_t)v224, "%s", v202, 0xCu);
      unint64_t v161 = v214;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v161, -1, -1);
      uint64_t v87 = v220;
      MEMORY[0x1E01B07E0](v160, -1, -1);

      v222(v150, v213);
    }
    else
    {

      v151(v150, v152);
    }
    sub_1DCE74AC8(v148, v208, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    char v162 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v88 = v221;
    if (v162)
    {
      uint64_t v6 = v213;
      unint64_t v163 = v217;
    }
    else
    {
      unint64_t v163 = sub_1DCE9D7A0(0, *(void *)(v217 + 16) + 1, 1, v217);
      uint64_t v6 = v213;
    }
    unint64_t v165 = *(void *)(v163 + 16);
    unint64_t v164 = *(void *)(v163 + 24);
    if (v165 >= v164 >> 1) {
      unint64_t v163 = sub_1DCE9D7A0(v164 > 1, v165 + 1, 1, v163);
    }
    *(void *)(v163 + 16) = v165 + 1;
    unint64_t v217 = v163;
    sub_1DCE74A60(v208, v163 + v203 + v165 * v216, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_50:
    uint64_t v93 = v218 + 1;
    uint64_t v94 = v226;
    sub_1DCE74B30(v226, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if (v93 != v219) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  unint64_t v190 = v217;
LABEL_149:
  sub_1DCEA3DA4();
  swift_release();
  sub_1DCE74B30((uint64_t)v225, type metadata accessor for DomainAssignmentSignals);
  return v190;
}

unint64_t sub_1DCE74594(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB02D00);
    uint64_t v2 = (void *)sub_1DD048D08();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(v1 + 64);
  int64_t v27 = (unint64_t)(63 - v4) >> 6;
  uint64_t v6 = (char *)v36 + 8;
  uint64_t v7 = (char *)v33 + 8;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v26 = v1;
  while (1)
  {
    if (v5)
    {
      uint64_t v14 = (v5 - 1) & v5;
      unint64_t v15 = __clz(__rbit64(v5)) | (v9 << 6);
      int64_t v16 = v9;
    }
    else
    {
      int64_t v17 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v27)
      {
LABEL_36:
        sub_1DCD505A4();
        return (unint64_t)v2;
      }
      unint64_t v18 = *(void *)(v28 + 8 * v17);
      int64_t v16 = v9 + 1;
      if (!v18)
      {
        int64_t v16 = v9 + 2;
        if (v9 + 2 >= v27) {
          goto LABEL_36;
        }
        unint64_t v18 = *(void *)(v28 + 8 * v16);
        if (!v18)
        {
          int64_t v16 = v9 + 3;
          if (v9 + 3 >= v27) {
            goto LABEL_36;
          }
          unint64_t v18 = *(void *)(v28 + 8 * v16);
          if (!v18)
          {
            int64_t v16 = v9 + 4;
            if (v9 + 4 >= v27) {
              goto LABEL_36;
            }
            unint64_t v18 = *(void *)(v28 + 8 * v16);
            if (!v18)
            {
              int64_t v19 = v9 + 5;
              if (v9 + 5 >= v27) {
                goto LABEL_36;
              }
              unint64_t v18 = *(void *)(v28 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  int64_t v16 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_41;
                  }
                  if (v16 >= v27) {
                    goto LABEL_36;
                  }
                  unint64_t v18 = *(void *)(v28 + 8 * v16);
                  ++v19;
                  if (v18) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v16 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v14 = (v18 - 1) & v18;
      unint64_t v15 = __clz(__rbit64(v18)) + (v16 << 6);
    }
    sub_1DCE74A04(*(void *)(v1 + 48) + 40 * v15, (uint64_t)v35);
    sub_1DCD21A28(*(void *)(v1 + 56) + 32 * v15, (uint64_t)v6);
    v33[0] = v36[0];
    v33[1] = v36[1];
    uint64_t v34 = v37;
    v32[0] = v35[0];
    v32[1] = v35[1];
    sub_1DCE74A04((uint64_t)v32, (uint64_t)v31);
    if (!swift_dynamicCast())
    {
      sub_1DCD2479C((uint64_t)v32, &qword_1EAB03B20);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_1DCD505A4();
      swift_release();
      return 0;
    }
    sub_1DCD21A28((uint64_t)v7, (uint64_t)v31);
    sub_1DCD2479C((uint64_t)v32, &qword_1EAB03B20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03B28);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    unint64_t result = sub_1DCEAD1A4(v29, v30);
    unint64_t v20 = result;
    if (v21)
    {
      uint64_t v10 = v7;
      uint64_t v11 = v6;
      uint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v12 = v29;
      v12[1] = v30;
      uint64_t v13 = v2[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v13 + 8 * v20) = v29;
      uint64_t v6 = v11;
      uint64_t v7 = v10;
      uint64_t v1 = v26;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v22 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v22 = v29;
    v22[1] = v30;
    *(void *)(v2[7] + 8 * result) = v29;
    uint64_t v23 = v2[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_39;
    }
    v2[2] = v25;
LABEL_8:
    int64_t v9 = v16;
    unint64_t v5 = v14;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DomainAssignmentProcessor()
{
  return self;
}

uint64_t *sub_1DCE74994(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1DCE74A04(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DCE74A60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCE74AC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCE74B30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DCE74B90()
{
  unint64_t result = qword_1EBE84D78;
  if (!qword_1EBE84D78)
  {
    type metadata accessor for Argos_Protos_Queryflow_DomainAssignmentRule(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84D78);
  }
  return result;
}

unint64_t sub_1DCE74BEC(id a1, void *a2, char a3)
{
  switch(a3)
  {
    case 1:
      id v7 = a1;
      sub_1DD048B98();
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xD000000000000014;
      if (a1)
      {
        swift_getErrorValue();
        id v8 = a1;
        sub_1DD049038();
        sub_1DCD431D8(a1, a2, 1);
      }
      sub_1DD048548();
      swift_bridgeObjectRelease();
      sub_1DCD431D8(a1, a2, 1);
      return v11;
    case 2:
      uint64_t v9 = 0x4D64696C61766E69;
      goto LABEL_11;
    case 3:
    case 4:
      swift_bridgeObjectRetain();
      sub_1DD048B98();
      swift_bridgeObjectRelease();
      unint64_t v11 = 0x5264696C61766E69;
      sub_1DD048548();
      goto LABEL_12;
    case 5:
      uint64_t v9 = 0x4164696C61766E69;
      goto LABEL_11;
    case 6:
      uint64_t v9 = 0x7245656E69676E65;
      goto LABEL_11;
    case 7:
      uint64_t v9 = 0x41676E697373696DLL;
LABEL_11:
      unint64_t v11 = v9;
      swift_bridgeObjectRetain();
      sub_1DD048548();
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    default:
      id v5 = a1;
      sub_1DD048B98();
      swift_bridgeObjectRelease();
      unint64_t v11 = 0x616F4C6C65646F6DLL;
      if (a1)
      {
        swift_getErrorValue();
        id v6 = a1;
        sub_1DD049038();
        sub_1DCD431D8(a1, a2, 0);
      }
      sub_1DD048548();
      swift_bridgeObjectRelease();
      sub_1DCD431D8(a1, a2, 0);
      break;
  }
  return v11;
}

unint64_t sub_1DCE74F44()
{
  return sub_1DCE74BEC(*(id *)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1DCE74F50()
{
  sub_1DCE74BEC(*(id *)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
  sub_1DD048548();
  swift_bridgeObjectRelease();
  return 0x2E726F7272454C4DLL;
}

void destroy for MLError(uint64_t a1)
{
}

uint64_t _s18VisualIntelligence7MLErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1DCD4316C(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MLError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1DCD4316C(*(id *)a2, v4, v5);
  id v6 = *(void **)a1;
  id v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1DCD431D8(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MLError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1DCD431D8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MLError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 7) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MLError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 249;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DCE75150(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1DCE75158(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MLError()
{
  return &type metadata for MLError;
}

uint64_t sub_1DCE75170()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnyVIImageContent()
{
  return self;
}

id sub_1DCE751CC()
{
  return objc_msgSend(*(id *)(*(void *)v0 + 16), sel_orientation);
}

id sub_1DCE751E0()
{
  return objc_msgSend(*(id *)(*(void *)v0 + 16), sel_imageSize);
}

id sub_1DCE751F4()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel_pixelBuffer);
  if (!v1)
  {
    sub_1DCE75268();
    swift_allocError();
    swift_willThrow();
  }
  return v1;
}

unint64_t sub_1DCE75268()
{
  unint64_t result = qword_1EAB03B38;
  if (!qword_1EAB03B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03B38);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AnyVIImageContent.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCE75358);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyVIImageContent.Error()
{
  return &type metadata for AnyVIImageContent.Error;
}

unint64_t sub_1DCE75394()
{
  unint64_t result = qword_1EAB03B40;
  if (!qword_1EAB03B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03B40);
  }
  return result;
}

uint64_t sub_1DCE753E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for SceneClassificationModelFactory();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *a2 = v4;
  return swift_retain();
}

id sub_1DCE75440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v29 = a1;
  uint64_t v30 = sub_1DD0481B8();
  uint64_t v33 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  char v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DD0481D8();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  v38[0] = 0xD000000000000011;
  v38[1] = 0x80000001DD06C9F0;
  v38[2] = "Text Lookup Overall";
  v38[3] = 19;
  char v39 = 2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  uint64_t v14 = sub_1DCEA469C((uint64_t)v38, 0);
  unint64_t v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = sub_1DCE76FD0;
  v15[4] = v13;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1DCE77018;
  *(void *)(v16 + 24) = v15;
  uint64_t v28 = *(void *)(v4 + 80);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  sub_1DCE770A0(v29, (uint64_t)v36);
  uint64_t v18 = swift_allocObject();
  long long v19 = v36[8];
  *(_OWORD *)(v18 + 152) = v36[7];
  *(_OWORD *)(v18 + 168) = v19;
  *(_OWORD *)(v18 + 184) = v36[9];
  long long v20 = v36[2];
  *(_OWORD *)(v18 + 88) = v36[3];
  *(_OWORD *)(v18 + 104) = v36[4];
  long long v21 = v36[6];
  *(_OWORD *)(v18 + 120) = v36[5];
  *(_OWORD *)(v18 + 136) = v21;
  long long v22 = v36[1];
  *(_OWORD *)(v18 + 40) = v36[0];
  *(_OWORD *)(v18 + 56) = v22;
  *(void *)(v18 + 16) = sub_1DCE7705C;
  *(void *)(v18 + 24) = v16;
  *(void *)(v18 + 32) = v17;
  uint64_t v23 = v37;
  *(_OWORD *)(v18 + 72) = v20;
  *(void *)(v18 + 200) = v23;
  *(void *)(v18 + 208) = v12;
  v35[4] = sub_1DCE771C0;
  v35[5] = v18;
  v35[0] = MEMORY[0x1E4F143A8];
  v35[1] = 1107296256;
  _OWORD v35[2] = sub_1DCEC8CA4;
  v35[3] = &block_descriptor_3;
  BOOL v24 = _Block_copy(v35);
  swift_retain();
  swift_retain();
  id v25 = v12;
  sub_1DD0481C8();
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1DCE779AC(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCE779F4((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  uint64_t v26 = v30;
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v11, v8, v24);
  _Block_release(v24);
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v26);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
  swift_release();
  swift_release();
  return v25;
}

void sub_1DCE758BC(void (*a1)(void *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (VIIsSettingsEnabledForLookup())
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      swift_release();
      sub_1DCE770A0(a4, (uint64_t)v27);
      uint64_t v14 = swift_allocObject();
      long long v15 = v27[6];
      *(_OWORD *)(v14 + 136) = v27[7];
      long long v16 = v27[9];
      *(_OWORD *)(v14 + 152) = v27[8];
      *(_OWORD *)(v14 + 168) = v16;
      long long v17 = v27[2];
      *(_OWORD *)(v14 + 72) = v27[3];
      long long v18 = v27[5];
      *(_OWORD *)(v14 + 88) = v27[4];
      *(_OWORD *)(v14 + 104) = v18;
      *(_OWORD *)(v14 + 120) = v15;
      long long v19 = v27[1];
      *(_OWORD *)(v14 + 24) = v27[0];
      *(_OWORD *)(v14 + 40) = v19;
      *(void *)(v14 + 16) = a3;
      uint64_t v20 = v28;
      *(_OWORD *)(v14 + 56) = v17;
      *(void *)(v14 + 184) = v20;
      *(void *)(v14 + 192) = a5;
      *(void *)(v14 + 200) = a1;
      *(void *)(v14 + 208) = a2;
      swift_retain();
      id v21 = a5;
      swift_retain();
      sub_1DCEC7510((uint64_t (*)(uint64_t))sub_1DCE772B0, v14);
      swift_release();
      swift_release();
    }
  }
  else
  {
    sub_1DCDB40EC((uint64_t)v13);
    long long v22 = sub_1DD048048();
    os_log_type_t v23 = sub_1DD048848();
    if (os_log_type_enabled(v22, v23))
    {
      BOOL v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v24 = 0;
      _os_log_impl(&dword_1DCCF9000, v22, v23, "Text lookup disabled by settings", v24, 2u);
      MEMORY[0x1E01B07E0](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1DCE76DFC();
    id v25 = (void *)swift_allocError();
    *uint64_t v26 = 1;
    a1(v25, 1);
  }
}

void sub_1DCE75B60(char a1, uint64_t a2, void *a3, char *a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  if (a1)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1DCE7667C(a3, a4, a5, a6);
      swift_release();
    }
  }
  else
  {
    sub_1DCE76DFC();
    uint64_t v10 = (void *)swift_allocError();
    *uint64_t v11 = 1;
    a5(v10, 1);
  }
}

uint64_t sub_1DCE75C50@<X0>(void *a1@<X0>, NSObject *a2@<X1>, void *a3@<X8>)
{
  os_log_t v56 = a2;
  id v64 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
  MEMORY[0x1F4188790](v6 - 8);
  BOOL v60 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for SceneClassificationModelFactory.Input();
  MEMORY[0x1F4188790](v59);
  uint64_t v63 = (long long *)((char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1DD046598();
  uint64_t v57 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v62 = sub_1DD048068();
  *(void *)&long long v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v58 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DD048208();
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = MEMORY[0x1F4188790](v13);
  long long v17 = (uint8_t **)((char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = v3;
  long long v18 = *(void **)(v3 + 80);
  *long long v17 = v18;
  (*(void (**)(void *, void, uint64_t, double))(v14 + 104))(v17, *MEMORY[0x1E4FBCBF0], v13, v15);
  id v19 = v18;
  uint64_t v20 = sub_1DD048228();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
  if ((v20 & 1) == 0)
  {
    __break(1u);
LABEL_26:
    swift_once();
    goto LABEL_14;
  }
  if (a1[12] != 1)
  {
    uint64_t v21 = a1[17];
    if (v21)
    {
      uint64_t v22 = a1[18];
      os_log_type_t v23 = v64;
      *id v64 = v21;
      v23[1] = v22;
      return swift_bridgeObjectRetain();
    }
  }
  __swift_project_boxed_opaque_existential_1((void *)(v65 + 40), *(void *)(v65 + 64));
  sub_1DD047938();
  sub_1DCE76E50((uint64_t)(a1 + 7), (uint64_t)v66);
  uint64_t v25 = v67;
  if (!v67)
  {
    sub_1DCD2479C((uint64_t)v66, &qword_1EBE85740);
    long long v69 = 0u;
    long long v70 = 0u;
    uint64_t v71 = 0;
    goto LABEL_11;
  }
  uint64_t v26 = v68;
  __swift_project_boxed_opaque_existential_1(v66, v67);
  sub_1DCF3AFAC(v25, v26, (uint64_t **)&v69);
  uint64_t v20 = v4;
  int64_t v27 = v66;
  if (v4) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  if (!*((void *)&v70 + 1))
  {
LABEL_11:
    sub_1DCD2479C((uint64_t)&v69, (uint64_t *)&unk_1EBE859E0);
    sub_1DCE76DFC();
    swift_allocError();
    *uint64_t v38 = 3;
    return swift_willThrow();
  }
  sub_1DCD3A4DC(&v69, (uint64_t)v72);
  uint64_t v28 = v58;
  sub_1DCDB40EC(v58);
  uint64_t v29 = v57;
  (*(void (**)(char *, os_log_t, uint64_t))(v57 + 16))(v11, v56, v9);
  uint64_t v30 = sub_1DD048048();
  os_log_type_t v31 = sub_1DD048848();
  int v32 = v31;
  if (os_log_type_enabled(v30, v31))
  {
    os_log_t v56 = v30;
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    *(void *)&long long v69 = v55;
    int v54 = v32;
    int64_t v53 = v33;
    *(_DWORD *)uint64_t v33 = 136315138;
    sub_1DCE779AC(&qword_1EAB03B60, MEMORY[0x1E4F27990]);
    uint64_t v34 = sub_1DD048F78();
    v66[0] = sub_1DCED7FA0(v34, v35, (uint64_t *)&v69);
    uint64_t v20 = 0;
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
    uint64_t v30 = v56;
    uint64_t v36 = v53;
    _os_log_impl(&dword_1DCCF9000, v56, (os_log_type_t)v54, "Start scene classification for lookup: %s", v53, 0xCu);
    uint64_t v37 = v55;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v37, -1, -1);
    MEMORY[0x1E01B07E0](v36, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
  }

  (*(void (**)(uint64_t, void))(v61 + 8))(v28, v62);
  uint64_t v9 = (uint64_t)v60;
  if (qword_1EBE84A80 != -1) {
    goto LABEL_26;
  }
LABEL_14:
  long long v62 = xmmword_1EBE84A60;
  long long v61 = xmmword_1EBE84A70;
  char v39 = (void *)a1[20];
  if (v39 && objc_msgSend(v39, sel_preferredMetalDevice))
  {
    swift_getObjectType();
    sub_1DCFA6980(v9);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v40 = sub_1DD0480A8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v9, 1, 1, v40);
  }
  unint64_t v41 = (double *)v63;
  long long v42 = v61;
  *uint64_t v63 = v62;
  *((_OWORD *)v41 + 1) = v42;
  sub_1DCE76EB8(v9, (uint64_t)v41 + *(int *)(v59 + 20));
  uint64_t v43 = swift_allocObject();
  sub_1DCE76DFC();
  uint64_t v44 = swift_allocError();
  *uint64_t v45 = 0;
  *(void *)(v43 + 16) = v44;
  *(void *)(v43 + 24) = 0;
  *(unsigned char *)(v43 + 32) = 1;
  sub_1DCFE3A4C();
  if (v20)
  {
    sub_1DCE76F70((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for SceneClassificationModelFactory.Input);
  }
  else
  {
    swift_retain();
    sub_1DCDDAA94(v41, (uint64_t)sub_1DCE76F68, v43, (NSObject **)&v69);
    swift_release();
    swift_release();
    uint64_t v46 = v72[4];
    __swift_project_boxed_opaque_existential_1(v72, v72[3]);
    uint64_t v47 = *((void *)&v70 + 1);
    uint64_t v48 = v71;
    __swift_project_boxed_opaque_existential_1(&v69, *((uint64_t *)&v70 + 1));
    (*(void (**)(uint64_t, uint64_t))(v48 + 16))(v47, v48);
    (*(void (**)(void))(v46 + 8))();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v49 = *(void **)(v43 + 16);
    if (*(unsigned char *)(v43 + 32))
    {
      v72[7] = *(void *)(v43 + 16);
      id v50 = v49;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
      swift_willThrowTypedImpl();
      sub_1DCE76F70((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for SceneClassificationModelFactory.Input);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v69);
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    }
    uint64_t v51 = *(void *)(v43 + 24);
    int64_t v52 = v64;
    *id v64 = v49;
    v52[1] = v51;
    swift_bridgeObjectRetain();
    sub_1DCE76F70((uint64_t)v63, (uint64_t (*)(void))type metadata accessor for SceneClassificationModelFactory.Input);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v69);
  }
  swift_release();
  int64_t v27 = v72;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

void sub_1DCE76574(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  if (*(unsigned char *)(a1 + 17))
  {
    char v5 = *(unsigned char *)(a1 + 16);
    sub_1DCD3A548();
    uint64_t v6 = swift_allocError();
    *(void *)uint64_t v7 = v3;
    *(void *)(v7 + 8) = v4;
    *(unsigned char *)(v7 + 16) = v5;
    swift_beginAccess();
    uint64_t v8 = *(void **)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    char v10 = *(unsigned char *)(a2 + 32);
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = 0;
    *(unsigned char *)(a2 + 32) = 1;
    sub_1DCD4316C(v3, v4, v5);
    uint64_t v11 = v8;
    uint64_t v12 = v9;
    char v13 = v10;
  }
  else
  {
    swift_beginAccess();
    uint64_t v14 = *(void **)(a2 + 16);
    uint64_t v15 = *(void *)(a2 + 24);
    char v16 = *(unsigned char *)(a2 + 32);
    *(void *)(a2 + 16) = v3;
    *(void *)(a2 + 24) = v4;
    *(unsigned char *)(a2 + 32) = 0;
    swift_bridgeObjectRetain();
    uint64_t v11 = v14;
    uint64_t v12 = v15;
    char v13 = v16;
  }
  sub_1DCE76F5C(v11, v12, v13);
}

void sub_1DCE7667C(void *a1, char *a2, void (*a3)(void *, uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  char v39 = a1;
  uint64_t v9 = sub_1DD048068();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DD048208();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x1F4188790](v12);
  char v16 = (uint64_t *)((char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v17 = *(void **)(v5 + 80);
  *char v16 = v17;
  (*(void (**)(void *, void, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E4FBCBF0], v12, v14);
  id v18 = v17;
  LOBYTE(v17) = sub_1DD048228();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v16, v12);
  if (v17)
  {
    id v19 = (os_unfair_lock_s *)(*(void *)&a2[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
    os_unfair_lock_lock(v19);
    int v20 = a2[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
    os_unfair_lock_unlock(v19);
    if (v20 == 1)
    {
      sub_1DCE76DFC();
      uint64_t v21 = (void *)swift_allocError();
      *uint64_t v22 = 2;
      a3(v21, 1);
    }
    else
    {
      sub_1DCE75C50(v39, &a2[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier], &v41);
      uint64_t v23 = v41;
      v40[0] = v41;
      v40[1] = v42;
      sub_1DCD6B08C(v40, (int *)(v5 + OBJC_IVAR____TtC18VisualIntelligence14TextLookupFlow_config), *(uint64_t **)(v5 + 24), &v41);
      uint64_t v24 = v41;
      uint64_t v25 = v42;
      sub_1DCDB40EC((uint64_t)v11);
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1DD048048();
      os_log_type_t v27 = sub_1DD048848();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v33 = v25;
        uint64_t v36 = a4;
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        v40[0] = v29;
        *(_DWORD *)uint64_t v28 = 136315138;
        uint64_t v34 = v24;
        unint64_t v35 = a3;
        if (v23) {
          uint64_t v30 = *(void *)(v23 + 16);
        }
        else {
          uint64_t v30 = 0;
        }
        uint64_t v41 = v30;
        LOBYTE(v42) = v23 == 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B78);
        uint64_t v31 = sub_1DD048478();
        uint64_t v41 = sub_1DCED7FA0(v31, v32, v40);
        sub_1DD048A28();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DCCF9000, v26, v27, "End scene classification for lookup. %s", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v29, -1, -1);
        MEMORY[0x1E01B07E0](v28, -1, -1);

        (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v38);
        a3 = v35;
        a4 = v36;
        uint64_t v25 = v33;
        uint64_t v24 = v34;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v38);
      }
      __swift_project_boxed_opaque_existential_1((void *)(v5 + 40), *(void *)(v5 + 64));
      uint64_t v41 = v24;
      uint64_t v42 = v25;
      sub_1DCE8DE78((uint64_t)v39, &v41, a2, (uint64_t)a3, a4);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DCE76AF0()
{
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);

  sub_1DCE76F70(v0 + OBJC_IVAR____TtC18VisualIntelligence14TextLookupFlow_config, (uint64_t (*)(void))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
  return swift_deallocClassInstance();
}

uint64_t sub_1DCE76B90()
{
  return type metadata accessor for TextLookupFlow();
}

uint64_t type metadata accessor for TextLookupFlow()
{
  uint64_t result = qword_1EBE86E40;
  if (!qword_1EBE86E40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCE76BE4()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TextLookupFlowError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCE76D6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextLookupFlowError()
{
  return &type metadata for TextLookupFlowError;
}

unint64_t sub_1DCE76DA8()
{
  unint64_t result = qword_1EAB03B50;
  if (!qword_1EAB03B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03B50);
  }
  return result;
}

unint64_t sub_1DCE76DFC()
{
  unint64_t result = qword_1EAB03B58;
  if (!qword_1EAB03B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03B58);
  }
  return result;
}

uint64_t sub_1DCE76E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCE76EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCE76F20()
{
  sub_1DCE76F5C(*(id *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  return MEMORY[0x1F4186498](v0, 33, 7);
}

void sub_1DCE76F5C(id a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_1DCE76F68(uint64_t a1)
{
  sub_1DCE76574(a1, v1);
}

uint64_t sub_1DCE76F70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCE76FD0(uint64_t a1)
{
  return sub_1DCE8DE00(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

uint64_t sub_1DCE76FD8()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1DCE77018(uint64_t *a1)
{
  return sub_1DCE90AE8(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t *))(v1 + 24));
}

uint64_t sub_1DCE77024()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DCE7705C(uint64_t a1, char a2)
{
  return sub_1DCE8DE38(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1DCE77068()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCE770A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DCE770FC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  if (*(void *)(v0 + 136) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x1F4186498](v0, 216, 7);
}

void sub_1DCE771C0()
{
  sub_1DCE758BC(*(void (**)(void *, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v0 + 40, *(void **)(v0 + 208));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_1DCE771EC()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  }
  if (*(void *)(v0 + 120) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_release();
  return MEMORY[0x1F4186498](v0, 216, 7);
}

void sub_1DCE772B0(char a1)
{
  sub_1DCE75B60(a1, *(void *)(v1 + 16), (void *)(v1 + 24), *(char **)(v1 + 192), *(void (**)(void *, uint64_t))(v1 + 200), *(void *)(v1 + 208));
}

void *sub_1DCE772C4()
{
  uint64_t v0 = type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v44 = (uint64_t)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v42 = (uint64_t *)((char *)&v40 - v3);
  uint64_t v4 = sub_1DD0478F8();
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD048878();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1DD0481D8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1DD048898();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCE6B034();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCC68], v9);
  sub_1DD0481C8();
  v43[0] = MEMORY[0x1E4FBC860];
  sub_1DCE779AC(&qword_1EBE87138, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87120);
  sub_1DCE779F4((unint64_t *)&qword_1EBE87128, &qword_1EBE87120);
  sub_1DD048AE8();
  uint64_t v13 = (void *)sub_1DD0488C8();
  sub_1DD047988();
  swift_allocObject();
  uint64_t v14 = sub_1DD047978();
  id v15 = v13;
  sub_1DD047928();
  uint64_t v16 = sub_1DD047908();
  swift_release();
  swift_retain();
  sub_1DD047928();
  swift_release();
  sub_1DD047918();
  swift_release();
  type metadata accessor for PegasusProxyEnableListener();
  swift_allocObject();
  uint64_t v41 = sub_1DCEC6DE8(v15, v16, (uint64_t)v6, 5.0);
  LOBYTE(v16) = sub_1DCDE82EC();
  type metadata accessor for TrialWrapper();
  swift_initStackObject();
  sub_1DCFD946C((v16 & 1) == 0);
  uint64_t v17 = sub_1DCFD9704(12, 0, 25200, 0xE200000000000000);
  id v18 = v42;
  sub_1DCD6AA40(v17, v19, v42);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v20 = type metadata accessor for TextLookupServerFlow();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v21 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_timeoutSeconds;
  *(void *)(v21 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_timeoutSeconds) = 10;
  uint64_t v23 = *MEMORY[0x1E4FBCAE8];
  uint64_t v24 = sub_1DD0481A8();
  uint64_t v25 = v23;
  uint64_t v26 = (uint64_t)v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v22, v25, v24);
  uint64_t v27 = OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_searchFetches;
  id v28 = v15;
  swift_retain();
  uint64_t v29 = MEMORY[0x1E4FBC860];
  *(void *)(v21 + v27) = sub_1DCDBA0E0(MEMORY[0x1E4FBC860]);
  uint64_t v30 = OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_completions;
  *(void *)(v21 + v30) = sub_1DCDBA3D8(v29);
  *(void *)(v21 + 16) = v14;
  *(void *)(v21 + 24) = v28;
  v43[3] = v20;
  uint64_t v43[4] = &off_1F383B498;
  v43[0] = v21;
  uint64_t v31 = v44;
  sub_1DCD6B6AC(v26, v44);
  type metadata accessor for TextLookupFlow();
  unint64_t v32 = (void *)swift_allocObject();
  type metadata accessor for VISceneTaxonomy();
  swift_allocObject();
  swift_retain();
  uint64_t v33 = sub_1DCEA4B20();
  if (v33)
  {
    uint64_t v34 = v33;
    v32[10] = v28;
    v32[4] = v41;
    sub_1DCD3A3BC((uint64_t)v43, (uint64_t)(v32 + 5));
    v32[3] = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03B68);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 24) = 0;
    *(unsigned char *)(v35 + 32) = -1;
    *(void *)(v35 + 56) = 0;
    *(void *)(v35 + 64) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
    uint64_t v36 = swift_allocObject();
    *(_DWORD *)(v36 + 16) = 0;
    *(void *)(v35 + 80) = v36;
    *(void *)(v35 + 40) = sub_1DCE77A44;
    *(void *)(v35 + 48) = v34;
    swift_retain_n();
    swift_retain();
    sub_1DCD33E90(0);
    *(void *)(v35 + 72) = 0;
    swift_release();
    uint64_t v37 = sub_1DCF31D08();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    _OWORD v32[2] = v37;
    sub_1DCD6C204(v31, (uint64_t)v32 + OBJC_IVAR____TtC18VisualIntelligence14TextLookupFlow_config);
  }
  else
  {
    sub_1DCE76DFC();
    swift_allocError();
    *uint64_t v38 = 4;
    swift_willThrow();
    swift_release();

    sub_1DCE76F70(v31, (uint64_t (*)(void))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    swift_deallocPartialClassInstance();
  }
  sub_1DCE76F70(v26, (uint64_t (*)(void))type metadata accessor for Argos_Protos_Queryflow_TextLookupConfig);
  swift_release();
  swift_release();
  return v32;
}

uint64_t sub_1DCE779AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCE779F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCE77A44@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCE753E8(v1, a1);
}

void *sub_1DCE77A64(_DWORD *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_DWORD *)a2;
    uint64_t v7 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
    uint64_t v8 = (char *)v4 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DD047BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 24);
    *((unsigned char *)v4 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
  }
  return v4;
}

uint64_t sub_1DCE77B6C(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
  uint64_t v2 = sub_1DD047BF8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(v1, v2);
}

_DWORD *sub_1DCE77BE0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  return a1;
}

_DWORD *sub_1DCE77C98(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  return a1;
}

_DWORD *sub_1DCE77D54(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  return a1;
}

_DWORD *sub_1DCE77E0C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  return a1;
}

uint64_t sub_1DCE77EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCE77ED8);
}

uint64_t sub_1DCE77ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0x1A) {
      return v10 - 25;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1DCE77F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCE77FA8);
}

uint64_t sub_1DCE77FA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 25;
  }
  return result;
}

uint64_t type metadata accessor for StorefrontDomainAssignmentRule()
{
  uint64_t result = qword_1EBE85B08;
  if (!qword_1EBE85B08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCE780B0()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_StorefrontDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1DCE78150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v45 = a4;
  uint64_t v8 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v8 - 8);
  unsigned int v10 = (_OWORD *)((char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = sub_1DD048068();
  uint64_t v44 = *(void (***)(char *, uint64_t))(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v44 - v14;
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v44 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84B70);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD32C3C(a1, (uint64_t)v49);
  float v22 = *v4;
  uint64_t v23 = type metadata accessor for DomainAssignmentSignals(0);
  sub_1DCD68B64(a3 + *(int *)(v23 + 24), (uint64_t)v21);
  uint64_t v24 = type metadata accessor for DomainAssignmentSignals.ImageMetadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v21, 1, v24) == 1)
  {
    sub_1DCD68BCC((uint64_t)v21);
LABEL_7:
    sub_1DCDB40EC((uint64_t)v12);
    sub_1DCD36E7C(a2, (uint64_t)v10);
    id v28 = sub_1DD048048();
    os_log_type_t v29 = sub_1DD048848();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      uint64_t v47 = v31;
      long long v32 = v10[1];
      v48[0] = *v10;
      v48[1] = v32;
      uint64_t v33 = NormalizedRect.loggingDescription.getter();
      *(void *)&v48[0] = sub_1DCED7FA0(v33, v34, &v47);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCE78694((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1DCCF9000, v28, v29, "Reject any domain to region %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v31, -1, -1);
      MEMORY[0x1E01B07E0](v30, -1, -1);
    }
    else
    {
      sub_1DCE78694((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    }

    v44[1](v12, v46);
    sub_1DCD5DA7C((uint64_t)v48);
    return (uint64_t *)sub_1DCD32C3C((uint64_t)v48, v45);
  }
  uint64_t v25 = *(void **)&v21[*(int *)(v24 + 24)];
  id v26 = v25;
  sub_1DCE78694((uint64_t)v21, type metadata accessor for DomainAssignmentSignals.ImageMetadata);
  if (!v25) {
    goto LABEL_7;
  }
  objc_msgSend(v26, sel_horizontalAccuracy);
  if (v22 >= 0.0 && v27 >= v22)
  {

    goto LABEL_7;
  }
  sub_1DCDB40EC((uint64_t)v18);
  sub_1DCDB4300((uint64_t)v15);
  uint64_t v36 = (void (**)(char *, uint64_t))v44[1];
  ((void (*)(char *, uint64_t))v36)(v18, v46);
  uint64_t v37 = v26;
  uint64_t v38 = sub_1DD048048();
  os_log_type_t v39 = sub_1DD048848();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (_DWORD *)swift_slowAlloc();
    uint64_t v44 = v36;
    uint64_t v41 = v40;
    _DWORD *v40 = 134218240;
    [v37 horizontalAccuracy];
    *(void *)&v48[0] = v42;
    sub_1DD048A28();

    *((_WORD *)v41 + 6) = 2048;
    *(double *)uint64_t v48 = v22;
    sub_1DD048A28();
    _os_log_impl(&dword_1DCCF9000, v38, v39, "Location horizontalAccuracy %f within the errorThreshold %f", (uint8_t *)v41, 0x16u);
    uint64_t v43 = v41;
    uint64_t v36 = v44;
    MEMORY[0x1E01B07E0](v43, -1, -1);
  }
  else
  {

    uint64_t v38 = v37;
  }

  ((void (*)(char *, uint64_t))v36)(v15, v46);
  sub_1DCD32C3C((uint64_t)v49, v45);
  return sub_1DCDB79D8(v49);
}

uint64_t sub_1DCE78694(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCE786F4(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v19 = a2;
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    uint64_t v9 = 0;
    uint64_t v15 = a4 & 0xFFFFFFFFFFFFFFLL;
    do
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        int v10 = sub_1DD048B88();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v16[0] = a3;
          v16[1] = v15;
        }
        else if ((a3 & 0x1000000000000000) == 0)
        {
          sub_1DD048C18();
        }
        int v10 = sub_1DD048C28();
      }
      uint64_t v12 = v11;
      LODWORD(v16[0]) = v10;
      char v13 = a1(v16);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v13) {
        sub_1DD0484D8();
      }
      v9 += v12;
    }
    while (v9 < v6);
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1DCE78850(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DCD74394(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1DCE788F4(v5);
  *a1 = v2;
  return result;
}

void sub_1DCE788BC()
{
  qword_1EAB03B70 = (uint64_t)&unk_1F3835DC0;
}

uint64_t type metadata accessor for OCRTextRerankingUtil()
{
  return self;
}

uint64_t sub_1DCE788F4(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DD048F68();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v83 = *(double *)(v81 + 8 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 8 * v84;
          if (*(double *)v85 >= v83) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(void *)(v85 + 8) = *(void *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v97 = result;
  uint64_t v98 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          uint64_t v88 = v11;
          uint64_t v89 = v11 + 32;
          uint64_t v90 = *(void *)&v11[16 * v87 + 32];
          uint64_t v91 = *(void *)&v11[16 * v12 + 24];
          sub_1DCE78F88((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(void *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v88 = sub_1DCD729EC((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          long long v92 = &v88[16 * v87 + 32];
          *(void *)long long v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          uint64_t v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1DD0486F8();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v98;
    uint64_t v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v94 = v2;
  uint64_t v95 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v99 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      double v14 = *(double *)(v10 + 8 * v9);
      double v15 = *(double *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        double v16 = v14;
        while (1)
        {
          double v17 = v16;
          double v16 = *(double *)(v10 + 8 * v9);
          if (v15 < v14 == v17 >= v16) {
            break;
          }
          if (v3 == ++v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          unint64_t v18 = (uint64_t *)(v95 + 8 * v9);
          uint64_t v19 = v9;
          uint64_t v20 = v13;
          uint64_t v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              uint64_t v22 = *v21;
              uint64_t *v21 = *v18;
              *unint64_t v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    uint64_t v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      uint64_t v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      uint64_t v24 = (double *)(v95 + 8 * v9);
      do
      {
        double v25 = *(double *)(v10 + 8 * v9);
        uint64_t v26 = v13;
        double v27 = v24;
        do
        {
          double v28 = *v27;
          if (*v27 >= v25) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          double *v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      uint64_t v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1DCD71FDC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      uint64_t v79 = sub_1DCD71FDC((char *)(v29 > 1), v30 + 1, 1, v11);
      uint64_t v10 = v99;
      uint64_t v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v31 = v11 + 32;
    long long v32 = &v11[16 * v30 + 32];
    *(void *)long long v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v38 = &v31[16 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          uint64_t v46 = &v31[16 * v12 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            uint64_t v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        uint64_t v51 = &v31[16 * v12 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        id v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        uint64_t v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        id v75 = v31;
        uint64_t v76 = &v31[16 * v33];
        uint64_t v77 = *((void *)v76 + 1);
        sub_1DCE78F88((double *)(v10 + 8 * *(void *)v73), (double *)(v10 + 8 * *(void *)v76), v10 + 8 * v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v73 = v74;
        *(void *)&v75[16 * v72 + 8] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        uint64_t v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v98;
    if (v9 >= v98)
    {
      uint64_t v8 = v96;
      uint64_t v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCE78F88(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      double v16 = &v4[v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        double v17 = (double *)(a3 - 8);
        while (1)
        {
          unint64_t v18 = v17 + 1;
          uint64_t v19 = v6 - 1;
          double v20 = *(v6 - 1);
          if (v20 >= *(v16 - 1))
          {
            uint64_t v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *double v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *double v17 = v20;
            }
            uint64_t v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    double v14 = &v4[v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v4 >= *v6)
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          uint64_t v23 = ++v4;
          double v15 = v6;
        }
        else
        {
          double v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1DCD725EC((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

double sub_1DCE791F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0.0;
  }
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = swift_bridgeObjectRetain() + 40;
  do
  {
    uint64_t v5 = sub_1DD048488();
    if (*(void *)(v3 + 16) && (unint64_t v7 = sub_1DCEAD1A4(v5, v6), (v8 & 1) != 0))
    {
      uint64_t v9 = *(void *)(*(void *)(v3 + 56) + 8 * v7);
      swift_bridgeObjectRelease();
      if ((v9 & 0x8000000000000000) == 0)
      {
        double v10 = 1.0;
        goto LABEL_10;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v4 += 16;
    --v2;
  }
  while (v2);
  double v10 = 0.0;
LABEL_10:
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1DCE792B0(uint64_t a1, unint64_t a2, CGFloat *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v115 = a6;
  uint64_t v133 = a5;
  uint64_t v134 = a4;
  uint64_t v139 = sub_1DD046258();
  uint64_t v9 = *(void *)(v139 - 8);
  MEMORY[0x1F4188790](v139);
  long long v140 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v97 - v12;
  CGFloat v138 = *a3;
  CGFloat v119 = a3[1];
  double v14 = a3[2];
  CGFloat v116 = a3[3];
  CGFloat v117 = v14;
  sub_1DD046228();
  v141[2] = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  sub_1DCE786F4((uint64_t (*)(void *))sub_1DCE7CC80, (uint64_t)v141, a1, a2);
  uint64_t v16 = sub_1DD048488();
  unint64_t v18 = v17;
  uint64_t v19 = sub_1DD048508();
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = sub_1DCEB2CE4(v19, 0);
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1DCEB2C28(&v142, v21 + 4, v20, v16, v18);
    swift_bridgeObjectRelease();
    if (v22 != (void *)v20) {
      goto LABEL_56;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v136 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v137 = v9 + 8;
  v136(v13, v139);
  uint64_t v23 = v21[2];
  if (!v23) {
    goto LABEL_52;
  }
  uint64_t v24 = 0;
  uint64_t v131 = swift_bridgeObjectRetain();
  uint64_t v25 = v131 + 40;
  uint64_t v26 = v23;
  while (1)
  {
    swift_bridgeObjectRetain();
    char v27 = sub_1DD048378();
    swift_bridgeObjectRelease();
    if (v27)
    {
      BOOL v28 = __OFADD__(v24++, 1);
      if (v28) {
        break;
      }
    }
    v25 += 16;
    if (!--v26) {
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_12:
  swift_release();
  CGFloat v29 = v138;
  v143.origin.CGFloat x = v138;
  CGFloat v30 = v119;
  v143.origin.CGFloat y = v119;
  CGFloat v32 = v116;
  CGFloat v31 = v117;
  v143.size.width = v117;
  v143.size.height = v116;
  double Width = CGRectGetWidth(v143);
  v144.origin.CGFloat x = v29;
  v144.origin.CGFloat y = v30;
  v144.size.width = v31;
  v144.size.height = v32;
  double Height = CGRectGetHeight(v144);
  uint64_t v135 = *(void *)(v134 + 16);
  if (v135 >= v133) {
    uint64_t v35 = v133;
  }
  else {
    uint64_t v35 = v135;
  }
  if (v35 < 0) {
    goto LABEL_57;
  }
  if (!v35)
  {
LABEL_52:
    swift_release();
    return;
  }
  uint64_t v36 = 0;
  v134 += 32;
  unint64_t v113 = 0x80000001DD06CAB0;
  unint64_t v114 = 0x80000001DD06CA90;
  double v37 = (double)v24 / (double)v23;
  unint64_t v111 = 0x80000001DD06CAD0;
  unint64_t v112 = 0x80000001DD066B00;
  unint64_t v110 = 0x80000001DD06CAF0;
  double v108 = v119 + Height * 0.5;
  double v109 = v138 + Width * 0.5;
  double v38 = 0.5;
  long long v107 = xmmword_1DD05A3A0;
  unint64_t v105 = 0x80000001DD066B40;
  unint64_t v106 = 0x80000001DD066B20;
  unint64_t v103 = 0x80000001DD066B80;
  unint64_t v104 = 0x80000001DD066B60;
  unint64_t v101 = 0x80000001DD066BC0;
  unint64_t v102 = 0x80000001DD066BA0;
  unint64_t v99 = 0x80000001DD066C00;
  unint64_t v100 = 0x80000001DD066BE0;
  unint64_t v97 = 0x80000001DD066C40;
  unint64_t v98 = 0x80000001DD066C20;
  uint64_t v132 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v133 = v35;
  double v118 = v37;
  while (v36 != v35)
  {
    if (v36 == v135) {
      goto LABEL_54;
    }
    uint64_t v39 = v134 + 56 * v36;
    uint64_t v40 = *(void *)v39;
    unint64_t v41 = *(void *)(v39 + 8);
    double v42 = *(double *)(v39 + 24);
    double v43 = *(double *)(v39 + 32);
    CGFloat v44 = *(double *)(v39 + 40);
    CGFloat v45 = *(double *)(v39 + 48);
    swift_bridgeObjectRetain_n();
    uint64_t v46 = v140;
    uint64_t v47 = sub_1DD046228();
    MEMORY[0x1F4188790](v47);
    *(&v97 - 2) = (unint64_t)v46;
    swift_bridgeObjectRetain();
    sub_1DCE786F4((uint64_t (*)(void *))sub_1DCE7CCA0, (uint64_t)(&v97 - 4), v40, v41);
    uint64_t v48 = sub_1DD048488();
    unint64_t v50 = v49;
    uint64_t v51 = sub_1DD048508();
    if (v51)
    {
      uint64_t v52 = v51;
      uint64_t v53 = sub_1DCEB2CE4(v51, 0);
      swift_bridgeObjectRetain();
      BOOL v54 = sub_1DCEB2C28(&v142, v53 + 4, v52, v48, v50);
      swift_bridgeObjectRelease();
      if (v54 != (void *)v52) {
        goto LABEL_55;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v53 = (void *)MEMORY[0x1E4FBC860];
    }
    v136(v140, v139);
    swift_bridgeObjectRelease();
    uint64_t v55 = v53[2];
    if (v55)
    {
      swift_retain();
      uint64_t v56 = 0;
      uint64_t v57 = v53 + 5;
      do
      {
        swift_bridgeObjectRetain();
        char v58 = sub_1DD048378();
        swift_bridgeObjectRelease();
        if (v58)
        {
          BOOL v28 = __OFADD__(v56++, 1);
          if (v28)
          {
            __break(1u);
            goto LABEL_53;
          }
        }
        v57 += 2;
        --v55;
      }
      while (v55);
      swift_release();
      double v59 = (double)v56 / (double)(uint64_t)v53[2];
      if (vabdd_f64(v37, v59) <= v38)
      {
        uint64_t v120 = v15;
        uint64_t v60 = sub_1DCD69448((uint64_t)v53, v131, v115);
        uint64_t v62 = v61;
        v145.origin.CGFloat x = v42;
        v145.origin.CGFloat y = v43;
        v145.size.width = v44;
        v145.size.height = v45;
        double v63 = v42 + CGRectGetWidth(v145) * v38;
        v146.origin.CGFloat x = v42;
        v146.origin.CGFloat y = v43;
        v146.size.width = v44;
        v146.size.height = v45;
        double v64 = v43 + CGRectGetHeight(v146) * v38;
        v147.origin.CGFloat x = v42;
        v147.origin.CGFloat y = v43;
        v147.size.width = v44;
        v147.size.height = v45;
        CGFloat v128 = CGRectGetWidth(v147);
        v148.origin.CGFloat x = v42;
        v148.origin.CGFloat y = v43;
        CGFloat v121 = v44;
        v148.size.width = v44;
        v148.size.height = v45;
        double v65 = CGRectGetHeight(v148);
        uint64_t v129 = v60;
        uint64_t v130 = v62;
        if (v138 <= v63)
        {
          double v68 = v65;
          v149.origin.CGFloat x = v138;
          v149.origin.CGFloat y = v119;
          v149.size.height = v116;
          v149.size.width = v117;
          BOOL v66 = v63 <= v138 + CGRectGetWidth(v149);
          if (v138 <= v64)
          {
            double v65 = v68;
            goto LABEL_40;
          }
          BOOL v67 = 0;
          double v65 = v68;
        }
        else
        {
          BOOL v66 = 0;
          BOOL v67 = 0;
          if (v138 > v64) {
            goto LABEL_41;
          }
LABEL_40:
          v150.origin.CGFloat x = v138;
          double v69 = v119;
          double v70 = v65;
          v150.origin.CGFloat y = v119;
          v150.size.height = v116;
          v150.size.width = v117;
          CGFloat v71 = CGRectGetHeight(v150);
          double v65 = v70;
          double v37 = v118;
          BOOL v67 = v64 <= v69 + v71;
        }
LABEL_41:
        CGFloat v122 = v128 * v65;
        double v123 = sqrt((v63 + -0.5) * (v63 + -0.5) + (v64 + -0.5) * (v64 + -0.5));
        double v124 = fabs(v63 + -0.5);
        double v125 = vabdd_f64(v63, v109);
        CGFloat v128 = vabdd_f64(v64, v108);
        double v126 = fabs(v64 + -0.5);
        double v127 = sqrt((v63 - v109) * (v63 - v109) + (v64 - v108) * (v64 - v108));
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03B78);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v107;
        unint64_t v73 = v114;
        *(void *)(inited + 32) = 0xD000000000000012;
        *(void *)(inited + 40) = v73;
        *(double *)(inited + 48) = (double)*(uint64_t *)(v131 + 16);
        unint64_t v74 = v113;
        *(void *)(inited + 56) = 0xD00000000000001CLL;
        *(void *)(inited + 64) = v74;
        *(double *)(inited + 72) = v37;
        strcpy((char *)(inited + 80), "pattern_length");
        *(unsigned char *)(inited + 95) = -18;
        uint64_t v75 = v53[2];
        swift_release();
        *(double *)(inited + 96) = (double)v75;
        unint64_t v76 = v112;
        *(void *)(inited + 104) = 0xD000000000000018;
        *(void *)(inited + 112) = v76;
        *(double *)(inited + 120) = v59;
        strcpy((char *)(inited + 128), "pattern_size_x");
        *(unsigned char *)(inited + 143) = -18;
        v151.origin.CGFloat x = v42;
        v151.origin.CGFloat y = v43;
        CGFloat v77 = v121;
        v151.size.width = v121;
        v151.size.height = v45;
        *(CGFloat *)(inited + 144) = CGRectGetWidth(v151);
        strcpy((char *)(inited + 152), "pattern_size_y");
        *(unsigned char *)(inited + 167) = -18;
        v152.origin.CGFloat x = v42;
        v152.origin.CGFloat y = v43;
        v152.size.width = v77;
        v152.size.height = v45;
        CGFloat v78 = CGRectGetHeight(v152);
        swift_bridgeObjectRelease();
        *(CGFloat *)(inited + 168) = v78;
        strcpy((char *)(inited + 176), "pattern_area");
        *(unsigned char *)(inited + 189) = 0;
        *(_WORD *)(inited + 190) = -5120;
        *(CGFloat *)(inited + 192) = v122;
        unint64_t v79 = v111;
        *(void *)(inited + 200) = 0xD000000000000010;
        *(void *)(inited + 208) = v79;
        *(double *)(inited + 216) = v63;
        unint64_t v80 = v110;
        *(void *)(inited + 224) = 0xD000000000000010;
        *(void *)(inited + 232) = v80;
        *(double *)(inited + 240) = v64;
        unint64_t v81 = v106;
        *(void *)(inited + 248) = 0xD000000000000019;
        *(void *)(inited + 256) = v81;
        *(double *)(inited + 264) = v124;
        unint64_t v82 = v105;
        *(void *)(inited + 272) = 0xD000000000000019;
        *(void *)(inited + 280) = v82;
        *(double *)(inited + 288) = v126;
        unint64_t v83 = v104;
        *(void *)(inited + 296) = 0xD000000000000017;
        *(void *)(inited + 304) = v83;
        *(double *)(inited + 312) = v123;
        unint64_t v84 = v103;
        *(void *)(inited + 320) = 0xD000000000000017;
        *(void *)(inited + 328) = v84;
        *(double *)(inited + 336) = v125;
        unint64_t v85 = v102;
        *(void *)(inited + 344) = 0xD000000000000017;
        *(void *)(inited + 352) = v85;
        *(CGFloat *)(inited + 360) = v128;
        unint64_t v86 = v101;
        *(void *)(inited + 368) = 0xD000000000000015;
        *(void *)(inited + 376) = v86;
        *(double *)(inited + 384) = v127;
        unint64_t v87 = v100;
        *(void *)(inited + 392) = 0xD00000000000001CLL;
        *(void *)(inited + 400) = v87;
        if (v66) {
          double v88 = 1.0;
        }
        else {
          double v88 = 0.0;
        }
        *(double *)(inited + 408) = v88;
        unint64_t v89 = v99;
        *(void *)(inited + 416) = 0xD00000000000001CLL;
        *(void *)(inited + 424) = v89;
        if (v67) {
          double v90 = 1.0;
        }
        else {
          double v90 = 0.0;
        }
        *(double *)(inited + 432) = v90;
        unint64_t v91 = v98;
        *(void *)(inited + 440) = 0xD00000000000001BLL;
        *(void *)(inited + 448) = v91;
        *(double *)(inited + 456) = (double)v129;
        *(void *)(inited + 464) = 0xD000000000000019;
        *(void *)(inited + 472) = v97;
        *(double *)(inited + 480) = (double)v130;
        unint64_t v92 = sub_1DCDB8FEC(inited);
        unint64_t v93 = v132;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v132 = sub_1DCE9F14C(0, v93[2] + 1, 1, v93);
        }
        uint64_t v35 = v133;
        uint64_t v15 = v120;
        double v38 = 0.5;
        unint64_t v95 = v132[2];
        unint64_t v94 = v132[3];
        double v37 = v118;
        if (v95 >= v94 >> 1) {
          uint64_t v132 = sub_1DCE9F14C((void *)(v94 > 1), v95 + 1, 1, v132);
        }
        uint64_t v96 = v132;
        v132[2] = v95 + 1;
        v96[v95 + 4] = v92;
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v35 = v133;
LABEL_19:
    if (++v36 == v35) {
      goto LABEL_52;
    }
  }
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

uint64_t sub_1DCE79D1C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1DD048068();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11 || (unint64_t v12 = a2[2]) == 0)
  {
    sub_1DCDB40EC((uint64_t)&v41 - v9);
    unint64_t v33 = sub_1DD048048();
    os_log_type_t v34 = sub_1DD048858();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_1DCCF9000, v33, v34, "Input to batchPredictWithLinearModelHelper is empty.", v35, 2u);
      MEMORY[0x1E01B07E0](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return 0;
  }
  uint64_t v44 = v5;
  uint64_t v45 = v4;
  uint64_t v13 = sub_1DCDE1CDC(v12, 0);
  double v14 = (void *)sub_1DCDE1FBC(v13, v11);
  unint64_t v15 = 0;
  uint64_t v16 = a1 + 32;
  uint64_t v18 = a2[4];
  uint64_t v17 = a2[5];
  uint64_t v47 = a2 + 7;
  uint64_t v48 = v17;
  unint64_t v19 = v12 - 1;
  uint64_t v46 = v7;
  uint64_t v42 = v18;
  while (2)
  {
    uint64_t v20 = *(void *)(v16 + 8 * v15);
    if (!*(void *)(v20 + 16))
    {
LABEL_30:
      swift_bridgeObjectRelease();
      uint64_t v37 = v44;
      uint64_t v36 = v45;
LABEL_23:
      sub_1DCDB40EC((uint64_t)v7);
      double v38 = sub_1DD048048();
      os_log_type_t v39 = sub_1DD048858();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v40 = 0;
        _os_log_impl(&dword_1DCCF9000, v38, v39, "A feature name is not in the features.", v40, 2u);
        MEMORY[0x1E01B07E0](v40, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v36);
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v21 = v48;
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1DCEAD1A4(v18, v21);
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    unint64_t v24 = 0;
    unint64_t v43 = v15 + 1;
    uint64_t v25 = v47;
    while (1)
    {
      double v26 = *(double *)(*(void *)(v20 + 56) + 8 * v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DCEC1C8C(v14);
        double v14 = (void *)result;
      }
      if (v15 >= v14[2])
      {
        __break(1u);
LABEL_32:
        __break(1u);
        return result;
      }
      uint64_t v28 = v14[v15 + 4];
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      v14[v15 + 4] = v28;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DCEC1C50(v28);
        uint64_t v28 = result;
        v14[v15 + 4] = result;
      }
      if (v24 >= *(void *)(v28 + 16)) {
        goto LABEL_32;
      }
      float v29 = v26;
      *(float *)(v28 + 4 * v24 + 32) = v29;
      if (v19 == v24) {
        break;
      }
      uint64_t v20 = *(void *)(v16 + 8 * v15);
      if (!*(void *)(v20 + 16)) {
        goto LABEL_22;
      }
      uint64_t v31 = *(v25 - 1);
      uint64_t v30 = *v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1DCEAD1A4(v31, v30);
      ++v24;
      v25 += 2;
      if ((v32 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_22:
        swift_bridgeObjectRelease();
        uint64_t v37 = v44;
        uint64_t v36 = v45;
        unint64_t v7 = v46;
        goto LABEL_23;
      }
    }
    uint64_t v18 = v42;
    unint64_t v15 = v43;
    unint64_t v7 = v46;
    if (v43 != v11) {
      continue;
    }
    return (uint64_t)v14;
  }
}

unint64_t sub_1DCE7A0F8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v61 = a6;
  uint64_t v64 = a1;
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = sub_1DCDB8FEC(MEMORY[0x1E4FBC860]);
  if (a5 < 0) {
    goto LABEL_50;
  }
  unint64_t v15 = (void *)v14;
  uint64_t v62 = (void *)a4;
  double v63 = a3;
  v60[0] = v13;
  v60[1] = v11;
  uint64_t v60[2] = v10;
  if (a5)
  {
    uint64_t v16 = 0;
    do
    {
      BOOL v67 = (void *)v64;
      uint64_t v68 = a2;
      swift_bridgeObjectRetain();
      sub_1DD048548();
      uint64_t v66 = v16;
      sub_1DD048F78();
      sub_1DD048548();
      swift_bridgeObjectRelease();
      uint64_t v17 = (uint64_t)v67;
      uint64_t v18 = v68;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      BOOL v67 = v15;
      unint64_t v21 = sub_1DCEAD1A4(v17, v18);
      uint64_t v22 = v15[2];
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      char v25 = v20;
      if (v15[3] >= v24)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          unint64_t v15 = v67;
          if (v20) {
            goto LABEL_4;
          }
        }
        else
        {
          sub_1DCE8982C();
          unint64_t v15 = v67;
          if (v25) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        sub_1DCE7FDB4(v24, isUniquelyReferenced_nonNull_native);
        unint64_t v26 = sub_1DCEAD1A4(v17, v18);
        if ((v25 & 1) != (v27 & 1)) {
          goto LABEL_53;
        }
        unint64_t v21 = v26;
        unint64_t v15 = v67;
        if (v25)
        {
LABEL_4:
          *(void *)(v15[7] + 8 * v21) = 0;
          goto LABEL_5;
        }
      }
      v15[(v21 >> 6) + 8] |= 1 << v21;
      uint64_t v28 = (uint64_t *)(v15[6] + 16 * v21);
      *uint64_t v28 = v17;
      v28[1] = v18;
      *(void *)(v15[7] + 8 * v21) = 0;
      uint64_t v29 = v15[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_47;
      }
      v15[2] = v31;
      swift_bridgeObjectRetain();
LABEL_5:
      ++v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (a5 != v16);
  }
  uint64_t v32 = sub_1DCE79D1C((uint64_t)v62, v63);
  if (!v32)
  {
    swift_bridgeObjectRelease();
    return sub_1DCDB8FEC(MEMORY[0x1E4FBC860]);
  }
  uint64_t v33 = v32;
  uint64_t v66 = MEMORY[0x1E4FBC860];
  uint64_t v34 = *(void *)(v32 + 16);
  if (v34)
  {
    uint64_t v35 = 0;
    uint64_t v36 = *(void *)(v61 + 24);
    do
    {
      uint64_t v37 = *(void *)(v33 + 8 * v35 + 32);
      swift_bridgeObjectRetain();
      sub_1DCE7AF9C(v36, v37, (void (*)(void))type metadata accessor for OCRTitleModelInput, (void (*)(void))type metadata accessor for OCRTitleModelOutput);
      uint64_t v39 = v38;
      ++v35;
      swift_bridgeObjectRelease();
      sub_1DCFDF20C(v39);
    }
    while (v34 != v35);
    swift_bridgeObjectRelease();
    uint64_t v40 = v66;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = MEMORY[0x1E4FBC860];
  }
  BOOL v67 = (void *)v40;
  swift_bridgeObjectRetain_n();
  sub_1DCE78850((uint64_t *)&v67);
  swift_bridgeObjectRelease_n();
  uint64_t v66 = (uint64_t)v67;
  uint64_t v41 = v67[2];
  if (v41 >= a5) {
    uint64_t v42 = a5;
  }
  else {
    uint64_t v42 = v67[2];
  }
  uint64_t v62 = v67;
  if (!v42)
  {
LABEL_44:
    swift_release();
    return (unint64_t)v15;
  }
  if (!v41) {
    goto LABEL_51;
  }
  if (v42 - 1 < v41)
  {
    uint64_t v43 = 0;
    double v63 = v67 + 4;
    while (1)
    {
      BOOL v67 = (void *)v64;
      uint64_t v68 = a2;
      swift_bridgeObjectRetain();
      sub_1DD048548();
      uint64_t v65 = v43;
      sub_1DD048F78();
      sub_1DD048548();
      swift_bridgeObjectRelease();
      uint64_t v45 = (uint64_t)v67;
      uint64_t v44 = v68;
      uint64_t v46 = v63[v43];
      char v47 = swift_isUniquelyReferenced_nonNull_native();
      BOOL v67 = v15;
      unint64_t v49 = sub_1DCEAD1A4(v45, v44);
      uint64_t v50 = v15[2];
      BOOL v51 = (v48 & 1) == 0;
      uint64_t v52 = v50 + v51;
      if (__OFADD__(v50, v51)) {
        goto LABEL_48;
      }
      char v53 = v48;
      if (v15[3] >= v52)
      {
        if (v47)
        {
          unint64_t v15 = v67;
          if (v48) {
            goto LABEL_31;
          }
        }
        else
        {
          sub_1DCE8982C();
          unint64_t v15 = v67;
          if (v53) {
            goto LABEL_31;
          }
        }
      }
      else
      {
        sub_1DCE7FDB4(v52, v47);
        unint64_t v54 = sub_1DCEAD1A4(v45, v44);
        if ((v53 & 1) != (v55 & 1)) {
          goto LABEL_53;
        }
        unint64_t v49 = v54;
        unint64_t v15 = v67;
        if (v53)
        {
LABEL_31:
          *(void *)(v15[7] + 8 * v49) = v46;
          goto LABEL_32;
        }
      }
      v15[(v49 >> 6) + 8] |= 1 << v49;
      uint64_t v56 = (uint64_t *)(v15[6] + 16 * v49);
      uint64_t *v56 = v45;
      v56[1] = v44;
      *(void *)(v15[7] + 8 * v49) = v46;
      uint64_t v57 = v15[2];
      BOOL v30 = __OFADD__(v57, 1);
      uint64_t v58 = v57 + 1;
      if (v30) {
        goto LABEL_49;
      }
      v15[2] = v58;
      swift_bridgeObjectRetain();
LABEL_32:
      ++v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v42 == v43) {
        goto LABEL_44;
      }
    }
  }
LABEL_52:
  __break(1u);
LABEL_53:
  swift_release();
  sub_1DD049028();
  __break(1u);
  swift_release();
  unint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1DCE7A768(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034F0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v60 = (uint64_t)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v59 = (uint64_t)&v54 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v56 = (uint64_t)&v54 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v54 = (uint64_t)&v54 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v55 = (uint64_t)&v54 - v11;
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = type metadata accessor for Com_Apple_Visualintelligence_StructuredAddress(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (uint64_t *)((char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v19);
  unint64_t v21 = (uint64_t *)((char *)&v54 - v20);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (uint64_t *)((char *)&v54 - v23);
  MEMORY[0x1F4188790](v25);
  char v27 = (uint64_t *)((char *)&v54 - v26);
  MEMORY[0x1F4188790](v28);
  BOOL v30 = (uint64_t *)((char *)&v54 - v29);
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (uint64_t *)((char *)&v54 - v32);
  uint64_t v62 = *(void *)(a1 + *(int *)(type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0) + 20));
  uint64_t v34 = v62
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefAddress;
  swift_beginAccess();
  sub_1DCE7CAF8(v34, (uint64_t)v14);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v61 = v16 + 48;
  int v36 = v35(v14, 1, v15);
  uint64_t v37 = MEMORY[0x1E4FBC860];
  if (v36 == 1)
  {
    *uint64_t v33 = 0;
    v33[1] = 0xE000000000000000;
    _OWORD v33[2] = 0;
    v33[3] = 0xE000000000000000;
    v33[4] = 0;
    v33[5] = 0xE000000000000000;
    v33[6] = 0;
    v33[7] = 0xE000000000000000;
    v33[8] = 0;
    v33[9] = 0xE000000000000000;
    v33[10] = 0;
    v33[11] = 0xE000000000000000;
    v33[12] = v37;
    v33[13] = 0;
    v33[14] = 0xE000000000000000;
    v33[15] = 0;
    v33[16] = 0xE000000000000000;
    v33[17] = 0;
    v33[18] = 0xE000000000000000;
    sub_1DD047BE8();
    sub_1DCE7CB60((uint64_t)v14);
  }
  else
  {
    sub_1DCE7CC1C((uint64_t)v14, (uint64_t)v33);
  }
  unint64_t v38 = v33[16];
  uint64_t v57 = v33[15];
  unint64_t v58 = v38;
  swift_bridgeObjectRetain();
  sub_1DCE7CBC0((uint64_t)v33);
  uint64_t v39 = v62
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefAddress;
  swift_beginAccess();
  uint64_t v40 = v55;
  sub_1DCE7CAF8(v39, v55);
  if (v35((char *)v40, 1, v15) == 1)
  {
    void *v30 = 0;
    v30[1] = 0xE000000000000000;
    void v30[2] = 0;
    v30[3] = 0xE000000000000000;
    v30[4] = 0;
    v30[5] = 0xE000000000000000;
    v30[6] = 0;
    v30[7] = 0xE000000000000000;
    v30[8] = 0;
    v30[9] = 0xE000000000000000;
    v30[10] = 0;
    v30[11] = 0xE000000000000000;
    v30[12] = MEMORY[0x1E4FBC860];
    v30[13] = 0;
    v30[14] = 0xE000000000000000;
    v30[15] = 0;
    v30[16] = 0xE000000000000000;
    v30[17] = 0;
    v30[18] = 0xE000000000000000;
    sub_1DD047BE8();
    sub_1DCE7CB60(v40);
  }
  else
  {
    sub_1DCE7CC1C(v40, (uint64_t)v30);
  }
  uint64_t v55 = v30[13];
  swift_bridgeObjectRetain();
  sub_1DCE7CBC0((uint64_t)v30);
  uint64_t v41 = v62
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefAddress;
  swift_beginAccess();
  uint64_t v42 = v41;
  uint64_t v43 = v54;
  sub_1DCE7CAF8(v42, v54);
  if (v35((char *)v43, 1, v15) == 1)
  {
    void *v27 = 0;
    v27[1] = 0xE000000000000000;
    v27[2] = 0;
    v27[3] = 0xE000000000000000;
    v27[4] = 0;
    v27[5] = 0xE000000000000000;
    v27[6] = 0;
    v27[7] = 0xE000000000000000;
    v27[8] = 0;
    v27[9] = 0xE000000000000000;
    _OWORD v27[10] = 0;
    v27[11] = 0xE000000000000000;
    v27[12] = MEMORY[0x1E4FBC860];
    v27[13] = 0;
    v27[14] = 0xE000000000000000;
    v27[15] = 0;
    v27[16] = 0xE000000000000000;
    v27[17] = 0;
    v27[18] = 0xE000000000000000;
    sub_1DD047BE8();
    sub_1DCE7CB60(v43);
  }
  else
  {
    sub_1DCE7CC1C(v43, (uint64_t)v27);
  }
  uint64_t v54 = v27[10];
  swift_bridgeObjectRetain();
  sub_1DCE7CBC0((uint64_t)v27);
  uint64_t v44 = v62
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefAddress;
  swift_beginAccess();
  uint64_t v45 = v44;
  uint64_t v46 = v56;
  sub_1DCE7CAF8(v45, v56);
  if (v35((char *)v46, 1, v15) == 1)
  {
    void *v24 = 0;
    v24[1] = 0xE000000000000000;
    v24[2] = 0;
    v24[3] = 0xE000000000000000;
    v24[4] = 0;
    v24[5] = 0xE000000000000000;
    v24[6] = 0;
    v24[7] = 0xE000000000000000;
    v24[8] = 0;
    v24[9] = 0xE000000000000000;
    v24[10] = 0;
    v24[11] = 0xE000000000000000;
    v24[12] = MEMORY[0x1E4FBC860];
    v24[13] = 0;
    v24[14] = 0xE000000000000000;
    v24[15] = 0;
    v24[16] = 0xE000000000000000;
    v24[17] = 0;
    v24[18] = 0xE000000000000000;
    sub_1DD047BE8();
    sub_1DCE7CB60(v46);
  }
  else
  {
    sub_1DCE7CC1C(v46, (uint64_t)v24);
  }
  uint64_t v56 = v24[17];
  swift_bridgeObjectRetain();
  sub_1DCE7CBC0((uint64_t)v24);
  uint64_t v47 = v62
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefAddress;
  swift_beginAccess();
  uint64_t v48 = v47;
  uint64_t v49 = v59;
  sub_1DCE7CAF8(v48, v59);
  if (v35((char *)v49, 1, v15) == 1)
  {
    void *v21 = 0;
    v21[1] = 0xE000000000000000;
    v21[2] = 0;
    v21[3] = 0xE000000000000000;
    v21[4] = 0;
    v21[5] = 0xE000000000000000;
    v21[6] = 0;
    v21[7] = 0xE000000000000000;
    v21[8] = 0;
    v21[9] = 0xE000000000000000;
    v21[10] = 0;
    v21[11] = 0xE000000000000000;
    v21[12] = MEMORY[0x1E4FBC860];
    v21[13] = 0;
    v21[14] = 0xE000000000000000;
    v21[15] = 0;
    v21[16] = 0xE000000000000000;
    v21[17] = 0;
    v21[18] = 0xE000000000000000;
    sub_1DD047BE8();
    sub_1DCE7CB60(v49);
  }
  else
  {
    sub_1DCE7CC1C(v49, (uint64_t)v21);
  }
  swift_bridgeObjectRetain();
  sub_1DCE7CBC0((uint64_t)v21);
  uint64_t v50 = v62
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefAddress;
  swift_beginAccess();
  uint64_t v51 = v50;
  uint64_t v52 = v60;
  sub_1DCE7CAF8(v51, v60);
  if (v35((char *)v52, 1, v15) == 1)
  {
    *uint64_t v18 = 0;
    v18[1] = 0xE000000000000000;
    void v18[2] = 0;
    v18[3] = 0xE000000000000000;
    v18[6] = 0;
    v18[7] = 0xE000000000000000;
    v18[8] = 0;
    v18[9] = 0xE000000000000000;
    v18[10] = 0;
    v18[11] = 0xE000000000000000;
    v18[12] = MEMORY[0x1E4FBC860];
    v18[13] = 0;
    v18[14] = 0xE000000000000000;
    v18[15] = 0;
    v18[16] = 0xE000000000000000;
    v18[17] = 0;
    v18[18] = 0xE000000000000000;
    void v18[4] = 0;
    v18[5] = 0xE000000000000000;
    sub_1DD047BE8();
    sub_1DCE7CB60(v52);
  }
  else
  {
    sub_1DCE7CC1C(v52, (uint64_t)v18);
  }
  swift_bridgeObjectRetain();
  sub_1DCE7CBC0((uint64_t)v18);
  uint64_t v63 = 0;
  unint64_t v64 = 0xE000000000000000;
  sub_1DD048B98();
  swift_bridgeObjectRelease();
  uint64_t v63 = v57;
  unint64_t v64 = v58;
  sub_1DD048548();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  return v63;
}

void sub_1DCE7AF9C(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void))
{
  v34[1] = *(id *)MEMORY[0x1E4F143B8];
  id v8 = sub_1DCEEE0B0(a2, 0);
  if (!v4)
  {
    uint64_t v9 = v8;
    a3(0);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    id v11 = objc_allocWithZone(MEMORY[0x1E4F1E9E0]);
    id v12 = v9;
    id v13 = objc_msgSend(v11, sel_init);
    unint64_t v14 = *(void **)(a1 + 16);
    v34[0] = 0;
    id v15 = objc_msgSend(v14, sel_predictionFromFeatures_options_error_, v10, v13, v34);
    id v16 = v34[0];
    if (v15)
    {
      uint64_t v17 = v15;
      a4(0);
      *(void *)(swift_initStackObject() + 16) = v17;
      id v18 = v16;

      swift_release();
      uint64_t v19 = (void *)sub_1DD0483D8();
      id v20 = objc_msgSend(v17, sel_featureValueForName_, v19);

      if (v20)
      {
        id v21 = objc_msgSend(v20, sel_multiArrayValue);

        if (v21)
        {
          swift_release();
          id v22 = objc_msgSend(v21, sel_numberArray);

          sub_1DCD56524();
          unint64_t v23 = sub_1DD0486B8();

          if (v23 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v24 = sub_1DD048CC8();
            if (v24) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v24)
            {
LABEL_7:
              if (v24 < 1) {
                __break(1u);
              }
              uint64_t v25 = 0;
              uint64_t v26 = (void *)MEMORY[0x1E4FBC860];
              do
              {
                if ((v23 & 0xC000000000000001) != 0) {
                  id v27 = (id)MEMORY[0x1E01AE890](v25, v23);
                }
                else {
                  id v27 = *(id *)(v23 + 8 * v25 + 32);
                }
                uint64_t v28 = v27;
                objc_msgSend(v27, sel_doubleValue);
                uint64_t v30 = v29;

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v26 = sub_1DCE9EF0C(0, v26[2] + 1, 1, v26);
                }
                unint64_t v32 = v26[2];
                unint64_t v31 = v26[3];
                if (v32 >= v31 >> 1) {
                  uint64_t v26 = sub_1DCE9EF0C((void *)(v31 > 1), v32 + 1, 1, v26);
                }
                ++v25;
                v26[2] = v32 + 1;
                v26[v32 + 4] = v30;
              }
              while (v24 != v25);
            }
          }
          swift_bridgeObjectRelease_n();
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      id v33 = v34[0];
      sub_1DD046378();

      swift_willThrow();
      swift_release();
    }
  }
}

unint64_t sub_1DCE7B308(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v61 = a6;
  uint64_t v64 = a1;
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = sub_1DCDB8FEC(MEMORY[0x1E4FBC860]);
  if (a5 < 0) {
    goto LABEL_50;
  }
  id v15 = (void *)v14;
  uint64_t v62 = (void *)a4;
  uint64_t v63 = a3;
  v60[0] = v13;
  v60[1] = v11;
  uint64_t v60[2] = v10;
  if (a5)
  {
    uint64_t v16 = 0;
    do
    {
      BOOL v67 = (void *)v64;
      uint64_t v68 = a2;
      swift_bridgeObjectRetain();
      sub_1DD048548();
      uint64_t v66 = v16;
      sub_1DD048F78();
      sub_1DD048548();
      swift_bridgeObjectRelease();
      uint64_t v17 = (uint64_t)v67;
      uint64_t v18 = v68;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      BOOL v67 = v15;
      unint64_t v21 = sub_1DCEAD1A4(v17, v18);
      uint64_t v22 = v15[2];
      BOOL v23 = (v20 & 1) == 0;
      uint64_t v24 = v22 + v23;
      if (__OFADD__(v22, v23))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      char v25 = v20;
      if (v15[3] >= v24)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          id v15 = v67;
          if (v20) {
            goto LABEL_4;
          }
        }
        else
        {
          sub_1DCE8982C();
          id v15 = v67;
          if (v25) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        sub_1DCE7FDB4(v24, isUniquelyReferenced_nonNull_native);
        unint64_t v26 = sub_1DCEAD1A4(v17, v18);
        if ((v25 & 1) != (v27 & 1)) {
          goto LABEL_53;
        }
        unint64_t v21 = v26;
        id v15 = v67;
        if (v25)
        {
LABEL_4:
          *(void *)(v15[7] + 8 * v21) = 0;
          goto LABEL_5;
        }
      }
      v15[(v21 >> 6) + 8] |= 1 << v21;
      uint64_t v28 = (uint64_t *)(v15[6] + 16 * v21);
      *uint64_t v28 = v17;
      v28[1] = v18;
      *(void *)(v15[7] + 8 * v21) = 0;
      uint64_t v29 = v15[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_47;
      }
      v15[2] = v31;
      swift_bridgeObjectRetain();
LABEL_5:
      ++v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (a5 != v16);
  }
  uint64_t v32 = sub_1DCE79D1C((uint64_t)v62, v63);
  if (!v32)
  {
    swift_bridgeObjectRelease();
    return sub_1DCDB8FEC(MEMORY[0x1E4FBC860]);
  }
  uint64_t v33 = v32;
  uint64_t v66 = MEMORY[0x1E4FBC860];
  uint64_t v34 = *(void *)(v32 + 16);
  if (v34)
  {
    uint64_t v35 = 0;
    uint64_t v36 = *(void *)(v61 + 32);
    do
    {
      uint64_t v37 = *(void *)(v33 + 8 * v35 + 32);
      swift_bridgeObjectRetain();
      sub_1DCE7AF9C(v36, v37, (void (*)(void))type metadata accessor for OCRAddressModelInput, (void (*)(void))type metadata accessor for OCRAddressModelOutput);
      uint64_t v39 = v38;
      ++v35;
      swift_bridgeObjectRelease();
      sub_1DCFDF20C(v39);
    }
    while (v34 != v35);
    swift_bridgeObjectRelease();
    uint64_t v40 = v66;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = MEMORY[0x1E4FBC860];
  }
  BOOL v67 = (void *)v40;
  swift_bridgeObjectRetain_n();
  sub_1DCE78850((uint64_t *)&v67);
  swift_bridgeObjectRelease_n();
  uint64_t v66 = (uint64_t)v67;
  uint64_t v41 = v67[2];
  if (v41 >= a5) {
    uint64_t v42 = a5;
  }
  else {
    uint64_t v42 = v67[2];
  }
  uint64_t v62 = v67;
  if (!v42)
  {
LABEL_44:
    swift_release();
    return (unint64_t)v15;
  }
  if (!v41) {
    goto LABEL_51;
  }
  if (v42 - 1 < v41)
  {
    uint64_t v43 = 0;
    uint64_t v63 = v67 + 4;
    while (1)
    {
      BOOL v67 = (void *)v64;
      uint64_t v68 = a2;
      swift_bridgeObjectRetain();
      sub_1DD048548();
      uint64_t v65 = v43;
      sub_1DD048F78();
      sub_1DD048548();
      swift_bridgeObjectRelease();
      uint64_t v45 = (uint64_t)v67;
      uint64_t v44 = v68;
      uint64_t v46 = v63[v43];
      char v47 = swift_isUniquelyReferenced_nonNull_native();
      BOOL v67 = v15;
      unint64_t v49 = sub_1DCEAD1A4(v45, v44);
      uint64_t v50 = v15[2];
      BOOL v51 = (v48 & 1) == 0;
      uint64_t v52 = v50 + v51;
      if (__OFADD__(v50, v51)) {
        goto LABEL_48;
      }
      char v53 = v48;
      if (v15[3] >= v52)
      {
        if (v47)
        {
          id v15 = v67;
          if (v48) {
            goto LABEL_31;
          }
        }
        else
        {
          sub_1DCE8982C();
          id v15 = v67;
          if (v53) {
            goto LABEL_31;
          }
        }
      }
      else
      {
        sub_1DCE7FDB4(v52, v47);
        unint64_t v54 = sub_1DCEAD1A4(v45, v44);
        if ((v53 & 1) != (v55 & 1)) {
          goto LABEL_53;
        }
        unint64_t v49 = v54;
        id v15 = v67;
        if (v53)
        {
LABEL_31:
          *(void *)(v15[7] + 8 * v49) = v46;
          goto LABEL_32;
        }
      }
      v15[(v49 >> 6) + 8] |= 1 << v49;
      uint64_t v56 = (uint64_t *)(v15[6] + 16 * v49);
      uint64_t *v56 = v45;
      v56[1] = v44;
      *(void *)(v15[7] + 8 * v49) = v46;
      uint64_t v57 = v15[2];
      BOOL v30 = __OFADD__(v57, 1);
      uint64_t v58 = v57 + 1;
      if (v30) {
        goto LABEL_49;
      }
      v15[2] = v58;
      swift_bridgeObjectRetain();
LABEL_32:
      ++v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v42 == v43) {
        goto LABEL_44;
      }
    }
  }
LABEL_52:
  __break(1u);
LABEL_53:
  swift_release();
  sub_1DD049028();
  __break(1u);
  swift_release();
  unint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_1DCE7B978(void *a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1[2];
  if (!v2)
  {
    swift_bridgeObjectRetain();
    return;
  }
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  unint64_t v5 = v2 - 1;
  double v6 = 0.0;
LABEL_3:
  if (v4 < v2)
  {
    char v7 = 0;
    do
    {
      if ((v7 & 1) != 0 || (long double v8 = *(double *)&v1[v4 + 4], v8 == 0.0))
      {
        if (v5 == v4) {
          goto LABEL_19;
        }
        char v7 = 1;
      }
      else
      {
        if (v8 > 0.0)
        {
          if (__OFADD__(v3++, 1)) {
            goto LABEL_29;
          }
          double v6 = v6 + log(v8);
          if (v5 == v4++)
          {
LABEL_17:
            if (v3) {
              long double v11 = exp(v6 / (double)v3);
            }
            else {
LABEL_19:
            }
              long double v11 = 0.0;
            swift_bridgeObjectRetain();
            uint64_t v12 = -(uint64_t)v2;
            uint64_t v13 = 4;
            do
            {
              if (*(double *)&v1[v13] < 0.0)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v1 = sub_1DCEC1C64(v1);
                }
                *(long double *)&v1[v13] = v11;
              }
              ++v13;
            }
            while (v12 + v13 != 4);
            return;
          }
          goto LABEL_3;
        }
        if (v5 == v4) {
          goto LABEL_17;
        }
        char v7 = 0;
      }
      ++v4;
    }
    while (v2 != v4);
  }
  __break(1u);
LABEL_29:
  __break(1u);
}

void sub_1DCE7BAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void v44[2] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v10 = *(void *)(a1 + 16);
  long double v11 = (void *)sub_1DCDE1EBC(v10, 0.0);
  id v12 = sub_1DCEEE0B0(a2, 1);
  type metadata accessor for TitleClassificationModelInput();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E9E0]), sel_init);
  id v15 = *(void **)(a4 + 16);
  v44[0] = 0;
  id v16 = objc_msgSend(v15, sel_predictionFromFeatures_options_error_, v13, v14, v44);
  id v17 = v44[0];
  if (!v16)
  {
    id v40 = v44[0];
    uint64_t v41 = (void *)sub_1DD046378();

    swift_willThrow();
    swift_release();

    return;
  }
  uint64_t v18 = v16;
  type metadata accessor for TitleClassificationModelOutput();
  *(void *)(swift_initStackObject() + 16) = v18;
  id v19 = v17;
  swift_release();

  char v20 = (void *)sub_1DD0483D8();
  id v21 = objc_msgSend(v18, sel_featureValueForName_, v20);

  if (!v21)
  {
    __break(1u);
    goto LABEL_31;
  }
  id v22 = objc_msgSend(v21, sel_multiArrayValue);

  if (!v22)
  {
LABEL_31:
    __break(1u);
    return;
  }
  char v42 = a5;
  swift_release();
  id v23 = objc_msgSend(v22, sel_numberArray);

  sub_1DCD56524();
  uint64_t v24 = sub_1DD0486B8();

  uint64_t v43 = v24;
  if (v10)
  {
    unint64_t v25 = 0;
    unint64_t v26 = v24 & 0xC000000000000001;
    uint64_t v27 = *(void *)(a3 + 32);
    uint64_t v28 = v24 & 0xFFFFFFFFFFFFFF8;
    uint64_t v29 = v24 + 32;
    BOOL v30 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(void *)(v27 + 16))
      {
        uint64_t v32 = *(v30 - 1);
        uint64_t v31 = *v30;
        swift_bridgeObjectRetain();
        unint64_t v33 = sub_1DCEAD1A4(v32, v31);
        if (v34)
        {
          unint64_t v35 = *(void *)(*(void *)(v27 + 56) + 8 * v33);
          swift_bridgeObjectRelease();
          if ((v35 & 0x8000000000000000) == 0)
          {
            if (v26)
            {
              id v36 = (id)MEMORY[0x1E01AE890](v35, v43);
            }
            else
            {
              if (v35 >= *(void *)(v28 + 16)) {
                goto LABEL_28;
              }
              id v36 = *(id *)(v29 + 8 * v35);
            }
            uint64_t v37 = v36;
            objc_msgSend(v36, sel_doubleValue);
            double v39 = v38;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              long double v11 = sub_1DCEC1C64(v11);
            }
            if (v25 >= v11[2]) {
              goto LABEL_29;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long double v11 = sub_1DCEC1C64(v11);
      }
      double v39 = -1.0;
      if (v25 >= v11[2])
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
      }
LABEL_8:
      *(double *)&v11[v25 + 4] = v39;
      v30 += 2;
      ++v25;
    }
    while (v10 != v25);
  }
  swift_bridgeObjectRelease();
  if (v42)
  {
    sub_1DCE7B978(v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DCE7BE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  unint64_t v10 = *(void *)(a2 + 16);
  uint64_t result = sub_1DCDE1EBC(v10, 0.0);
  id v12 = (void *)result;
  unint64_t v81 = v10;
  uint64_t v82 = a4;
  uint64_t v77 = a2;
  if (!v10)
  {
LABEL_74:
    if (a6)
    {
      sub_1DCE7B978(v12);
      uint64_t v65 = v64;
      swift_bridgeObjectRelease();
      id v12 = v65;
    }
    if (v81)
    {
      uint64_t v66 = *(void *)(a4 + 16);
      if (v66)
      {
        unint64_t v67 = 0;
        uint64_t v84 = a4 + 72;
        uint64_t v80 = v66 - 1;
        do
        {
          uint64_t v91 = *(void *)(v77 + 32 + 8 * v67);
          uint64_t v68 = *(void *)(v91 + 16);
          if (!v68) {
            goto LABEL_95;
          }
          unint64_t v88 = v67;
          uint64_t result = swift_bridgeObjectRetain_n();
          unint64_t v69 = 0;
          uint64_t v87 = v68;
          do
          {
            if (v69 >= *(void *)(v91 + 16)) {
              goto LABEL_106;
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v70 = sub_1DD0485D8();
            swift_bridgeObjectRelease();
            if (v70)
            {
              swift_bridgeObjectRelease();
              goto LABEL_80;
            }
            if (v66 == 1)
            {
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v71 = v66;
              swift_bridgeObjectRetain();
              char v72 = sub_1DD0485D8();
              swift_bridgeObjectRelease();
              uint64_t v73 = v80;
              uint64_t v74 = v84;
              if (v72)
              {
LABEL_79:
                swift_bridgeObjectRelease();
                uint64_t v66 = v71;
LABEL_80:
                unint64_t v67 = v88;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                goto LABEL_81;
              }
              while (--v73)
              {
                uint64_t v75 = v74 + 16;
                swift_bridgeObjectRetain();
                char v76 = sub_1DD0485D8();
                swift_bridgeObjectRelease();
                uint64_t v74 = v75;
                if (v76) {
                  goto LABEL_79;
                }
              }
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              uint64_t v66 = v71;
              uint64_t v68 = v87;
            }
            ++v69;
          }
          while (v69 != v68);
          swift_bridgeObjectRelease_n();
          unint64_t v67 = v88;
LABEL_95:
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1DCEC1C64(v12);
            id v12 = (void *)result;
          }
          if (v67 >= v12[2]) {
            goto LABEL_110;
          }
          v12[v67 + 4] = 0;
LABEL_81:
          ++v67;
        }
        while (v67 != v81);
      }
    }
    return (uint64_t)v12;
  }
  unint64_t v13 = 0;
  uint64_t v79 = a2 + 32;
  uint64_t v85 = a1;
  uint64_t v14 = a1 + 32;
  char v83 = a5;
  uint64_t v90 = a1 + 32;
  while (1)
  {
    uint64_t v15 = *(void *)(v79 + 8 * v13);
    int64_t v16 = *(void *)(v15 + 16);
    if (a5)
    {
      if (v16)
      {
        unint64_t v95 = (void *)MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1DCFC4948(0, v16, 0);
        id v17 = v95;
        uint64_t v18 = v15 + 40;
        do
        {
          v92[0] = sub_1DD048488();
          v92[1] = v19;
          uint64_t v93 = 46;
          unint64_t v94 = 0xE100000000000000;
          sub_1DCD21A84();
          swift_bridgeObjectRetain();
          char v20 = (void *)sub_1DD048A48();
          uint64_t result = swift_bridgeObjectRelease();
          if (!v20[2])
          {
LABEL_104:
            __break(1u);
LABEL_105:
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
            goto LABEL_111;
          }
          uint64_t v22 = v20[4];
          uint64_t v21 = v20[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v95 = v17;
          unint64_t v24 = v17[2];
          unint64_t v23 = v17[3];
          if (v24 >= v23 >> 1)
          {
            sub_1DCFC4948(v23 > 1, v24 + 1, 1);
            id v17 = v95;
          }
          v18 += 16;
          v17[2] = v24 + 1;
          unint64_t v25 = &v17[2 * v24];
          v25[4] = v22;
          v25[5] = v21;
          --v16;
          uint64_t v14 = v90;
        }
        while (v16);
        swift_bridgeObjectRelease();
        a5 = v83;
      }
      else
      {
        id v17 = (void *)MEMORY[0x1E4FBC860];
      }
      uint64_t v93 = sub_1DD0487F8();
      uint64_t v34 = v17[2];
      if (v34)
      {
        unint64_t v35 = v17 + 5;
        do
        {
          uint64_t v36 = *(v35 - 1);
          uint64_t v37 = *v35;
          swift_bridgeObjectRetain();
          sub_1DCF5156C(v92, v36, v37);
          swift_bridgeObjectRelease();
          v35 += 2;
          --v34;
        }
        while (v34);
      }
      swift_bridgeObjectRelease();
      uint64_t v38 = v93;
      uint64_t v39 = *(void *)(v93 + 16);
      if (v39)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851E0);
        unint64_t v26 = (void *)swift_allocObject();
        int64_t v40 = _swift_stdlib_malloc_size(v26);
        uint64_t v41 = v40 - 32;
        if (v40 < 32) {
          uint64_t v41 = v40 - 17;
        }
        v26[2] = v39;
        v26[3] = 2 * (v41 >> 4);
        uint64_t v42 = sub_1DCD50750((uint64_t)v92, v26 + 4, v39, v38);
        swift_bridgeObjectRetain();
        uint64_t result = sub_1DCD505A4();
        if (v42 != v39) {
          goto LABEL_112;
        }
        uint64_t result = swift_bridgeObjectRelease();
        a4 = v82;
        a5 = v83;
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v26 = (void *)MEMORY[0x1E4FBC860];
        a4 = v82;
      }
    }
    else if (v16)
    {
      v92[0] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1DCFC4948(0, v16, 0);
      unint64_t v26 = (void *)v92[0];
      uint64_t v27 = v15 + 40;
      do
      {
        uint64_t v28 = sub_1DD048488();
        uint64_t v30 = v29;
        v92[0] = (uint64_t)v26;
        unint64_t v32 = v26[2];
        unint64_t v31 = v26[3];
        if (v32 >= v31 >> 1)
        {
          sub_1DCFC4948(v31 > 1, v32 + 1, 1);
          unint64_t v26 = (void *)v92[0];
        }
        v27 += 16;
        v26[2] = v32 + 1;
        unint64_t v33 = &v26[2 * v32];
        v33[4] = v28;
        v33[5] = v30;
        --v16;
      }
      while (v16);
      uint64_t result = swift_bridgeObjectRelease();
      a4 = v82;
      a5 = v83;
      uint64_t v14 = v90;
    }
    else
    {
      unint64_t v26 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v89 = v26[2];
    if (v89) {
      break;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (a6)
    {
LABEL_70:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DCEC1C64(v12);
        id v12 = (void *)result;
      }
      if (v13 >= v12[2]) {
        goto LABEL_113;
      }
      v12[v13 + 4] = 0xBFF0000000000000;
    }
LABEL_4:
    if (++v13 == v81) {
      goto LABEL_74;
    }
  }
  uint64_t v43 = 0;
  for (unint64_t i = 0; i != v89; ++i)
  {
    if (i >= v26[2])
    {
LABEL_103:
      __break(1u);
      goto LABEL_104;
    }
    uint64_t v46 = &v26[2 * i + 4];
    uint64_t v47 = *v46;
    uint64_t v48 = v46[1];
    if (a5)
    {
      uint64_t v49 = *(void *)(a3 + 48);
      uint64_t v50 = *(void *)(v49 + 16);
      swift_bridgeObjectRetain();
      if (v50)
      {
        swift_bridgeObjectRetain();
        unint64_t v51 = sub_1DCEAD1A4(v47, v48);
        uint64_t v52 = MEMORY[0x1E4FBC860];
        if (v53)
        {
          uint64_t v52 = *(void *)(*(void *)(v49 + 56) + 8 * v51);
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v52 = MEMORY[0x1E4FBC860];
      }
      uint64_t v14 = v90;
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v59 = *(void *)(v52 + 16);
      if (!v59) {
        goto LABEL_60;
      }
      uint64_t v60 = 0;
      uint64_t v61 = *(void *)(v85 + 16);
      do
      {
        uint64_t v62 = *(void *)(v52 + 8 * v60 + 32);
        if (v62 < v61)
        {
          if (v62 < 0)
          {
            __break(1u);
LABEL_102:
            __break(1u);
            goto LABEL_103;
          }
          double v63 = *(double *)(v90 + 8 * v62);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1DCEC1C64(v12);
            id v12 = (void *)result;
          }
          if (v13 >= v12[2]) {
            goto LABEL_102;
          }
          *(double *)&v12[v13 + 4] = v63 + *(double *)&v12[v13 + 4];
        }
        ++v60;
      }
      while (v59 != v60);
      uint64_t result = swift_bridgeObjectRelease();
      BOOL v45 = __OFADD__(v43++, 1);
      a5 = v83;
      if (v45) {
        goto LABEL_105;
      }
    }
    else
    {
      uint64_t v54 = *(void *)(a3 + 16);
      if (!*(void *)(v54 + 16)) {
        continue;
      }
      swift_bridgeObjectRetain();
      unint64_t v55 = sub_1DCEAD1A4(v47, v48);
      if ((v56 & 1) == 0)
      {
LABEL_60:
        uint64_t result = swift_bridgeObjectRelease();
        continue;
      }
      unint64_t v57 = *(void *)(*(void *)(v54 + 56) + 8 * v55);
      uint64_t result = swift_bridgeObjectRelease();
      if ((v57 & 0x8000000000000000) == 0)
      {
        if (v57 >= *(void *)(v85 + 16)) {
          goto LABEL_107;
        }
        double v58 = *(double *)(v14 + 8 * v57);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_1DCEC1C64(v12);
          id v12 = (void *)result;
        }
        if (v13 >= v12[2]) {
          goto LABEL_108;
        }
        *(double *)&v12[v13 + 4] = v58 + *(double *)&v12[v13 + 4];
        BOOL v45 = __OFADD__(v43++, 1);
        if (v45) {
          goto LABEL_109;
        }
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v43 < 1)
  {
    a4 = v82;
    if ((a6 & 1) == 0) {
      goto LABEL_4;
    }
    goto LABEL_70;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DCEC1C64(v12);
    id v12 = (void *)result;
  }
  if (v13 < v12[2])
  {
    *(double *)&v12[v13 + 4] = *(double *)&v12[v13 + 4] / (double)v43;
    a4 = v82;
    goto LABEL_4;
  }
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
  return result;
}

void sub_1DCE7C714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  void v39[2] = *(id *)MEMORY[0x1E4F143B8];
  unint64_t v12 = *(void *)(a1 + 16);
  sub_1DCDE1EBC(v12, 0.0);
  sub_1DCDE1EBC(v12, 0.0);
  id v13 = sub_1DCEEE0B0(a2, 1);
  char v37 = a6;
  uint64_t v38 = a5;
  type metadata accessor for CategoryClassificationModelInput();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E9E0]), sel_init);
  int64_t v16 = *(void **)(a4 + 16);
  v39[0] = 0;
  id v17 = objc_msgSend(v16, sel_predictionFromFeatures_options_error_, v14, v15, v39);
  id v18 = v39[0];
  if (!v17)
  {
    id v35 = v39[0];
    uint64_t v36 = (void *)sub_1DD046378();

    swift_willThrow();
    swift_release();

    return;
  }
  uint64_t v19 = v17;
  type metadata accessor for CategoryClassificationModelOutput();
  *(void *)(swift_initStackObject() + 16) = v19;
  id v20 = v18;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v21 = (void *)sub_1DD0483D8();
  id v22 = objc_msgSend(v19, sel_featureValueForName_, v21);

  if (v22)
  {
    id v23 = objc_msgSend(v22, sel_multiArrayValue);

    if (v23)
    {
      swift_release();
      id v24 = objc_msgSend(v23, sel_numberArray);

      sub_1DCD56524();
      unint64_t v25 = sub_1DD0486B8();

      if (v25 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_1DD048CC8();
        if (v26) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v26)
        {
LABEL_6:
          if (v26 < 1) {
            __break(1u);
          }
          uint64_t v27 = 0;
          uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
          do
          {
            if ((v25 & 0xC000000000000001) != 0) {
              id v29 = (id)MEMORY[0x1E01AE890](v27, v25);
            }
            else {
              id v29 = *(id *)(v25 + 8 * v27 + 32);
            }
            uint64_t v30 = v29;
            objc_msgSend(v29, sel_doubleValue);
            uint64_t v32 = v31;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v28 = sub_1DCE9EF0C(0, v28[2] + 1, 1, v28);
            }
            unint64_t v34 = v28[2];
            unint64_t v33 = v28[3];
            if (v34 >= v33 >> 1) {
              uint64_t v28 = sub_1DCE9EF0C((void *)(v33 > 1), v34 + 1, 1, v28);
            }
            ++v27;
            void v28[2] = v34 + 1;
            v28[v34 + 4] = v32;
          }
          while (v26 != v27);
          goto LABEL_20;
        }
      }
      uint64_t v28 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
      swift_bridgeObjectRelease_n();
      sub_1DCE7BE58((uint64_t)v28, a1, a3, v38, 0, v37 & 1);
      sub_1DCE7BE58((uint64_t)v28, a1, a3, v38, 1, v37 & 1);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1DCE7CAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCE7CB60(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCE7CBC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Com_Apple_Visualintelligence_StructuredAddress(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCE7CC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Com_Apple_Visualintelligence_StructuredAddress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCE7CC80()
{
  return sub_1DCD68DA4() & 1;
}

uint64_t sub_1DCE7CCA0()
{
  return sub_1DCE7CC80() & 1;
}

uint64_t sub_1DCE7CCBC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86940);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = MEMORY[0x1E4FBC868];
  qword_1EBE85798 = result;
  return result;
}

uint64_t sub_1DCE7CD00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *a1;
  if (!*(void *)(*a1 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1DCEAD1A4(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1DCDB4B04();
    swift_bridgeObjectRetain();
    unint64_t v12 = (void *)sub_1DD0489E8();
    swift_bridgeObjectRetain();
    id v11 = v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *a1;
    *a1 = 0x8000000000000000;
    sub_1DCE864F0((uint64_t)v11, a2, a3, isUniquelyReferenced_nonNull_native);
    *a1 = v15;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  id v11 = *(id *)(*(void *)(v8 + 56) + 8 * v9);
LABEL_6:
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v11;
  return result;
}

uint64_t sub_1DCE7CE2C()
{
  sub_1DCE8C6E8(v0 + OBJC_IVAR____TtC18VisualIntelligence13SignpostEvent_signpostID);

  return swift_deallocClassInstance();
}

uint64_t sub_1DCE7CEA0()
{
  return type metadata accessor for SignpostEvent();
}

uint64_t type metadata accessor for SignpostEvent()
{
  uint64_t result = qword_1EBE86BF8;
  if (!qword_1EBE86BF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1DCE7CEF4()
{
  sub_1DCE7CF90();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1DCE7CF90()
{
  if (!qword_1EBE86D60)
  {
    sub_1DD048038();
    unint64_t v0 = sub_1DD048A08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBE86D60);
    }
  }
}

uint64_t sub_1DCE7CFE8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87200);
  char v35 = a2;
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v15 << 6);
      }
      else
      {
        if (__OFADD__(v15++, 1)) {
          goto LABEL_39;
        }
        if (v15 >= v12)
        {
LABEL_32:
          swift_release();
          uint64_t v3 = v2;
          if (v35)
          {
            uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
            if (v34 >= 64) {
              bzero((void *)(v5 + 64), ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            }
            else {
              *unint64_t v9 = -1 << v34;
            }
            *(void *)(v5 + 16) = 0;
          }
          break;
        }
        unint64_t v21 = v9[v15];
        if (!v21)
        {
          int64_t v22 = v15 + 1;
          if (v15 + 1 >= v12) {
            goto LABEL_32;
          }
          unint64_t v21 = v9[v22];
          if (!v21)
          {
            while (1)
            {
              int64_t v15 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                break;
              }
              if (v15 >= v12) {
                goto LABEL_32;
              }
              unint64_t v21 = v9[v15];
              ++v22;
              if (v21) {
                goto LABEL_19;
              }
            }
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
            return result;
          }
          ++v15;
        }
LABEL_19:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v15 << 6);
      }
      id v23 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v19);
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      uint64_t v26 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v19);
      if (v35)
      {
        sub_1DCD9E7E8(v26, v36);
      }
      else
      {
        sub_1DCD21A28((uint64_t)v26, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1DD0490B8();
      sub_1DD0484F8();
      uint64_t result = sub_1DD049108();
      uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v13 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v13 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v13 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      id v17 = (void *)(*(void *)(v7 + 48) + 16 * v16);
      *id v17 = v25;
      v17[1] = v24;
      uint64_t result = (uint64_t)sub_1DCD9E7E8(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v16));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE7D2D0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85118);
  char v36 = a2;
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1DD0490B8();
    sub_1DD0484F8();
    uint64_t result = sub_1DD049108();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE7D5E8(uint64_t a1, int a2)
{
  return sub_1DCE7F5B4(a1, a2, type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t *)&unk_1EAB02CD0, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
}

uint64_t sub_1DCE7D61C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039A0);
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    char v32 = a2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        int64_t v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          return result;
        }
        if (v19 >= v12) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v15;
        if (!v20)
        {
          int64_t v15 = v19 + 1;
          if (v19 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v15];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v12)
            {
LABEL_31:
              swift_release();
              uint64_t v3 = v2;
              if (v32)
              {
                uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
                if (v31 >= 64) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v9 = -1 << v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_38;
                }
                if (v15 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v15];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v15 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      int v23 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v18);
      sub_1DD0490B8();
      sub_1DCD9C35C(v22);
      sub_1DD0484F8();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1DD049108();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v22;
      *(_DWORD *)(*(void *)(v7 + 56) + 4 * v16) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE7D904(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE869F8);
  uint64_t result = sub_1DD048CF8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    int64_t v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 4 * v18;
      unsigned int v23 = *(_DWORD *)(*(void *)(v5 + 48) + v22);
      int v24 = *(_DWORD *)(*(void *)(v5 + 56) + v22);
      uint64_t result = MEMORY[0x1E01AED50](*(void *)(v7 + 40), v23, 4);
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 4 * v15;
      *(_DWORD *)(*(void *)(v7 + 48) + v16) = v23;
      *(_DWORD *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE7DBB0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE853B0);
  char v53 = a2;
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v51 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v49 = v2;
  int64_t v50 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      if (v53) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
    int64_t v29 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v29 >= v50) {
      break;
    }
    BOOL v30 = v51;
    unint64_t v31 = v51[v29];
    ++v13;
    if (!v31)
    {
      int64_t v13 = v29 + 1;
      if (v29 + 1 >= v50) {
        goto LABEL_33;
      }
      unint64_t v31 = v51[v13];
      if (!v31)
      {
        int64_t v32 = v29 + 2;
        if (v32 >= v50)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v49;
          if ((v53 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v31 = v51[v32];
        if (!v31)
        {
          while (1)
          {
            int64_t v13 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v50) {
              goto LABEL_33;
            }
            unint64_t v31 = v51[v13];
            ++v32;
            if (v31) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v32;
      }
    }
LABEL_22:
    unint64_t v10 = (v31 - 1) & v31;
    unint64_t v17 = __clz(__rbit64(v31)) + (v13 << 6);
    if (v53)
    {
LABEL_10:
      char v18 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
      uint64_t v19 = *(void *)(v5 + 56) + 160 * v17;
      char v20 = *(unsigned char *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      uint64_t v22 = *(void *)(v19 + 16);
      uint64_t v24 = *(void *)(v19 + 24);
      uint64_t v23 = *(void *)(v19 + 32);
      char v25 = *(unsigned char *)(v19 + 40);
      uint64_t v59 = *(void *)(v19 + 64);
      uint64_t v56 = *(void *)(v19 + 72);
      uint64_t v57 = *(void *)(v19 + 48);
      uint64_t v62 = *(void *)(v19 + 80);
      uint64_t v60 = *(void *)(v19 + 88);
      uint64_t v58 = *(void *)(v19 + 96);
      uint64_t v54 = *(void *)(v19 + 56);
      uint64_t v55 = *(void *)(v19 + 104);
      uint64_t v26 = *(void *)(v19 + 112);
      int v27 = *(_DWORD *)(v19 + 120);
      char v61 = *(unsigned char *)(v19 + 124);
      char v63 = *(unsigned char *)(v19 + 125);
      char v64 = *(unsigned char *)(v19 + 126);
      char v65 = *(unsigned char *)(v19 + 127);
      char v66 = *(unsigned char *)(v19 + 128);
      char v68 = *(unsigned char *)(v19 + 129);
      uint64_t v69 = *(void *)(v19 + 136);
      uint64_t v67 = *(void *)(v19 + 144);
      int v28 = *(_DWORD *)(v19 + 152);
      char v70 = *(unsigned char *)(v19 + 156);
      goto LABEL_24;
    }
LABEL_23:
    char v18 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    uint64_t v33 = (long long *)(*(void *)(v5 + 56) + 160 * v17);
    long long v34 = v33[1];
    long long v71 = *v33;
    long long v72 = v34;
    long long v35 = v33[5];
    long long v37 = v33[2];
    long long v36 = v33[3];
    long long v75 = v33[4];
    long long v76 = v35;
    long long v73 = v37;
    long long v74 = v36;
    long long v39 = v33[7];
    long long v38 = v33[8];
    long long v40 = v33[6];
    *(_OWORD *)&v79[13] = *(long long *)((char *)v33 + 141);
    long long v78 = v39;
    *(_OWORD *)uint64_t v79 = v38;
    long long v77 = v40;
    char v70 = v79[28];
    int v28 = *(_DWORD *)&v79[24];
    uint64_t v69 = *((void *)&v38 + 1);
    uint64_t v67 = *(void *)&v79[16];
    char v68 = BYTE1(v38);
    char v65 = HIBYTE(v39);
    char v66 = v38;
    char v63 = BYTE13(v39);
    char v64 = BYTE14(v39);
    char v61 = BYTE12(v39);
    int v27 = DWORD2(v39);
    uint64_t v26 = v39;
    uint64_t v62 = v35;
    uint64_t v59 = v75;
    uint64_t v60 = *((void *)&v35 + 1);
    uint64_t v55 = *((void *)&v40 + 1);
    uint64_t v56 = *((void *)&v75 + 1);
    uint64_t v57 = v74;
    uint64_t v58 = v40;
    uint64_t v54 = *((void *)&v74 + 1);
    char v25 = BYTE8(v73);
    uint64_t v24 = *((void *)&v72 + 1);
    uint64_t v23 = v73;
    uint64_t v21 = *((void *)&v71 + 1);
    uint64_t v22 = v72;
    char v20 = v71;
    sub_1DCD32CC8((uint64_t)&v71);
LABEL_24:
    sub_1DD0490B8();
    sub_1DCD9C35C(v18);
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DD049108();
    uint64_t v41 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v42 = result & ~v41;
    unint64_t v43 = v42 >> 6;
    if (((-1 << v42) & ~*(void *)(v11 + 8 * (v42 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v42) & ~*(void *)(v11 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v44 = 0;
      unint64_t v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v46 = v43 == v45;
        if (v43 == v45) {
          unint64_t v43 = 0;
        }
        v44 |= v46;
        uint64_t v47 = *(void *)(v11 + 8 * v43);
      }
      while (v47 == -1);
      unint64_t v14 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v7 + 48) + v14) = v18;
    uint64_t v15 = *(void *)(v7 + 56) + 160 * v14;
    *(unsigned char *)uint64_t v15 = v20;
    *(void *)(v15 + 8) = v21;
    *(void *)(v15 + 16) = v22;
    *(void *)(v15 + 24) = v24;
    *(void *)(v15 + 32) = v23;
    *(unsigned char *)(v15 + 40) = v25;
    *(void *)(v15 + 48) = v57;
    *(void *)(v15 + 56) = v54;
    *(void *)(v15 + 64) = v59;
    *(void *)(v15 + 72) = v56;
    *(void *)(v15 + 80) = v62;
    *(void *)(v15 + 88) = v60;
    *(void *)(v15 + 96) = v58;
    *(void *)(v15 + 104) = v55;
    *(void *)(v15 + 112) = v26;
    *(_DWORD *)(v15 + 120) = v27;
    *(unsigned char *)(v15 + 124) = v61;
    *(unsigned char *)(v15 + 125) = v63;
    *(unsigned char *)(v15 + 126) = v64;
    *(unsigned char *)(v15 + 127) = v65;
    *(unsigned char *)(v15 + 128) = v66;
    *(unsigned char *)(v15 + 129) = v68;
    *(void *)(v15 + 136) = v69;
    *(void *)(v15 + 144) = v67;
    *(_DWORD *)(v15 + 152) = v28;
    *(unsigned char *)(v15 + 156) = v70;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v49;
  BOOL v30 = v51;
  if ((v53 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v48 = 1 << *(unsigned char *)(v5 + 32);
  if (v48 >= 64) {
    bzero(v30, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v30 = -1 << v48;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE7E0F0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C70);
  uint64_t result = sub_1DD048CF8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1DD0490A8();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE7E3A8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85110);
  char v42 = a2;
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    char v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    long long v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DD0490B8();
    sub_1DD0484F8();
    uint64_t result = sub_1DD049108();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  char v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE7E6D0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C38);
  unint64_t v10 = (void *)sub_1DD048CF8();
  if (*(void *)(v9 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    unint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v19 = v18 | (v17 << 6);
      }
      else
      {
        int64_t v20 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v20 >= v15) {
          goto LABEL_23;
        }
        unint64_t v21 = v12[v20];
        ++v17;
        if (!v21)
        {
          int64_t v17 = v20 + 1;
          if (v20 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v21 = v12[v17];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v15)
            {
LABEL_23:
              swift_release();
              if (a2)
              {
                uint64_t v29 = 1 << *(unsigned char *)(v9 + 32);
                if (v29 >= 64) {
                  bzero((void *)(v9 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v12 = -1 << v29;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v12[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v17 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_30;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v21 = v12[v17];
                ++v22;
                if (v21) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v22;
          }
        }
LABEL_20:
        unint64_t v14 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
      }
      int64_t v23 = (double *)(*(void *)(v9 + 48) + 32 * v19);
      CGFloat v25 = *v23;
      CGFloat v24 = v23[1];
      CGFloat v27 = v23[2];
      CGFloat v26 = v23[3];
      uint64_t v28 = *(void *)(v9 + 56) + *(void *)(v6 + 72) * v19;
      if (a2) {
        sub_1DCE8C860(v28, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      }
      else {
        sub_1DCE8C7F8(v28, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      }
      uint64_t result = sub_1DCE872B0((uint64_t)v8, v10, v25, v24, v27, v26);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1DCE7E984(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE869C8);
  char v37 = a2;
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    int v33 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DD0490B8();
    sub_1DD0484F8();
    uint64_t result = sub_1DD049108();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(_DWORD *)(*(void *)(v7 + 56) + 4 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE7EC8C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1DD046EB8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03B98);
  int v46 = a2;
  uint64_t v10 = sub_1DD048CF8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  char v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  unint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_1DCE8C748(&qword_1EAB03BA0, MEMORY[0x1E4F89188]);
    uint64_t result = sub_1DD048358();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

unint64_t sub_1DCE7F0B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB02CA0);
  uint64_t v6 = (void *)sub_1DD048CF8();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v27 = 1 << *(unsigned char *)(v5 + 32);
                if (v27 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v27;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      unint64_t v19 = (double *)(*(void *)(v5 + 48) + 32 * v15);
      CGFloat v21 = *v19;
      CGFloat v20 = v19[1];
      CGFloat v23 = v19[2];
      CGFloat v22 = v19[3];
      int64_t v24 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v15);
      uint64_t v25 = *v24;
      uint64_t v26 = v24[1];
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_1DCE87454(v25, v26, v6, v21, v20, v23, v22);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1DCE7F2C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE869F0);
  uint64_t result = sub_1DD048CF8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  *char v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1DD0490A8();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      unint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *unint64_t v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE7F580(uint64_t a1, int a2)
{
  return sub_1DCE7F5B4(a1, a2, type metadata accessor for LandmarkSignals, &qword_1EAB02C48, type metadata accessor for LandmarkSignals);
}

uint64_t sub_1DCE7F5B4(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v49 = a5;
  uint64_t v7 = v5;
  uint64_t v9 = a3(0);
  uint64_t v47 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)&v43 - v10;
  uint64_t v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v48 = a2;
  uint64_t v13 = sub_1DD048CF8();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_41;
  }
  uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 64);
  int v46 = (void *)(v12 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  char v44 = v5;
  int64_t v45 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v19 = v13 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  while (1)
  {
    if (v18)
    {
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v45) {
      break;
    }
    uint64_t v27 = v46;
    unint64_t v28 = v46[v26];
    ++v21;
    if (!v28)
    {
      int64_t v21 = v26 + 1;
      if (v26 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v28 = v46[v21];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v7 = v44;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v46[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v21 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v45) {
              goto LABEL_34;
            }
            unint64_t v28 = v46[v21];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v29;
      }
    }
LABEL_21:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_22:
    uint64_t v30 = (uint64_t *)(*(void *)(v12 + 48) + 16 * v25);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    uint64_t v33 = *(void *)(v47 + 72);
    uint64_t v34 = *(void *)(v12 + 56) + v33 * v25;
    if (v48)
    {
      sub_1DCE8C860(v34, (uint64_t)v11, v49);
    }
    else
    {
      sub_1DCE8C7F8(v34, (uint64_t)v11, v49);
      swift_bridgeObjectRetain();
    }
    sub_1DD0490B8();
    sub_1DD0484F8();
    uint64_t result = sub_1DD049108();
    uint64_t v35 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v19 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v19 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v19 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    char v23 = (void *)(*(void *)(v14 + 48) + 16 * v22);
    *char v23 = v31;
    v23[1] = v32;
    uint64_t result = sub_1DCE8C860((uint64_t)v11, *(void *)(v14 + 56) + v33 * v22, v49);
    ++*(void *)(v14 + 16);
  }
  swift_release();
  uint64_t v7 = v44;
  uint64_t v27 = v46;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v12 + 32);
  if (v42 >= 64) {
    bzero(v27, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v27 = -1 << v42;
  }
  *(void *)(v12 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v7 = v14;
  return result;
}

uint64_t sub_1DCE7F968(uint64_t a1, char a2)
{
  return sub_1DCE8123C(a1, a2, &qword_1EBE85128);
}

uint64_t sub_1DCE7F974(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1DD0465D8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C28);
  int v47 = a2;
  uint64_t v10 = sub_1DD048CF8();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v49 = v8;
  uint64_t v50 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v43 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  uint64_t v41 = v2;
  int64_t v42 = (unint64_t)(v12 + 63) >> 6;
  char v44 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  int v48 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v45 = v9;
  uint64_t v46 = v6;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v42) {
      break;
    }
    unint64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v25 = v43[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v42) {
              goto LABEL_34;
            }
            unint64_t v25 = v43[v18];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v9 + 48) + v27 * v22;
    if (v47)
    {
      (*v48)(v49, v28, v50);
      int64_t v29 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
    }
    else
    {
      (*v44)(v49, v28, v50);
      uint64_t v32 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v22);
      uint64_t v31 = *v32;
      uint64_t v30 = v32[1];
      swift_bridgeObjectRetain();
    }
    sub_1DCE8C748((unint64_t *)&qword_1EAB02A20, MEMORY[0x1E4F27A78]);
    uint64_t result = sub_1DD048358();
    uint64_t v33 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v34) & ~*(void *)(v16 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v6 = v46;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      uint64_t v6 = v46;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v16 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v11 + 48) + v27 * v19, v49, v50);
    int64_t v20 = (void *)(*(void *)(v11 + 56) + 16 * v19);
    *int64_t v20 = v31;
    v20[1] = v30;
    ++*(void *)(v11 + 16);
    uint64_t v9 = v45;
  }
  swift_release();
  uint64_t v3 = v41;
  unint64_t v24 = v43;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v9 + 32);
  if (v40 >= 64) {
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v40;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1DCE7FDB4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C50);
  char v37 = a2;
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DD0490B8();
    sub_1DD0484F8();
    uint64_t result = sub_1DD049108();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE800BC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for StorefrontSignals(0);
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB02C60);
  char v9 = a2;
  uint64_t result = sub_1DD048CF8();
  uint64_t v11 = result;
  if (*(void *)(v8 + 16))
  {
    unint64_t v35 = v3;
    int64_t v12 = 0;
    uint64_t v13 = *(void *)(v8 + 64);
    char v37 = (void *)(v8 + 64);
    uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v13;
    int64_t v36 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v16)
      {
        unint64_t v19 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v20 = v19 | (v12 << 6);
      }
      else
      {
        int64_t v21 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v12;
        if (!v22)
        {
          int64_t v12 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v12];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              if ((v9 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_41;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v8 + 32);
              if (v34 >= 64) {
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v37 = -1 << v34;
              }
              uint64_t v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v12 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v12 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v12];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v23;
          }
        }
LABEL_21:
        unint64_t v16 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v12 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = *(void *)(v38 + 72);
      uint64_t v26 = *(void *)(v8 + 56) + v25 * v20;
      if (v9) {
        sub_1DCE8C860(v26, (uint64_t)v7, type metadata accessor for StorefrontSignals);
      }
      else {
        sub_1DCE8C7F8(v26, (uint64_t)v7, type metadata accessor for StorefrontSignals);
      }
      uint64_t result = sub_1DD0490A8();
      uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v11 + 48) + 8 * v18) = v24;
      uint64_t result = sub_1DCE8C860((uint64_t)v7, *(void *)(v11 + 56) + v25 * v18, type metadata accessor for StorefrontSignals);
      ++*(void *)(v11 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_1DCE80448(uint64_t a1, char a2)
{
  return sub_1DCE82CAC(a1, a2, &qword_1EBE869D8);
}

uint64_t sub_1DCE80454(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE850F0);
  char v39 = a2;
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  int64_t v36 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v12 << 6);
    goto LABEL_31;
  }
  int64_t v21 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_42;
  }
  if (v21 >= v37)
  {
    swift_release();
    uint64_t v3 = v36;
    unint64_t v22 = (void *)(v5 + 64);
    if (v39)
    {
LABEL_37:
      uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
      if (v34 >= 64) {
        bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v22 = -1 << v34;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v38 + 8 * v21);
    ++v12;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v12 = v21 + 1;
    if (v21 + 1 >= v37) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v38 + 8 * v12);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_31:
      char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      uint64_t v30 = *(void *)(v5 + 56) + 24 * v20;
      uint64_t v32 = *(void *)v30;
      uint64_t v31 = *(void *)(v30 + 8);
      char v33 = *(unsigned char *)(v30 + 16);
      if ((v39 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1DD0490B8();
      sub_1DD0484F8();
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_1DD049108();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = v13 & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      while (++v16 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
        if (v28 != -1)
        {
          unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
LABEL_8:
          *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
          *(unsigned char *)(*(void *)(v7 + 48) + v17) = v29;
          uint64_t v18 = *(void *)(v7 + 56) + 24 * v17;
          *(void *)uint64_t v18 = v32;
          *(void *)(v18 + 8) = v31;
          *(unsigned char *)(v18 + 16) = v33;
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DCE80858);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v37)
    {
      unint64_t v23 = *(void *)(v38 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v12 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_43;
          }
          if (v12 >= v37) {
            goto LABEL_34;
          }
          unint64_t v23 = *(void *)(v38 + 8 * v12);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v12 = v24;
      goto LABEL_30;
    }
LABEL_34:
    swift_release();
    uint64_t v3 = v36;
    if (v39) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE80874(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86968);
  int v40 = a2;
  uint64_t v9 = sub_1DD048CF8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  int64_t v36 = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    unint64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    char v25 = *(unsigned char *)(*(void *)(v8 + 48) + v20);
    uint64_t v26 = *(void *)(v39 + 72);
    uint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
    if (v40) {
      sub_1DCE8C860(v27, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    }
    else {
      sub_1DCE8C7F8(v27, (uint64_t)v7, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    }
    sub_1DD0490B8();
    sub_1DCD9C35C(v25);
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DD049108();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(unsigned char *)(*(void *)(v10 + 48) + v18) = v25;
    uint64_t result = sub_1DCE8C860((uint64_t)v7, *(void *)(v10 + 56) + v26 * v18, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1DCE80C5C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86978);
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  char v32 = a2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  BOOL v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_31;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          uint64_t v3 = v33;
          if ((v32 & 1) == 0) {
            goto LABEL_38;
          }
          goto LABEL_34;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_40;
            }
            if (v14 >= v11) {
              goto LABEL_31;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_1DD0490B8();
    sub_1DCD9C35C(v22);
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DD049108();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v23;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  unint64_t v19 = (void *)(v5 + 64);
  if ((v32 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE80F58(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03B80);
  uint64_t result = sub_1DD048CF8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v34 = a2;
    int64_t v8 = 0;
    int64_t v36 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v35) {
          goto LABEL_31;
        }
        unint64_t v18 = v36[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v35) {
            goto LABEL_31;
          }
          unint64_t v18 = v36[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v35)
            {
LABEL_31:
              if (v34)
              {
                if (v33 >= 64) {
                  bzero(v36, 8 * v35);
                }
                else {
                  *int64_t v36 = v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v18 = v36[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_39;
                }
                if (v8 >= v35) {
                  goto LABEL_31;
                }
                unint64_t v18 = v36[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      uint64_t v21 = *(void *)(v5 + 56) + 56 * v16;
      uint64_t v22 = *(void *)(v21 + 48);
      long long v37 = *(_OWORD *)(v21 + 16);
      long long v38 = *(_OWORD *)(v21 + 32);
      int v23 = *(_DWORD *)(v21 + 8);
      uint64_t v24 = *(void *)v21;
      uint64_t result = sub_1DD0490A8();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v7 + 48) + 8 * v13) = v20;
      uint64_t v14 = *(void *)(v7 + 56) + 56 * v13;
      *(void *)uint64_t v14 = v24;
      *(_DWORD *)(v14 + 8) = v23;
      *(_OWORD *)(v14 + 16) = v37;
      *(_OWORD *)(v14 + 32) = v38;
      *(void *)(v14 + 48) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE8123C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_1DD048CF8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    int v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    BOOL v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DD0490B8();
    sub_1DD0484F8();
    uint64_t result = sub_1DD049108();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *int64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  int v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1DCE81550(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE850E8);
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v32 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v13 << 6);
    goto LABEL_31;
  }
  int64_t v21 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_42;
  }
  if (v21 >= v11)
  {
    swift_release();
    uint64_t v3 = v32;
    int64_t v22 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_37:
      uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
      if (v30 >= 64) {
        bzero(v22, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *int64_t v22 = -1 << v30;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v33 + 8 * v21);
    ++v13;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v13 = v21 + 1;
    if (v21 + 1 >= v11) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v13);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
      char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      long long v34 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        swift_unknownObjectRetain();
      }
      sub_1DD0490B8();
      sub_1DD0484F8();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_1DD049108();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      while (++v17 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
        if (v28 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
LABEL_8:
          *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v7 + 48) + v18) = v29;
          *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v34;
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x1DCE8192CLL);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v11)
    {
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v13 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_43;
          }
          if (v13 >= v11) {
            goto LABEL_34;
          }
          unint64_t v23 = *(void *)(v33 + 8 * v13);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v13 = v24;
      goto LABEL_30;
    }
LABEL_34:
    swift_release();
    uint64_t v3 = v32;
    if (a2) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE81948(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_1DD046478();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v43 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85108);
  int v42 = a2;
  uint64_t v8 = sub_1DD048CF8();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_40;
  }
  v37[0] = v2;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v39 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  int64_t v38 = (unint64_t)(v10 + 63) >> 6;
  int v40 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  uint64_t v14 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  swift_retain();
  int64_t v16 = 0;
  uint64_t v41 = "orld";
  v37[1] = "animalsMapping";
  while (1)
  {
    if (v13)
    {
      unint64_t v22 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v23 = v22 | (v16 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_41;
    }
    if (v24 >= v38) {
      break;
    }
    unint64_t v25 = v39[v24];
    ++v16;
    if (!v25)
    {
      int64_t v16 = v24 + 1;
      if (v24 + 1 >= v38) {
        break;
      }
      unint64_t v25 = v39[v16];
      if (!v25)
      {
        int64_t v26 = v24 + 2;
        if (v26 >= v38) {
          break;
        }
        unint64_t v25 = v39[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v16 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v16 >= v38) {
              goto LABEL_35;
            }
            unint64_t v25 = v39[v16];
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v16 = v26;
      }
    }
LABEL_30:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_31:
    char v31 = *(unsigned char *)(*(void *)(v7 + 48) + v23);
    uint64_t v32 = v5;
    uint64_t v33 = *(void *)(v5 + 72);
    unint64_t v34 = *(void *)(v7 + 56) + v33 * v23;
    if (v42) {
      (*v14)(v43, v34, v44);
    }
    else {
      (*v40)(v43, v34, v44);
    }
    sub_1DD0490B8();
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1DD049108();
    uint64_t v18 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v27 = 0;
    unint64_t v28 = (unint64_t)(63 - v18) >> 6;
    do
    {
      if (++v20 == v28 && (v27 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        JUMPOUT(0x1DCE81E64);
      }
      BOOL v29 = v20 == v28;
      if (v20 == v28) {
        unint64_t v20 = 0;
      }
      v27 |= v29;
      uint64_t v30 = *(void *)(v15 + 8 * v20);
    }
    while (v30 == -1);
    unint64_t v21 = __clz(__rbit64(~v30)) + (v20 << 6);
LABEL_8:
    *(void *)(v15 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(unsigned char *)(*(void *)(v9 + 48) + v21) = v31;
    (*v14)((char *)(*(void *)(v9 + 56) + v33 * v21), (unint64_t)v43, v44);
    ++*(void *)(v9 + 16);
    uint64_t v5 = v32;
  }
LABEL_35:
  swift_release();
  uint64_t v3 = (uint64_t *)v37[0];
  if (v42)
  {
    uint64_t v35 = 1 << *(unsigned char *)(v7 + 32);
    if (v35 >= 64) {
      bzero(v39, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v39 = -1 << v35;
    }
    *(void *)(v7 + 16) = 0;
  }
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_1DCE81E90(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A08);
  uint64_t result = sub_1DD048CF8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  *unint64_t v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(unsigned int *)(*(void *)(v5 + 48) + 4 * v19);
      unint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = MEMORY[0x1E01AED50](*(void *)(v7 + 40), v27, 4);
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v27;
      uint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *uint64_t v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE8214C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1DD046598();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB02C88);
  int v46 = a2;
  uint64_t v10 = sub_1DD048CF8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  int v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    BOOL v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_1DCE8C748(&qword_1EAB03B88, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1DD048358();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  BOOL v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1DCE82570(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v46 = sub_1DD046598();
  uint64_t v7 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  int v47 = a2;
  uint64_t v11 = sub_1DD048CF8();
  uint64_t v12 = v11;
  if (*(void *)(v10 + 16))
  {
    int v40 = v3;
    uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v14 = *(void *)(v10 + 64);
    int v42 = (void *)(v10 + 64);
    if (v13 < 64) {
      uint64_t v15 = ~(-1 << v13);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v14;
    int64_t v41 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    int v48 = (void (**)(char *, unint64_t, uint64_t))(v7 + 32);
    uint64_t v17 = v11 + 64;
    uint64_t result = swift_retain();
    int64_t v19 = 0;
    uint64_t v44 = v10;
    uint64_t v45 = v9;
    while (1)
    {
      if (v16)
      {
        unint64_t v21 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v22 = v21 | (v19 << 6);
      }
      else
      {
        int64_t v23 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v41) {
          goto LABEL_34;
        }
        unint64_t v24 = v42[v23];
        ++v19;
        if (!v24)
        {
          int64_t v19 = v23 + 1;
          if (v23 + 1 >= v41) {
            goto LABEL_34;
          }
          unint64_t v24 = v42[v19];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v41)
            {
LABEL_34:
              swift_release();
              uint64_t v5 = v40;
              if (v47)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v10 + 32);
                if (v38 >= 64) {
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v42 = -1 << v38;
                }
                *(void *)(v10 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v42[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v19 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v19 >= v41) {
                  goto LABEL_34;
                }
                unint64_t v24 = v42[v19];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v19 = v25;
          }
        }
LABEL_21:
        unint64_t v16 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v19 << 6);
      }
      uint64_t v26 = v7;
      uint64_t v27 = *(void *)(v7 + 72);
      unint64_t v28 = *(void *)(v10 + 48) + v27 * v22;
      unint64_t v29 = v45;
      uint64_t v30 = v46;
      if (v47)
      {
        (*v48)(v45, v28, v46);
        long long v49 = *(_OWORD *)(*(void *)(v10 + 56) + 16 * v22);
      }
      else
      {
        (*v43)(v45, v28, v46);
        long long v49 = *(_OWORD *)(*(void *)(v10 + 56) + 16 * v22);
        swift_retain();
      }
      sub_1DCE8C748(&qword_1EAB03B88, MEMORY[0x1E4F27990]);
      uint64_t result = sub_1DD048358();
      uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v17 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v32) & ~*(void *)(v17 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v17 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v20 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v12 + 48) + v27 * v20, v29, v30);
      *(_OWORD *)(*(void *)(v12 + 56) + 16 * v20) = v49;
      ++*(void *)(v12 + 16);
      uint64_t v7 = v26;
      uint64_t v10 = v44;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v5 = v12;
  return result;
}

uint64_t sub_1DCE8299C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE850D0);
  char v34 = a2;
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v33 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((v34 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v33 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v33 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v34 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DD0490B8();
    sub_1DCD9C35C(v29);
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DD049108();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(unsigned char *)(*(void *)(v7 + 48) + v18) = v29;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v34 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE82CAC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v39 = a2;
  uint64_t v7 = sub_1DD048CF8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  BOOL v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_1DD0490B8();
    sub_1DD0484F8();
    uint64_t result = sub_1DD049108();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

void sub_1DCE82FB8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE869B0);
  uint64_t v6 = (void *)sub_1DD048CF8();
  if (*(void *)(v5 + 16))
  {
    uint64_t v29 = v3;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v14 = v13 | (v12 << 6);
      }
      else
      {
        int64_t v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v15 >= v11) {
          goto LABEL_22;
        }
        unint64_t v16 = v8[v15];
        ++v12;
        if (!v16)
        {
          int64_t v12 = v15 + 1;
          if (v15 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v16 = v8[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_22:
              swift_release();
              uint64_t v3 = v29;
              if (a2)
              {
                uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
                if (v28 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v28;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v16 = v8[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_29;
                }
                if (v12 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v16 = v8[v12];
                ++v17;
                if (v16) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
LABEL_19:
        unint64_t v10 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      unint64_t v18 = (double *)(*(void *)(v5 + 48) + 32 * v14);
      CGFloat v19 = *v18;
      CGFloat v20 = v18[1];
      CGFloat v22 = v18[2];
      CGFloat v21 = v18[3];
      uint64_t v23 = *(void *)(v5 + 56) + 48 * v14;
      long long v25 = *(_OWORD *)v23;
      long long v24 = *(_OWORD *)(v23 + 16);
      uint64_t v27 = *(void *)(v23 + 32);
      uint64_t v26 = *(void *)(v23 + 40);
      if ((a2 & 1) == 0)
      {
        long long v30 = *(_OWORD *)v23;
        long long v31 = *(_OWORD *)(v23 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v25 = v30;
        long long v24 = v31;
      }
      v32[0] = v25;
      v32[1] = v24;
      uint64_t v33 = v27;
      uint64_t v34 = v26;
      sub_1DCE875C4(v32, v6, v19, v20, v22, v21);
    }
  }
  swift_release();
  *uint64_t v3 = v6;
}

unint64_t sub_1DCE831F4(uint64_t a1, char a2)
{
  return sub_1DCE8444C(a1, a2, (uint64_t *)&unk_1EBE850F8);
}

unint64_t sub_1DCE83200(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02CF8);
  uint64_t v6 = (void *)sub_1DD048CF8();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_20;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_20;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_20:
              swift_release();
              if (a2)
              {
                uint64_t v19 = 1 << *(unsigned char *)(v5 + 32);
                if (v19 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v19;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_27;
                }
                if (v13 >= v11) {
                  goto LABEL_20;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      unint64_t result = sub_1DCE87740(*(void *)(*(void *)(v5 + 56) + 8 * v15), v6, *(double *)(*(void *)(v5 + 48) + 24 * v15), *(double *)(*(void *)(v5 + 48) + 24 * v15 + 8), *(double *)(*(void *)(v5 + 48) + 24 * v15 + 16));
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1DCE833D8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86980);
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_40;
    }
    if (v20 >= v31) {
      break;
    }
    unint64_t v21 = v32[v20];
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v31) {
        break;
      }
      unint64_t v21 = v32[v12];
      if (!v21)
      {
        int64_t v22 = v20 + 2;
        if (v22 >= v31) {
          break;
        }
        unint64_t v21 = v32[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v12 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_41;
            }
            if (v12 >= v31) {
              goto LABEL_34;
            }
            unint64_t v21 = v32[v12];
            ++v22;
            if (v21) {
              goto LABEL_30;
            }
          }
        }
        int64_t v12 = v22;
      }
    }
LABEL_30:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_31:
    char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((a2 & 1) == 0) {
      swift_retain();
    }
    sub_1DD0490B8();
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t v13 = sub_1DD049108();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v14) >> 6;
    do
    {
      if (++v16 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x1DCE8379CLL);
      }
      BOOL v25 = v16 == v24;
      if (v16 == v24) {
        unint64_t v16 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v11 + 8 * v16);
    }
    while (v26 == -1);
    unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
LABEL_8:
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v27;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v28;
    ++*(void *)(v7 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v3 = v2;
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    if (v29 >= 64) {
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v32 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE837B8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE850C8);
  char v38 = a2;
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v36[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v36[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v38)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v36[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v36[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      uint64_t v29 = *(void *)(v5 + 56) + 40 * v20;
      uint64_t v31 = *(void *)v29;
      uint64_t v30 = *(void *)(v29 + 8);
      uint64_t v32 = *(void *)(v29 + 16);
      uint64_t v33 = *(void *)(v29 + 24);
      char v39 = *(unsigned char *)(v29 + 32);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1DD0490B8();
      sub_1DCD9C35C(v28);
      sub_1DD0484F8();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1DD049108();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
      uint64_t v18 = *(void *)(v7 + 56) + 40 * v17;
      *(void *)uint64_t v18 = v31;
      *(void *)(v18 + 8) = v30;
      *(void *)(v18 + 16) = v32;
      *(void *)(v18 + 24) = v33;
      *(unsigned char *)(v18 + 32) = v39;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE83B00(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82C60);
  char v37 = a2;
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DD0490B8();
    sub_1DD0484F8();
    uint64_t result = sub_1DD049108();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE83E0C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE850D8);
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  char v32 = a2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_31;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          uint64_t v3 = v33;
          if ((v32 & 1) == 0) {
            goto LABEL_38;
          }
          goto LABEL_34;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_40;
            }
            if (v14 >= v11) {
              goto LABEL_31;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    int v23 = *(_DWORD *)(*(void *)(v5 + 56) + 4 * v17);
    sub_1DD0490B8();
    sub_1DCD9C35C(v22);
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DD049108();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    *(_DWORD *)(*(void *)(v7 + 56) + 4 * v15) = v23;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  unint64_t v19 = (void *)(v5 + 64);
  if ((v32 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE84108(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v7 = sub_1DD048CF8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v34 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  char v32 = v3;
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v18 >= v33) {
      break;
    }
    unint64_t v19 = (void *)(v6 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v33) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v33)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v33) {
              goto LABEL_33;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v6 + 48) + v17);
    uint64_t v23 = *(void *)(*(void *)(v6 + 56) + 8 * v17);
    if ((a2 & 1) == 0) {
      swift_retain();
    }
    sub_1DD0490B8();
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DD049108();
    uint64_t v24 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v8 + 48) + v15) = v22;
    *(void *)(*(void *)(v8 + 56) + 8 * v15) = v23;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v32;
  unint64_t v19 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v31;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

unint64_t sub_1DCE84440(uint64_t a1, char a2)
{
  return sub_1DCE8444C(a1, a2, &qword_1EAB03B90);
}

unint64_t sub_1DCE8444C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v7 = (void *)sub_1DD048CF8();
  if (*(void *)(v6 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v9 = (void *)(v6 + 64);
    uint64_t v10 = -1;
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    unint64_t v11 = v10 & *(void *)(v6 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v14 << 6);
      }
      else
      {
        int64_t v17 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_22;
        }
        unint64_t v18 = v9[v17];
        ++v14;
        if (!v18)
        {
          int64_t v14 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_22;
          }
          unint64_t v18 = v9[v14];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v26 = 1 << *(unsigned char *)(v6 + 32);
                if (v26 > 63) {
                  bzero((void *)(v6 + 64), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v9 = -1 << v26;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v18 = v9[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v14 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_29;
                }
                if (v14 >= v12) {
                  goto LABEL_22;
                }
                unint64_t v18 = v9[v14];
                ++v19;
                if (v18) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v14 = v19;
          }
        }
LABEL_19:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
      }
      unint64_t v20 = (double *)(*(void *)(v6 + 48) + 32 * v16);
      CGFloat v22 = *v20;
      CGFloat v21 = v20[1];
      CGFloat v24 = v20[2];
      CGFloat v23 = v20[3];
      uint64_t v25 = *(void *)(*(void *)(v6 + 56) + 8 * v16);
      if ((a2 & 1) == 0) {
        uint64_t v25 = swift_bridgeObjectRetain();
      }
      unint64_t result = sub_1DCE87838(v25, v7, v22, v21, v24, v23);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v4 = v7;
  return result;
}

uint64_t sub_1DCE84640(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE869B8);
  char v36 = a2;
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    CGFloat v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1DD0490B8();
    sub_1DD0484F8();
    uint64_t result = sub_1DD049108();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  CGFloat v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *CGFloat v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE84958(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v35 = a2;
  uint64_t v7 = sub_1DD048CF8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v34 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_8:
  if (v11)
  {
    unint64_t v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v16 = v15 | (v13 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_41;
  }
  if (v17 >= v33)
  {
    swift_release();
    unint64_t v18 = (void *)(v6 + 64);
    if (v35)
    {
LABEL_36:
      uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
      if (v31 >= 64) {
        bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v18 = -1 << v31;
      }
      *(void *)(v6 + 16) = 0;
    }
  }
  else
  {
    unint64_t v18 = (void *)(v6 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v13 = v17 + 1;
    if (v17 + 1 >= v33) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v13);
    if (v19)
    {
LABEL_21:
      unint64_t v11 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
      char v21 = *(unsigned char *)(*(void *)(v6 + 48) + v16);
      uint64_t v22 = *(void *)(*(void *)(v6 + 56) + 8 * v16);
      if ((v35 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1DD0490B8();
      sub_1DD0484F8();
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_1DD049108();
      uint64_t v24 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v28 || (v27 & 1) == 0)
      {
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
        if (v30 != -1)
        {
          unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
          *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
          *(unsigned char *)(*(void *)(v8 + 48) + v14) = v21;
          *(void *)(*(void *)(v8 + 56) + 8 * v14) = v22;
          ++*(void *)(v8 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x1DCE84D20);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v33)
    {
      unint64_t v19 = *(void *)(v34 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v13 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_42;
          }
          if (v13 >= v33) {
            goto LABEL_33;
          }
          unint64_t v19 = *(void *)(v34 + 8 * v13);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v13 = v20;
      goto LABEL_21;
    }
LABEL_33:
    swift_release();
    if (v35) {
      goto LABEL_36;
    }
  }
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1DCE84D34(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE87160);
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  char v32 = a2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_31;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          uint64_t v3 = v33;
          if ((v32 & 1) == 0) {
            goto LABEL_38;
          }
          goto LABEL_34;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_40;
            }
            if (v14 >= v11) {
              goto LABEL_31;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_1DD0490B8();
    sub_1DCFD8BF4(v22);
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DD049108();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v23;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  unint64_t v19 = (void *)(v5 + 64);
  if ((v32 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1DCE85030(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87158);
  char v37 = a2;
  uint64_t v6 = sub_1DD048CF8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v20);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1DD0490B8();
    sub_1DCFD8BF4(v29);
    sub_1DD0484F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DD049108();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v29;
    int64_t v18 = (void *)(*(void *)(v7 + 56) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  char v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_1DCE85354(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1DCEAD1A4(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1DCE87E8C();
      goto LABEL_7;
    }
    sub_1DCE7CFE8(v15, a4 & 1);
    unint64_t v21 = sub_1DCEAD1A4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      int64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1DD049028();
    __break(1u);
    return result;
  }
LABEL_7:
  int64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_1DCD9E7E8(a1, v19);
  }
LABEL_13:
  sub_1DCE879A0(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1DCE854A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1DCEAD1A4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1DCE8805C();
LABEL_7:
    int64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1DCE7D2D0(v15, a4 & 1);
  unint64_t v21 = sub_1DCEAD1A4(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1DD049028();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  int64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCE85618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1DCEAD1A4(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1DCE88928();
LABEL_7:
    unint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      void *v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_1DCE7E3A8(v17, a5 & 1);
  unint64_t v23 = sub_1DCEAD1A4(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1DD049028();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  BOOL v25 = (uint64_t *)(v20[6] + 16 * v14);
  *BOOL v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCE857A0(uint64_t a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v7 = (void **)v6;
  unint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_1DCEAD508(a3, a4, a5, a6);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a2 & 1) != 0)
  {
LABEL_7:
    char v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t v24 = type metadata accessor for VisualUnderstanding.ImageRegion();
      return sub_1DCE8C790(a1, v23 + *(void *)(*(void *)(v24 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a2 & 1) == 0)
  {
    sub_1DCE88AE4();
    goto LABEL_7;
  }
  sub_1DCE7E6D0(v19, a2 & 1);
  unint64_t v26 = sub_1DCEAD508(a3, a4, a5, a6);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_15:
    uint64_t result = sub_1DD049028();
    __break(1u);
    return result;
  }
  unint64_t v16 = v26;
  char v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_1DCE87A0C(v16, a1, v22, a3, a4, a5, a6);
}

uint64_t sub_1DCE85920(uint64_t a1, uint64_t a2, char a3, float a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1DCEAD1A4(a1, a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DCE88D74();
LABEL_7:
    BOOL v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(float *)(v18[7] + 4 * v12) = a4;
      return result;
    }
    goto LABEL_11;
  }
  sub_1DCE7E984(result, a3 & 1);
  uint64_t result = sub_1DCEAD1A4(a1, a2);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1DD049028();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  BOOL v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v20 = (uint64_t *)(v18[6] + 16 * v12);
  *char v20 = a1;
  v20[1] = a2;
  *(float *)(v18[7] + 4 * v12) = a4;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v23;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCE85A88(uint64_t a1, uint64_t a2, char a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  uint64_t v8 = v7;
  uint64_t v16 = *v7;
  unint64_t v18 = sub_1DCEAD508(a4, a5, a6, a7);
  uint64_t v19 = *(void *)(v16 + 16);
  BOOL v20 = (v17 & 1) == 0;
  uint64_t result = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v22 = v17;
  uint64_t v23 = *(void *)(v16 + 24);
  if (v23 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v23 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DCE88F24();
LABEL_7:
    uint64_t v24 = (void *)*v8;
    if (v22)
    {
LABEL_8:
      BOOL v25 = (void *)(v24[7] + 16 * v18);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *BOOL v25 = a1;
      v25[1] = a2;
      return result;
    }
LABEL_11:
    v24[(v18 >> 6) + 8] |= 1 << v18;
    char v27 = (double *)(v24[6] + 32 * v18);
    double *v27 = a4;
    v27[1] = a5;
    v27[2] = a6;
    v27[3] = a7;
    BOOL v28 = (void *)(v24[7] + 16 * v18);
    *BOOL v28 = a1;
    v28[1] = a2;
    uint64_t v29 = v24[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (!v30)
    {
      v24[2] = v31;
      return result;
    }
    goto LABEL_14;
  }
  sub_1DCE7F0B0(result, a3 & 1);
  uint64_t result = sub_1DCEAD508(a4, a5, a6, a7);
  if ((v22 & 1) == (v26 & 1))
  {
    unint64_t v18 = result;
    uint64_t v24 = (void *)*v8;
    if (v22) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCE85BFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DCE86034(a1, a2, a3, a4, &qword_1EBE85128);
}

uint64_t sub_1DCE85C08(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1DCEAFD4C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for StorefrontSignals(0);
      return sub_1DCE8C790(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, type metadata accessor for StorefrontSignals);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1DCE899DC();
    goto LABEL_7;
  }
  sub_1DCE800BC(v13, a3 & 1);
  unint64_t v20 = sub_1DCEAFD4C(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_1DD049028();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_1DCE87B68(v10, a2, a1, v16);
}

uint64_t sub_1DCE85D5C(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1DCEAD624(a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a5 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DCE89C60();
LABEL_7:
    unint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 24 * v14;
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)uint64_t v21 = a1;
      *(void *)(v21 + 8) = a2;
      *(unsigned char *)(v21 + 16) = a3;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(unsigned char *)(v20[6] + v14) = a4;
    uint64_t v23 = v20[7] + 24 * v14;
    *(void *)uint64_t v23 = a1;
    *(void *)(v23 + 8) = a2;
    *(unsigned char *)(v23 + 16) = a3;
    uint64_t v24 = v20[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (!v25)
    {
      v20[2] = v26;
      return result;
    }
    goto LABEL_14;
  }
  sub_1DCE80454(result, a5 & 1);
  uint64_t result = sub_1DCEAD624(a4);
  if ((v18 & 1) == (v22 & 1))
  {
    unint64_t v14 = result;
    unint64_t v20 = (void *)*v6;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCE85EB8(uint64_t a1, unsigned __int8 a2, char a3)
{
  return sub_1DCE86C34(a1, a2, a3, (uint64_t *)&unk_1EBE869A0);
}

uint64_t sub_1DCE85EC4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1DCEAD4C8(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DCE8A21C();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7] + 56 * v10;
      long long v18 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)a1;
      *(_OWORD *)(v17 + 16) = v18;
      *(_OWORD *)(v17 + 32) = *(_OWORD *)(a1 + 32);
      *(void *)(v17 + 48) = *(void *)(a1 + 48);
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(void *)(v16[6] + 8 * v10) = a2;
    uint64_t v20 = v16[7] + 56 * v10;
    long long v21 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)a1;
    *(_OWORD *)(v20 + 16) = v21;
    *(_OWORD *)(v20 + 32) = *(_OWORD *)(a1 + 32);
    *(void *)(v20 + 48) = *(void *)(a1 + 48);
    uint64_t v22 = v16[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      void v16[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1DCE80F58(result, a3 & 1);
  uint64_t result = sub_1DCEAD4C8(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCE86028(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DCE86034(a1, a2, a3, a4, &qword_1EBE85120);
}

uint64_t sub_1DCE86034(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1DCEAD1A4(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1DCE8A3D4(a5);
LABEL_7:
    uint64_t v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1DCE8123C(v17, a4 & 1, a5);
  unint64_t v23 = sub_1DCEAD1A4(a2, a3);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1DD049028();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  BOOL v25 = (uint64_t *)(v20[6] + 16 * v14);
  *BOOL v25 = a2;
  v25[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v26 = v20[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v28;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCE861BC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1DCEAD428(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1DCE8A72C();
      goto LABEL_7;
    }
    sub_1DCE81948(v13, a3 & 1);
    uint64_t v24 = sub_1DCEAD428(a2);
    if ((v14 & 1) == (v25 & 1))
    {
      unint64_t v10 = v24;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1DD049028();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = sub_1DD046478();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v21 = v18;
    uint64_t v22 = v17 + *(void *)(v19 + 72) * v10;
    return v20(v22, a1, v21);
  }
LABEL_13:
  return sub_1DCE87C10(v10, a2, a1, v16);
}

uint64_t sub_1DCE86324(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1DD046598();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_1DCEAD840(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1DCE8AB68();
    goto LABEL_7;
  }
  sub_1DCE8214C(v17, a3 & 1);
  unint64_t v23 = sub_1DCEAD840(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_1DD049028();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1DCE87CBC(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1DCE864CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DCE8667C(a1, a2, a3, a4, &qword_1EAB02CF0);
}

uint64_t sub_1DCE864D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DCE8667C(a1, a2, a3, a4, &qword_1EAB02CE0);
}

uint64_t sub_1DCE864E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DCE8667C(a1, a2, a3, a4, &qword_1EAB02CE8);
}

void sub_1DCE864F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1DCEAD1A4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1DCE8AFC8((uint64_t *)&unk_1EBE869E0);
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1DCE82CAC(v15, a4 & 1, (uint64_t *)&unk_1EBE869E0);
  unint64_t v20 = sub_1DCEAD1A4(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1DD049028();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v25;
  swift_bridgeObjectRetain();
}

uint64_t sub_1DCE86670(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1DCE8667C(a1, a2, a3, a4, (uint64_t *)&unk_1EAB02C78);
}

uint64_t sub_1DCE8667C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = (void **)v5;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v10 = sub_1DD046598();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v14 = (void *)*v5;
  unint64_t v16 = sub_1DCEAD840(a3);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = (void *)(v22[7] + 16 * v16);
      uint64_t result = swift_release();
      uint64_t v25 = v29;
      *uint64_t v23 = v28;
      v23[1] = v25;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    sub_1DCE8B180(a5);
    goto LABEL_7;
  }
  sub_1DCE82570(v19, a4 & 1, a5);
  unint64_t v26 = sub_1DCEAD840(a3);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_14:
    uint64_t result = sub_1DD049028();
    __break(1u);
    return result;
  }
  unint64_t v16 = v26;
  uint64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  return sub_1DCE87D74(v16, (uint64_t)v13, v28, v29, v22);
}

uint64_t sub_1DCE8683C(long long *a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1DCEAD508(a3, a4, a5, a6);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 < result || (a2 & 1) == 0)
  {
    if (v21 < result || (a2 & 1) != 0)
    {
      sub_1DCE82FB8(result, a2 & 1);
      uint64_t result = sub_1DCEAD508(a3, a4, a5, a6);
      if ((v20 & 1) != (v24 & 1))
      {
LABEL_17:
        uint64_t result = sub_1DD049028();
        __break(1u);
        return result;
      }
      unint64_t v16 = result;
      uint64_t v22 = (void *)*v7;
      if (v20) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    uint64_t result = (uint64_t)sub_1DCE8B424();
  }
  uint64_t v22 = (void *)*v7;
  if ((v20 & 1) == 0)
  {
LABEL_13:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    uint64_t v25 = (double *)(v22[6] + 32 * v16);
    *uint64_t v25 = a3;
    v25[1] = a4;
    v25[2] = a5;
    v25[3] = a6;
    unint64_t v26 = (_OWORD *)(v22[7] + 48 * v16);
    long long v27 = *a1;
    long long v28 = a1[2];
    v26[1] = a1[1];
    v26[2] = v28;
    *unint64_t v26 = v27;
    uint64_t v29 = v22[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (!v30)
    {
      v22[2] = v31;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v23 = v22[7] + 48 * v16;
  return sub_1DCE8C68C((uint64_t)a1, v23);
}

uint64_t sub_1DCE869D0(int a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1DCEAD454(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DCE8BB20();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(_DWORD *)(v16[7] + 4 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(_DWORD *)(v16[7] + 4 * v10) = a1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      void v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1DCE83E0C(result, a3 & 1);
  uint64_t result = sub_1DCEAD454(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    unint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCE86AFC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1DCEAD454(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DCE8A08C();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      void v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1DCE80C5C(result, a3 & 1);
  uint64_t result = sub_1DCEAD454(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    unint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCE86C28(uint64_t a1, unsigned __int8 a2, char a3)
{
  return sub_1DCE86C34(a1, a2, a3, &qword_1EBE86998);
}

uint64_t sub_1DCE86C34(uint64_t a1, unsigned __int8 a2, char a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1DCEAD780(a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DCE8BCB0(a4);
LABEL_7:
    uint64_t v18 = (void *)*v6;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a2;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v21 = v18[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      void v18[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_1DCE84108(result, a3 & 1, a4);
  uint64_t result = sub_1DCEAD780(a2);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v6;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCE86D78(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1DCEAD1A4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1DCE8BFFC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1DCE84640(v15, a4 & 1);
  unint64_t v21 = sub_1DCEAD1A4(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1DD049028();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1DCE86EE8(uint64_t a1, unsigned __int8 a2, char a3)
{
  return sub_1DCE86F00(a1, a2, a3, &qword_1EBE87178);
}

uint64_t sub_1DCE86EF4(uint64_t a1, unsigned __int8 a2, char a3)
{
  return sub_1DCE86F00(a1, a2, a3, &qword_1EBE87170);
}

uint64_t sub_1DCE86F00(uint64_t a1, unsigned __int8 a2, char a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1DCEAD2F0(a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DCE8C1B4(a4);
LABEL_7:
    uint64_t v18 = (void *)*v6;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a2;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v21 = v18[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      void v18[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_1DCE84958(result, a3 & 1, a4);
  uint64_t result = sub_1DCEAD2F0(a2);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v6;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCE87044(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1DCEADA48(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DCE8C350();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      void v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1DCE84D34(result, a3 & 1);
  uint64_t result = sub_1DCEADA48(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCE87170(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1DCEADA48(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1DCE8C4E0();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      BOOL v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *BOOL v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a3;
    uint64_t v21 = (void *)(v18[7] + 16 * v12);
    void *v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      void v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1DCE85030(result, a4 & 1);
  uint64_t result = sub_1DCEADA48(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCE872B0(uint64_t a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  sub_1DD0490B8();
  v17.origin.CGFloat x = a3;
  v17.origin.CGFloat y = a4;
  v17.size.width = a5;
  v17.size.height = a6;
  CGRectGetMinX(v17);
  sub_1DD0490F8();
  v18.origin.CGFloat x = a3;
  v18.origin.CGFloat y = a4;
  v18.size.width = a5;
  v18.size.height = a6;
  CGRectGetMaxX(v18);
  sub_1DD0490F8();
  v19.origin.CGFloat x = a3;
  v19.origin.CGFloat y = a4;
  v19.size.width = a5;
  v19.size.height = a6;
  CGRectGetMinY(v19);
  sub_1DD0490F8();
  v20.origin.CGFloat x = a3;
  v20.origin.CGFloat y = a4;
  v20.size.width = a5;
  v20.size.height = a6;
  CGRectGetMaxY(v20);
  sub_1DD0490F8();
  sub_1DD049108();
  unint64_t v12 = sub_1DD048B08();
  *(void *)((char *)a2 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
  uint64_t v13 = (double *)(a2[6] + 32 * v12);
  *uint64_t v13 = a3;
  v13[1] = a4;
  void v13[2] = a5;
  v13[3] = a6;
  uint64_t v14 = a2[7];
  uint64_t v15 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t result = sub_1DCE8C860(a1, v14 + *(void *)(*(void *)(v15 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  ++a2[2];
  return result;
}

unint64_t sub_1DCE87454(uint64_t a1, uint64_t a2, void *a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  sub_1DD0490B8();
  v17.origin.CGFloat x = a4;
  v17.origin.CGFloat y = a5;
  v17.size.width = a6;
  v17.size.height = a7;
  CGRectGetMinX(v17);
  sub_1DD0490F8();
  v18.origin.CGFloat x = a4;
  v18.origin.CGFloat y = a5;
  v18.size.width = a6;
  v18.size.height = a7;
  CGRectGetMaxX(v18);
  sub_1DD0490F8();
  v19.origin.CGFloat x = a4;
  v19.origin.CGFloat y = a5;
  v19.size.width = a6;
  v19.size.height = a7;
  CGRectGetMinY(v19);
  sub_1DD0490F8();
  v20.origin.CGFloat x = a4;
  v20.origin.CGFloat y = a5;
  v20.size.width = a6;
  v20.size.height = a7;
  CGRectGetMaxY(v20);
  sub_1DD0490F8();
  sub_1DD049108();
  unint64_t result = sub_1DD048B08();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v15 = (double *)(a3[6] + 32 * result);
  *uint64_t v15 = a4;
  v15[1] = a5;
  v15[2] = a6;
  v15[3] = a7;
  char v16 = (void *)(a3[7] + 16 * result);
  *char v16 = a1;
  v16[1] = a2;
  ++a3[2];
  return result;
}

__n128 sub_1DCE875C4(long long *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  sub_1DD0490B8();
  v18.origin.CGFloat x = a3;
  v18.origin.CGFloat y = a4;
  v18.size.width = a5;
  v18.size.height = a6;
  CGRectGetMinX(v18);
  sub_1DD0490F8();
  v19.origin.CGFloat x = a3;
  v19.origin.CGFloat y = a4;
  v19.size.width = a5;
  v19.size.height = a6;
  CGRectGetMaxX(v19);
  sub_1DD0490F8();
  v20.origin.CGFloat x = a3;
  v20.origin.CGFloat y = a4;
  v20.size.width = a5;
  v20.size.height = a6;
  CGRectGetMinY(v20);
  sub_1DD0490F8();
  v21.origin.CGFloat x = a3;
  v21.origin.CGFloat y = a4;
  v21.size.width = a5;
  v21.size.height = a6;
  CGRectGetMaxY(v21);
  sub_1DD0490F8();
  sub_1DD049108();
  unint64_t v12 = sub_1DD048B08();
  *(void *)((char *)a2 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
  uint64_t v13 = (double *)(a2[6] + 32 * v12);
  *uint64_t v13 = a3;
  v13[1] = a4;
  void v13[2] = a5;
  v13[3] = a6;
  uint64_t v14 = a2[7] + 48 * v12;
  long long v15 = a1[2];
  long long v17 = *a1;
  __n128 result = (__n128)a1[1];
  *(__n128 *)(v14 + 16) = result;
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)uint64_t v14 = v17;
  ++a2[2];
  return result;
}

unint64_t sub_1DCE87740(uint64_t a1, void *a2, double a3, double a4, double a5)
{
  sub_1DD0490B8();
  sub_1DD0490F8();
  sub_1DD049108();
  unint64_t result = sub_1DD048B08();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  char v11 = (double *)(a2[6] + 24 * result);
  *char v11 = a3;
  v11[1] = a4;
  v11[2] = a5;
  *(void *)(a2[7] + 8 * result) = a1;
  ++a2[2];
  return result;
}

unint64_t sub_1DCE87838(uint64_t a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  sub_1DD0490B8();
  v14.origin.CGFloat x = a3;
  v14.origin.CGFloat y = a4;
  v14.size.width = a5;
  v14.size.height = a6;
  CGRectGetMinX(v14);
  sub_1DD0490F8();
  v15.origin.CGFloat x = a3;
  v15.origin.CGFloat y = a4;
  v15.size.width = a5;
  v15.size.height = a6;
  CGRectGetMaxX(v15);
  sub_1DD0490F8();
  v16.origin.CGFloat x = a3;
  v16.origin.CGFloat y = a4;
  v16.size.width = a5;
  v16.size.height = a6;
  CGRectGetMinY(v16);
  sub_1DD0490F8();
  v17.origin.CGFloat x = a3;
  v17.origin.CGFloat y = a4;
  v17.size.width = a5;
  v17.size.height = a6;
  CGRectGetMaxY(v17);
  sub_1DD0490F8();
  sub_1DD049108();
  unint64_t result = sub_1DD048B08();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v13 = (double *)(a2[6] + 32 * result);
  *uint64_t v13 = a3;
  v13[1] = a4;
  void v13[2] = a5;
  v13[3] = a6;
  *(void *)(a2[7] + 8 * result) = a1;
  ++a2[2];
  return result;
}

_OWORD *sub_1DCE879A0(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  unint64_t result = sub_1DCD9E7E8(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1DCE87A0C(unint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7)
{
  a3[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = (double *)(a3[6] + 32 * a1);
  *uint64_t v10 = a4;
  v10[1] = a5;
  id v10[2] = a6;
  v10[3] = a7;
  uint64_t v11 = a3[7];
  uint64_t v12 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t result = sub_1DCE8C860(a2, v11 + *(void *)(*(void *)(v12 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  uint64_t v14 = a3[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a3[2] = v16;
  }
  return result;
}

uint64_t sub_1DCE87ABC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for LandmarkSignals(0);
  uint64_t result = sub_1DCE8C860(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, type metadata accessor for LandmarkSignals);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_1DCE87B68(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for StorefrontSignals(0);
  uint64_t result = sub_1DCE8C860(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, type metadata accessor for StorefrontSignals);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_1DCE87C10(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_1DD046478();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_1DCE87CBC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1DD046598();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1DCE87D74(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = sub_1DD046598();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  uint64_t v13 = (void *)(a5[7] + 16 * a1);
  *uint64_t v13 = a3;
  v13[1] = a4;
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

unint64_t sub_1DCE87E34(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  uint64_t v4 = a4[7] + 40 * result;
  long long v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 16) = v5;
  *(unsigned char *)(v4 + 32) = *(unsigned char *)(a3 + 32);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void *sub_1DCE87E8C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87200);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_26:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_28;
    }
    if (v9 >= v13)
    {
LABEL_24:
      uint64_t result = (void *)swift_release();
      uint64_t v1 = v25;
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    if (!v23) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    CGRect v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1DCD21A28(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    CGRect v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    sub_1DCD9E7E8(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8805C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85118);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    CGRect v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    CGRect v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE88214()
{
  return sub_1DCE892D4(type metadata accessor for Argos_Protos_MLModel_FeatureDescription, (uint64_t *)&unk_1EAB02CD0, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
}

void *sub_1DCE88248()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB039A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    int v16 = *(_DWORD *)(*(void *)(v2 + 56) + 4 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_DWORD *)(*(void *)(v4 + 56) + 4 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE883D8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE869F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 56) + v16);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = *(_DWORD *)(*(void *)(v2 + 48) + v16);
    *(_DWORD *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE88568()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE853B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v33 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v13) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v6 + 8 * v33);
    ++v9;
    if (!v34)
    {
      int64_t v9 = v33 + 1;
      if (v33 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v34 = *(void *)(v6 + 8 * v9);
      if (!v34) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v34 - 1) & v34;
    unint64_t v15 = __clz(__rbit64(v34)) + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    int v17 = (long long *)(*(void *)(v2 + 56) + 160 * v15);
    long long v18 = v17[2];
    long long v19 = v17[3];
    long long v20 = v17[5];
    long long v40 = v17[4];
    long long v41 = v20;
    long long v39 = v19;
    long long v22 = v17[7];
    long long v21 = v17[8];
    long long v23 = v17[6];
    *(_OWORD *)((char *)v44 + 13) = *(long long *)((char *)v17 + 141);
    long long v43 = v22;
    v44[0] = v21;
    long long v42 = v23;
    long long v24 = v17[1];
    long long v36 = *v17;
    long long v37 = v24;
    long long v38 = v18;
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v16;
    BOOL v25 = (_OWORD *)(*(void *)(v4 + 56) + 160 * v15);
    long long v26 = v37;
    *BOOL v25 = v36;
    v25[1] = v26;
    long long v27 = v38;
    long long v28 = v39;
    long long v29 = v41;
    v25[4] = v40;
    v25[5] = v29;
    v25[2] = v27;
    v25[3] = v28;
    long long v30 = v42;
    long long v31 = v43;
    long long v32 = v44[0];
    *(_OWORD *)((char *)v25 + 141) = *(_OWORD *)((char *)v44 + 13);
    v25[7] = v31;
    v25[8] = v32;
    v25[6] = v30;
    uint64_t result = (void *)sub_1DCD32CC8((uint64_t)&v36);
  }
  int64_t v35 = v33 + 2;
  if (v35 >= v13) {
    goto LABEL_26;
  }
  unint64_t v34 = *(void *)(v6 + 8 * v35);
  if (v34)
  {
    int64_t v9 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v6 + 8 * v9);
    ++v35;
    if (v34) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE88784()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C70);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE88928()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85110);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    int64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    long long v23 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v23 = v19;
    v23[1] = v18;
    long long v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE88AE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C38);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DD048CE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  long long v28 = v1;
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v15) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v25);
    ++v11;
    if (!v26)
    {
      int64_t v11 = v25 + 1;
      if (v25 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v26 = *(void *)(v9 + 8 * v11);
      if (!v26) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v26 - 1) & v26;
    unint64_t v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 32 * v17;
    uint64_t v19 = *(void *)(v5 + 56);
    uint64_t v20 = *(void *)(v5 + 48) + 32 * v17;
    long long v30 = *(_OWORD *)v20;
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v22 = *(void *)(v20 + 24);
    unint64_t v23 = *(void *)(v29 + 72) * v17;
    sub_1DCE8C7F8(v19 + v23, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v24 = *(void *)(v7 + 48) + v18;
    *(_OWORD *)uint64_t v24 = v30;
    *(void *)(v24 + 16) = v21;
    *(void *)(v24 + 24) = v22;
    uint64_t result = (void *)sub_1DCE8C860((uint64_t)v4, *(void *)(v7 + 56) + v23, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v15)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v28;
    goto LABEL_25;
  }
  unint64_t v26 = *(void *)(v9 + 8 * v27);
  if (v26)
  {
    int64_t v11 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v9 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DCE88D74()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE869C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 4 * v15;
    int v20 = *(_DWORD *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(_DWORD *)(*(void *)(v4 + 56) + v19) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE88F24()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB02CA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    unint64_t v17 = (_OWORD *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = (_OWORD *)(*(void *)(v4 + 48) + v16);
    long long v20 = v17[1];
    long long v21 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *uint64_t v19 = *v17;
    v19[1] = v20;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE890F0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE869F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    int64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *int64_t v22 = v21;
    v22[1] = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE892A0()
{
  return sub_1DCE892D4(type metadata accessor for LandmarkSignals, &qword_1EAB02C48, type metadata accessor for LandmarkSignals);
}

void *sub_1DCE892D4(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = a1(0);
  uint64_t v33 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v30 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  long long v30 = v3;
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1DD048CE8();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v30 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 64);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13) {
    uint64_t result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  }
  uint64_t v31 = v9 + 64;
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 64);
  int64_t v32 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v32) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v27);
    ++v15;
    if (!v28)
    {
      int64_t v15 = v27 + 1;
      if (v27 + 1 >= v32) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v31 + 8 * v15);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v20 = __clz(__rbit64(v28)) + (v15 << 6);
LABEL_12:
    uint64_t v21 = 16 * v20;
    int64_t v22 = (uint64_t *)(*(void *)(v9 + 48) + 16 * v20);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    unint64_t v25 = *(void *)(v33 + 72) * v20;
    sub_1DCE8C7F8(*(void *)(v9 + 56) + v25, (uint64_t)v8, a3);
    unint64_t v26 = (void *)(*(void *)(v11 + 48) + v21);
    *unint64_t v26 = v23;
    v26[1] = v24;
    sub_1DCE8C860((uint64_t)v8, *(void *)(v11 + 56) + v25, a3);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v32) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v31 + 8 * v29);
  if (v28)
  {
    int64_t v15 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v15 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v15);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE89548()
{
  return sub_1DCE8A3D4(&qword_1EBE85128);
}

void *sub_1DCE89554()
{
  uint64_t v38 = sub_1DD0465D8();
  uint64_t v1 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  long long v37 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C28);
  int64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1DD048CE8();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v40 = v4;
  if (!v5)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v30 = v40;
    int64_t v29 = v32;
LABEL_25:
    *int64_t v29 = v30;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v40;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v39 = v3;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v35 = v1 + 32;
  uint64_t v36 = v1 + 16;
  unint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v15 = v40;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v9 << 6);
      uint64_t v18 = v39;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v18 = v39;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v17 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v14, *(void *)(v18 + 48) + v19, v13);
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v21 = 16 * v17;
    int64_t v22 = (uint64_t *)(v20 + 16 * v17);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v15 + 48) + v19, v14, v13);
    unint64_t v25 = (void *)(*(void *)(v15 + 56) + v21);
    *unint64_t v25 = v23;
    v25[1] = v24;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    int64_t v29 = v32;
    uint64_t v30 = v40;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DCE8982C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C50);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE899DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StorefrontSignals(0);
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB02C60);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DD048CE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v19 = *(void *)(v26 + 72) * v16;
    sub_1DCE8C7F8(*(void *)(v5 + 56) + v19, (uint64_t)v4, type metadata accessor for StorefrontSignals);
    *(void *)(*(void *)(v7 + 48) + v17) = v18;
    uint64_t result = (void *)sub_1DCE8C860((uint64_t)v4, *(void *)(v7 + 56) + v19, type metadata accessor for StorefrontSignals);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1DCE89C54()
{
  return sub_1DCE8AFC8(&qword_1EBE869D8);
}

void *sub_1DCE89C60()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE850F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 24 * v15;
    uint64_t v18 = *(void *)v16;
    uint64_t v17 = *(void *)(v16 + 8);
    LOBYTE(v16) = *(unsigned char *)(v16 + 16);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v19 = *(void *)(v4 + 56) + 24 * v15;
    *(void *)uint64_t v19 = v18;
    *(void *)(v19 + 8) = v17;
    *(unsigned char *)(v19 + 16) = v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE89E18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86968);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DD048CE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v23 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v14) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    char v17 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
    unint64_t v18 = *(void *)(v25 + 72) * v16;
    sub_1DCE8C7F8(*(void *)(v5 + 56) + v18, (uint64_t)v4, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
    *(unsigned char *)(*(void *)(v7 + 48) + v16) = v17;
    uint64_t result = (void *)sub_1DCE8C860((uint64_t)v4, *(void *)(v7 + 56) + v18, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1DCE8A08C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86978);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8A21C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03B80);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v29 = __clz(__rbit64(v27));
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = v29 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 56 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    int v21 = *(_DWORD *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 48);
    long long v23 = *(_OWORD *)(v19 + 16);
    long long v24 = *(_OWORD *)(v19 + 32);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v25 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v25 = v20;
    *(_DWORD *)(v25 + 8) = v21;
    *(_OWORD *)(v25 + 16) = v23;
    *(_OWORD *)(v25 + 32) = v24;
    *(void *)(v25 + 48) = v22;
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8A3D4(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1DD048CE8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8A584()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE850E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    long long v16 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_OWORD *)(*(void *)(v4 + 56) + 16 * v15) = v16;
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8A72C()
{
  uint64_t v1 = sub_1DD046478();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85108);
  uint64_t v22 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DD048CE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *uint64_t v22 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v26 = v2 + 16;
  int64_t v24 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v25 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_9:
    char v16 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
    unint64_t v17 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v17, v1);
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v16;
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v17, v4, v1);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v24) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1DCE8A9B8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 16 * v15;
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *uint64_t v22 = v21;
    v22[1] = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8AB68()
{
  uint64_t v1 = sub_1DD046598();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB02C88);
  int64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1DD048CE8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *int64_t v23 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1DCE8AE00()
{
  return sub_1DCE8B180(&qword_1EAB02CF0);
}

void *sub_1DCE8AE0C()
{
  return sub_1DCE8B180(&qword_1EAB02CE0);
}

void *sub_1DCE8AE18()
{
  return sub_1DCE8B180(&qword_1EAB02CE8);
}

void *sub_1DCE8AE24()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE850D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1DCE8AFC8(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1DD048CE8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    int64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8B174()
{
  return sub_1DCE8B180((uint64_t *)&unk_1EAB02C78);
}

void *sub_1DCE8B180(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_1DD046598();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v8 = *v1;
  uint64_t v9 = sub_1DD048CE8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v3 = v10;
    return result;
  }
  uint64_t v27 = v3;
  id result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  uint64_t v28 = v8 + 64;
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  int64_t v29 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v30 = v5 + 16;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v29) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v24 + 1;
      if (v24 + 1 >= v29) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v14);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v25 - 1) & v25;
    unint64_t v19 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_12:
    unint64_t v20 = *(void *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v20, v4);
    uint64_t v21 = 16 * v19;
    unint64_t v22 = *(void *)(v10 + 48) + v20;
    int64_t v23 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
    long long v31 = *(_OWORD *)(*(void *)(v8 + 56) + v21);
    v23(v22, v7, v4);
    *(_OWORD *)(*(void *)(v10 + 56) + v21) = v31;
    id result = (void *)swift_retain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v29)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v3 = v27;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v14 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v14 >= v29) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v14);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1DCE8B424()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE869B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    unint64_t v17 = (_OWORD *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v18 = 48 * v15;
    unint64_t v19 = (long long *)(*(void *)(v2 + 56) + v18);
    unint64_t v20 = (_OWORD *)(*(void *)(v4 + 48) + v16);
    long long v21 = v17[1];
    long long v22 = v19[1];
    long long v23 = v19[2];
    long long v24 = *v19;
    *unint64_t v20 = *v17;
    v20[1] = v21;
    unint64_t v25 = (_OWORD *)(*(void *)(v4 + 56) + v18);
    *unint64_t v25 = v24;
    v25[1] = v22;
    v25[2] = v23;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8B604()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02CF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v25 = __clz(__rbit64(v23));
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = v25 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v17;
    *(void *)(v21 + 16) = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8B7AC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE850C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 40 * v15;
    uint64_t v18 = *(void *)v16;
    uint64_t v17 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    LOBYTE(v16) = *(unsigned char *)(v16 + 32);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v21 = *(void *)(v4 + 56) + 40 * v15;
    *(void *)uint64_t v21 = v18;
    *(void *)(v21 + 8) = v17;
    *(void *)(v21 + 16) = v19;
    *(void *)(v21 + 24) = v20;
    *(unsigned char *)(v21 + 32) = v16;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8B974()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82C60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *uint64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8BB20()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE850D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    int v16 = *(_DWORD *)(*(void *)(v2 + 56) + 4 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_DWORD *)(*(void *)(v4 + 56) + 4 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8BCB0(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1DD048CE8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    id result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8BE4C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03B90);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = (_OWORD *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v18 = 8 * v15;
    uint64_t v19 = *(void *)(*(void *)(v2 + 56) + v18);
    int64_t v20 = (_OWORD *)(*(void *)(v4 + 48) + v16);
    long long v21 = v17[1];
    *int64_t v20 = *v17;
    v20[1] = v21;
    *(void *)(*(void *)(v4 + 56) + v18) = v19;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8BFFC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE869B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8C1B4(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1DD048CE8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8C350()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE87160);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1DCE8C4E0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87158);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1DD048CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    int64_t v19 = (void *)(*(void *)(v4 + 56) + 16 * v15);
    *int64_t v19 = v18;
    v19[1] = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DCE8C68C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DCE8C6E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84EA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCE8C748(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCE8C790(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCE8C7F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCE8C860(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCE8C8C8()
{
  v60[1] = *(id *)MEMORY[0x1E4F143B8];
  id v1 = objc_msgSend(v0, sel_results);
  if (v1
    && (uint64_t v2 = v1,
        sub_1DCD95648(0, (unint64_t *)&qword_1EBE82C28),
        unint64_t v3 = sub_1DD0486B8(),
        v2,
        unint64_t v4 = sub_1DCF3DC64(v3),
        swift_bridgeObjectRelease(),
        v4))
  {
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v5 = sub_1DD048CC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    unint64_t v59 = v4;
    if (v5)
    {
      unint64_t v54 = v4 >> 62;
      unint64_t v56 = v4 & 0xC000000000000001;
      uint64_t v6 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v7 = 4;
      uint64_t v55 = v5;
      while (1)
      {
        if (v56) {
          id v10 = (id)MEMORY[0x1E01AE890](v7 - 4, v4);
        }
        else {
          id v10 = *(id *)(v4 + 8 * v7);
        }
        uint64_t v11 = v10;
        uint64_t v12 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        uint64_t v58 = v7;
        id v13 = objc_msgSend(v10, sel_featureName);
        uint64_t v14 = sub_1DD048408();
        uint64_t v16 = v15;

        id v17 = objc_msgSend(v11, sel_featureValue);
        id v18 = objc_msgSend(v17, sel_multiArrayValue);

        if (!v18)
        {
          uint64_t v57 = v6;
          uint64_t v19 = v14;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
          uint64_t v20 = swift_allocObject();
          *(_OWORD *)(v20 + 16) = xmmword_1DD050EE0;
          sub_1DCD95648(0, (unint64_t *)&qword_1EBE850A0);
          *(void *)(v20 + 32) = sub_1DD0489B8();
          v60[0] = (id)v20;
          sub_1DD0486D8();
          id v21 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
          int64_t v22 = (void *)sub_1DD0486A8();
          swift_bridgeObjectRelease();
          v60[0] = 0;
          id v18 = objc_msgSend(v21, sel_initWithShape_dataType_error_, v22, 65568, v60);

          if (!v18)
          {
            id v53 = v60[0];
            sub_1DD046378();

            swift_willThrow();
            swift_bridgeObjectRelease_n();

            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          id v23 = v60[0];
          uint64_t v14 = v19;
          uint64_t v6 = v57;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v60[0] = v6;
        unint64_t v26 = sub_1DCEAD1A4(v14, v16);
        uint64_t v27 = v6[2];
        BOOL v28 = (v25 & 1) == 0;
        uint64_t v29 = v27 + v28;
        if (__OFADD__(v27, v28)) {
          goto LABEL_45;
        }
        char v30 = v25;
        if (v6[3] >= v29)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1DCE89C54();
          }
          uint64_t v31 = v16;
          uint64_t v6 = v60[0];
          if ((v30 & 1) == 0) {
            goto LABEL_24;
          }
        }
        else
        {
          sub_1DCE80448(v29, isUniquelyReferenced_nonNull_native);
          uint64_t v31 = v16;
          unint64_t v32 = sub_1DCEAD1A4(v14, v16);
          if ((v30 & 1) != (v33 & 1))
          {
            uint64_t result = sub_1DD049028();
            __break(1u);
            return result;
          }
          unint64_t v26 = v32;
          uint64_t v6 = v60[0];
          if ((v30 & 1) == 0)
          {
LABEL_24:
            v6[(v26 >> 6) + 8] |= 1 << v26;
            int64_t v34 = (uint64_t *)(v6[6] + 16 * v26);
            *int64_t v34 = v14;
            v34[1] = v31;
            *(void *)(v6[7] + 8 * v26) = v18;
            uint64_t v35 = v6[2];
            BOOL v36 = __OFADD__(v35, 1);
            uint64_t v37 = v35 + 1;
            if (v36) {
              goto LABEL_46;
            }
            v6[2] = v37;
            swift_bridgeObjectRetain();
            goto LABEL_8;
          }
        }
        uint64_t v8 = v6[7];
        uint64_t v9 = 8 * v26;

        *(void *)(v8 + v9) = v18;
LABEL_8:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v7 = v58 + 1;
        unint64_t v4 = v59;
        if (v12 == v55)
        {
          swift_bridgeObjectRelease();
          uint64_t v39 = v59 & 0xFFFFFFFFFFFFFF8;
          if (v54) {
            goto LABEL_40;
          }
LABEL_29:
          uint64_t v40 = *(void *)(v39 + 16);
          if (v40) {
            goto LABEL_30;
          }
LABEL_41:
          swift_bridgeObjectRelease();
          long long v42 = (void *)MEMORY[0x1E4FBC860];
          goto LABEL_42;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v39 = v4 & 0xFFFFFFFFFFFFFF8;
    if (!(v4 >> 62)) {
      goto LABEL_29;
    }
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (!v40) {
      goto LABEL_41;
    }
LABEL_30:
    v60[0] = (id)MEMORY[0x1E4FBC860];
    sub_1DCFC4948(0, v40 & ~(v40 >> 63), 0);
    if (v40 < 0) {
      __break(1u);
    }
    uint64_t v41 = 0;
    long long v42 = v60[0];
    unint64_t v43 = v4 & 0xC000000000000001;
    do
    {
      if (v43) {
        id v44 = (id)MEMORY[0x1E01AE890](v41, v4);
      }
      else {
        id v44 = *(id *)(v4 + 8 * v41 + 32);
      }
      uint64_t v45 = v44;
      id v46 = objc_msgSend(v44, sel_featureName, v54);
      uint64_t v47 = sub_1DD048408();
      uint64_t v49 = v48;

      v60[0] = v42;
      unint64_t v51 = v42[2];
      unint64_t v50 = v42[3];
      if (v51 >= v50 >> 1)
      {
        sub_1DCFC4948(v50 > 1, v51 + 1, 1);
        long long v42 = v60[0];
      }
      ++v41;
      void v42[2] = v51 + 1;
      uint64_t v52 = &v42[2 * v51];
      v52[4] = v47;
      v52[5] = v49;
      unint64_t v4 = v59;
    }
    while (v40 != v41);
    swift_bridgeObjectRelease();
LABEL_42:
    type metadata accessor for EngineResult();
    swift_allocObject();
    return sub_1DCFA761C((uint64_t)v42, (uint64_t)v6);
  }
  else
  {
    if (qword_1EBE85738 != -1) {
LABEL_47:
    }
      swift_once();
    return swift_retain();
  }
}

uint64_t sub_1DCE8CEF0()
{
  return sub_1DCE8C8C8();
}

uint64_t sub_1DCE8CF14()
{
  id v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A70);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DD04E910;
  *(void *)(v2 + 56) = sub_1DCD95648(0, (unint64_t *)&qword_1EBE850A8);
  *(void *)(v2 + 64) = &off_1F383D738;
  *(void *)(v2 + 32) = v1;
  id v3 = v1;
  return v2;
}

id sub_1DCE8CF8C(uint64_t a1)
{
  v12[5] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1DCD3A3BC(v3, (uint64_t)v12);
      sub_1DCD3A3BC((uint64_t)v12, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85780);
      sub_1DCD95648(0, (unint64_t *)&qword_1EBE850A8);
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v11 = 0;
      }
      uint64_t v4 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      if (v11)
      {
        MEMORY[0x1E01AE350](v4);
        if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DD0486E8();
        }
        sub_1DD048708();
        sub_1DD0486D8();
      }
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_1DCD95648(0, (unint64_t *)&qword_1EBE850A8);
  uint64_t v5 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  v12[0] = 0;
  unsigned __int8 v6 = objc_msgSend(v1, sel_performRequests_error_, v5, v12);

  if (v6) {
    return v12[0];
  }
  id v8 = v12[0];
  sub_1DD046378();

  return (id)swift_willThrow();
}

id sub_1DCE8D1B8(uint64_t a1)
{
  return sub_1DCE8CF8C(a1);
}

ValueMetadata *type metadata accessor for VisionModelRequest()
{
  return &type metadata for VisionModelRequest;
}

ValueMetadata *type metadata accessor for VisionModel()
{
  return &type metadata for VisionModel;
}

uint64_t type metadata accessor for PlaceholderPIRClient()
{
  return self;
}

uint64_t sub_1DCE8D220()
{
  return swift_willThrow();
}

unint64_t sub_1DCE8D268()
{
  unint64_t result = qword_1EAB03BA8;
  if (!qword_1EAB03BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03BA8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlaceholderPIRClient.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCE8D358);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderPIRClient.Error()
{
  return &type metadata for PlaceholderPIRClient.Error;
}

unint64_t sub_1DCE8D394()
{
  unint64_t result = qword_1EAB03BB0;
  if (!qword_1EAB03BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03BB0);
  }
  return result;
}

void *sub_1DCE8D3E8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1DCE8D3F4(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1DCE8D3FC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1DCE8D410@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1DCE8D424@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1DCE8D438(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1DCE8D468@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1DCE8D494@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1DCE8D4B8(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1DCE8D4CC(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1DCE8D4E0(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1DCE8D4F4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1DCE8D508(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1DCE8D51C(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1DCE8D530(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1DCE8D544()
{
  return *v0 == 0;
}

uint64_t sub_1DCE8D554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1DCE8D56C(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1DCE8D580@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1DCF32B9C();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1DCE8D5C0()
{
  sub_1DCE8D638();
  swift_allocError();
  *unint64_t v0 = xmmword_1DD04EF10;
  return swift_willThrow();
}

uint64_t type metadata accessor for DomainModelRequestFactory()
{
  return self;
}

unint64_t sub_1DCE8D638()
{
  unint64_t result = qword_1EAB03BB8;
  if (!qword_1EAB03BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03BB8);
  }
  return result;
}

unint64_t destroy for DomainModelRequestFactory.BaseClassError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if ((v2 + 1) <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s18VisualIntelligence25DomainModelRequestFactoryC14BaseClassErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for DomainModelRequestFactory.BaseClassError(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  unsigned int v6 = v5 + 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  unsigned int v7 = v4 + 1;
  if (v6 > 1)
  {
    if (v7 <= 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DomainModelRequestFactory.BaseClassError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if ((v5 + 1) > 1) {
    goto LABEL_9;
  }
  unint64_t v6 = *(void *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DomainModelRequestFactory.BaseClassError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 2) {
    return (v3 - 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DomainModelRequestFactory.BaseClassError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1DCE8D8F4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1DCE8D914(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = 0;
    result[1] = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DomainModelRequestFactory.BaseClassError()
{
  return &type metadata for DomainModelRequestFactory.BaseClassError;
}

uint64_t destroy for DomainModelRequestFactory.Input(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for DomainModelRequestFactory.Input(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v5 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v5;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DomainModelRequestFactory.Input(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for DomainModelRequestFactory.Input(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v5 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v5;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DomainModelRequestFactory.Input(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DomainModelRequestFactory.Input(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DomainModelRequestFactory.Input()
{
  return &type metadata for DomainModelRequestFactory.Input;
}

ValueMetadata *type metadata accessor for DomainModelRequestFactory.RequestOptions()
{
  return &type metadata for DomainModelRequestFactory.RequestOptions;
}

ValueMetadata *type metadata accessor for DomainModelRequestFactory.HeadOptions()
{
  return &type metadata for DomainModelRequestFactory.HeadOptions;
}

unint64_t sub_1DCE8DCA0()
{
  unint64_t result = qword_1EAB03BC0;
  if (!qword_1EAB03BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03BC0);
  }
  return result;
}

unint64_t sub_1DCE8DCF8()
{
  unint64_t result = qword_1EAB03BC8;
  if (!qword_1EAB03BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03BC8);
  }
  return result;
}

unint64_t sub_1DCE8DD50()
{
  unint64_t result = qword_1EAB03BD0;
  if (!qword_1EAB03BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03BD0);
  }
  return result;
}

unint64_t sub_1DCE8DDA8()
{
  unint64_t result = qword_1EAB03BD8;
  if (!qword_1EAB03BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03BD8);
  }
  return result;
}

uint64_t sub_1DCE8DE00(uint64_t a1, uint64_t (*a2)(void, void))
{
  return a2(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1DCE8DE38(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_1DCE8DE78(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v31 = a5;
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v8 = sub_1DD0481B8();
  uint64_t v34 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1DD0481D8();
  uint64_t v11 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  id v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a2;
  uint64_t v14 = a2[1];
  uint64_t v32 = *(void *)(v5 + 24);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  sub_1DCE770A0(a1, (uint64_t)v37);
  uint64_t v17 = swift_allocObject();
  long long v18 = v37[8];
  *(_OWORD *)(v17 + 152) = v37[7];
  *(_OWORD *)(v17 + 168) = v18;
  *(_OWORD *)(v17 + 184) = v37[9];
  long long v19 = v37[2];
  *(_OWORD *)(v17 + 88) = v37[3];
  *(_OWORD *)(v17 + 104) = v37[4];
  long long v20 = v37[6];
  *(_OWORD *)(v17 + 120) = v37[5];
  *(_OWORD *)(v17 + 136) = v20;
  long long v21 = v37[1];
  *(_OWORD *)(v17 + 40) = v37[0];
  *(_OWORD *)(v17 + 56) = v21;
  int64_t v22 = v29;
  uint64_t v23 = v30;
  *(void *)(v17 + 16) = v29;
  *(void *)(v17 + 24) = v23;
  *(void *)(v17 + 32) = v31;
  uint64_t v24 = v38;
  *(_OWORD *)(v17 + 72) = v19;
  *(void *)(v17 + 200) = v24;
  *(void *)(v17 + 208) = v15;
  *(void *)(v17 + 216) = v14;
  *(void *)(v17 + 224) = v16;
  aBlock[4] = sub_1DCE90DE8;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCEC8CA4;
  aBlock[3] = &block_descriptor_48;
  char v25 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  id v26 = v22;
  swift_retain();
  sub_1DD0481C8();
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_1DCE90E20(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCD52850((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v13, v10, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v33);
  swift_release();
  return swift_release();
}

void sub_1DCE8E258(void *a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v10 = sub_1DD046758();
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v25 - v14;
  uint64_t v16 = (os_unfair_lock_s *)(*(void *)((char *)a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
  os_unfair_lock_lock(v16);
  int v17 = *((unsigned __int8 *)a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
  os_unfair_lock_unlock(v16);
  if (v17 == 1)
  {
    sub_1DCE902CC();
    long long v19 = (void *)swift_allocError();
    *long long v20 = 1;
    a2(v19, 1);
  }
  else
  {
    id v26 = a2;
    uint64_t v27 = &v25;
    MEMORY[0x1F4188790](v18);
    uint64_t v21 = v28;
    *(&v25 - 4) = a4;
    *(&v25 - 3) = v21;
    *(&v25 - 2) = v29;
    sub_1DCE90E20(&qword_1EAB03C10, MEMORY[0x1E4F88760]);
    sub_1DD047E78();
    int64_t v22 = *(void **)(a4 + 160);
    if (v22)
    {
      objc_msgSend(*(id *)(a4 + 160), sel_queryID);
      sub_1DD046748();
    }
    uint64_t v23 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v15, v12, v10);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      if (v22) {
        id v24 = objc_msgSend(v22, sel_queryID);
      }
      else {
        id v24 = 0;
      }
      sub_1DCE8E554((uint64_t)v15, (uint64_t)v24, v22 == 0, a1, (uint64_t)v26, a3);
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v10);
  }
}

uint64_t sub_1DCE8E554(uint64_t a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  int v69 = a3;
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03C00);
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v72 = v11;
  MEMORY[0x1F4188790](v11);
  char v70 = (char *)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DD048068();
  uint64_t v65 = *(void *)(v13 - 8);
  uint64_t v66 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DD048208();
  uint64_t v17 = *(void *)(v16 - 8);
  double v18 = MEMORY[0x1F4188790](v16);
  long long v20 = (void *)((char *)v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = *(void **)(v7 + 24);
  *long long v20 = v21;
  (*(void (**)(void *, void, uint64_t, double))(v17 + 104))(v20, *MEMORY[0x1E4FBCBF0], v16, v18);
  int64_t v22 = v21;
  char v23 = sub_1DD048228();
  uint64_t v25 = *(void (**)(void *, uint64_t))(v17 + 8);
  id v24 = (os_unfair_lock_s *)(v17 + 8);
  v25(v20, v16);
  if (v23)
  {
    v75[0] = 0xD000000000000011;
    v75[1] = 0x80000001DD06C9F0;
    void v75[2] = "Text Lookup On Server";
    v75[3] = 21;
    char v76 = 2;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a5;
    *(void *)(v26 + 24) = a6;
    type metadata accessor for DurationMeasurement();
    swift_allocObject();
    swift_retain();
    uint64_t v27 = sub_1DCEA469C((uint64_t)v75, 0);
    uint64_t v28 = (void *)swift_allocObject();
    void v28[2] = v27;
    v28[3] = sub_1DCE90B44;
    v28[4] = v26;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_1DCE90BB8;
    *(void *)(v29 + 24) = v28;
    uint64_t v64 = v29;
    sub_1DCDB40EC((uint64_t)v15);
    uint64_t v30 = a4;
    uint64_t v31 = sub_1DD048048();
    os_log_type_t v32 = sub_1DD048848();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      v62[1] = v22;
      uint64_t v34 = (uint8_t *)v33;
      uint64_t v35 = swift_slowAlloc();
      uint64_t v63 = v7;
      uint64_t v36 = v35;
      v74[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      sub_1DD046598();
      sub_1DCE90E20(&qword_1EAB03B60, MEMORY[0x1E4F27990]);
      uint64_t v37 = sub_1DD048F78();
      uint64_t v73 = sub_1DCED7FA0(v37, v38, v74);
      sub_1DD048A28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v31, v32, "Network fetch for task: %s", v34, 0xCu);
      swift_arrayDestroy();
      uint64_t v39 = v36;
      uint64_t v7 = v63;
      MEMORY[0x1E01B07E0](v39, -1, -1);
      MEMORY[0x1E01B07E0](v34, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v15, v66);
    uint64_t v40 = v70;
    sub_1DD047958();
    uint64_t v41 = swift_allocObject();
    swift_weakInit();
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v41;
    *(void *)(v42 + 24) = v30;
    uint64_t v43 = swift_allocObject();
    swift_weakInit();
    uint64_t v44 = swift_allocObject();
    uint64_t v45 = v68;
    *(void *)(v44 + 16) = v43;
    *(void *)(v44 + 24) = v45;
    *(unsigned char *)(v44 + 32) = v69 & 1;
    *(void *)(v44 + 40) = v30;
    sub_1DCD52850(&qword_1EAB03C08, &qword_1EAB03C00);
    id v46 = v30;
    uint64_t v47 = v72;
    uint64_t v48 = sub_1DD0480D8();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v40, v47);
    uint64_t v49 = (uint64_t)&v46[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier];
    uint64_t v50 = swift_allocObject();
    uint64_t v51 = v64;
    *(void *)(v50 + 16) = sub_1DCE90C14;
    *(void *)(v50 + 24) = v51;
    uint64_t v52 = (uint64_t *)(v7 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_completions);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v73 = *v52;
    *uint64_t v52 = 0x8000000000000000;
    sub_1DCE86670((uint64_t)sub_1DCE90B44, v50, v49, isUniquelyReferenced_nonNull_native);
    *uint64_t v52 = v73;
    swift_bridgeObjectRelease();
    swift_endAccess();
    unint64_t v54 = (uint64_t *)(v7 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_searchFetches);
    swift_beginAccess();
    swift_retain();
    char v55 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v73 = *v54;
    uint64_t *v54 = 0x8000000000000000;
    sub_1DCE86324(v48, v49, v55);
    uint64_t *v54 = v73;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v56 = swift_allocObject();
    swift_weakInit();
    id v24 = (os_unfair_lock_s *)(*(void *)&v46[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
    swift_retain();
    os_unfair_lock_lock(v24);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1DCE90CEC;
    *(void *)(v16 + 24) = v56;
    int64_t v22 = &v46[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_onCancels];
    swift_beginAccess();
    a4 = *(void **)v22;
    swift_retain();
    char v57 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)int64_t v22 = a4;
    if (v57) {
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  a4 = sub_1DCE9FF98(0, a4[2] + 1, 1, a4);
  *(void *)int64_t v22 = a4;
LABEL_6:
  unint64_t v59 = a4[2];
  unint64_t v58 = a4[3];
  if (v59 >= v58 >> 1)
  {
    a4 = sub_1DCE9FF98((void *)(v58 > 1), v59 + 1, 1, a4);
    *(void *)int64_t v22 = a4;
  }
  a4[2] = v59 + 1;
  uint64_t v60 = &a4[2 * v59];
  uint64_t v60[4] = sub_1DCE90CF4;
  v60[5] = v16;
  swift_endAccess();
  os_unfair_lock_unlock(v24);
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_1DCE8EDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DCE8EF44(a1, a3 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCE8EE4C(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DCE8F260(a1, a3, a4 & 1, a5 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCE8EEE4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DCE8FBC0(a1);
    return swift_release();
  }
  return result;
}

void sub_1DCE8EF44(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_1DD047968();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03BF8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DD048208();
  uint64_t v12 = *(void *)(v11 - 8);
  double v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (uint64_t *)((char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(v2 + 24);
  *uint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t, double))(v12 + 104))(v15, *MEMORY[0x1E4FBCBF0], v11, v13);
  id v17 = v16;
  LOBYTE(v16) = sub_1DD048228();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v15, v11);
  if (v16)
  {
    sub_1DCD2889C(a1, (uint64_t)v10, &qword_1EAB03BF8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
    {
      sub_1DCE902CC();
      double v18 = (void *)swift_allocError();
      *uint64_t v19 = 0;
      sub_1DCE8F664(v23, (uint64_t)v18, 1);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      sub_1DCE90E20(&qword_1EAB03BF0, MEMORY[0x1E4F89BE8]);
      long long v20 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v21, v7, v4);
      sub_1DCE8F664(v23, (uint64_t)v20, 1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1DCE8F260(uint64_t a1, void *a2, int a3, uint64_t a4)
{
  uint64_t v38 = a1;
  uint64_t v39 = a4;
  int v33 = a3;
  id v34 = a2;
  uint64_t v5 = sub_1DD047968();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v35 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1DD046778();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  double v13 = &v32[-v12];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03BE8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = &v32[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_1DD048208();
  uint64_t v18 = *(void *)(v17 - 8);
  double v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = &v32[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v40 = v4;
  uint64_t v22 = *(void **)(v4 + 24);
  void *v21 = v22;
  (*(void (**)(void *, void, uint64_t, double))(v18 + 104))(v21, *MEMORY[0x1E4FBCBF0], v17, v19);
  id v23 = v22;
  LOBYTE(v22) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v18 + 8))(v21, v17);
  if (v22)
  {
    sub_1DCD2889C(v38, (uint64_t)v16, &qword_1EAB03BE8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = v35;
      uint64_t v25 = v36;
      uint64_t v27 = v37;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v36 + 32))(v35, v16, v37);
      sub_1DCE90E20(&qword_1EAB03BF0, MEMORY[0x1E4F89BE8]);
      uint64_t v28 = (void *)swift_allocError();
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v25 + 16))(v29, v26, v27);
      sub_1DCE8F664(v39, (uint64_t)v28, 1);

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v25 + 8))(v26, v27);
    }
    else
    {
      char v30 = v33 & 1;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v13, v16, v7);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v10, v13, v7);
      uint64_t v31 = sub_1DCE16478((uint64_t)v10);
      sub_1DCF448EC(v34, v30, v31);
      sub_1DCE8F664(v39, v31, 0);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCE8F664(uint64_t a1, uint64_t a2, int a3)
{
  int v37 = a3;
  uint64_t v38 = a2;
  uint64_t v5 = sub_1DD046598();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DD048068();
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DD048208();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint8_t **)((char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&long long v42 = v3;
  uint64_t v17 = *(void **)(v3 + 24);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x1E4FBCBF0], v12, v14);
  id v18 = v17;
  LOBYTE(v17) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v16, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  sub_1DCDB40EC((uint64_t)v11);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v39 = a1;
  v20(v8, a1, v5);
  uint64_t v21 = sub_1DD048048();
  os_log_type_t v22 = sub_1DD048848();
  if (os_log_type_enabled(v21, v22))
  {
    id v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v44[0] = v24;
    *(_DWORD *)id v23 = 136315138;
    uint64_t v36 = v23 + 4;
    sub_1DCE90E20(&qword_1EAB03B60, MEMORY[0x1E4F27990]);
    uint64_t v25 = sub_1DD048F78();
    uint64_t v43 = sub_1DCED7FA0(v25, v26, v44);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _os_log_impl(&dword_1DCCF9000, v21, v22, "completing task: %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v24, -1, -1);
    MEMORY[0x1E01B07E0](v23, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v41);
  uint64_t v27 = (uint64_t *)(v42 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_completions);
  swift_beginAccess();
  uint64_t v28 = *v27;
  uint64_t v29 = v39;
  if (*(void *)(*v27 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_1DCEAD840(v29);
    if (v31)
    {
      long long v42 = *(_OWORD *)(*(void *)(v28 + 56) + 16 * v30);
      swift_retain();
      swift_bridgeObjectRelease();
      char v32 = 0;
      *(_OWORD *)(swift_allocObject() + 16) = v42;
      int v33 = sub_1DCE90AA8;
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  int v33 = 0;
  char v32 = 1;
LABEL_10:
  swift_beginAccess();
  sub_1DCE907D8(v29);
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v34 = sub_1DCE90954(v29, (void (*)(unint64_t, uint64_t))sub_1DCFDD638, (void (*)(void))sub_1DCE8B174);
  swift_endAccess();
  uint64_t result = sub_1DCD33E90(v34);
  if ((v32 & 1) == 0)
  {
    uint64_t v35 = v37 & 1;
    swift_retain();
    v33(v38, v35);
    sub_1DCD33E90((uint64_t)v33);
    return sub_1DCD33E90((uint64_t)v33);
  }
  return result;
}

uint64_t sub_1DCE8FBC0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1DD0481B8();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD0481D8();
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DD046598();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  v18[1] = *(void *)(v2 + 24);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1DCE90424;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCEC8CA4;
  aBlock[3] = &block_descriptor_4;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  sub_1DD0481C8();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1DCE90E20(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCD52850((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v9, v6, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_1DCE8FF78(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DCE8FFD8(a2);
    return swift_release();
  }
  return result;
}

void sub_1DCE8FFD8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_searchFetches;
  swift_beginAccess();
  if (*(void *)(*(void *)v3 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1DCEAD840(a1);
    if (v4)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1DD0480C8();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_1DCE902CC();
  uint64_t v5 = (void *)swift_allocError();
  *uint64_t v6 = 1;
  sub_1DCE8F664(a1, (uint64_t)v5, 1);
}

uint64_t sub_1DCE900C4()
{
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC18VisualIntelligence20TextLookupServerFlow_timeoutSeconds;
  uint64_t v2 = sub_1DD0481A8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCE90194()
{
  return type metadata accessor for TextLookupServerFlow();
}

uint64_t type metadata accessor for TextLookupServerFlow()
{
  uint64_t result = qword_1EBE86BD0;
  if (!qword_1EBE86BD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCE901E8()
{
  uint64_t result = sub_1DD0481A8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCE902A4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

unint64_t sub_1DCE902CC()
{
  unint64_t result = qword_1EAB03BE0;
  if (!qword_1EAB03BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03BE0);
  }
  return result;
}

uint64_t sub_1DCE90320()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCE90358()
{
  uint64_t v1 = sub_1DD046598();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1DCE90424()
{
  uint64_t v1 = *(void *)(sub_1DD046598() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1DCE8FF78(v2, v3);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1DCE904A0@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1DCEAD508(a2, a3, a4, a5);
  char v14 = v13;
  swift_bridgeObjectRelease();
  if (v14)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v5;
    uint64_t v26 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DCE88AE4();
      uint64_t v16 = v26;
    }
    uint64_t v17 = *(void *)(v16 + 56);
    uint64_t v18 = type metadata accessor for VisualUnderstanding.ImageRegion();
    uint64_t v25 = *(void *)(v18 - 8);
    sub_1DCD36EE0(v17 + *(void *)(v25 + 72) * v12, a1);
    sub_1DCFDC774(v12, v16);
    *uint64_t v6 = v16;
    swift_bridgeObjectRelease();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    uint64_t v20 = a1;
    uint64_t v21 = 0;
    uint64_t v22 = v18;
  }
  else
  {
    uint64_t v23 = type metadata accessor for VisualUnderstanding.ImageRegion();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    uint64_t v22 = v23;
    uint64_t v20 = a1;
    uint64_t v21 = 1;
  }
  return v19(v20, v21, 1, v22);
}

uint64_t sub_1DCE9063C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1DCEAD428(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1DCE8A72C();
      uint64_t v9 = v19;
    }
    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = sub_1DD046478();
    uint64_t v18 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a2, v10 + *(void *)(v18 + 72) * v6, v11);
    sub_1DCFDCFCC(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = sub_1DD046478();
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_1DCE907D8(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1DCEAD840(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1DCE8AB68();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = sub_1DD046598();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1DCFDD340(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1DCE908D0(uint64_t a1)
{
  return sub_1DCE90954(a1, (void (*)(unint64_t, uint64_t))sub_1DCFDD638, (void (*)(void))sub_1DCE8AE00);
}

uint64_t sub_1DCE908FC(uint64_t a1)
{
  return sub_1DCE90954(a1, (void (*)(unint64_t, uint64_t))sub_1DCFDD638, (void (*)(void))sub_1DCE8AE0C);
}

uint64_t sub_1DCE90928(uint64_t a1)
{
  return sub_1DCE90954(a1, (void (*)(unint64_t, uint64_t))sub_1DCFDD638, (void (*)(void))sub_1DCE8AE18);
}

uint64_t sub_1DCE90954(uint64_t a1, void (*a2)(unint64_t, uint64_t), void (*a3)(void))
{
  unint64_t v6 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1DCEAD840(a1);
  LOBYTE(a1) = v9;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v6;
  uint64_t v16 = *v6;
  *unint64_t v6 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a3();
    uint64_t v11 = v16;
  }
  uint64_t v12 = *(void *)(v11 + 48);
  uint64_t v13 = sub_1DD046598();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * v8, v13);
  uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 16 * v8);
  a2(v8, v11);
  *unint64_t v6 = v11;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1DCE90A70()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DCE90AA8(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1DCE90AE8(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t *))
{
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v6 = *a1;
  char v7 = v4;
  sub_1DCEA3DA4();
  return a3(&v6);
}

uint64_t sub_1DCE90B44(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1DCE90B78()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1DCE90BB8(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 24);
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *a1;
  char v6 = v3;
  sub_1DCEA3DA4();
  return v2(&v5);
}

uint64_t sub_1DCE90C14(uint64_t a1, char a2)
{
  char v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1DCE90C54()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DCE90C94(uint64_t a1)
{
  return sub_1DCE8EDCC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DCE90C9C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1DCE90CDC(uint64_t a1)
{
  return sub_1DCE8EE4C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1DCE90CEC(uint64_t a1)
{
  return sub_1DCE8EEE4(a1);
}

uint64_t sub_1DCE90CF4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1DCE90D1C()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 120)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  }
  if (*(void *)(v0 + 136) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 232, 7);
}

void sub_1DCE90DE8()
{
  sub_1DCE8E258(*(void **)(v0 + 16), *(void (**)(void *, uint64_t))(v0 + 24), *(void *)(v0 + 32), v0 + 40, *(void *)(v0 + 208), *(void *)(v0 + 216));
}

uint64_t sub_1DCE90E00(uint64_t a1)
{
  return sub_1DCF44E84(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1DCE90E20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TextLookupServerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCE90F34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextLookupServerError()
{
  return &type metadata for TextLookupServerError;
}

unint64_t sub_1DCE90F70()
{
  unint64_t result = qword_1EAB03C18;
  if (!qword_1EAB03C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03C18);
  }
  return result;
}

VisualIntelligence::S2Point __swiftcall S2Point.init(x:y:z:)(Swift::Double x, Swift::Double y, Swift::Double z)
{
  *int v3 = x;
  v3[1] = y;
  v3[2] = z;
  result.z = z;
  result.CGFloat y = y;
  result.CGFloat x = x;
  return result;
}

uint64_t S2Point.largestAbsComponent.getter()
{
  double v1 = fabs(*v0);
  double v2 = fabs(v0[1]);
  double v3 = fabs(v0[2]);
  uint64_t v4 = 2;
  if (v3 < v2) {
    uint64_t v4 = 1;
  }
  if (v2 >= v1) {
    return v4;
  }
  else {
    return 2 * (v3 >= v1);
  }
}

Swift::Double __swiftcall S2Point.get(axis:)(Swift::Int axis)
{
  double v2 = v1 + 1;
  if (axis != 1) {
    double v2 = v1 + 2;
  }
  if (!axis) {
    double v2 = v1;
  }
  return *v2;
}

double static S2Point.normalize(point:)@<D0>(double *a1@<X0>, double *a2@<X8>)
{
  double v2 = *a1;
  double v3 = a1[1];
  double v4 = a1[2];
  double v5 = sqrt(v2 * v2 + v3 * v3 + v4 * v4);
  if (v5 != 0.0) {
    double v5 = 1.0 / v5;
  }
  double result = v2 * v5;
  *a2 = result;
  a2[1] = v3 * v5;
  a2[2] = v4 * v5;
  return result;
}

float64_t - prefix(_:)@<D0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X8>)
{
  float64_t result = -a1[1].f64[0];
  *a2 = vnegq_f64(*a1);
  a2[1].f64[0] = result;
  return result;
}

VisualIntelligence::S2Point __swiftcall S2Point.crossProd(_:)(VisualIntelligence::S2Point a1)
{
  float64x2_t v4 = *(float64x2_t *)(v1 + 8);
  float64x2_t v5 = *(float64x2_t *)(v3 + 8);
  *(void *)&v6.f64[0] = vdupq_laneq_s64((int64x2_t)v4, 1).u64[0];
  v6.f64[1] = *(float64_t *)v1;
  *(void *)&v7.f64[0] = vdupq_laneq_s64((int64x2_t)v5, 1).u64[0];
  v7.f64[1] = *(float64_t *)v3;
  double v8 = *(double *)v3 * v4.f64[0];
  double v9 = v8 - *(double *)v1 * v5.f64[0];
  *double v2 = vsubq_f64(vmulq_f64(v6, v5), vmulq_f64(v4, v7));
  v2[1].f64[0] = v9;
  result.z = v4.f64[0];
  result.CGFloat y = v8;
  result.CGFloat x = v9;
  return result;
}

Swift::Double __swiftcall S2Point.dotProd(_:)(VisualIntelligence::S2Point a1)
{
  float64x2_t v3 = vmulq_f64(*(float64x2_t *)(v1 + 8), *(float64x2_t *)(v2 + 8));
  return *(double *)v1 * *(double *)v2 + v3.f64[0] + v3.f64[1];
}

float64_t + infix(_:_:)@<D0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64_t result = a1[1].f64[0] + a2[1].f64[0];
  *a3 = vaddq_f64(*a1, *a2);
  a3[1].f64[0] = result;
  return result;
}

float64_t - infix(_:_:)@<D0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64_t result = a1[1].f64[0] - a2[1].f64[0];
  *a3 = vsubq_f64(*a1, *a2);
  a3[1].f64[0] = result;
  return result;
}

double S2Point.norm.getter()
{
  return sqrt(*v0 * *v0 + v0[1] * v0[1] + v0[2] * v0[2]);
}

double S2Point.ortho.getter@<D0>(double *a1@<X8>)
{
  double v2 = *v1;
  double v3 = v1[1];
  double v4 = v1[2];
  double v5 = fabs(*v1);
  double v6 = fabs(v3);
  double v7 = fabs(v4);
  if (v6 < v5)
  {
    if (v7 < v5)
    {
      double v8 = 1.0;
      double v9 = 0.0;
      double v10 = 0.0;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >= v6)
  {
LABEL_6:
    double v10 = 1.0;
    double v9 = 0.0;
    goto LABEL_7;
  }
  double v10 = 0.0;
  double v9 = 1.0;
LABEL_7:
  double v8 = 0.0;
LABEL_8:
  double v11 = v3 * v8 - v4 * v10;
  double v12 = v4 * v9 - v2 * v8;
  double v13 = v2 * v10 - v3 * v9;
  double v14 = sqrt(v13 * v13 + v11 * v11 + v12 * v12);
  if (v14 != 0.0) {
    double v14 = 1.0 / v14;
  }
  double result = v13 * v14;
  *a1 = v11 * v14;
  a1[1] = v12 * v14;
  a1[2] = result;
  return result;
}

double S2Point.norm2.getter()
{
  return *v0 * *v0 + v0[1] * v0[1] + v0[2] * v0[2];
}

Swift::Double __swiftcall S2Point.angle(to:)(VisualIntelligence::S2Point to)
{
  double v3 = v1[1];
  double v4 = v1[2];
  double v5 = v2[1];
  double v6 = v2[2];
  double v7 = *v1 * v6 - v4 * *v2;
  double v8 = v3 * *v2 - *v1 * v5;
  return atan2(sqrt(v8 * v8 + (v4 * v5 - v3 * v6) * (v4 * v5 - v3 * v6) + v7 * v7), *v1 * *v2 + v3 * v5 + v4 * v6);
}

double S2Point.x.getter()
{
  return *(double *)v0;
}

double S2Point.y.getter()
{
  return *(double *)(v0 + 8);
}

double S2Point.z.getter()
{
  return *(double *)(v0 + 16);
}

double static S2Point.fabs(point:)@<D0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X8>)
{
  double result = fabs(a1[1].f64[0]);
  *a2 = vabsq_f64(*a1);
  a2[1].f64[0] = result;
  return result;
}

double × infix(_:_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t v3 = *(float64x2_t *)(a1 + 8);
  float64x2_t v4 = *(float64x2_t *)(a2 + 8);
  *(void *)&v5.f64[0] = vdupq_laneq_s64((int64x2_t)v4, 1).u64[0];
  v5.f64[1] = *(float64_t *)a2;
  *(void *)&v6.f64[0] = vdupq_laneq_s64((int64x2_t)v3, 1).u64[0];
  v6.f64[1] = *(float64_t *)a1;
  double result = *(double *)a1 * v4.f64[0] - *(double *)a2 * v3.f64[0];
  *a3 = vsubq_f64(vmulq_f64(v3, v5), vmulq_f64(v6, v4));
  a3[1].f64[0] = result;
  return result;
}

double ⋅ infix(_:_:)(uint64_t a1, uint64_t a2)
{
  float64x2_t v2 = vmulq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8));
  return *(double *)a1 * *(double *)a2 + v2.f64[0] + v2.f64[1];
}

Swift::Bool __swiftcall S2Point.aequal(that:margin:)(VisualIntelligence::S2Point that, Swift::Double margin)
{
  return vabdd_f64(*v3, *v2) < that.x && vabdd_f64(v3[1], v2[1]) < that.x && vabdd_f64(v3[2], v2[2]) < that.x;
}

uint64_t S2Point.hash(into:)()
{
  return sub_1DD0490F8();
}

uint64_t S2Point.hashValue.getter()
{
  return sub_1DD049108();
}

BOOL sub_1DCE9150C(double *a1, double *a2)
{
  if (*a2 < *a1) {
    return 0;
  }
  if (*a1 < *a2) {
    return 1;
  }
  double v3 = a1[1];
  double v4 = a2[1];
  if (v4 < v3) {
    return 0;
  }
  return v3 < v4 || a2[2] >= a1[2];
}

BOOL sub_1DCE91568(double *a1, double *a2)
{
  if (*a1 < *a2) {
    return 0;
  }
  if (*a2 < *a1) {
    return 1;
  }
  double v3 = a1[1];
  double v4 = a2[1];
  if (v3 < v4) {
    return 0;
  }
  return v4 < v3 || a1[2] >= a2[2];
}

BOOL sub_1DCE915C4(double *a1, double *a2)
{
  if (*a2 < *a1) {
    return 1;
  }
  if (*a1 < *a2) {
    return 0;
  }
  double v3 = a1[1];
  double v4 = a2[1];
  if (v4 < v3) {
    return 1;
  }
  return v3 >= v4 && a2[2] < a1[2];
}

uint64_t sub_1DCE91628()
{
  return sub_1DD049108();
}

BOOL sub_1DCE9168C(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

VisualIntelligence::S2Point __swiftcall abs(x:)(VisualIntelligence::S2Point x)
{
  double v3 = fabs(v1[1].f64[0]);
  float64x2_t v4 = vabsq_f64(*v1);
  *float64x2_t v2 = v4;
  v2[1].f64[0] = v3;
  x.CGFloat y = v4.f64[0];
  x.CGFloat x = v3;
  return x;
}

float64x2_t / infix(_:_:)@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X8>, uint64_t a3@<D0>)
{
  float64_t v3 = a1[1].f64[0] / *(double *)&a3;
  float64x2_t result = vdivq_f64(*a1, (float64x2_t)vdupq_lane_s64(a3, 0));
  *a2 = result;
  a2[1].f64[0] = v3;
  return result;
}

unint64_t sub_1DCE916FC()
{
  unint64_t result = qword_1EAB03C20;
  if (!qword_1EAB03C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03C20);
  }
  return result;
}

ValueMetadata *type metadata accessor for S2Point()
{
  return &type metadata for S2Point;
}

uint64_t sub_1DCE91760(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1DCFC59C0(0, v6, 0);
  int64_t v25 = v6;
  uint64_t v28 = a2;
  uint64_t v29 = a1;
  int64_t v26 = v5;
  unint64_t v27 = v4;
  if (v6)
  {
    double v7 = (int *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    double v9 = (uint64_t *)(a1 + 40);
    while (v4)
    {
      if (!v5) {
        goto LABEL_26;
      }
      uint64_t v10 = *v9;
      uint64_t v31 = *(v9 - 1);
      int v11 = *v7;
      unint64_t v13 = *(void *)(v32 + 16);
      unint64_t v12 = *(void *)(v32 + 24);
      uint64_t result = swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1) {
        uint64_t result = sub_1DCFC59C0(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v32 + 16) = v13 + 1;
      uint64_t v14 = v32 + 24 * v13;
      --v5;
      *(void *)(v14 + 32) = v31;
      *(void *)(v14 + 40) = v10;
      *(_DWORD *)(v14 + 48) = v11;
      --v4;
      ++v7;
      v9 += 2;
      if (!--v6) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
LABEL_13:
    if (v27 <= v26)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v32;
    }
    uint64_t v15 = 0;
    if (v25 <= v26) {
      int64_t v16 = v26;
    }
    else {
      int64_t v16 = v25;
    }
    int64_t v30 = v16 - v25;
    unint64_t v17 = v27 - v25;
    uint64_t v18 = (uint64_t *)(v29 + 16 * v25 + 40);
    while (v17 != v15)
    {
      if (v26 - v25 == v15) {
        goto LABEL_24;
      }
      if (v30 == v15) {
        goto LABEL_28;
      }
      uint64_t v20 = *(v18 - 1);
      uint64_t v19 = *v18;
      int v21 = *(_DWORD *)(v28 + 4 * v25 + 32 + 4 * v15);
      unint64_t v23 = *(void *)(v32 + 16);
      unint64_t v22 = *(void *)(v32 + 24);
      uint64_t result = swift_bridgeObjectRetain();
      if (v23 >= v22 >> 1) {
        uint64_t result = sub_1DCFC59C0(v22 > 1, v23 + 1, 1);
      }
      *(void *)(v32 + 16) = v23 + 1;
      uint64_t v24 = v32 + 24 * v23;
      *(void *)(v24 + 32) = v20;
      *(void *)(v24 + 40) = v19;
      *(_DWORD *)(v24 + 48) = v21;
      ++v15;
      v18 += 2;
      if (v17 == v15) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1DCE919A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for EspressoModel(0);
  MEMORY[0x1F4188790](v9 - 8);
  int v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v4 + 136)) {
    sub_1DCF3B26C(*(void *)(a1 + 80));
  }
  sub_1DCE92678(a3, (uint64_t)v11);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v13 = qword_1EBE84A80;
  swift_retain();
  if (v13 != -1) {
    swift_once();
  }
  long long v22 = xmmword_1EBE84A60;
  long long v14 = xmmword_1EBE84A70;
  type metadata accessor for EspressoRequest(0);
  uint64_t v15 = swift_allocObject();
  sub_1DCE92678((uint64_t)v11, v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_model);
  *(void *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_features) = 0;
  *(void *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_vnScalingMode) = v12;
  int64_t v16 = (long long *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_regionOfInterest);
  *int64_t v16 = v22;
  v16[1] = v14;
  *(void *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_outputs) = 0;
  unint64_t v17 = (void *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_completionHandler);
  *unint64_t v17 = faiss::NormalizationTransform::~NormalizationTransform;
  v17[1] = 0;
  if (qword_1EBE85738 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_1EBE9C908;
  swift_retain();
  sub_1DCE926DC((uint64_t)v11);
  *(void *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_engineResult) = v18;
  *(unsigned char *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_usesCPUOnly) = 0;
  *(void *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_metricsBucket) = a4;
  uint64_t v19 = (_OWORD *)(v15 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_regionOfInterest);
  long long v20 = *(_OWORD *)(a1 + 56);
  *uint64_t v19 = *(_OWORD *)(a1 + 40);
  v19[1] = v20;
  return v15;
}

void sub_1DCE91BCC()
{
  qword_1EBE9C860 = (uint64_t)&unk_1F3835420;
}

uint64_t sub_1DCE91BE0()
{
  return sub_1DCEA3DA4();
}

void *sub_1DCE91C04(uint64_t a1, double a2, double a3, double a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = a1;
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v37 = v13;
  do
  {
    uint64_t v17 = *(void *)(v12 + v14 + 32);
    int v18 = *(_DWORD *)(v12 + v14 + 40);
    double v19 = *(double *)(v12 + v14 + 48);
    double v20 = *(double *)(v12 + v14 + 56);
    double v21 = *(double *)(v12 + v14 + 64);
    double v22 = *(double *)(v12 + v14 + 72);
    sub_1DCE167E4(*(void *)(v12 + v14 + 80), 0, 0, &v47);
    uint64_t v23 = v48;
    if (v48)
    {
      uint64_t v24 = v47;
      uint64_t v25 = v50;
      uint64_t v51 = v49;
      VIPredictionInNormalizedImageCoordinates(a11, v20, v19, v22 - v20, v21 - v19, a2, a3, a4, a5, a6, a7, a8, a9);
      CGFloat x = v52.origin.x;
      CGFloat y = v52.origin.y;
      CGFloat width = v52.size.width;
      CGFloat height = v52.size.height;
      CGFloat MinX = CGRectGetMinX(v52);
      v53.origin.CGFloat x = x;
      v53.origin.CGFloat y = y;
      v53.size.CGFloat width = width;
      v53.size.CGFloat height = height;
      double MaxY = CGRectGetMaxY(v53);
      v54.origin.CGFloat x = x;
      v54.origin.CGFloat y = y;
      v54.size.CGFloat width = width;
      v54.size.CGFloat height = height;
      CGFloat v32 = CGRectGetWidth(v54);
      v55.origin.CGFloat x = x;
      v55.origin.CGFloat y = y;
      v55.size.CGFloat width = width;
      v55.size.CGFloat height = height;
      CGFloat v33 = CGRectGetHeight(v55);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_1DCE9DE38(0, v15[2] + 1, 1, v15);
      }
      unint64_t v35 = v15[2];
      unint64_t v34 = v15[3];
      if (v35 >= v34 >> 1) {
        uint64_t v15 = sub_1DCE9DE38((void *)(v34 > 1), v35 + 1, 1, v15);
      }
      v15[2] = v35 + 1;
      int64_t v16 = (CGFloat *)&v15[10 * v35];
      *((void *)v16 + 4) = v17;
      v16[5] = MinX;
      v16[6] = 1.0 - MaxY;
      v16[7] = v32;
      v16[8] = v33;
      *((void *)v16 + 9) = v24;
      *((void *)v16 + 10) = v23;
      *((void *)v16 + 11) = v51;
      *((void *)v16 + 12) = v25;
      *((_DWORD *)v16 + 26) = v18;
      uint64_t v12 = v37;
    }
    v14 += 56;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  return v15;
}

void sub_1DCE91E34(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X8>, double a8@<D0>, double a9@<D1>, CGFloat a10@<D2>, CGFloat a11@<D3>, CGFloat a12@<D4>, CGFloat a13@<D5>)
{
  sub_1DCDE3814(a4, a1, a2, a3, a5, (uint64_t)v42);
  if (!v13)
  {
    uint64_t v24 = v42[0];
    uint64_t v25 = (void *)v42[1];
    int64_t v26 = (void *)v42[2];
    uint64_t v40 = (void *)v42[4];
    uint64_t v41 = (void *)v42[3];
    unint64_t v27 = VIvnCropScaleToVi(*(void *)(a2 + 72));
    swift_retain();
    uint64_t v28 = sub_1DCE91C04(v24, a8, a9, 512.0, 512.0, a10, a11, a12, a13, a3, v27);
    swift_bridgeObjectRelease();
    swift_release();
    if (a6)
    {
      id v29 = a6;
      uint64_t v38 = v27;
      int64_t v30 = (char *)sub_1DD0483C8();
      uint64_t v36 = sub_1DCF4DCA4(v30, v35);
      if (qword_1EBE85298 != -1) {
        swift_once();
      }
      uint64_t v37 = swift_bridgeObjectRetain();
      uint64_t v39 = sub_1DCE91760(v37, v36);
      swift_release();
      swift_bridgeObjectRelease();

      uint64_t v31 = v41;
      if (!v25) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v38 = v27;
      uint64_t v39 = 0;
      uint64_t v31 = v41;
      if (!v25)
      {
LABEL_9:
        CGFloat v33 = 0;
        int64_t v26 = 0;
        uint64_t v31 = 0;
        a6 = 0;
        goto LABEL_10;
      }
    }
    swift_retain();
    sub_1DCE9212C(v25, v26, v31, v40);
    uint64_t v32 = swift_bridgeObjectRetain();
    CGFloat v33 = sub_1DCE91C04(v32, a8, a9, 512.0, 512.0, a10, a11, a12, a13, a3, v38);
    swift_release();
    sub_1DCE92188((uint64_t)v25, v26, v31, v40);
    id v34 = a6;
    swift_bridgeObjectRelease_n();

LABEL_10:
    *a7 = v28;
    a7[1] = v39;
    a7[2] = v33;
    a7[3] = v26;
    a7[4] = v31;
    a7[5] = a6;
  }
}

id sub_1DCE9212C(id result, void *a2, void *a3, void *a4)
{
  if (result)
  {
    id v5 = a4;
    swift_bridgeObjectRetain();
    id v6 = a2;
    return a3;
  }
  return result;
}

void sub_1DCE92188(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
  }
}

void sub_1DCE921E0(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  if (v5) {
    return;
  }
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 + 24);
  if (!*(void *)(v14 + 16))
  {
LABEL_13:
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v31 = 0xD000000000000019;
    *(void *)(v31 + 8) = 0x80000001DD06CC60;
    *(unsigned char *)(v31 + 16) = 4;
    swift_willThrow();
    swift_release();
    return;
  }
  uint64_t v15 = a3[1];
  uint64_t v16 = a3[2];
  swift_bridgeObjectRetain();
  unint64_t v17 = sub_1DCEAD1A4(v15, v16);
  if ((v18 & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  id v19 = *(id *)(*(void *)(v14 + 56) + 8 * v17);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v13 + 24);
  if (!*(void *)(v20 + 16))
  {

    goto LABEL_13;
  }
  uint64_t v21 = a3[4];
  uint64_t v22 = a3[5];
  swift_bridgeObjectRetain();
  unint64_t v23 = sub_1DCEAD1A4(v21, v22);
  if ((v24 & 1) == 0)
  {

    goto LABEL_12;
  }
  uint64_t v64 = *(id *)(*(void *)(v20 + 56) + 8 * v23);
  swift_bridgeObjectRelease();
  sub_1DCE92610((uint64_t)(a3 + 12), (uint64_t)v61);
  sub_1DCE92610((uint64_t)v61, (uint64_t)&v62);
  uint64_t v25 = v63;
  if (!v63)
  {
    char v57 = 0;
    id v58 = v19;
    goto LABEL_16;
  }
  uint64_t v26 = *(void *)(v13 + 24);
  if (!*(void *)(v26 + 16))
  {
LABEL_21:
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v53 = 0xD00000000000002FLL;
    *(void *)(v53 + 8) = 0x80000001DD06CC80;
    *(unsigned char *)(v53 + 16) = 4;
    swift_willThrow();
    swift_release();

    return;
  }
  uint64_t v27 = v62;
  swift_bridgeObjectRetain();
  unint64_t v28 = sub_1DCEAD1A4(v27, v25);
  if ((v29 & 1) == 0)
  {
    sub_1DCD64B4C((uint64_t)v61);
    goto LABEL_21;
  }
  char v57 = *(void **)(*(void *)(v26 + 56) + 8 * v28);
  id v58 = v19;
  id v30 = v57;
  sub_1DCD64B4C((uint64_t)v61);
LABEL_16:
  uint64_t v33 = *(void *)(a1 + 24);
  uint64_t v32 = *(void *)(a1 + 32);
  __swift_project_boxed_opaque_existential_1((void *)a1, v33);
  double v34 = (*(double (**)(uint64_t, uint64_t))(v32 + 16))(v33, v32);
  double v36 = v35;
  uint64_t v37 = *(void *)(a1 + 24);
  uint64_t v38 = *(void *)(a1 + 32);
  __swift_project_boxed_opaque_existential_1((void *)a1, v37);
  unsigned int v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
  if (v39 < 5)
  {
    double v55 = v34;
    double v34 = v36;
    uint64_t v40 = v58;
LABEL_19:
    CGFloat v41 = *(double *)(a1 + 40);
    CGFloat v42 = *(double *)(a1 + 48);
    CGFloat v43 = *(double *)(a1 + 56);
    CGFloat v44 = *(double *)(a1 + 64);
    v65.origin.CGFloat x = v41;
    v65.origin.CGFloat y = v42;
    v65.size.CGFloat width = v43;
    v65.size.CGFloat height = v44;
    CGFloat MinX = CGRectGetMinX(v65);
    v66.origin.CGFloat x = v41;
    v66.origin.CGFloat y = v42;
    v66.size.CGFloat width = v43;
    v66.size.CGFloat height = v44;
    CGFloat v46 = 1.0 - CGRectGetMaxY(v66);
    v67.origin.CGFloat x = v41;
    v67.origin.CGFloat y = v42;
    v67.size.CGFloat width = v43;
    v67.size.CGFloat height = v44;
    CGFloat Width = CGRectGetWidth(v67);
    v68.origin.CGFloat x = v41;
    v68.origin.CGFloat y = v42;
    v68.size.CGFloat width = v43;
    v68.size.CGFloat height = v44;
    CGFloat Height = CGRectGetHeight(v68);
    uint64_t v49 = v64;
    sub_1DCE91E34(*(unsigned char *)(a1 + 72), (uint64_t)a3, a4, v40, v64, v57, v60, v55, v34, MinX, v46, Width, Height);
    uint64_t v59 = v60[0];
    uint64_t v50 = v60[3];
    uint64_t v54 = v60[2];
    uint64_t v56 = v60[1];
    uint64_t v51 = v60[4];
    uint64_t v52 = v60[5];
    swift_release();

    *a5 = v59;
    a5[1] = v56;
    a5[2] = v54;
    a5[3] = v50;
    a5[4] = v51;
    a5[5] = v52;
    return;
  }
  double v55 = v36;
  uint64_t v40 = v58;
  if (v39 - 5 < 4) {
    goto LABEL_19;
  }
  type metadata accessor for CGImagePropertyOrientation(0);
  sub_1DD048FF8();
  __break(1u);
}

uint64_t sub_1DCE92610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCE92678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EspressoModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCE926DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EspressoModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

VisualIntelligence::S2::Metric __swiftcall S2.Metric.init(dim:deriv:)(Swift::Int dim, Swift::Double deriv)
{
  *(Swift::Double *)uint64_t v2 = deriv;
  *(void *)(v2 + 8) = dim;
  result.deriv = deriv;
  result.dim = dim;
  return result;
}

void static S2.robustCrossProd(a:b:)(double *a1@<X0>, double *a2@<X1>, double *a3@<X8>)
{
  double v3 = a1[1];
  double v4 = a1[2];
  double v5 = a2[1];
  double v6 = a2[2];
  double v7 = *a1 + *a2;
  double v8 = v3 + v5;
  double v9 = *a2 - *a1;
  double v10 = v5 - v3;
  double v11 = (v3 + v5) * (v6 - v4) - (v5 - v3) * (v4 + v6);
  double v12 = v9 * (v4 + v6) - v7 * (v6 - v4);
  double v13 = v7 * v10 - v9 * v8;
  if (v11 == 0.0 && v12 == 0.0 && v13 == 0.0)
  {
    S2Point.ortho.getter(a3);
  }
  else
  {
    *a3 = v11;
    a3[1] = v12;
    a3[2] = v13;
  }
}

BOOL static S2.isUnitLength(point:)(double *a1)
{
  return fabs(*a1 * *a1 + a1[1] * a1[1] + a1[2] * a1[2] + -1.0) <= 1.0e-15;
}

BOOL static S2.simpleCCW(a:b:c:)(uint64_t a1, float64x2_t *a2, uint64_t a3)
{
  float64x2_t v3 = *(float64x2_t *)(a1 + 8);
  *(void *)&v4.f64[0] = vdupq_laneq_s64((int64x2_t)v3, 1).u64[0];
  v4.f64[1] = *(float64_t *)a1;
  float64x2_t v5 = *(float64x2_t *)(a3 + 8);
  *(void *)&v6.f64[0] = vdupq_laneq_s64((int64x2_t)v5, 1).u64[0];
  v6.f64[1] = *(float64_t *)a3;
  return a2[1].f64[0] * (*(double *)a3 * v3.f64[0] - *(double *)a1 * v5.f64[0])
       + vaddvq_f64(vmulq_f64(*a2, vsubq_f64(vmulq_f64(v4, v5), vmulq_f64(v3, v6)))) > 0.0;
}

uint64_t static S2.swapMask.getter()
{
  return 1;
}

uint64_t static S2.invertMask.getter()
{
  return 2;
}

void sub_1DCE928A0()
{
  qword_1EBE9C878 = (uint64_t)&unk_1F3836318;
}

unint64_t static S2.posToOrientation(position:)(unint64_t result)
{
  if (result > 3)
  {
    __break(1u);
  }
  else
  {
    unint64_t v1 = result;
    if (qword_1EBE85AB0 == -1) {
      goto LABEL_3;
    }
  }
  VisualIntelligence::S2::Metric result = swift_once();
LABEL_3:
  if (*(void *)(qword_1EBE9C878 + 16) > v1) {
    return *(void *)(qword_1EBE9C878 + 8 * v1 + 32);
  }
  __break(1u);
  return result;
}

double sub_1DCE92930()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86AF0);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 4;
  *(_OWORD *)(v0 + 16) = xmmword_1DD04EF80;
  *(void *)(v0 + 32) = &unk_1F3836518;
  *(void *)(v0 + 40) = &unk_1F3836458;
  *(void *)(v0 + 48) = &unk_1F3836498;
  *(void *)(v0 + 56) = &unk_1F38364D8;
  off_1EBE85AB8 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static S2.posToIJ(orientation:position:)(uint64_t a1, unint64_t a2)
{
  return sub_1DCE92A48(a1, a2, &qword_1EBE85AC8, (uint64_t)&off_1EBE85AB8);
}

double sub_1DCE929BC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86AF0);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 4;
  *(_OWORD *)(v0 + 16) = xmmword_1DD04EF80;
  *(void *)(v0 + 32) = &unk_1F3836418;
  *(void *)(v0 + 40) = &unk_1F3836358;
  *(void *)(v0 + 48) = &unk_1F3836398;
  *(void *)(v0 + 56) = &unk_1F38363D8;
  qword_1EAB03C28 = v0;
  return result;
}

uint64_t static S2.toPos(orientation:ijIndex:)(uint64_t a1, unint64_t a2)
{
  return sub_1DCE92A48(a1, a2, qword_1EAB01F20, (uint64_t)&qword_1EAB03C28);
}

uint64_t sub_1DCE92A48(uint64_t result, unint64_t a2, void *a3, uint64_t a4)
{
  if ((a2 | result) > 3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a4;
    unint64_t v4 = a2;
    unint64_t v5 = result;
    if (*a3 == -1) {
      goto LABEL_3;
    }
  }
  double result = swift_once();
LABEL_3:
  if (*(void *)(*(void *)v6 + 16) <= v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void *)(*(void *)v6 + 8 * v5 + 32);
    if (*(void *)(v7 + 16) > v4) {
      return *(void *)(v7 + 8 * v4 + 32);
    }
  }
  __break(1u);
  return result;
}

double S2.Metric.deriv.getter()
{
  return *(double *)v0;
}

uint64_t S2.Metric.dim.getter()
{
  return *(void *)(v0 + 8);
}

Swift::Double __swiftcall S2.Metric.getValue(level:)(Swift::Int level)
{
  return scalb(*(double *)v1, (1.0 - (double)level) * (double)*(uint64_t *)(v1 + 8));
}

Swift::Int __swiftcall S2.Metric.getClosestLevel(value:)(Swift::Double value)
{
  return S2.Metric.getMinLevel(value:)(value * 1.41421356);
}

Swift::Int __swiftcall S2.Metric.getMinLevel(value:)(Swift::Double value)
{
  if (value <= 0.0) {
    return 30;
  }
  unint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = 1 << v2;
  if (v2 >= 0x40) {
    uint64_t v3 = 0;
  }
  if (v2 > 0x40) {
    uint64_t v3 = 0;
  }
  double v6 = exp(value / (*(double *)v1 * (double)v3));
  uint64_t v7 = *(void *)&v6;
  if ((*(void *)&v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v5 < -64)
  {
LABEL_9:
    uint64_t v8 = 0;
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)&v6 - 1;
  if (v5 > 64) {
    goto LABEL_12;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    if ((unint64_t)v5 < 0x40)
    {
      uint64_t v9 = v7 >> v5;
      BOOL v10 = __OFSUB__(0, v9);
      uint64_t v8 = -v9;
      if (!v10) {
        goto LABEL_18;
      }
      goto LABEL_26;
    }
LABEL_12:
    uint64_t v8 = -(v7 >> 63);
    if (!__OFSUB__(0, v7 >> 63)) {
      goto LABEL_18;
    }
LABEL_26:
    __break(1u);
    return result;
  }
LABEL_23:
  if ((unint64_t)v5 <= 0xFFFFFFFFFFFFFFC0) {
    goto LABEL_9;
  }
  uint64_t v12 = v7 << -(char)v5;
  BOOL v10 = __OFSUB__(0, v12);
  uint64_t v8 = -v12;
  if (v10) {
    goto LABEL_26;
  }
LABEL_18:
  Swift::Int v11 = v8 & ~(v8 >> 63);
  if (v11 >= 30) {
    return 30;
  }
  else {
    return v11;
  }
}

Swift::Int __swiftcall S2.Metric.getMaxLevel(value:)(Swift::Double value)
{
  if (value <= 0.0) {
    return 30;
  }
  unint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = 1 << v2;
  if (v2 >= 0x40) {
    uint64_t v3 = 0;
  }
  if (v2 > 0x40) {
    uint64_t v3 = 0;
  }
  long double v5 = exp(*(double *)v1 * (double)v3 / value);
  unint64_t v6 = *(void *)&v5 - 1;
  if (v5 == 0.0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v4 < -64 || v4 > 64) {
    return 0;
  }
  if (v4 < 0)
  {
LABEL_19:
    if ((unint64_t)v4 > 0xFFFFFFFFFFFFFFC0)
    {
      uint64_t v8 = v6 << -(char)v4;
      if (v8 <= 29) {
        return v8 & ~(v8 >> 63);
      }
      return 30;
    }
    return 0;
  }
  if ((unint64_t)v4 >= 0x40) {
    return 0;
  }
  uint64_t v8 = v6 >> v4;
  if (v8 <= 29) {
    return v8 & ~(v8 >> 63);
  }
  return 30;
}

double static S2.origin.getter@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_1DD04F320;
  *(void *)(a1 + 16) = 0;
  return result;
}

double static S2.signedArea(a:b:c:)(uint64_t a1, double *a2, double *a3, double a4, double a5, double a6)
{
  double v7 = *(double *)(a1 + 8);
  double v8 = *(double *)(a1 + 16);
  double v9 = *a2;
  double v10 = a2[1];
  double v11 = a2[2];
  double v13 = *a3;
  uint64_t v12 = *((void *)a3 + 1);
  double v16 = a3[2];
  *(void *)&long long v23 = *(void *)a1;
  double v6 = *(double *)&v23;
  *((double *)&v23 + 1) = v7;
  double v24 = v8;
  *(double *)&long long v21 = v9;
  *((double *)&v21 + 1) = v10;
  double v22 = v11;
  double v18 = v13;
  uint64_t v19 = v12;
  double v20 = v16;
  sub_1DCE93C70((uint64_t *)&v23, (uint64_t *)&v21, &v18, v16, a5, a6);
  *(double *)&long long v23 = v6;
  *((double *)&v23 + 1) = v7;
  double v24 = v8;
  *(double *)&long long v21 = v9;
  *((double *)&v21 + 1) = v10;
  double v22 = v11;
  double v18 = v13;
  uint64_t v19 = v12;
  double v20 = v16;
  v17[0] = v7 * v11 - v8 * v10;
  v17[1] = v8 * v9 - v6 * v11;
  v17[2] = v6 * v10 - v7 * v9;
  return v14 * (double)_s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v23, &v21, &v18, v17);
}

uint64_t static S2.robustCCW(a:b:c:)(uint64_t a1, double *a2, long long *a3)
{
  double v3 = *(double *)(a1 + 8);
  double v4 = *(double *)(a1 + 16);
  double v5 = *a2;
  double v6 = a2[1];
  double v7 = a2[2];
  uint64_t v8 = *((void *)a3 + 2);
  *(void *)&long long v15 = *(void *)a1;
  *((double *)&v15 + 1) = v3;
  double v16 = v4;
  *(double *)&long long v13 = v5;
  *((double *)&v13 + 1) = v6;
  double v14 = v7;
  long long v11 = *a3;
  uint64_t v12 = v8;
  v10[0] = v3 * v7 - v4 * v6;
  v10[1] = v4 * v5 - *(double *)&v15 * v7;
  id v10[2] = *(double *)&v15 * v6 - v3 * v5;
  return _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v15, &v13, (double *)&v11, v10);
}

float64_t static S2.planarCentroid(a:b:c:)@<D0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X2>, float64x2_t *a4@<X8>)
{
  float64_t result = (a1[1].f64[0] + a2[1].f64[0] + a3[1].f64[0]) / 3.0;
  __asm { FMOV            V2.2D, #3.0 }
  *a4 = vdivq_f64(vaddq_f64(vaddq_f64(*a1, *a2), *a3), _Q2);
  a4[1].f64[0] = result;
  return result;
}

double static S2.trueCentroid(a:b:c:)@<D0>(double *a1@<X0>, double *a2@<X1>, double *a3@<X2>, double *a4@<X8>)
{
  double v5 = a1[1];
  double v6 = a1[2];
  double v7 = a2[1];
  double v8 = a2[2];
  double v9 = a3[1];
  double v10 = a3[2];
  double v11 = v7 * v10 - v8 * v9;
  double v12 = v8 * *a3 - *a2 * v10;
  double v13 = *a2 * v9 - v7 * *a3;
  double v14 = sqrt(v13 * v13 + v11 * v11 + v12 * v12);
  double v15 = v6 * v9 - v5 * v10;
  double v16 = *a1 * v10 - v6 * *a3;
  double v17 = v5 * *a3 - *a1 * v9;
  double v18 = sqrt(v17 * v17 + v15 * v15 + v16 * v16);
  double v19 = v5 * v8 - v6 * v7;
  double v20 = v6 * *a2 - *a1 * v8;
  double v21 = *a1 * v7 - v5 * *a2;
  double v22 = sqrt(v21 * v21 + v19 * v19 + v20 * v20);
  if (v14 == 0.0)
  {
    if (v18 == 0.0)
    {
      double v23 = 1.0;
      double v24 = 1.0;
      double v25 = 1.0;
      if (v22 != 0.0) {
        goto LABEL_10;
      }
      goto LABEL_11;
    }
    double v35 = v19;
    double v37 = v20;
    double v39 = v6 * v9 - v5 * v10;
    double v41 = *a2 * v9 - v7 * *a3;
    double v24 = 1.0;
  }
  else
  {
    double v35 = v19;
    double v37 = v20;
    double v39 = v6 * v9 - v5 * v10;
    double v41 = *a2 * v9 - v7 * *a3;
    double v24 = asin(v14) / v14;
    if (v18 == 0.0)
    {
      double v23 = 1.0;
      BOOL v26 = v22 == 0.0;
      double v25 = 1.0;
      goto LABEL_9;
    }
  }
  long double v27 = asin(v18);
  double v25 = 1.0;
  BOOL v26 = v22 == 0.0;
  double v23 = v27 / v18;
LABEL_9:
  double v15 = v39;
  double v13 = v41;
  double v19 = v35;
  double v20 = v37;
  if (!v26)
  {
LABEL_10:
    double v40 = v17;
    double v42 = v16;
    double v36 = v21;
    double v38 = v11;
    double v28 = v12;
    double v29 = v13;
    double v30 = v15;
    double v31 = v20;
    double v32 = v19;
    long double v33 = asin(v22);
    double v19 = v32;
    double v20 = v31;
    double v15 = v30;
    double v13 = v29;
    double v12 = v28;
    double v21 = v36;
    double v11 = v38;
    double v17 = v40;
    double v16 = v42;
    double v25 = v33 / v22;
  }
LABEL_11:
  double result = (v19 * v25 + v15 * v23 + v11 * v24) * 0.5;
  *a4 = result;
  a4[1] = (v20 * v25 + v16 * v23 + v12 * v24) * 0.5;
  a4[2] = (v21 * v25 + v17 * v23 + v13 * v24) * 0.5;
  return result;
}

Swift::Double static S2.angle(a:b:c:)(uint64_t a1, double *a2, double *a3)
{
  double v3 = a2[1];
  double v4 = a2[2];
  double v5 = a3[1];
  double v6 = a3[2];
  v8.CGFloat x = v4 * v5 - v3 * v6;
  v8.CGFloat y = *a2 * v6 - v4 * *a3;
  v8.z = v3 * *a3 - *a2 * v5;
  return S2Point.angle(to:)(v8);
}

uint64_t static S2.turnAngle(a:b:c:)(double *a1, double *a2, double *a3)
{
  double v3 = *a1;
  double v4 = a1[1];
  double v5 = a1[2];
  double v6 = *a2;
  double v7 = a2[1];
  double v8 = a2[2];
  double v10 = *a3;
  double v9 = a3[1];
  double v12 = a3[2];
  double v15 = *a1 * v8;
  double v16 = v5 * *a2;
  double v13 = v4 * *a2;
  double v14 = *a1 * v7;
  v23.CGFloat x = v8 * v9 - v7 * v12;
  v23.CGFloat y = *a2 * v12 - v8 * *a3;
  v23.z = v7 * *a3 - *a2 * v9;
  S2Point.angle(to:)(v23);
  *(double *)&long long v21 = v3;
  *((double *)&v21 + 1) = v4;
  double v22 = v5;
  *(double *)&long long v19 = v6;
  *((double *)&v19 + 1) = v7;
  double v20 = v8;
  v18[0] = v10;
  v18[1] = v9;
  void v18[2] = v12;
  v17[0] = v4 * v8 - v5 * v7;
  v17[1] = v16 - v15;
  v17[2] = v14 - v13;
  return _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v21, &v19, v18, v17);
}

BOOL static S2.approxEquals(_:_:maxError:)(Swift::Double *a1, Swift::Double *a2, Swift::Double a3)
{
  v5.CGFloat y = a2[2];
  v5.z = *a1;
  v5.CGFloat x = *a2;
  return S2Point.angle(to:)(v5) <= a3;
}

BOOL static S2.approxEquals(_:_:maxError:)(double a1, double a2, double a3)
{
  return vabdd_f64(a1, a2) <= a3;
}

BOOL _s18VisualIntelligence2S2V14simpleCrossing1a1b1c1dSbAA0C5PointV_A3JtFZ_0(double *a1, double *a2, double *a3, double *a4)
{
  BOOL result = 0;
  double v6 = a1[1];
  double v7 = a1[2];
  double v8 = a2[1];
  double v9 = a2[2];
  double v10 = a3[1];
  double v11 = a3[2];
  double v12 = a4[1];
  double v13 = a4[2];
  double v14 = v6 * v9 - v7 * v8;
  double v15 = v7 * *a2 - *a1 * v9;
  double v16 = *a1 * v8 - v6 * *a2;
  double v17 = v10 * v13 - v11 * v12;
  double v18 = v11 * *a4 - *a3 * v13;
  double v19 = *a3 * v12 - v10 * *a4;
  double v20 = v9 * v19 + *a2 * v17 + v8 * v18;
  if ((*a3 * v14 + v15 * v10 + v16 * v11) * v20 > 0.0)
  {
    double v21 = v14 * *a4 + v15 * v12 + v16 * v13;
    if (-(v20 * v21) > 0.0) {
      return v21 * (v7 * v19 + *a1 * v17 + v6 * v18) > 0.0;
    }
  }
  return result;
}

uint64_t _s18VisualIntelligence2S2V9planarCCW1a1bSiAA8R2VectorV_AHtFZ_0(double *a1, double *a2)
{
  double v2 = *a1;
  double v3 = a1[1];
  double v4 = *a2;
  double v5 = a2[1];
  double v6 = 1.0;
  if (*a1 * *a2 + v3 * v5 > 0.0) {
    double v6 = -1.0;
  }
  double v7 = v2 + v4 * v6;
  double v8 = v3 + v5 * v6;
  double v9 = v2 * v2 + v3 * v3;
  double v10 = v4 * v4 + v5 * v5;
  if (v9 < v10 || v9 == v10 && (v2 < v4 || (v4 >= v2 ? (BOOL v11 = v3 < v5) : (BOOL v11 = 0), v11))) {
    double v12 = v6 * (v2 * v8 - v3 * v7);
  }
  else {
    double v12 = v5 * v7 - v4 * v8;
  }
  if (v12 >= 0.0) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = -1;
  }
  if (v12 > 0.0) {
    return 1;
  }
  else {
    return v13;
  }
}

uint64_t _s18VisualIntelligence2S2V16planarOrderedCCW1a1b1cSiAA8R2VectorV_A2ItFZ_0(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *a3;
  uint64_t v8 = a3[1];
  uint64_t v16 = *a1;
  uint64_t v17 = v4;
  uint64_t v14 = v5;
  uint64_t v15 = v6;
  uint64_t v9 = _s18VisualIntelligence2S2V9planarCCW1a1bSiAA8R2VectorV_AHtFZ_0((double *)&v16, (double *)&v14);
  uint64_t v16 = v5;
  uint64_t v17 = v6;
  uint64_t v14 = v7;
  uint64_t v15 = v8;
  uint64_t result = _s18VisualIntelligence2S2V9planarCCW1a1bSiAA8R2VectorV_AHtFZ_0((double *)&v16, (double *)&v14);
  BOOL v11 = __OFADD__(v9, result);
  uint64_t v12 = v9 + result;
  if (v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v16 = v7;
  uint64_t v17 = v8;
  uint64_t v14 = v3;
  uint64_t v15 = v4;
  uint64_t result = _s18VisualIntelligence2S2V9planarCCW1a1bSiAA8R2VectorV_AHtFZ_0((double *)&v16, (double *)&v14);
  uint64_t v13 = v12 + result;
  if (__OFADD__(v12, result))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  if (v13 >= 1) {
    return 1;
  }
  else {
    return v13 >> 63;
  }
}

uint64_t sub_1DCE9357C(double *a1, double *a2, double *a3)
{
  double v3 = *a1;
  double v4 = a1[1];
  double v5 = a1[2];
  double v6 = *a2;
  double v7 = a2[1];
  double v8 = a2[2];
  if (*a1 == *a2 && v4 == v7 && v5 == v8) {
    return 0;
  }
  double v11 = *a3;
  double v12 = a3[1];
  double v13 = a3[2];
  BOOL v14 = v6 == *a3 && v7 == v12;
  if (v14 && v8 == v13) {
    return 0;
  }
  BOOL v16 = v11 == v3 && v12 == v4;
  if (v16 && v13 == v5) {
    return 0;
  }
  double v18 = 1.0;
  if (v3 * v6 + v4 * v7 + v5 * v8 <= 0.0) {
    double v19 = 1.0;
  }
  else {
    double v19 = -1.0;
  }
  if (v6 * v11 + v7 * v12 + v8 * v13 <= 0.0) {
    double v20 = 1.0;
  }
  else {
    double v20 = -1.0;
  }
  if (v3 * v11 + v4 * v12 + v5 * v13 > 0.0) {
    double v18 = -1.0;
  }
  double v21 = v3 + v6 * v19;
  double v22 = v4 + v7 * v19;
  double v23 = v5 + v8 * v19;
  double v24 = v6 + v11 * v20;
  double v25 = v7 + v12 * v20;
  double v26 = v8 + v13 * v20;
  double v27 = v11 + v3 * v18;
  double v28 = v12 + v4 * v18;
  double v29 = v13 + v5 * v18;
  double v30 = v23 * v23 + v21 * v21 + v22 * v22;
  double v31 = v26 * v26 + v24 * v24 + v25 * v25;
  double v32 = v29 * v29 + v27 * v27 + v28 * v28;
  if (v32 < v31 || v32 == v31 && (v3 < v6 || v6 >= v3 && (v4 < v7 || v7 >= v4 && v5 < v8)))
  {
    if (v30 < v31 || v30 == v31 && (v3 < v11 || v11 >= v3 && (v4 < v12 || v12 >= v4 && v5 < v13)))
    {
      double v36 = v19 * (v5 * (v21 * v28 - v22 * v27) + v3 * (v22 * v29 - v23 * v28) + v4 * (v23 * v27 - v21 * v29));
      BOOL v34 = v36 < 0.0;
      if (v36 <= 0.0) {
        goto LABEL_56;
      }
      return 1;
    }
LABEL_55:
    double v37 = v18 * (v13 * (v27 * v25 - v28 * v24) + v11 * (v28 * v26 - v29 * v25) + v12 * (v29 * v24 - v27 * v26));
    BOOL v34 = v37 < 0.0;
    if (v37 <= 0.0) {
      goto LABEL_56;
    }
    return 1;
  }
  if (v30 >= v32 && (v30 != v32 || v6 >= v11 && (v11 < v6 || v7 >= v12 && (v12 < v7 || v8 >= v13)))) {
    goto LABEL_55;
  }
  double v33 = v20 * (v8 * (v22 * v24 - v21 * v25) + v6 * (v23 * v25 - v22 * v26) + v7 * (v21 * v26 - v23 * v24));
  BOOL v34 = v33 < 0.0;
  if (v33 > 0.0) {
    return 1;
  }
LABEL_56:
  if (v34) {
    return -1;
  }
  double v43 = a1[1];
  double v44 = v5;
  double v41 = v7;
  double v42 = v8;
  double v38 = v12;
  double v39 = v12;
  double v40 = v13;
  uint64_t result = _s18VisualIntelligence2S2V16planarOrderedCCW1a1b1cSiAA8R2VectorV_A2ItFZ_0((uint64_t *)&v43, (uint64_t *)&v41, (uint64_t *)&v39);
  if (!result)
  {
    double v43 = v5;
    double v44 = v3;
    double v41 = v8;
    double v42 = v6;
    double v39 = v13;
    double v40 = v11;
    uint64_t result = _s18VisualIntelligence2S2V16planarOrderedCCW1a1b1cSiAA8R2VectorV_A2ItFZ_0((uint64_t *)&v43, (uint64_t *)&v41, (uint64_t *)&v39);
    if (!result)
    {
      double v43 = v3;
      double v44 = v4;
      double v41 = v6;
      double v42 = v7;
      double v39 = v11;
      double v40 = v38;
      return _s18VisualIntelligence2S2V16planarOrderedCCW1a1b1cSiAA8R2VectorV_A2ItFZ_0((uint64_t *)&v43, (uint64_t *)&v41, (uint64_t *)&v39);
    }
  }
  return result;
}

uint64_t _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(long long *a1, long long *a2, double *a3, double *a4)
{
  double v4 = *a3;
  double v5 = a3[1];
  double v6 = a3[2];
  double v7 = *a3 * *a4 + v5 * a4[1] + v6 * a4[2];
  if (v7 > 1.6e-15) {
    return 1;
  }
  if (v7 < -1.6e-15) {
    return -1;
  }
  uint64_t v9 = *((void *)a1 + 2);
  long long v10 = *a2;
  uint64_t v11 = *((void *)a2 + 2);
  long long v15 = *a1;
  uint64_t v16 = v9;
  long long v13 = v10;
  uint64_t v14 = v11;
  v12[0] = v4;
  v12[1] = v5;
  v12[2] = v6;
  return sub_1DCE9357C((double *)&v15, (double *)&v13, v12);
}

BOOL _s18VisualIntelligence2S2V10orderedCCW1a1b1c1oSbAA0C5PointV_A3JtFZ_0(double *a1, double *a2, double *a3, double *a4)
{
  double v20 = a1[1];
  double v21 = *a1;
  double v4 = *a2;
  double v5 = a2[1];
  double v6 = a2[2];
  double v7 = *a3;
  double v8 = a3[1];
  double v18 = a3[2];
  double v19 = a1[2];
  double v9 = *a4;
  double v10 = a4[1];
  double v11 = a4[2];
  *(double *)&long long v30 = v4;
  *((double *)&v30 + 1) = v5;
  double v31 = v6;
  *(double *)&long long v28 = v9;
  *((double *)&v28 + 1) = v10;
  double v29 = v11;
  double v25 = v21;
  double v26 = v20;
  double v27 = v19;
  double v22 = v5 * v11 - v6 * v10;
  double v23 = v6 * v9 - v4 * v11;
  double v24 = v4 * v10 - v5 * v9;
  uint64_t v12 = _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v30, &v28, &v25, &v22);
  *(double *)&long long v30 = v7;
  *((double *)&v30 + 1) = v8;
  double v31 = v18;
  *(double *)&long long v28 = v9;
  *((double *)&v28 + 1) = v10;
  double v29 = v11;
  double v25 = v4;
  double v26 = v5;
  double v27 = v6;
  double v22 = v8 * v11 - v18 * v10;
  double v23 = v18 * v9 - v7 * v11;
  double v24 = v7 * v10 - v8 * v9;
  uint64_t v13 = _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v30, &v28, &v25, &v22);
  uint64_t v14 = 1;
  if (v12 >= 0) {
    uint64_t v14 = 2;
  }
  if (v13 >= 0) {
    BOOL v15 = v14;
  }
  else {
    BOOL v15 = v12 >= 0;
  }
  *(double *)&long long v30 = v21;
  *((double *)&v30 + 1) = v20;
  double v31 = v19;
  *(double *)&long long v28 = v9;
  *((double *)&v28 + 1) = v10;
  double v29 = v11;
  double v25 = v7;
  double v26 = v8;
  double v27 = v18;
  double v22 = v20 * v11 - v19 * v10;
  double v23 = v19 * v9 - v21 * v11;
  double v24 = v21 * v10 - v20 * v9;
  if (_s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v30, &v28, &v25, &v22) <= 0) {
    unint64_t v16 = v15;
  }
  else {
    unint64_t v16 = v15 + 1;
  }
  return v16 > 1;
}

void _s18VisualIntelligence2S2V10girardArea1a1b1cSdAA0C5PointV_A2ItFZ_0(double *a1, uint64_t a2, double *a3)
{
  v3.z = a1[2] * *a3;
  v3.CGFloat x = *a1 * a3[1];
  v3.CGFloat y = a1[1] * *a3;
  v4.CGFloat x = S2Point.angle(to:)(v3);
  v5.CGFloat x = S2Point.angle(to:)(v4);
  S2Point.angle(to:)(v5);
}

void sub_1DCE93C70(uint64_t *a1, uint64_t *a2, double *a3, double a4, double a5, double a6)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v35 = *a1;
  uint64_t v8 = a1[2];
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v11 = a2[2];
  double v12 = *a3;
  double v13 = a3[1];
  double v14 = a3[2];
  v43.double x = S2Point.angle(to:)(*(VisualIntelligence::S2Point *)(&a5 - 1));
  double v32 = v12;
  double x = v43.x;
  double v31 = v14;
  v44.double x = S2Point.angle(to:)(v43);
  double v16 = v44.x;
  uint64_t v40 = v35;
  uint64_t v41 = v7;
  uint64_t v33 = v11;
  uint64_t v34 = v7;
  uint64_t v42 = v8;
  uint64_t v30 = v9;
  uint64_t v37 = v9;
  uint64_t v38 = v10;
  uint64_t v17 = v10;
  uint64_t v39 = v11;
  double v18 = S2Point.angle(to:)(v44);
  double v19 = x;
  double v20 = x + v16;
  double v21 = v16;
  double v22 = (v20 + v18) * 0.5;
  if (v22 < 0.0003) {
    goto LABEL_9;
  }
  if (v16 > v18) {
    double v23 = v16;
  }
  else {
    double v23 = v18;
  }
  if (v19 > v23) {
    double v23 = v19;
  }
  if (v22 - v23 >= v22 * v22 * (v22 * 0.01 * (v22 * v22))) {
    goto LABEL_9;
  }
  uint64_t v40 = v35;
  uint64_t v41 = v34;
  uint64_t v42 = v8;
  uint64_t v37 = v30;
  uint64_t v38 = v17;
  uint64_t v39 = v33;
  v36[0] = v32;
  v36[1] = v13;
  _OWORD v36[2] = v31;
  double v24 = v22 - v23;
  _s18VisualIntelligence2S2V10girardArea1a1b1cSdAA0C5PointV_A2ItFZ_0((double *)&v40, (uint64_t)&v37, v36);
  if (v24 >= v22 * (v25 * 0.1))
  {
LABEL_9:
    double v26 = tan(v22 * 0.5);
    long double v27 = v26 * tan((v22 - v19) * 0.5);
    long double v28 = v27 * tan((v22 - v21) * 0.5);
    double v29 = v28 * tan((v22 - v18) * 0.5);
    if (v29 < 0.0) {
      double v29 = 0.0;
    }
    atan(sqrt(v29));
  }
}

ValueMetadata *type metadata accessor for S2()
{
  return &type metadata for S2;
}

ValueMetadata *type metadata accessor for S2.Metric()
{
  return &type metadata for S2.Metric;
}

VisualIntelligence::S2LatLng __swiftcall S2LatLng.init(lat:lng:)(VisualIntelligence::S1Angle lat, VisualIntelligence::S1Angle lng)
{
  Swift::Double v5 = *v2;
  Swift::Double v6 = *v3;
  *VisualIntelligence::S2Point v4 = *v2;
  v4[1] = v6;
  result.lng = *(VisualIntelligence::S1Angle *)&v6;
  result.lat = *(VisualIntelligence::S1Angle *)&v5;
  return result;
}

void static S2LatLng.fromRadians(lat:lng:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *a1 = a2;
  a1[1] = a3;
}

BOOL S2LatLng.isValid.getter()
{
  BOOL v1 = fabs(*v0) <= 1.57079633;
  return fabs(v0[1]) <= 3.14159265 && v1;
}

double S2LatLng.point.getter@<D0>(double *a1@<X8>)
{
  double v3 = v1[1];
  __double2 v4 = __sincos_stret(*v1);
  __double2 v5 = __sincos_stret(v3);
  double result = v4.__cosval * v5.__sinval;
  *a1 = v4.__cosval * v5.__cosval;
  a1[1] = v4.__cosval * v5.__sinval;
  a1[2] = v4.__sinval;
  return result;
}

void S2LatLng.normalized.getter(double *a1@<X8>)
{
  double v3 = fmax(fmin(*(double *)v1, 1.57079633), -1.57079633);
  long double v4 = remainder(*(long double *)(v1 + 8), 6.28318531);
  *a1 = v3;
  a1[1] = v4;
}

VisualIntelligence::S2LatLng __swiftcall S2LatLng.init(point:)(VisualIntelligence::S2Point point)
{
  uint64_t v3 = v2;
  long double v4 = *v1;
  long double v5 = v1[1];
  long double v6 = atan2(v1[2], sqrt(v4 * v4 + v5 * v5));
  double v7 = atan2(v5, v4);
  *(long double *)uint64_t v3 = v6;
  *(double *)(v3 + 8) = v7;
  result.lng = *(VisualIntelligence::S1Angle *)&v8;
  result.lat = *(VisualIntelligence::S1Angle *)&v7;
  return result;
}

void static S2LatLng.longitude(point:)(long double *a1@<X0>, long double *a2@<X8>)
{
  *a2 = atan2(a1[1], *a1);
}

double static S2LatLng.earthRadiusMeters.getter()
{
  return 6367000.0;
}

double S2LatLng.lat.getter@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

double S2LatLng.lng.getter@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + 8);
  *a1 = result;
  return result;
}

void static S2LatLng.latitude(point:)(uint64_t a1@<X0>, long double *a2@<X8>)
{
  *a2 = atan2(*(long double *)(a1 + 16), sqrt(*(double *)a1 * *(double *)a1 + *(double *)(a1 + 8) * *(double *)(a1 + 8)));
}

double static S2LatLng.fromDegrees(lat:lng:)@<D0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  double result = a2 * 0.0174532925;
  *a1 = result;
  a1[1] = a3 * 0.0174532925;
  return result;
}

float64x2_t static S2LatLng.fromE5(lat:lng:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, float64x2_t *a3@<X8>)
{
  v3.i64[0] = a1;
  v3.i64[1] = a2;
  float64x2_t result = vmulq_f64(vmulq_f64(vcvtq_f64_s64(v3), (float64x2_t)vdupq_n_s64(0x3EE4F8B588E368F1uLL)), (float64x2_t)vdupq_n_s64(0x3F91DF46A2529D39uLL));
  *a3 = result;
  return result;
}

float64x2_t static S2LatLng.fromE6(lat:lng:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, float64x2_t *a3@<X8>)
{
  v3.i64[0] = a1;
  v3.i64[1] = a2;
  float64x2_t result = vmulq_f64(vmulq_f64(vcvtq_f64_s64(v3), (float64x2_t)vdupq_n_s64(0x3EB0C6F7A0B5ED8DuLL)), (float64x2_t)vdupq_n_s64(0x3F91DF46A2529D39uLL));
  *a3 = result;
  return result;
}

float64x2_t static S2LatLng.fromE7(lat:lng:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, float64x2_t *a3@<X8>)
{
  v3.i64[0] = a1;
  v3.i64[1] = a2;
  float64x2_t result = vmulq_f64(vmulq_f64(vcvtq_f64_s64(v3), (float64x2_t)vdupq_n_s64(0x3E7AD7F29ABCAF48uLL)), (float64x2_t)vdupq_n_s64(0x3F91DF46A2529D39uLL));
  *a3 = result;
  return result;
}

VisualIntelligence::S1Angle __swiftcall S2LatLng.getDistance(to:)(VisualIntelligence::S2LatLng to)
{
  long double v4 = v2;
  long double v5 = *(double *)v1;
  double v6 = *(double *)(v1 + 8);
  long double v7 = *(double *)v3;
  double v8 = *(double *)(v3 + 8);
  double v9 = sin((*(double *)v1 - *(double *)v3) * 0.5);
  long double v10 = sin((v6 - v8) * 0.5);
  long double v11 = cos(v7) * (v10 * v10);
  double v12 = v9 * v9 + cos(v5) * v11;
  double v13 = 1.0 - v12;
  if (1.0 - v12 < 0.0) {
    double v13 = 0.0;
  }
  long double v14 = atan2(sqrt(v12), sqrt(v13));
  result.radians = v14 + v14;
  *long double v4 = result.radians;
  return result;
}

Swift::Double __swiftcall S2LatLng.getDistance(to:radius:)(VisualIntelligence::S2LatLng to, Swift::Double radius)
{
  double radians = to.lat.radians;
  long double v5 = *(double *)v2;
  double v6 = *(double *)(v2 + 8);
  long double v7 = *(double *)v3;
  double v8 = *(double *)(v3 + 8);
  double v9 = sin((*(double *)v2 - *(double *)v3) * 0.5);
  long double v10 = sin((v6 - v8) * 0.5);
  long double v11 = cos(v7) * (v10 * v10);
  double v12 = v9 * v9 + cos(v5) * v11;
  double v13 = 1.0 - v12;
  if (1.0 - v12 < 0.0) {
    double v13 = 0.0;
  }
  long double v14 = atan2(sqrt(v12), sqrt(v13));
  return (v14 + v14) * radians;
}

Swift::Bool __swiftcall S2LatLng.approxEquals(to:maxError:)(VisualIntelligence::S2LatLng to, Swift::Double maxError)
{
  Swift::Bool v4 = vabdd_f64(*v3, *v2) < to.lat.radians;
  return vabdd_f64(v3[1], v2[1]) < to.lat.radians && v4;
}

ValueMetadata *type metadata accessor for S2LatLng()
{
  return &type metadata for S2LatLng;
}

void *sub_1DCE9432C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  uint64_t v43 = a3;
  uint64_t v39 = a2;
  uint64_t v38 = a4;
  uint64_t v9 = sub_1DD048068();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  double v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  BOOL v15 = (char *)&v35 - v14;
  sub_1DCDB40EC((uint64_t)&v35 - v14);
  sub_1DCDB4300((uint64_t)v12);
  double v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v16(v15, v9);
  uint64_t v17 = sub_1DD048048();
  os_log_type_t v18 = sub_1DD048848();
  if (os_log_type_enabled(v17, v18))
  {
    double v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = v5;
    uint64_t v20 = a1;
    uint64_t v21 = v7;
    double v22 = v19;
    *(_WORD *)double v19 = 0;
    _os_log_impl(&dword_1DCCF9000, v17, v18, "Create model request for unified", v19, 2u);
    double v23 = v22;
    uint64_t v7 = v21;
    a1 = v20;
    uint64_t v6 = v37;
    MEMORY[0x1E01B07E0](v23, -1, -1);
  }

  v16(v12, v9);
  LOBYTE(v41[0]) = *(unsigned char *)(a1 + 104);
  VisualIntelligence::S1Angle result = sub_1DCE949D0((char *)v41, *(void *)(a1 + 128));
  if (!v6)
  {
    double v25 = result;
    uint64_t v37 = type metadata accessor for DomainModelRequestFactory();
    int v26 = *(unsigned __int8 *)(v7 + 16);
    uint64_t v36 = OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo;
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    sub_1DCD8190C(a1, (uint64_t)v41);
    uint64_t v28 = swift_allocObject();
    long long v29 = v41[7];
    *(_OWORD *)(v28 + 136) = v41[6];
    *(_OWORD *)(v28 + 152) = v29;
    *(_OWORD *)(v28 + 168) = v41[8];
    long long v30 = v41[3];
    *(_OWORD *)(v28 + 72) = v41[2];
    *(_OWORD *)(v28 + 88) = v30;
    long long v31 = v41[5];
    *(_OWORD *)(v28 + 104) = v41[4];
    *(_OWORD *)(v28 + 120) = v31;
    long long v32 = v41[1];
    *(_OWORD *)(v28 + 40) = v41[0];
    *(void *)(v28 + 16) = v39;
    *(void *)(v28 + 24) = v43;
    *(void *)(v28 + 32) = v27;
    uint64_t v33 = v42;
    *(_OWORD *)(v28 + 56) = v32;
    *(void *)(v28 + 184) = v33;
    *(void *)(v28 + 192) = v25;
    uint64_t v34 = *(void *)(a1 + 120);
    swift_retain();
    swift_retain();
    sub_1DCF3B26C(v34);
    sub_1DCFE2DE4((uint64_t)v40);
    if (v26)
    {
      if (v26 == 1) {
        sub_1DCFE4EA0(a1, (uint64_t)v40, 2, 0, (uint64_t)sub_1DCE95BE0, v28, v38);
      }
      else {
        sub_1DCFE531C(a1, (uint64_t)v40, 2, (uint64_t)sub_1DCE95BE0, v28, v38);
      }
    }
    else
    {
      sub_1DCFE4BD4((double *)a1, (uint64_t)v40, v7 + v36, 2, (uint64_t)sub_1DCE95BE0, v28, v38);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    swift_release();
    return (void *)swift_release();
  }
  return result;
}

void sub_1DCE94710(uint64_t a1, void (*a2)(void **), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1DCE95BF4(a1, (uint64_t)v16);
  if (v17 == 1)
  {
    id v9 = v16[0];
    id v11 = v16[0];
    long long v12 = 0u;
    long long v13 = 0u;
    uint64_t v14 = 0;
    char v15 = v17;
    id v10 = v16[0];
    a2(&v11);
  }
  else
  {
    sub_1DCD3A4DC((long long *)v16, (uint64_t)&v11);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1DCE94810(&v11, a5, a6, a2);
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
}

uint64_t sub_1DCE94810(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void **))
{
  uint64_t v8 = v4 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo;
  uint64_t v9 = type metadata accessor for MLModelInfo(0);
  sub_1DCD25CD8(*(unsigned __int8 *)(v8 + *(int *)(v9 + 32)), v28);
  uint64_t v10 = *(void *)(a2 + 144);
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  sub_1DCEA469C((uint64_t)v28, v10);
  swift_release();
  long long v11 = *(_OWORD *)(a2 + 88);
  v27[0] = *(_OWORD *)(a2 + 72);
  v27[1] = v11;
  sub_1DCEC2054(a1, a3, (uint64_t *)v27, &v20);
  long long v13 = v20;
  uint64_t v12 = v21;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  uint64_t v17 = v25;
  char v26 = 0;
  sub_1DCD43350(v20, v21, v22, v23, v24, v25, 0);
  a4(&v20);
  sub_1DCD433A0(v13, v12, v14, v15, v16, v17, 0);
  sub_1DCEA3DA4();
  sub_1DCD433A0(v13, v12, v14, v15, v16, v17, 0);
  return swift_release();
}

void *sub_1DCE949D0(char *a1, char a2)
{
  char v4 = *a1;
  if (sub_1DCD9C35C(*a1) == 7631457 && v5 == 0xE300000000000000) {
    goto LABEL_13;
  }
  char v7 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_14:
    uint64_t v12 = v2 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo;
    uint64_t v13 = 0xD000000000000016;
    uint64_t v14 = 0x80000001DD06CD20;
    char v15 = a2;
    return sub_1DCFE5704(v15, v12, v13, v14, 0x74696E676F636572, 0xEB000000006E6F69);
  }
  if (sub_1DCD9C35C(v4) == 0x616964656DLL && v8 == 0xE500000000000000)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v10 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v10) {
    goto LABEL_14;
  }
  if (sub_1DCD9C35C(v4) == 1802465122 && v11 == 0xE400000000000000) {
    goto LABEL_13;
  }
  char v17 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v17) {
    goto LABEL_14;
  }
  if (sub_1DCD9C35C(v4) == 0x6D75626C61 && v18 == 0xE500000000000000) {
    goto LABEL_13;
  }
  char v19 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_14;
  }
  if (sub_1DCD9C35C(v4) == 0x44327463656A626FLL && v20 == 0xE800000000000000) {
    goto LABEL_13;
  }
  char v21 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_14;
  }
  if (sub_1DCD9C35C(v4) == 0x6B72616D646E616CLL && v22 == 0xE800000000000000) {
    goto LABEL_13;
  }
  char v23 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v23) {
    goto LABEL_14;
  }
  if (sub_1DCD9C35C(v4) == 0x727574706C756373 && v24 == 0xE900000000000065) {
    goto LABEL_13;
  }
  char v25 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_14;
  }
  if (sub_1DCD9C35C(v4) == 0x4C6C61727574616ELL && v26 == 0xEF6B72616D646E61) {
    goto LABEL_13;
  }
  char v27 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_14;
  }
  if (sub_1DCD9C35C(v4) == 0x6F726665726F7473 && v28 == 0xEA0000000000746ELL) {
    goto LABEL_13;
  }
  char v29 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v29) {
    goto LABEL_14;
  }
  if (sub_1DCD9C35C(v4) == 0x656E696C796B73 && v30 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_39:
    uint64_t v12 = v2 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo;
    uint64_t v14 = 0x80000001DD06CD00;
    char v15 = a2;
    uint64_t v13 = 0xD000000000000012;
    return sub_1DCFE5704(v15, v12, v13, v14, 0x74696E676F636572, 0xEB000000006E6F69);
  }
  char v31 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_39;
  }
  return 0;
}

uint64_t sub_1DCE94E84(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = sub_1DD048068();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3) {
    goto LABEL_6;
  }
  unint64_t v102 = v12;
  uint64_t v103 = v10;
  LOBYTE(v105) = *a1;
  uint64_t v13 = sub_1DCE949D0((char *)&v105, a3);
  if (v4) {
    return v14 & 1;
  }
  char v15 = v13;
  if (!v13)
  {
LABEL_6:
    char v14 = 0;
    return v14 & 1;
  }
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_1DCFA34B0(v16);
  swift_bridgeObjectRelease();
  uint64_t v101 = *(void *)(v17 + 16);
  if (!v101)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v14 = 1;
    return v14 & 1;
  }
  v89[1] = 0;
  unint64_t v19 = 0;
  uint64_t v92 = v3 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo;
  uint64_t v100 = v17 + 32;
  uint64_t v96 = (void (**)(char *, uint64_t))(v9 + 8);
  unint64_t v97 = (void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v91 = "coarseCategoryDistribution";
  unint64_t v90 = 0x80000001DD067880;
  *(void *)&long long v18 = 136315138;
  long long v94 = v18;
  uint64_t v93 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v98 = v17;
  unint64_t v99 = v15;
  uint64_t v95 = a2;
  while (1)
  {
    if (v19 >= *(void *)(v17 + 16)) {
      goto LABEL_126;
    }
    char v21 = (uint64_t *)(v100 + 16 * v19);
    uint64_t v23 = *v21;
    unint64_t v22 = v21[1];
    uint64_t v24 = v15[2];
    swift_bridgeObjectRetain();
    if (!v24) {
      goto LABEL_18;
    }
    swift_bridgeObjectRetain();
    sub_1DCEAD1A4(v23, v22);
    if ((v25 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_18:
      if (qword_1EBE87190 != -1) {
        swift_once();
      }
      if (byte_1EBE87188 != 1) {
        goto LABEL_57;
      }
      id v28 = objc_msgSend(self, sel_mainBundle);
      id v29 = objc_msgSend(v28, sel_bundleIdentifier);

      if (v29)
      {
        uint64_t v30 = sub_1DD048408();
        uint64_t v32 = v31;

        if (v30 == 0xD00000000000002BLL && v32 == v90)
        {
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
        char v49 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v49)
        {
LABEL_50:
          uint64_t v50 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            uint64_t v50 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_54;
        }
      }
      uint64_t v50 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v50 = &qword_1EBE871E8;
      }
LABEL_54:
      uint64_t v51 = *(void **)(*v50 + 32);
      swift_retain();
      uint64_t v52 = (void *)sub_1DD0483D8();
      LODWORD(v51) = objc_msgSend(v51, sel_BOOLForKey_, v52);
      swift_release();

      if (v51)
      {
        uint64_t v53 = v23;
        uint64_t v54 = qword_1EAB02B70;
        if (qword_1EAB01C80 != -1)
        {
          swift_once();
          uint64_t v54 = qword_1EAB02B70;
        }
LABEL_59:
        uint64_t v55 = v103;
        uint64_t v56 = __swift_project_value_buffer(v103, (uint64_t)v54);
        char v57 = v102;
        (*v97)(v102, v56, v55);
        swift_bridgeObjectRetain();
        id v58 = sub_1DD048048();
        os_log_type_t v59 = sub_1DD048848();
        if (os_log_type_enabled(v58, v59))
        {
          uint64_t v60 = swift_slowAlloc();
          uint64_t v61 = swift_slowAlloc();
          uint64_t v105 = v61;
          *(_DWORD *)uint64_t v60 = v94;
          swift_bridgeObjectRetain();
          *(void *)(v60 + 4) = sub_1DCED7FA0(v53, v22, &v105);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1DCCF9000, v58, v59, "No model urn suffix for %s", (uint8_t *)v60, 0xCu);
          swift_arrayDestroy();
          uint64_t v62 = v61;
          uint64_t v17 = v98;
          MEMORY[0x1E01B07E0](v62, -1, -1);
          MEMORY[0x1E01B07E0](v60, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        (*v96)(v57, v55);
        char v15 = v99;
        a2 = v95;
        goto LABEL_10;
      }
LABEL_57:
      uint64_t v53 = v23;
      uint64_t v54 = qword_1EBE871A8;
      if (qword_1EBE871C8 != -1)
      {
        swift_once();
        uint64_t v54 = qword_1EBE871A8;
      }
      goto LABEL_59;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = (uint64_t *)(v92 + *(int *)(type metadata accessor for MLModelInfo(0) + 24));
    uint64_t v27 = v26[1];
    uint64_t v105 = *v26;
    uint64_t v106 = v27;
    swift_bridgeObjectRetain();
    sub_1DD048548();
    swift_bridgeObjectRelease();
    uint64_t v104 = v105;
    uint64_t v107 = v106;
    if (v23 == 0x6E69646465626D65 && v22 == 0xE900000000000067) {
      break;
    }
    char v33 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_26;
    }
    uint64_t v69 = *(void *)(a2 + 16);
    if (v69)
    {
      swift_bridgeObjectRetain();
      uint64_t v70 = 72;
      uint64_t v71 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        uint64_t v72 = *(void *)(a2 + v70);
        uint64_t v73 = *(void *)(v72 + 16);
        int64_t v74 = v71[2];
        int64_t v75 = v74 + v73;
        if (__OFADD__(v74, v73)) {
          goto LABEL_124;
        }
        swift_bridgeObjectRetain();
        int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
        if (isUniquelyReferenced_nonNull_native && v75 <= v71[3] >> 1)
        {
          if (*(void *)(v72 + 16)) {
            goto LABEL_89;
          }
        }
        else
        {
          if (v74 <= v75) {
            int64_t v77 = v74 + v73;
          }
          else {
            int64_t v77 = v74;
          }
          uint64_t v71 = sub_1DCE9E6B8(isUniquelyReferenced_nonNull_native, v77, 1, v71);
          if (*(void *)(v72 + 16))
          {
LABEL_89:
            uint64_t v78 = v71[2];
            if ((v71[3] >> 1) - v78 < v73) {
              goto LABEL_127;
            }
            unint64_t v79 = (unint64_t)&v71[3 * v78 + 4];
            if (v72 + 32 < v79 + 24 * v73 && v79 < v72 + 32 + 24 * v73) {
              goto LABEL_131;
            }
            swift_arrayInitWithCopy();
            if (v73)
            {
              uint64_t v81 = v71[2];
              BOOL v47 = __OFADD__(v81, v73);
              uint64_t v82 = v81 + v73;
              if (v47) {
                goto LABEL_129;
              }
              v71[2] = v82;
            }
            goto LABEL_79;
          }
        }
        if (v73) {
          goto LABEL_125;
        }
LABEL_79:
        swift_bridgeObjectRelease();
        v70 += 48;
        if (!--v69)
        {
          swift_bridgeObjectRelease();
          char v15 = v99;
          goto LABEL_100;
        }
      }
    }
    uint64_t v71 = (void *)MEMORY[0x1E4FBC860];
LABEL_100:
    uint64_t v83 = v71[2];
    uint64_t v17 = v98;
    if (!v83) {
      goto LABEL_118;
    }
    if (v71[4] == v104 && v71[5] == v107 || (sub_1DD048FA8() & 1) != 0) {
      goto LABEL_104;
    }
    if (v83 == 1) {
      goto LABEL_118;
    }
    uint64_t v84 = v71 + 8;
    uint64_t v85 = 1;
    uint64_t v86 = v107;
    while (1)
    {
      uint64_t v87 = v85 + 1;
      if (__OFADD__(v85, 1)) {
        goto LABEL_130;
      }
      BOOL v88 = *(v84 - 1) == v104 && *v84 == v86;
      if (v88 || (sub_1DD048FA8() & 1) != 0) {
        break;
      }
      v84 += 3;
      ++v85;
      uint64_t v86 = v107;
      if (v87 == v83) {
        goto LABEL_118;
      }
    }
LABEL_115:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v98;
    char v15 = v99;
LABEL_10:
    if (++v19 == v101) {
      goto LABEL_116;
    }
  }
  swift_bridgeObjectRelease();
LABEL_26:
  uint64_t v34 = *(void *)(a2 + 16);
  if (!v34)
  {
    uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
LABEL_62:
    uint64_t v63 = v36[2];
    uint64_t v17 = v98;
    if (!v63) {
      goto LABEL_118;
    }
    if ((v36[5] != v104 || v36[6] != v107) && (sub_1DD048FA8() & 1) == 0)
    {
      if (v63 != 1)
      {
        uint64_t v64 = v36 + 9;
        uint64_t v65 = 1;
        uint64_t v66 = v107;
        do
        {
          uint64_t v67 = v65 + 1;
          if (__OFADD__(v65, 1)) {
            goto LABEL_128;
          }
          BOOL v68 = *(v64 - 1) == v104 && *v64 == v66;
          if (v68 || (sub_1DD048FA8() & 1) != 0) {
            goto LABEL_115;
          }
          v64 += 3;
          ++v65;
          uint64_t v66 = v107;
        }
        while (v67 != v63);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v14 = 0;
      return v14 & 1;
    }
LABEL_104:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = 64;
  uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v37 = *(void *)(a2 + v35);
    uint64_t v38 = *(void *)(v37 + 16);
    int64_t v39 = v36[2];
    int64_t v40 = v39 + v38;
    if (__OFADD__(v39, v38)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v41 = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (v41 && v40 <= v36[3] >> 1)
    {
      if (*(void *)(v37 + 16)) {
        goto LABEL_39;
      }
    }
    else
    {
      if (v39 <= v40) {
        int64_t v42 = v39 + v38;
      }
      else {
        int64_t v42 = v39;
      }
      uint64_t v36 = sub_1DCE9E590(v41, v42, 1, v36);
      if (*(void *)(v37 + 16))
      {
LABEL_39:
        uint64_t v43 = v36[2];
        if ((v36[3] >> 1) - v43 < v38) {
          goto LABEL_122;
        }
        unint64_t v44 = (unint64_t)&v36[3 * v43 + 4];
        if (v37 + 32 < v44 + 24 * v38 && v44 < v37 + 32 + 24 * v38) {
          goto LABEL_131;
        }
        swift_arrayInitWithCopy();
        if (v38)
        {
          uint64_t v46 = v36[2];
          BOOL v47 = __OFADD__(v46, v38);
          uint64_t v48 = v46 + v38;
          if (v47) {
            goto LABEL_123;
          }
          _OWORD v36[2] = v48;
        }
        goto LABEL_29;
      }
    }
    if (v38) {
      goto LABEL_121;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    v35 += 48;
    if (!--v34)
    {
      swift_bridgeObjectRelease();
      char v15 = v99;
      goto LABEL_62;
    }
  }
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  LODWORD(vars0) = 0;
  uint64_t v109 = 1092;
  LOBYTE(v108) = 2;
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCE95974()
{
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo);
  swift_release();
  return swift_release();
}

uint64_t sub_1DCE959C4()
{
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCE95A48()
{
  return type metadata accessor for UnifiedModelFactory();
}

uint64_t type metadata accessor for UnifiedModelFactory()
{
  uint64_t result = qword_1EBE86E98;
  if (!qword_1EBE86E98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCE95A9C()
{
  uint64_t result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCE95B48()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCE95B80()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 200, 7);
}

void sub_1DCE95BE0(uint64_t a1)
{
  sub_1DCE94710(a1, *(void (**)(void **))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40, *(void *)(v1 + 192));
}

uint64_t sub_1DCE95BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCE95C5C(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  *(unsigned char *)(a3 + 16) = (_BYTE)a1;
  sub_1DCD56CC8(a2, a3 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_modelInfo);
  char v12 = (char)a1;
  sub_1DCD56CC8(a2, (uint64_t)v8);
  type metadata accessor for CachedCoreMLModelProvider();
  swift_allocObject();
  swift_retain();
  *(void *)(a3 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_coreMLModelProvider) = sub_1DCF3D39C(&v12, (uint64_t)v8, 16, 0, 0, 0);
  sub_1DCD56CC8(a2, (uint64_t)v8);
  type metadata accessor for UnifiedModelPostProcessor();
  swift_allocObject();
  uint64_t v9 = sub_1DCEC1E74((uint64_t)v8);
  sub_1DCD59AB4(a2);
  *(void *)(a3 + OBJC_IVAR____TtC18VisualIntelligence19UnifiedModelFactory_postProcessor) = v9;
  return a3;
}

unint64_t sub_1DCE95D94(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, unint64_t a5, char a6, uint64_t a7)
{
  uint64_t v226 = a7;
  unint64_t v236 = a5;
  uint64_t v225 = a4;
  v227 = a3;
  uint64_t v250 = sub_1DD048068();
  uint64_t v209 = *(void *)(v250 - 8);
  MEMORY[0x1F4188790](v250);
  uint64_t v208 = (uint64_t)&v204 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v206 = (uint64_t)&v204 - v13;
  MEMORY[0x1F4188790](v14);
  v232 = (char *)&v204 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v242 = (char *)&v204 - v17;
  MEMORY[0x1F4188790](v18);
  v251 = (char *)&v204 - v19;
  uint64_t v20 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v224 = (uint64_t)&v204 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v230 = (long long *)((char *)&v204 - v23);
  MEMORY[0x1F4188790](v24);
  uint64_t v243 = (double *)((char *)&v204 - v25);
  MEMORY[0x1F4188790](v26);
  uint64_t v253 = (uint64_t)&v204 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v204 - v29;
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (uint64_t *)((char *)&v204 - v33);
  uint64_t v35 = a2[1];
  uint64_t v223 = *a2;
  uint64_t v37 = a2[2];
  uint64_t v36 = a2[3];
  uint64_t v38 = *(void *)(a1 + 16);
  uint64_t v210 = a1;
  uint64_t v237 = v38;
  uint64_t v244 = v7;
  if (v38)
  {
    uint64_t v39 = v32 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    uint64_t v40 = *(void *)(v20 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1DCE9B5DC(v39, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v30[104] == 1) {
        break;
      }
      sub_1DCE9B6AC((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      v39 += v40;
      if (!--v38)
      {
        swift_bridgeObjectRelease();
        uint64_t v241 = 0;
        uint64_t v240 = 0;
        uint64_t v239 = 0;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    sub_1DCE9B8E0((uint64_t)v30, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v41 = v34[11];
    uint64_t v42 = v34[12];
    uint64_t v241 = v34[10];
    uint64_t v240 = v41;
    uint64_t v239 = v42;
    sub_1DCD55D64(v241, v41);
    sub_1DCE9B6AC((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_8:
    uint64_t v38 = v237;
  }
  else
  {
    uint64_t v241 = 0;
    uint64_t v240 = 0;
    uint64_t v239 = 0;
  }
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = MEMORY[0x1E4FBC860];
  unint64_t v45 = sub_1DCDB9B04(MEMORY[0x1E4FBC860]);
  uint64_t v228 = v43;
  *(void *)(v43 + 16) = v45;
  v207 = (uint64_t *)(v43 + 16);
  uint64_t v46 = swift_allocObject();
  uint64_t v229 = v46;
  *(void *)(v46 + 16) = 0;
  uint64_t v205 = (id *)(v46 + 16);
  unint64_t v263 = sub_1DCDB9C74(v44);
  unint64_t v260 = v44;
  uint64_t v47 = v250;
  uint64_t v48 = v243;
  if (v38)
  {
    int v235 = a6 & 1;
    uint64_t v49 = *(unsigned __int8 *)(v20 + 80);
    uint64_t v50 = (v49 + 32) & ~v49;
    uint64_t v234 = v210 + v50;
    uint64_t v233 = *(void *)(v20 + 72);
    uint64_t v51 = (NSObject **)(v209 + 16);
    v249 = (void (**)(char *, uint64_t))(v209 + 8);
    uint64_t v213 = (char *)&v257 + 8;
    uint64_t v222 = v50;
    uint64_t v221 = v50 + v21;
    uint64_t v220 = v49 | 7;
    swift_bridgeObjectRetain();
    uint64_t v52 = 0;
    unint64_t v231 = (unint64_t)"coarseCategoryDistribution";
    unint64_t v211 = 0x80000001DD067880;
    *(void *)&long long v53 = 136315138;
    long long v217 = v53;
    *((void *)&v53 + 1) = 10;
    long long v216 = xmmword_1DD04EF00;
    unint64_t v215 = 0x80000001DD068270;
    uint64_t v214 = MEMORY[0x1E4FBC840] + 8;
    *(void *)&long long v53 = 136315394;
    long long v212 = v53;
    uint64_t v54 = (void *)v44;
    uint64_t v55 = v242;
    uint64_t v56 = v253;
    v238 = v51;
    while (1)
    {
      uint64_t v248 = v52;
      sub_1DCE9B5DC(v234 + v233 * v52, v56, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (qword_1EBE87190 != -1) {
        swift_once();
      }
      if (byte_1EBE87188 != 1) {
        goto LABEL_29;
      }
      os_log_type_t v59 = v55;
      id v60 = objc_msgSend(self, sel_mainBundle);
      id v61 = objc_msgSend(v60, sel_bundleIdentifier);

      if (v61)
      {
        uint64_t v62 = sub_1DD048408();
        uint64_t v64 = v63;

        if (v62 == 0xD00000000000002BLL && v64 == v211)
        {
          swift_bridgeObjectRelease();
LABEL_21:
          uint64_t v66 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            uint64_t v66 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_25;
        }
        char v65 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v65) {
          goto LABEL_21;
        }
      }
      uint64_t v66 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v66 = &qword_1EBE871E8;
      }
LABEL_25:
      uint64_t v67 = *(void **)(*v66 + 32);
      swift_retain();
      BOOL v68 = (void *)sub_1DD0483D8();
      LODWORD(v67) = objc_msgSend(v67, sel_BOOLForKey_, v68);
      swift_release();

      uint64_t v56 = v253;
      uint64_t v55 = v59;
      if (v67)
      {
        if (qword_1EAB01C80 != -1) {
          swift_once();
        }
        uint64_t v69 = v47;
        uint64_t v70 = qword_1EAB02B70;
        goto LABEL_32;
      }
LABEL_29:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v69 = v47;
      uint64_t v70 = qword_1EBE871A8;
LABEL_32:
      uint64_t v71 = __swift_project_value_buffer(v69, (uint64_t)v70);
      uint64_t v72 = *v51;
      ((void (*)(char *, uint64_t, uint64_t))*v51)(v251, v71, v47);
      v252 = v54;
      v245 = v72;
      if ((byte_1EBE87188 & 1) == 0) {
        goto LABEL_44;
      }
      uint64_t v73 = v55;
      id v74 = objc_msgSend(self, sel_mainBundle);
      id v75 = objc_msgSend(v74, sel_bundleIdentifier);

      if (v75)
      {
        uint64_t v76 = sub_1DD048408();
        uint64_t v78 = v77;

        if (v76 == 0xD00000000000002BLL && v78 == (v231 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
LABEL_38:
          uint64_t v80 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            uint64_t v80 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_42;
        }
        char v79 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v79) {
          goto LABEL_38;
        }
      }
      uint64_t v80 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v80 = &qword_1EBE871E8;
      }
LABEL_42:
      uint64_t v81 = *(void **)(*v80 + 32);
      swift_retain();
      uint64_t v82 = (void *)sub_1DD0483D8();
      LODWORD(v81) = objc_msgSend(v81, sel_BOOLForKey_, v82);
      swift_release();

      uint64_t v56 = v253;
      uint64_t v55 = v73;
      if (v81)
      {
        uint64_t v83 = v73;
        uint64_t v84 = (uint64_t)v251;
        goto LABEL_47;
      }
LABEL_44:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v84 = __swift_project_value_buffer(v47, (uint64_t)qword_1EBE871A8);
      uint64_t v83 = v55;
LABEL_47:
      uint64_t v85 = v51;
      ((void (*)(char *, uint64_t, uint64_t))v72)(v83, v84, v47);
      uint64_t v86 = *v249;
      (*v249)(v251, v47);
      sub_1DCE9B5DC(v56, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v87 = v55;
      BOOL v88 = sub_1DD048048();
      os_log_type_t v89 = sub_1DD048848();
      if (os_log_type_enabled(v88, v89))
      {
        uint64_t v90 = swift_slowAlloc();
        uint64_t v91 = swift_slowAlloc();
        *(void *)&long long v254 = v91;
        *(_DWORD *)uint64_t v90 = v217;
        CGFloat v92 = *v48;
        CGFloat v93 = v48[1];
        CGFloat v94 = v48[2];
        CGFloat v95 = v48[3];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85228);
        uint64_t v96 = swift_allocObject();
        char v246 = v86;
        uint64_t v97 = v96;
        *(_OWORD *)(v96 + 16) = v216;
        v264.origin.double x = v92;
        v264.origin.CGFloat y = v93;
        v264.size.CGFloat width = v94;
        v264.size.CGFloat height = v95;
        CGFloat MinX = CGRectGetMinX(v264);
        uint64_t v99 = MEMORY[0x1E4FBC958];
        *(void *)(v97 + 56) = MEMORY[0x1E4FBC958];
        unint64_t v100 = sub_1DCD52700();
        *(void *)(v97 + 64) = v100;
        *(CGFloat *)(v97 + 32) = MinX;
        v265.origin.double x = v92;
        v265.origin.CGFloat y = v93;
        v265.size.CGFloat width = v94;
        v265.size.CGFloat height = v95;
        CGFloat MinY = CGRectGetMinY(v265);
        *(void *)(v97 + 96) = v99;
        *(void *)(v97 + 104) = v100;
        *(CGFloat *)(v97 + 72) = MinY;
        v266.origin.double x = v92;
        v266.origin.CGFloat y = v93;
        v266.size.CGFloat width = v94;
        v266.size.CGFloat height = v95;
        CGFloat Width = CGRectGetWidth(v266);
        *(void *)(v97 + 136) = v99;
        *(void *)(v97 + 144) = v100;
        *(CGFloat *)(v97 + 112) = Width;
        v267.origin.double x = v92;
        v267.origin.CGFloat y = v93;
        v267.size.CGFloat width = v94;
        v267.size.CGFloat height = v95;
        CGFloat Height = CGRectGetHeight(v267);
        *(void *)(v97 + 176) = v99;
        *(void *)(v97 + 184) = v100;
        *(CGFloat *)(v97 + 152) = Height;
        *(CGFloat *)&long long v257 = v92;
        *((CGFloat *)&v257 + 1) = v93;
        *(CGFloat *)&long long v258 = v94;
        *((CGFloat *)&v258 + 1) = v95;
        NormalizedRect.rectID.getter();
        uint64_t v105 = v104;
        uint64_t v107 = v106;
        *(void *)(v97 + 216) = MEMORY[0x1E4FBB1A0];
        *(void *)(v97 + 224) = sub_1DCD52754();
        *(void *)(v97 + 192) = v105;
        *(void *)(v97 + 200) = v107;
        uint64_t v108 = v242;
        uint64_t v85 = v238;
        uint64_t v48 = v243;
        uint64_t v109 = v250;
        uint64_t v110 = sub_1DD048438();
        *(void *)(v90 + 4) = sub_1DCED7FA0(v110, v111, (uint64_t *)&v254);
        swift_bridgeObjectRelease();
        sub_1DCE9B6AC((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        _os_log_impl(&dword_1DCCF9000, v88, v89, "Process %s", (uint8_t *)v90, 0xCu);
        swift_arrayDestroy();
        uint64_t v112 = v91;
        uint64_t v47 = v109;
        uint64_t v86 = v246;
        MEMORY[0x1E01B07E0](v112, -1, -1);
        uint64_t v113 = v90;
        uint64_t v56 = v253;
        MEMORY[0x1E01B07E0](v113, -1, -1);

        uint64_t v55 = v108;
        v86(v108, v47);
      }
      else
      {
        sub_1DCE9B6AC((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

        v86(v87, v47);
        uint64_t v55 = v87;
      }
      unint64_t v114 = sub_1DCE986AC(v56, v252[2], v241, v240, v239, v236, v235, (uint64_t *)&v263);
      uint64_t v115 = (uint64_t)v114;
      if (!*((void *)v114 + 2))
      {
        sub_1DCE9B6AC(v56, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        swift_bridgeObjectRelease();
        uint64_t v54 = v252;
        uint64_t v57 = v237;
        goto LABEL_12;
      }
      MEMORY[0x1F4188790](v114);
      uint64_t v203 = v56;
      uint64_t v116 = v244;
      CGFloat v117 = sub_1DCFB3954((void (*)(void *__return_ptr, void))sub_1DCE9B77C, (uint64_t)v202, v115);
      sub_1DCFDF69C((uint64_t)v117);
      if (byte_1EBE87188 != 1)
      {
LABEL_64:
        double v127 = qword_1EBE871A8;
        if (qword_1EBE871C8 != -1)
        {
          swift_once();
          double v127 = qword_1EBE871A8;
        }
        goto LABEL_66;
      }
      id v118 = objc_msgSend(self, sel_mainBundle);
      id v119 = objc_msgSend(v118, sel_bundleIdentifier);

      if (v119)
      {
        uint64_t v120 = sub_1DD048408();
        uint64_t v122 = v121;

        if (v120 == 0xD00000000000002BLL && v122 == (v231 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
LABEL_57:
          double v124 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            double v124 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_61;
        }
        char v123 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v123) {
          goto LABEL_57;
        }
      }
      double v124 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        double v124 = &qword_1EBE871E8;
      }
LABEL_61:
      double v125 = *(void **)(*v124 + 32);
      swift_retain();
      double v126 = (void *)sub_1DD0483D8();
      LODWORD(v125) = objc_msgSend(v125, sel_BOOLForKey_, v126);
      swift_release();

      uint64_t v56 = v253;
      if (!v125) {
        goto LABEL_64;
      }
      double v127 = qword_1EAB02B70;
      if (qword_1EAB01C80 != -1)
      {
        swift_once();
        double v127 = qword_1EAB02B70;
      }
LABEL_66:
      uint64_t v128 = __swift_project_value_buffer(v47, (uint64_t)v127);
      uint64_t v129 = v232;
      ((void (*)(char *, uint64_t, uint64_t))v245)(v232, v128, v47);
      uint64_t v130 = v56;
      uint64_t v131 = v230;
      sub_1DCE9B5DC(v130, (uint64_t)v230, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_bridgeObjectRetain_n();
      uint64_t v132 = sub_1DD048048();
      int v133 = sub_1DD048848();
      BOOL v134 = os_log_type_enabled(v132, (os_log_type_t)v133);
      uint64_t v244 = v116;
      if (v134)
      {
        int v219 = v133;
        v245 = v132;
        char v246 = v86;
        uint64_t v135 = swift_slowAlloc();
        uint64_t v218 = swift_slowAlloc();
        *(void *)&long long v254 = v218;
        *(_DWORD *)uint64_t v135 = v212;
        int64_t v136 = *(void *)(v115 + 16);
        if (v136)
        {
          *(void *)&long long v257 = MEMORY[0x1E4FBC860];
          sub_1DCFC4948(0, v136, 0);
          uint64_t v137 = v257;
          uint64_t v138 = v115;
          uint64_t v139 = (unsigned __int8 *)(v115 + 32);
          do
          {
            int v140 = *v139++;
            unint64_t v141 = 0xE300000000000000;
            uint64_t v142 = 7631457;
            switch(v140)
            {
              case 1:
                unint64_t v141 = 0xE600000000000000;
                uint64_t v142 = 0x65727574616ELL;
                break;
              case 2:
                unint64_t v141 = 0xE800000000000000;
                uint64_t v142 = 0x6B72616D646E616CLL;
                break;
              case 3:
                unint64_t v141 = 0xEF6B72616D646E61;
                uint64_t v142 = 0x4C6C61727574616ELL;
                break;
              case 4:
                unint64_t v141 = 0xE500000000000000;
                uint64_t v142 = 0x616964656DLL;
                break;
              case 5:
                unint64_t v141 = 0xE400000000000000;
                uint64_t v142 = 1802465122;
                break;
              case 6:
                unint64_t v141 = 0xE500000000000000;
                uint64_t v142 = 0x6D75626C61;
                break;
              case 7:
                unint64_t v141 = 0xE400000000000000;
                uint64_t v142 = 1937006947;
                break;
              case 8:
                unint64_t v141 = 0xE400000000000000;
                uint64_t v142 = 1936158564;
                break;
              case 9:
                unint64_t v141 = 0xE700000000000000;
                unsigned int v143 = 1835626081;
                goto LABEL_86;
              case 10:
                unint64_t v141 = 0xE500000000000000;
                uint64_t v142 = 0x7364726962;
                break;
              case 11:
                unint64_t v141 = 0xE700000000000000;
                uint64_t v142 = 0x73746365736E69;
                break;
              case 12:
                unint64_t v141 = 0xE800000000000000;
                uint64_t v142 = 0x73656C6974706572;
                break;
              case 13:
                unint64_t v141 = 0xE700000000000000;
                unsigned int v143 = 1835884909;
LABEL_86:
                uint64_t v142 = v143 | 0x736C6100000000;
                break;
              case 14:
                unint64_t v141 = 0xE700000000000000;
                uint64_t v142 = 0x6C657261707061;
                break;
              case 15:
                unint64_t v141 = 0xEB00000000736569;
                uint64_t v142 = 0x726F737365636361;
                break;
              case 16:
                unint64_t v141 = 0xE400000000000000;
                uint64_t v142 = 1685024614;
                break;
              case 17:
                unint64_t v141 = 0xEA0000000000746ELL;
                uint64_t v142 = 0x6F726665726F7473;
                break;
              case 18:
                unsigned int v144 = 1852270963;
                goto LABEL_93;
              case 19:
                uint64_t v142 = 0xD000000000000011;
                unint64_t v141 = 0x80000001DD066AB0;
                break;
              case 20:
                unsigned int v144 = 1869903201;
LABEL_93:
                uint64_t v142 = v144 | 0x626D795300000000;
                unint64_t v141 = 0xEA00000000006C6FLL;
                break;
              case 21:
                unint64_t v141 = 0xEF6C6F626D79536FLL;
                uint64_t v142 = 0x676F4C646E617262;
                break;
              case 22:
                unint64_t v141 = 0xE700000000000000;
                uint64_t v142 = 0x65646F63726162;
                break;
              case 23:
                unint64_t v141 = 0xE900000000000065;
                uint64_t v142 = 0x727574706C756373;
                break;
              case 24:
                unint64_t v141 = 0xE700000000000000;
                uint64_t v142 = 0x656E696C796B73;
                break;
              case 25:
                unint64_t v141 = 0xE800000000000000;
                uint64_t v142 = 0x44327463656A626FLL;
                break;
              default:
                break;
            }
            *(void *)&long long v257 = v137;
            unint64_t v146 = *(void *)(v137 + 16);
            unint64_t v145 = *(void *)(v137 + 24);
            if (v146 >= v145 >> 1)
            {
              sub_1DCFC4948(v145 > 1, v146 + 1, 1);
              uint64_t v137 = v257;
            }
            *(void *)(v137 + 16) = v146 + 1;
            uint64_t v147 = v137 + 16 * v146;
            *(void *)(v147 + 32) = v142;
            *(void *)(v147 + 40) = v141;
            --v136;
          }
          while (v136);
          uint64_t v148 = v250;
          uint64_t v131 = v230;
        }
        else
        {
          uint64_t v138 = v115;
          uint64_t v137 = MEMORY[0x1E4FBC860];
          uint64_t v148 = v47;
        }
        uint64_t v149 = MEMORY[0x1E01AE380](v137, MEMORY[0x1E4FBB1A0]);
        unint64_t v151 = v150;
        swift_bridgeObjectRelease();
        *(void *)&long long v257 = sub_1DCED7FA0(v149, v151, (uint64_t *)&v254);
        sub_1DD048A28();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v135 + 12) = 2080;
        long long v152 = v131[1];
        long long v257 = *v131;
        long long v258 = v152;
        uint64_t v153 = NormalizedRect.loggingDescription.getter();
        *(void *)&long long v257 = sub_1DCED7FA0(v153, v154, (uint64_t *)&v254);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        sub_1DCE9B6AC((uint64_t)v131, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        os_log_t v155 = v245;
        _os_log_impl(&dword_1DCCF9000, v245, (os_log_type_t)v219, "Extract domain signals: %s from region %s", (uint8_t *)v135, 0x16u);
        uint64_t v156 = v218;
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v156, -1, -1);
        MEMORY[0x1E01B07E0](v135, -1, -1);

        v246(v232, v148);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_1DCE9B6AC((uint64_t)v131, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

        v86(v129, v47);
        uint64_t v138 = v115;
      }
      type metadata accessor for SignalsExtractionProcessor();
      *(void *)&long long v254 = v223;
      *((void *)&v254 + 1) = v35;
      uint64_t v255 = v37;
      uint64_t v256 = v36;
      uint64_t v157 = *(void *)(v247 + 16);
      uint64_t v158 = *(void *)(v247 + 24);
      uint64_t v159 = v253;
      uint64_t v160 = v224;
      sub_1DCE9B5DC(v253, v224, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v161 = swift_allocObject();
      uint64_t v162 = v228;
      *(void *)(v161 + 16) = v229;
      *(void *)(v161 + 24) = v162;
      sub_1DCE9B8E0(v160, v161 + v222, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_retain();
      swift_retain();
      uint64_t v163 = v244;
      sub_1DCD3BE00(v159, v138, (uint64_t)v227, &v254, v225, v157, v158, 0, &v257, 1u, 3, 1, v226, (uint64_t)sub_1DCE9B948, v161);
      if (v163)
      {
        swift_release();
        sub_1DCD781D0(v241, v240);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DCE9B6AC(v253, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        goto LABEL_143;
      }
      uint64_t v244 = 0;
      swift_release();
      swift_bridgeObjectRelease();
      sub_1DCD3A3BC((uint64_t)&v257, (uint64_t)&v254);
      uint64_t v54 = v252;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v54 = sub_1DCE9E438(0, v54[2] + 1, 1, v54);
      }
      unint64_t v164 = v242;
      uint64_t v56 = v253;
      uint64_t v48 = v243;
      uint64_t v57 = v237;
      uint64_t v85 = v238;
      uint64_t v47 = v250;
      unint64_t v166 = v54[2];
      unint64_t v165 = v54[3];
      if (v166 >= v165 >> 1) {
        uint64_t v54 = sub_1DCE9E438((void *)(v165 > 1), v166 + 1, 1, v54);
      }
      v54[2] = v166 + 1;
      sub_1DCD3A4DC(&v254, (uint64_t)&v54[5 * v166 + 4]);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v257);
      sub_1DCE9B6AC(v56, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v55 = v164;
LABEL_12:
      uint64_t v52 = v248 + 1;
      BOOL v58 = v248 + 1 == v57;
      uint64_t v51 = v85;
      if (v58)
      {
        swift_bridgeObjectRelease();
        goto LABEL_112;
      }
    }
  }
  uint64_t v54 = (void *)v44;
LABEL_112:
  sub_1DCD781D0(v241, v240);
  uint64_t v167 = v54[2];
  if (v167)
  {
    long long v168 = v54 + 4;
    v252 = v54;
    swift_bridgeObjectRetain_n();
    long long v169 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v170 = v47;
      uint64_t v171 = v168[3];
      uint64_t v172 = v168[4];
      __swift_project_boxed_opaque_existential_1(v168, v171);
      uint64_t v173 = (*(uint64_t (**)(uint64_t, uint64_t))(v172 + 16))(v171, v172);
      uint64_t v174 = *(void *)(v173 + 16);
      int64_t v175 = v169[2];
      int64_t v176 = v175 + v174;
      if (__OFADD__(v175, v174))
      {
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        LODWORD(v203) = 0;
        v202[1] = 1092;
        LOBYTE(v202[0]) = 2;
        sub_1DD048D18();
        __break(1u);
        JUMPOUT(0x1DCE97C2CLL);
      }
      uint64_t v177 = v173;
      int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v176 > v169[3] >> 1)
      {
        if (v175 <= v176) {
          int64_t v179 = v175 + v174;
        }
        else {
          int64_t v179 = v175;
        }
        long long v169 = sub_1DCE9E44C(isUniquelyReferenced_nonNull_native, v179, 1, v169);
      }
      uint64_t v47 = v170;
      if (*(void *)(v177 + 16))
      {
        uint64_t v180 = v169[2];
        if ((v169[3] >> 1) - v180 < v174) {
          goto LABEL_149;
        }
        unint64_t v181 = (unint64_t)&v169[5 * v180 + 4];
        if (v177 + 32 < v181 + 40 * v174 && v181 < v177 + 32 + 40 * v174) {
          goto LABEL_151;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85780);
        swift_arrayInitWithCopy();
        uint64_t v47 = v250;
        if (v174)
        {
          uint64_t v183 = v169[2];
          BOOL v184 = __OFADD__(v183, v174);
          uint64_t v185 = v183 + v174;
          if (v184) {
            goto LABEL_150;
          }
          v169[2] = v185;
        }
      }
      else if (v174)
      {
        goto LABEL_148;
      }
      swift_bridgeObjectRelease();
      v168 += 5;
      --v167;
    }
    while (v167);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    long long v169 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v186 = v244;
  if (!v169[2])
  {
    swift_bridgeObjectRelease();
    uint64_t v189 = v206;
    sub_1DCDB40EC(v206);
    sub_1DCDB4300(v208);
    unint64_t v190 = *(void (**)(uint64_t, uint64_t))(v209 + 8);
    v190(v189, v47);
    v191 = sub_1DD048048();
    os_log_type_t v192 = sub_1DD048848();
    if (os_log_type_enabled(v191, v192))
    {
      unint64_t v193 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v193 = 0;
      _os_log_impl(&dword_1DCCF9000, v191, v192, "No requested search domains.", v193, 2u);
      MEMORY[0x1E01B07E0](v193, -1, -1);
    }

    v190(v208, v47);
LABEL_141:
    v261[0] = 0x6C46206573726150;
    v261[1] = 0xEA0000000000776FLL;
    v261[2] = "VI: Domain Selection Region Updating";
    v261[3] = 36;
    char v262 = 2;
    type metadata accessor for DurationMeasurement();
    swift_allocObject();
    uint64_t v194 = v226;
    swift_retain();
    sub_1DCEA469C((uint64_t)v261, v194);
    swift_release();
    uint64_t v195 = v247;
    swift_retain();
    unint64_t v196 = sub_1DCE9B2E8(v210, v207, v195, (uint64_t *)&v260);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCEA3DA4();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return v196;
  }
  uint64_t v187 = v227[3];
  uint64_t v188 = v227[4];
  __swift_project_boxed_opaque_existential_1(v227, v187);
  sub_1DCF3AFAC(v187, v188, (uint64_t **)&v257);
  if (v186)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_143;
  }
  uint64_t v198 = *((void *)&v258 + 1);
  uint64_t v199 = v259;
  __swift_project_boxed_opaque_existential_1(&v257, *((uint64_t *)&v258 + 1));
  (*(void (**)(void *, uint64_t, uint64_t))(v199 + 8))(v169, v198, v199);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v257);
  unint64_t v200 = v205;
  swift_beginAccess();
  if (!*v200) {
    goto LABEL_141;
  }
  id v201 = *v200;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_willThrow();
LABEL_143:
  unint64_t v196 = v260;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v196;
}

void sub_1DCE97C94(uint64_t a1, uint64_t a2, uint64_t a3, double *a4)
{
  uint64_t v4 = *(void **)a1;
  if (*(unsigned char *)(a1 + 48) == 1)
  {
    swift_beginAccess();
    uint64_t v6 = *(void **)(a2 + 16);
    *(void *)(a2 + 16) = v4;
    id v7 = v4;
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v9 = *(void *)(a1 + 40);
    uint64_t v11 = *(void *)(a1 + 24);
    uint64_t v18 = *(void **)a1;
    long long v19 = *(_OWORD *)(a1 + 8);
    uint64_t v20 = v11;
    uint64_t v21 = v10;
    uint64_t v22 = v9;
    CGFloat v12 = *a4;
    CGFloat v13 = a4[1];
    CGFloat v14 = a4[2];
    CGFloat v15 = a4[3];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *(void *)(a3 + 16);
    *(void *)(a3 + 16) = 0x8000000000000000;
    sub_1DCE8683C((long long *)&v18, isUniquelyReferenced_nonNull_native, v12, v13, v14, v15);
    *(void *)(a3 + 16) = v17;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
}

uint64_t sub_1DCE97DB4@<X0>(double *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v76 = a3;
  uint64_t v9 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v78 = *(void *)(v9 - 8);
  uint64_t v79 = v9;
  MEMORY[0x1F4188790](v9);
  id v75 = (long long *)((char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1DD048068();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  CGFloat v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v15 = *a1;
  CGFloat v16 = a1[1];
  CGFloat v17 = a1[2];
  CGFloat v18 = a1[3];
  swift_beginAccess();
  uint64_t v19 = *a2;
  uint64_t v20 = *(void *)(*a2 + 16);
  uint64_t v80 = a5;
  uint64_t v77 = a1;
  if (v20 && (unint64_t v21 = sub_1DCEAD508(v15, v16, v17, v18), (v22 & 1) != 0))
  {
    uint64_t v72 = v12;
    uint64_t v73 = v11;
    uint64_t v23 = (uint64_t *)(*(void *)(v19 + 56) + 48 * v21);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    uint64_t v27 = v23[2];
    uint64_t v26 = v23[3];
    uint64_t v28 = v23[4];
    uint64_t v29 = v23[5];
    swift_endAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1DCDB40EC((uint64_t)v14);
    uint64_t v30 = (uint64_t)a1;
    uint64_t v31 = v75;
    sub_1DCE9B5DC(v30, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    swift_bridgeObjectRetain();
    uint64_t v74 = v29;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1DD048048();
    int v71 = sub_1DD048848();
    if (os_log_type_enabled(v32, (os_log_type_t)v71))
    {
      os_log_t v63 = v32;
      uint64_t v64 = v14;
      uint64_t v65 = v28;
      uint64_t v66 = v26;
      uint64_t v67 = v27;
      uint64_t v68 = v25;
      uint64_t v69 = v24;
      uint64_t v70 = a4;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = v34;
      uint64_t v86 = v34;
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t v36 = v74;
      int64_t v37 = *(void *)(v74 + 16);
      uint64_t v38 = MEMORY[0x1E4FBC860];
      if (v37)
      {
        uint64_t v61 = v34;
        uint64_t v62 = v33;
        uint64_t v81 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1DCFC4948(0, v37, 0);
        uint64_t v38 = v81;
        uint64_t v39 = (uint64_t *)(v36 + 48);
        do
        {
          uint64_t v40 = *(v39 - 1);
          uint64_t v41 = *v39;
          *(void *)&long long v82 = *(v39 - 2);
          *((void *)&v82 + 1) = v40;
          *(void *)&long long v83 = v41;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v42 = sub_1DD048498();
          uint64_t v44 = v43;
          uint64_t v81 = v38;
          unint64_t v46 = *(void *)(v38 + 16);
          unint64_t v45 = *(void *)(v38 + 24);
          if (v46 >= v45 >> 1)
          {
            sub_1DCFC4948(v45 > 1, v46 + 1, 1);
            uint64_t v38 = v81;
          }
          *(void *)(v38 + 16) = v46 + 1;
          uint64_t v47 = v38 + 16 * v46;
          *(void *)(v47 + 32) = v42;
          *(void *)(v47 + 40) = v44;
          v39 += 3;
          --v37;
        }
        while (v37);
        swift_bridgeObjectRelease();
        uint64_t v31 = v75;
        uint64_t v33 = v62;
        uint64_t v35 = v61;
      }
      uint64_t v53 = MEMORY[0x1E01AE380](v38, MEMORY[0x1E4FBB1A0]);
      unint64_t v55 = v54;
      swift_bridgeObjectRelease();
      *(void *)&long long v82 = sub_1DCED7FA0(v53, v55, &v86);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      uint64_t v56 = v65;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      long long v57 = v31[1];
      long long v82 = *v31;
      long long v83 = v57;
      uint64_t v58 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v82 = sub_1DCED7FA0(v58, v59, &v86);
      uint64_t v28 = v56;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCE9B6AC((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      os_log_t v60 = v63;
      _os_log_impl(&dword_1DCCF9000, v63, (os_log_type_t)v71, "Parse extracted classifications %s from %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v35, -1, -1);
      MEMORY[0x1E01B07E0](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v72 + 8))(v64, v73);
      a4 = v70;
      uint64_t v24 = v69;
      uint64_t v25 = v68;
      uint64_t v27 = v67;
      uint64_t v26 = v66;
      uint64_t v48 = v74;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1DCE9B6AC((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

      (*(void (**)(char *, uint64_t))(v72 + 8))(v14, v73);
      uint64_t v48 = v74;
    }
  }
  else
  {
    swift_endAccess();
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v27 = 0;
    uint64_t v26 = 0;
    uint64_t v28 = 0;
    uint64_t v48 = 0;
  }
  *(void *)&long long v82 = v24;
  *((void *)&v82 + 1) = v25;
  *(void *)&long long v83 = v27;
  *((void *)&v83 + 1) = v26;
  uint64_t v84 = v28;
  uint64_t v85 = v48;
  uint64_t v49 = v28;
  uint64_t v50 = *a4;
  swift_bridgeObjectRetain();
  uint64_t v51 = v80;
  sub_1DCE99BC4((uint64_t)v77, (uint64_t *)&v82, v50, v80);
  swift_bridgeObjectRelease();
  sub_1DCE9B9BC(v24, v25, v27, v26, v49);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v51, 0, 1, v79);
}

uint64_t sub_1DCE98418(unsigned __int8 *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85FF8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (unsigned __int8 *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v1 + 32);
  if (!*(void *)(v14 + 16)) {
    return 0;
  }
  uint64_t v15 = sub_1DCEAD454(*a1);
  if ((v16 & 1) == 0) {
    return 0;
  }
  sub_1DCE9B5DC(*(void *)(v14 + 56) + *(void *)(v11 + 72) * v15, (uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  sub_1DCE9B644((uint64_t)&v13[*(int *)(v10 + 40)], (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = 0;
    *((void *)v9 + 1) = 0;
    *((void *)v9 + 2) = 0xE000000000000000;
    *((void *)v9 + 3) = MEMORY[0x1E4FBC860];
    *((_DWORD *)v9 + 8) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v5, &qword_1EBE85FF8);
  }
  else
  {
    sub_1DCE9B8E0((uint64_t)v5, (uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig);
  }
  sub_1DCE9B6AC((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
  uint64_t v17 = *v9;
  sub_1DCE9B6AC((uint64_t)v9, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig);
  return v17;
}

char *sub_1DCE986AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, int a7, uint64_t *a8)
{
  uint64_t v171 = a8;
  int v176 = a7;
  uint64_t v180 = a5;
  uint64_t v179 = a4;
  uint64_t v178 = a3;
  uint64_t v11 = sub_1DD048068();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v167 = (char *)&v152 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v158 = (char *)&v152 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v159 = (char *)&v152 - v20;
  uint64_t v177 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  uint64_t v21 = *(void *)(v177 - 8);
  MEMORY[0x1F4188790](v177);
  uint64_t v162 = (uint64_t)&v152 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86078);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v152 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v152 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = a1;
  uint64_t v29 = *(void *)(a1 + 48);
  uint64_t v30 = *(void *)(v29 + 16);
  if (!v30) {
    return (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v163 = v14;
  uint64_t v170 = v11;
  uint64_t v172 = a2;
  v176 &= 1u;
  swift_bridgeObjectRetain();
  long long v169 = 0;
  long long v31 = *(_OWORD *)(v29 + 144);
  long long v189 = *(_OWORD *)(v29 + 128);
  long long v190 = v31;
  *(_OWORD *)v191 = *(_OWORD *)(v29 + 160);
  uint64_t v32 = v21;
  int64_t v175 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  unint64_t v165 = (void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  unint64_t v164 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v174 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v33 = v30 - 1;
  uint64_t v34 = 192;
  *(_OWORD *)&v191[13] = *(_OWORD *)(v29 + 173);
  long long v35 = *(_OWORD *)(v29 + 80);
  long long v185 = *(_OWORD *)(v29 + 64);
  long long v186 = v35;
  long long v36 = *(_OWORD *)(v29 + 112);
  long long v187 = *(_OWORD *)(v29 + 96);
  long long v188 = v36;
  long long v38 = *(_OWORD *)(v29 + 48);
  long long v183 = *(_OWORD *)(v29 + 32);
  *((void *)&v37 + 1) = *((void *)&v183 + 1);
  long long v184 = v38;
  unint64_t v161 = (unint64_t)"coarseCategoryDistribution";
  unint64_t v157 = 0x80000001DD067880;
  *(void *)&long long v37 = 134217984;
  long long v160 = v37;
  *(void *)&long long v37 = 136315394;
  long long v156 = v37;
  uint64_t v155 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v39 = v173;
  unint64_t v168 = a6;
  uint64_t v166 = v32;
  while (1)
  {
    uint64_t v40 = v183;
    char v41 = BYTE12(v190);
    sub_1DCE9B5DC(v181, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((v41 & 1) == 0)
    {
      sub_1DCE9B6AC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (!v33) {
        goto LABEL_119;
      }
      goto LABEL_86;
    }
    uint64_t v182 = v39[6];
    uint64_t v42 = v39[4];
    if (*(void *)(v42 + 16))
    {
      sub_1DCD32CC8((uint64_t)&v183);
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1DCEAD454(v40);
      if (v44)
      {
        uint64_t v45 = v166;
        sub_1DCE9B5DC(*(void *)(v42 + 56) + *(void *)(v166 + 72) * v43, (uint64_t)v25, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v25, 0, 1, v177);
      }
      else
      {
        (*v175)(v25, 1, 1, v177);
      }
    }
    else
    {
      (*v175)(v25, 1, 1, v177);
      sub_1DCD32CC8((uint64_t)&v183);
      swift_bridgeObjectRetain();
    }
    char v46 = sub_1DCD97EE0((uint64_t)v28, v178, v179, v180, &v182, a6, v176, (uint64_t)v25);
    sub_1DCD32DD4((uint64_t)&v183);
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE86078);
    swift_bridgeObjectRelease();
    sub_1DCE9B6AC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((v46 & 1) == 0) {
      goto LABEL_85;
    }
    if (!*(void *)(v42 + 16)
      || (uint64_t v47 = sub_1DCEAD454(v40), (v48 & 1) == 0)
      || (uint64_t v49 = *(void *)(v42 + 56) + *(void *)(v166 + 72) * v47,
          uint64_t v50 = v162,
          sub_1DCE9B5DC(v49, v162, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig),
          uint64_t v51 = *(unsigned int *)(v50 + 24),
          sub_1DCE9B6AC(v50, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig),
          (int)v51 < 1))
    {
      uint64_t v61 = v39[5];
      uint64_t v53 = v172;
      if (v172 < v61) {
        goto LABEL_26;
      }
      if (qword_1EBE87190 != -1) {
        swift_once();
      }
      if (byte_1EBE87188 != 1) {
        goto LABEL_63;
      }
      id v75 = objc_msgSend(self, sel_mainBundle);
      id v76 = objc_msgSend(v75, sel_bundleIdentifier);

      if (v76)
      {
        uint64_t v77 = sub_1DD048408();
        uint64_t v79 = v78;

        if (v77 == 0xD00000000000002BLL && v79 == v157)
        {
          swift_bridgeObjectRelease();
          goto LABEL_55;
        }
        char v92 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v92)
        {
LABEL_55:
          CGFloat v93 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            CGFloat v93 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_59;
        }
      }
      CGFloat v93 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        CGFloat v93 = &qword_1EBE871E8;
      }
LABEL_59:
      CGFloat v94 = *(void **)(*v93 + 32);
      swift_retain();
      CGFloat v95 = (void *)sub_1DD0483D8();
      LODWORD(v94) = objc_msgSend(v94, sel_BOOLForKey_, v95);
      swift_release();

      uint64_t v39 = v173;
      if (v94)
      {
        if (qword_1EAB01C80 != -1) {
          swift_once();
        }
        uint64_t v96 = v170;
        uint64_t v97 = v170;
        uint64_t v98 = qword_1EAB02B70;
        goto LABEL_66;
      }
LABEL_63:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v96 = v170;
      uint64_t v97 = v170;
      uint64_t v98 = qword_1EBE871A8;
LABEL_66:
      uint64_t v99 = __swift_project_value_buffer(v97, (uint64_t)v98);
      unint64_t v100 = *v165;
      (*v165)(v167, v99, v96);
      if ((byte_1EBE87188 & 1) == 0) {
        goto LABEL_78;
      }
      id v101 = objc_msgSend(self, sel_mainBundle);
      id v102 = objc_msgSend(v101, sel_bundleIdentifier);

      if (v102)
      {
        uint64_t v103 = sub_1DD048408();
        uint64_t v105 = v104;

        if (v103 == 0xD00000000000002BLL && v105 == (v161 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
          goto LABEL_72;
        }
        char v106 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v106)
        {
LABEL_72:
          uint64_t v107 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            uint64_t v107 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_76;
        }
      }
      uint64_t v107 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v107 = &qword_1EBE871E8;
      }
LABEL_76:
      uint64_t v108 = *(void **)(*v107 + 32);
      swift_retain();
      uint64_t v109 = (void *)sub_1DD0483D8();
      LODWORD(v108) = objc_msgSend(v108, sel_BOOLForKey_, v109);
      swift_release();

      uint64_t v39 = v173;
      if (v108)
      {
        uint64_t v110 = v163;
        uint64_t v111 = (uint64_t)v167;
        uint64_t v112 = v170;
LABEL_81:
        v100(v110, v111, v112);
        uint64_t v113 = *v164;
        (*v164)(v167, v112);
        swift_retain();
        unint64_t v114 = sub_1DD048048();
        os_log_type_t v115 = sub_1DD048848();
        if (os_log_type_enabled(v114, v115))
        {
          uint64_t v116 = swift_slowAlloc();
          *(_DWORD *)uint64_t v116 = v160;
          *(void *)(v116 + 4) = v61;
          swift_release();
          _os_log_impl(&dword_1DCCF9000, v114, v115, "Request counts exceeds maxNumOfRegionsWithDomainSignals (%ld)", (uint8_t *)v116, 0xCu);
          uint64_t v117 = v116;
          uint64_t v39 = v173;
          MEMORY[0x1E01B07E0](v117, -1, -1);
        }
        else
        {

          swift_release();
        }
        a6 = v168;
        v113(v163, v170);
LABEL_85:
        if (!v33) {
          goto LABEL_119;
        }
        goto LABEL_86;
      }
LABEL_78:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v112 = v170;
      uint64_t v111 = __swift_project_value_buffer(v170, (uint64_t)qword_1EBE871A8);
      uint64_t v110 = v163;
      goto LABEL_81;
    }
    uint64_t v52 = *v171;
    uint64_t v53 = v172;
    if (*(void *)(*v171 + 16))
    {
      uint64_t v54 = sub_1DCEAD454(v40);
      if ((v55 & 1) != 0 && *(void *)(*(void *)(v52 + 56) + 8 * v54) >= v51)
      {
        if (qword_1EBE87190 != -1) {
          swift_once();
        }
        if (byte_1EBE87188 != 1) {
          goto LABEL_96;
        }
        id v56 = objc_msgSend(self, sel_mainBundle);
        id v57 = objc_msgSend(v56, sel_bundleIdentifier);

        if (v57)
        {
          uint64_t v58 = sub_1DD048408();
          uint64_t v60 = v59;

          if (v58 == 0xD00000000000002BLL && v60 == (v161 | 0x8000000000000000))
          {
            swift_bridgeObjectRelease();
LABEL_88:
            double v126 = (uint64_t *)&off_1EAB02A48;
            if (qword_1EAB01C28 != -1)
            {
              swift_once();
              double v126 = (uint64_t *)&off_1EAB02A48;
            }
LABEL_92:
            double v127 = *(void **)(*v126 + 32);
            swift_retain();
            uint64_t v128 = (void *)sub_1DD0483D8();
            LODWORD(v127) = objc_msgSend(v127, sel_BOOLForKey_, v128);
            swift_release();

            uint64_t v39 = v173;
            if (v127)
            {
              if (qword_1EAB01C80 != -1) {
                swift_once();
              }
              uint64_t v129 = v170;
              uint64_t v130 = v170;
              uint64_t v131 = qword_1EAB02B70;
              goto LABEL_99;
            }
LABEL_96:
            if (qword_1EBE871C8 != -1) {
              swift_once();
            }
            uint64_t v129 = v170;
            uint64_t v130 = v170;
            uint64_t v131 = qword_1EBE871A8;
LABEL_99:
            uint64_t v132 = __swift_project_value_buffer(v130, (uint64_t)v131);
            unint64_t v154 = *v165;
            v154(v159, v132, v129);
            if ((byte_1EBE87188 & 1) == 0) {
              goto LABEL_111;
            }
            id v133 = objc_msgSend(self, sel_mainBundle);
            id v134 = objc_msgSend(v133, sel_bundleIdentifier);

            if (v134)
            {
              uint64_t v135 = sub_1DD048408();
              uint64_t v137 = v136;

              if (v135 == 0xD00000000000002BLL && v137 == (v161 | 0x8000000000000000))
              {
                swift_bridgeObjectRelease();
LABEL_105:
                uint64_t v139 = (uint64_t *)&off_1EAB02A48;
                if (qword_1EAB01C28 != -1)
                {
                  swift_once();
                  uint64_t v139 = (uint64_t *)&off_1EAB02A48;
                }
LABEL_109:
                int v140 = *(void **)(*v139 + 32);
                swift_retain();
                unint64_t v141 = (void *)sub_1DD0483D8();
                LODWORD(v140) = objc_msgSend(v140, sel_BOOLForKey_, v141);
                swift_release();

                uint64_t v39 = v173;
                if (v140)
                {
                  v154(v158, (uint64_t)v159, v170);
                  uint64_t v142 = v164;
                  goto LABEL_114;
                }
LABEL_111:
                uint64_t v153 = v51;
                uint64_t v142 = v164;
                if (qword_1EBE871C8 != -1) {
                  swift_once();
                }
                uint64_t v51 = v170;
                uint64_t v143 = __swift_project_value_buffer(v170, (uint64_t)qword_1EBE871A8);
                v154(v158, v143, v51);
                LODWORD(v51) = v153;
LABEL_114:
                unint64_t v154 = (void (*)(char *, uint64_t, uint64_t))*v142;
                ((void (*)(char *, uint64_t))v154)(v159, v170);
                unsigned int v144 = sub_1DD048048();
                os_log_type_t v145 = sub_1DD048848();
                if (os_log_type_enabled(v144, v145))
                {
                  uint64_t v146 = swift_slowAlloc();
                  uint64_t v153 = swift_slowAlloc();
                  uint64_t v182 = v153;
                  *(_DWORD *)uint64_t v146 = v156;
                  uint64_t v147 = sub_1DCD9C35C(v40);
                  *(void *)(v146 + 4) = sub_1DCED7FA0(v147, v148, &v182);
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v146 + 12) = 1024;
                  *(_DWORD *)(v146 + 14) = v51;
                  _os_log_impl(&dword_1DCCF9000, v144, v145, "Domain %s exceeds maxNumOfDomainModelRuns (%d)", (uint8_t *)v146, 0x12u);
                  uint64_t v149 = v153;
                  swift_arrayDestroy();
                  MEMORY[0x1E01B07E0](v149, -1, -1);
                  uint64_t v150 = v146;
                  uint64_t v39 = v173;
                  MEMORY[0x1E01B07E0](v150, -1, -1);
                }

                ((void (*)(char *, uint64_t))v154)(v158, v170);
                a6 = v168;
                if (!v33) {
                  goto LABEL_119;
                }
                goto LABEL_86;
              }
              char v138 = sub_1DD048FA8();
              swift_bridgeObjectRelease();
              if (v138) {
                goto LABEL_105;
              }
            }
            uint64_t v139 = &qword_1EBE871E8;
            if (qword_1EBE871A0 != -1)
            {
              swift_once();
              uint64_t v139 = &qword_1EBE871E8;
            }
            goto LABEL_109;
          }
          char v125 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if (v125) {
            goto LABEL_88;
          }
        }
        double v126 = &qword_1EBE871E8;
        if (qword_1EBE871A0 != -1)
        {
          swift_once();
          double v126 = &qword_1EBE871E8;
        }
        goto LABEL_92;
      }
    }
LABEL_26:
    BOOL v62 = __OFADD__(v53, 1);
    uint64_t v63 = v53 + 1;
    if (v62) {
      break;
    }
    uint64_t v172 = v63;
    sub_1DCD33E90((uint64_t)v169);
    uint64_t v64 = v171;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v182 = *v64;
    uint64_t v66 = v182;
    *uint64_t v64 = 0x8000000000000000;
    unint64_t v68 = sub_1DCEAD454(v40);
    uint64_t v69 = *(void *)(v66 + 16);
    BOOL v70 = (v67 & 1) == 0;
    uint64_t v71 = v69 + v70;
    if (__OFADD__(v69, v70)) {
      goto LABEL_122;
    }
    char v72 = v67;
    if (*(void *)(v66 + 24) >= v71)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1DCE8A08C();
        uint64_t v66 = v182;
      }
    }
    else
    {
      sub_1DCE80C5C(v71, isUniquelyReferenced_nonNull_native);
      uint64_t v66 = v182;
      uint64_t v73 = sub_1DCEAD454(v40);
      if ((v72 & 1) != (v74 & 1)) {
        goto LABEL_125;
      }
      unint64_t v68 = v73;
    }
    uint64_t v80 = v171;
    *uint64_t v171 = v66;
    swift_bridgeObjectRelease();
    uint64_t v81 = (void *)*v80;
    if (v72)
    {
      uint64_t v82 = swift_bridgeObjectRetain();
      a6 = v168;
    }
    else
    {
      v81[(v68 >> 6) + 8] |= 1 << v68;
      *(unsigned char *)(v81[6] + v68) = v40;
      *(void *)(v81[7] + 8 * v68) = 0;
      uint64_t v83 = v81[2];
      uint64_t v84 = v83 + 1;
      BOOL v85 = __OFADD__(v83, 1);
      uint64_t v82 = swift_bridgeObjectRetain();
      a6 = v168;
      if (v85) {
        goto LABEL_124;
      }
      *(void *)(v82 + 16) = v84;
    }
    uint64_t v86 = *(void *)(v82 + 56);
    swift_bridgeObjectRelease();
    uint64_t v87 = *(void *)(v86 + 8 * v68);
    BOOL v62 = __OFADD__(v87, 1);
    uint64_t v88 = v87 + 1;
    if (v62) {
      goto LABEL_123;
    }
    *(void *)(v86 + 8 * v68) = v88;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v39 = v173;
      os_log_type_t v89 = v174;
    }
    else
    {
      os_log_type_t v89 = sub_1DCE9D7D4(0, *((void *)v174 + 2) + 1, 1, v174);
      uint64_t v39 = v173;
    }
    unint64_t v91 = *((void *)v89 + 2);
    unint64_t v90 = *((void *)v89 + 3);
    if (v91 >= v90 >> 1) {
      os_log_type_t v89 = sub_1DCE9D7D4((char *)(v90 > 1), v91 + 1, 1, v89);
    }
    *((void *)v89 + 2) = v91 + 1;
    uint64_t v174 = v89;
    v89[v91 + 32] = v40;
    long long v169 = sub_1DCE8D3F4;
    if (!v33)
    {
LABEL_119:
      swift_bridgeObjectRelease();
      sub_1DCD33E90((uint64_t)v169);
      return v174;
    }
LABEL_86:
    long long v118 = *(_OWORD *)(v29 + v34 + 16);
    long long v183 = *(_OWORD *)(v29 + v34);
    long long v184 = v118;
    long long v119 = *(_OWORD *)(v29 + v34 + 32);
    long long v120 = *(_OWORD *)(v29 + v34 + 48);
    long long v121 = *(_OWORD *)(v29 + v34 + 80);
    long long v187 = *(_OWORD *)(v29 + v34 + 64);
    long long v188 = v121;
    long long v185 = v119;
    long long v186 = v120;
    long long v122 = *(_OWORD *)(v29 + v34 + 96);
    long long v123 = *(_OWORD *)(v29 + v34 + 112);
    long long v124 = *(_OWORD *)(v29 + v34 + 128);
    *(_OWORD *)&v191[13] = *(_OWORD *)(v29 + v34 + 141);
    *(_OWORD *)v191 = v124;
    long long v189 = v122;
    long long v190 = v123;
    v34 += 160;
    --v33;
  }
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  uint64_t result = (char *)sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCE99BC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  uint64_t v13 = a2[5];
  uint64_t v14 = *v4;
  uint64_t isUniquelyReferenced_nonNull_native = sub_1DCE9B5DC(a1, a4, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  if (v12)
  {
    uint64_t v16 = *(void **)(a4 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DCE9DAF0(0, v16[2] + 1, 1, v16);
      uint64_t v16 = (void *)isUniquelyReferenced_nonNull_native;
    }
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1DCE9DAF0((void *)(v17 > 1), v18 + 1, 1, v16);
      uint64_t v16 = (void *)isUniquelyReferenced_nonNull_native;
    }
    void v16[2] = v18 + 1;
    uint64_t v19 = &v16[6 * v18];
    void v19[4] = v8;
    v19[5] = v9;
    v19[6] = v10;
    v19[7] = v11;
    v19[8] = v12;
    v19[9] = v13;
    *(void *)(a4 + 112) = v16;
  }
  uint64_t v20 = *(void *)(a1 + 48);
  MEMORY[0x1F4188790](isUniquelyReferenced_nonNull_native);
  v23[2] = v4;
  v23[3] = a3;
  v23[4] = a1;
  v23[5] = a4;
  v23[6] = v14;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1DCFB2CA0((void (*)(void *__return_ptr, long long *))sub_1DCE9B2C4, (uint64_t)v23, v20);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a4 + 48) = v21;
  return result;
}

uint64_t sub_1DCE99D80@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v128 = a6;
  uint64_t v133 = a5;
  uint64_t v142 = a7;
  uint64_t v143 = a3;
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig(0);
  uint64_t v131 = *(void *)(v11 - 8);
  uint64_t v132 = v11;
  MEMORY[0x1F4188790](v11);
  long long v118 = &v116[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85FF8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v129 = &v116[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  long long v119 = &v116[-v16];
  uint64_t v17 = sub_1DD048068();
  uint64_t v124 = *(void *)(v17 - 8);
  uint64_t v125 = v17;
  MEMORY[0x1F4188790](v17);
  long long v123 = &v116[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19);
  long long v122 = &v116[-v20];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86078);
  MEMORY[0x1F4188790](v21 - 8);
  double v127 = &v116[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v23 - 8);
  long long v121 = &v116[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v25);
  long long v120 = &v116[-v26];
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (CGRect *)&v116[-v28];
  long long v30 = a1[7];
  v166[0] = a1[6];
  v166[1] = v30;
  long long v31 = a1[3];
  v163[2] = a1[2];
  v166[2] = a1[8];
  *(_OWORD *)((char *)&v166[2] + 13) = *(_OWORD *)((char *)a1 + 141);
  long long v32 = a1[4];
  long long v33 = a1[5];
  v163[3] = v31;
  long long v164 = v32;
  long long v165 = v33;
  long long v34 = a1[1];
  v163[0] = *a1;
  v163[1] = v34;
  uint64_t v35 = LOBYTE(v163[0]);
  long long v161 = *(_OWORD *)((char *)v163 + 1);
  v162[0] = *(_OWORD *)((char *)&v163[1] + 1);
  *(_OWORD *)((char *)v162 + 15) = v163[2];
  uint64_t v135 = v31;
  uint64_t v136 = v164;
  long long v159 = v33;
  v160[0] = v166[0];
  *(_OWORD *)((char *)v160 + 12) = *(_OWORD *)((char *)v166 + 12);
  int v134 = BYTE12(v30);
  *(_DWORD *)((char *)v158 + 7) = DWORD1(v166[2]);
  v158[0] = *(void *)((char *)&v166[1] + 13);
  uint64_t v137 = *((void *)&v166[2] + 1);
  uint64_t v138 = *((void *)&v31 + 1);
  unint64_t v139 = *(void *)&v166[3];
  uint64_t v140 = *((void *)&v164 + 1);
  float v36 = *((float *)&v166[3] + 2);
  int v141 = BYTE12(v166[3]);
  LOBYTE(v145[0]) = v163[0];
  sub_1DCD32CC8((uint64_t)v163);
  uint64_t v130 = a2;
  int v37 = sub_1DCE98418((unsigned __int8 *)v145);
  uint64_t v38 = v143;
  uint64_t v39 = *(void *)(v143 + 16);
  if (!v39) {
    goto LABEL_91;
  }
  int v117 = v37;
  uint64_t v126 = v7;
  swift_bridgeObjectRetain();
  uint64_t v40 = (CGFloat *)(v38 + 64);
  while (2)
  {
    CGFloat v41 = *(v40 - 3);
    CGFloat v42 = *(v40 - 2);
    CGFloat v43 = *(v40 - 1);
    CGFloat v44 = *v40;
    unint64_t v45 = 0xE300000000000000;
    uint64_t v46 = 7631457;
    switch(*((unsigned char *)v40 - 32))
    {
      case 1:
        unint64_t v45 = 0xE600000000000000;
        uint64_t v46 = 0x65727574616ELL;
        break;
      case 2:
        unint64_t v45 = 0xE800000000000000;
        uint64_t v46 = 0x6B72616D646E616CLL;
        break;
      case 3:
        uint64_t v46 = 0x4C6C61727574616ELL;
        unint64_t v45 = 0xEF6B72616D646E61;
        break;
      case 4:
        unint64_t v45 = 0xE500000000000000;
        uint64_t v46 = 0x616964656DLL;
        break;
      case 5:
        unint64_t v45 = 0xE400000000000000;
        uint64_t v46 = 1802465122;
        break;
      case 6:
        unint64_t v45 = 0xE500000000000000;
        uint64_t v46 = 0x6D75626C61;
        break;
      case 7:
        unint64_t v45 = 0xE400000000000000;
        uint64_t v46 = 1937006947;
        break;
      case 8:
        unint64_t v45 = 0xE400000000000000;
        uint64_t v46 = 1936158564;
        break;
      case 9:
        unint64_t v45 = 0xE700000000000000;
        unsigned int v47 = 1835626081;
        goto LABEL_19;
      case 0xA:
        unint64_t v45 = 0xE500000000000000;
        uint64_t v46 = 0x7364726962;
        break;
      case 0xB:
        unint64_t v45 = 0xE700000000000000;
        uint64_t v46 = 0x73746365736E69;
        break;
      case 0xC:
        unint64_t v45 = 0xE800000000000000;
        uint64_t v46 = 0x73656C6974706572;
        break;
      case 0xD:
        unint64_t v45 = 0xE700000000000000;
        unsigned int v47 = 1835884909;
LABEL_19:
        uint64_t v46 = v47 | 0x736C6100000000;
        break;
      case 0xE:
        unint64_t v45 = 0xE700000000000000;
        uint64_t v46 = 0x6C657261707061;
        break;
      case 0xF:
        uint64_t v46 = 0x726F737365636361;
        unint64_t v45 = 0xEB00000000736569;
        break;
      case 0x10:
        unint64_t v45 = 0xE400000000000000;
        uint64_t v46 = 1685024614;
        break;
      case 0x11:
        unint64_t v45 = 0xEA0000000000746ELL;
        uint64_t v46 = 0x6F726665726F7473;
        break;
      case 0x12:
        unsigned int v48 = 1852270963;
        goto LABEL_27;
      case 0x13:
        unint64_t v45 = 0x80000001DD066AB0;
        uint64_t v46 = 0xD000000000000011;
        break;
      case 0x14:
        unsigned int v48 = 1869903201;
LABEL_27:
        uint64_t v46 = v48 | 0x626D795300000000;
        unint64_t v45 = 0xEA00000000006C6FLL;
        break;
      case 0x15:
        uint64_t v46 = 0x676F4C646E617262;
        unint64_t v45 = 0xEF6C6F626D79536FLL;
        break;
      case 0x16:
        unint64_t v45 = 0xE700000000000000;
        uint64_t v46 = 0x65646F63726162;
        break;
      case 0x17:
        uint64_t v46 = 0x727574706C756373;
        unint64_t v45 = 0xE900000000000065;
        break;
      case 0x18:
        unint64_t v45 = 0xE700000000000000;
        uint64_t v46 = 0x656E696C796B73;
        break;
      case 0x19:
        unint64_t v45 = 0xE800000000000000;
        uint64_t v46 = 0x44327463656A626FLL;
        break;
      default:
        break;
    }
    unint64_t v49 = 0xE300000000000000;
    uint64_t v50 = 7631457;
    switch(v35)
    {
      case 1:
        unint64_t v49 = 0xE600000000000000;
        if (v46 == 0x65727574616ELL) {
          goto LABEL_82;
        }
        goto LABEL_85;
      case 2:
        unint64_t v49 = 0xE800000000000000;
        if (v46 != 0x6B72616D646E616CLL) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 3:
        unint64_t v49 = 0xEF6B72616D646E61;
        if (v46 != 0x4C6C61727574616ELL) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 4:
        unint64_t v49 = 0xE500000000000000;
        if (v46 != 0x616964656DLL) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 5:
        unint64_t v49 = 0xE400000000000000;
        if (v46 != 1802465122) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 6:
        unint64_t v49 = 0xE500000000000000;
        if (v46 != 0x6D75626C61) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 7:
        unint64_t v49 = 0xE400000000000000;
        if (v46 != 1937006947) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 8:
        unint64_t v49 = 0xE400000000000000;
        if (v46 != 1936158564) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 9:
        unint64_t v49 = 0xE700000000000000;
        uint64_t v51 = 1835626081;
        goto LABEL_57;
      case 10:
        unint64_t v49 = 0xE500000000000000;
        if (v46 != 0x7364726962) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 11:
        unint64_t v49 = 0xE700000000000000;
        unint64_t v52 = 0x746365736E69;
        goto LABEL_58;
      case 12:
        unint64_t v49 = 0xE800000000000000;
        if (v46 != 0x73656C6974706572) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 13:
        unint64_t v49 = 0xE700000000000000;
        uint64_t v51 = 1835884909;
LABEL_57:
        unint64_t v52 = v51 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_58:
        if (v46 != (v52 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 14:
        unint64_t v49 = 0xE700000000000000;
        if (v46 != 0x6C657261707061) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 15:
        unint64_t v49 = 0xEB00000000736569;
        if (v46 != 0x726F737365636361) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 16:
        unint64_t v49 = 0xE400000000000000;
        if (v46 != 1685024614) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 17:
        unint64_t v49 = 0xEA0000000000746ELL;
        if (v46 != 0x6F726665726F7473) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 18:
        unsigned int v53 = 1852270963;
        goto LABEL_72;
      case 19:
        unint64_t v49 = 0x80000001DD066AB0;
        if (v46 != 0xD000000000000011) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 20:
        unsigned int v53 = 1869903201;
LABEL_72:
        unint64_t v49 = 0xEA00000000006C6FLL;
        if (v46 != (v53 | 0x626D795300000000)) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 21:
        unint64_t v49 = 0xEF6C6F626D79536FLL;
        if (v46 != 0x676F4C646E617262) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 22:
        unint64_t v49 = 0xE700000000000000;
        if (v46 != 0x65646F63726162) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 23:
        unint64_t v49 = 0xE900000000000065;
        if (v46 != 0x727574706C756373) {
          goto LABEL_85;
        }
        goto LABEL_82;
      case 24:
        unint64_t v49 = 0xE700000000000000;
        uint64_t v50 = 0x656E696C796B73;
        goto LABEL_81;
      case 25:
        unint64_t v49 = 0xE800000000000000;
        if (v46 != 0x44327463656A626FLL) {
          goto LABEL_85;
        }
        goto LABEL_82;
      default:
LABEL_81:
        if (v46 != v50) {
          goto LABEL_85;
        }
LABEL_82:
        if (v45 != v49)
        {
LABEL_85:
          char v54 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1DCE9B5DC(a4, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v54) {
            goto LABEL_86;
          }
          sub_1DCE9B6AC((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_4:
          v40 += 5;
          if (!--v39)
          {
            swift_bridgeObjectRelease();
LABEL_91:
            long long v150 = v159;
            *(_OWORD *)unint64_t v151 = v160[0];
            *(_OWORD *)&v151[12] = *(_OWORD *)((char *)v160 + 12);
            *(_OWORD *)((char *)v145 + 1) = v161;
            LOBYTE(v145[0]) = v35;
            *(_OWORD *)((char *)&v145[1] + 1) = v162[0];
            v145[2] = *(_OWORD *)((char *)v162 + 15);
            uint64_t v146 = v135;
            uint64_t v147 = v138;
            uint64_t v148 = v136;
            uint64_t v149 = v140;
            char v152 = v134;
            *(_DWORD *)&v153[7] = *(_DWORD *)((char *)v158 + 7);
            *(void *)uint64_t v153 = v158[0];
            uint64_t v154 = v137;
            unint64_t v155 = v139;
            float v156 = v36;
            char v157 = v141;
            faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v145);
            return sub_1DCD32C3C((uint64_t)v145, v142);
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
        sub_1DCE9B5DC(a4, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_86:
        v167.origin.double x = v41;
        v167.origin.CGFloat y = v42;
        v167.size.CGFloat width = v43;
        v167.size.CGFloat height = v44;
        BOOL v55 = CGRectEqualToRect(v167, *v29);
        sub_1DCE9B6AC((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        if (!v55) {
          goto LABEL_4;
        }
        swift_bridgeObjectRelease();
        uint64_t v56 = *(void *)(v133 + 112);
        LOBYTE(v144) = v35;
        uint64_t v57 = (uint64_t)v129;
        uint64_t v58 = v130;
        uint64_t v59 = *(void *)(v130 + 32);
        if (*(void *)(v59 + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v60 = sub_1DCEAD454(v35);
          if (v61)
          {
            uint64_t v62 = v131;
            uint64_t v63 = v127;
            sub_1DCE9B5DC(*(void *)(v59 + 56) + *(void *)(v131 + 72) * v60, (uint64_t)v127, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v62 + 56))(v63, 0, 1, v132);
          }
          else
          {
            uint64_t v63 = v127;
            (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v131 + 56))(v127, 1, 1, v132);
          }
        }
        else
        {
          uint64_t v63 = v127;
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v131 + 56))(v127, 1, 1, v132);
          swift_bridgeObjectRetain();
        }
        char v65 = sub_1DCD966B0((char *)v145, v56, (char *)&v144, (void (*)(void, void))v63, *(void *)(v58 + 72));
        swift_bridgeObjectRelease();
        sub_1DCD2479C((uint64_t)v63, &qword_1EBE86078);
        if ((v65 & 1) == 0)
        {
          char v75 = v145[0];
          if (LOBYTE(v145[0]) == 26)
          {
            id v76 = v122;
            sub_1DCDB40EC((uint64_t)v122);
            uint64_t v77 = v120;
            sub_1DCE9B5DC(a4, (uint64_t)v120, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            uint64_t v78 = sub_1DD048048();
            os_log_type_t v79 = sub_1DD048848();
            if (os_log_type_enabled(v78, v79))
            {
              uint64_t v80 = (uint8_t *)swift_slowAlloc();
              uint64_t v81 = swift_slowAlloc();
              *(_DWORD *)uint64_t v80 = 136315138;
              uint64_t v143 = (uint64_t)(v80 + 4);
              uint64_t v144 = v81;
              long long v82 = v77[1];
              v145[0] = *v77;
              v145[1] = v82;
              uint64_t v83 = NormalizedRect.loggingDescription.getter();
              *(void *)&v145[0] = sub_1DCED7FA0(v83, v84, &v144);
              sub_1DD048A28();
              swift_bridgeObjectRelease();
              sub_1DCE9B6AC((uint64_t)v77, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              _os_log_impl(&dword_1DCCF9000, v78, v79, "Suppress domain ($0.domain.name) for region %s", v80, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1E01B07E0](v81, -1, -1);
              MEMORY[0x1E01B07E0](v80, -1, -1);

              (*(void (**)(unsigned char *, uint64_t))(v124 + 8))(v122, v125);
            }
            else
            {
              sub_1DCE9B6AC((uint64_t)v77, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

              (*(void (**)(unsigned char *, uint64_t))(v124 + 8))(v76, v125);
            }
            uint64_t v98 = v142;
            long long v150 = v159;
            *(_OWORD *)unint64_t v151 = v160[0];
            *(_OWORD *)&v151[12] = *(_OWORD *)((char *)v160 + 12);
            *(_OWORD *)((char *)v145 + 1) = v161;
            LOBYTE(v145[0]) = v35;
            *(_OWORD *)((char *)&v145[1] + 1) = v162[0];
            v145[2] = *(_OWORD *)((char *)v162 + 15);
            uint64_t v146 = v135;
            uint64_t v147 = v138;
            uint64_t v148 = v136;
            uint64_t v149 = v140;
            char v152 = 0;
            *(void *)uint64_t v153 = v158[0];
            *(_DWORD *)&v153[7] = *(_DWORD *)((char *)v158 + 7);
            uint64_t v154 = v137;
            unint64_t v155 = v139;
            float v156 = v36;
            char v157 = v141;
            faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v145);
            return sub_1DCD32C3C((uint64_t)v145, v98);
          }
          BOOL v85 = v123;
          sub_1DCDB40EC((uint64_t)v123);
          uint64_t v86 = a4;
          uint64_t v87 = v121;
          sub_1DCE9B5DC(v86, (uint64_t)v121, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD32CC8((uint64_t)v163);
          sub_1DCD32CC8((uint64_t)v163);
          uint64_t v88 = sub_1DD048048();
          os_log_type_t v89 = sub_1DD048848();
          if (os_log_type_enabled(v88, v89))
          {
            uint64_t v90 = swift_slowAlloc();
            uint64_t v143 = swift_slowAlloc();
            uint64_t v144 = v143;
            *(_DWORD *)uint64_t v90 = 136315394;
            uint64_t v91 = sub_1DCD9C35C(v35);
            *(void *)&v145[0] = sub_1DCED7FA0(v91, v92, &v144);
            sub_1DD048A28();
            swift_bridgeObjectRelease();
            sub_1DCD32DD4((uint64_t)v163);
            sub_1DCD32DD4((uint64_t)v163);
            *(_WORD *)(v90 + 12) = 2080;
            long long v93 = v87[1];
            v145[0] = *v87;
            v145[1] = v93;
            uint64_t v94 = NormalizedRect.loggingDescription.getter();
            *(void *)&v145[0] = sub_1DCED7FA0(v94, v95, &v144);
            sub_1DD048A28();
            swift_bridgeObjectRelease();
            sub_1DCE9B6AC((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            _os_log_impl(&dword_1DCCF9000, v88, v89, "Switch to domain (newDomain.rawValue) from domain %s for region %s", (uint8_t *)v90, 0x16u);
            uint64_t v96 = v143;
            swift_arrayDestroy();
            MEMORY[0x1E01B07E0](v96, -1, -1);
            MEMORY[0x1E01B07E0](v90, -1, -1);

            (*(void (**)(unsigned char *, uint64_t))(v124 + 8))(v123, v125);
          }
          else
          {
            sub_1DCD32DD4((uint64_t)v163);
            sub_1DCD32DD4((uint64_t)v163);
            sub_1DCE9B6AC((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

            (*(void (**)(unsigned char *, uint64_t))(v124 + 8))(v85, v125);
          }
LABEL_110:
          uint64_t v99 = v142;
          char v100 = v141;
          unint64_t v101 = v139;
          uint64_t v102 = v140;
          uint64_t v103 = v136;
          uint64_t v104 = v137;
          uint64_t v105 = v138;
          uint64_t v106 = v135;
          goto LABEL_111;
        }
        if ((v117 & 1) == 0)
        {
          char v75 = v35;
          goto LABEL_110;
        }
        uint64_t v66 = *(void *)(v133 + 112);
        uint64_t v67 = *(void *)(v59 + 16);
        swift_bridgeObjectRetain();
        if (v67 && (uint64_t v68 = sub_1DCEAD454(v35), (v69 & 1) != 0))
        {
          BOOL v70 = v118;
          sub_1DCE9B5DC(*(void *)(v59 + 56) + *(void *)(v131 + 72) * v68, (uint64_t)v118, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
          sub_1DCE9B644((uint64_t)&v70[*(int *)(v132 + 40)], v57);
          uint64_t v71 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig(0);
          uint64_t v72 = *(void *)(v71 - 8);
          int v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v57, 1, v71);
          char v74 = v119;
          if (v73 == 1)
          {
            *long long v119 = 0;
            *((void *)v74 + 1) = 0;
            *((void *)v74 + 2) = 0xE000000000000000;
            *((void *)v74 + 3) = MEMORY[0x1E4FBC860];
            *((_DWORD *)v74 + 8) = 0;
            sub_1DD047BE8();
            sub_1DCD2479C(v57, &qword_1EBE85FF8);
          }
          else
          {
            sub_1DCE9B8E0(v57, (uint64_t)v119, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig);
          }
          sub_1DCE9B6AC((uint64_t)v118, type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v72 + 56))(v74, 0, 1, v71);
        }
        else
        {
          uint64_t v97 = type metadata accessor for Argos_Protos_Queryflow_DomainSelectionConfig.RichLabelConfig(0);
          char v74 = v119;
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v119, 1, 1, v97);
        }
        LOBYTE(v145[0]) = v35;
        float v108 = sub_1DCD99DE8(v66, (uint64_t)v74, (char *)v145, *(void *)(v58 + 64));
        uint64_t v104 = v109;
        unint64_t v101 = v110;
        float v111 = v108;
        swift_bridgeObjectRelease();
        sub_1DCD2479C((uint64_t)v74, &qword_1EBE85FF8);
        if (!v101) {
          goto LABEL_118;
        }
        swift_bridgeObjectRetain();
        uint64_t v112 = sub_1DCE527D4(v104, v101);
        uint64_t v105 = v113;
        swift_bridgeObjectRelease();
        if (!v105)
        {
          swift_bridgeObjectRelease();
LABEL_118:
          long long v150 = v159;
          *(_OWORD *)unint64_t v151 = v160[0];
          *(_OWORD *)&v151[12] = *(_OWORD *)((char *)v160 + 12);
          *(_OWORD *)((char *)v145 + 1) = v161;
          LOBYTE(v145[0]) = v35;
          *(_OWORD *)((char *)&v145[1] + 1) = v162[0];
          v145[2] = *(_OWORD *)((char *)v162 + 15);
          uint64_t v146 = v135;
          uint64_t v147 = v138;
          uint64_t v148 = v136;
          uint64_t v149 = v140;
          char v152 = v134;
          *(_DWORD *)&v153[7] = *(_DWORD *)((char *)v158 + 7);
          *(void *)uint64_t v153 = v158[0];
          uint64_t v154 = v137;
          unint64_t v155 = v139;
          float v156 = v36;
          char v157 = v141;
          faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v145);
          uint64_t v107 = v142;
          return sub_1DCD32C3C((uint64_t)v145, v107);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v114 = sub_1DCFD0E74(v112, v105);
        uint64_t v102 = v115;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v103 = v114;
        char v75 = v35;
        uint64_t v106 = v112;
        float v36 = v111;
        uint64_t v99 = v142;
        char v100 = v141;
LABEL_111:
        long long v150 = v159;
        *(_OWORD *)unint64_t v151 = v160[0];
        *(_OWORD *)&v151[12] = *(_OWORD *)((char *)v160 + 12);
        *(_OWORD *)((char *)v145 + 1) = v161;
        LOBYTE(v145[0]) = v75;
        *(_OWORD *)((char *)&v145[1] + 1) = v162[0];
        v145[2] = *(_OWORD *)((char *)v162 + 15);
        uint64_t v146 = v106;
        uint64_t v147 = v105;
        uint64_t v148 = v103;
        uint64_t v149 = v102;
        char v152 = v134;
        *(_DWORD *)&v153[7] = *(_DWORD *)((char *)v158 + 7);
        *(void *)uint64_t v153 = v158[0];
        uint64_t v154 = v104;
        unint64_t v155 = v101;
        float v156 = v36;
        char v157 = v100;
        faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v145);
        uint64_t v107 = v99;
        return sub_1DCD32C3C((uint64_t)v145, v107);
    }
  }
}

uint64_t sub_1DCE9B21C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1DCE9B26C()
{
  sub_1DCE9B21C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DomainSignalsExtractor()
{
  return self;
}

uint64_t sub_1DCE9B2C4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCE99D80(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

unint64_t sub_1DCE9B2E8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v34);
  uint64_t v33 = (uint64_t)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v31 = (uint64_t)v27 - v15;
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v27[1] = a1;
  unint64_t v28 = v17;
  uint64_t v18 = (double *)(a1 + v17);
  uint64_t v19 = *(void *)(v14 + 72);
  long long v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  unint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  do
  {
    sub_1DCE97DB4(v18, a2, a3, a4, (uint64_t)v11);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v20;
    }
    if ((*v32)(v11, 1, v34) == 1)
    {
      sub_1DCD2479C((uint64_t)v11, &qword_1EBE855F0);
    }
    else
    {
      uint64_t v21 = v31;
      sub_1DCE9B8E0((uint64_t)v11, v31, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCE9B8E0(v21, v33, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v20 = sub_1DCE9D7A0(0, *(void *)(v20 + 16) + 1, 1, v20);
      }
      unint64_t v23 = *(void *)(v20 + 16);
      unint64_t v22 = *(void *)(v20 + 24);
      if (v23 >= v22 >> 1)
      {
        uint64_t v25 = sub_1DCE9D7A0(v22 > 1, v23 + 1, 1, v20);
        uint64_t v24 = v19;
        unint64_t v20 = v25;
      }
      else
      {
        uint64_t v24 = v19;
      }
      *(void *)(v20 + 16) = v23 + 1;
      uint64_t v19 = v24;
      sub_1DCE9B8E0(v33, v20 + v28 + v23 * v24, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      a2 = v29;
      a3 = v30;
    }
    uint64_t v18 = (double *)((char *)v18 + v19);
    --v16;
  }
  while (v16);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1DCE9B5DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCE9B644(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85FF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCE9B6AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCE9B70C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCE9B744()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

__n128 sub_1DCE9B77C@<Q0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)a2 = *a1;
  __n128 result = *(__n128 *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t sub_1DCE9B798()
{
  uint64_t v1 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v3 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v3 + v4;
  swift_bridgeObjectRelease();
  uint64_t v7 = v5 + *(int *)(v1 + 60);
  uint64_t v8 = sub_1DD046598();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v6, v2 | 7);
}

uint64_t sub_1DCE9B8E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1DCE9B948(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (double *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  sub_1DCE97C94(a1, v4, v5, v6);
}

uint64_t sub_1DCE9B9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1DCE9BA00(uint64_t a1, uint64_t a2, uint64_t *a3, int a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_1DD0465D8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a3;
  v6[2] = a1;
  v6[3] = a5;
  v6[4] = a2;
  v6[5] = a4;
  v6[6] = v16;
  swift_retain_n();
  swift_retain();
  sub_1DD0465C8();
  uint64_t v17 = sub_1DD0465B8();
  unint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  type metadata accessor for RichLabelMapper();
  swift_allocObject();
  v6[7] = sub_1DCE52080(a5, v17, v19);
  type metadata accessor for RichLabelThresholdMapper();
  swift_allocObject();
  swift_retain();
  unint64_t v20 = sub_1DCD33A34();
  swift_release();
  v6[8] = v20;
  type metadata accessor for DomainModelOutputMapper();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = sub_1DCFD9704(62, 0, 1852797802, 0xE400000000000000);
  uint64_t v24 = v23;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v22;
  *(void *)(v25 + 24) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE862A8);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 24) = 0;
  *(unsigned char *)(v26 + 32) = -1;
  *(void *)(v26 + 56) = 0;
  *(void *)(v26 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
  uint64_t v27 = swift_allocObject();
  *(_DWORD *)(v27 + 16) = 0;
  *(void *)(v26 + 80) = v27;
  *(void *)(v26 + 40) = sub_1DCE9BCC4;
  *(void *)(v26 + 48) = v25;
  swift_retain();
  swift_retain();
  sub_1DCD33E90(0);
  *(void *)(v26 + 72) = 4;
  swift_release();
  uint64_t v28 = sub_1DCF31D08();
  swift_release();
  *(void *)(v21 + 16) = v28;
  v6[9] = v21;
  return v6;
}

uint64_t sub_1DCE9BC8C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DCE9BCC4@<X0>(unint64_t *a1@<X8>)
{
  return sub_1DCF1EEE0(a1);
}

uint64_t getEnumTagSinglePayload for DomainSignalsExtractor.ExtractedDomainRegionInfo(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xE7 && a1[40]) {
    return (*(_DWORD *)a1 + 231);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 0x1A;
  int v5 = v3 - 26;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DomainSignalsExtractor.ExtractedDomainRegionInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE6)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 231;
    if (a3 >= 0xE7) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xE7) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 25;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DomainSignalsExtractor.ExtractedDomainRegionInfo()
{
  return &type metadata for DomainSignalsExtractor.ExtractedDomainRegionInfo;
}

uint64_t sub_1DCE9BD80(unint64_t a1)
{
  unint64_t v2 = v1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    if (!v4) {
      return v5;
    }
    uint64_t v24 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1DCFC5920(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    unint64_t v23 = v2;
    uint64_t v7 = 0;
    unint64_t v2 = a1 & 0xC000000000000001;
    uint64_t v5 = v24;
    while (v4 != v7)
    {
      if (v2) {
        id v8 = (id)MEMORY[0x1E01AE890](v7, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, sel_label, v23);
      uint64_t v11 = sub_1DD048408();
      uint64_t v13 = v12;

      objc_msgSend(v9, sel_confidence);
      int v15 = v14;
      objc_msgSend(v9, sel_normalizedBoundingBox);
      v27.origin.CGFloat x = 0.0;
      v27.origin.CGFloat y = 0.0;
      v27.size.CGFloat width = 1.0;
      v27.size.CGFloat height = 1.0;
      CGRect v26 = CGRectIntersection(v25, v27);
      CGFloat x = v26.origin.x;
      CGFloat y = v26.origin.y;
      CGFloat width = v26.size.width;
      CGFloat height = v26.size.height;

      unint64_t v21 = *(void *)(v24 + 16);
      unint64_t v20 = *(void *)(v24 + 24);
      if (v21 >= v20 >> 1) {
        sub_1DCFC5920(v20 > 1, v21 + 1, 1);
      }
      ++v7;
      *(void *)(v24 + 16) = v21 + 1;
      uint64_t v22 = v24 + 56 * v21;
      *(void *)(v22 + 32) = v11;
      *(void *)(v22 + 40) = v13;
      *(_DWORD *)(v22 + 48) = v15;
      *(CGFloat *)(v22 + 56) = x;
      *(CGFloat *)(v22 + 64) = y;
      *(CGFloat *)(v22 + 72) = width;
      *(CGFloat *)(v22 + 80) = height;
      if (v4 == v7) {
        return v5;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCE9BF6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AnyVIImageContent();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  a1[3] = v3;
  a1[4] = (uint64_t)&off_1F383AB60;
  *a1 = v4;
  return swift_unknownObjectRetain();
}

void VIAnnotation.mappedAnnotation.getter(void *a1@<X8>)
{
  unint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_faceAnnotations);
  long long v122 = v1;
  if (!v3)
  {
    uint64_t v126 = 0;
    goto LABEL_19;
  }
  uint64_t v4 = v3;
  sub_1DCD95648(0, &qword_1EBE85068);
  unint64_t v5 = sub_1DD0486B8();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DD048CC8();
    if (v6) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_4:
      if (v6 < 1)
      {
        __break(1u);
        goto LABEL_100;
      }
      uint64_t v7 = 0;
      uint64_t v126 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        if ((v5 & 0xC000000000000001) != 0) {
          id v8 = (id)MEMORY[0x1E01AE890](v7, v5);
        }
        else {
          id v8 = *(id *)(v5 + 8 * v7 + 32);
        }
        uint64_t v9 = v8;
        id v10 = objc_msgSend(v8, sel_label);
        uint64_t v11 = sub_1DD048408();
        uint64_t v13 = v12;

        objc_msgSend(v9, sel_confidence);
        int v15 = v14;
        objc_msgSend(v9, sel_normalizedBoundingBox);
        v138.origin.CGFloat x = 0.0;
        v138.origin.CGFloat y = 0.0;
        v138.size.CGFloat width = 1.0;
        v138.size.CGFloat height = 1.0;
        CGRect v129 = CGRectIntersection(v128, v138);
        CGFloat x = v129.origin.x;
        CGFloat y = v129.origin.y;
        CGFloat width = v129.size.width;
        CGFloat height = v129.size.height;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v126 = sub_1DCE9F40C(0, v126[2] + 1, 1, v126, &qword_1EBE84908);
        }
        unint64_t v21 = v126[2];
        unint64_t v20 = v126[3];
        if (v21 >= v20 >> 1) {
          uint64_t v126 = sub_1DCE9F40C((void *)(v20 > 1), v21 + 1, 1, v126, &qword_1EBE84908);
        }
        ++v7;
        _OWORD v126[2] = v21 + 1;
        uint64_t v22 = &v126[7 * v21];
        v22[4] = v11;
        v22[5] = v13;
        *((_DWORD *)v22 + 12) = v15;
        *((CGFloat *)v22 + 7) = x;
        *((CGFloat *)v22 + 8) = y;
        *((CGFloat *)v22 + 9) = width;
        *((CGFloat *)v22 + 10) = height;
      }
      while (v6 != v7);
      goto LABEL_18;
    }
  }
  uint64_t v126 = (void *)MEMORY[0x1E4FBC860];
LABEL_18:
  swift_bridgeObjectRelease_n();
  unint64_t v2 = v122;
LABEL_19:
  id v23 = objc_msgSend(v2, sel_humanAnnotations);
  if (!v23)
  {
    uint64_t v125 = 0;
    goto LABEL_37;
  }
  uint64_t v24 = v23;
  sub_1DCD95648(0, &qword_1EBE85068);
  unint64_t v25 = sub_1DD0486B8();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1DD048CC8();
    if (v26)
    {
LABEL_22:
      if (v26 >= 1)
      {
        uint64_t v27 = 0;
        uint64_t v125 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if ((v25 & 0xC000000000000001) != 0) {
            id v28 = (id)MEMORY[0x1E01AE890](v27, v25);
          }
          else {
            id v28 = *(id *)(v25 + 8 * v27 + 32);
          }
          uint64_t v29 = v28;
          id v30 = objc_msgSend(v28, sel_label);
          uint64_t v31 = sub_1DD048408();
          uint64_t v33 = v32;

          objc_msgSend(v29, sel_confidence);
          int v35 = v34;
          objc_msgSend(v29, sel_normalizedBoundingBox);
          v139.origin.CGFloat x = 0.0;
          v139.origin.CGFloat y = 0.0;
          v139.size.CGFloat width = 1.0;
          v139.size.CGFloat height = 1.0;
          CGRect v131 = CGRectIntersection(v130, v139);
          CGFloat v36 = v131.origin.x;
          CGFloat v37 = v131.origin.y;
          CGFloat v38 = v131.size.width;
          CGFloat v39 = v131.size.height;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v125 = sub_1DCE9F40C(0, v125[2] + 1, 1, v125, &qword_1EBE84908);
          }
          unint64_t v41 = v125[2];
          unint64_t v40 = v125[3];
          if (v41 >= v40 >> 1) {
            uint64_t v125 = sub_1DCE9F40C((void *)(v40 > 1), v41 + 1, 1, v125, &qword_1EBE84908);
          }
          ++v27;
          v125[2] = v41 + 1;
          CGFloat v42 = &v125[7 * v41];
          v42[4] = v31;
          void v42[5] = v33;
          *((_DWORD *)v42 + 12) = v35;
          *((CGFloat *)v42 + 7) = v36;
          *((CGFloat *)v42 + 8) = v37;
          *((CGFloat *)v42 + 9) = v38;
          *((CGFloat *)v42 + 10) = v39;
        }
        while (v26 != v27);
        goto LABEL_36;
      }
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
  }
  else
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v26) {
      goto LABEL_22;
    }
  }
  uint64_t v125 = (void *)MEMORY[0x1E4FBC860];
LABEL_36:
  swift_bridgeObjectRelease_n();
  unint64_t v2 = v122;
LABEL_37:
  id v43 = objc_msgSend(v2, sel_nsfwAnnotations);
  if (!v43)
  {
    unsigned int v48 = 0;
    goto LABEL_55;
  }
  CGFloat v44 = v43;
  sub_1DCD95648(0, &qword_1EBE85068);
  unint64_t v45 = sub_1DD0486B8();

  if (v45 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1DD048CC8();
    if (v46)
    {
LABEL_40:
      if (v46 >= 1)
      {
        uint64_t v47 = 0;
        unsigned int v48 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if ((v45 & 0xC000000000000001) != 0) {
            id v49 = (id)MEMORY[0x1E01AE890](v47, v45);
          }
          else {
            id v49 = *(id *)(v45 + 8 * v47 + 32);
          }
          uint64_t v50 = v49;
          id v51 = objc_msgSend(v49, sel_label);
          uint64_t v52 = sub_1DD048408();
          uint64_t v54 = v53;

          objc_msgSend(v50, sel_confidence);
          int v56 = v55;
          objc_msgSend(v50, sel_normalizedBoundingBox);
          v140.origin.CGFloat x = 0.0;
          v140.origin.CGFloat y = 0.0;
          v140.size.CGFloat width = 1.0;
          v140.size.CGFloat height = 1.0;
          CGRect v133 = CGRectIntersection(v132, v140);
          CGFloat v57 = v133.origin.x;
          CGFloat v58 = v133.origin.y;
          CGFloat v59 = v133.size.width;
          CGFloat v60 = v133.size.height;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unsigned int v48 = sub_1DCE9F40C(0, v48[2] + 1, 1, v48, &qword_1EBE84908);
          }
          unint64_t v62 = v48[2];
          unint64_t v61 = v48[3];
          if (v62 >= v61 >> 1) {
            unsigned int v48 = sub_1DCE9F40C((void *)(v61 > 1), v62 + 1, 1, v48, &qword_1EBE84908);
          }
          ++v47;
          v48[2] = v62 + 1;
          uint64_t v63 = &v48[7 * v62];
          v63[4] = v52;
          v63[5] = v54;
          *((_DWORD *)v63 + 12) = v56;
          *((CGFloat *)v63 + 7) = v57;
          *((CGFloat *)v63 + 8) = v58;
          *((CGFloat *)v63 + 9) = v59;
          *((CGFloat *)v63 + 10) = v60;
        }
        while (v46 != v47);
        goto LABEL_54;
      }
LABEL_101:
      __break(1u);
      goto LABEL_102;
    }
  }
  else
  {
    uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v46) {
      goto LABEL_40;
    }
  }
  unsigned int v48 = (void *)MEMORY[0x1E4FBC860];
LABEL_54:
  swift_bridgeObjectRelease_n();
  unint64_t v2 = v122;
LABEL_55:
  id v64 = objc_msgSend(v2, sel_textBlockAnnotation);
  if (!v64)
  {
    BOOL v70 = 0;
    goto LABEL_73;
  }
  char v65 = v64;
  id v66 = objc_msgSend(v64, sel_textAnnotations);

  sub_1DCD95648(0, (unint64_t *)&qword_1EBE82C30);
  unint64_t v67 = sub_1DD0486B8();

  if (v67 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1DD048CC8();
    if (v68)
    {
LABEL_58:
      if (v68 >= 1)
      {
        uint64_t v69 = 0;
        BOOL v70 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          if ((v67 & 0xC000000000000001) != 0) {
            id v71 = (id)MEMORY[0x1E01AE890](v69, v67);
          }
          else {
            id v71 = *(id *)(v67 + 8 * v69 + 32);
          }
          uint64_t v72 = v71;
          id v73 = objc_msgSend(v71, sel_text);
          uint64_t v74 = sub_1DD048408();
          uint64_t v76 = v75;

          objc_msgSend(v72, sel_confidence);
          int v78 = v77;
          objc_msgSend(v72, sel_normalizedBoundingBox);
          v141.origin.CGFloat x = 0.0;
          v141.origin.CGFloat y = 0.0;
          v141.size.CGFloat width = 1.0;
          v141.size.CGFloat height = 1.0;
          CGRect v135 = CGRectIntersection(v134, v141);
          CGFloat v79 = v135.origin.x;
          CGFloat v80 = v135.origin.y;
          CGFloat v81 = v135.size.width;
          CGFloat v82 = v135.size.height;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v70 = sub_1DCE9F40C(0, v70[2] + 1, 1, v70, &qword_1EAB02730);
          }
          unint64_t v84 = v70[2];
          unint64_t v83 = v70[3];
          if (v84 >= v83 >> 1) {
            BOOL v70 = sub_1DCE9F40C((void *)(v83 > 1), v84 + 1, 1, v70, &qword_1EAB02730);
          }
          ++v69;
          v70[2] = v84 + 1;
          BOOL v85 = &v70[7 * v84];
          v85[4] = v74;
          v85[5] = v76;
          *((_DWORD *)v85 + 12) = v78;
          *((CGFloat *)v85 + 7) = v79;
          *((CGFloat *)v85 + 8) = v80;
          *((CGFloat *)v85 + 9) = v81;
          *((CGFloat *)v85 + 10) = v82;
        }
        while (v68 != v69);
        goto LABEL_72;
      }
LABEL_102:
      __break(1u);
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v68 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v68) {
      goto LABEL_58;
    }
  }
  BOOL v70 = (void *)MEMORY[0x1E4FBC860];
LABEL_72:
  swift_bridgeObjectRelease_n();
  unint64_t v2 = v122;
LABEL_73:
  id v86 = objc_msgSend(v2, sel_barcodeAnnotation);
  if (!v86)
  {
    unint64_t v92 = 0;
    goto LABEL_91;
  }
  uint64_t v87 = v86;
  id v88 = objc_msgSend(v86, sel_annotationItems);

  sub_1DCD95648(0, &qword_1EAB03C30);
  unint64_t v89 = sub_1DD0486B8();

  if (v89 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v90 = sub_1DD048CC8();
    if (v90)
    {
LABEL_76:
      if (v90 >= 1)
      {
        uint64_t v91 = 0;
        unint64_t v123 = v89 & 0xC000000000000001;
        unint64_t v92 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v124 = v90;
        unint64_t v93 = v89;
        do
        {
          if (v123) {
            id v94 = (id)MEMORY[0x1E01AE890](v91, v89);
          }
          else {
            id v94 = *(id *)(v89 + 8 * v91 + 32);
          }
          unint64_t v95 = v94;
          id v96 = objc_msgSend(v94, sel_symbology);
          sub_1DD048408();

          uint64_t v97 = sub_1DD0483D8();
          swift_bridgeObjectRelease();
          id v98 = objc_msgSend(v95, sel_payloadStringValue);
          uint64_t v99 = sub_1DD048408();
          uint64_t v101 = v100;

          objc_msgSend(v95, sel_confidence);
          int v103 = v102;
          objc_msgSend(v95, sel_normalizedBoundingBox);
          v142.origin.CGFloat x = 0.0;
          v142.origin.CGFloat y = 0.0;
          v142.size.CGFloat width = 1.0;
          v142.size.CGFloat height = 1.0;
          CGRect v137 = CGRectIntersection(v136, v142);
          CGFloat v104 = v137.origin.x;
          CGFloat v105 = v137.origin.y;
          CGFloat v106 = v137.size.width;
          CGFloat v107 = v137.size.height;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v92 = sub_1DCE9F2E8(0, v92[2] + 1, 1, v92);
          }
          unint64_t v109 = v92[2];
          unint64_t v108 = v92[3];
          if (v109 >= v108 >> 1) {
            unint64_t v92 = sub_1DCE9F2E8((void *)(v108 > 1), v109 + 1, 1, v92);
          }
          ++v91;
          uint64_t v92[2] = v109 + 1;
          unint64_t v110 = &v92[8 * v109];
          v110[4] = v97;
          v110[5] = v99;
          v110[6] = v101;
          *((_DWORD *)v110 + 14) = v103;
          *((CGFloat *)v110 + 8) = v104;
          *((CGFloat *)v110 + 9) = v105;
          *((CGFloat *)v110 + 10) = v106;
          *((CGFloat *)v110 + 11) = v107;
          unint64_t v89 = v93;
        }
        while (v124 != v91);
        goto LABEL_90;
      }
LABEL_103:
      __break(1u);
      goto LABEL_104;
    }
  }
  else
  {
    uint64_t v90 = *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v90) {
      goto LABEL_76;
    }
  }
  unint64_t v92 = (void *)MEMORY[0x1E4FBC860];
LABEL_90:
  swift_bridgeObjectRelease_n();
  unint64_t v2 = v122;
LABEL_91:
  id v111 = objc_msgSend(v2, sel_scenenetAnnotation);
  if (!v111)
  {
    uint64_t v115 = 0;
    unint64_t v117 = 0;
    goto LABEL_95;
  }
  uint64_t v112 = v111;
  id v113 = objc_msgSend(v111, sel_annotations);
  sub_1DCD95648(0, &qword_1EBE85068);
  unint64_t v114 = sub_1DD0486B8();

  uint64_t v115 = sub_1DCE9BD80(v114);
  swift_bridgeObjectRelease();
  unint64_t v116 = (unint64_t)objc_msgSend(v112, sel_revision);
  if ((v116 & 0x8000000000000000) != 0)
  {
LABEL_104:
    sub_1DD048C98();
    __break(1u);
    return;
  }
  unint64_t v117 = v116;

LABEL_95:
  id v118 = objc_msgSend(v2, sel_reducePersonOverTriggerAnnotation);
  if (v118)
  {
    long long v119 = v118;
    sub_1DCE9CF14(&v127);

    uint64_t v120 = v127;
  }
  else
  {
    uint64_t v120 = 0;
  }
  *a1 = v126;
  a1[1] = v125;
  a1[2] = v48;
  a1[3] = v70;
  a1[4] = v92;
  a1[5] = v115;
  a1[6] = v117;
  a1[7] = v120;
}

uint64_t sub_1DCE9CC3C@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_domainInfo);
  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85070);
  unint64_t v4 = sub_1DD0486B8();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DD048CC8();
    uint64_t v5 = result;
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  if (!v5)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
    objc_msgSend(v30, sel_regionOfInterest);
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    uint64_t v28 = type metadata accessor for VisualUnderstanding.ImageRegion();
    uint64_t result = sub_1DD046588();
    *(void *)a1 = v21;
    *(void *)(a1 + 8) = v23;
    *(void *)(a1 + 16) = v25;
    *(void *)(a1 + 24) = v27;
    *(unsigned char *)(a1 + 32) = 1;
    uint64_t v29 = MEMORY[0x1E4FBC860];
    *(void *)(a1 + 40) = MEMORY[0x1E4FBC860];
    *(void *)(a1 + 48) = v7;
    *(void *)(a1 + 56) = v29;
    *(void *)(a1 + 64) = v29;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(unsigned char *)(a1 + 104) = 0;
    *(void *)(a1 + 112) = v29;
    *(unsigned char *)(a1 + *(int *)(v28 + 64)) = 0;
    *(void *)(a1 + *(int *)(v28 + 68)) = v29;
    return result;
  }
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x1E01AE890](i, v4);
      }
      else {
        id v11 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v12 = v11;
      id v13 = objc_msgSend(v11, sel_domainKey);
      uint64_t v14 = sub_1DD048408();
      uint64_t v16 = v15;

      String.mappedVisualDomain.getter(v14, v16, v34);
      swift_bridgeObjectRelease();
      char v17 = v34[0];
      if (v34[0] != 26)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1DCE9D680(0, v7[2] + 1, 1, v7);
        }
        unint64_t v19 = v7[2];
        unint64_t v18 = v7[3];
        if (v19 >= v18 >> 1) {
          uint64_t v7 = sub_1DCE9D680((void *)(v18 > 1), v19 + 1, 1, v7);
        }
        void v7[2] = v19 + 1;
        uint64_t v9 = &v7[20 * v19];
        *((unsigned char *)v9 + 32) = v17;
        int v10 = *(_DWORD *)&v34[3];
        *(_DWORD *)((char *)v9 + 33) = *(_DWORD *)v34;
        *((_DWORD *)v9 + 9) = v10;
        *(_OWORD *)(v9 + 5) = 0u;
        *(_OWORD *)(v9 + 7) = 0u;
        *((unsigned char *)v9 + 72) = 0;
        *((_DWORD *)v9 + 19) = *(_DWORD *)&v33[3];
        *(_DWORD *)((char *)v9 + 73) = *(_DWORD *)v33;
        *((_OWORD *)v9 + 5) = 0u;
        *((_OWORD *)v9 + 6) = 0u;
        *((_OWORD *)v9 + 7) = 0u;
        *((_OWORD *)v9 + 8) = 0u;
        *((_OWORD *)v9 + 9) = 0u;
        *((_WORD *)v9 + 80) = 0;
        *((_WORD *)v9 + 83) = v32;
        *(_DWORD *)((char *)v9 + 162) = v31;
        v9[21] = 0;
        v9[22] = 0;
        *(void *)((char *)v9 + 181) = 0;
      }
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCE9CF14@<X0>(void *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_regions);
  sub_1DCD95648(0, &qword_1EBE82CC0);
  unint64_t v4 = sub_1DD0486B8();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v29 = a1;
    if (v5) {
      goto LABEL_3;
    }
LABEL_15:
    id v8 = (void *)MEMORY[0x1E4FBC860];
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease_n();
    *uint64_t v29 = v8;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1DD048CC8();
  uint64_t v5 = result;
  uint64_t v29 = a1;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    id v8 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1E01AE890](v7, v4);
      }
      else {
        id v9 = *(id *)(v4 + 8 * v7 + 32);
      }
      int v10 = v9;
      id v11 = objc_msgSend(v9, sel_label);
      uint64_t v12 = sub_1DD048408();
      uint64_t v14 = v13;

      objc_msgSend(v10, sel_confidence);
      int v16 = v15;
      unsigned int v17 = objc_msgSend(v10, sel_faceCount);
      objc_msgSend(v10, sel_boundingBox);
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      uint64_t v23 = v22;
      uint64_t v25 = v24;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v8 = sub_1DCE9F1BC(0, v8[2] + 1, 1, v8);
      }
      unint64_t v27 = v8[2];
      unint64_t v26 = v8[3];
      if (v27 >= v26 >> 1) {
        id v8 = sub_1DCE9F1BC((void *)(v26 > 1), v27 + 1, 1, v8);
      }
      ++v7;
      v8[2] = v27 + 1;
      uint64_t v28 = &v8[7 * v27];
      v28[4] = v12;
      v28[5] = v14;
      *((_DWORD *)v28 + 12) = v16;
      *((_DWORD *)v28 + 13) = v17;
      v28[7] = v19;
      v28[8] = v21;
      v28[9] = v23;
      v28[10] = v25;
    }
    while (v5 != v7);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCE9D160@<X0>(_OWORD *a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4 - 8);
  id v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(v1, sel_imageRegions, v6);
  sub_1DCD95648(0, (unint64_t *)&unk_1EBE85028);
  unint64_t v10 = sub_1DD0486B8();

  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_13;
  }
LABEL_3:
  *(void *)&long long v32 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DCFC49E8(0, v11 & ~(v11 >> 63), 0);
  if (v11 < 0)
  {
    __break(1u);
    return result;
  }
  id v30 = v2;
  int v31 = a1;
  uint64_t v13 = 0;
  uint64_t v14 = v32;
  do
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v15 = (id)MEMORY[0x1E01AE890](v13, v10);
    }
    else {
      id v15 = *(id *)(v10 + 8 * v13 + 32);
    }
    int v16 = v15;
    sub_1DCE9CC3C((uint64_t)v8);

    *(void *)&long long v32 = v14;
    unint64_t v18 = *(void *)(v14 + 16);
    unint64_t v17 = *(void *)(v14 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_1DCFC49E8(v17 > 1, v18 + 1, 1);
      uint64_t v14 = v32;
    }
    ++v13;
    *(void *)(v14 + 16) = v18 + 1;
    sub_1DCD36EE0((uint64_t)v8, v14+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v18);
  }
  while (v11 != v13);
  swift_bridgeObjectRelease();
  unint64_t v2 = v30;
  a1 = v31;
LABEL_14:
  id v19 = objc_msgSend(v2, sel_annotation, v30, v31);
  if (v19)
  {
    uint64_t v20 = v19;
    VIAnnotation.mappedAnnotation.getter(&v32);

    long long v21 = v32;
    long long v22 = v33;
    long long v23 = v34;
    long long v24 = v35;
  }
  else
  {
    long long v21 = xmmword_1DD059E70;
    long long v22 = 0uLL;
    long long v23 = 0uLL;
    long long v24 = 0uLL;
  }
  long long v32 = v21;
  long long v33 = v22;
  long long v34 = v23;
  long long v35 = v24;
  id v25 = objc_msgSend(v2, sel_payload);
  if (v25)
  {
    unint64_t v26 = v25;
    uint64_t v27 = sub_1DD0464E8();
    unint64_t v29 = v28;
  }
  else
  {
    uint64_t v27 = 0;
    unint64_t v29 = 0xF000000000000000;
  }
  return VisualUnderstanding.init(_:annotation:payload:)(v14, (uint64_t *)&v32, v27, v29, a1);
}

void *sub_1DCE9D43C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85508);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA10FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9D55C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A78);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA1008(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9D66C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9F030(a1, a2, a3, a4, &qword_1EBE85510, &qword_1EBE86868);
}

void *sub_1DCE9D680(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85188);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[20 * v8 + 4]) {
          memmove(v12, a4 + 4, 160 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA0F10(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCE9D7A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EBE85190, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
}

char *sub_1DCE9D7D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84910);
      unint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA0E28(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9D8D0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03C90);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA11F4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1DCE9D9E0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851F0);
      unint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32]) {
          memmove(v13, a4 + 32, 4 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA1300(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9DAF0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86A40);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA13EC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9DC18(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A88);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA18AC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9DD28(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85198);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA17B8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9DE38(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851A8);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA15D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9DF58(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82D78);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA16CC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9E068(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9E96C(a1, a2, a3, a4, &qword_1EBE851F8);
}

uint64_t sub_1DCE9E074(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EBE86A98, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold, type metadata accessor for Argos_Protos_Queryflow_ClassificationLabelThreshold);
}

uint64_t sub_1DCE9E0A8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1DD048C98();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  double v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1DCEA3004(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1DCE9E328(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851E0);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA0B44(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9E438(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9E460(a1, a2, a3, a4, &qword_1EBE86A60, &qword_1EBE85748);
}

void *sub_1DCE9E44C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9E460(a1, a2, a3, a4, &qword_1EBE86A70, &qword_1EBE85780);
}

void *sub_1DCE9E460(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      void v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA263C(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9E590(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A68);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA0C38(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9E6B8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A80);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA0D30(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCE9E7E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EBE86AD8, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResult);
}

void *sub_1DCE9E814(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCEA0910(a1, a2, a3, a4, (uint64_t *)&unk_1EBE851B8);
}

uint64_t sub_1DCE9E828(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EBE86AB8, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainPredictionNetResult.DomainResult);
}

uint64_t sub_1DCE9E85C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EBE86AC8, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion.DetectedResult);
}

uint64_t sub_1DCE9E890(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EBE86AD0, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorImageRegion);
}

uint64_t sub_1DCE9E8C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EBE86AB0, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult);
}

uint64_t sub_1DCE9E8F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EBE86AA0, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainSignals);
}

uint64_t sub_1DCE9E92C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EBE86AA8, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.DomainModelResult.ClassificationResult);
}

void *sub_1DCE9E960(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9E96C(a1, a2, a3, a4, &qword_1EBE86B00);
}

void *sub_1DCE9E96C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = (void *)MEMORY[0x1E4FBC860];
      size_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA1AAC(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9EA78(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9F40C(a1, a2, a3, a4, &qword_1EBE84908);
}

char *sub_1DCE9EA8C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1DCE9F55C(a1, a2, a3, a4, &qword_1EAB03C88);
}

void *sub_1DCE9EA98(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9E96C(a1, a2, a3, a4, &qword_1EBE853C0);
}

uint64_t sub_1DCE9EAA4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB025F0, MEMORY[0x1E4F89018], MEMORY[0x1E4F89018]);
}

uint64_t sub_1DCE9EAD8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB03C80, MEMORY[0x1E4F88D60], MEMORY[0x1E4F88D60]);
}

uint64_t sub_1DCE9EB0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB02780, MEMORY[0x1E4F894B8], MEMORY[0x1E4F894B8]);
}

uint64_t sub_1DCE9EB40(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB02788, MEMORY[0x1E4F89378], MEMORY[0x1E4F89378]);
}

void *sub_1DCE9EB74(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03AE0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA19A0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9EC84(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03CB8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA1C8C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCE9ED94(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB02660, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
}

void *sub_1DCE9EDC8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02728);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA1D80(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCE9EED8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB027A0, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
}

void *sub_1DCE9EF0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851E8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA1AAC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9F01C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9F030(a1, a2, a3, a4, &qword_1EBE86AF0, &qword_1EAB02EF8);
}

void *sub_1DCE9F030(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      void v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v16 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA2934(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9F14C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9F030(a1, a2, a3, a4, &qword_1EAB03C40, &qword_1EAB03B28);
}

void *sub_1DCE9F160(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9F030(a1, a2, a3, a4, &qword_1EAB027B8, &qword_1EBE86898);
}

void *sub_1DCE9F174(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9F030(a1, a2, a3, a4, &qword_1EAB03C48, &qword_1EBE84FF0);
}

uint64_t sub_1DCE9F188(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EBE851D8, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
}

void *sub_1DCE9F1BC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82CD8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA1F68(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9F2E8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03CF8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA1E74(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9F3F8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9F40C(a1, a2, a3, a4, &qword_1EAB02730);
}

void *sub_1DCE9F40C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v9 + 4]) {
          memmove(v13, a4 + 4, 56 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA1B98(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9F544(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9F674(a1, a2, a3, a4, (uint64_t *)&unk_1EBE82D58);
}

char *sub_1DCE9F550(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1DCE9F55C(a1, a2, a3, a4, &qword_1EAB03C38);
}

char *sub_1DCE9F55C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      uint64_t v10 = *((void *)a4 + 2);
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (char *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 29;
      }
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * (v13 >> 2);
      int64_t v14 = v11 + 32;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (char *)MEMORY[0x1E4FBC860];
      int64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 32]) {
          memmove(v14, a4 + 32, 4 * v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA1300(0, v9, v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9F668(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9F674(a1, a2, a3, a4, &qword_1EBE86A58);
}

void *sub_1DCE9F674(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      int64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x1E4FBC860];
      int64_t v14 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA2530(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9F780(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A90);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      int64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA14E4(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9F8A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03CE8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA2150(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9F9B4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03CF0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA2060(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCE9FADC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB03C60, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
}

void *sub_1DCE9FB10(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851B0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA2334(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9FC3C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02700);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA2060(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9FD64(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851A0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA2424(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9FE74(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB027C0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA1AAC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCE9FF84(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9F030(a1, a2, a3, a4, &qword_1EAB03CC0, &qword_1EBE85008);
}

void *sub_1DCE9FF98(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9F674(a1, a2, a3, a4, &qword_1EAB03C68);
}

uint64_t sub_1DCE9FFA4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB03C78, MEMORY[0x1E4F89B78], MEMORY[0x1E4F89B78]);
}

void *sub_1DCE9FFD8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCE9E460(a1, a2, a3, a4, &qword_1EBE851D0, &qword_1EBE84B30);
}

void *sub_1DCE9FFEC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03CE0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA2748(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCEA0114(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02790);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA2840(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCEA0224(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03C50);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA2A3C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCEA034C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03C58);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA2B34(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCEA0470(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB027B0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA223C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCEA0598(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03CC8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      id v10[2] = v8;
      double v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1DCEA2F10(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCEA06A8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB027A8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4]) {
          memmove(v12, a4 + 4, 96 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA2E18(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCEA07D0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03CD0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      id v10[2] = v8;
      double v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA2C2C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1DCEA08FC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1DCEA0910(a1, a2, a3, a4, &qword_1EAB03CD8);
}

void *sub_1DCEA0910(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
          memmove(v13, a4 + 4, 24 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v11 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1DCEA2D24(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCEA0A40(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB03C98, MEMORY[0x1E4F89A58], MEMORY[0x1E4F89A58]);
}

uint64_t sub_1DCEA0A74(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB03CA8, MEMORY[0x1E4F89998], MEMORY[0x1E4F89998]);
}

uint64_t sub_1DCEA0AA8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB03CA0, MEMORY[0x1E4F899A0], MEMORY[0x1E4F899A0]);
}

uint64_t sub_1DCEA0ADC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB03CB0, MEMORY[0x1E4F898A8], MEMORY[0x1E4F898A8]);
}

uint64_t sub_1DCEA0B10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1DCE9E0A8(a1, a2, a3, a4, &qword_1EAB03C70, MEMORY[0x1E4F88D88], MEMORY[0x1E4F88D88]);
}

uint64_t sub_1DCEA0B44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA0C38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA0D30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

char *sub_1DCEA0E28(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA0F10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 160 * a1 + 32;
    unint64_t v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA1008(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA10FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA11F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82C48);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

char *sub_1DCEA1300(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA13EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

char *sub_1DCEA14E4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 40 * a1 + 32);
    size_t v6 = 40 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA15D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

char *sub_1DCEA16CC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA17B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA18AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA19A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86B10);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

char *sub_1DCEA1AAC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA1B98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA1C8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA1D80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA1E74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA1F68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

char *sub_1DCEA2060(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 24 * a1 + 32);
    size_t v6 = 24 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1DD048D18();
  __break(1u);
  return result;
}

char *sub_1DCEA2150(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA223C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

char *sub_1DCEA2334(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 56 * a1 + 32);
    size_t v6 = 56 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA2424(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84A30);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA2530(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B58);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA263C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA2748(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA2840(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA2934(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA2A3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA2B34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA2C2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA2D24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA2E18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 96 * a1 + 32;
    unint64_t v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA2F10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA3004(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

void sub_1DCEA3160(uint64_t a1@<X8>)
{
  void (*v7)(long long *__return_ptr, long long *);
  unsigned char v8[48];
  long long v9[2];
  long long v10;
  uint64_t v11;

  id v3 = (os_unfair_lock_s *)(*(void *)(v1 + 56) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_1DCE76E50(v1 + 80, (uint64_t)&v10);
  if (!v11)
  {
    sub_1DCEA3D44((uint64_t)&v10);
    sub_1DCD3A3BC(v1 + 16, (uint64_t)&v10);
    swift_beginAccess();
    uint64_t v4 = *(void *)(v1 + 64);
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v6 = v4 + 40;
      do
      {
        unint64_t v7 = *(void (**)(long long *__return_ptr, long long *))(v6 - 8);
        swift_retain();
        v7(v9, &v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
        sub_1DCD3A4DC(v9, (uint64_t)&v10);
        swift_release();
        v6 += 16;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease_n();
    }
    sub_1DCD3A3BC((uint64_t)&v10, (uint64_t)v9);
    sub_1DCD3A420((uint64_t)v9, (uint64_t)v8);
    swift_beginAccess();
    sub_1DCEA3CDC((uint64_t)v8, v1 + 80);
    swift_endAccess();
  }
  sub_1DCD3A4DC(&v10, a1);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1DCEA3310()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 56) + 16);
  os_unfair_lock_lock(v1);
  unint64_t v2 = *(void **)(v0 + 72);
  if (v2)
  {
    id v3 = v2;
    swift_willThrow();
    os_unfair_lock_unlock(v1);
  }
  else
  {
    os_unfair_lock_unlock(v1);
    sub_1DCEA3160((uint64_t)v7);
    uint64_t v4 = v8;
    uint64_t v5 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t v0 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v0;
}

void sub_1DCEA33D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v2 + 56) + 16);
  os_unfair_lock_lock(v5);
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_beginAccess();
  sub_1DCEA3CDC((uint64_t)v12, v2 + 80);
  swift_endAccess();
  uint64_t v6 = (void *)(v2 + 64);
  swift_beginAccess();
  unint64_t v7 = *(void **)(v2 + 64);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 64) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v7 = sub_1DCE9F668(0, v7[2] + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    unint64_t v7 = sub_1DCE9F668((void *)(v9 > 1), v10 + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  void v7[2] = v10 + 1;
  uint64_t v11 = &v7[2 * v10];
  v11[4] = a1;
  v11[5] = a2;
  swift_endAccess();
  os_unfair_lock_unlock(v5);
}

void sub_1DCEA3508(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_1DD048068();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)v33 - v8;
  sub_1DCDB40EC((uint64_t)v33 - v8);
  sub_1DCDB4300((uint64_t)v6);
  unint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v9, v3);
  sub_1DCD3A3BC((uint64_t)a1, (uint64_t)v38);
  uint64_t v11 = sub_1DD048048();
  os_log_type_t v12 = sub_1DD048848();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = v3;
    int64_t v14 = v13;
    CGFloat v36 = a1;
    *(_DWORD *)uint64_t v13 = 67109120;
    v33[1] = v13 + 4;
    long long v34 = v10;
    uint64_t v15 = v39;
    uint64_t v16 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    uint64_t v17 = v15;
    unint64_t v10 = v34;
    int v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v17, v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    LODWORD(v38[0]) = v18;
    a1 = v36;
    sub_1DD048A28();
    _os_log_impl(&dword_1DCCF9000, v11, v12, "ImageContentLazy original.orientation: %u", v14, 8u);
    size_t v19 = v14;
    uint64_t v3 = v35;
    MEMORY[0x1E01B07E0](v19, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }

  v10(v6, v3);
  strcpy((char *)v41, "ImageHandling");
  v41[7] = -4864;
  CGFloat v42 = "Lazy input rotation";
  uint64_t v43 = 19;
  char v44 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  sub_1DCEA469C((uint64_t)v41, 0);
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  uint64_t v22 = v45;
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
  if (v22)
  {
    swift_release();
  }
  else
  {
    long long v24 = (void *)v23;
    uint64_t v25 = a1[3];
    uint64_t v26 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v25);
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    id v28 = v24;
    int v29 = v27(v25, v26);
    id v30 = sub_1DCDC9FC8(v29);

    int v31 = v30;
    sub_1DCEA3DA4();

    swift_release();
    uint64_t v32 = v37;
    *(void *)(v37 + 24) = &type metadata for PixelImage;
    *(void *)(v32 + 32) = &off_1F3838208;
    *(void *)uint64_t v32 = v31;
    *(_DWORD *)(v32 + 8) = 1;
  }
}

void sub_1DCEA389C(void *a1@<X0>, double a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  strcpy((char *)v25, "ImageHandling");
  v25[7] = -4864;
  uint64_t v26 = "Lazy input resize";
  uint64_t v27 = 17;
  char v28 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  sub_1DCEA469C((uint64_t)v25, 0);
  if (a3) {
    goto LABEL_8;
  }
  double v9 = a2;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  double v12 = (*(double (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  double v16 = v15 >= v12 ? v12 : v15;
  if (v16 <= v9)
  {
LABEL_8:
    sub_1DCD3A3BC((uint64_t)a1, a4);
  }
  else
  {
    uint64_t v17 = a1[3];
    uint64_t v18 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    size_t v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
    if (!v4)
    {
      id v20 = v19;
      uint64_t v21 = (void *)sub_1DCDB5F90(v9);

      id v22 = v21;
      sub_1DCEA3DA4();
      uint64_t v23 = a1[3];
      uint64_t v24 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v23);
      LODWORD(v20) = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);

      swift_release();
      *(void *)(a4 + 24) = &type metadata for PixelImage;
      *(void *)(a4 + 32) = &off_1F3838208;
      *(void *)a4 = v22;
      *(_DWORD *)(a4 + 8) = v20;
      return;
    }
  }
  swift_release();
}

uint64_t sub_1DCEA3AD4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();

  sub_1DCEA3D44(v0 + 80);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageContentLazy()
{
  return self;
}

uint64_t sub_1DCEA3B50()
{
  sub_1DCEA3160((uint64_t)v4);
  uint64_t v0 = v5;
  uint64_t v1 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2;
}

double sub_1DCEA3BC8()
{
  sub_1DCEA3160((uint64_t)v4);
  uint64_t v0 = v5;
  uint64_t v1 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  double v2 = (*(double (**)(uint64_t, uint64_t))(v1 + 16))(v0, v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2;
}

uint64_t sub_1DCEA3C50()
{
  return sub_1DCEA3310();
}

uint64_t sub_1DCEA3C74@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  sub_1DCEA33D4((uint64_t)sub_1DCEA3508, 0);
  a2[3] = type metadata accessor for ImageContentLazy();
  a2[4] = a1;
  *a2 = v5;
  return swift_retain();
}

uint64_t sub_1DCEA3CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCEA3D44(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85740);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCEA3DA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84EA8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DD048038();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DD048068();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  double v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v0 + OBJC_IVAR____TtC18VisualIntelligence19DurationMeasurement_timestamp;
  sub_1DD046528();
  double v15 = v14 * -1000.0;
  double v16 = &unk_1EBE85000;
  if (v14 * -1000.0 < 0.0)
  {
    sub_1DCDB40EC((uint64_t)v12);
    swift_retain_n();
    uint64_t v17 = sub_1DD048048();
    os_log_type_t v18 = sub_1DD048858();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v45 = v6;
      uint64_t v20 = v19;
      uint64_t v42 = swift_slowAlloc();
      v46[0] = v42;
      *(_DWORD *)uint64_t v20 = 134218242;
      uint64_t v47 = *(void *)&v15;
      uint64_t v43 = (void *)v5;
      sub_1DD048A28();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v41 = v20 + 14;
      uint64_t v21 = sub_1DD048BB8();
      char v44 = v8;
      uint64_t v47 = sub_1DCED7FA0(v21, v22, v46);
      uint64_t v5 = (uint64_t)v43;
      sub_1DD048A28();
      swift_release_n();
      uint64_t v8 = v44;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v17, v18, "Invalid duration value %f of %s", (uint8_t *)v20, 0x16u);
      uint64_t v41 = v9;
      uint64_t v23 = v4;
      uint64_t v24 = v42;
      swift_arrayDestroy();
      uint64_t v25 = v24;
      uint64_t v4 = v23;
      MEMORY[0x1E01B07E0](v25, -1, -1);
      uint64_t v26 = v20;
      uint64_t v6 = v45;
      MEMORY[0x1E01B07E0](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v41);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    goto LABEL_13;
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v28 = Strong;
    uint64_t v29 = sub_1DD048BB8();
    uint64_t v31 = v30;
    sub_1DD046538();
    double v33 = v32 * 1000.0;
    if ((~COERCE__INT64(v32 * 1000.0) & 0x7FF0000000000000) != 0)
    {
      if (v33 > -1.0)
      {
        if (v33 < 1.84467441e19)
        {
          uint64_t v45 = v6;
          uint64_t v43 = (void *)(v28 + 16);
          swift_beginAccess();
          double v16 = *(void **)(v28 + 16);
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v28 + 16) = v16;
          char v44 = v8;
          uint64_t v13 = v29;
          uint64_t v6 = v5;
          if (isUniquelyReferenced_nonNull_native)
          {
LABEL_9:
            unint64_t v36 = v16[2];
            unint64_t v35 = v16[3];
            if (v36 >= v35 >> 1)
            {
              double v16 = sub_1DCE9D55C((void *)(v35 > 1), v36 + 1, 1, v16);
              *uint64_t v43 = v16;
            }
            void v16[2] = v36 + 1;
            uint64_t v37 = (double *)&v16[4 * v36];
            *((void *)v37 + 4) = v13;
            *((void *)v37 + 5) = v31;
            v37[6] = v15;
            *((void *)v37 + 7) = (unint64_t)v33;
            swift_endAccess();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v5 = v6;
            uint64_t v8 = v44;
            uint64_t v6 = v45;
            goto LABEL_13;
          }
LABEL_19:
          double v16 = sub_1DCE9D55C(0, v16[2] + 1, 1, v16);
          *uint64_t v43 = v16;
          goto LABEL_9;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
LABEL_13:
  uint64_t v38 = *(void *)(v1 + 16);
  sub_1DD048978();
  sub_1DCEA4AB8(v38 + OBJC_IVAR____TtC18VisualIntelligence13SignpostEvent_signpostID, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_1DCE8C6E8((uint64_t)v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  sub_1DD048018();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DCEA433C()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC18VisualIntelligence19DurationMeasurement_timestamp;
  uint64_t v2 = sub_1DD046568();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCEA4408()
{
  return type metadata accessor for DurationMeasurement();
}

uint64_t type metadata accessor for DurationMeasurement()
{
  uint64_t result = qword_1EBE84B20;
  if (!qword_1EBE84B20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCEA445C()
{
  uint64_t result = sub_1DD046568();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t initializeWithCopy for MeasurementDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MeasurementDescription(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for MeasurementDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeasurementDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MeasurementDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MeasurementDescription()
{
  return &type metadata for MeasurementDescription;
}

uint64_t sub_1DCEA469C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = a2;
  uint64_t v5 = sub_1DD046568();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v30 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84EA8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DD048038();
  uint64_t v29 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v28 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_weakInit();
  uint64_t v13 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v14 = v2 + OBJC_IVAR____TtC18VisualIntelligence19DurationMeasurement_measurementDescription;
  long long v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 16) = v15;
  *(unsigned char *)(v14 + 32) = *(unsigned char *)(a1 + 32);
  type metadata accessor for SignpostEvent();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = qword_1EBE857A0;
  uint64_t v18 = swift_bridgeObjectRetain_n();
  if (v17 != -1) {
    uint64_t v18 = swift_once();
  }
  uint64_t v19 = qword_1EBE85798;
  MEMORY[0x1F4188790](v18);
  *(void *)&v27[-4] = v13;
  *(void *)&v27[-2] = v12;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v19 + 24));
  sub_1DCEA4A9C((uint64_t *)(v19 + 16), &v34);
  os_unfair_lock_unlock((os_unfair_lock_t)(v19 + 24));
  uint64_t v20 = v34;
  swift_release();
  sub_1DCD64B4C(a1);
  *(void *)(v16 + OBJC_IVAR____TtC18VisualIntelligence13SignpostEvent_osLog) = v20;
  uint64_t v21 = v16 + OBJC_IVAR____TtC18VisualIntelligence13SignpostEvent_signpostID;
  id v22 = v20;
  sub_1DD048028();
  uint64_t v23 = v29;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v21, 0, 1, v10);
  *(void *)(v3 + 16) = v16;
  v27[3] = *(unsigned __int8 *)(a1 + 32);
  swift_retain();
  sub_1DD048988();
  sub_1DCEA4AB8(v16 + OBJC_IVAR____TtC18VisualIntelligence13SignpostEvent_signpostID, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v10) == 1)
  {
    sub_1DCE8C6E8((uint64_t)v9);
  }
  else
  {
    uint64_t v24 = v28;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v28, v9, v10);
    sub_1DD048018();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v10);
  }
  sub_1DCD64B4C(a1);
  swift_release();
  uint64_t v25 = v30;
  sub_1DD046558();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v3 + OBJC_IVAR____TtC18VisualIntelligence19DurationMeasurement_timestamp, v25, v32);
  swift_weakAssign();
  return v3;
}

uint64_t sub_1DCEA4A9C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1DCE7CD00(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1DCEA4AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84EA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCEA4B20()
{
  v21[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1DD048068();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_latestTaxonomyIdentifier);
  sub_1DD048408();

  v21[0] = 0;
  id v6 = objc_allocWithZone(MEMORY[0x1E4F8CD60]);
  uint64_t v7 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithIdentifier_error_, v7, v21);

  uint64_t v9 = (void *)v21[0];
  *(void *)(v0 + 16) = v8;
  if (v9)
  {
    id v10 = v9;
    swift_release();
    sub_1DCDB40EC((uint64_t)v4);
    id v11 = v10;
    uint64_t v12 = sub_1DD048048();
    os_log_type_t v13 = sub_1DD048858();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v20[0] = v1;
      uint64_t v16 = v15;
      v21[0] = v15;
      *(_DWORD *)uint64_t v14 = 136446210;
      uint64_t v17 = sub_1DCDC4434();
      v20[1] = sub_1DCED7FA0(v17, v18, v21);
      sub_1DD048A28();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v12, v13, "Failed to initialize VISceneTaxonomy: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v16, -1, -1);
      MEMORY[0x1E01B07E0](v14, -1, -1);

      (*(void (**)(char *, void))(v2 + 8))(v4, v20[0]);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }

    return 0;
  }
  return v0;
}

uint64_t sub_1DCEA4E04()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VISceneTaxonomy()
{
  return self;
}

uint64_t getEnumTagSinglePayload for MLModelRole(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MLModelRole(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCEA4FBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLModelRole()
{
  return &type metadata for MLModelRole;
}

unint64_t sub_1DCEA4FF8()
{
  unint64_t result = qword_1EAB03D00;
  if (!qword_1EAB03D00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EAB03D08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03D00);
  }
  return result;
}

unint64_t sub_1DCEA5054(char a1)
{
  unint64_t result = 0x65447463656A626FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x64656966696E75;
      break;
    case 3:
      unint64_t result = 0x6F7765727574616ELL;
      break;
    case 4:
      unint64_t result = 0x6C657261707061;
      break;
    case 5:
      unint64_t result = 1685024614;
      break;
    case 6:
      unint64_t result = 0x626D79536E676973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCEA5150(unsigned __int8 *a1, char *a2)
{
  return sub_1DCFB288C(*a1, *a2);
}

uint64_t sub_1DCEA515C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCEA523C();
  *a1 = result;
  return result;
}

unint64_t sub_1DCEA518C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DCEA5054(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1DCEA51B8()
{
  return sub_1DCFD8970();
}

uint64_t sub_1DCEA51C4()
{
  return sub_1DCFD86C0();
}

uint64_t sub_1DCEA51CC()
{
  return sub_1DCFD8970();
}

void sub_1DCEA51D4(void *a1@<X8>)
{
  *a1 = &unk_1F38346D0;
}

unint64_t sub_1DCEA51E8()
{
  unint64_t result = qword_1EBE84A00;
  if (!qword_1EBE84A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84A00);
  }
  return result;
}

uint64_t sub_1DCEA523C()
{
  unint64_t v0 = sub_1DD048D38();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

__n128 __swift_memcpy36_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for RefinedRegion(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 36)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RefinedRegion(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 36) = v3;
  return result;
}

ValueMetadata *type metadata accessor for RefinedRegion()
{
  return &type metadata for RefinedRegion;
}

uint64_t sub_1DCEA5300(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s5ErrorOwxx(uint64_t a1)
{
  return sub_1DCEA5328(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1DCEA5328(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1DCEA5300(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s5ErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1DCEA5300(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1DCEA5328(v6, v7, v8);
  return a1;
}

uint64_t _s5ErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1DCEA5328(v4, v5, v6);
  return a1;
}

uint64_t _s5ErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s5ErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DCEA54B8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1DCEA54D0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s5ErrorOMa()
{
  return &_s5ErrorON;
}

unint64_t sub_1DCEA54FC(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3)
  {
    sub_1DD048B98();
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD000000000000017;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    sub_1DD048B98();
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD000000000000022;
LABEL_5:
    unint64_t v6 = v4;
    sub_1DD048548();
    return v6;
  }
  unint64_t result = 0x617461446F6ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x646465626D456F6ELL;
      break;
    case 2:
      unint64_t result = 0x656873696C627570;
      break;
    case 3:
      unint64_t result = 0xD000000000000027;
      break;
    case 4:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DCEA568C()
{
  return sub_1DCEA54FC(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1DCEA5698()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  strcpy((char *)v5, "NetworkError.");
  sub_1DCEA54FC(v1, v2, v3);
  sub_1DD048548();
  swift_bridgeObjectRelease();
  return v5[0];
}

uint64_t sub_1DCEA5704()
{
  sub_1DCEA57CC(v0 + OBJC_IVAR____TtC18VisualIntelligence23RegionGroupingProcessor_config);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCEA5778()
{
  return type metadata accessor for RegionGroupingProcessor();
}

uint64_t type metadata accessor for RegionGroupingProcessor()
{
  uint64_t result = qword_1EBE85A70;
  if (!qword_1EBE85A70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCEA57CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1DCEA5828(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v3 = (void *)sub_1DCD742D8(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1DCEA7020(v5);
  *a1 = v3;
}

void sub_1DCEA58D0(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X4>, void *a5@<X5>, uint64_t a6@<X6>, CGFloat *a7@<X8>)
{
  id v107 = a5;
  uint64_t v13 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v104 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13 - 8);
  int v102 = (double *)((char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84BF0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v105 = (uint64_t)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  CGFloat v106 = (char *)&v91 - v18;
  uint64_t v108 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
  uint64_t v96 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v20 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v91 - v22;
  uint64_t v24 = sub_1DD048068();
  uint64_t v101 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v97 = (uint64_t)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  MEMORY[0x1F4188790](v27);
  uint64_t v98 = (uint64_t)&v91 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v32 = (char *)&v91 - v31;
  if (!*(void *)(a3 + 16)) {
    goto LABEL_58;
  }
  uint64_t v94 = a1;
  uint64_t v92 = v30;
  uint64_t v95 = a2;
  uint64_t v109 = *a4;
  *(void *)&long long v114 = a3;
  swift_bridgeObjectRetain_n();
  sub_1DCEA5828((void **)&v114);
  swift_bridgeObjectRelease();
  uint64_t v33 = v114;
  char v34 = *(unsigned char *)(a6 + 12);
  uint64_t v100 = a6;
  uint64_t v35 = (uint64_t)v106;
  uint64_t v99 = a7;
  uint64_t v103 = v114;
  if (v34)
  {
    if (!*(void *)(v114 + 16))
    {
LABEL_61:
      __break(1u);
      swift_release();
      __break(1u);
      return;
    }
    uint64_t v36 = *(void *)(v114
                    + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80))
                    + 56);
    uint64_t v37 = *(void *)(v36 + 16);
    if (!v37)
    {
      swift_release();
LABEL_10:
      sub_1DCDB40EC((uint64_t)v32);
      uint64_t v42 = v98;
      sub_1DCDB4300(v98);
      uint64_t v43 = *(void (**)(char *, uint64_t))(v101 + 8);
      v43(v32, v24);
      char v44 = sub_1DD048048();
      os_log_type_t v45 = sub_1DD048848();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl(&dword_1DCCF9000, v44, v45, "Largest box is not screenshot, do not refine the search region.", v46, 2u);
        MEMORY[0x1E01B07E0](v46, -1, -1);
      }

      v43((char *)v42, v24);
      goto LABEL_58;
    }
    uint64_t v93 = v24;
    swift_bridgeObjectRetain();
    uint64_t v38 = (uint64_t *)(v36 + 96);
    while (1)
    {
      uint64_t v40 = *(v38 - 1);
      uint64_t v39 = *v38;
      long long v41 = *(_OWORD *)(v38 - 3);
      uint64_t v118 = v109;
      long long v114 = v41;
      uint64_t v115 = v40;
      uint64_t v116 = v39;
      uint64_t v110 = 0;
      unint64_t v111 = 0xE000000000000000;
      uint64_t v112 = 0x34393538303251;
      unint64_t v113 = 0xE700000000000000;
      if (sub_1DCDACA6C((uint64_t *)&v114, &v110)) {
        break;
      }
      v38 += 10;
      if (!--v37)
      {
        swift_release();
        swift_bridgeObjectRelease();
        a7 = v99;
        uint64_t v24 = v93;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    a7 = v99;
    a6 = v100;
    uint64_t v33 = v103;
    uint64_t v24 = v93;
    uint64_t v35 = (uint64_t)v106;
  }
  float v119 = *(float *)(a6 + 8);
  if (!v107)
  {
    if (!v94) {
      goto LABEL_38;
    }
    uint64_t v93 = v24;
    int v48 = 0;
    goto LABEL_19;
  }
  id v47 = objc_msgSend(v107, sel_imageType);
  int v48 = v47 == (id)1;
  if (v94)
  {
    uint64_t v93 = v24;
LABEL_19:
    uint64_t v49 = v95;
    uint64_t v50 = *(void *)(v95 + 16);
    if (v50)
    {
      LODWORD(v98) = v48;
      id v107 = (id)(a6 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0) + 40));
      id v51 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
      swift_bridgeObjectRetain();
      uint64_t v52 = (float *)(v49 + 48);
      while (1)
      {
        uint64_t v54 = *((void *)v52 - 2);
        uint64_t v55 = *((void *)v52 - 1);
        float v56 = *v52;
        sub_1DCD2889C((uint64_t)v107, v35, &qword_1EBE84BF0);
        CGFloat v57 = *v51;
        if ((*v51)(v35, 1, v108) == 1)
        {
          *(void *)uint64_t v23 = 0;
          *((void *)v23 + 1) = 0xE000000000000000;
          *((_DWORD *)v23 + 4) = 0;
          swift_bridgeObjectRetain();
          sub_1DD047BE8();
          sub_1DCD2479C(v35, &qword_1EBE84BF0);
        }
        else
        {
          sub_1DCEA8AD4(v35, (uint64_t)v23, type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold);
          swift_bridgeObjectRetain();
        }
        uint64_t v58 = *(void *)v23;
        uint64_t v59 = *((void *)v23 + 1);
        swift_bridgeObjectRetain();
        sub_1DCEA84A0((uint64_t)v23, type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold);
        if (v58 == v54 && v59 == v55)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v60 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if ((v60 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v35 = (uint64_t)v106;
            goto LABEL_23;
          }
        }
        uint64_t v61 = v105;
        sub_1DCD2889C((uint64_t)v107, v105, &qword_1EBE84BF0);
        unsigned int v62 = v57(v61, 1, v108);
        uint64_t v35 = (uint64_t)v106;
        if (v62 == 1)
        {
          *(void *)uint64_t v20 = 0;
          *((void *)v20 + 1) = 0xE000000000000000;
          *((_DWORD *)v20 + 4) = 0;
          sub_1DD047BE8();
          sub_1DCD2479C(v61, &qword_1EBE84BF0);
        }
        else
        {
          sub_1DCEA8AD4(v61, (uint64_t)v20, type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold);
        }
        float v53 = *((float *)v20 + 4);
        sub_1DCEA84A0((uint64_t)v20, type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold);
        swift_bridgeObjectRelease();
        if (v53 < v56)
        {
          swift_bridgeObjectRelease();
          a7 = v99;
          a6 = v100;
          uint64_t v33 = v103;
          uint64_t v24 = v93;
          goto LABEL_54;
        }
LABEL_23:
        v52 += 6;
        if (!--v50)
        {
          swift_bridgeObjectRelease();
          a7 = v99;
          a6 = v100;
          uint64_t v33 = v103;
          LOBYTE(v48) = v98;
          break;
        }
      }
    }
    uint64_t v24 = v93;
    if (v48) {
      goto LABEL_54;
    }
LABEL_38:
    uint64_t v63 = *(void *)(v33 + 16);
    if (v63) {
      goto LABEL_39;
    }
    goto LABEL_57;
  }
  if (v47 != (id)1) {
    goto LABEL_38;
  }
LABEL_54:
  float v84 = *(float *)(a6 + 4);
  float v119 = v84;
  uint64_t v85 = v92;
  sub_1DCDB40EC(v92);
  uint64_t v86 = v97;
  sub_1DCDB4300(v97);
  uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
  v87(v85, v24);
  id v88 = sub_1DD048048();
  os_log_type_t v89 = sub_1DD048848();
  if (os_log_type_enabled(v88, v89))
  {
    uint64_t v90 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v90 = 134217984;
    *(double *)&long long v114 = v84;
    sub_1DD048A28();
    _os_log_impl(&dword_1DCCF9000, v88, v89, "Use low threshold for screenshot: %f", v90, 0xCu);
    MEMORY[0x1E01B07E0](v90, -1, -1);
  }

  v87(v86, v24);
  a6 = v100;
  uint64_t v63 = *(void *)(v33 + 16);
  if (!v63)
  {
LABEL_57:
    swift_release();
LABEL_58:
    *((_DWORD *)a7 + 8) = 0;
    *(_OWORD *)a7 = 0u;
    *((_OWORD *)a7 + 1) = 0u;
    *((unsigned char *)a7 + 36) = 1;
    return;
  }
LABEL_39:
  unint64_t v64 = 0;
  id v65 = (id)(v33 + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80)));
  id v66 = v102;
  uint64_t v108 = v63;
  id v107 = v65;
  while (1)
  {
    if (v64 >= *(void *)(v103 + 16))
    {
      __break(1u);
      goto LABEL_61;
    }
    sub_1DCD36E7C((uint64_t)v65 + *(void *)(v104 + 72) * v64, (uint64_t)v66);
    uint64_t v67 = *((void *)v66 + 7);
    uint64_t v68 = *(void *)(v67 + 16);
    if (v68) {
      break;
    }
LABEL_41:
    ++v64;
    sub_1DCEA84A0((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if (v64 == v63)
    {
      swift_release();
      a7 = v99;
      goto LABEL_58;
    }
  }
  CGFloat v69 = *v66;
  CGFloat v70 = v66[1];
  CGFloat v71 = v66[2];
  CGFloat v72 = v66[3];
  double v73 = *(float *)(a6 + 16);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  uint64_t v74 = (float *)(v67 + 104);
  while (1)
  {
    float v75 = *v74;
    uint64_t v76 = *((void *)v74 - 2);
    uint64_t v77 = *((void *)v74 - 4);
    uint64_t v78 = *((void *)v74 - 3);
    uint64_t v116 = *((void *)v74 - 1);
    uint64_t v117 = v109;
    *(void *)&long long v114 = v77;
    *((void *)&v114 + 1) = v78;
    uint64_t v115 = v76;
    uint64_t v110 = 0;
    unint64_t v111 = 0xE000000000000000;
    uint64_t v112 = 0x34393538303251;
    unint64_t v113 = 0xE700000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v79 = sub_1DCDACA6C((uint64_t *)&v114, &v110);
    v120.origin.CGFloat x = v69;
    v120.origin.CGFloat y = v70;
    v120.size.CGFloat width = v71;
    v120.size.CGFloat height = v72;
    double Height = CGRectGetHeight(v120);
    v121.origin.CGFloat x = v69;
    v121.origin.CGFloat y = v70;
    v121.size.CGFloat width = v71;
    v121.size.CGFloat height = v72;
    double Width = CGRectGetWidth(v121);
    if ((v79 & 1) != 0 && Height * Width > v73 && v119 < v75) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v74 += 20;
    if (!--v68)
    {
      swift_bridgeObjectRelease();
      a6 = v100;
      id v66 = v102;
      uint64_t v63 = v108;
      id v65 = v107;
      goto LABEL_41;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_1DCEA84A0((uint64_t)v102, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v83 = v99;
  *uint64_t v99 = v69;
  v83[1] = v70;
  v83[2] = v71;
  v83[3] = v72;
  *((float *)v83 + 8) = v75;
  *((unsigned char *)v83 + 36) = 0;
}

uint64_t sub_1DCEA64A8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84C08);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v89 = (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig(0);
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v87 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v85 = (uint64_t)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v86 = (uint64_t)&v79 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v79 - v13;
  uint64_t v15 = v2 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_refineRegionConfig;
  uint64_t v91 = *(unsigned int *)(v2 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_refineRegionConfig);
  sub_1DCDB40EC((uint64_t)&v79 - v13);
  uint64_t v16 = sub_1DD048048();
  os_log_type_t v17 = sub_1DD048848();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 67109120;
    LODWORD(v99.origin.x) = v91;
    sub_1DD048A28();
    _os_log_impl(&dword_1DCCF9000, v16, v17, "RefinedRegion version: %u", v18, 8u);
    MEMORY[0x1E01B07E0](v18, -1, -1);
  }

  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v19 = v8 + 8;
  uint64_t v20 = v21;
  v21((uint64_t)v14, v7);
  objc_msgSend(a1, sel_regionOfInterest);
  v106.origin.CGFloat x = 0.0;
  v106.origin.CGFloat y = 0.0;
  v106.size.CGFloat width = 1.0;
  v106.size.CGFloat height = 1.0;
  CGRect v103 = CGRectIntersection(v102, v106);
  CGFloat x = v103.origin.x;
  CGFloat y = v103.origin.y;
  CGFloat width = v103.size.width;
  CGFloat height = v103.size.height;
  uint64_t v26 = sub_1DCD95648(0, qword_1EBE82D80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82D20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD04E910;
  *(void *)(inited + 32) = sub_1DD048408();
  *(void *)(inited + 40) = v28;
  objc_msgSend(a1, sel_imageType);
  uint64_t v29 = sub_1DD048808();
  *(void *)(inited + 72) = sub_1DCD95648(0, (unint64_t *)&qword_1EBE850A0);
  *(void *)(inited + 48) = v29;
  sub_1DCDB7C48(inited);
  uint64_t v30 = v92;
  id v31 = sub_1DCEA6F2C();
  uint64_t v92 = v30;
  if (!v30)
  {
    CGFloat v80 = v20;
    id v84 = v31;
    uint64_t v83 = v19;
    uint64_t v32 = *(void *)(v2 + 88);
    swift_retain();
    id v33 = objc_msgSend(a1, sel_image);
    swift_getObjectType();
    sub_1DCE9BF6C((uint64_t *)&v99);
    swift_unknownObjectRelease();
    CGFloat v93 = x;
    CGFloat v94 = y;
    CGFloat v95 = width;
    CGFloat v96 = height;
    uint64_t v34 = *(void *)(*(void *)(v32 + 16) + 24);
    swift_retain();
    id v79 = a1;
    uint64_t v35 = sub_1DCFAC268((uint64_t)&v99, &v93, v34, (uint64_t)objc_msgSend(a1, sel_preferredMetalDevice), 0);
    uint64_t v81 = v36;
    uint64_t v82 = v37;
    uint64_t v39 = v38;
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v99);
    CGFloat v93 = *(double *)(v2 + 24);
    uint64_t v40 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
    uint64_t v41 = v89;
    sub_1DCD2889C(v15 + *(int *)(v40 + 28), v89, (uint64_t *)&unk_1EBE84C08);
    uint64_t v42 = v90;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v41, 1, v90) == 1)
    {
      uint64_t v43 = v87;
      *uint64_t v87 = 0;
      *((_DWORD *)v43 + 4) = 0;
      *(void *)(v43 + 4) = 0;
      v43[12] = 0;
      swift_bridgeObjectRetain();
      id v44 = v84;
      id v45 = v84;
      uint64_t v46 = v43;
      sub_1DD047BE8();
      uint64_t v47 = *(int *)(v42 + 40);
      id v48 = v44;
      uint64_t v49 = &v43[v47];
      uint64_t v50 = type metadata accessor for Argos_Protos_Queryflow_RefineConfig.CoarseClassificationThreshold(0);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 1, 1, v50);
      sub_1DCD2479C(v41, (uint64_t *)&unk_1EBE84C08);
    }
    else
    {
      uint64_t v46 = v87;
      sub_1DCEA8AD4(v41, (uint64_t)v87, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
      swift_bridgeObjectRetain();
      id v48 = v84;
      id v51 = v84;
    }
    uint64_t v52 = v82;
    sub_1DCEA58D0(v82, v39, v35, (uint64_t *)&v93, v48, (uint64_t)v46, &v99.origin.x);

    sub_1DCEA84A0((uint64_t)v46, type metadata accessor for Argos_Protos_Queryflow_RefineConfig);
    swift_bridgeObjectRelease();
    if (v101)
    {
      char v53 = sub_1DCEA8500(v35, v48);
      sub_1DCD781D0(v81, v52);
      swift_bridgeObjectRelease();
      if ((v53 & 1) == 0)
      {
        uint64_t v73 = v85;
        sub_1DCDB40EC(v85);
        uint64_t v74 = sub_1DD048048();
        os_log_type_t v75 = sub_1DD048848();
        if (os_log_type_enabled(v74, v75))
        {
          uint64_t v76 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v76 = 0;
          _os_log_impl(&dword_1DCCF9000, v74, v75, "No detected refined region.", v76, 2u);
          MEMORY[0x1E01B07E0](v76, -1, -1);
        }

        v80(v73, v7);
        id v77 = objc_allocWithZone((Class)VIRefineRegionResult);
        sub_1DCD95648(0, &qword_1EAB03D10);
        CGFloat v71 = (void *)sub_1DD0486A8();
        id v72 = objc_msgSend(v77, sel_initWithRefinedRegions_version_, v71, v91);
        goto LABEL_18;
      }
      objc_msgSend(v79, sel_regionOfInterest);
      v107.origin.CGFloat x = 0.0;
      v107.origin.CGFloat y = 0.0;
      v107.size.CGFloat width = 1.0;
      v107.size.CGFloat height = 1.0;
      CGRect v105 = CGRectIntersection(v104, v107);
      double v54 = v105.origin.x;
      double v55 = v105.origin.y;
      double v56 = v105.size.width;
      double v57 = v105.size.height;
      CGRect v99 = v105;
      *(float *)&int v100 = 1.0;
      float v58 = 1.0;
      char v101 = 0;
    }
    else
    {
      float v58 = *(float *)&v100;
      double v56 = v99.size.width;
      double v57 = v99.size.height;
      double v54 = v99.origin.x;
      double v55 = v99.origin.y;
      sub_1DCD781D0(v81, v52);
      swift_bridgeObjectRelease();
    }
    uint64_t v59 = v86;
    sub_1DCDB40EC(v86);
    char v60 = sub_1DD048048();
    os_log_type_t v61 = sub_1DD048848();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = v59;
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      uint64_t v98 = v64;
      *(_DWORD *)uint64_t v63 = 136315138;
      CGFloat v93 = v54;
      CGFloat v94 = v55;
      CGFloat v95 = v56;
      CGFloat v96 = v57;
      float v97 = v58;
      uint64_t v65 = sub_1DD048498();
      uint64_t v90 = v7;
      CGFloat v93 = COERCE_DOUBLE(sub_1DCED7FA0(v65, v66, &v98));
      id v48 = v84;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v60, v61, "Refined region: %s", v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v64, -1, -1);
      MEMORY[0x1E01B07E0](v63, -1, -1);

      v80(v62, v90);
    }
    else
    {

      v80(v59, v7);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_1DD050EE0;
    id v68 = objc_allocWithZone((Class)VIRefinedRegion);
    *(float *)&double v69 = v58;
    *(void *)(v67 + 32) = objc_msgSend(v68, sel_initWithRegionOfInterest_confidence_, v54, v55, v56, v57, v69);
    CGFloat v93 = *(double *)&v67;
    sub_1DD0486D8();
    id v70 = objc_allocWithZone((Class)VIRefineRegionResult);
    sub_1DCD95648(0, &qword_1EAB03D10);
    CGFloat v71 = (void *)sub_1DD0486A8();
    swift_bridgeObjectRelease();
    id v72 = objc_msgSend(v70, sel_initWithRefinedRegions_version_, v71, v91);
LABEL_18:
    uint64_t v26 = (uint64_t)v72;
  }
  return v26;
}

id sub_1DCEA6F2C()
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)sub_1DD0482C8();
  swift_bridgeObjectRelease();
  v5[0] = 0;
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_contextWithDictionary_error_, v0, v5);

  if (v1)
  {
    id v2 = v5[0];
  }
  else
  {
    id v3 = v5[0];
    sub_1DD046378();

    swift_willThrow();
  }
  return v1;
}

void sub_1DCEA7020(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v161 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v159 = *(void *)(v161 - 8);
  MEMORY[0x1F4188790](v161);
  uint64_t v156 = (uint64_t)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v167 = (uint64_t)&v151 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v165 = (uint64_t)&v151 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v164 = (uint64_t)&v151 - v10;
  uint64_t v11 = a1[1];
  uint64_t v12 = sub_1DD048F68();
  if (v12 < v11)
  {
    if (v11 >= 0) {
      uint64_t v13 = v11;
    }
    else {
      uint64_t v13 = v11 + 1;
    }
    if (v11 >= -1)
    {
      uint64_t v14 = v12;
      if (v11 < 2)
      {
        uint64_t v18 = MEMORY[0x1E4FBC860];
        unint64_t v158 = MEMORY[0x1E4FBC860]
             + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80));
        if (v11 != 1)
        {
          unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
          uint64_t v160 = MEMORY[0x1E4FBC860];
          if (v21 < 2) {
            goto LABEL_118;
          }
          goto LABEL_106;
        }
        uint64_t v153 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v15 = v13 >> 1;
        uint64_t v16 = sub_1DD0486F8();
        *(void *)(v16 + 16) = v15;
        uint64_t v17 = *(unsigned __int8 *)(v159 + 80);
        uint64_t v153 = v16;
        unint64_t v158 = v16 + ((v17 + 32) & ~v17);
      }
      uint64_t v19 = 0;
      uint64_t v20 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v166 = a1;
      uint64_t v154 = v14;
      while (1)
      {
        uint64_t v22 = v19;
        uint64_t v23 = v19 + 1;
        if (v19 + 1 >= v11)
        {
          ++v19;
        }
        else
        {
          uint64_t v24 = *a1;
          uint64_t v25 = *(void *)(v159 + 72);
          uint64_t v26 = *a1 + v25 * v23;
          uint64_t v27 = v164;
          sub_1DCD36E7C(v26, v164);
          uint64_t v163 = v11;
          uint64_t v28 = v165;
          sub_1DCD36E7C(v24 + v25 * v19, v165);
          CGFloat v29 = *(double *)v27;
          CGFloat v30 = *(double *)(v27 + 8);
          CGFloat v31 = *(double *)(v27 + 16);
          CGFloat v32 = *(double *)(v27 + 24);
          v169.origin.CGFloat x = *(CGFloat *)v27;
          v169.origin.CGFloat y = v30;
          v169.size.CGFloat width = v31;
          v169.size.CGFloat height = v32;
          double Height = CGRectGetHeight(v169);
          v170.origin.CGFloat x = v29;
          v170.origin.CGFloat y = v30;
          v170.size.CGFloat width = v31;
          v170.size.CGFloat height = v32;
          double v34 = Height * CGRectGetWidth(v170);
          CGFloat v35 = *(double *)v28;
          CGFloat v36 = *(double *)(v28 + 8);
          CGFloat v37 = *(double *)(v28 + 16);
          CGFloat v38 = *(double *)(v28 + 24);
          v171.origin.CGFloat x = *(CGFloat *)v28;
          v171.origin.CGFloat y = v36;
          v171.size.CGFloat width = v37;
          v171.size.CGFloat height = v38;
          double v39 = CGRectGetHeight(v171);
          v172.origin.CGFloat x = v35;
          v172.origin.CGFloat y = v36;
          v172.size.CGFloat width = v37;
          v172.size.CGFloat height = v38;
          double v40 = v39 * CGRectGetWidth(v172);
          uint64_t v41 = v28;
          uint64_t v11 = v163;
          sub_1DCEA84A0(v41, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCEA84A0(v27, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v157 = v19;
          v19 += 2;
          uint64_t v155 = v24;
          uint64_t v168 = v25;
          if (v19 >= v11)
          {
LABEL_22:
            a1 = v166;
            uint64_t v14 = v154;
          }
          else
          {
            uint64_t v162 = v25 * v23;
            uint64_t v160 = v25 * v19;
            while (1)
            {
              uint64_t v42 = v19;
              uint64_t v43 = v164;
              sub_1DCD36E7C(v24 + v160, v164);
              uint64_t v44 = v165;
              sub_1DCD36E7C(v24 + v162, v165);
              CGFloat v45 = *(double *)v43;
              CGFloat v46 = *(double *)(v43 + 8);
              CGFloat v47 = *(double *)(v43 + 16);
              CGFloat v48 = *(double *)(v43 + 24);
              v173.origin.CGFloat x = *(CGFloat *)v43;
              v173.origin.CGFloat y = v46;
              v173.size.CGFloat width = v47;
              v173.size.CGFloat height = v48;
              double v49 = CGRectGetHeight(v173);
              v174.origin.CGFloat x = v45;
              v174.origin.CGFloat y = v46;
              v174.size.CGFloat width = v47;
              v174.size.CGFloat height = v48;
              double v50 = v49 * CGRectGetWidth(v174);
              CGFloat v51 = *(double *)v44;
              CGFloat v52 = *(double *)(v44 + 8);
              CGFloat v53 = *(double *)(v44 + 16);
              CGFloat v54 = *(double *)(v44 + 24);
              v175.origin.CGFloat x = *(CGFloat *)v44;
              v175.origin.CGFloat y = v52;
              v175.size.CGFloat width = v53;
              v175.size.CGFloat height = v54;
              double v55 = CGRectGetHeight(v175);
              v176.origin.CGFloat x = v51;
              v176.origin.CGFloat y = v52;
              v176.size.CGFloat width = v53;
              v176.size.CGFloat height = v54;
              BOOL v56 = v55 * CGRectGetWidth(v176) >= v50;
              sub_1DCEA84A0(v44, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              sub_1DCEA84A0(v43, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
              if (v40 < v34 == v56) {
                break;
              }
              uint64_t v19 = v42 + 1;
              v24 += v168;
              uint64_t v11 = v163;
              if (v163 == v42 + 1)
              {
                uint64_t v19 = v163;
                goto LABEL_22;
              }
            }
            a1 = v166;
            uint64_t v19 = v42;
            uint64_t v14 = v154;
            uint64_t v11 = v163;
          }
          uint64_t v22 = v157;
          if (v40 < v34)
          {
            if (v19 < v157) {
              goto LABEL_142;
            }
            if (v157 < v19)
            {
              uint64_t v160 = (uint64_t)v20;
              uint64_t v152 = v2;
              uint64_t v57 = 0;
              uint64_t v58 = v168;
              uint64_t v59 = v168 * (v19 - 1);
              uint64_t v60 = v19 * v168;
              uint64_t v61 = v157;
              uint64_t v62 = v157 * v168;
              do
              {
                if (v61 != v19 + v57 - 1)
                {
                  uint64_t v63 = v155;
                  if (!v155) {
                    goto LABEL_147;
                  }
                  unint64_t v64 = v155 + v62;
                  uint64_t v65 = v155 + v59;
                  sub_1DCEA8AD4(v155 + v62, v156, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  if (v62 < v59 || v64 >= v63 + v60)
                  {
                    swift_arrayInitWithTakeFrontToBack();
                    uint64_t v58 = v168;
                  }
                  else
                  {
                    uint64_t v58 = v168;
                    if (v62 != v59) {
                      swift_arrayInitWithTakeBackToFront();
                    }
                  }
                  sub_1DCEA8AD4(v156, v65, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  a1 = v166;
                }
                ++v61;
                --v57;
                v59 -= v58;
                v60 -= v58;
                v62 += v58;
              }
              while (v61 < v19 + v57);
              uint64_t v2 = v152;
              uint64_t v20 = (char *)v160;
              uint64_t v14 = v154;
              uint64_t v22 = v157;
              uint64_t v11 = v163;
            }
          }
        }
        if (v19 < v11)
        {
          if (__OFSUB__(v19, v22)) {
            goto LABEL_140;
          }
          if (v19 - v22 < v14)
          {
            if (__OFADD__(v22, v14)) {
              goto LABEL_143;
            }
            if (v22 + v14 >= v11) {
              uint64_t v66 = v11;
            }
            else {
              uint64_t v66 = v22 + v14;
            }
            if (v66 < v22)
            {
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
              break;
            }
            if (v19 != v66)
            {
              uint64_t v157 = v22;
              uint64_t v160 = (uint64_t)v20;
              uint64_t v152 = v2;
              uint64_t v67 = *(void *)(v159 + 72);
              uint64_t v168 = v67 * (v19 - 1);
              uint64_t v162 = v67;
              uint64_t v68 = v19 * v67;
              uint64_t v155 = v66;
              do
              {
                uint64_t v70 = 0;
                uint64_t v71 = v157;
                uint64_t v163 = v19;
                while (1)
                {
                  uint64_t v72 = *a1;
                  uint64_t v73 = v68;
                  uint64_t v74 = v68 + v70 + *a1;
                  os_log_type_t v75 = a1;
                  uint64_t v76 = v164;
                  sub_1DCD36E7C(v74, v164);
                  uint64_t v77 = v165;
                  sub_1DCD36E7C(v168 + v70 + v72, v165);
                  CGFloat v78 = *(double *)v76;
                  CGFloat v79 = *(double *)(v76 + 8);
                  CGFloat v80 = *(double *)(v76 + 16);
                  CGFloat v81 = *(double *)(v76 + 24);
                  v177.origin.CGFloat x = *(CGFloat *)v76;
                  v177.origin.CGFloat y = v79;
                  v177.size.CGFloat width = v80;
                  v177.size.CGFloat height = v81;
                  double v82 = CGRectGetHeight(v177);
                  v178.origin.CGFloat x = v78;
                  v178.origin.CGFloat y = v79;
                  v178.size.CGFloat width = v80;
                  v178.size.CGFloat height = v81;
                  double v83 = v82 * CGRectGetWidth(v178);
                  CGFloat v84 = *(double *)v77;
                  CGFloat v85 = *(double *)(v77 + 8);
                  CGFloat v86 = *(double *)(v77 + 16);
                  CGFloat v87 = *(double *)(v77 + 24);
                  v179.origin.CGFloat x = *(CGFloat *)v77;
                  v179.origin.CGFloat y = v85;
                  v179.size.CGFloat width = v86;
                  v179.size.CGFloat height = v87;
                  double v88 = CGRectGetHeight(v179);
                  v180.origin.CGFloat x = v84;
                  v180.origin.CGFloat y = v85;
                  v180.size.CGFloat width = v86;
                  v180.size.CGFloat height = v87;
                  double v89 = v88 * CGRectGetWidth(v180);
                  sub_1DCEA84A0(v77, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  sub_1DCEA84A0(v76, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  if (v89 >= v83) {
                    break;
                  }
                  uint64_t v90 = *v75;
                  if (!*v75) {
                    goto LABEL_145;
                  }
                  uint64_t v68 = v73;
                  uint64_t v91 = v90 + v168 + v70;
                  sub_1DCEA8AD4(v90 + v73 + v70, v167, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  swift_arrayInitWithTakeFrontToBack();
                  sub_1DCEA8AD4(v167, v91, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                  uint64_t v69 = v163;
                  v70 -= v162;
                  ++v71;
                  a1 = v166;
                  if (v163 == v71) {
                    goto LABEL_50;
                  }
                }
                uint64_t v69 = v163;
                a1 = v75;
                uint64_t v68 = v73;
LABEL_50:
                uint64_t v19 = v69 + 1;
                v168 += v162;
                v68 += v162;
              }
              while (v19 != v155);
              uint64_t v19 = v155;
              uint64_t v2 = v152;
              uint64_t v20 = (char *)v160;
              uint64_t v22 = v157;
            }
          }
        }
        if (v19 < v22) {
          goto LABEL_135;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = sub_1DCD71FDC(0, *((void *)v20 + 2) + 1, 1, v20);
        }
        unint64_t v93 = *((void *)v20 + 2);
        unint64_t v92 = *((void *)v20 + 3);
        unint64_t v21 = v93 + 1;
        if (v93 >= v92 >> 1) {
          uint64_t v20 = sub_1DCD71FDC((char *)(v92 > 1), v93 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v21;
        CGFloat v94 = v20 + 32;
        CGFloat v95 = &v20[16 * v93 + 32];
        *(void *)CGFloat v95 = v22;
        *((void *)v95 + 1) = v19;
        uint64_t v160 = (uint64_t)v20;
        if (v93)
        {
          while (1)
          {
            unint64_t v96 = v21 - 1;
            if (v21 >= 4)
            {
              char v101 = &v94[16 * v21];
              uint64_t v102 = *((void *)v101 - 8);
              uint64_t v103 = *((void *)v101 - 7);
              BOOL v107 = __OFSUB__(v103, v102);
              uint64_t v104 = v103 - v102;
              if (v107) {
                goto LABEL_124;
              }
              uint64_t v106 = *((void *)v101 - 6);
              uint64_t v105 = *((void *)v101 - 5);
              BOOL v107 = __OFSUB__(v105, v106);
              uint64_t v99 = v105 - v106;
              char v100 = v107;
              if (v107) {
                goto LABEL_125;
              }
              unint64_t v108 = v21 - 2;
              uint64_t v109 = &v94[16 * v21 - 32];
              uint64_t v111 = *(void *)v109;
              uint64_t v110 = *((void *)v109 + 1);
              BOOL v107 = __OFSUB__(v110, v111);
              uint64_t v112 = v110 - v111;
              if (v107) {
                goto LABEL_127;
              }
              BOOL v107 = __OFADD__(v99, v112);
              uint64_t v113 = v99 + v112;
              if (v107) {
                goto LABEL_130;
              }
              if (v113 >= v104)
              {
                CGRect v131 = &v94[16 * v96];
                uint64_t v133 = *(void *)v131;
                uint64_t v132 = *((void *)v131 + 1);
                BOOL v107 = __OFSUB__(v132, v133);
                uint64_t v134 = v132 - v133;
                if (v107) {
                  goto LABEL_134;
                }
                BOOL v124 = v99 < v134;
                goto LABEL_94;
              }
            }
            else
            {
              if (v21 != 3)
              {
                uint64_t v125 = *((void *)v20 + 4);
                uint64_t v126 = *((void *)v20 + 5);
                BOOL v107 = __OFSUB__(v126, v125);
                uint64_t v118 = v126 - v125;
                char v119 = v107;
                goto LABEL_88;
              }
              uint64_t v98 = *((void *)v20 + 4);
              uint64_t v97 = *((void *)v20 + 5);
              BOOL v107 = __OFSUB__(v97, v98);
              uint64_t v99 = v97 - v98;
              char v100 = v107;
            }
            if (v100) {
              goto LABEL_126;
            }
            unint64_t v108 = v21 - 2;
            long long v114 = &v94[16 * v21 - 32];
            uint64_t v116 = *(void *)v114;
            uint64_t v115 = *((void *)v114 + 1);
            BOOL v117 = __OFSUB__(v115, v116);
            uint64_t v118 = v115 - v116;
            char v119 = v117;
            if (v117) {
              goto LABEL_129;
            }
            CGRect v120 = &v94[16 * v96];
            uint64_t v122 = *(void *)v120;
            uint64_t v121 = *((void *)v120 + 1);
            BOOL v107 = __OFSUB__(v121, v122);
            uint64_t v123 = v121 - v122;
            if (v107) {
              goto LABEL_132;
            }
            if (__OFADD__(v118, v123)) {
              goto LABEL_133;
            }
            if (v118 + v123 >= v99)
            {
              BOOL v124 = v99 < v123;
LABEL_94:
              if (v124) {
                unint64_t v96 = v108;
              }
              goto LABEL_96;
            }
LABEL_88:
            if (v119) {
              goto LABEL_128;
            }
            uint64_t v127 = &v94[16 * v96];
            uint64_t v129 = *(void *)v127;
            uint64_t v128 = *((void *)v127 + 1);
            BOOL v107 = __OFSUB__(v128, v129);
            uint64_t v130 = v128 - v129;
            if (v107) {
              goto LABEL_131;
            }
            if (v130 < v118) {
              goto LABEL_15;
            }
LABEL_96:
            unint64_t v135 = v96 - 1;
            if (v96 - 1 >= v21)
            {
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
              goto LABEL_144;
            }
            uint64_t v136 = *a1;
            if (!*a1) {
              goto LABEL_146;
            }
            CGRect v137 = &v94[16 * v135];
            uint64_t v138 = *(void *)v137;
            CGRect v139 = &v94[16 * v96];
            uint64_t v140 = *((void *)v139 + 1);
            sub_1DCEA7F18(v136 + *(void *)(v159 + 72) * *(void *)v137, v136 + *(void *)(v159 + 72) * *(void *)v139, v136 + *(void *)(v159 + 72) * v140, v158);
            if (v2)
            {
              uint64_t v18 = v153;
              goto LABEL_118;
            }
            if (v140 < v138) {
              goto LABEL_121;
            }
            uint64_t v141 = v160;
            if (v96 > *(void *)(v160 + 16)) {
              goto LABEL_122;
            }
            *(void *)CGRect v137 = v138;
            *(void *)&v94[16 * v135 + 8] = v140;
            unint64_t v142 = *(void *)(v141 + 16);
            if (v96 >= v142) {
              goto LABEL_123;
            }
            uint64_t v20 = (char *)v141;
            unint64_t v21 = v142 - 1;
            memmove(&v94[16 * v96], v139 + 16, 16 * (v142 - 1 - v96));
            *((void *)v20 + 2) = v142 - 1;
            a1 = v166;
            if (v142 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v21 = 1;
LABEL_15:
        uint64_t v11 = a1[1];
        uint64_t v14 = v154;
        if (v19 >= v11)
        {
          uint64_t v18 = v153;
          if (v21 < 2)
          {
LABEL_118:
            swift_bridgeObjectRelease();
            *(void *)(v18 + 16) = 0;
            swift_bridgeObjectRelease();
            return;
          }
LABEL_106:
          uint64_t v143 = *a1;
          while (1)
          {
            unint64_t v144 = v21 - 2;
            if (v21 < 2) {
              goto LABEL_136;
            }
            if (!v143) {
              goto LABEL_148;
            }
            uint64_t v145 = *(void *)(v160 + 32 + 16 * v144);
            uint64_t v146 = *(void *)(v160 + 32 + 16 * (v21 - 1) + 8);
            sub_1DCEA7F18(v143 + *(void *)(v159 + 72) * v145, v143 + *(void *)(v159 + 72) * *(void *)(v160 + 32 + 16 * (v21 - 1)), v143 + *(void *)(v159 + 72) * v146, v158);
            if (v2) {
              goto LABEL_118;
            }
            if (v146 < v145) {
              goto LABEL_137;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v160 = (uint64_t)sub_1DCD729EC(v160);
            }
            uint64_t v147 = v160;
            if (v144 >= *(void *)(v160 + 16)) {
              goto LABEL_138;
            }
            uint64_t v148 = (char *)(v160 + 32);
            uint64_t v149 = (char *)(v160 + 32 + 16 * v144);
            *(void *)uint64_t v149 = v145;
            *((void *)v149 + 1) = v146;
            unint64_t v150 = *(void *)(v147 + 16);
            if (v21 > v150) {
              goto LABEL_139;
            }
            memmove(&v148[16 * v21 - 16], &v148[16 * v21], 16 * (v150 - v21));
            *(void *)(v147 + 16) = v150 - 1;
            unint64_t v21 = v150 - 1;
            if (v150 <= 2) {
              goto LABEL_118;
            }
          }
        }
      }
    }
    sub_1DD048C98();
    __break(1u);
    return;
  }
  if (v11 < 0) {
    goto LABEL_141;
  }
  if (v11) {
    sub_1DCEA7C08(0, v11, 1, a1);
  }
}

void sub_1DCEA7C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v35 = a1;
  uint64_t v36 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v36);
  uint64_t v39 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (double *)((char *)&v33 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (double *)((char *)&v33 - v13);
  uint64_t v38 = a3;
  uint64_t v34 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v41 = v15 * (v38 - 1);
    uint64_t v37 = v15;
    uint64_t v40 = v15 * v38;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v35;
    while (1)
    {
      uint64_t v18 = *a4;
      sub_1DCD36E7C(v40 + v16 + *a4, (uint64_t)v14);
      sub_1DCD36E7C(v41 + v16 + v18, (uint64_t)v10);
      CGFloat v19 = *v14;
      CGFloat v20 = v14[1];
      CGFloat v21 = v14[2];
      CGFloat v22 = v14[3];
      v42.origin.CGFloat x = *v14;
      v42.origin.CGFloat y = v20;
      v42.size.CGFloat width = v21;
      v42.size.CGFloat height = v22;
      double Height = CGRectGetHeight(v42);
      v43.origin.CGFloat x = v19;
      v43.origin.CGFloat y = v20;
      v43.size.CGFloat width = v21;
      v43.size.CGFloat height = v22;
      double v24 = Height * CGRectGetWidth(v43);
      CGFloat v25 = *v10;
      CGFloat v26 = v10[1];
      CGFloat v27 = v10[2];
      CGFloat v28 = v10[3];
      v44.origin.CGFloat x = *v10;
      v44.origin.CGFloat y = v26;
      v44.size.CGFloat width = v27;
      v44.size.CGFloat height = v28;
      double v29 = CGRectGetHeight(v44);
      v45.origin.CGFloat x = v25;
      v45.origin.CGFloat y = v26;
      v45.size.CGFloat width = v27;
      v45.size.CGFloat height = v28;
      double v30 = v29 * CGRectGetWidth(v45);
      sub_1DCEA84A0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCEA84A0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v30 >= v24)
      {
LABEL_4:
        v41 += v37;
        v40 += v37;
        if (++v38 == v34) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v31 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v32 = v31 + v41 + v16;
      sub_1DCEA8AD4(v31 + v40 + v16, v39, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_arrayInitWithTakeFrontToBack();
      sub_1DCEA8AD4(v39, v32, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      v16 -= v37;
      if (v38 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DCEA7F18(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v57 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v57);
  uint64_t v9 = (double *)((char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (double *)((char *)&v55 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_60;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_61;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v37 = a4 + v19;
      unint64_t v58 = a4 + v19;
      unint64_t v60 = a2;
      unint64_t v56 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v39 = a3 - v14;
          sub_1DCD36E7C(v37 - v14, (uint64_t)v12);
          unint64_t v40 = a2 - v14;
          sub_1DCD36E7C(a2 - v14, (uint64_t)v9);
          CGFloat v41 = *v12;
          CGFloat v42 = v12[1];
          CGFloat v43 = v12[2];
          CGFloat v44 = v12[3];
          v65.origin.CGFloat x = *v12;
          v65.origin.CGFloat y = v42;
          v65.size.CGFloat width = v43;
          v65.size.CGFloat height = v44;
          double Height = CGRectGetHeight(v65);
          v66.origin.CGFloat x = v41;
          v66.origin.CGFloat y = v42;
          v66.size.CGFloat width = v43;
          v66.size.CGFloat height = v44;
          double v46 = Height * CGRectGetWidth(v66);
          CGFloat v47 = *v9;
          CGFloat v48 = v9[1];
          CGFloat v49 = v9[2];
          CGFloat v50 = v9[3];
          v67.origin.CGFloat x = *v9;
          v67.origin.CGFloat y = v48;
          v67.size.CGFloat width = v49;
          v67.size.CGFloat height = v50;
          double v51 = CGRectGetHeight(v67);
          v68.origin.CGFloat x = v47;
          v68.origin.CGFloat y = v48;
          v68.size.CGFloat width = v49;
          v68.size.CGFloat height = v50;
          double v52 = v51 * CGRectGetWidth(v68);
          sub_1DCEA84A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCEA84A0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v52 >= v46)
          {
            unint64_t v53 = v58;
            v58 -= v14;
            if (a3 < v53 || v39 >= v53)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v53)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v40 = a2;
          }
          else
          {
            if (a3 < a2 || v39 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v60 -= v14;
          }
          unint64_t v37 = v58;
          if (v58 <= a4) {
            break;
          }
          a2 = v40;
          a3 -= v14;
        }
        while (v40 > v56);
      }
      goto LABEL_58;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v58 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1DCD36E7C(a2, (uint64_t)v12);
        sub_1DCD36E7C(a4, (uint64_t)v9);
        CGFloat v22 = *v12;
        CGFloat v23 = v12[1];
        CGFloat v24 = v12[2];
        CGFloat v25 = v12[3];
        v61.origin.CGFloat x = *v12;
        v61.origin.CGFloat y = v23;
        v61.size.CGFloat width = v24;
        v61.size.CGFloat height = v25;
        double v26 = CGRectGetHeight(v61);
        v62.origin.CGFloat x = v22;
        v62.origin.CGFloat y = v23;
        v62.size.CGFloat width = v24;
        v62.size.CGFloat height = v25;
        double v27 = v26 * CGRectGetWidth(v62);
        CGFloat v28 = *v9;
        CGFloat v29 = v9[1];
        CGFloat v30 = v9[2];
        CGFloat v31 = v9[3];
        v63.origin.CGFloat x = *v9;
        v63.origin.CGFloat y = v29;
        v63.size.CGFloat width = v30;
        v63.size.CGFloat height = v31;
        double v32 = CGRectGetHeight(v63);
        v64.origin.CGFloat x = v28;
        v64.origin.CGFloat y = v29;
        v64.size.CGFloat width = v30;
        v64.size.CGFloat height = v31;
        double v33 = v32 * CGRectGetWidth(v64);
        sub_1DCEA84A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCEA84A0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v34 = v60;
        if (v33 >= v27)
        {
          unint64_t v36 = v59 + v14;
          if (v60 < v59 || v60 >= v36)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v60 != v59)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v59 = v36;
          unint64_t v35 = a2;
        }
        else
        {
          unint64_t v35 = a2 + v14;
          if (v60 < a2 || v60 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v60 == a2)
          {
            unint64_t v34 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v60 = v34 + v14;
        a4 = v59;
        if (v59 >= v20) {
          break;
        }
        a2 = v35;
      }
      while (v35 < a3);
    }
LABEL_58:
    sub_1DCD720D8(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_62:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEA84A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCEA8500(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v46 - v10;
  uint64_t v12 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v55 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a2, sel_imageType, v14) != (id)1)
  {
    sub_1DCDB40EC((uint64_t)v8);
    CGFloat v42 = sub_1DD048048();
    os_log_type_t v43 = sub_1DD048848();
    if (os_log_type_enabled(v42, v43))
    {
      CGFloat v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)CGFloat v44 = 0;
      _os_log_impl(&dword_1DCCF9000, v42, v43, "Do not fallback for non-screenshot images", v44, 2u);
      MEMORY[0x1E01B07E0](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  double v52 = *(uint8_t **)(a1 + 16);
  if (!v52) {
    return 0;
  }
  CGFloat v50 = v11;
  uint64_t v47 = v6;
  uint64_t v48 = v5;
  uint64_t v51 = v2;
  uint64_t v57 = v2 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_refineRegionConfig;
  uint64_t v54 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v53 = *(void *)(v13 + 72);
  uint64_t v49 = a1;
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  while (1)
  {
    unint64_t v56 = v16;
    uint64_t v17 = v54 + v53 * (void)v16;
    uint64_t v18 = v55;
    sub_1DCD36E7C(v17, v55);
    uint64_t v19 = *(void *)(v18 + 56);
    swift_bridgeObjectRetain();
    sub_1DCEA84A0(v18, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20) {
      break;
    }
LABEL_4:
    uint64_t v16 = v56 + 1;
    swift_bridgeObjectRelease();
    if (v16 == v52)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v21 = 0;
  uint64_t v22 = *(void *)(v51 + 24);
  while (1)
  {
    uint64_t v23 = *(void *)(v19 + v21 + 32);
    uint64_t v24 = *(void *)(v19 + v21 + 40);
    uint64_t v25 = *(void *)(v19 + v21 + 48);
    uint64_t v26 = *(void *)(v19 + v21 + 56);
    uint64_t v27 = *(void *)(v19 + v21 + 64);
    uint64_t v28 = *(void *)(v19 + v21 + 72);
    uint64_t v29 = *(void *)(v19 + v21 + 80);
    uint64_t v30 = *(void *)(v19 + v21 + 88);
    uint64_t v31 = *(void *)(v19 + v21 + 96);
    float v32 = *(float *)(v19 + v21 + 104);
    uint64_t v58 = v28;
    uint64_t v59 = v29;
    uint64_t v60 = v30;
    uint64_t v61 = v31;
    v68[0] = 0;
    v68[1] = 0xE000000000000000;
    v68[2] = 0x34393538303251;
    v68[3] = 0xE700000000000000;
    _OWORD v68[4] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_1DCDACA6C(&v58, v68) & 1) == 0 && *(float *)(v57 + 4) < v32) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 += 80;
    if (!--v20) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = (uint64_t)v50;
  sub_1DCDB40EC((uint64_t)v50);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v34 = sub_1DD048048();
  os_log_type_t v35 = sub_1DD048848();
  if (os_log_type_enabled(v34, v35))
  {
    unint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v57 = v37;
    *(_DWORD *)unint64_t v36 = 136315138;
    v68[0] = v37;
    unint64_t v56 = v36 + 4;
    uint64_t v58 = v23;
    uint64_t v59 = v24;
    uint64_t v60 = v25;
    uint64_t v61 = v26;
    uint64_t v62 = v27;
    uint64_t v63 = v28;
    uint64_t v64 = v29;
    uint64_t v65 = v30;
    uint64_t v66 = v31;
    float v67 = v32;
    uint64_t v38 = sub_1DCEE5BC0();
    uint64_t v58 = sub_1DCED7FA0(v38, v39, v68);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v34, v35, "Satisfied detector result %s", v36, 0xCu);
    uint64_t v40 = 1;
    uint64_t v41 = v57;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v41, -1, -1);
    MEMORY[0x1E01B07E0](v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v48);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v33, v48);
    return 1;
  }
  return v40;
}

uint64_t sub_1DCEA8AD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCEA8B3C()
{
  return *(void *)(*(void *)(v0 + 56) + 16);
}

uint64_t S2Loop.numVertices.getter()
{
  return *(void *)(*(void *)v0 + 16);
}

uint64_t sub_1DCEA8B54@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 56);
  unint64_t v4 = *(void *)(v3 + 16);
  if ((uint64_t)v4 <= result) {
    uint64_t v5 = *(void *)(v3 + 16);
  }
  else {
    uint64_t v5 = 0;
  }
  unint64_t v6 = result - v5;
  if (v6 >= v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = v3 + 24 * v6;
    uint64_t v8 = *(void *)(v7 + 48);
    *(_OWORD *)a2 = *(_OWORD *)(v7 + 32);
    *(void *)(a2 + 16) = v8;
  }
  return result;
}

VisualIntelligence::S2Point __swiftcall S2Loop.vertex(_:)(Swift::Int a1)
{
  Swift::Int v3 = *(void *)(*(void *)v2 + 16);
  if (v3 <= a1) {
    uint64_t v4 = *(void *)(*(void *)v2 + 16);
  }
  else {
    uint64_t v4 = 0;
  }
  unint64_t v5 = a1 - v4;
  if (v5 >= v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)v2 + 24 * v5;
    double v7 = *(double *)(v6 + 48);
    long long v8 = *(_OWORD *)(v6 + 32);
    *(_OWORD *)uint64_t v1 = v8;
    *(double *)(v1 + 16) = v7;
  }
  result.CGFloat y = *(double *)&v8;
  result.CGFloat x = v7;
  return result;
}

uint64_t sub_1DCEA8BCC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 56);
    unint64_t v5 = *(void *)(v4 + 16);
    if (v3 >= (uint64_t)v5) {
      uint64_t v6 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v6 = 0;
    }
    unint64_t v7 = v3 - v6;
    if (v7 < v5)
    {
      uint64_t v8 = v4 + 24 * v7;
      uint64_t v9 = *(void *)(v8 + 48);
      *(_OWORD *)a2 = *(_OWORD *)(v8 + 32);
      *(void *)(a2 + 16) = v9;
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_1DCEA8C14()
{
}

uint64_t sub_1DCEA8C44()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1DCEA8C90()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

double static S2Loop.maxIntersectionError.getter()
{
  return 1.0e-15;
}

uint64_t S2Loop.vertices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t S2Loop.vertices.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

void (*S2Loop.vertices.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t S2Loop.depth.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t S2Loop.depth.setter(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

void (*S2Loop.depth.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

void S2Loop.init(vertices:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v5 = sub_1DCDBCA60(MEMORY[0x1E4FBC860]);
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = 0;
  if (qword_1EAB01DB0 != -1) {
    swift_once();
  }
  long long v6 = xmmword_1EAB032E0;
  *(_OWORD *)(a2 + 32) = xmmword_1DD0530A0;
  *(_OWORD *)(a2 + 48) = v6;
  *(unsigned char *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  *(void *)a2 = a1;
  type metadata accessor for S2Loop.S2LoopEdgeIndex();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 64) = 0;
  *(void *)(v7 + 72) = v5;
  *(void *)(v7 + 80) = 0;
  *(_OWORD *)(v7 + 88) = xmmword_1DD0530A0;
  *(_OWORD *)(v7 + 104) = v6;
  *(unsigned char *)(v7 + 120) = 0;
  *(void *)(v7 + 128) = 0;
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v4;
  *(void *)(v7 + 32) = 30;
  *(unsigned char *)(v7 + 40) = 0;
  *(void *)(v7 + 48) = 0;
  *(void *)(v7 + 56) = a1;
  *(void *)(a2 + 8) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCEA8EA4();
  sub_1DCEA90A4(v8, v9, v10);
  sub_1DCEA9308();
  sub_1DCEA93E4();
}

void sub_1DCEA8EA4()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(*(void *)v0 + 16);
  if (v2 > 1) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 1 - v2;
  }
  if (v3 >= (uint64_t)v2)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v4 = v0;
  double v5 = v0[4];
  double v6 = v0[5];
  uint64_t v7 = *((void *)v0 + 6);
  uint64_t v8 = *((void *)v0 + 7);
  uint64_t v10 = *((void *)v0 + 1);
  double v9 = v0[2];
  uint64_t v27 = *((void *)v4 + 3);
  uint64_t v11 = *((void *)v4 + 9);
  uint64_t v12 = v1 + 32 + 24 * v3;
  long double v13 = *(double *)v12;
  long double v14 = *(double *)(v12 + 8);
  uint64_t v15 = (Swift::Double *)(v12 + 16);
  double v16 = atan2(*(long double *)(v12 + 16), sqrt(v13 * v13 + v14 * v14));
  if (v5 > v16 || v16 > v6) {
    goto LABEL_19;
  }
  long double v18 = atan2(v14, v13);
  *(void *)&long long v28 = v7;
  *((void *)&v28 + 1) = v8;
  if (!S1Interval.contains(point:)(v18))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *((unsigned char *)v4 + 64) = 0;
  Swift::Double v19 = *v15;
  long long v43 = *(_OWORD *)v12;
  Swift::Double x = v19;
  S2Point.ortho.getter((double *)&v28);
  long long v43 = v28;
  Swift::Double x = v29;
  uint64_t v20 = *(void *)(v1 + 16);
  if (!v20)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v21 = *(void *)(v1 + 48);
  long long v41 = *(_OWORD *)(v1 + 32);
  uint64_t v42 = v21;
  uint64_t v22 = 2;
  if (v2 <= 2) {
    uint64_t v22 = 2 - v2;
  }
  if (v22 >= v20) {
    goto LABEL_22;
  }
  uint64_t v23 = v1 + 32 + 24 * v22;
  uint64_t v24 = *(void *)(v23 + 16);
  long long v39 = *(_OWORD *)v23;
  uint64_t v40 = v24;
  if (v3 >= v20)
  {
LABEL_23:
    __break(1u);
    return;
  }
  uint64_t v25 = *(void *)v15;
  long long v37 = *(_OWORD *)v12;
  uint64_t v38 = v25;
  BOOL v26 = _s18VisualIntelligence2S2V10orderedCCW1a1b1c1oSbAA0C5PointV_A3JtFZ_0((double *)&v43, (double *)&v41, (double *)&v39, (double *)&v37);
  *(void *)&long long v28 = v1;
  *((void *)&v28 + 1) = v10;
  double v29 = v9;
  uint64_t v30 = v27;
  double v31 = v5;
  double v32 = v6;
  uint64_t v33 = v7;
  uint64_t v34 = v8;
  char v35 = 0;
  uint64_t v36 = v11;
  v45.Swift::Double x = *v15;
  long long v43 = *(_OWORD *)v12;
  *(void *)&v45.CGFloat y = v43;
  Swift::Double x = v45.x;
  if (v26 != S2Loop.contains(point:)(v45)) {
    *((unsigned char *)v4 + 64) = 1;
  }
}

BOOL sub_1DCEA90A4(double a1, double a2, double a3)
{
  if (qword_1EAB01DA8 != -1) {
LABEL_21:
  }
    swift_once();
  unint64_t v4 = 0;
  uint64_t v5 = 0;
  long long v26 = xmmword_1EAB032D0;
  uint64_t v6 = *(void *)v3;
  unint64_t v7 = *(void *)(*(void *)v3 + 16);
  BOOL v8 = v7 == 0;
  unint64_t v9 = 1;
  do
  {
    if (v4 >= *(void *)(v6 + 16))
    {
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v10 = (uint64_t *)(v6 + 32 + 24 * v4);
    uint64_t v11 = v10[2];
    uint64_t v12 = *v10;
    RectBounder.add(point:)(*(VisualIntelligence::S2Point *)(&a3 - 2));
    if (v8) {
      goto LABEL_10;
    }
    ++v5;
    if (v9 >= v7) {
      unint64_t v14 = v7;
    }
    else {
      unint64_t v14 = 0;
    }
    unint64_t v4 = v5 - v14;
    BOOL v8 = v7 == v9++;
  }
  while ((uint64_t)(~v14 + v9) >= 0);
  __break(1u);
LABEL_10:
  double v15 = 1.0;
  double v17 = *((double *)&v26 + 1);
  double v16 = *(double *)&v26;
  if (qword_1EAB01DB0 != -1) {
    swift_once();
  }
  long long v18 = xmmword_1EAB032E0;
  unint64_t v19 = 0xBFF921FB54442D18;
  BOOL result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&a3 - 2));
  BOOL v22 = result;
  if (result)
  {
    double v16 = *(double *)&v18;
    double v17 = *((double *)&v18 + 1);
  }
  uint64_t v23 = 0x401921FB54442D18;
  if (v17 - v16 == 6.28318531)
  {
    unint64_t v24 = 0xBFF921FB54442D18;
    BOOL result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v21 - 2));
    if (result) {
      double v15 = -1.57079633;
    }
  }
  double v25 = 1.57079633;
  if (!v22) {
    double v25 = 0.0;
  }
  v3[4] = v15;
  v3[5] = v25;
  v3[6] = v16;
  v3[7] = v17;
  return result;
}

void sub_1DCEA9308()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2 == 1)
  {
    v0[3] = 0;
    return;
  }
  if (!v2) {
    goto LABEL_25;
  }
  uint64_t v3 = 0;
  uint64_t v4 = v1 + 32;
  uint64_t v5 = 1;
  while (1)
  {
    uint64_t v7 = v5 >= v2 ? *(void *)(*v0 + 16) : 0;
    if (v5 - v7 >= (unint64_t)v2) {
      break;
    }
    if (v3 >= v2) {
      uint64_t v8 = *(void *)(*v0 + 16);
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v9 = v3 - v8;
    if (v3 - v8 >= (unint64_t)v2) {
      goto LABEL_24;
    }
    uint64_t v10 = (double *)(v1 - 24 * v7);
    double v11 = v10[7];
    uint64_t v12 = (double *)(v4 + 24 * v9);
    uint64_t v6 = v5;
    if (v11 >= *v12)
    {
      if (*v12 >= v11)
      {
        double v13 = v10[8];
        double v14 = v12[1];
        uint64_t v6 = v5;
        if (v13 < v14) {
          goto LABEL_5;
        }
        if (v14 >= v13)
        {
          if (v10[9] >= v12[2]) {
            uint64_t v6 = v3;
          }
          else {
            uint64_t v6 = v5;
          }
          goto LABEL_5;
        }
      }
      uint64_t v6 = v3;
    }
LABEL_5:
    ++v5;
    v1 += 24;
    uint64_t v3 = v6;
    if (v2 == v5)
    {
      v0[3] = v6;
      return;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
}

void sub_1DCEA93E4()
{
  uint64_t v1 = *(void *)(*v0 + 16);
  if (v1 == 1) {
    return;
  }
  if (!v1) {
    goto LABEL_27;
  }
  uint64_t v2 = v0;
  uint64_t v3 = 0;
  unint64_t v4 = 1;
  while (v1 != v4)
  {
    unint64_t v5 = *(void *)(*v2 + 16);
    if (v4 >= v5) {
      uint64_t v6 = *(void *)(*v2 + 16);
    }
    else {
      uint64_t v6 = 0;
    }
    if (v4 - v6 >= v5) {
      goto LABEL_24;
    }
    uint64_t v7 = (double *)(*v2 - 24 * v6 + v3);
    double v8 = v7[7];
    double v9 = v7[8];
    double v10 = v7[9];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = (void *)v2[2];
    v2[2] = 0x8000000000000000;
    unint64_t v14 = sub_1DCEAD914(v8, v9, v10);
    uint64_t v15 = v12[2];
    BOOL v16 = (v13 & 1) == 0;
    uint64_t v17 = v15 + v16;
    if (__OFADD__(v15, v16)) {
      goto LABEL_25;
    }
    char v18 = v13;
    if (v12[3] >= v17)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v21 = v12;
        if (v13) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1DCE8B604();
        uint64_t v21 = v12;
        if (v18) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1DCE83200(v17, isUniquelyReferenced_nonNull_native);
      unint64_t v19 = sub_1DCEAD914(v8, v9, v10);
      if ((v18 & 1) != (v20 & 1)) {
        goto LABEL_28;
      }
      unint64_t v14 = v19;
      uint64_t v21 = v12;
      if (v18)
      {
LABEL_4:
        *(void *)(v21[7] + 8 * v14) = v4;
        goto LABEL_5;
      }
    }
    v21[(v14 >> 6) + 8] |= 1 << v14;
    BOOL v22 = (double *)(v21[6] + 24 * v14);
    *BOOL v22 = v8;
    v22[1] = v9;
    v22[2] = v10;
    *(void *)(v21[7] + 8 * v14) = v4;
    uint64_t v23 = v21[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_26;
    }
    uint64_t v21[2] = v25;
LABEL_5:
    ++v4;
    v2[2] = v21;
    swift_bridgeObjectRelease();
    v3 += 24;
    if (v1 == v4) {
      return;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  sub_1DD049028();
  __break(1u);
}

double S2Loop.init(cell:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *((unsigned char *)a1 + 8);
  char v4 = *((unsigned char *)a1 + 9);
  char v5 = *((unsigned char *)a1 + 10);
  uint64_t v6 = a1[2];
  uint64_t v16 = *a1;
  char v17 = v3;
  char v18 = v4;
  char v19 = v5;
  uint64_t v20 = v6;
  *(void *)&long long v21 = v16;
  BYTE8(v21) = v3;
  BYTE9(v21) = v4;
  BYTE10(v21) = v5;
  uint64_t v22 = v6;
  S2Cell.rectBound.getter(v15);
  v14[0] = v15[0];
  v14[1] = v15[1];
  S2Loop.init(cell:bound:)((double *)v14, (uint64_t)&v21);
  double result = *(double *)&v21;
  uint64_t v8 = v22;
  uint64_t v9 = v23;
  char v10 = v26;
  uint64_t v11 = v27;
  long long v12 = v24;
  long long v13 = v25;
  *(_OWORD *)a2 = v21;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v9;
  *(_OWORD *)(a2 + 32) = v12;
  *(_OWORD *)(a2 + 48) = v13;
  *(unsigned char *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = v11;
  return result;
}

double S2Loop.init(cell:bound:)@<D0>(double *a1@<X1>, uint64_t a2@<X8>)
{
  double v3 = *a1;
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v5 = *((void *)a1 + 2);
  uint64_t v6 = *((void *)a1 + 3);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  unint64_t v8 = sub_1DCDBCA60(MEMORY[0x1E4FBC860]);
  if (qword_1EAB01DB0 != -1) {
    swift_once();
  }
  *(double *)&long long v13 = v3;
  *((void *)&v13 + 1) = v4;
  *(void *)&long long v14 = v5;
  *((void *)&v14 + 1) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03CF0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DD04EF80;
  S2Cell.getVertex(_:)(0);
  S2Cell.getVertex(_:)(1);
  S2Cell.getVertex(_:)(2);
  S2Cell.getVertex(_:)(3);
  swift_bridgeObjectRelease();
  *(void *)&long long v12 = v9;
  type metadata accessor for S2Loop.S2LoopEdgeIndex();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 64) = 0;
  *(void *)(v10 + 72) = v8;
  *(void *)(v10 + 80) = 0;
  *(double *)(v10 + 88) = v3;
  *(void *)(v10 + 96) = v4;
  *(void *)(v10 + 104) = v5;
  *(void *)(v10 + 112) = v6;
  *(unsigned char *)(v10 + 120) = 0;
  *(void *)(v10 + 128) = 0;
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v7;
  *(void *)(v10 + 32) = 30;
  *(unsigned char *)(v10 + 40) = 0;
  *(void *)(v10 + 48) = 0;
  *(void *)(v10 + 56) = v9;
  *((void *)&v12 + 1) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCEA8EA4();
  sub_1DCEA9308();
  sub_1DCEA93E4();
  *(_OWORD *)a2 = v12;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = 0;
  double result = v3;
  *(_OWORD *)(a2 + 32) = v13;
  *(_OWORD *)(a2 + 48) = v14;
  *(unsigned char *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  return result;
}

uint64_t S2Loop.isHole.getter()
{
  return *(_DWORD *)(v0 + 72) & 1;
}

uint64_t S2Loop.sign.getter()
{
  if (*(unsigned char *)(v0 + 72)) {
    return -1;
  }
  else {
    return 1;
  }
}

BOOL S2Loop.isNormalized.getter()
{
  sub_1DCEA9D90(0, (uint64_t)v1);
  return v1[0] <= 6.28318531;
}

double S2Loop.area.getter()
{
  sub_1DCEA9D90(0, (uint64_t)v1);
  return v1[0];
}

Swift::Void __swiftcall S2Loop.normalize()()
{
  sub_1DCEA9D90(0, (uint64_t)v0);
  if (v0[0] > 6.28318531)
  {
    S2Loop.invert()();
  }
}

Swift::Void __swiftcall S2Loop.invert()()
{
  uint64_t v6 = *(void **)v0;
  uint64_t v7 = *(void *)(*(void *)v0 + 16);
  uint64_t v8 = v7 - 2;
  if (v7 < 2) {
    uint64_t v8 = v7 - 1;
  }
  if (!v7)
  {
    __break(1u);
LABEL_36:
    uint64_t v6 = sub_1DCEC1CCC(v6);
    goto LABEL_8;
  }
  unint64_t v1 = v8 >> 1;
  unint64_t v2 = v7 - (v8 >> 1);
  if (v7 <= (unint64_t)(v8 >> 1))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v3 = v7 + ~v1;
  if (!__CFADD__(v7, ~v1)) {
    goto LABEL_22;
  }
  uint64_t v9 = (uint64_t)&v6[3 * v1 + 4];
  uint64_t v4 = *(void *)(v9 + 16);
  uint64_t v10 = (uint64_t)&v6[3 * v3 + 4];
  long long v38 = *(_OWORD *)v9;
  long long v40 = *(_OWORD *)v10;
  uint64_t v5 = *(void *)(v10 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_36;
  }
LABEL_8:
  unint64_t v13 = v6[2];
  if (v1 >= v13)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v14 = (uint64_t)&v6[3 * v1 + 4];
  *(_OWORD *)uint64_t v14 = v40;
  *(void *)(v14 + 16) = v5;
  if (v3 >= v13)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v15 = (uint64_t)&v6[3 * v3 + 4];
  double v16 = *(double *)&v38;
  *(_OWORD *)uint64_t v15 = v38;
  *(void *)(v15 + 16) = v4;
  if ((unint64_t)v7 >= 4)
  {
    uint64_t v17 = 24 * v7 - 24 * v1 + 32;
    uint64_t v18 = 24 * v1 + 24;
    while ((uint64_t)v1-- >= 1)
    {
      unint64_t v20 = v6[2];
      if (v1 >= v20) {
        goto LABEL_21;
      }
      if (v2 >= v20) {
        goto LABEL_22;
      }
      uint64_t v21 = *(void *)((char *)v6 + v18);
      long long v39 = *(_OWORD *)((char *)v6 + v18 - 16);
      long long v41 = *(_OWORD *)((char *)v6 + v17);
      uint64_t v22 = *(void *)((char *)v6 + v17 + 16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1DCEC1CCC(v6);
      }
      unint64_t v23 = v6[2];
      if (v1 >= v23) {
        goto LABEL_23;
      }
      long long v24 = (void *)((char *)v6 + v18);
      *((_OWORD *)v24 - 1) = v41;
      void *v24 = v22;
      if (v2 >= v23) {
        goto LABEL_24;
      }
      long long v25 = (char *)v6 + v17;
      double v16 = *(double *)&v39;
      *(_OWORD *)long long v25 = v39;
      *((void *)v25 + 2) = v21;
      v17 += 24;
      ++v2;
      v18 -= 24;
      if (!v1) {
        goto LABEL_25;
      }
    }
    __break(1u);
    goto LABEL_31;
  }
LABEL_25:
  *(void *)uint64_t v0 = v6;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  unint64_t v27 = sub_1DCDBCA60(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v27;
  uint64_t v28 = *(void *)(v0 + 8);
  uint64_t v29 = *(void *)(v0 + 24);
  double v31 = *(double *)(v0 + 32);
  double v30 = *(double *)(v0 + 40);
  uint64_t v32 = *(void *)(v0 + 48);
  uint64_t v33 = *(void *)(v0 + 56);
  char v34 = *(unsigned char *)(v0 + 64);
  uint64_t v35 = *(void *)(v0 + 72);
  type metadata accessor for S2Loop.S2LoopEdgeIndex();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 64) = v28;
  *(void *)(v36 + 72) = v27;
  *(void *)(v36 + 80) = v29;
  *(double *)(v36 + 88) = v31;
  *(double *)(v36 + 96) = v30;
  *(void *)(v36 + 104) = v32;
  *(void *)(v36 + 112) = v33;
  *(unsigned char *)(v36 + 120) = v34;
  *(void *)(v36 + 128) = v35;
  *(void *)(v36 + 16) = v26;
  *(void *)(v36 + 24) = v26;
  *(void *)(v36 + 32) = 30;
  *(unsigned char *)(v36 + 40) = 0;
  *(void *)(v36 + 48) = 0;
  *(void *)(v36 + 56) = v6;
  *(void *)(v0 + 8) = v36;
  *(unsigned char *)(v0 + 64) = v34 ^ 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  double v16 = -1.57079633;
  if (v31 <= -1.57079633 || (double v16 = 1.57079633, v30 >= 1.57079633))
  {
LABEL_31:
    sub_1DCEA90A4(v16, v11, v12);
    goto LABEL_32;
  }
  if (qword_1EAB01DB0 != -1) {
    swift_once();
  }
  long long v37 = xmmword_1EAB032E0;
  *(_OWORD *)(v0 + 32) = xmmword_1DD0530A0;
  *(_OWORD *)(v0 + 48) = v37;
LABEL_32:
  sub_1DCEA9308();
  sub_1DCEA93E4();
}

void S2Loop.inverted.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  long long v8 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  S2Loop.invert()();
}

void sub_1DCEA9D90(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2;
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= 2)
  {
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  double v6 = *(double *)(v3 + 32);
  double v7 = *(double *)(v3 + 40);
  double v8 = *(double *)(v3 + 48);
  double v9 = fabs(v7);
  double v10 = fabs(v6);
  double v11 = fabs(v8);
  uint64_t v12 = 2 * (v11 >= v10);
  uint64_t v13 = 2;
  if (v11 < v9) {
    uint64_t v13 = 1;
  }
  if (v9 >= v10) {
    uint64_t v12 = v13;
  }
  if (v12 == 2) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v14 == 1)
  {
    double v15 = v7 + 2.71828183e-10;
  }
  else if (v14)
  {
    double v15 = v8 + 2.71828183e-10;
  }
  else
  {
    double v6 = v6 + 2.71828183e-10;
    double v15 = v6;
  }
  if (v14 == 1) {
    double v7 = v15;
  }
  if (v14 == 2) {
    double v8 = v15;
  }
  double v16 = sqrt(v8 * v8 + v6 * v6 + v7 * v7);
  if (v16 != 0.0) {
    double v16 = 1.0 / v16;
  }
  double v47 = v7 * v16;
  double v48 = v6 * v16;
  double v46 = v8 * v16;
  uint64_t v17 = v3 + 40;
  float64x2_t v45 = 0u;
  double v18 = 0.0;
  unint64_t v19 = 1;
  double v44 = 0.0;
  do
  {
    if (v19 - 1 >= v4) {
      unint64_t v20 = v4;
    }
    else {
      unint64_t v20 = 0;
    }
    uint64_t v21 = v19 - 1 - v20;
    if (v21 < 0)
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      return;
    }
    unint64_t v22 = *(void *)(v3 + 16);
    if (v21 >= v22) {
      goto LABEL_47;
    }
    if (v19 >= v4) {
      unint64_t v23 = v4;
    }
    else {
      unint64_t v23 = 0;
    }
    if (v19 - v23 >= v22) {
      goto LABEL_48;
    }
    long long v24 = (double *)(v17 - 24 * v20);
    double v26 = *(v24 - 1);
    double v25 = *v24;
    double v27 = v24[1];
    uint64_t v28 = (double *)(v17 - 24 * v23);
    double v29 = v28[3];
    double v49 = v28[2];
    double v50 = v18;
    double v30 = v28[4];
    v58.f64[0] = v48;
    v58.f64[1] = v47;
    double v59 = v46;
    double v55 = v26;
    double v56 = v25;
    double v57 = v27;
    *(double *)&long long v53 = v49;
    *((double *)&v53 + 1) = v29;
    double v54 = v30;
    sub_1DCE93C70((uint64_t *)&v58, (uint64_t *)&v55, (double *)&v53, v49, v8, v7);
    double v32 = v31;
    double v33 = (v47 * v27 - v46 * v25) * v49 + (v46 * v26 - v48 * v27) * v29 + (v48 * v25 - v47 * v26) * v30;
    if (v33 <= 1.6e-15)
    {
      if (v33 >= -1.6e-15)
      {
        v58.f64[0] = v48;
        v58.f64[1] = v47;
        double v59 = v46;
        double v55 = v26;
        double v56 = v25;
        double v57 = v27;
        *(double *)&long long v53 = v49;
        *((double *)&v53 + 1) = v29;
        double v54 = v30;
        double v36 = v32;
        uint64_t v37 = sub_1DCE9357C(v58.f64, &v55, (double *)&v53);
        double v32 = v36;
        uint64_t v34 = v37;
        if ((a1 & 1) == 0)
        {
LABEL_36:
          float64x2_t v35 = 0uLL;
          double v8 = 0.0;
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v34 = -1;
        if ((a1 & 1) == 0) {
          goto LABEL_36;
        }
      }
    }
    else
    {
      uint64_t v34 = 1;
      if ((a1 & 1) == 0) {
        goto LABEL_36;
      }
    }
    double v55 = v48;
    double v56 = v47;
    double v57 = v46;
    double v38 = v24[1];
    long long v53 = *(_OWORD *)(v24 - 1);
    double v54 = v38;
    uint64_t v39 = *((void *)v28 + 4);
    long long v51 = *((_OWORD *)v28 + 1);
    uint64_t v52 = v39;
    double v40 = v32;
    static S2.trueCentroid(a:b:c:)(&v55, (double *)&v53, (double *)&v51, v58.f64);
    double v32 = v40;
    float64x2_t v35 = vaddq_f64(v45, v58);
    double v8 = v44 + v59;
    double v44 = v44 + v59;
    float64x2_t v45 = v35;
LABEL_39:
    double v7 = v32 * (double)v34;
    double v18 = v50 + v7;
    if (v4 == v19) {
      goto LABEL_43;
    }
    v17 += 24;
  }
  while (!__OFADD__(v19++, 1));
  __break(1u);
LABEL_43:
  double v42 = v18 + 12.5663706;
  if (v18 >= 0.0) {
    double v42 = v18;
  }
  *(double *)a2 = v42;
  *(float64x2_t *)(a2 + 8) = v35;
  *(double *)(a2 + 24) = v8;
}

void S2Loop.areaAndCentroid.getter(uint64_t a1@<X8>)
{
}

double S2Loop.centroid.getter@<D0>(uint64_t a1@<X8>)
{
  sub_1DCEA9D90(1, (uint64_t)v3);
  double result = v5;
  *(_OWORD *)a1 = v4;
  *(double *)(a1 + 16) = result;
  return result;
}

BOOL S2Loop.contains(other:)(uint64_t a1, double a2, double a3)
{
  double v4 = *(double *)a1;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v38 = *(void *)(a1 + 24);
  double v39 = *(double *)(a1 + 8);
  double v6 = *(double *)(a1 + 32);
  double v7 = *(double *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  double v9 = *(double *)(a1 + 56);
  char v37 = *(unsigned char *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  double v11 = *(double *)v3;
  double v12 = *(double *)(v3 + 8);
  uint64_t v14 = *(void *)(v3 + 16);
  uint64_t v13 = *(void *)(v3 + 24);
  double v15 = *(double *)(v3 + 32);
  double v16 = *(double *)(v3 + 40);
  uint64_t v17 = *(void *)(v3 + 48);
  double v18 = *(double *)(v3 + 56);
  char v19 = *(unsigned char *)(v3 + 64);
  uint64_t v20 = *(void *)(v3 + 72);
  if (v7 >= v6)
  {
    BOOL result = 0;
    if (v15 > v6 || v7 > v16) {
      return result;
    }
  }
  double v49 = *(double *)(v3 + 48);
  double v50 = v18;
  *(void *)&long long v40 = v8;
  *((double *)&v40 + 1) = v9;
  BOOL result = S1Interval.contains(interval:)((VisualIntelligence::S1Interval)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2));
  if (!result) {
    return 0;
  }
  double v49 = v11;
  double v50 = v12;
  uint64_t v51 = v14;
  uint64_t v52 = v13;
  double v53 = v15;
  double v54 = v16;
  uint64_t v55 = v17;
  double v56 = v18;
  char v57 = v19;
  uint64_t v58 = v20;
  if (!*(void *)(*(void *)&v4 + 16))
  {
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v23 = *(void *)(*(void *)&v4 + 48);
  long long v40 = *(_OWORD *)(*(void *)&v4 + 32);
  uint64_t v24 = v40;
  uint64_t v41 = v23;
  BOOL result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v22 - 2));
  if (result) {
    goto LABEL_7;
  }
  if (!*(void *)(*(void *)&v4 + 16))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (!*(void *)(v14 + 16)) {
    return 0;
  }
  unint64_t v35 = sub_1DCEAD914(*(double *)(*(void *)&v4 + 32), *(double *)(*(void *)&v4 + 40), *(double *)(*(void *)&v4 + 48));
  if ((v36 & 1) == 0 || (*(void *)(*(void *)(v14 + 56) + 8 * v35) & 0x8000000000000000) != 0) {
    return 0;
  }
LABEL_7:
  double v49 = v11;
  double v50 = v12;
  uint64_t v51 = v14;
  uint64_t v52 = v13;
  double v53 = v15;
  double v54 = v16;
  uint64_t v55 = v17;
  double v56 = v18;
  char v57 = v19;
  uint64_t v58 = v20;
  *(double *)&long long v40 = v4;
  *((double *)&v40 + 1) = v39;
  uint64_t v41 = v5;
  uint64_t v42 = v38;
  double v43 = v6;
  double v44 = v7;
  uint64_t v45 = v8;
  double v46 = v9;
  char v47 = v37;
  uint64_t v48 = v10;
  if (sub_1DCEAAEA0((uint64_t)&v40, (uint64_t)&type metadata for WedgeContains, (uint64_t)&protocol witness table for WedgeContains) < 1)return 0; {
  if (v6 >= v15)
  }
    double v25 = v15;
  else {
    double v25 = v6;
  }
  if (v16 > v7) {
    double v26 = v16;
  }
  else {
    double v26 = v7;
  }
  if (v7 < v6)
  {
    double v25 = v15;
    double v26 = v16;
  }
  BOOL v27 = v16 < v15;
  if (v16 >= v15) {
    double v28 = v25;
  }
  else {
    double v28 = v6;
  }
  *(void *)&long long v40 = v17;
  *((double *)&v40 + 1) = v18;
  if (v27) {
    double v29 = v7;
  }
  else {
    double v29 = v26;
  }
  S1Interval.union(with:)((VisualIntelligence::S1Interval)__PAIR128__(*(unint64_t *)&v26, *(unint64_t *)&v25));
  BOOL result = 1;
  if (v28 == -1.57079633 && v29 == 1.57079633 && v50 - v49 == 6.28318531)
  {
    double v49 = v4;
    double v50 = v39;
    uint64_t v51 = v5;
    uint64_t v52 = v38;
    double v53 = v6;
    double v54 = v7;
    uint64_t v55 = v8;
    double v56 = v9;
    char v57 = v37;
    uint64_t v58 = v10;
    if (*(void *)(*(void *)&v11 + 16))
    {
      uint64_t v31 = *(void *)(*(void *)&v11 + 48);
      long long v40 = *(_OWORD *)(*(void *)&v11 + 32);
      uint64_t v32 = v40;
      uint64_t v41 = v31;
      BOOL result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v30 - 2));
      if (!result) {
        return 1;
      }
      if (*(void *)(*(void *)&v11 + 16))
      {
        if (*(void *)(v5 + 16))
        {
          unint64_t v33 = sub_1DCEAD914(*(double *)(*(void *)&v11 + 32), *(double *)(*(void *)&v11 + 40), *(double *)(*(void *)&v11 + 48));
          if ((v34 & 1) != 0 && (*(void *)(*(void *)(v5 + 56) + 8 * v33) & 0x8000000000000000) == 0) {
            return 1;
          }
        }
        return 0;
      }
LABEL_41:
      __break(1u);
      return result;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  return result;
}

__n128 S2Loop.rectBound.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 32);
  long long v3 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

Swift::Bool __swiftcall S2Loop.contains(point:)(VisualIntelligence::S2Point point)
{
  long double v4 = *v1;
  long double v3 = v1[1];
  double v6 = *v2;
  uint64_t v5 = *((void *)v2 + 1);
  double v7 = v2[4];
  double v8 = v2[5];
  char v9 = *((unsigned char *)v2 + 64);
  long double v116 = v1[2];
  double v10 = atan2(v116, sqrt(v4 * v4 + v3 * v3));
  if (v7 <= v10 && v10 <= v8)
  {
    long double v12 = atan2(v3, v4);
    long long v120 = *((_OWORD *)v2 + 3);
    LOBYTE(v13) = S1Interval.contains(point:)(v12);
    if (v13)
    {
      unint64_t v14 = *(void *)(*(void *)&v6 + 16);
      if (!v14) {
        goto LABEL_132;
      }
      double v15 = v3;
      uint64_t v16 = *(void *)&v6 + 32;
      uint64_t v17 = *(void *)&v6 + 32 + 24 * v14;
      double v19 = *(double *)(v17 - 24);
      double v18 = *(double *)(v17 - 16);
      double v20 = *(double *)(v17 - 8);
      double v21 = v116 - v15 * 0.0;
      long long v120 = xmmword_1DD04F320;
      double v121 = 0.0;
      *(long double *)&long long v130 = v4;
      *((double *)&v130 + 1) = v15;
      long double v131 = v116;
      *(double *)&long long v128 = v19;
      *((double *)&v128 + 1) = v18;
      double v22 = v20;
      long double v129 = v20;
      double v125 = v21;
      double v126 = v4 * 0.0 - v116 * 0.0;
      double v114 = v15 * 0.0 - v4;
      double v115 = v126;
      double v127 = v114;
      uint64_t v13 = _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v120, &v130, (double *)&v128, &v125);
      uint64_t v23 = -v13;
      if (__OFSUB__(0, v13))
      {
LABEL_133:
        __break(1u);
      }
      else
      {
        double v108 = v15;
        double v109 = v4;
        double v107 = v116 - v15 * 0.0;
        if (v14 <= 0x7CF)
        {
          uint64_t v24 = (double *)(*(void *)&v6 + 48);
          double v25 = v22;
          while (1)
          {
            double v26 = *(v24 - 2);
            double v27 = *(v24 - 1);
            double v28 = *v24;
            double v29 = v21 * v26 + v115 * v27 + v114 * *v24;
            if (v29 <= 1.6e-15)
            {
              if (v29 >= -1.6e-15)
              {
                long long v120 = xmmword_1DD04F320;
                double v121 = 0.0;
                *(long double *)&long long v130 = v4;
                *((double *)&v130 + 1) = v15;
                long double v131 = v116;
                *(double *)&long long v128 = v26;
                *((double *)&v128 + 1) = v27;
                long double v129 = v28;
                double v110 = v19;
                double v31 = v18;
                double v32 = v4;
                double v33 = v21;
                double v34 = v15;
                double v35 = v25;
                double v36 = v27;
                double v37 = v28;
                double v38 = v26;
                uint64_t v13 = sub_1DCE9357C((double *)&v120, (double *)&v130, (double *)&v128);
                double v26 = v38;
                double v28 = v37;
                double v27 = v36;
                double v25 = v35;
                double v15 = v34;
                double v21 = v33;
                long double v4 = v32;
                double v18 = v31;
                double v19 = v110;
                uint64_t v30 = v13;
              }
              else
              {
                uint64_t v30 = -1;
              }
            }
            else
            {
              uint64_t v30 = 1;
            }
            if (__OFSUB__(0, v23))
            {
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
              goto LABEL_122;
            }
            if (v30 == -v23 && v30) {
              break;
            }
            if ((v30 & v23) != 0)
            {
              double v41 = v15;
              double v42 = v18 * v28 - v25 * v27;
              double v43 = v4;
              double v44 = v25 * v26 - v19 * v28;
              double v45 = v19 * v27 - v18 * v26;
              double v46 = v116 * v45 + v43 * v42 + v41 * v44;
              if (v46 <= 1.6e-15)
              {
                if (v46 >= -1.6e-15)
                {
                  *(double *)&long long v120 = v19;
                  *((double *)&v120 + 1) = v18;
                  double v121 = v25;
                  *(double *)&long long v130 = v26;
                  *((double *)&v130 + 1) = v27;
                  long double v131 = v28;
                  *(double *)&long long v128 = v109;
                  *((double *)&v128 + 1) = v108;
                  long double v129 = v116;
                  double v111 = v25;
                  double v104 = v27;
                  double v47 = v28;
                  double v48 = v26;
                  uint64_t v13 = sub_1DCE9357C((double *)&v120, (double *)&v130, (double *)&v128);
                  double v26 = v48;
                  double v28 = v47;
                  double v27 = v104;
                  double v25 = v111;
                }
                else
                {
                  uint64_t v13 = -1;
                }
              }
              else
              {
                uint64_t v13 = 1;
              }
              if (__OFSUB__(0, v13)) {
                goto LABEL_129;
              }
              if (-v13 == v23)
              {
                double v49 = v45 * 0.0 + v44 + v42 * 0.0;
                if (v49 <= 1.6e-15)
                {
                  if (v49 >= -1.6e-15)
                  {
                    *(double *)&long long v120 = v19;
                    *((double *)&v120 + 1) = v18;
                    double v121 = v25;
                    *(double *)&long long v130 = v26;
                    *((double *)&v130 + 1) = v27;
                    long double v131 = v28;
                    long long v128 = xmmword_1DD04F320;
                    long double v129 = 0.0;
                    double v51 = v25;
                    double v52 = v26;
                    uint64_t v13 = sub_1DCE9357C((double *)&v120, (double *)&v130, (double *)&v128);
                    double v26 = v52;
                    double v25 = v51;
                    BOOL v50 = v13 == v23;
                  }
                  else
                  {
                    BOOL v50 = v23 == -1;
                  }
                }
                else
                {
                  BOOL v50 = v23 == 1;
                }
                double v15 = v108;
                long double v4 = v109;
                double v21 = v107;
                if (!v50) {
                  break;
                }
                int v40 = 0;
                int v39 = 1;
                uint64_t v23 = -v30;
                if (__OFSUB__(0, v30)) {
                  goto LABEL_119;
                }
              }
              else
              {
                int v39 = 0;
                int v40 = 1;
                double v15 = v108;
                long double v4 = v109;
                double v21 = v107;
                uint64_t v23 = -v30;
                if (__OFSUB__(0, v30)) {
                  goto LABEL_119;
                }
              }
            }
            else
            {
              int v40 = 0;
              int v39 = 0;
              uint64_t v23 = -v30;
              if (__OFSUB__(0, v30)) {
                goto LABEL_119;
              }
            }
LABEL_45:
            if ((v40 | v39) == 1)
            {
              LOBYTE(v13) = v40 ^ 1;
            }
            else
            {
              long long v120 = xmmword_1DD04F320;
              double v121 = 0.0;
              *(long double *)&long long v130 = v4;
              *((double *)&v130 + 1) = v15;
              long double v131 = v116;
              *(double *)&long long v128 = v19;
              *((double *)&v128 + 1) = v18;
              long double v129 = v25;
              double v125 = v26;
              double v126 = v27;
              double v127 = v28;
              double v53 = v26;
              LOBYTE(v13) = _s18VisualIntelligence10S2EdgeUtilV14vertexCrossing1a1b1c1dSbAA0C5PointV_A3JtFZ_0((double *)&v120, (double *)&v130, (double *)&v128, &v125);
              double v26 = v53;
            }
            v9 ^= v13;
            v24 += 3;
            double v19 = v26;
            double v18 = v27;
            double v25 = v28;
            if (!--v14) {
              goto LABEL_48;
            }
          }
          int v39 = 0;
          int v40 = 1;
          uint64_t v23 = -v30;
          if (__OFSUB__(0, v30)) {
            goto LABEL_119;
          }
          goto LABEL_45;
        }
        if (!v5) {
          goto LABEL_135;
        }
        LOBYTE(v13) = swift_beginAccess();
        if ((*(unsigned char *)(v5 + 40) & 1) != 0 || *(void *)(*(void *)(v5 + 56) + 16) <= 0x64uLL)
        {
LABEL_55:
          *(void *)&long long v120 = v5;
          BYTE8(v120) = 0;
          double v121 = 0.0;
          uint64_t v122 = 0;
          uint64_t v123 = MEMORY[0x1E4FBC860];
          uint64_t v124 = 0;
          long long v128 = xmmword_1DD04F320;
          long double v129 = 0.0;
          double v125 = v4;
          double v126 = v15;
          double v127 = v116;
          swift_retain();
          S2EdgeIndex.DataEdgeIterator.getCandidates(a:b:)(v132, v133);
          char v57 = BYTE8(v120);
          uint64_t v58 = *(void *)&v121;
          uint64_t v59 = v124;
          uint64_t v105 = v122;
          uint64_t v106 = v123;
          uint64_t v103 = v123 + 32;
          uint64_t v60 = -2;
          double v61 = v22;
          while (1)
          {
            if (v57)
            {
              if (v58 >= v105) {
                goto LABEL_117;
              }
              uint64_t v62 = v58 + 1;
            }
            else
            {
              uint64_t v63 = *(void *)(v106 + 16);
              if (v59 >= v63)
              {
LABEL_117:
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_48;
              }
              if (v59 + 1 >= v63)
              {
                ++v59;
                uint64_t v62 = v58;
              }
              else
              {
                if (v59 < -1) {
                  goto LABEL_131;
                }
                uint64_t v62 = *(void *)(v103 + 8 * ++v59);
              }
            }
            if (__OFSUB__(v58, 1)) {
              goto LABEL_120;
            }
            if (v60 != v58 - 1)
            {
              if (v58 < 0) {
                goto LABEL_126;
              }
              if ((unint64_t)v58 >= *(void *)(*(void *)&v6 + 16)) {
                goto LABEL_127;
              }
              uint64_t v64 = (double *)(v16 + 24 * v58);
              double v19 = *v64;
              double v18 = v64[1];
              double v61 = v64[2];
              double v65 = v21 * *v64 + v115 * v18 + v114 * v61;
              if (v65 <= 1.6e-15)
              {
                if (v65 >= -1.6e-15)
                {
                  long long v128 = xmmword_1DD04F320;
                  long double v129 = 0.0;
                  double v125 = v4;
                  double v126 = v15;
                  double v127 = v116;
                  *(double *)&long long v118 = v19;
                  *((double *)&v118 + 1) = v18;
                  long double v119 = v61;
                  double v66 = v21;
                  double v67 = v15;
                  double v68 = v61;
                  uint64_t v13 = sub_1DCE9357C((double *)&v128, &v125, (double *)&v118);
                  double v61 = v68;
                  double v15 = v67;
                  double v21 = v66;
                }
                else
                {
                  uint64_t v13 = -1;
                }
              }
              else
              {
                uint64_t v13 = 1;
              }
              uint64_t v23 = -v13;
              if (__OFSUB__(0, v13)) {
                goto LABEL_128;
              }
            }
            int64_t v69 = v58 + 1;
            if (__OFADD__(v58, 1)) {
              goto LABEL_121;
            }
            if (v69 >= (uint64_t)v14) {
              unint64_t v70 = v14;
            }
            else {
              unint64_t v70 = 0;
            }
            uint64_t v71 = v69 - v70;
            if (v71 < 0)
            {
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
              goto LABEL_133;
            }
            if ((unint64_t)v71 >= *(void *)(*(void *)&v6 + 16)) {
              goto LABEL_123;
            }
            uint64_t v72 = (double *)(v16 + 24 * v71);
            double v73 = *v72;
            double v74 = v72[1];
            double v75 = v72[2];
            double v76 = v21 * *v72 + v115 * v74 + v114 * v75;
            if (v76 <= 1.6e-15)
            {
              if (v76 >= -1.6e-15)
              {
                long long v128 = xmmword_1DD04F320;
                long double v129 = 0.0;
                double v125 = v4;
                double v126 = v15;
                double v127 = v116;
                *(double *)&long long v118 = v73;
                *((double *)&v118 + 1) = v74;
                long double v119 = v75;
                double v112 = v19;
                double v78 = v18;
                double v79 = v4;
                double v80 = v21;
                double v81 = v15;
                double v82 = v61;
                double v83 = v75;
                double v84 = v74;
                double v85 = v73;
                uint64_t v13 = sub_1DCE9357C((double *)&v128, &v125, (double *)&v118);
                double v73 = v85;
                double v74 = v84;
                double v75 = v83;
                double v61 = v82;
                double v15 = v81;
                double v21 = v80;
                long double v4 = v79;
                double v18 = v78;
                double v19 = v112;
                uint64_t v77 = v13;
              }
              else
              {
                uint64_t v77 = -1;
              }
            }
            else
            {
              uint64_t v77 = 1;
            }
            if (__OFSUB__(0, v23)) {
              goto LABEL_124;
            }
            if (v77 == -v23 && v77) {
              break;
            }
            if ((v77 & v23) != 0)
            {
              double v88 = v15;
              double v89 = v18 * v75 - v61 * v74;
              double v90 = v4;
              double v91 = v61 * v73 - v19 * v75;
              double v92 = v19 * v74 - v18 * v73;
              double v93 = v116 * v92 + v90 * v89 + v88 * v91;
              if (v93 <= 1.6e-15)
              {
                if (v93 >= -1.6e-15)
                {
                  *(double *)&long long v128 = v19;
                  *((double *)&v128 + 1) = v18;
                  long double v129 = v61;
                  double v125 = v73;
                  double v126 = v74;
                  double v127 = v75;
                  *(double *)&long long v118 = v109;
                  *((double *)&v118 + 1) = v108;
                  long double v119 = v116;
                  double v113 = v61;
                  double v102 = v75;
                  double v94 = v74;
                  double v95 = v73;
                  uint64_t v13 = sub_1DCE9357C((double *)&v128, &v125, (double *)&v118);
                  double v73 = v95;
                  double v74 = v94;
                  double v75 = v102;
                  double v61 = v113;
                }
                else
                {
                  uint64_t v13 = -1;
                }
              }
              else
              {
                uint64_t v13 = 1;
              }
              if (__OFSUB__(0, v13)) {
                goto LABEL_130;
              }
              if (-v13 == v23)
              {
                double v96 = v92 * 0.0 + v91 + v89 * 0.0;
                if (v96 <= 1.6e-15)
                {
                  if (v96 >= -1.6e-15)
                  {
                    *(double *)&long long v128 = v19;
                    *((double *)&v128 + 1) = v18;
                    long double v129 = v61;
                    double v125 = v73;
                    double v126 = v74;
                    double v127 = v75;
                    long long v118 = xmmword_1DD04F320;
                    long double v119 = 0.0;
                    double v98 = v61;
                    double v99 = v73;
                    uint64_t v13 = sub_1DCE9357C((double *)&v128, &v125, (double *)&v118);
                    double v73 = v99;
                    double v61 = v98;
                    BOOL v97 = v13 == v23;
                  }
                  else
                  {
                    BOOL v97 = v23 == -1;
                  }
                }
                else
                {
                  BOOL v97 = v23 == 1;
                }
                double v15 = v108;
                long double v4 = v109;
                double v21 = v107;
                if (!v97) {
                  break;
                }
                int v87 = 0;
                int v86 = 1;
                uint64_t v23 = -v77;
                if (__OFSUB__(0, v77)) {
                  goto LABEL_125;
                }
              }
              else
              {
                int v86 = 0;
                int v87 = 1;
                double v15 = v108;
                long double v4 = v109;
                double v21 = v107;
                uint64_t v23 = -v77;
                if (__OFSUB__(0, v77)) {
                  goto LABEL_125;
                }
              }
            }
            else
            {
              int v87 = 0;
              int v86 = 0;
              uint64_t v23 = -v77;
              if (__OFSUB__(0, v77)) {
                goto LABEL_125;
              }
            }
LABEL_115:
            if ((v87 | v86) == 1)
            {
              LOBYTE(v13) = v87 ^ 1;
            }
            else
            {
              long long v128 = xmmword_1DD04F320;
              long double v129 = 0.0;
              double v125 = v4;
              double v126 = v15;
              double v127 = v116;
              *(double *)&long long v118 = v19;
              *((double *)&v118 + 1) = v18;
              long double v119 = v61;
              v117[0] = v73;
              v117[1] = v74;
              v117[2] = v75;
              double v100 = v73;
              LOBYTE(v13) = _s18VisualIntelligence10S2EdgeUtilV14vertexCrossing1a1b1c1dSbAA0C5PointV_A3JtFZ_0((double *)&v128, &v125, (double *)&v118, v117);
              double v73 = v100;
            }
            v9 ^= v13;
            uint64_t v60 = v58;
            uint64_t v58 = v62;
            double v61 = v75;
            double v18 = v74;
            double v19 = v73;
          }
          int v86 = 0;
          int v87 = 1;
          uint64_t v23 = -v77;
          if (__OFSUB__(0, v77)) {
            goto LABEL_125;
          }
          goto LABEL_115;
        }
        uint64_t v54 = *(void *)(v5 + 48);
        BOOL v55 = __OFADD__(v54, v14);
        uint64_t v56 = v54 + v14;
        if (!v55)
        {
          if (v56 >= 31) {
            sub_1DCF4BA18();
          }
          goto LABEL_55;
        }
      }
      __break(1u);
LABEL_135:
      __break(1u);
      return v13;
    }
  }
  char v9 = 0;
LABEL_48:
  LOBYTE(v13) = v9 & 1;
  return v13;
}

uint64_t sub_1DCEAAEA0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[1];
  if (!v4) {
    goto LABEL_134;
  }
  uint64_t v5 = *(void *)result;
  uint64_t v109 = *v3;
  unint64_t v6 = *(void *)(*(void *)result + 16);
  __n128 result = swift_beginAccess();
  if ((*(unsigned char *)(v4 + 40) & 1) == 0 && *(void *)(*(void *)(v4 + 56) + 16) > 0x64uLL)
  {
    uint64_t v7 = *(void *)(v4 + 48);
    BOOL v8 = __OFADD__(v7, v6);
    uint64_t v9 = v7 + v6;
    if (v8) {
      goto LABEL_133;
    }
    if (v9 >= 31) {
      sub_1DCF4BA18();
    }
  }
  uint64_t v124 = v4;
  char v125 = 0;
  uint64_t v126 = 0;
  uint64_t v127 = 0;
  uint64_t v128 = MEMORY[0x1E4FBC860];
  uint64_t v129 = 0;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v10 = *(void *)(v109 + 16);
  uint64_t v11 = v5 + 32;
  __n128 result = swift_retain();
  unint64_t v12 = 0;
  uint64_t v87 = 1;
  uint64_t v100 = v5;
  uint64_t v88 = v5 + 32;
  unint64_t v89 = v6;
LABEL_10:
  unint64_t v13 = *(void *)(v5 + 16);
  if (v12 >= v13)
  {
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
    goto LABEL_126;
  }
  unint64_t v14 = v12 + 1;
  if (v12 + 1 >= v6) {
    unint64_t v15 = v6;
  }
  else {
    unint64_t v15 = 0;
  }
  unint64_t v102 = v14 - v15;
  if (v14 - v15 >= v13) {
    goto LABEL_125;
  }
  if (!*(void *)(v109 + 16))
  {
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
  unint64_t v95 = v12 + 1;
  uint64_t v16 = (double *)(v11 + 24 * v12);
  double v17 = v16[1];
  double v18 = v16[2];
  double v19 = (double *)(v11 + 24 * v102);
  double v20 = *v19;
  double v21 = v19[1];
  double v99 = v19 + 1;
  double v22 = v19[2];
  double v24 = *(double *)(v109 + 32);
  double v23 = *(double *)(v109 + 40);
  double v25 = *(double *)(v109 + 48);
  double v26 = v17 * v22 - v18 * v21;
  double v107 = v17;
  double v108 = *v16;
  *(double *)&long long v122 = v108;
  *((double *)&v122 + 1) = v17;
  double v106 = v18;
  double v123 = v18;
  double v111 = v21;
  double v112 = v20;
  *(double *)&long long v120 = v20;
  *((double *)&v120 + 1) = v21;
  double v110 = v22;
  double v121 = v22;
  *(double *)&long long v118 = v24;
  *((double *)&v118 + 1) = v23;
  double v119 = v25;
  *(double *)&long long v116 = v26;
  *((double *)&v116 + 1) = v18 * v20 - v108 * v22;
  double v104 = v108 * v21 - v17 * v20;
  double v105 = *((double *)&v116 + 1);
  double v117 = v104;
  __n128 result = _s18VisualIntelligence2S2V9robustCCW1a1b1c7aCrossBSiAA0C5PointV_A3JtFZ_0(&v122, &v120, (double *)&v118, (double *)&v116);
  uint64_t v31 = -result;
  if (__OFSUB__(0, result)) {
    goto LABEL_127;
  }
  double v92 = v16 + 2;
  double v32 = v16[2];
  long long v122 = *(_OWORD *)v16;
  double v123 = v32;
  uint64_t v103 = v19 + 2;
  double v33 = v19[2];
  double v98 = (double *)(v11 + 24 * v102);
  long long v120 = *(_OWORD *)v19;
  uint64_t v34 = v120;
  double v121 = v33;
  S2EdgeIndex.DataEdgeIterator.getCandidates(a:b:)(*(VisualIntelligence::S2Point *)(&v27 - 2), *(VisualIntelligence::S2Point *)&v28);
  char v113 = v125;
  uint64_t v35 = v126;
  uint64_t v101 = v127;
  uint64_t v36 = v11;
  uint64_t v37 = v128;
  uint64_t v38 = v129;
  uint64_t v96 = v128 + 32;
  if (v12 + 2 >= v6) {
    unint64_t v39 = v6;
  }
  else {
    unint64_t v39 = 0;
  }
  unint64_t v91 = v12 + 2 - v39;
  double v90 = (long long *)(v36 + 24 * v91);
  swift_retain();
  __n128 result = swift_bridgeObjectRetain();
  uint64_t v40 = -2;
  double v93 = v16;
  double v97 = v26;
  while (2)
  {
    uint64_t v41 = v40;
    double v42 = v24;
    double v43 = v23;
    double v44 = v25;
    uint64_t v45 = v109;
    uint64_t v46 = v109 + 32;
    double v47 = v103;
    double v49 = v104;
    double v48 = v105;
    while (1)
    {
      uint64_t v40 = v35;
      if (v113)
      {
        if (v35 >= v101) {
          goto LABEL_9;
        }
        ++v35;
      }
      else
      {
        uint64_t v50 = *(void *)(v37 + 16);
        if (v38 >= v50)
        {
LABEL_9:
          swift_bridgeObjectRelease();
          __n128 result = swift_release();
          ++v12;
          uint64_t v11 = v88;
          unint64_t v6 = v89;
          uint64_t v5 = v100;
          if (v95 != v89) {
            goto LABEL_10;
          }
          swift_bridgeObjectRelease();
          swift_release();
          return v87;
        }
        if (v38 + 1 >= v50)
        {
          ++v38;
        }
        else
        {
          if (v38 < -1) {
            goto LABEL_123;
          }
          uint64_t v35 = *(void *)(v96 + 8 * ++v38);
        }
      }
      if (__OFSUB__(v40, 1))
      {
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
        goto LABEL_124;
      }
      if (v41 != v40 - 1)
      {
        if (v40 >= v10) {
          uint64_t v51 = v10;
        }
        else {
          uint64_t v51 = 0;
        }
        uint64_t v52 = v40 - v51;
        if (v52 < 0) {
          goto LABEL_118;
        }
        if ((unint64_t)v52 >= *(void *)(v45 + 16)) {
          goto LABEL_119;
        }
        double v53 = (double *)(v46 + 24 * v52);
        double v42 = *v53;
        double v43 = v53[1];
        double v44 = v53[2];
        double v54 = v26 * *v53 + v48 * v43 + v49 * v44;
        if (v54 <= 1.6e-15)
        {
          if (v54 >= -1.6e-15)
          {
            *(double *)&long long v122 = v108;
            *((double *)&v122 + 1) = v107;
            double v123 = v106;
            *(double *)&long long v120 = v112;
            *((double *)&v120 + 1) = v111;
            double v121 = v110;
            *(double *)&long long v118 = v42;
            *((double *)&v118 + 1) = v43;
            double v119 = v44;
            __n128 result = sub_1DCE9357C((double *)&v122, (double *)&v120, (double *)&v118);
            double v49 = v104;
            double v48 = v105;
            double v47 = v103;
            uint64_t v46 = v109 + 32;
            uint64_t v45 = v109;
          }
          else
          {
            __n128 result = -1;
          }
        }
        else
        {
          __n128 result = 1;
        }
        uint64_t v31 = -result;
        if (__OFSUB__(0, result)) {
          goto LABEL_120;
        }
      }
      uint64_t v55 = v40 + 1;
      if (__OFADD__(v40, 1)) {
        goto LABEL_113;
      }
      if (v55 >= v10) {
        uint64_t v56 = v10;
      }
      else {
        uint64_t v56 = 0;
      }
      uint64_t v57 = v55 - v56;
      if (v57 < 0) {
        goto LABEL_114;
      }
      unint64_t v58 = *(void *)(v45 + 16);
      if (v57 >= v58) {
        goto LABEL_115;
      }
      uint64_t v59 = (double *)(v46 + 24 * v57);
      double v24 = *v59;
      double v23 = v59[1];
      double v25 = v59[2];
      double v60 = v26 * *v59 + v48 * v23 + v49 * v25;
      if (v60 <= 1.6e-15)
      {
        if (v60 >= -1.6e-15)
        {
          *(double *)&long long v122 = v108;
          *((double *)&v122 + 1) = v107;
          double v123 = v106;
          *(double *)&long long v120 = v112;
          *((double *)&v120 + 1) = v111;
          double v121 = v110;
          *(double *)&long long v118 = v24;
          *((double *)&v118 + 1) = v23;
          double v119 = v25;
          __n128 result = sub_1DCE9357C((double *)&v122, (double *)&v120, (double *)&v118);
          double v49 = v104;
          double v48 = v105;
          double v47 = v103;
          uint64_t v46 = v109 + 32;
          uint64_t v45 = v109;
          uint64_t v61 = result;
        }
        else
        {
          uint64_t v61 = -1;
        }
      }
      else
      {
        uint64_t v61 = 1;
      }
      if (__OFSUB__(0, v31)) {
        goto LABEL_116;
      }
      if (v61 != -v31 || !v61)
      {
        if ((v61 & v31) == 0)
        {
          char v63 = 0;
          int v62 = 0;
          uint64_t v31 = -v61;
          if (__OFSUB__(0, v61)) {
            goto LABEL_117;
          }
          goto LABEL_82;
        }
        double v64 = v43 * v25 - v44 * v23;
        double v65 = v44 * v24 - v42 * v25;
        double v66 = v42 * v23 - v43 * v24;
        double v67 = v110 * v66 + v112 * v64 + v111 * v65;
        if (v67 <= 1.6e-15)
        {
          if (v67 >= -1.6e-15)
          {
            *(double *)&long long v122 = v42;
            *((double *)&v122 + 1) = v43;
            double v123 = v44;
            *(double *)&long long v120 = v24;
            *((double *)&v120 + 1) = v23;
            double v121 = v25;
            *(double *)&long long v118 = v112;
            *((double *)&v118 + 1) = v111;
            double v119 = v110;
            __n128 result = sub_1DCE9357C((double *)&v122, (double *)&v120, (double *)&v118);
            double v64 = v43 * v25 - v44 * v23;
            double v49 = v104;
            double v48 = v105;
            double v47 = v103;
            uint64_t v46 = v109 + 32;
            uint64_t v45 = v109;
          }
          else
          {
            __n128 result = -1;
          }
        }
        else
        {
          __n128 result = 1;
        }
        if (__OFSUB__(0, result)) {
          goto LABEL_122;
        }
        if (-result != v31)
        {
          int v62 = 0;
          char v63 = 1;
          double v26 = v97;
          uint64_t v31 = -v61;
          if (__OFSUB__(0, v61)) {
            goto LABEL_117;
          }
          goto LABEL_82;
        }
        double v68 = v106 * v66 + v108 * v64 + v107 * v65;
        if (v68 <= 1.6e-15)
        {
          if (v68 >= -1.6e-15)
          {
            *(double *)&long long v122 = v42;
            *((double *)&v122 + 1) = v43;
            double v123 = v44;
            *(double *)&long long v120 = v24;
            *((double *)&v120 + 1) = v23;
            double v121 = v25;
            *(double *)&long long v118 = v108;
            *((double *)&v118 + 1) = v107;
            double v119 = v106;
            __n128 result = sub_1DCE9357C((double *)&v122, (double *)&v120, (double *)&v118);
            double v49 = v104;
            double v48 = v105;
            double v47 = v103;
            uint64_t v46 = v109 + 32;
            uint64_t v45 = v109;
            double v26 = v97;
            if (result == v31)
            {
LABEL_81:
              char v63 = 0;
              int v62 = 1;
              uint64_t v31 = -v61;
              if (__OFSUB__(0, v61)) {
                goto LABEL_117;
              }
              goto LABEL_82;
            }
          }
          else
          {
            double v26 = v97;
            if (v31 == -1) {
              goto LABEL_81;
            }
          }
        }
        else
        {
          double v26 = v97;
          if (v31 == 1) {
            goto LABEL_81;
          }
        }
      }
      int v62 = 0;
      char v63 = 1;
      uint64_t v31 = -v61;
      if (__OFSUB__(0, v61)) {
        goto LABEL_117;
      }
LABEL_82:
      uint64_t v41 = v40;
      double v42 = v24;
      double v43 = v23;
      double v44 = v25;
      if ((v63 & 1) == 0)
      {
        if (v62)
        {
          swift_bridgeObjectRelease_n();
          swift_release_n();
          return -1;
        }
        unint64_t v69 = *(void *)(v100 + 16);
        if (v102 >= v69) {
          goto LABEL_121;
        }
        double v70 = v59[2];
        double v71 = v59[1];
        double v72 = *v59;
        BOOL v73 = *v59 == *v98 && v71 == *v99;
        BOOL v74 = v73 && v70 == *v47;
        uint64_t v41 = v40;
        double v42 = v24;
        double v43 = v23;
        double v44 = v25;
        if (v74) {
          break;
        }
      }
    }
    if (v40 >= v10) {
      uint64_t v75 = v10;
    }
    else {
      uint64_t v75 = 0;
    }
    unint64_t v76 = v40 - v75;
    if (v76 >= v58) {
      goto LABEL_128;
    }
    uint64_t v77 = v46 + 24 * v76;
    double v78 = *(double *)(v77 + 16);
    long long v122 = *(_OWORD *)v77;
    double v123 = v78;
    *(double *)&long long v120 = v72;
    *((double *)&v120 + 1) = v71;
    double v121 = v70;
    uint64_t v79 = v40 + 2;
    if (__OFADD__(v40, 2)) {
      goto LABEL_129;
    }
    if (v79 >= v10) {
      uint64_t v80 = v10;
    }
    else {
      uint64_t v80 = 0;
    }
    unint64_t v81 = v79 - v80;
    if (v81 < v58)
    {
      double v82 = (double *)(v46 + 24 * v81);
      double v83 = v82[2];
      long long v118 = *(_OWORD *)v82;
      double v119 = v83;
      if (v12 >= v69) {
        goto LABEL_131;
      }
      double v84 = *v92;
      long long v116 = *(_OWORD *)v93;
      double v117 = v84;
      if (v91 >= v69) {
        goto LABEL_132;
      }
      uint64_t v85 = *((void *)v90 + 2);
      long long v114 = *v90;
      uint64_t v115 = v85;
      __n128 result = (*(uint64_t (**)(long long *, long long *, long long *, long long *, long long *))(a3 + 8))(&v122, &v120, &v118, &v116, &v114);
      uint64_t v86 = v87;
      if (result < v87) {
        uint64_t v86 = result;
      }
      uint64_t v87 = v86;
      if (v86 < 0)
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();
        return v87;
      }
      continue;
    }
    break;
  }
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
  return result;
}

BOOL S2Loop.intersects(with:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double v7 = *(double *)a1;
  double v6 = *(double *)(a1 + 8);
  double v9 = *(double *)(a1 + 16);
  double v8 = *(double *)(a1 + 24);
  double v11 = *(double *)(a1 + 32);
  double v10 = *(double *)(a1 + 40);
  double v13 = *(double *)(a1 + 48);
  double v12 = *(double *)(a1 + 56);
  char v43 = *(unsigned char *)(a1 + 64);
  double v14 = *(double *)(v5 + 8);
  uint64_t v44 = *(void *)(a1 + 72);
  double v45 = *(double *)v5;
  double v15 = *(double *)(v5 + 16);
  double v16 = *(double *)(v5 + 24);
  double v18 = *(double *)(v5 + 32);
  double v17 = *(double *)(v5 + 40);
  double v20 = *(double *)(v5 + 48);
  double v19 = *(double *)(v5 + 56);
  char v21 = *(unsigned char *)(v5 + 64);
  uint64_t v22 = *(void *)(v5 + 72);
  double v55 = v18;
  double v56 = v17;
  double v57 = v20;
  double v58 = v19;
  *(double *)&long long v46 = v11;
  *((double *)&v46 + 1) = v10;
  double v47 = v13;
  double v48 = v12;
  BOOL result = S2LatLngRect.intersects(with:)(*(VisualIntelligence::S2LatLngRect *)&a2);
  if (!result) {
    goto LABEL_33;
  }
  double v25 = v12 - v13;
  if (v12 - v13 >= 0.0)
  {
    double v26 = v45;
    goto LABEL_11;
  }
  double v25 = v25 + 6.28318531;
  double v26 = v45;
  if (v25 > 0.0)
  {
LABEL_11:
    double v30 = v19 - v20;
    if (v19 - v20 < 0.0 && (uint64_t v24 = 0x401921FB54442D18, v30 = v30 + 6.28318531, v30 <= 0.0))
    {
      if (v25 <= -1.0) {
        goto LABEL_16;
      }
    }
    else if (v30 >= v25)
    {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  double v27 = v19 - v20;
  if (v19 - v20 >= 0.0)
  {
    if (v27 >= -1.0) {
      goto LABEL_16;
    }
LABEL_14:
    double v55 = v7;
    double v56 = v6;
    double v57 = v9;
    double v58 = v8;
    double v59 = v11;
    double v60 = v10;
    double v61 = v13;
    double v62 = v12;
    char v63 = v43;
    uint64_t v64 = v44;
    *(double *)&long long v46 = v26;
    *((double *)&v46 + 1) = v14;
    double v47 = v15;
    double v48 = v16;
    double v49 = v18;
    double v50 = v17;
    double v51 = v20;
    double v52 = v19;
    char v53 = v21;
    uint64_t v54 = v22;
    char v31 = S2Loop.intersects(with:)(&v46);
    return v31 & 1;
  }
  double v28 = v27 + 6.28318531;
  if (v28 > 0.0 && v28 < -1.0) {
    goto LABEL_14;
  }
LABEL_16:
  double v55 = v26;
  double v56 = v14;
  double v57 = v15;
  double v58 = v16;
  double v59 = v18;
  double v60 = v17;
  double v61 = v20;
  double v62 = v19;
  char v63 = v21;
  uint64_t v64 = v22;
  if (!*(void *)(*(void *)&v7 + 16))
  {
    __break(1u);
    goto LABEL_39;
  }
  double v32 = *(double *)(*(void *)&v7 + 48);
  long long v46 = *(_OWORD *)(*(void *)&v7 + 32);
  uint64_t v33 = v46;
  double v47 = v32;
  BOOL result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v24 - 2));
  if (!result) {
    goto LABEL_22;
  }
  if (!*(void *)(*(void *)&v7 + 16))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (!*(void *)(*(void *)&v15 + 16)) {
    goto LABEL_34;
  }
  unint64_t v34 = sub_1DCEAD914(*(double *)(*(void *)&v7 + 32), *(double *)(*(void *)&v7 + 40), *(double *)(*(void *)&v7 + 48));
  if ((v35 & 1) == 0 || (*(void *)(*(void *)(*(void *)&v15 + 56) + 8 * v34) & 0x8000000000000000) != 0) {
    goto LABEL_34;
  }
LABEL_22:
  double v55 = v45;
  double v56 = v14;
  double v57 = v15;
  double v58 = v16;
  double v59 = v18;
  double v60 = v17;
  double v61 = v20;
  double v62 = v19;
  char v63 = v21;
  uint64_t v64 = v22;
  *(double *)&long long v46 = v7;
  *((double *)&v46 + 1) = v6;
  double v47 = v9;
  double v48 = v8;
  double v49 = v11;
  double v50 = v10;
  double v51 = v13;
  double v52 = v12;
  char v53 = v43;
  uint64_t v54 = v44;
  if (sub_1DCEAAEA0((uint64_t)&v46, (uint64_t)&type metadata for WedgeIntersects, (uint64_t)&protocol witness table for WedgeIntersects) < 0)goto LABEL_34; {
  if (v17 >= v18 && (v11 > v18 || v17 > v10))
  }
    goto LABEL_33;
  double v55 = v13;
  double v56 = v12;
  *(double *)&long long v46 = v20;
  *((double *)&v46 + 1) = v19;
  BOOL result = S1Interval.contains(interval:)((VisualIntelligence::S1Interval)__PAIR128__(v37, v36));
  if (!result) {
    goto LABEL_33;
  }
  double v55 = v7;
  double v56 = v6;
  double v57 = v9;
  double v58 = v8;
  double v59 = v11;
  double v60 = v10;
  double v61 = v13;
  double v62 = v12;
  char v63 = v43;
  uint64_t v64 = v44;
  if (!*(void *)(*(void *)&v45 + 16)) {
    goto LABEL_40;
  }
  double v39 = *(double *)(*(void *)&v45 + 48);
  long long v46 = *(_OWORD *)(*(void *)&v45 + 32);
  uint64_t v40 = v46;
  double v47 = v39;
  BOOL result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v38 - 2));
  if (!result)
  {
LABEL_33:
    char v31 = 0;
    return v31 & 1;
  }
  if (*(void *)(*(void *)&v45 + 16))
  {
    if (*(void *)(*(void *)&v9 + 16))
    {
      unint64_t v41 = sub_1DCEAD914(*(double *)(*(void *)&v45 + 32), *(double *)(*(void *)&v45 + 40), *(double *)(*(void *)&v45 + 48));
      if ((v42 & 1) != 0 && (*(void *)(*(void *)(*(void *)&v9 + 56) + 8 * v41) & 0x8000000000000000) == 0) {
        goto LABEL_33;
      }
    }
LABEL_34:
    char v31 = 1;
    return v31 & 1;
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t S2Loop.containsNested(other:)(double *a1)
{
  double v2 = *a1;
  double v3 = a1[4];
  double v4 = a1[5];
  long long v5 = *((_OWORD *)a1 + 3);
  double v6 = *v1;
  uint64_t v7 = *((void *)v1 + 1);
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v9 = *((void *)v1 + 3);
  double v10 = v1[4];
  double v11 = v1[5];
  uint64_t v12 = *((void *)v1 + 6);
  uint64_t v13 = *((void *)v1 + 7);
  char v14 = *((unsigned char *)v1 + 64);
  uint64_t v15 = *((void *)v1 + 9);
  if (v4 >= v3 && (v10 > v3 || v4 > v11)) {
    return 0;
  }
  *(double *)&long long v58 = v1[6];
  *((void *)&v58 + 1) = v13;
  long long v56 = v5;
  unint64_t result = S1Interval.contains(interval:)((VisualIntelligence::S1Interval)__PAIR128__(*(unint64_t *)&v3, v5));
  if ((result & 1) == 0) {
    return 0;
  }
  unint64_t v19 = *(void *)(*(void *)&v2 + 16);
  if (v19 > 1) {
    uint64_t v20 = 1;
  }
  else {
    uint64_t v20 = 1 - v19;
  }
  if (v20 >= (uint64_t)v19)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  unint64_t v49 = *(void *)(*(void *)&v2 + 16);
  uint64_t v21 = *(void *)&v2 + 32;
  if (!*(void *)(v8 + 16)
    || (result = sub_1DCEAD914(*(double *)(v21 + 24 * v20), *(double *)(v21 + 24 * v20 + 8), *(double *)(v21 + 24 * v20 + 16)), (v22 & 1) == 0)|| (unint64_t v23 = *(void *)(*(void *)(v8 + 56) + 8 * result), (v23 & 0x8000000000000000) != 0))
  {
    *(double *)&long long v58 = v6;
    *((void *)&v58 + 1) = v7;
    uint64_t v59 = v8;
    uint64_t v60 = v9;
    double v61 = v10;
    double v62 = v11;
    uint64_t v63 = v12;
    uint64_t v64 = v13;
    char v65 = v14;
    uint64_t v66 = v15;
    if (v20 < *(void *)(*(void *)&v2 + 16))
    {
      long long v46 = (uint64_t *)(v21 + 24 * v20);
      uint64_t v48 = *v46;
      uint64_t v47 = v46[2];
      return S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v18 - 2));
    }
    goto LABEL_36;
  }
  unint64_t v24 = *(void *)(*(void *)&v6 + 16);
  uint64_t v25 = -1;
  if (v23 > v24) {
    uint64_t v25 = ~v24;
  }
  unint64_t v26 = v25 + v23;
  if (v25 + v23 >= v24) {
    goto LABEL_37;
  }
  uint64_t v27 = *(void *)&v6 + 32;
  uint64_t v28 = *(void *)&v6 + 32 + 24 * v26;
  uint64_t v29 = *(void *)(v28 + 16);
  long long v58 = *(_OWORD *)v28;
  uint64_t v59 = v29;
  if (v23 >= v24) {
    unint64_t v30 = v24;
  }
  else {
    unint64_t v30 = 0;
  }
  unint64_t v31 = v23 - v30;
  if (v31 >= v24) {
    goto LABEL_38;
  }
  double v32 = (long long *)(v27 + 24 * v31);
  uint64_t v33 = *((void *)v32 + 2);
  long long v56 = *v32;
  uint64_t v57 = v33;
  BOOL v34 = __OFADD__(v23, 1);
  unint64_t v35 = v23 + 1;
  if (v34)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v35 >= v24) {
    unint64_t v36 = v24;
  }
  else {
    unint64_t v36 = 0;
  }
  unint64_t v37 = v35 - v36;
  if (v37 >= v24) {
    goto LABEL_40;
  }
  uint64_t v38 = (long long *)(v27 + 24 * v37);
  uint64_t v39 = *((void *)v38 + 2);
  long long v54 = *v38;
  uint64_t v55 = v39;
  uint64_t v40 = *(void *)(*(void *)&v2 + 16);
  if (!v40)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v41 = *(void *)(*(void *)&v2 + 48);
  long long v52 = *(_OWORD *)(*(void *)&v2 + 32);
  uint64_t v53 = v41;
  uint64_t v42 = 2;
  if (v49 <= 2) {
    uint64_t v42 = 2 - v49;
  }
  if (v42 < v40)
  {
    uint64_t v43 = v21 + 24 * v42;
    uint64_t v44 = *(void *)(v43 + 16);
    long long v50 = *(_OWORD *)v43;
    uint64_t v51 = v44;
    return _s18VisualIntelligence13WedgeContainsV4test2a03ab12a22b02b2SiAA7S2PointV_A4KtFZ_0((uint64_t *)&v58, (uint64_t *)&v56, (uint64_t *)&v54, (uint64_t *)&v52, &v50) > 0;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t S2Loop.containsOrCrosses(other:)(double *a1, double a2, double a3, double a4, double a5)
{
  double v6 = *a1;
  uint64_t v7 = *((void *)a1 + 1);
  uint64_t v8 = *((void *)a1 + 2);
  uint64_t v33 = *((void *)a1 + 3);
  double v10 = a1[4];
  double v9 = a1[5];
  uint64_t v11 = *((void *)a1 + 6);
  uint64_t v12 = *((void *)a1 + 7);
  char v32 = *((unsigned char *)a1 + 64);
  uint64_t v31 = *((void *)a1 + 9);
  double v13 = *(double *)v5;
  double v14 = *(double *)(v5 + 8);
  double v16 = *(double *)(v5 + 16);
  double v15 = *(double *)(v5 + 24);
  double v17 = *(double *)(v5 + 32);
  double v18 = *(double *)(v5 + 40);
  double v19 = *(double *)(v5 + 48);
  double v20 = *(double *)(v5 + 56);
  char v21 = *(unsigned char *)(v5 + 64);
  uint64_t v22 = *(void *)(v5 + 72);
  double v43 = v17;
  double v44 = v18;
  double v45 = v19;
  double v46 = v20;
  *(double *)&long long v34 = v10;
  *((double *)&v34 + 1) = v9;
  uint64_t v35 = v11;
  uint64_t v36 = v12;
  if (!S2LatLngRect.intersects(with:)(*(VisualIntelligence::S2LatLngRect *)&a2)) {
    return 0;
  }
  double v43 = v13;
  double v44 = v14;
  double v45 = v16;
  double v46 = v15;
  double v47 = v17;
  double v48 = v18;
  double v49 = v19;
  double v50 = v20;
  char v51 = v21;
  uint64_t v52 = v22;
  *(double *)&long long v34 = v6;
  *((void *)&v34 + 1) = v7;
  uint64_t v35 = v8;
  uint64_t v36 = v33;
  double v37 = v10;
  double v38 = v9;
  uint64_t v39 = v11;
  uint64_t v40 = v12;
  char v41 = v32;
  uint64_t v42 = v31;
  uint64_t result = sub_1DCEAAEA0((uint64_t)&v34, (uint64_t)&type metadata for WedgeContainsOrCrosses, (uint64_t)&protocol witness table for WedgeContainsOrCrosses);
  if (result >= 1)
  {
    if (v9 < v10 || (uint64_t result = 0, v17 <= v10) && v9 <= v18)
    {
      double v43 = v19;
      double v44 = v20;
      *(void *)&long long v34 = v11;
      *((void *)&v34 + 1) = v12;
      uint64_t result = S1Interval.contains(interval:)((VisualIntelligence::S1Interval)__PAIR128__(v25, v24));
      if (result)
      {
        double v43 = v13;
        double v44 = v14;
        double v45 = v16;
        double v46 = v15;
        double v47 = v17;
        double v48 = v18;
        double v49 = v19;
        double v50 = v20;
        char v51 = v21;
        uint64_t v52 = v22;
        if (*(void *)(*(void *)&v6 + 16))
        {
          uint64_t v27 = *(void *)(*(void *)&v6 + 48);
          long long v34 = *(_OWORD *)(*(void *)&v6 + 32);
          uint64_t v28 = v34;
          uint64_t v35 = v27;
          uint64_t result = S2Loop.contains(point:)(*(VisualIntelligence::S2Point *)(&v26 - 2));
          if (result) {
            return 1;
          }
          if (*(void *)(*(void *)&v6 + 16))
          {
            if (*(void *)(*(void *)&v16 + 16))
            {
              unint64_t v29 = sub_1DCEAD914(*(double *)(*(void *)&v6 + 32), *(double *)(*(void *)&v6 + 40), *(double *)(*(void *)&v6 + 48));
              if ((v30 & 1) != 0
                && (*(void *)(*(void *)(*(void *)&v16 + 56) + 8 * v29) & 0x8000000000000000) == 0)
              {
                return 1;
              }
            }
            return 0;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        return result;
      }
      return 0;
    }
  }
  return result;
}

VisualIntelligence::S1Angle __swiftcall S2Loop.getDistance(to:)(VisualIntelligence::S2Point to)
{
  double v4 = v2;
  double v5 = *v1;
  double v6 = v1[1];
  *(VisualIntelligence::S1Angle *)&result.double radians = (VisualIntelligence::S1Angle)v1[2];
  uint64_t v8 = *v3;
  double v9 = sqrt(v5 * v5 + v6 * v6 + result.radians * result.radians);
  if (v9 != 0.0) {
    double v9 = 1.0 / v9;
  }
  unint64_t v10 = *(void *)(v8 + 16);
  if (!v10)
  {
    double v14 = 3.14159265;
LABEL_27:
    *double v4 = v14;
    return result;
  }
  uint64_t v11 = 0;
  double v12 = v5 * v9;
  double v13 = v6 * v9;
  double v14 = 3.14159265;
  double v15 = (double *)v8;
  double v16 = result.radians * v9;
  while (1)
  {
    uint64_t v27 = ++v11 >= v10 ? v10 : 0;
    if (v11 - v27 < 0) {
      break;
    }
    if ((unint64_t)(v11 - v27) >= *(void *)(v8 + 16)) {
      goto LABEL_29;
    }
    double v28 = v15[4];
    double v29 = v15[5];
    double v30 = v15[6];
    uint64_t v31 = &v15[-3 * v27];
    double v32 = v31[7];
    double v33 = v31[8];
    double v34 = v31[9];
    v45[0] = v12;
    v45[1] = v13;
    void v45[2] = v16;
    v44[0] = v28;
    v44[1] = v29;
    _OWORD v44[2] = v30;
    v43[0] = v32;
    v43[1] = v33;
    v43[2] = v34;
    double v35 = v28 + v32;
    double v36 = v29 + v33;
    double v37 = v32 - v28;
    double v38 = v33 - v29;
    double v24 = (v29 + v33) * (v34 - v30) - (v33 - v29) * (v30 + v34);
    double v25 = v37 * (v30 + v34) - v35 * (v34 - v30);
    double v26 = v35 * v38 - v37 * v36;
    if (v24 == 0.0 && v25 == 0.0 && v26 == 0.0)
    {
      double v39 = fabs(v28);
      double v40 = fabs(v29);
      double v41 = fabs(v30);
      if (v40 >= v39)
      {
        if (v41 >= v40) {
          goto LABEL_5;
        }
        double v17 = 0.0;
        double v18 = 1.0;
      }
      else
      {
        if (v41 < v39)
        {
          double v19 = 1.0;
          double v18 = 0.0;
          double v17 = 0.0;
          goto LABEL_7;
        }
LABEL_5:
        double v17 = 1.0;
        double v18 = 0.0;
      }
      double v19 = 0.0;
LABEL_7:
      double v20 = v29 * v19 - v30 * v17;
      double v21 = v30 * v18 - v28 * v19;
      double v22 = v28 * v17 - v29 * v18;
      double v23 = sqrt(v22 * v22 + v20 * v20 + v21 * v21);
      if (v23 != 0.0) {
        double v23 = 1.0 / v23;
      }
      double v24 = v20 * v23;
      double v25 = v21 * v23;
      double v26 = v22 * v23;
    }
    v42[0] = v24;
    v42[1] = v25;
    void v42[2] = v26;
    static S2EdgeUtil.getDistance(x:a:b:aCrossB:)(v45, v44, v43, v42, &v46);
    result.double radians = v46;
    if (v46 < v14) {
      double v14 = v46;
    }
    v15 += 3;
    if (v10 == v11) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void S2Loop.isValid.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = *(void *)(*v0 + 16);
  if (v2 < 3) {
    return;
  }
  uint64_t v3 = v0[1];
  uint64_t v4 = v1 + 32;
  double v5 = (float64x2_t *)(v1 + 40);
  uint64_t v6 = *(void *)(*v0 + 16);
  do
  {
    if (!v6)
    {
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
      goto LABEL_107;
    }
    float64x2_t v7 = vmulq_f64(*v5, *v5);
    if (fabs(v5[-1].f64[1] * v5[-1].f64[1] + v7.f64[0] + v7.f64[1] + -1.0) > 1.0e-15) {
      return;
    }
    double v5 = (float64x2_t *)((char *)v5 + 24);
    --v6;
  }
  while (v6);
  unint64_t v8 = 0;
  uint64_t v142 = MEMORY[0x1E4FBC870];
  double v9 = (double *)(v1 + 48);
  for (i = v2; i != v8; unint64_t v2 = i)
  {
    if (v2 == v8) {
      goto LABEL_100;
    }
    if (v8 >= *(void *)(v1 + 16)) {
      goto LABEL_101;
    }
    if ((sub_1DCF5213C((double *)&v119, *(v9 - 2), *(v9 - 1), *v9) & 1) == 0)
    {
LABEL_90:
      swift_bridgeObjectRelease();
      return;
    }
    ++v8;
    v9 += 3;
  }
  if (!v3) {
    goto LABEL_110;
  }
  swift_beginAccess();
  if ((*(unsigned char *)(v3 + 40) & 1) == 0 && *(void *)(*(void *)(v3 + 56) + 16) > 0x64uLL)
  {
    uint64_t v10 = *(void *)(v3 + 48);
    BOOL v11 = __OFADD__(v10, i);
    uint64_t v12 = v10 + i;
    if (!v11)
    {
      if (v12 >= 31) {
        sub_1DCF4BA18();
      }
      goto LABEL_17;
    }
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
    return;
  }
LABEL_17:
  uint64_t v136 = v3;
  unsigned __int8 v137 = 0;
  uint64_t v138 = 0;
  uint64_t v139 = 0;
  uint64_t v140 = MEMORY[0x1E4FBC860];
  uint64_t v141 = 0;
  swift_retain();
  unint64_t v13 = 0;
  uint64_t v109 = v1 + 32;
  uint64_t v110 = v1;
  int64_t v14 = i;
  while (2)
  {
    if (v13 == v14) {
      goto LABEL_102;
    }
    unint64_t v102 = v13 + 1;
    if (v13 + 1 == v14) {
      unint64_t v15 = 0;
    }
    else {
      unint64_t v15 = v13 + 1;
    }
    unint64_t v16 = *(void *)(v1 + 16);
    if (v13 >= v16) {
      goto LABEL_103;
    }
    if (v15 >= v16) {
      goto LABEL_104;
    }
    double v17 = (double *)(v4 + 24 * v13);
    double v18 = v17;
    double v19 = v17[1];
    double v20 = *v17;
    long long v116 = v17;
    double v21 = v17[2];
    uint64_t v115 = v17 + 2;
    double v22 = (double *)(v4 + 24 * v15);
    double v23 = *v22;
    double v24 = v22[1];
    double v107 = v22 + 1;
    double v108 = v18 + 1;
    long long v114 = v22;
    double v25 = v22[2];
    char v113 = v22 + 2;
    double v26 = *(double *)(v1 + 32);
    double v27 = *(double *)(v1 + 40);
    double v28 = *(double *)(v1 + 48);
    double v29 = v19 * v25 - v21 * v24;
    double v92 = v21;
    *(double *)&long long v93 = v20;
    double v89 = v25;
    double v90 = v24;
    double v30 = v21 * *v22 - v20 * v25;
    *((double *)&v93 + 1) = v19;
    double v91 = *v22;
    double v31 = v20 * v24 - v19 * *v22;
    double v98 = v30;
    double v99 = v29;
    double v97 = v31;
    double v32 = v26 * v29 + v30 * v27 + v31 * v28;
    unint64_t v117 = v15;
    if (v32 <= 1.6e-15)
    {
      if (v32 < -1.6e-15)
      {
        uint64_t v33 = 1;
        goto LABEL_30;
      }
      long long v119 = v93;
      double v120 = v92;
      *(double *)&long long v134 = v91;
      *((double *)&v134 + 1) = v24;
      double v135 = v25;
      double v131 = v26;
      double v132 = v27;
      double v133 = v28;
      uint64_t v34 = sub_1DCE9357C((double *)&v119, (double *)&v134, &v131);
      uint64_t v33 = -v34;
      if (!__OFSUB__(0, v34)) {
        goto LABEL_30;
      }
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      goto LABEL_109;
    }
    uint64_t v33 = -1;
LABEL_30:
    double v35 = *v115;
    long long v119 = *(_OWORD *)v116;
    double v120 = v35;
    double v36 = *v113;
    long long v134 = *(_OWORD *)v114;
    uint64_t v37 = v134;
    double v135 = v36;
    S2EdgeIndex.DataEdgeIterator.getCandidates(a:b:)(*(VisualIntelligence::S2Point *)(&v31 - 2), *(VisualIntelligence::S2Point *)&v20);
    uint64_t v38 = v137;
    uint64_t v39 = v138;
    uint64_t v40 = v141;
    uint64_t v111 = v139;
    uint64_t v112 = v140;
    uint64_t v103 = v140 + 32;
    unint64_t v41 = -2;
    unint64_t v42 = v117;
    int64_t v14 = i;
    while (2)
    {
      unint64_t v100 = v41;
      uint64_t v101 = v33;
      double v94 = v28;
      double v95 = v27;
      double v96 = v26;
LABEL_33:
      int64_t v43 = v39;
      if (v38)
      {
        if (v39 >= v111) {
          break;
        }
        ++v39;
        goto LABEL_41;
      }
      uint64_t v44 = *(void *)(v112 + 16);
      if (v40 < v44)
      {
        if (v40 + 1 >= v44)
        {
          ++v40;
        }
        else
        {
          if (v40 < -1) {
            goto LABEL_98;
          }
          uint64_t v39 = *(void *)(v103 + 8 * ++v40);
        }
LABEL_41:
        uint64_t v45 = v43 + 1;
        if (__OFADD__(v43, 1))
        {
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
          goto LABEL_99;
        }
        unint64_t v41 = v45 % v14;
        if (v13 != v45 % v14 && v42 != v43 && v13 != v43)
        {
          unint64_t v48 = *(void *)(v110 + 16);
          if (v13 >= v48) {
            goto LABEL_94;
          }
          if (v42 >= v48) {
            goto LABEL_95;
          }
          if (v43 >= v14) {
            int64_t v49 = v14;
          }
          else {
            int64_t v49 = 0;
          }
          unint64_t v50 = v43 - v49;
          if (v50 >= v48) {
            goto LABEL_96;
          }
          uint64_t v51 = v40;
          uint64_t v52 = v38;
          double v53 = *v114;
          double v54 = *v107;
          double v55 = *v113;
          long long v56 = (double *)(v109 + 24 * v50);
          double v58 = *v56;
          double v57 = v56[1];
          double v59 = v56[2];
          double v60 = *v108 * *v113 - *v115 * *v107;
          double v61 = *v115 * *v114 - *v116 * *v113;
          double v62 = *v116 * *v107 - *v108 * *v114;
          double v63 = *v113 * v57 - *v107 * v59;
          double v104 = v59;
          double v64 = *v114 * v59 - *v113 * *v56;
          double v106 = v57;
          double v65 = *v107 * *v56 - *v114 * v57;
          double v66 = atan2(sqrt((v60 * v64 - v61 * v63) * (v60 * v64 - v61 * v63)+ (v61 * v65 - v62 * v64) * (v61 * v65 - v62 * v64)+ (v62 * v63 - v60 * v65) * (v62 * v63 - v60 * v65)), v62 * v65 + v60 * v63 + v61 * v64);
          BOOL v67 = fabs(v66) <= 1.0e-15;
          char v68 = fabs(v66 + -3.14159265) <= 1.0e-15 || v67;
          if (v41 >= v48) {
            goto LABEL_97;
          }
          unint64_t v69 = (double *)(v109 + 24 * v41);
          double v70 = v69[1];
          double v71 = v69[2];
          double v72 = v55 * v70 - v54 * v71;
          double v105 = v71;
          double v73 = v53 * v71 - v55 * *v69;
          double v74 = v54 * *v69;
          double v26 = *v69;
          double v75 = v53 * v70;
          double v76 = v70;
          double v77 = v74 - v75;
          double v78 = atan2(sqrt((v60 * v73 - v61 * v72) * (v60 * v73 - v61 * v72)+ (v61 * v77 - v62 * v73) * (v61 * v77 - v62 * v73)+ (v62 * v72 - v60 * v77) * (v62 * v72 - v60 * v77)), v62 * v77 + v60 * v72 + v61 * v73);
          if (fabs(v78) <= 1.0e-15)
          {
            unint64_t v42 = v117;
            int64_t v14 = i;
            uint64_t v38 = v52;
            uint64_t v40 = v51;
            if ((v68 & 1) == 0) {
              goto LABEL_64;
            }
          }
          else
          {
            if (fabs(v78 + -3.14159265) <= 1.0e-15) {
              char v79 = v68;
            }
            else {
              char v79 = 0;
            }
            unint64_t v42 = v117;
            int64_t v14 = i;
            uint64_t v38 = v52;
            uint64_t v40 = v51;
            if ((v79 & 1) == 0)
            {
LABEL_64:
              uint64_t v80 = v101;
              double v81 = v105;
              if (v100 != v43)
              {
                double v82 = v104;
                double v83 = v99 * v58 + v98 * v106 + v97 * v104;
                if (v83 <= 1.6e-15)
                {
                  if (v83 >= -1.6e-15)
                  {
                    long long v119 = v93;
                    double v120 = v92;
                    *(double *)&long long v134 = v91;
                    *((double *)&v134 + 1) = v90;
                    double v135 = v89;
                    double v131 = v58;
                    double v132 = v106;
                    double v133 = v104;
                    uint64_t v84 = sub_1DCE9357C((double *)&v119, (double *)&v134, &v131);
                    double v82 = v104;
                    unint64_t v42 = v117;
                    int64_t v14 = i;
                    uint64_t v40 = v51;
                    uint64_t v38 = v52;
                  }
                  else
                  {
                    uint64_t v84 = -1;
                  }
                }
                else
                {
                  uint64_t v84 = 1;
                }
                uint64_t v80 = -v84;
                if (__OFSUB__(0, v84)) {
                  goto LABEL_108;
                }
                double v26 = *v69;
                double v76 = v69[1];
                double v95 = v106;
                double v96 = v58;
                double v94 = v82;
                double v81 = v69[2];
              }
              double v85 = v99 * v26 + v98 * v76 + v97 * v81;
              if (v85 <= 1.6e-15)
              {
                if (v85 >= -1.6e-15)
                {
                  long long v119 = v93;
                  double v120 = v92;
                  *(double *)&long long v134 = v91;
                  *((double *)&v134 + 1) = v90;
                  double v135 = v89;
                  double v131 = v26;
                  double v132 = v76;
                  double v133 = v81;
                  uint64_t v87 = sub_1DCE9357C((double *)&v119, (double *)&v134, &v131);
                  unint64_t v42 = v117;
                  int64_t v14 = i;
                  uint64_t v40 = v51;
                  uint64_t v38 = v52;
                  uint64_t v86 = v87;
                }
                else
                {
                  uint64_t v86 = -1;
                }
              }
              else
              {
                uint64_t v86 = 1;
              }
              if (__OFSUB__(0, v80)) {
                goto LABEL_105;
              }
              if (v86 == -v80 && v86)
              {
                uint64_t v88 = -1;
                uint64_t v33 = -v86;
                if (__OFSUB__(0, v86)) {
                  goto LABEL_106;
                }
              }
              else if ((v86 & v80) != 0)
              {
                long long v119 = v93;
                double v120 = v92;
                double v121 = v91;
                double v122 = v90;
                double v123 = v89;
                double v124 = v99;
                double v125 = v98;
                double v126 = v97;
                double v127 = v96;
                double v128 = v95;
                double v129 = v94;
                uint64_t v130 = v80;
                *(double *)&long long v134 = v26;
                *((double *)&v134 + 1) = v76;
                double v135 = v81;
                uint64_t v88 = sub_1DCDDD694((double *)&v134);
                unint64_t v42 = v117;
                int64_t v14 = i;
                uint64_t v40 = v51;
                uint64_t v38 = v52;
                uint64_t v33 = -v86;
                if (__OFSUB__(0, v86)) {
                  goto LABEL_106;
                }
              }
              else
              {
                uint64_t v88 = 0;
                uint64_t v33 = -v86;
                if (__OFSUB__(0, v86)) {
                  goto LABEL_106;
                }
              }
              double v27 = v76;
              double v28 = v81;
              if (v88 >= 1)
              {
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_90;
              }
              continue;
            }
          }
        }
        goto LABEL_33;
      }
      break;
    }
    ++v13;
    uint64_t v4 = v109;
    uint64_t v1 = v110;
    if (v102 != v14) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
}

void S2Loop.capBound.getter(double *a1@<X8>)
{
}

BOOL S2Loop.contains(cell:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  char v4 = *((unsigned char *)a1 + 9);
  char v5 = *((unsigned char *)a1 + 10);
  uint64_t v6 = a1[2];
  uint64_t v7 = *((void *)v1 + 2);
  uint64_t v27 = *((void *)v1 + 1);
  double v28 = *v1;
  uint64_t v8 = *((void *)v1 + 3);
  double v9 = v1[4];
  double v10 = v1[5];
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v12 = *((void *)v1 + 7);
  char v13 = *((unsigned char *)v1 + 64);
  uint64_t v14 = *((void *)v1 + 9);
  *(void *)&long long v29 = *a1;
  BYTE8(v29) = v3;
  BYTE9(v29) = v4;
  BYTE10(v29) = v5;
  *(void *)&long long v30 = v6;
  S2Cell.rectBound.getter(&v40);
  long long v17 = v40;
  long long v18 = v41;
  if (*((double *)&v40 + 1) < *(double *)&v40 || (BOOL v19 = 0, v9 <= *(double *)&v40) && *((double *)&v40 + 1) <= v10)
  {
    *(void *)&long long v40 = v11;
    *((void *)&v40 + 1) = v12;
    long long v29 = v41;
    if (S1Interval.contains(interval:)((VisualIntelligence::S1Interval)__PAIR128__(v16, v15)))
    {
      uint64_t v35 = v2;
      char v36 = v3;
      char v37 = v4;
      char v38 = v5;
      uint64_t v39 = v6;
      long long v29 = v17;
      long long v30 = v18;
      swift_bridgeObjectRetain();
      S2Loop.init(cell:bound:)((double *)&v29, (uint64_t)&v40);
      long long v20 = v40;
      long long v21 = v41;
      char v22 = v44;
      uint64_t v23 = v45;
      long long v24 = v42;
      long long v25 = v43;
      *(double *)&long long v40 = v28;
      *((void *)&v40 + 1) = v27;
      *(void *)&long long v41 = v7;
      *((void *)&v41 + 1) = v8;
      *(double *)&long long v42 = v9;
      *((double *)&v42 + 1) = v10;
      *(void *)&long long v43 = v11;
      *((void *)&v43 + 1) = v12;
      char v44 = v13;
      uint64_t v45 = v14;
      long long v29 = v20;
      long long v30 = v21;
      long long v31 = v24;
      long long v32 = v25;
      char v33 = v22;
      uint64_t v34 = v23;
      BOOL v19 = S2Loop.contains(other:)((uint64_t)&v29, *(double *)&v24, *(double *)&v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      return 0;
    }
  }
  return v19;
}

BOOL S2Loop.mayIntersect(cell:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  char v4 = *((unsigned char *)a1 + 9);
  char v5 = *((unsigned char *)a1 + 10);
  uint64_t v6 = a1[2];
  uint64_t v7 = v1[1];
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  uint64_t v11 = v1[5];
  uint64_t v12 = v1[6];
  uint64_t v13 = v1[7];
  char v14 = *((unsigned char *)v1 + 64);
  uint64_t v22 = v1[9];
  uint64_t v23 = *v1;
  S2Cell.rectBound.getter(&v38);
  long long v15 = v38;
  uint64_t v16 = v39;
  uint64_t v17 = v40;
  *(void *)&long long v38 = v10;
  *((void *)&v38 + 1) = v11;
  uint64_t v39 = v12;
  uint64_t v40 = v13;
  long long v24 = v15;
  uint64_t v25 = v16;
  uint64_t v26 = v17;
  if (S2LatLngRect.intersects(with:)(v43))
  {
    uint64_t v33 = v2;
    char v34 = v3;
    char v35 = v4;
    char v36 = v5;
    uint64_t v37 = v6;
    long long v24 = v15;
    uint64_t v25 = v16;
    uint64_t v26 = v17;
    swift_bridgeObjectRetain();
    S2Loop.init(cell:bound:)((double *)&v24, (uint64_t)&v38);
    *(void *)&long long v24 = v23;
    *((void *)&v24 + 1) = v7;
    uint64_t v25 = v8;
    uint64_t v26 = v9;
    uint64_t v27 = v10;
    uint64_t v28 = v11;
    uint64_t v29 = v12;
    uint64_t v30 = v13;
    char v31 = v14;
    uint64_t v32 = v22;
    BOOL v20 = S2Loop.intersects(with:)((uint64_t)&v24, v41, v42, v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    return 0;
  }
  return v20;
}

void sub_1DCEACDB4(double *a1@<X8>)
{
}

__n128 sub_1DCEACDE8@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 32);
  long long v3 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t < infix(_:_:)(void *a1, void *a2)
{
  unint64_t v2 = *(void *)(*a1 + 16);
  unint64_t v3 = *(void *)(*a2 + 16);
  if (v2 != v3) {
    return v2 < v3;
  }
  if (v2)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = a1[3];
    uint64_t v7 = a2[3];
    uint64_t v8 = *a2 + 24 * v7;
    uint64_t v9 = *a1 + 24 * v6;
    uint64_t v10 = v7 - 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v11 = v6 - 0x7FFFFFFFFFFFFFFFLL;
    while (1)
    {
      if (v6 + v5 >= (uint64_t)v2) {
        uint64_t result = v2;
      }
      else {
        uint64_t result = 0;
      }
      if (v6 + v5 - result >= v2)
      {
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        return result;
      }
      if (v7 + v5 >= (uint64_t)v2) {
        unint64_t v13 = v2;
      }
      else {
        unint64_t v13 = 0;
      }
      if (v7 + v5 - v13 >= v2) {
        goto LABEL_34;
      }
      char v14 = (double *)(v9 - 24 * result + v4);
      double v16 = v14[5];
      double v15 = v14[6];
      double v17 = v14[4];
      double v18 = (double *)(v8 - 24 * v13 + v4);
      double v20 = v18[4];
      double v19 = v18[5];
      double v21 = v18[6];
      BOOL v22 = v17 == v20 && v16 == v19;
      if (!v22 || v15 != v21) {
        break;
      }
      uint64_t result = v11 + v5;
      if (!(v11 + v5)) {
        goto LABEL_35;
      }
      uint64_t result = v10 + v5;
      if (!(v10 + v5)) {
        goto LABEL_36;
      }
      ++v5;
      v4 += 24;
      if (v2 == v5) {
        return 0;
      }
    }
    if (v17 < v20) {
      return 1;
    }
    if (v20 >= v17)
    {
      if (v16 < v19) {
        return 1;
      }
      if (v19 >= v16) {
        return v15 < v21;
      }
    }
  }
  return 0;
}

BOOL sub_1DCEACF28(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  char v4 = *((unsigned char *)a1 + 64);
  uint64_t v5 = *((void *)a1 + 9);
  long long v6 = *a2;
  uint64_t v7 = *((void *)a2 + 2);
  uint64_t v8 = *((void *)a2 + 3);
  char v9 = *((unsigned char *)a2 + 64);
  uint64_t v10 = *((void *)a2 + 9);
  long long v21 = *a1;
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  long long v11 = a1[3];
  long long v24 = a1[2];
  long long v25 = v11;
  char v26 = v4;
  uint64_t v27 = v5;
  long long v14 = v6;
  uint64_t v15 = v7;
  uint64_t v16 = v8;
  long long v12 = a2[3];
  long long v17 = a2[2];
  long long v18 = v12;
  char v19 = v9;
  uint64_t v20 = v10;
  return (< infix(_:_:)(&v14, &v21) & 1) == 0;
}

BOOL sub_1DCEACFA8(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  char v4 = *((unsigned char *)a1 + 64);
  uint64_t v5 = *((void *)a1 + 9);
  long long v6 = *a2;
  uint64_t v7 = *((void *)a2 + 2);
  uint64_t v8 = *((void *)a2 + 3);
  char v9 = *((unsigned char *)a2 + 64);
  uint64_t v10 = *((void *)a2 + 9);
  long long v21 = *a1;
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  long long v11 = a1[3];
  long long v24 = a1[2];
  long long v25 = v11;
  char v26 = v4;
  uint64_t v27 = v5;
  long long v14 = v6;
  uint64_t v15 = v7;
  uint64_t v16 = v8;
  long long v12 = a2[3];
  long long v17 = a2[2];
  long long v18 = v12;
  char v19 = v9;
  uint64_t v20 = v10;
  return (< infix(_:_:)(&v21, &v14) & 1) == 0;
}

uint64_t sub_1DCEAD028(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  char v4 = *((unsigned char *)a1 + 64);
  uint64_t v5 = *((void *)a1 + 9);
  long long v6 = *a2;
  uint64_t v7 = *((void *)a2 + 2);
  uint64_t v8 = *((void *)a2 + 3);
  char v9 = *((unsigned char *)a2 + 64);
  uint64_t v10 = *((void *)a2 + 9);
  long long v21 = *a1;
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  long long v11 = a1[3];
  long long v24 = a1[2];
  long long v25 = v11;
  char v26 = v4;
  uint64_t v27 = v5;
  long long v14 = v6;
  uint64_t v15 = v7;
  uint64_t v16 = v8;
  long long v12 = a2[3];
  long long v17 = a2[2];
  long long v18 = v12;
  char v19 = v9;
  uint64_t v20 = v10;
  return < infix(_:_:)(&v14, &v21) & 1;
}

unint64_t == infix(_:_:)(void *a1, void *a2)
{
  unint64_t v2 = *(void *)(*a1 + 16);
  if (v2 != *(void *)(*a2 + 16)) {
    return 0;
  }
  if (!v2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1[3];
  uint64_t v5 = a2[3];
  uint64_t v6 = *a2 + 24 * v5;
  for (uint64_t i = *a1 + 24 * v4; ; i += 24)
  {
    unint64_t v8 = v4 + v3 >= (uint64_t)v2 ? v2 : 0;
    unint64_t result = v4 + v3 - v8;
    if (result >= v2) {
      break;
    }
    if (v5 + v3 >= (uint64_t)v2) {
      unint64_t result = v2;
    }
    else {
      unint64_t result = 0;
    }
    if (v5 + v3 - result >= v2) {
      goto LABEL_20;
    }
    uint64_t v10 = i - 24 * v8;
    unint64_t v11 = v6 - 24 * result;
    int32x2_t v12 = vmovn_s64(vceqq_f64(*(float64x2_t *)(v10 + 40), *(float64x2_t *)(v11 + 40)));
    unint64_t result = ((*(double *)(v10 + 32) == *(double *)(v11 + 32)) & v12.i8[0]) & v12.i8[4];
    if (result != 1) {
      return result;
    }
    if (!(v4 - 0x7FFFFFFFFFFFFFFFLL + v3)) {
      goto LABEL_21;
    }
    if (!(v5 - 0x7FFFFFFFFFFFFFFFLL + v3)) {
      goto LABEL_22;
    }
    ++v3;
    v6 += 24;
    if (v2 == v3) {
      return result;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

unint64_t sub_1DCEAD1A4(uint64_t a1, uint64_t a2)
{
  sub_1DD0490B8();
  sub_1DD0484F8();
  uint64_t v4 = sub_1DD049108();
  return sub_1DCEADB10(a1, a2, v4);
}

unint64_t sub_1DCEAD21C(uint64_t a1)
{
  sub_1DD0465D8();
  unint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
  sub_1DCEAFD04((unint64_t *)&qword_1EAB02A20, MEMORY[0x1E4F27A78]);
  uint64_t v3 = sub_1DD048358();
  return sub_1DCEAF1B0(a1, v3, MEMORY[0x1E4F27A78], &qword_1EAB03D20, v2, MEMORY[0x1E4F27A90]);
}

unint64_t sub_1DCEAD2F0(unsigned __int8 a1)
{
  sub_1DD0490B8();
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1DD049108();
  return sub_1DCEADBF4(a1, v2);
}

uint64_t sub_1DCEAD3FC(uint64_t a1)
{
  return sub_1DCEADA74(a1, (void (*)(uint64_t))sub_1DCD9CF14, (uint64_t (*)(uint64_t, uint64_t))sub_1DCEADE18);
}

uint64_t sub_1DCEAD428(uint64_t a1)
{
  return sub_1DCEADA74(a1, (void (*)(uint64_t))sub_1DCD2674C, (uint64_t (*)(uint64_t, uint64_t))sub_1DCEAE1DC);
}

uint64_t sub_1DCEAD454(uint64_t a1)
{
  return sub_1DCEADA74(a1, (void (*)(uint64_t))sub_1DCD9C35C, (uint64_t (*)(uint64_t, uint64_t))sub_1DCEAE5D0);
}

unint64_t sub_1DCEAD480(unsigned int a1)
{
  uint64_t v3 = MEMORY[0x1E01AED50](*(void *)(v1 + 40), a1, 4);
  return sub_1DCEAED18(a1, v3);
}

unint64_t sub_1DCEAD4C8(uint64_t a1)
{
  uint64_t v2 = sub_1DD0490A8();
  return sub_1DCEAF350(a1, v2);
}

unint64_t sub_1DCEAD508(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  sub_1DD0490B8();
  v11.origin.Swift::Double x = a1;
  v11.origin.CGFloat y = a2;
  v11.size.CGFloat width = a3;
  v11.size.CGFloat height = a4;
  CGRectGetMinX(v11);
  sub_1DD0490F8();
  v12.origin.Swift::Double x = a1;
  v12.origin.CGFloat y = a2;
  v12.size.CGFloat width = a3;
  v12.size.CGFloat height = a4;
  CGRectGetMaxX(v12);
  sub_1DD0490F8();
  v13.origin.Swift::Double x = a1;
  v13.origin.CGFloat y = a2;
  v13.size.CGFloat width = a3;
  v13.size.CGFloat height = a4;
  CGRectGetMinY(v13);
  sub_1DD0490F8();
  v14.origin.Swift::Double x = a1;
  v14.origin.CGFloat y = a2;
  v14.size.CGFloat width = a3;
  v14.size.CGFloat height = a4;
  CGRectGetMaxY(v14);
  sub_1DD0490F8();
  uint64_t v8 = sub_1DD049108();
  return sub_1DCEAEDB4(v8, a1, a2, a3, a4);
}

unint64_t sub_1DCEAD624(unsigned __int8 a1)
{
  uint64_t v2 = sub_1DCFD8970();
  return sub_1DCEAEEC4(a1, v2);
}

unint64_t sub_1DCEAD668(uint64_t a1)
{
  sub_1DD046EB8();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F89188];
  sub_1DCEAFD04(&qword_1EAB03BA0, MEMORY[0x1E4F89188]);
  uint64_t v3 = sub_1DD048358();
  return sub_1DCEAF1B0(a1, v3, MEMORY[0x1E4F89188], &qword_1EAB03D30, v2, MEMORY[0x1E4F89198]);
}

unint64_t sub_1DCEAD73C(uint64_t a1)
{
  uint64_t v2 = sub_1DD048B18();
  return sub_1DCEAF3EC(a1, v2);
}

unint64_t sub_1DCEAD780(unsigned __int8 a1)
{
  sub_1DD0490B8();
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1DD049108();
  return sub_1DCEAF4B4(a1, v2);
}

unint64_t sub_1DCEAD840(uint64_t a1)
{
  sub_1DD046598();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1DCEAFD04(&qword_1EAB03B88, MEMORY[0x1E4F27990]);
  uint64_t v3 = sub_1DD048358();
  return sub_1DCEAF1B0(a1, v3, MEMORY[0x1E4F27990], &qword_1EAB03D28, v2, MEMORY[0x1E4F279B0]);
}

unint64_t sub_1DCEAD914(double a1, double a2, double a3)
{
  sub_1DD0490B8();
  sub_1DD0490F8();
  uint64_t v6 = sub_1DD049108();
  return sub_1DCEAF648(v6, a1, a2, a3);
}

unint64_t sub_1DCEAD9B8(uint64_t a1)
{
  sub_1DD048408();
  sub_1DD0490B8();
  sub_1DD0484F8();
  uint64_t v2 = sub_1DD049108();
  swift_bridgeObjectRelease();
  return sub_1DCEAF6CC(a1, v2);
}

uint64_t sub_1DCEADA48(uint64_t a1)
{
  return sub_1DCEADA74(a1, (void (*)(uint64_t))sub_1DCFD8BF4, (uint64_t (*)(uint64_t, uint64_t))sub_1DCEAF844);
}

uint64_t sub_1DCEADA74(uint64_t a1, void (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  sub_1DD0490B8();
  a2(a1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1DD049108();
  return a3(a1, v5);
}

unint64_t sub_1DCEADB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1DD048FA8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        CGRect v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1DD048FA8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1DCEADBF4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0x80000001DD066D90;
      unint64_t v8 = 0xD000000000000017;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0xD00000000000001ALL;
          uint64_t v9 = "VISUAL_INTELLIGENCE_POC";
          goto LABEL_8;
        case 2:
          unint64_t v8 = 0xD000000000000018;
          uint64_t v9 = "VISUAL_INTELLIGENCE_NATURE";
          goto LABEL_8;
        case 3:
          unint64_t v8 = 0xD00000000000001CLL;
          uint64_t v9 = "VISUAL_INTELLIGENCE_PETS";
          goto LABEL_8;
        case 4:
          unint64_t v8 = 0xD000000000000023;
          uint64_t v9 = "VISUAL_INTELLIGENCE_VICTORIA";
LABEL_8:
          unint64_t v7 = (unint64_t)v9 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v10 = 0x80000001DD066D90;
      unint64_t v11 = 0xD000000000000017;
      switch(v6)
      {
        case 1:
          unint64_t v11 = 0xD00000000000001ALL;
          uint64_t v12 = "VISUAL_INTELLIGENCE_POC";
          goto LABEL_14;
        case 2:
          unint64_t v11 = 0xD000000000000018;
          uint64_t v12 = "VISUAL_INTELLIGENCE_NATURE";
          goto LABEL_14;
        case 3:
          unint64_t v11 = 0xD00000000000001CLL;
          uint64_t v12 = "VISUAL_INTELLIGENCE_PETS";
          goto LABEL_14;
        case 4:
          unint64_t v11 = 0xD000000000000023;
          uint64_t v12 = "VISUAL_INTELLIGENCE_VICTORIA";
LABEL_14:
          unint64_t v10 = (unint64_t)v12 | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v8 == v11 && v7 == v10) {
        break;
      }
      char v13 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1DCEADE18(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEE0079654B4C5255;
      unint64_t v8 = 0x746E696F70646E65;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v9 = "vt";
          goto LABEL_6;
        case 2:
          uint64_t v9 = "debugParametersKey";
LABEL_6:
          unint64_t v7 = (unint64_t)v9 | 0x8000000000000000;
          unint64_t v8 = 0xD000000000000012;
          break;
        case 3:
          unint64_t v8 = 0x646E49616964656DLL;
          unint64_t v7 = 0xEA00000000007865;
          break;
        case 4:
          unint64_t v8 = 0x4C65736F62726576;
          unint64_t v7 = 0xEE00676E6967676FLL;
          break;
        case 5:
          unint64_t v8 = 0x626173694452434FLL;
          unint64_t v7 = 0xEB0000000064656CLL;
          break;
        case 6:
          unint64_t v8 = 0xD00000000000001ELL;
          unint64_t v7 = 0x80000001DD066D10;
          break;
        case 7:
          unint64_t v8 = 0xD000000000000011;
          unint64_t v7 = 0x80000001DD066D30;
          break;
        case 8:
          unint64_t v8 = 0xD000000000000016;
          unint64_t v7 = 0x80000001DD066D50;
          break;
        case 9:
          unint64_t v8 = 0xD000000000000018;
          unint64_t v7 = 0x80000001DD066D70;
          break;
        default:
          break;
      }
      unint64_t v10 = 0xEE0079654B4C5255;
      switch(v6)
      {
        case 1:
          uint64_t v12 = "vt";
          goto LABEL_22;
        case 2:
          uint64_t v12 = "debugParametersKey";
LABEL_22:
          unint64_t v10 = (unint64_t)v12 | 0x8000000000000000;
          if (v8 != 0xD000000000000012) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 3:
          unint64_t v10 = 0xEA00000000007865;
          if (v8 != 0x646E49616964656DLL) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 4:
          unint64_t v10 = 0xEE00676E6967676FLL;
          if (v8 != 0x4C65736F62726576) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 5:
          unint64_t v10 = 0xEB0000000064656CLL;
          if (v8 != 0x626173694452434FLL) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 6:
          unint64_t v13 = 0xD00000000000001ELL;
          BOOL v14 = "rboseLogging";
          goto LABEL_32;
        case 7:
          unint64_t v13 = 0xD000000000000011;
          BOOL v14 = "simulatedApplicationIdentifier";
LABEL_32:
          unint64_t v10 = (unint64_t)v14 | 0x8000000000000000;
          if (v8 != v13) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 8:
          unint64_t v10 = 0x80000001DD066D50;
          if (v8 != 0xD000000000000016) {
            goto LABEL_17;
          }
          goto LABEL_16;
        case 9:
          unint64_t v10 = 0x80000001DD066D70;
          if (v8 != 0xD000000000000018) {
            goto LABEL_17;
          }
          goto LABEL_16;
        default:
          if (v8 != 0x746E696F70646E65) {
            goto LABEL_17;
          }
LABEL_16:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_17:
          char v11 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1DCEAE1DC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0x80000001DD0669A0;
      uint64_t v8 = 0xD000000000000010;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x676E697070616DLL;
          break;
        case 2:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x617461646174656DLL;
          break;
        case 3:
          unsigned int v9 = 1299472739;
          goto LABEL_8;
        case 4:
          unsigned int v9 = 1298624356;
LABEL_8:
          uint64_t v8 = v9 | 0x6970706100000000;
          unint64_t v7 = 0xEA0000000000676ELL;
          break;
        case 5:
          unsigned int v10 = 1952542563;
          goto LABEL_11;
        case 6:
          unsigned int v10 = 1919508840;
LABEL_11:
          uint64_t v8 = v10 | 0x7070614D00000000;
          unint64_t v7 = 0xEB00000000676E69;
          break;
        case 7:
          uint64_t v8 = 0x4D736C616D696E61;
          unint64_t v7 = 0xEE00676E69707061;
          break;
        case 8:
          uint64_t v8 = 0x614D65727574616ELL;
          unint64_t v7 = 0xED0000676E697070;
          break;
        case 9:
          uint64_t v8 = 0xD000000000000015;
          unint64_t v7 = 0x80000001DD066A10;
          break;
        case 0xA:
          uint64_t v8 = 0x614C657372616F63;
          unint64_t v7 = 0xEC000000736C6562;
          break;
        default:
          break;
      }
      unint64_t v11 = 0x80000001DD0669A0;
      switch(v6)
      {
        case 1:
          unint64_t v11 = 0xE700000000000000;
          if (v8 == 0x676E697070616DLL) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v11 = 0xE800000000000000;
          if (v8 != 0x617461646174656DLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          unsigned int v13 = 1299472739;
          goto LABEL_28;
        case 4:
          unsigned int v13 = 1298624356;
LABEL_28:
          unint64_t v11 = 0xEA0000000000676ELL;
          if (v8 != (v13 | 0x6970706100000000)) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 5:
          unsigned int v14 = 1952542563;
          goto LABEL_32;
        case 6:
          unsigned int v14 = 1919508840;
LABEL_32:
          unint64_t v11 = 0xEB00000000676E69;
          if (v8 != (v14 | 0x7070614D00000000)) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 7:
          unint64_t v11 = 0xEE00676E69707061;
          if (v8 != 0x4D736C616D696E61) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 8:
          unint64_t v11 = 0xED0000676E697070;
          if (v8 != 0x614D65727574616ELL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 9:
          unint64_t v11 = 0x80000001DD066A10;
          if (v8 != 0xD000000000000015) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 10:
          unint64_t v11 = 0xEC000000736C6562;
          if (v8 != 0x614C657372616F63) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
          if (v8 != 0xD000000000000010) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v11)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v12 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1DCEAE5D0(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      unint64_t v7 = 0xE300000000000000;
      uint64_t v8 = 7631457;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x65727574616ELL;
          break;
        case 2:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x6B72616D646E616CLL;
          break;
        case 3:
          uint64_t v8 = 0x4C6C61727574616ELL;
          unint64_t v7 = 0xEF6B72616D646E61;
          break;
        case 4:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x616964656DLL;
          break;
        case 5:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1802465122;
          break;
        case 6:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x6D75626C61;
          break;
        case 7:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1937006947;
          break;
        case 8:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1936158564;
          break;
        case 9:
          unint64_t v7 = 0xE700000000000000;
          unsigned int v9 = 1835626081;
          goto LABEL_17;
        case 0xA:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x7364726962;
          break;
        case 0xB:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x73746365736E69;
          break;
        case 0xC:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x73656C6974706572;
          break;
        case 0xD:
          unint64_t v7 = 0xE700000000000000;
          unsigned int v9 = 1835884909;
LABEL_17:
          uint64_t v8 = v9 | 0x736C6100000000;
          break;
        case 0xE:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x6C657261707061;
          break;
        case 0xF:
          uint64_t v8 = 0x726F737365636361;
          unint64_t v7 = 0xEB00000000736569;
          break;
        case 0x10:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1685024614;
          break;
        case 0x11:
          uint64_t v8 = 0x6F726665726F7473;
          unint64_t v7 = 0xEA0000000000746ELL;
          break;
        case 0x12:
          unsigned int v10 = 1852270963;
          goto LABEL_25;
        case 0x13:
          unint64_t v7 = 0x80000001DD066AB0;
          uint64_t v8 = 0xD000000000000011;
          break;
        case 0x14:
          unsigned int v10 = 1869903201;
LABEL_25:
          uint64_t v8 = v10 | 0x626D795300000000;
          unint64_t v7 = 0xEA00000000006C6FLL;
          break;
        case 0x15:
          uint64_t v8 = 0x676F4C646E617262;
          unint64_t v7 = 0xEF6C6F626D79536FLL;
          break;
        case 0x16:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x65646F63726162;
          break;
        case 0x17:
          uint64_t v8 = 0x727574706C756373;
          unint64_t v7 = 0xE900000000000065;
          break;
        case 0x18:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x656E696C796B73;
          break;
        case 0x19:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x44327463656A626FLL;
          break;
        default:
          break;
      }
      unint64_t v11 = 0xE300000000000000;
      switch(a1)
      {
        case 1:
          unint64_t v11 = 0xE600000000000000;
          if (v8 == 0x65727574616ELL) {
            goto LABEL_33;
          }
          goto LABEL_34;
        case 2:
          unint64_t v11 = 0xE800000000000000;
          if (v8 != 0x6B72616D646E616CLL) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 3:
          unint64_t v11 = 0xEF6B72616D646E61;
          if (v8 != 0x4C6C61727574616ELL) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 4:
          unint64_t v11 = 0xE500000000000000;
          if (v8 != 0x616964656DLL) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 5:
          unint64_t v11 = 0xE400000000000000;
          if (v8 != 1802465122) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 6:
          unint64_t v11 = 0xE500000000000000;
          if (v8 != 0x6D75626C61) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 7:
          unint64_t v11 = 0xE400000000000000;
          if (v8 != 1937006947) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 8:
          unint64_t v11 = 0xE400000000000000;
          if (v8 != 1936158564) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 9:
          unint64_t v11 = 0xE700000000000000;
          uint64_t v13 = 1835626081;
          goto LABEL_60;
        case 10:
          unint64_t v11 = 0xE500000000000000;
          if (v8 != 0x7364726962) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 11:
          unint64_t v11 = 0xE700000000000000;
          unint64_t v14 = 0x746365736E69;
          goto LABEL_61;
        case 12:
          unint64_t v11 = 0xE800000000000000;
          if (v8 != 0x73656C6974706572) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 13:
          unint64_t v11 = 0xE700000000000000;
          uint64_t v13 = 1835884909;
LABEL_60:
          unint64_t v14 = v13 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_61:
          if (v8 != (v14 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 14:
          unint64_t v11 = 0xE700000000000000;
          if (v8 != 0x6C657261707061) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 15:
          unint64_t v11 = 0xEB00000000736569;
          if (v8 != 0x726F737365636361) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 16:
          unint64_t v11 = 0xE400000000000000;
          if (v8 != 1685024614) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 17:
          unint64_t v11 = 0xEA0000000000746ELL;
          if (v8 != 0x6F726665726F7473) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 18:
          unsigned int v15 = 1852270963;
          goto LABEL_75;
        case 19:
          unint64_t v11 = 0x80000001DD066AB0;
          if (v8 != 0xD000000000000011) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 20:
          unsigned int v15 = 1869903201;
LABEL_75:
          unint64_t v11 = 0xEA00000000006C6FLL;
          if (v8 != (v15 | 0x626D795300000000)) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 21:
          unint64_t v11 = 0xEF6C6F626D79536FLL;
          if (v8 != 0x676F4C646E617262) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 22:
          unint64_t v11 = 0xE700000000000000;
          if (v8 != 0x65646F63726162) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 23:
          unint64_t v11 = 0xE900000000000065;
          if (v8 != 0x727574706C756373) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 24:
          unint64_t v11 = 0xE700000000000000;
          if (v8 != 0x656E696C796B73) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 25:
          unint64_t v11 = 0xE800000000000000;
          if (v8 != 0x44327463656A626FLL) {
            goto LABEL_34;
          }
          goto LABEL_33;
        default:
          if (v8 != 7631457) {
            goto LABEL_34;
          }
LABEL_33:
          if (v7 == v11)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_34:
          char v12 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v6;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1DCEAED18(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1DCEAEDB4(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t i = a1 & ~v7;
  if ((*(void *)(v5 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    v15.origin.Swift::Double x = a2;
    v15.origin.CGFloat y = a3;
    v15.size.CGFloat width = a4;
    v15.size.CGFloat height = a5;
    if (!CGRectEqualToRect(*(CGRect *)(*(void *)(v5 + 48) + 32 * i), v15))
    {
      uint64_t v13 = ~v7;
      for (unint64_t i = (i + 1) & v13; ((*(void *)(v6 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v13)
      {
        v16.origin.Swift::Double x = a2;
        v16.origin.CGFloat y = a3;
        v16.size.CGFloat width = a4;
        v16.size.CGFloat height = a5;
        if (CGRectEqualToRect(*(CGRect *)(*(void *)(v5 + 48) + 32 * i), v16)) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1DCEAEEC4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEF6E6F6974636574;
      unint64_t v8 = 0x65447463656A626FLL;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0x80000001DD066960;
          unint64_t v8 = 0xD000000000000010;
          break;
        case 2:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x64656966696E75;
          break;
        case 3:
          unint64_t v8 = 0x6F7765727574616ELL;
          unint64_t v7 = 0xEB00000000646C72;
          break;
        case 4:
          unint64_t v7 = 0xE700000000000000;
          unint64_t v8 = 0x6C657261707061;
          break;
        case 5:
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1685024614;
          break;
        case 6:
          unint64_t v8 = 0x626D79536E676973;
          unint64_t v7 = 0xEA00000000006C6FLL;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x65447463656A626FLL;
      unint64_t v10 = 0xEF6E6F6974636574;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0x80000001DD066960;
          if (v8 == 0xD000000000000010) {
            goto LABEL_21;
          }
          goto LABEL_22;
        case 2:
          unint64_t v10 = 0xE700000000000000;
          if (v8 != 0x64656966696E75) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 3:
          unint64_t v10 = 0xEB00000000646C72;
          if (v8 != 0x6F7765727574616ELL) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 4:
          unint64_t v10 = 0xE700000000000000;
          if (v8 != 0x6C657261707061) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 5:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v9 = 1685024614;
          goto LABEL_20;
        case 6:
          unint64_t v10 = 0xEA00000000006C6FLL;
          if (v8 != 0x626D79536E676973) {
            goto LABEL_22;
          }
          goto LABEL_21;
        default:
LABEL_20:
          if (v8 != v9) {
            goto LABEL_22;
          }
LABEL_21:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_22:
          char v11 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_1DCEAF1B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  long long v25 = a5;
  uint64_t v26 = a6;
  long long v24 = a4;
  v22[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  v10.n128_f64[0] = MEMORY[0x1F4188790](v8);
  char v12 = (char *)v22 - v11;
  uint64_t v23 = v6;
  uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v14 = a2 & ~v13;
  v22[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v15 = ~v13;
    long long v18 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    uint64_t v17 = v9 + 16;
    CGRect v16 = v18;
    uint64_t v19 = *(void *)(v17 + 56);
    do
    {
      v16(v12, *(void *)(v23 + 48) + v19 * v14, v8, v10);
      sub_1DCEAFD04(v24, v25);
      char v20 = sub_1DD0483B8();
      (*(void (**)(char *, uint64_t))(v17 - 8))(v12, v8);
      if (v20) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v15;
    }
    while (((*(void *)(v22[0] + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_1DCEAF350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1DCEAF3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1DCE74A04(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1E01AE7E0](v9, a1);
      sub_1DCEAFCB0((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1DCEAF4B4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x6573726170;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x686372616573;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xE700000000000000;
            if (v8 != 0x636972656E6567) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        unint64_t v7 = 0xE700000000000000;
        uint64_t v8 = 0x636972656E6567;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 0x6573726170;
      }
      else {
        uint64_t v10 = 0x686372616573;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xE500000000000000;
      }
      else {
        unint64_t v11 = 0xE600000000000000;
      }
      if (v8 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_1DCEAF648(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v5 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t result = a1 & ~v5;
  if ((*(void *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      uint64_t v8 = (double *)(*(void *)(v4 + 48) + 24 * result);
      double v9 = v8[1];
      double v10 = v8[2];
      BOOL v11 = *v8 == a2;
      if (v9 != a3) {
        BOOL v11 = 0;
      }
      if (v10 == a4 && v11) {
        break;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1DCEAF6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1DD048408();
    uint64_t v8 = v7;
    if (v6 == sub_1DD048408() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1DD048408();
          uint64_t v15 = v14;
          if (v13 == sub_1DD048408() && v15 == v16) {
            break;
          }
          char v18 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1DCEAF844(char a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    unint64_t v7 = sub_1DCFD8BF4(*(unsigned char *)(*(void *)(v2 + 48) + v5));
    uint64_t v9 = v8;
    if (v7 == sub_1DCFD8BF4(a1) && v9 == v10)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v12 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = ~v4;
      unint64_t v5 = (v5 + 1) & v13;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          unint64_t v14 = sub_1DCFD8BF4(*(unsigned char *)(*(void *)(v2 + 48) + v5));
          uint64_t v16 = v15;
          if (v14 == sub_1DCFD8BF4(a1) && v16 == v17) {
            break;
          }
          char v19 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v13;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t type metadata accessor for S2Loop.S2LoopEdgeIndex()
{
  return self;
}

unint64_t sub_1DCEAF9E4()
{
  unint64_t result = qword_1EAB03D18;
  if (!qword_1EAB03D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03D18);
  }
  return result;
}

uint64_t destroy for S2Loop()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for S2Loop(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for S2Loop(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for S2Loop(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for S2Loop(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for S2Loop(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for S2Loop()
{
  return &type metadata for S2Loop;
}

uint64_t sub_1DCEAFCB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1DCEAFD04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

int64_t sub_1DCEAFD50(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

void *S2CellId.init(latlng:)@<X0>(double *a1@<X0>, void *a2@<X8>)
{
  double v3 = a1[1];
  __double2 v4 = __sincos_stret(*a1);
  __double2 v5 = __sincos_stret(v3);
  v7[0] = v4.__cosval * v5.__cosval;
  v7[1] = v4.__cosval * v5.__sinval;
  void v7[2] = v4.__sinval;
  uint64_t result = S2CellId.init(point:)(v7, &v8);
  *a2 = v8;
  return result;
}

uint64_t S2CellId.level.getter()
{
  unint64_t v1 = *v0;
  if (*v0) {
    return 30;
  }
  unint64_t v2 = HIDWORD(v1);
  if (v1) {
    LODWORD(v2) = *v0;
  }
  if (__OFSUB__(0, v2))
  {
    __break(1u);
  }
  else
  {
    BOOL v3 = v1 == 0;
    uint64_t v4 = 15;
    if (v3) {
      uint64_t v4 = -1;
    }
    int v5 = -(int)v2 & v2;
    if ((v5 & 0x5555) != 0) {
      v4 += 8;
    }
    if ((v5 & 0x550055) != 0) {
      v4 += 4;
    }
    if ((v5 & 0x5050505) != 0) {
      v4 += 2;
    }
    if ((v5 & 0x11111111) != 0) {
      return v4 + 1;
    }
    else {
      return v4;
    }
  }
  return result;
}

uint64_t S2CellId.parent(level:)@<X0>(uint64_t result@<X0>, unint64_t *a2@<X8>)
{
  if (__OFSUB__(30, result))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (0x400000000000001ELL - result < 0)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  unint64_t v3 = 2 * (30 - result);
  unint64_t v4 = v3 - 65;
  uint64_t v5 = 1 << (v3 & 0x3E);
  if (v3 >= 0x40) {
    uint64_t v5 = 0;
  }
  unint64_t v6 = 1uLL >> ((-2 * (30 - result)) & 0x3E);
  if (v3 <= 0xFFFFFFFFFFFFFFC0) {
    unint64_t v6 = 0;
  }
  if (((30 - result) & 0x4000000000000000) != 0) {
    unint64_t v7 = v6;
  }
  else {
    unint64_t v7 = v5;
  }
  if (v4 <= 0xFFFFFFFFFFFFFF7ELL) {
    unint64_t v7 = 0;
  }
  *a2 = *v2 & -(uint64_t)v7 | v7;
  return result;
}

uint64_t S2CellId.uid.getter()
{
  return *(void *)v0;
}

uint64_t S2CellId.childEnd(level:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *v2;
  if (__OFSUB__(0, *v2))
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v4 = 30 - result;
  if (__OFSUB__(30, result))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (0x400000000000001ELL - result < 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v5 = -*v2 & v3;
  uint64_t v6 = 2 * v4;
  unint64_t v7 = 2 * v4 - 65;
  uint64_t v8 = 1 << (v6 & 0x3E);
  if ((unint64_t)v6 >= 0x40) {
    uint64_t v8 = 0;
  }
  unint64_t v9 = 1uLL >> (-(char)v6 & 0x3E);
  if ((unint64_t)v6 <= 0xFFFFFFFFFFFFFFC0) {
    unint64_t v9 = 0;
  }
  if (v6 < 0) {
    unint64_t v10 = v9;
  }
  else {
    unint64_t v10 = v8;
  }
  if (v7 <= 0xFFFFFFFFFFFFFF7ELL) {
    unint64_t v10 = 0;
  }
  BOOL v11 = __CFADD__(v3, v5);
  uint64_t v12 = v3 + v5;
  if (v11) {
    goto LABEL_19;
  }
  BOOL v11 = __CFADD__(v12, v10);
  uint64_t v13 = v12 + v10;
  if (!v11)
  {
    *a2 = v13;
    return result;
  }
LABEL_20:
  __break(1u);
  return result;
}

void S2CellId.childBegin()(unint64_t *a1@<X8>)
{
  unint64_t v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v3 = -(uint64_t)*v1 & v2;
  BOOL v4 = v2 >= v3;
  unint64_t v5 = v2 - v3;
  if (!v4) {
    goto LABEL_7;
  }
  BOOL v4 = __CFADD__(v5, v3 >> 2);
  unint64_t v6 = v5 + (v3 >> 2);
  if (!v4)
  {
    *a1 = v6;
    return;
  }
LABEL_8:
  __break(1u);
}

void S2CellId.next()(void *a1@<X8>)
{
  if (__OFSUB__(0, *v1)) {
    __break(1u);
  }
  else {
    *a1 = *v1 + 2 * (-*v1 & *v1);
  }
}

unint64_t *S2CellId.contains(other:)(unint64_t *result)
{
  uint64_t v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = -*v1 & v2;
  BOOL v4 = __OFSUB__(v3, 1);
  uint64_t v5 = v3 - 1;
  if (v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (__OFSUB__(v2, v5))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*result < v2 - v5) {
    return 0;
  }
  BOOL v4 = __OFADD__(v2, v5);
  unint64_t v6 = v2 + v5;
  if (!v4) {
    return (unint64_t *)(*result <= v6);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t S2CellId.lowestOnBit.getter()
{
  if (!__OFSUB__(0, *v0)) {
    return -*v0 & *v0;
  }
  __break(1u);
  return result;
}

BOOL S2CellId.isFace.getter()
{
  return (*v0 & 0xFFFFFFFFFFFFFFFLL) == 0;
}

void S2CellId.parent.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
  }
  else if (!__OFSUB__(0, 4 * (-*v1 & v2)))
  {
    *a1 = (-4 * (-*v1 & v2)) & v2 | (4 * (-*v1 & v2));
    return;
  }
  __break(1u);
}

void S2CellId.rangeMin.getter(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = -*v1 & v2;
  BOOL v4 = __OFSUB__(v3, 1);
  uint64_t v5 = v3 - 1;
  if (v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  BOOL v4 = __OFSUB__(v2, v5);
  uint64_t v6 = v2 - v5;
  if (!v4)
  {
    *a1 = v6;
    return;
  }
LABEL_7:
  __break(1u);
}

BOOL <= infix(_:_:)(void *a1, void *a2)
{
  return *a1 <= *a2;
}

void S2CellId.rangeMax.getter(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = -*v1 & v2;
  BOOL v4 = __OFSUB__(v3, 1);
  uint64_t v5 = v3 - 1;
  if (v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  BOOL v4 = __OFADD__(v2, v5);
  uint64_t v6 = v2 + v5;
  if (!v4)
  {
    *a1 = v6;
    return;
  }
LABEL_7:
  __break(1u);
}

BOOL >= infix(_:_:)(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL < infix(_:_:)(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL > infix(_:_:)(void *a1, void *a2)
{
  return *a2 < *a1;
}

double S2CellId.point.getter@<D0>(double *a1@<X8>)
{
  S2CellId.rawPoint.getter(&v6);
  double v2 = sqrt(v6 * v6 + v7 * v7 + v8 * v8);
  if (v2 != 0.0) {
    double v2 = 1.0 / v2;
  }
  double result = v6 * v2;
  double v4 = v7 * v2;
  double v5 = v8 * v2;
  *a1 = v6 * v2;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t static S2CellId.faceBits.getter()
{
  return 3;
}

uint64_t static S2CellId.numFaces.getter()
{
  return 6;
}

uint64_t static S2CellId.maxLevel.getter()
{
  return 30;
}

uint64_t static S2CellId.posBits.getter()
{
  return 61;
}

uint64_t static S2CellId.maxSize.getter()
{
  return 0x40000000;
}

void sub_1DCEB0208()
{
  uint64_t v0 = sub_1DD0486F8();
  *(void *)(v0 + 16) = 1024;
  bzero((void *)(v0 + 32), 0x2000uLL);
  uint64_t v1 = sub_1DD0486F8();
  *(void *)(v1 + 16) = 1024;
  bzero((void *)(v1 + 32), 0x2000uLL);
  off_1EBE867B0 = (_UNKNOWN *)v0;
  off_1EBE867B8 = (_UNKNOWN *)v1;
}

uint64_t sub_1DCEB0284(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a1 == (void *)4)
  {
LABEL_2:
    unint64_t v12 = a3 + 16 * a2;
    if (!__OFADD__(a3, 16 * a2))
    {
      if (qword_1EBE867C8 == -1) {
        goto LABEL_4;
      }
      goto LABEL_59;
    }
  }
  else
  {
    unint64_t v12 = (unint64_t)a1;
    while (1)
    {
      char v18 = (char *)(v12 + 1);
      if (__OFADD__(v12, 1)) {
        break;
      }
      if (a6 > 3) {
        goto LABEL_41;
      }
      if (qword_1EBE85AC8 != -1) {
        swift_once();
      }
      if (qword_1EBE85AB0 != -1) {
        swift_once();
      }
      char v19 = off_1EBE85AB8;
      if (*((void *)off_1EBE85AB8 + 2) <= a6) {
        goto LABEL_42;
      }
      char v20 = (char *)off_1EBE85AB8 + 32;
      uint64_t v21 = *((void *)off_1EBE85AB8 + a6 + 4);
      if (!*(void *)(v21 + 16)) {
        goto LABEL_43;
      }
      double v6 = (_UNKNOWN **)qword_1EBE9C878;
      if (!*(void *)(qword_1EBE9C878 + 16)) {
        goto LABEL_44;
      }
      uint64_t v22 = 2 * a2;
      uint64_t v23 = *(void *)(v21 + 32);
      if (__OFADD__(v22, v23 >> 1)) {
        goto LABEL_45;
      }
      a3 *= 2;
      a5 *= 4;
      sub_1DCEB0284(v12 + 1, v22 + (v23 >> 1), v23 & 1 | a3, a4, a5, *(void *)(qword_1EBE9C878 + 32) ^ a6);
      if (v19[2] <= a6) {
        goto LABEL_46;
      }
      uint64_t v24 = *(void *)&v20[8 * a6];
      if (*(void *)(v24 + 16) < 2uLL) {
        goto LABEL_47;
      }
      if ((unint64_t)v6[2] < 2) {
        goto LABEL_48;
      }
      uint64_t v25 = *(void *)(v24 + 40);
      if (__OFADD__(v22, v25 >> 1)) {
        goto LABEL_49;
      }
      sub_1DCEB0284(v12 + 1, v22 + (v25 >> 1), v25 & 1 | a3, a4, a5 | 1, (unint64_t)v6[5] ^ a6);
      if (v19[2] <= a6) {
        goto LABEL_50;
      }
      uint64_t v26 = *(void *)&v20[8 * a6];
      if (*(void *)(v26 + 16) < 3uLL) {
        goto LABEL_51;
      }
      if ((unint64_t)v6[2] < 3) {
        goto LABEL_52;
      }
      uint64_t v27 = *(void *)(v26 + 48);
      if (__OFADD__(v22, v27 >> 1)) {
        goto LABEL_53;
      }
      sub_1DCEB0284(v12 + 1, v22 + (v27 >> 1), v27 & 1 | a3, a4, a5 | 2, (unint64_t)v6[6] ^ a6);
      if (v19[2] <= a6) {
        goto LABEL_54;
      }
      uint64_t v28 = *(void *)&v20[8 * a6];
      if (*(void *)(v28 + 16) < 4uLL) {
        goto LABEL_55;
      }
      if ((unint64_t)v6[2] < 4) {
        goto LABEL_56;
      }
      uint64_t v29 = *(void *)(v28 + 56);
      BOOL v16 = __OFADD__(v22, v29 >> 1);
      a2 = v22 + (v29 >> 1);
      if (v16) {
        goto LABEL_57;
      }
      a3 |= v29 & 1;
      a5 |= 3uLL;
      a6 ^= (unint64_t)v6[7];
      ++v12;
      if (v18 == (char *)4) {
        goto LABEL_2;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
  }
  __break(1u);
LABEL_59:
  swift_once();
LABEL_4:
  uint64_t v13 = 4 * v12;
  unint64_t v14 = 4 * v12 + a4;
  if (__OFADD__(4 * v12, a4))
  {
    __break(1u);
    goto LABEL_61;
  }
  a5 *= 4;
  a3 = a5 + a6;
  if (__OFADD__(a5, a6))
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  double v6 = &off_1EBE867B0;
  swift_beginAccess();
  unint64_t v12 = (unint64_t)off_1EBE867B0;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  off_1EBE867B0 = (_UNKNOWN *)v12;
  if (isUniquelyReferenced_nonNull_native)
  {
    if ((v14 & 0x8000000000000000) == 0) {
      goto LABEL_8;
    }
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
LABEL_62:
  unint64_t v12 = (unint64_t)sub_1DCEC1C14((void *)v12);
  off_1EBE867B0 = (_UNKNOWN *)v12;
  if ((v14 & 0x8000000000000000) != 0) {
    goto LABEL_63;
  }
LABEL_8:
  if (v14 >= *(void *)(v12 + 16))
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  *(void *)(v12 + 8 * v14 + 32) = a3;
  BOOL v16 = __OFADD__(a5, a4);
  a4 += a5;
  if (v16)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  unint64_t v12 = v13 + a6;
  if (__OFADD__(v13, a6))
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  double v6 = (_UNKNOWN **)&unk_1EBE86000;
  a6 = (unint64_t)off_1EBE867B8;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  off_1EBE867B8 = (_UNKNOWN *)a6;
  if (result)
  {
    if ((a4 & 0x8000000000000000) == 0) {
      goto LABEL_13;
    }
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
LABEL_67:
  uint64_t result = (uint64_t)sub_1DCEC1C14((void *)a6);
  a6 = result;
  v6[247] = (_UNKNOWN *)result;
  if ((a4 & 0x8000000000000000) != 0) {
    goto LABEL_68;
  }
LABEL_13:
  if (a4 < *(void *)(a6 + 16))
  {
    *(void *)(a6 + 8 * a4 + 32) = v12;
    return swift_endAccess();
  }
LABEL_69:
  __break(1u);
  return result;
}

uint64_t S2CellId.id.getter()
{
  return *(void *)v0;
}

uint64_t S2CellId.init(id:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static S2CellId.none.getter(void *a1@<X8>)
{
  *a1 = 0;
}

void static S2CellId.sentinel.getter(void *a1@<X8>)
{
  *a1 = 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t S2CellId.init(face:pos:level:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (__OFADD__(a2 | 1, result << 61))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (__OFSUB__(30, a3))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (0x400000000000001ELL - a3 < 0)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  unint64_t v4 = 2 * (30 - a3);
  unint64_t v5 = v4 - 65;
  uint64_t v6 = 1 << (v4 & 0x3E);
  if (v4 >= 0x40) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = 1uLL >> ((-2 * (30 - a3)) & 0x3E);
  if (v4 <= 0xFFFFFFFFFFFFFFC0) {
    unint64_t v7 = 0;
  }
  if (((30 - a3) & 0x4000000000000000) != 0) {
    unint64_t v8 = v7;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v5 <= 0xFFFFFFFFFFFFFF7ELL) {
    unint64_t v8 = 0;
  }
  *a4 = ((a2 | 1) + (result << 61)) & -(uint64_t)v8 | v8;
  return result;
}

void *S2CellId.init(point:)@<X0>(double *a1@<X0>, void *a2@<X8>)
{
  double v3 = a1[1];
  double v4 = a1[2];
  double v5 = fabs(*a1);
  double v6 = fabs(v3);
  double v7 = fabs(v4);
  if (v6 < v5)
  {
    if (v7 < v5)
    {
      if (*a1 >= 0.0) {
        uint64_t v8 = 0;
      }
      else {
        uint64_t v8 = 3;
      }
      goto LABEL_13;
    }
    goto LABEL_8;
  }
  if (v7 >= v6)
  {
LABEL_8:
    if (v4 >= 0.0) {
      uint64_t v8 = 2;
    }
    else {
      uint64_t v8 = 5;
    }
    goto LABEL_13;
  }
  if (v3 >= 0.0) {
    uint64_t v8 = 1;
  }
  else {
    uint64_t v8 = 4;
  }
LABEL_13:
  v17[0] = *(uint64_t *)a1;
  *(double *)&v17[1] = v3;
  *(double *)&v17[2] = v4;
  static S2Projections.validFaceXyzToUv(face:point:)(v8, (double *)v17, v18);
  double v9 = v18[1];
  double v10 = 1.0 - sqrt(1.0 - v18[0] * 3.0);
  double v11 = sqrt(v18[0] * 3.0 + 1.0) + -1.0;
  if (v18[0] >= 0.0) {
    double v10 = v11;
  }
  uint64_t v12 = sub_1DCEB2DF8(v10);
  double v13 = 1.0 - sqrt(1.0 - v9 * 3.0);
  double v14 = sqrt(v9 * 3.0 + 1.0) + -1.0;
  if (v9 < 0.0) {
    double v14 = v13;
  }
  uint64_t v15 = sub_1DCEB2DF8(v14);
  uint64_t result = S2CellId.init(face:i:j:sameFace:)(v8, v12, v15, 1, v17);
  *a2 = v17[0];
  return result;
}

void *S2CellId.init(face:i:j:sameFace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  if ((a4 & 1) == 0)
  {
    if (a3 < 0) {
      uint64_t v21 = -1;
    }
    else {
      uint64_t v21 = a3;
    }
    if (v21 >= 0x40000000) {
      uint64_t v21 = 0x40000000;
    }
    uint64_t v22 = -1;
    if (a2 >= -1) {
      uint64_t v22 = (2 * a2) | 1;
    }
    if (a3 < 0) {
      uint64_t v23 = -1;
    }
    else {
      uint64_t v23 = a3;
    }
    if (v23 >= 0x40000000) {
      uint64_t v23 = 0x40000000;
    }
    if (a2 >= 0x40000000) {
      uint64_t v24 = v23;
    }
    else {
      uint64_t v24 = v21;
    }
    if (a2 >= 0x40000000) {
      uint64_t v25 = 2147483649;
    }
    else {
      uint64_t v25 = v22;
    }
    BOOL v26 = __OFADD__(v25, -1073741824);
    uint64_t v27 = v25 - 0x40000000;
    if (v26)
    {
LABEL_46:
      __break(1u);
      JUMPOUT(0x1DCEB0B48);
    }
    double v28 = (double)v27 * 9.31322575e-10;
    uint64_t v29 = 2 * v24 - 0x3FFFFFFF;
    double v30 = (double)v29 * 9.31322575e-10;
    double v31 = 1.0;
    switch(a1)
    {
      case 0:
        break;
      case 1:
        double v31 = -v28;
        double v28 = 1.0;
        break;
      case 2:
        double v31 = -v28;
        double v28 = -v30;
        double v30 = 1.0;
        break;
      case 3:
        double v32 = -v30;
        double v30 = -v28;
        double v31 = -1.0;
        double v28 = v32;
        break;
      case 4:
        double v31 = (double)v29 * 9.31322575e-10;
        double v30 = -v28;
        double v28 = -1.0;
        break;
      default:
        double v31 = (double)v29 * 9.31322575e-10;
        double v30 = -1.0;
        break;
    }
    double v33 = fabs(v31);
    double v34 = fabs(v28);
    double v35 = fabs(v30);
    if (v34 >= v33)
    {
      if (v35 < v34)
      {
        if (v28 >= 0.0) {
          uint64_t v36 = 1;
        }
        else {
          uint64_t v36 = 4;
        }
        goto LABEL_42;
      }
    }
    else if (v35 < v33)
    {
      if (v31 >= 0.0) {
        uint64_t v36 = 0;
      }
      else {
        uint64_t v36 = 3;
      }
LABEL_42:
      v40[0] = v31;
      v40[1] = v28;
      v40[2] = v30;
      static S2Projections.validFaceXyzToUv(face:point:)(v36, v40, v41);
      double v37 = v41[1];
      uint64_t v38 = sub_1DCEB2DF8(v41[0]);
      uint64_t v39 = sub_1DCEB2DF8(v37);
      uint64_t result = S2CellId.init(face:i:j:sameFace:)(v40, v36, v38, v39, 1);
      uint64_t v20 = *(void *)&v40[0];
      goto LABEL_43;
    }
    if (v30 >= 0.0) {
      uint64_t v36 = 2;
    }
    else {
      uint64_t v36 = 5;
    }
    goto LABEL_42;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE853C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD04EF60;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = a1 << 28;
  *(void *)&v40[0] = inited;
  uint64_t v10 = sub_1DCEB2560((uint64_t)v40, a2, a3, 7, a1 & 1);
  uint64_t v11 = sub_1DCEB2560((uint64_t)v40, a2, a3, 6, v10);
  uint64_t v12 = sub_1DCEB2560((uint64_t)v40, a2, a3, 5, v11);
  uint64_t v13 = sub_1DCEB2560((uint64_t)v40, a2, a3, 4, v12);
  uint64_t v14 = sub_1DCEB2560((uint64_t)v40, a2, a3, 3, v13);
  uint64_t v15 = sub_1DCEB2560((uint64_t)v40, a2, a3, 2, v14);
  uint64_t v16 = sub_1DCEB2560((uint64_t)v40, a2, a3, 1, v15);
  sub_1DCEB2560((uint64_t)v40, a2, a3, 0, v16);
  if (*(void *)(*(void *)&v40[0] + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v18 = *(void *)(*(void *)&v40[0] + 32);
  uint64_t v17 = *(void *)(*(void *)&v40[0] + 40);
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (__OFADD__(v18, v17 << 32))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v20 = (2 * (v18 + (v17 << 32))) | 1;
LABEL_43:
  *a5 = v20;
  return result;
}

uint64_t S2CellId.rawPoint.getter@<X0>(double *a1@<X8>)
{
  unint64_t v3 = *v1;
  unint64_t v16 = 0;
  unint64_t v17 = 0;
  uint64_t v4 = sub_1DCEB27B4(&v17, &v16, 7, (v3 >> 61) & 1);
  uint64_t v5 = sub_1DCEB27B4(&v17, &v16, 6, v4);
  uint64_t v6 = sub_1DCEB27B4(&v17, &v16, 5, v5);
  uint64_t v7 = sub_1DCEB27B4(&v17, &v16, 4, v6);
  uint64_t v8 = sub_1DCEB27B4(&v17, &v16, 3, v7);
  uint64_t v9 = sub_1DCEB27B4(&v17, &v16, 2, v8);
  uint64_t v10 = sub_1DCEB27B4(&v17, &v16, 1, v9);
  uint64_t result = sub_1DCEB27B4(&v17, &v16, 0, v10);
  uint64_t v12 = 2 * ((v17 ^ (v3 >> 2)) & 1);
  if (v3) {
    uint64_t v12 = 1;
  }
  unint64_t v13 = v12 + 2 * v17;
  if (__OFADD__(v12, 2 * v17))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (__OFADD__(v13, -1073741824))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  BOOL v14 = __OFADD__(v12, 2 * v16);
  unint64_t v15 = v12 + 2 * v16;
  if (v14)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (__OFADD__(v15, -1073741824))
  {
LABEL_13:
    __break(1u);
    return result;
  }
  return sub_1DCEB0E3C(v3 >> 61, v13 - 0x40000000, v15 - 0x40000000, a1);
}

Swift::Int __swiftcall S2CellId.toFaceIJOrientation(i:j:orientation:)(Swift::Int *i, Swift::Int *j, Swift::Int_optional *orientation)
{
  unint64_t v7 = *v3;
  uint64_t v8 = sub_1DCEB27B4((unint64_t *)i, (unint64_t *)j, 7, (*v3 >> 61) & 1);
  uint64_t v9 = sub_1DCEB27B4((unint64_t *)i, (unint64_t *)j, 6, v8);
  uint64_t v10 = sub_1DCEB27B4((unint64_t *)i, (unint64_t *)j, 5, v9);
  uint64_t v11 = sub_1DCEB27B4((unint64_t *)i, (unint64_t *)j, 4, v10);
  uint64_t v12 = sub_1DCEB27B4((unint64_t *)i, (unint64_t *)j, 3, v11);
  uint64_t v13 = sub_1DCEB27B4((unint64_t *)i, (unint64_t *)j, 2, v12);
  uint64_t v14 = sub_1DCEB27B4((unint64_t *)i, (unint64_t *)j, 1, v13);
  Swift::Int result = sub_1DCEB27B4((unint64_t *)i, (unint64_t *)j, 0, v14);
  if (orientation->is_nil) {
    return v7 >> 61;
  }
  if (!__OFSUB__(0, v7))
  {
    orientation->value = result ^ ((v7 & -(uint64_t)v7 & 0x1111111111111110) != 0);
    orientation->is_nil = 0;
    return v7 >> 61;
  }
  __break(1u);
  return result;
}

uint64_t S2CellId.isLeaf.getter()
{
  return *v0 & 1;
}

uint64_t sub_1DCEB0E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>)
{
  double v4 = (double)a2 * 9.31322575e-10;
  BOOL v5 = v4 < 0.0;
  double v6 = 1.0 - (1.0 - v4) * (1.0 - v4);
  double v7 = (v4 + 1.0) * (v4 + 1.0) + -1.0;
  if (v5) {
    double v7 = v6;
  }
  double v8 = (double)a3 * 9.31322575e-10;
  double v9 = (v8 + 1.0) * (v8 + 1.0) + -1.0;
  if (v8 < 0.0) {
    double v9 = 1.0 - (1.0 - v8) * (1.0 - v8);
  }
  return static S2Projections.faceUvToXyz(face:u:v:)(a1, a4, v7 * 0.333333333, v9 * 0.333333333);
}

void S2CellId.latLng.getter(long double *a1@<X8>)
{
  S2CellId.rawPoint.getter(v6);
  double v2 = v6[0];
  double v3 = v6[1];
  long double v4 = atan2(v6[2], sqrt(v2 * v2 + v3 * v3));
  long double v5 = atan2(v3, v2);
  *a1 = v4;
  a1[1] = v5;
}

BOOL S2CellId.isValid.getter()
{
  uint64_t v1 = *v0;
  if ((unint64_t)*v0 >> 62 == 3) {
    return 0;
  }
  if (!__OFSUB__(0, v1)) {
    return (v1 & -v1 & 0x1555555555555555) != 0;
  }
  __break(1u);
  return result;
}

uint64_t S2CellId.face.getter()
{
  return *v0 >> 61;
}

uint64_t S2CellId.pos.getter()
{
  return *v0 & 0x1FFFFFFFFFFFFFFFLL;
}

unint64_t static S2CellId.lowestOnBit(forLevel:)(unint64_t result)
{
  if (__OFSUB__(30, result))
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((uint64_t)(0x400000000000001ELL - result) < 0)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  unint64_t v1 = 2 * (30 - result);
  unint64_t v2 = v1 - 65;
  uint64_t v3 = 1 << (v1 & 0x3E);
  if (v1 >= 0x40) {
    uint64_t v3 = 0;
  }
  unint64_t v4 = 1uLL >> ((-2 * (30 - result)) & 0x3E);
  if (v1 <= 0xFFFFFFFFFFFFFFC0) {
    unint64_t v4 = 0;
  }
  if (((30 - result) & 0x4000000000000000) != 0) {
    unint64_t v5 = v4;
  }
  else {
    unint64_t v5 = v3;
  }
  if (v2 >= 0xFFFFFFFFFFFFFF7FLL) {
    return v5;
  }
  else {
    return 0;
  }
}

Swift::Int __swiftcall S2CellId.childPosition(level:)(Swift::Int level)
{
  Swift::Int v2 = 30 - level;
  if (__OFSUB__(30, level))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (0x400000000000001ELL - level < 0)
  {
LABEL_16:
    __break(1u);
    return level;
  }
  uint64_t v3 = (2 * v2) | 1;
  uint64_t v4 = *v1 >> v3;
  if (v3 >= 64) {
    uint64_t v4 = *v1 >> 63;
  }
  uint64_t v5 = *v1 << -(char)v3;
  if (v3 <= -64) {
    LOBYTE(v5) = 0;
  }
  if (v2 < 0) {
    LOBYTE(v6) = v5;
  }
  else {
    LOBYTE(v6) = v4;
  }
  if (v3 > 64) {
    uint64_t v6 = *v1 >> 63;
  }
  if (v3 < -64) {
    LOBYTE(v6) = 0;
  }
  return v6 & 3;
}

void *S2CellId.intersects(with:)(void *result)
{
  uint64_t v2 = *result;
  if (__OFSUB__(0, *result))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = -*result & v2;
  BOOL v4 = __OFSUB__(v3, 1);
  uint64_t v5 = v3 - 1;
  if (v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (__OFSUB__(v2, v5))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v6 = *v1;
  if (__OFSUB__(0, *v1))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = -*v1 & v6;
  BOOL v4 = __OFSUB__(v7, 1);
  uint64_t v8 = v7 - 1;
  if (v4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFADD__(v6, v8))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v2 - v5 > (unint64_t)(v6 + v8)) {
    return 0;
  }
  BOOL v4 = __OFADD__(v2, v5);
  unint64_t v9 = v2 + v5;
  if (v4) {
    goto LABEL_18;
  }
  if (!__OFSUB__(v6, v8)) {
    return (void *)(v9 >= v6 - v8);
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t S2CellId.childBegin(level:)@<X0>(uint64_t result@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = *v2;
  if (__OFSUB__(0, *v2))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v4 = 30 - result;
  if (__OFSUB__(30, result))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (0x400000000000001ELL - result < 0)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v5 = -(uint64_t)*v2 & v3;
  uint64_t v6 = 2 * v4;
  unint64_t v7 = 2 * v4 - 65;
  uint64_t v8 = 1 << (v6 & 0x3E);
  if ((unint64_t)v6 >= 0x40) {
    uint64_t v8 = 0;
  }
  unint64_t v9 = 1uLL >> (-(char)v6 & 0x3E);
  if ((unint64_t)v6 <= 0xFFFFFFFFFFFFFFC0) {
    unint64_t v9 = 0;
  }
  if (v6 < 0) {
    unint64_t v10 = v9;
  }
  else {
    unint64_t v10 = v8;
  }
  if (v7 <= 0xFFFFFFFFFFFFFF7ELL) {
    unint64_t v10 = 0;
  }
  BOOL v11 = v3 >= v5;
  unint64_t v12 = v3 - v5;
  if (!v11) {
    goto LABEL_20;
  }
  BOOL v11 = __CFADD__(v12, v10);
  unint64_t v13 = v12 + v10;
  if (!v11)
  {
    *a2 = v13;
    return result;
  }
LABEL_21:
  __break(1u);
  return result;
}

void S2CellId.childEnd()(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
    goto LABEL_6;
  }
  unint64_t v3 = -*v1 & v2;
  BOOL v4 = __CFADD__(v2, v3);
  uint64_t v5 = v2 + v3;
  if (v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  BOOL v4 = __CFADD__(v5, v3 >> 2);
  uint64_t v6 = v5 + (v3 >> 2);
  if (!v4)
  {
    *a1 = v6;
    return;
  }
LABEL_7:
  __break(1u);
}

void S2CellId.prev()(void *a1@<X8>)
{
  if (__OFSUB__(0, *v1)) {
    __break(1u);
  }
  else {
    *a1 = *v1 - 2 * (-*v1 & *v1);
  }
}

void S2CellId.nextWrap()(unint64_t *a1@<X8>)
{
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *v1 + 2 * (-*v1 & *v1);
    if (v2 >> 62 == 3) {
      v2 += 0x4000000000000000;
    }
    *a1 = v2;
  }
}

BOOL static S2CellId.unsignedLongLessThan(lhs:rhs:)(unint64_t a1, unint64_t a2)
{
  return a1 < a2;
}

void S2CellId.prevWrap()(uint64_t *a1@<X8>)
{
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *v1 - 2 * (-*v1 & *v1);
    if (v2 >= (uint64_t)0xC000000000000000) {
      v2 -= 0x4000000000000000;
    }
    *a1 = v2;
  }
}

uint64_t static S2CellId.begin(level:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return S2CellId.childBegin(level:)(a1, a2);
}

uint64_t static S2CellId.end(level:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return S2CellId.childEnd(level:)(a1, a2);
}

uint64_t S2CellId.NumberFormatException.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

VisualIntelligence::S2CellId::NumberFormatException __swiftcall S2CellId.NumberFormatException.init(_:)(VisualIntelligence::S2CellId::NumberFormatException result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t S2CellId.init(token:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1DD048508();
  if (v7)
  {
    uint64_t v8 = v7;
    unint64_t v9 = sub_1DCEB2CE4(v7, 0);
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1DCEB2C28(&v24, v9 + 4, v8, a1, a2);
    uint64_t result = swift_bridgeObjectRelease();
    if (v10 != (void *)v8)
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    unint64_t v12 = v9[2];
    if (v12)
    {
LABEL_4:
      if (v12 > 0x10 || a1 == 88 && a2 == 0xE100000000000000 || (uint64_t result = sub_1DD048FA8(), (result & 1) != 0))
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
        *a3 = 0;
        return result;
      }
      uint64_t v23 = a3;
      uint64_t v26 = v3;
      unint64_t v15 = 0;
      unint64_t v16 = 0;
      for (unint64_t i = v9 + 5; ; i += 2)
      {
        if (v16 >= v12)
        {
          int64_t v19 = 0;
        }
        else
        {
          if (v16 >= v9[2]) {
            goto LABEL_35;
          }
          uint64_t v18 = sub_1DD0484B8();
          int64_t v19 = strtoul((const char *)(v18 + 32), 0, 16);
          uint64_t result = swift_release();
          if (v19 < 0) {
            goto LABEL_36;
          }
          if (qword_1EAB01F30 != -1) {
            uint64_t result = swift_once();
          }
          if (*((void *)off_1EAB03D38 + 2) < 0xBuLL) {
            goto LABEL_37;
          }
          unint64_t v20 = *((void *)off_1EAB03D38 + 14);
          if (v15 >= v20)
          {
            if (v20 < v15) {
              goto LABEL_32;
            }
            if (qword_1EAB01F38 != -1) {
              uint64_t result = swift_once();
            }
            if (*((void *)off_1EAB03D40 + 2) < 0xBuLL) {
              goto LABEL_39;
            }
            if (*((void *)off_1EAB03D40 + 14) < v19)
            {
LABEL_32:
              swift_release();
              unint64_t v24 = 0xD00000000000001DLL;
              unint64_t v25 = 0x80000001DD06D1C0;
              sub_1DD048548();
              swift_bridgeObjectRelease();
              unint64_t v22 = v24;
              unint64_t v14 = v25;
              sub_1DCEB2E7C();
              swift_allocError();
              *unint64_t v13 = v22;
              goto LABEL_10;
            }
          }
        }
        if (v15 >> 60) {
          break;
        }
        BOOL v21 = __CFADD__(v19, 16 * v15);
        unint64_t v15 = v19 + 16 * v15;
        if (v21) {
          goto LABEL_34;
        }
        if (++v16 == 16)
        {
          swift_release();
          uint64_t result = swift_bridgeObjectRelease();
          *uint64_t v23 = v15;
          return result;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v12) {
      goto LABEL_4;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_1DCEB2E7C();
  swift_allocError();
  *unint64_t v13 = 0xD000000000000022;
  unint64_t v14 = 0x80000001DD06D190;
LABEL_10:
  v13[1] = v14;
  return swift_willThrow();
}

uint64_t S2CellId.token.getter()
{
  if (!*v0) {
    return 88;
  }
  sub_1DCE4A4A4();
  sub_1DD0485F8();
  uint64_t v1 = sub_1DD048488();
  unint64_t v3 = v2;
  swift_bridgeObjectRelease();
  unint64_t v25 = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1DD048508();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = 16 - v4;
  if (!__OFSUB__(16, v4))
  {
    if (v6 >= 1)
    {
      uint64_t v7 = v6 & ~(v6 >> 63);
      do
      {
        sub_1DD048558();
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1DD048508();
    swift_bridgeObjectRelease();
    uint64_t v9 = HIBYTE(v25) & 0xF;
    if ((v25 & 0x2000000000000000) == 0) {
      uint64_t v9 = v1 & 0xFFFFFFFFFFFFLL;
    }
    if (!v9) {
      goto LABEL_15;
    }
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1DD048518();
    if (sub_1DD048608() == 48 && v11 == 0xE100000000000000)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = sub_1DD048FA8();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
LABEL_14:
        swift_bridgeObjectRelease();
LABEL_15:
        uint64_t v14 = sub_1DCEB2D5C(v8);
        uint64_t v16 = v15;
        uint64_t v18 = v17;
        uint64_t v20 = v19;
        swift_bridgeObjectRelease();
        uint64_t v21 = MEMORY[0x1E01AE180](v14, v16, v18, v20);
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    BOOL v22 = __OFSUB__(v8--, 1);
    if (!v22)
    {
      while (v10 >= 0x4000)
      {
        unint64_t v10 = sub_1DD048518();
        if (sub_1DD048608() == 48 && v24 == 0xE100000000000000)
        {
          uint64_t result = swift_bridgeObjectRelease();
          BOOL v22 = __OFSUB__(v8--, 1);
          if (v22) {
            goto LABEL_28;
          }
        }
        else
        {
          char v23 = sub_1DD048FA8();
          uint64_t result = swift_bridgeObjectRelease();
          if ((v23 & 1) == 0) {
            goto LABEL_14;
          }
          BOOL v22 = __OFSUB__(v8--, 1);
          if (v22) {
            goto LABEL_28;
          }
        }
      }
      goto LABEL_14;
    }
LABEL_28:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1DCEB18D0()
{
  off_1EAB03D38 = &unk_1F3836D98;
}

void sub_1DCEB18E4()
{
  off_1EAB03D40 = &unk_1F3836EE0;
}

uint64_t S2CellId.getEdgeNeighbors()()
{
  unint64_t v1 = *v0;
  uint64_t v2 = S2CellId.level.getter();
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v3 = 1 << (30 - v2);
  uint64_t v4 = sub_1DCEB27B4((unint64_t *)&v19, (unint64_t *)&v18, 7, (v1 >> 61) & 1);
  uint64_t v5 = sub_1DCEB27B4((unint64_t *)&v19, (unint64_t *)&v18, 6, v4);
  uint64_t v6 = sub_1DCEB27B4((unint64_t *)&v19, (unint64_t *)&v18, 5, v5);
  uint64_t v7 = sub_1DCEB27B4((unint64_t *)&v19, (unint64_t *)&v18, 4, v6);
  uint64_t v8 = sub_1DCEB27B4((unint64_t *)&v19, (unint64_t *)&v18, 3, v7);
  uint64_t v9 = sub_1DCEB27B4((unint64_t *)&v19, (unint64_t *)&v18, 2, v8);
  uint64_t v10 = sub_1DCEB27B4((unint64_t *)&v19, (unint64_t *)&v18, 1, v9);
  unint64_t v17 = v1;
  sub_1DCEB27B4((unint64_t *)&v19, (unint64_t *)&v18, 0, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB027C0);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1DD04EF80;
  uint64_t v12 = v18;
  if (__OFSUB__(v18, v3))
  {
    __break(1u);
    goto LABEL_7;
  }
  char v13 = (unint64_t *)result;
  uint64_t v14 = v1 >> 61;
  uint64_t v15 = v19;
  uint64_t v16 = (unint64_t *)(result + 32);
  S2CellId.init(face:i:j:sameFace:)(v14, v19, v18 - v3, v18 - v3 >= 0, (uint64_t *)&v17);
  uint64_t result = S2CellId.parent(level:)(v2, v16);
  if (__OFADD__(v15, v3))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  S2CellId.init(face:i:j:sameFace:)(v14, v15 + v3, v12, v15 + v3 < 0x40000000, (uint64_t *)&v17);
  uint64_t result = S2CellId.parent(level:)(v2, v13 + 5);
  if (__OFADD__(v12, v3))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  S2CellId.init(face:i:j:sameFace:)(v14, v15, v12 + v3, v12 + v3 < 0x40000000, (uint64_t *)&v17);
  uint64_t result = S2CellId.parent(level:)(v2, v13 + 6);
  if (!__OFSUB__(v15, v3))
  {
    S2CellId.init(face:i:j:sameFace:)(v14, v15 - v3, v12, v15 - v3 >= 0, (uint64_t *)&v17);
    S2CellId.parent(level:)(v2, v13 + 7);
    return (uint64_t)v13;
  }
LABEL_9:
  __break(1u);
  return result;
}

void *S2CellId.getVertexNeighbors(level:)(void *a1)
{
  unint64_t v10 = *v2;
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  uint64_t v11 = sub_1DCEB27B4((unint64_t *)&v42, (unint64_t *)&v41, 7, (v10 >> 61) & 1);
  uint64_t v12 = sub_1DCEB27B4((unint64_t *)&v42, (unint64_t *)&v41, 6, v11);
  uint64_t v13 = sub_1DCEB27B4((unint64_t *)&v42, (unint64_t *)&v41, 5, v12);
  uint64_t v14 = sub_1DCEB27B4((unint64_t *)&v42, (unint64_t *)&v41, 4, v13);
  uint64_t v15 = sub_1DCEB27B4((unint64_t *)&v42, (unint64_t *)&v41, 3, v14);
  uint64_t v16 = sub_1DCEB27B4((unint64_t *)&v42, (unint64_t *)&v41, 2, v15);
  uint64_t v17 = sub_1DCEB27B4((unint64_t *)&v42, (unint64_t *)&v41, 1, v16);
  unint64_t v40 = v10;
  unint64_t v18 = (unint64_t)&v40;
  sub_1DCEB27B4((unint64_t *)&v42, (unint64_t *)&v41, 0, v17);
  unint64_t v19 = (unint64_t)a1 + 1;
  if (__OFADD__(a1, 1))
  {
    __break(1u);
    goto LABEL_53;
  }
  BOOL v20 = __OFSUB__(30, v19);
  unint64_t v19 = 29 - (void)a1;
  if (v20)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  BOOL v21 = v19 > 0x40;
  if (v19 >= 0x40) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = 1 << v19;
  }
  if (v21) {
    uint64_t v22 = 0;
  }
  uint64_t v1 = 2 * v22;
  uint64_t v3 = v42;
  if ((v42 & v22) == 0)
  {
    unint64_t v8 = -2 * v22;
    if (__OFSUB__(0, v1))
    {
      __break(1u);
    }
    else if (!__OFSUB__(v42, v1))
    {
      BOOL v23 = v42 - v1 >= 0;
      goto LABEL_14;
    }
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (__OFADD__(v42, v1))
  {
    __break(1u);
    goto LABEL_62;
  }
  BOOL v23 = v42 + v1 < 0x40000000;
  unint64_t v8 = 2 * v22;
LABEL_14:
  uint64_t v4 = v41;
  if ((v41 & v22) != 0)
  {
    if (!__OFADD__(v41, v1))
    {
      BOOL v24 = v41 + v1 < 0x40000000;
      goto LABEL_20;
    }
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  v22 *= -2;
  if (__OFSUB__(0, v1)) {
    goto LABEL_71;
  }
  if (__OFSUB__(v41, v1))
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  BOOL v24 = v41 - v1 >= 0;
  uint64_t v1 = -v1;
LABEL_20:
  unint64_t v19 = 30 - (void)a1;
  if (__OFSUB__(30, a1))
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (0x400000000000001ELL - (uint64_t)a1 >= 0)
  {
    unint64_t v7 = 2 * v19;
    unint64_t v38 = 2 * v19 - 65;
    BOOL v39 = v23;
    BOOL v37 = v24;
    if (v38 <= 0xFFFFFFFFFFFFFF7ELL)
    {
LABEL_23:
      unint64_t v25 = 0;
      goto LABEL_27;
    }
    if ((v7 & 0x8000000000000000) == 0)
    {
      if (v7 >= 0x40) {
        goto LABEL_23;
      }
      unint64_t v25 = 1 << (v7 & 0x3E);
LABEL_27:
      unint64_t v18 = v10 & -(uint64_t)v25 | v25;
      a1 = sub_1DCE9FE74(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v6 = a1[2];
      unint64_t v19 = a1[3];
      unint64_t v5 = v6 + 1;
      if (v6 < v19 >> 1) {
        goto LABEL_28;
      }
      goto LABEL_56;
    }
LABEL_63:
    if (v7 <= 0xFFFFFFFFFFFFFFC0) {
      goto LABEL_23;
    }
    unint64_t v25 = 1uLL >> (-(char)v7 & 0x3E);
    goto LABEL_27;
  }
LABEL_55:
  __break(1u);
LABEL_56:
  a1 = sub_1DCE9FE74((void *)(v19 > 1), v5, 1, a1);
LABEL_28:
  a1[2] = v5;
  unint64_t v26 = (unint64_t)&a1[v6];
  *(void *)(v26 + 32) = v18;
  if (!__OFADD__(v3, v8))
  {
    v10 >>= 61;
    uint64_t v36 = v3 + v8;
    S2CellId.init(face:i:j:sameFace:)(v10, v3 + v8, v4, v39, (uint64_t *)&v40);
    unint64_t v8 = v38;
    if (v38 < 0xFFFFFFFFFFFFFF7FLL)
    {
LABEL_30:
      unint64_t v27 = 0;
      goto LABEL_34;
    }
    if ((v7 & 0x8000000000000000) != 0)
    {
      if (v7 <= 0xFFFFFFFFFFFFFFC0) {
        goto LABEL_30;
      }
      unint64_t v27 = 1uLL >> (-(char)v7 & 0x3E);
    }
    else
    {
      if (v7 >= 0x40) {
        goto LABEL_30;
      }
      unint64_t v27 = 1 << (v7 & 0x3E);
    }
LABEL_34:
    unint64_t v18 = v40 & -(uint64_t)v27 | v27;
    unint64_t v5 = a1[2];
    unint64_t v26 = a1[3];
    unint64_t v6 = v5 + 1;
    if (v5 < v26 >> 1) {
      goto LABEL_35;
    }
    goto LABEL_58;
  }
  __break(1u);
LABEL_58:
  a1 = sub_1DCE9FE74((void *)(v26 > 1), v6, 1, a1);
LABEL_35:
  a1[2] = v6;
  unint64_t v28 = (unint64_t)&a1[v5];
  *(void *)(v28 + 32) = v18;
  BOOL v20 = __OFADD__(v4, v1);
  uint64_t v29 = v4 + v1;
  if (!v20)
  {
    LODWORD(v5) = v37;
    S2CellId.init(face:i:j:sameFace:)(v10, v3, v29, v37, (uint64_t *)&v40);
    if (v8 < 0xFFFFFFFFFFFFFF7FLL)
    {
LABEL_37:
      unint64_t v30 = 0;
      goto LABEL_41;
    }
    if ((v7 & 0x8000000000000000) != 0)
    {
      if (v7 <= 0xFFFFFFFFFFFFFFC0) {
        goto LABEL_37;
      }
      unint64_t v30 = 1uLL >> (-(char)v7 & 0x3E);
    }
    else
    {
      if (v7 >= 0x40) {
        goto LABEL_37;
      }
      unint64_t v30 = 1 << (v7 & 0x3E);
    }
LABEL_41:
    uint64_t v1 = v40 & -(uint64_t)v30 | v30;
    unint64_t v18 = a1[2];
    unint64_t v28 = a1[3];
    uint64_t v3 = v18 + 1;
    if (v18 < v28 >> 1) {
      goto LABEL_42;
    }
    goto LABEL_60;
  }
  __break(1u);
LABEL_60:
  a1 = sub_1DCE9FE74((void *)(v28 > 1), v3, 1, a1);
LABEL_42:
  a1[2] = v3;
  a1[v18 + 4] = v1;
  if (((v39 | v5) & 1) == 0) {
    return a1;
  }
  S2CellId.init(face:i:j:sameFace:)(v10, v36, v29, v39 & v5, (uint64_t *)&v40);
  uint64_t v22 = v40;
  if (v8 <= 0xFFFFFFFFFFFFFF7ELL) {
    goto LABEL_44;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_73:
    if (v7 > 0xFFFFFFFFFFFFFFC0)
    {
      unint64_t v31 = 1uLL >> (-(char)v7 & 0x3E);
      goto LABEL_48;
    }
    goto LABEL_44;
  }
  if (v7 < 0x40)
  {
    unint64_t v31 = 1 << (v7 & 0x3E);
    goto LABEL_48;
  }
LABEL_44:
  unint64_t v31 = 0;
LABEL_48:
  unint64_t v32 = v22 & -(uint64_t)v31 | v31;
  unint64_t v34 = a1[2];
  unint64_t v33 = a1[3];
  if (v34 >= v33 >> 1) {
    a1 = sub_1DCE9FE74((void *)(v33 > 1), v34 + 1, 1, a1);
  }
  a1[2] = v34 + 1;
  a1[v34 + 4] = v32;
  return a1;
}

uint64_t S2CellId.getAllNeighbors(level:)(uint64_t a1)
{
  unint64_t v3 = *v1;
  unint64_t v67 = 0;
  unint64_t v66 = 0;
  uint64_t v4 = sub_1DCEB27B4(&v67, &v66, 7, (v3 >> 61) & 1);
  uint64_t v5 = sub_1DCEB27B4(&v67, &v66, 6, v4);
  uint64_t v6 = sub_1DCEB27B4(&v67, &v66, 5, v5);
  uint64_t v7 = sub_1DCEB27B4(&v67, &v66, 4, v6);
  uint64_t v8 = sub_1DCEB27B4(&v67, &v66, 3, v7);
  uint64_t v9 = sub_1DCEB27B4(&v67, &v66, 2, v8);
  uint64_t v10 = sub_1DCEB27B4(&v67, &v66, 1, v9);
  sub_1DCEB27B4(&v67, &v66, 0, v10);
  unint64_t v65 = v3;
  uint64_t result = S2CellId.level.getter();
  unint64_t v12 = 30 - a1;
  if (__OFSUB__(30, a1)) {
    goto LABEL_78;
  }
  uint64_t v13 = 1 << v12;
  if (v12 >= 0x40) {
    uint64_t v13 = 0;
  }
  if (v12 <= 0x40) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = -v14;
  if (__OFSUB__(0, v14))
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  uint64_t v16 = 1 << (30 - result);
  uint64_t v17 = -v16;
  unint64_t v18 = v67 & -v16;
  uint64_t v63 = v18 - v14;
  if (__OFSUB__(v18, v14))
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if (0x400000000000001ELL - a1 < 0)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  uint64_t v62 = v18 + v16;
  if (!__OFADD__(v18, v16))
  {
    uint64_t v19 = v3 >> 61;
    unint64_t v20 = v66 & v17;
    uint64_t v21 = 2 * v12;
    uint64_t v54 = (v66 & v17) - v14;
    BOOL v22 = __OFSUB__(v66 & v17, v14);
    BOOL v23 = __OFSUB__(v20, v16);
    BOOL v55 = v23;
    BOOL v56 = v22;
    unint64_t v24 = v21 - 65;
    uint64_t v25 = 1 << (v21 & 0x3E);
    unint64_t v26 = 1uLL >> (-(char)v21 & 0x3E);
    unint64_t v64 = v66 & v17;
    uint64_t v51 = v20 + v16;
    BOOL v27 = __OFADD__(v20, v16);
    BOOL v53 = v27;
    unint64_t v57 = v67 & -v16;
    int64_t v28 = v18 - v16;
    BOOL v29 = __OFSUB__(v18, v16);
    BOOL v58 = v28 >= 0;
    BOOL v59 = v29;
    if ((unint64_t)v21 >= 0x40) {
      uint64_t v25 = 0;
    }
    if ((unint64_t)v21 <= 0xFFFFFFFFFFFFFFC0) {
      unint64_t v26 = 0;
    }
    if (v21 >= 0) {
      unint64_t v30 = v25;
    }
    else {
      unint64_t v30 = v26;
    }
    if (v24 >= 0xFFFFFFFFFFFFFF7FLL) {
      unint64_t v31 = v30;
    }
    else {
      unint64_t v31 = 0;
    }
    uint64_t v32 = -(uint64_t)v31;
    unint64_t v33 = (void *)MEMORY[0x1E4FBC860];
    char v52 = (uint64_t)(v20 - v16) >= 0;
    uint64_t v60 = v14;
    uint64_t v61 = 1 << (30 - result);
    while (1)
    {
      if (v15 < 0)
      {
        uint64_t v40 = v64 + v15;
        if (__OFADD__(v64, v15)) {
          goto LABEL_71;
        }
        if ((v40 & 0x8000000000000000) == 0) {
          goto LABEL_51;
        }
      }
      else
      {
        if (v15 < v16)
        {
          if (__OFADD__(v57, v15)) {
            goto LABEL_72;
          }
          if (v56) {
            goto LABEL_73;
          }
          if (v55) {
            goto LABEL_74;
          }
          S2CellId.init(face:i:j:sameFace:)(v19, v57 + v15, v54, v52, (uint64_t *)&v65);
          uint64_t v34 = v65;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1DCE9FE74(0, v33[2] + 1, 1, v33);
            unint64_t v33 = (void *)result;
          }
          unint64_t v36 = v33[2];
          unint64_t v35 = v33[3];
          if (v36 >= v35 >> 1)
          {
            uint64_t result = (uint64_t)sub_1DCE9FE74((void *)(v35 > 1), v36 + 1, 1, v33);
            unint64_t v33 = (void *)result;
          }
          void v33[2] = v36 + 1;
          v33[v36 + 4] = v34 & v32 | v31;
          if (v53) {
            goto LABEL_75;
          }
          uint64_t result = (uint64_t)S2CellId.init(face:i:j:sameFace:)(v19, v57 + v15, v51, v51 < 30, (uint64_t *)&v65);
          uint64_t v37 = v65;
          unint64_t v39 = v33[2];
          unint64_t v38 = v33[3];
          if (v39 >= v38 >> 1)
          {
            uint64_t result = (uint64_t)sub_1DCE9FE74((void *)(v38 > 1), v39 + 1, 1, v33);
            unint64_t v33 = (void *)result;
          }
          void v33[2] = v39 + 1;
          v33[v39 + 4] = v37 & v32 | v31;
          uint64_t v40 = v64 + v15;
          if (__OFADD__(v64, v15)) {
            goto LABEL_76;
          }
LABEL_51:
          if (v59) {
            goto LABEL_70;
          }
          char v41 = 1;
          char v42 = v58;
          goto LABEL_56;
        }
        uint64_t v40 = v64 + v15;
        if (__OFADD__(v64, v15)) {
          goto LABEL_77;
        }
        if (v40 <= 29) {
          goto LABEL_51;
        }
      }
      char v41 = 0;
      char v42 = 0;
LABEL_56:
      S2CellId.init(face:i:j:sameFace:)(v19, v63, v40, v42, (uint64_t *)&v65);
      uint64_t v43 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v33 = sub_1DCE9FE74(0, v33[2] + 1, 1, v33);
      }
      unint64_t v45 = v33[2];
      unint64_t v44 = v33[3];
      if (v45 >= v44 >> 1) {
        unint64_t v33 = sub_1DCE9FE74((void *)(v44 > 1), v45 + 1, 1, v33);
      }
      void v33[2] = v45 + 1;
      v33[v45 + 4] = v43 & v32 | v31;
      if (v62 < 30) {
        char v46 = v41;
      }
      else {
        char v46 = 0;
      }
      uint64_t result = (uint64_t)S2CellId.init(face:i:j:sameFace:)(v19, v62, v40, v46, (uint64_t *)&v65);
      uint64_t v47 = v65;
      unint64_t v49 = v33[2];
      unint64_t v48 = v33[3];
      if (v49 >= v48 >> 1)
      {
        uint64_t result = (uint64_t)sub_1DCE9FE74((void *)(v48 > 1), v49 + 1, 1, v33);
        unint64_t v33 = (void *)result;
      }
      uint64_t v16 = v61;
      void v33[2] = v49 + 1;
      v33[v49 + 4] = v47 & v32 | v31;
      if (v15 >= v61) {
        return (uint64_t)v33;
      }
      BOOL v50 = __OFADD__(v15, v60);
      v15 += v60;
      if (v50)
      {
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
    }
  }
LABEL_82:
  __break(1u);
  return result;
}

uint64_t sub_1DCEB2560(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((unint64_t)(a4 - 0x2000000000000000) >> 62 != 3)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v6 = a4;
  uint64_t v5 = (_UNKNOWN ***)result;
  unint64_t v8 = 4 * a4;
  if (4 * a4 < -64)
  {
    LOBYTE(v9) = 0;
    goto LABEL_21;
  }
  if ((uint64_t)v8 <= 64)
  {
    uint64_t v12 = a2 >> (v8 & 0x3C);
    if (v8 >= 0x40) {
      uint64_t v12 = a2 >> 63;
    }
    uint64_t v13 = a2 << ((-4 * a4) & 0x3C);
    if (v8 <= 0xFFFFFFFFFFFFFFC0) {
      LOBYTE(v13) = 0;
    }
    if ((a4 & 0x2000000000000000) != 0) {
      LOBYTE(v12) = v13;
    }
    unint64_t v14 = (unint64_t)(v12 & 0xF) << 6;
    BOOL v11 = __OFADD__(a5, v14);
    a5 += v14;
    if (v11) {
      goto LABEL_39;
    }
    uint64_t v15 = a3 >> (v8 & 0x3C);
    if (v8 >= 0x40) {
      uint64_t v15 = a3 >> 63;
    }
    uint64_t v16 = a3 << ((-4 * a4) & 0x3C);
    if (v8 <= 0xFFFFFFFFFFFFFFC0) {
      LOBYTE(v16) = 0;
    }
    if ((a4 & 0x2000000000000000) != 0) {
      LOBYTE(v9) = v16;
    }
    else {
      LOBYTE(v9) = v15;
    }
LABEL_21:
    uint64_t v17 = 4 * (v9 & 0xF);
    uint64_t v7 = a5 + v17;
    if (!__OFADD__(a5, v17))
    {
      if ((byte_1EBE867A8 & 1) == 0)
      {
        sub_1DCEB0284(0, 0, 0, 0, 0, 0);
        sub_1DCEB0284(0, 0, 0, 1uLL, 0, 1uLL);
        sub_1DCEB0284(0, 0, 0, 2uLL, 0, 2uLL);
        sub_1DCEB0284(0, 0, 0, 3uLL, 0, 3uLL);
        byte_1EBE867A8 = 1;
      }
      if (qword_1EBE867C8 == -1)
      {
LABEL_25:
        unint64_t v18 = &off_1EBE867B0;
        swift_beginAccess();
        if (v7 < 0)
        {
          __break(1u);
        }
        else if ((unint64_t)v7 < *((void *)off_1EBE867B0 + 2))
        {
          uint64_t v7 = *((void *)off_1EBE867B0 + v7 + 4);
          unint64_t v18 = *v5;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if (result)
          {
            if ((v6 & 0x8000000000000000) == 0) {
              goto LABEL_29;
            }
            goto LABEL_37;
          }
LABEL_36:
          uint64_t result = (uint64_t)sub_1DCEC1C3C(v18);
          unint64_t v18 = (_UNKNOWN **)result;
          if ((v6 & 0x8000000000000000) == 0)
          {
LABEL_29:
            if (v6 >> 2 < (uint64_t)v18[2])
            {
              v18[(v6 >> 2) + 4] = (_UNKNOWN *)((unint64_t)v18[(v6 >> 2) + 4] | (v7 >> 2 << (8
                                                                                                  * (v6 & 3u))));
              *uint64_t v5 = v18;
              return v7 & 3;
            }
            goto LABEL_38;
          }
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        __break(1u);
        goto LABEL_36;
      }
LABEL_33:
      swift_once();
      goto LABEL_25;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v10 = (a2 >> 57) & 0x3C0;
  BOOL v11 = __OFADD__(a5, v10);
  a5 += v10;
  if (!v11)
  {
    uint64_t v9 = a3 >> 63;
    goto LABEL_21;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1DCEB27B4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (a3 + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v6 = a3;
  if ((unint64_t)(2 * a3 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    swift_once();
    goto LABEL_19;
  }
  uint64_t v9 = (8 * a3) | 1;
  uint64_t v10 = *v5 >> ((8 * a3) & 0x38 | 1);
  if (v9 >= 64) {
    uint64_t v10 = *v5 >> 63;
  }
  uint64_t v11 = *v5 << -(char)v9;
  if (v9 <= -64) {
    uint64_t v11 = 0;
  }
  if ((a3 & 0x1000000000000000) == 0) {
    uint64_t v11 = v10;
  }
  if (v9 > 64) {
    uint64_t v11 = *v5 >> 63;
  }
  if (v9 < -64) {
    uint64_t v11 = 0;
  }
  uint64_t v12 = 255;
  if (a3 == 7) {
    uint64_t v12 = 15;
  }
  uint64_t v13 = v11 & v12;
  unint64_t v8 = a4 + 4 * v13;
  if (__OFADD__(a4, 4 * v13)) {
    goto LABEL_39;
  }
  uint64_t v4 = a2;
  uint64_t v7 = a1;
  if ((byte_1EBE867A8 & 1) == 0)
  {
    sub_1DCEB0284(0, 0, 0, 0, 0, 0);
    sub_1DCEB0284(0, 0, 0, 1uLL, 0, 1uLL);
    sub_1DCEB0284(0, 0, 0, 2uLL, 0, 2uLL);
    sub_1DCEB0284(0, 0, 0, 3uLL, 0, 3uLL);
    byte_1EBE867A8 = 1;
  }
  if (qword_1EBE867C8 != -1) {
    goto LABEL_40;
  }
LABEL_19:
  swift_beginAccess();
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  LOBYTE(v14) = (_BYTE)off_1EBE867B8;
  unint64_t v15 = *((void *)off_1EBE867B8 + 2);
  if (v8 >= v15)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  unint64_t v15 = (unint64_t)(v6 - 0x2000000000000000) >> 62;
  if (v15 != 3)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v14 = *((void *)off_1EBE867B8 + v8 + 4);
  unint64_t v15 = 4 * v6;
  if (4 * v6 <= -65)
  {
LABEL_23:
    uint64_t v17 = v14 >> 63;
    goto LABEL_29;
  }
  if ((uint64_t)v15 > 64) {
    goto LABEL_25;
  }
  uint64_t v18 = v14 >> 6;
  if ((v15 & 0x8000000000000000) != 0)
  {
    if (v15 <= 0xFFFFFFFFFFFFFFC0) {
      goto LABEL_23;
    }
    uint64_t v17 = v18 >> ((-4 * v6) & 0x3C);
  }
  else
  {
    if (v15 >= 0x40)
    {
LABEL_25:
      uint64_t v17 = 0;
      goto LABEL_29;
    }
    uint64_t v17 = v18 << (v15 & 0x3C);
  }
LABEL_29:
  BOOL v19 = __OFADD__(*v7, v17);
  unint64_t v16 = *v7 + v17;
  if (v19)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  *uint64_t v7 = v16;
  if (v15 - 65 < 0xFFFFFFFFFFFFFF7FLL) {
    goto LABEL_31;
  }
  unint64_t v16 = ((unint64_t)v14 >> 2) & 0xF;
  if ((v15 & 0x8000000000000000) != 0) {
    goto LABEL_46;
  }
  if (v15 >= 0x40) {
    goto LABEL_31;
  }
  unint64_t v20 = v16 << (v15 & 0x3C);
  while (1)
  {
    unint64_t v16 = *v4;
    BOOL v19 = __OFADD__(*v4, v20);
    unint64_t v15 = *v4 + v20;
    if (!v19) {
      break;
    }
LABEL_45:
    __break(1u);
LABEL_46:
    if (v15 <= 0xFFFFFFFFFFFFFFC0) {
LABEL_31:
    }
      unint64_t v20 = 0;
    else {
      unint64_t v20 = v16 >> (-(char)v15 & 0x3C);
    }
  }
  *uint64_t v4 = v15;
  return v14 & 3;
}

uint64_t S2CellId.hash(into:)()
{
  uint64_t result = *v0 + HIDWORD(*v0);
  if (!__CFADD__(*v0, HIDWORD(*v0))) {
    return sub_1DD0490C8();
  }
  __break(1u);
  return result;
}

BOOL static S2CellId.unsignedLongGreaterThan(lhs:rhs:)(unint64_t a1, unint64_t a2)
{
  return a2 < a1;
}

uint64_t S2CellId.hashValue.getter()
{
  unint64_t v1 = *v0;
  sub_1DD0490B8();
  uint64_t result = v1 + HIDWORD(v1);
  if (__CFADD__(v1, HIDWORD(v1)))
  {
    __break(1u);
  }
  else
  {
    sub_1DD0490C8();
    return sub_1DD049108();
  }
  return result;
}

BOOL sub_1DCEB2AF0(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_1DCEB2B04(void *a1, void *a2)
{
  return *a1 <= *a2;
}

BOOL sub_1DCEB2B18(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1DCEB2B2C(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t sub_1DCEB2B40()
{
  unint64_t v1 = *v0;
  sub_1DD0490B8();
  uint64_t result = v1 + HIDWORD(v1);
  if (__CFADD__(v1, HIDWORD(v1)))
  {
    __break(1u);
  }
  else
  {
    sub_1DD0490C8();
    return sub_1DD049108();
  }
  return result;
}

uint64_t sub_1DCEB2B90()
{
  uint64_t result = *v0 + HIDWORD(*v0);
  if (!__CFADD__(*v0, HIDWORD(*v0))) {
    return sub_1DD0490C8();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCEB2BC8()
{
  unint64_t v1 = *v0;
  sub_1DD0490B8();
  uint64_t result = v1 + HIDWORD(v1);
  if (__CFADD__(v1, HIDWORD(v1)))
  {
    __break(1u);
  }
  else
  {
    sub_1DD0490C8();
    return sub_1DD049108();
  }
  return result;
}

BOOL == infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_1DCEB2C28(void *result, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5 = result;
  uint64_t v6 = HIBYTE(a5) & 0xF;
  uint64_t v12 = a4;
  unint64_t v13 = a5;
  if ((a5 & 0x2000000000000000) == 0) {
    uint64_t v6 = a4 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v14 = v6;
  if (!a2)
  {
    uint64_t v7 = 0;
LABEL_14:
    *uint64_t v5 = a4;
    v5[1] = a5;
    id v5[2] = 0;
    _OWORD v5[3] = v6;
    return (void *)v7;
  }
  uint64_t v7 = a3;
  if (!a3) {
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    unint64_t v8 = a2;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = sub_1DD048568();
      if (!v11) {
        break;
      }
      ++v9;
      *unint64_t v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        a4 = v12;
        a5 = v13;
        goto LABEL_13;
      }
    }
    a4 = v12;
    a5 = v13;
    uint64_t v7 = v9;
LABEL_13:
    uint64_t v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void *sub_1DCEB2CE4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026C8);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = _swift_stdlib_malloc_size(v4);
  uint64_t v6 = v5 - 32;
  if (v5 < 32) {
    uint64_t v6 = v5 - 17;
  }
  v4[2] = a1;
  void v4[3] = 2 * (v6 >> 4);
  return v4;
}

uint64_t sub_1DCEB2D5C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1DD048528();
    return sub_1DD048638();
  }
  return result;
}

uint64_t sub_1DCEB2DF8(double a1)
{
  double v1 = fmin(round(a1 * 536870912.0 + 536870912.0), 1073741820.0);
  if (v1 < 0.0) {
    double v1 = 0.0;
  }
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v1 < 9.22337204e18) {
    return (uint64_t)v1;
  }
LABEL_9:
  __break(1u);
  return result;
}

unint64_t sub_1DCEB2E7C()
{
  unint64_t result = qword_1EAB03D48;
  if (!qword_1EAB03D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03D48);
  }
  return result;
}

unint64_t sub_1DCEB2ED4()
{
  unint64_t result = qword_1EAB03D50;
  if (!qword_1EAB03D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03D50);
  }
  return result;
}

ValueMetadata *type metadata accessor for S2CellId()
{
  return &type metadata for S2CellId;
}

ValueMetadata *type metadata accessor for S2CellId.NumberFormatException()
{
  return &type metadata for S2CellId.NumberFormatException;
}

void sub_1DCEB2F4C(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = (void *)sub_1DCD742D8(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1DCEBA710(v5);
  *a1 = v3;
}

uint64_t sub_1DCEB2FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, uint64_t a7, void *a8, double a9, double a10, double a11, double a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v36 = a2;
    uint64_t v35 = result;
    sub_1DCD3A3BC(a4, (uint64_t)v37);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = a1;
    sub_1DCD3A4DC(v37, v29 + 24);
    *(double *)(v29 + 64) = a9;
    *(double *)(v29 + 72) = a10;
    *(double *)(v29 + 80) = a11;
    *(double *)(v29 + 88) = a12;
    sub_1DCD43B04((uint64_t)a5, v29 + 96, &qword_1EBE855D8);
    *(void *)(v29 + 160) = a6;
    *(void *)(v29 + 168) = a3;
    *(void *)(v29 + 176) = a7;
    *(void *)(v29 + 184) = a8;
    *(void *)(v29 + 192) = a13;
    *(void *)(v29 + 200) = a14;
    *(void *)(v29 + 208) = a15;
    *(void *)(v29 + 216) = a16;
    v38[0] = 0x6C46206573726150;
    v38[1] = 0xEA0000000000776FLL;
    v38[2] = "Fetch Available Domains";
    void v38[3] = 23;
    char v39 = 2;
    type metadata accessor for DurationMeasurement();
    swift_allocObject();
    swift_retain_n();
    swift_retain();
    sub_1DCEBF700(a5);
    id v30 = a6;
    swift_retain();
    id v31 = a8;
    sub_1DCD33F64(a13, a14);
    swift_retain();
    uint64_t v32 = sub_1DCEA469C((uint64_t)v38, a3);
    swift_release();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v36;
    uint64_t v34 = *(void *)(v35 + 112);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1DCD750FC(v34, v33, v36, v32, (void (*)(uint64_t))sub_1DCEBF6B4, v29);
    swift_release();
    swift_release();
    swift_release_n();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1DCEB3250(uint64_t a1, double a2, double a3, double a4, double a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, void (*a15)(uint64_t), uint64_t a16)
{
  uint64_t v46 = a11;
  uint64_t v45 = a8;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B20);
  MEMORY[0x1F4188790](v44);
  unint64_t v26 = (char *)v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1DD048068();
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)v39 - v28;
  uint64_t v30 = type metadata accessor for ParseResult(0);
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)v39 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v39[0] = (uint64_t)v29;
    char v41 = v26;
    v39[1] = a16;
    uint64_t v40 = a15;
    *(double *)unint64_t v48 = a2;
    *(double *)&v48[1] = a3;
    *(double *)&v48[2] = a4;
    *(double *)&v48[3] = a5;
    sub_1DCD43B04(v45, (uint64_t)v47, &qword_1EBE855D8);
    sub_1DCEB3F90(a7, v48, a1, v47, a9, a10, v46, a12, (uint64_t)v32, a13, a14);
    uint64_t v34 = v39[0];
    sub_1DCDB40EC(v39[0]);
    uint64_t v35 = sub_1DD048048();
    os_log_type_t v36 = sub_1DD048848();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl(&dword_1DCCF9000, v35, v36, "parse(): successful", v37, 2u);
      MEMORY[0x1E01B07E0](v37, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v34, v43);
    uint64_t v38 = (uint64_t)v41;
    sub_1DCEBE6BC((uint64_t)v32, (uint64_t)v41, type metadata accessor for ParseResult);
    swift_storeEnumTagMultiPayload();
    v40(v38);
    swift_release();
    sub_1DCD2479C(v38, &qword_1EBE86B20);
    return sub_1DCEB90BC((uint64_t)v32, type metadata accessor for ParseResult);
  }
  return result;
}

uint64_t sub_1DCEB37F8(uint64_t a1, int a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8);
  MEMORY[0x1F4188790](v17 - 8);
  BOOL v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29.origin.Swift::Double x = 0.0;
  v29.origin.CGFloat y = 0.0;
  v29.size.CGFloat width = 1.0;
  v29.size.CGFloat height = 1.0;
  v28.origin.Swift::Double x = a5;
  v28.origin.CGFloat y = a6;
  v28.size.CGFloat width = a7;
  v28.size.CGFloat height = a8;
  CGRect v27 = CGRectIntersection(v28, v29);
  sub_1DCFAB314(*(double *)&a1, a2, &v27.origin.x, v8 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_config, (uint64_t)v19, a3, a4);
  uint64_t v20 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20) == 1)
  {
    sub_1DCD2479C((uint64_t)v19, &qword_1EBE866F8);
    return 0;
  }
  else
  {
    sub_1DCEBF8CC(&qword_1EBE866D8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    uint64_t v22 = sub_1DD047E28();
    unint64_t v24 = v23;
    sub_1DCEB90BC((uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    uint64_t v21 = sub_1DD0464D8();
    sub_1DCD21954(v22, v24);
  }
  return v21;
}

uint64_t sub_1DCEB3A3C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v59 = a6;
  uint64_t v60 = a5;
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  uint64_t v8 = sub_1DD048068();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v53 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v53 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v53 - v19;
  MEMORY[0x1F4188790](v21);
  unint64_t v23 = (char *)&v53 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v53 - v25;
  CGRect v27 = (uint64_t *)(a2 + 16);
  if (a1)
  {
    if (a1 == 1)
    {
      sub_1DCDB40EC((uint64_t)v14);
      sub_1DCDB4300((uint64_t)v11);
      CGRect v28 = *(void (**)(char *, uint64_t))(v9 + 8);
      v28(v14, v8);
      CGRect v29 = sub_1DD048048();
      os_log_type_t v30 = sub_1DD048848();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_1DCCF9000, v29, v30, "Application does not have any allowed domains", v31, 2u);
        MEMORY[0x1E01B07E0](v31, -1, -1);
      }

      v28(v11, v8);
      swift_beginAccess();
      uint64_t *v27 = MEMORY[0x1E4FBC870];
      swift_bridgeObjectRelease();
      uint64_t v32 = v60;
    }
    else
    {
      sub_1DCDB40EC((uint64_t)&v53 - v25);
      sub_1DCDB4300((uint64_t)v23);
      uint64_t v38 = *(void (**)(char *, uint64_t))(v9 + 8);
      v38(v26, v8);
      sub_1DCD765A8(a1);
      swift_bridgeObjectRetain();
      char v39 = sub_1DD048048();
      os_log_type_t v40 = sub_1DD048848();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        BOOL v56 = v38;
        uint64_t v42 = (uint8_t *)v41;
        uint64_t v54 = swift_slowAlloc();
        v62[0] = v54;
        *(_DWORD *)uint64_t v42 = 136315138;
        BOOL v53 = v42 + 4;
        sub_1DCD56564();
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_1DD0487E8();
        uint64_t v55 = v8;
        uint64_t v44 = v43;
        unint64_t v46 = v45;
        sub_1DCD74490(a1);
        uint64_t v47 = v44;
        uint64_t v32 = v60;
        uint64_t v61 = sub_1DCED7FA0(v47, v46, v62);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        sub_1DCD74490(a1);
        sub_1DCD74490(a1);
        _os_log_impl(&dword_1DCCF9000, v39, v40, "Application can parse some domains: %s", v42, 0xCu);
        uint64_t v48 = v54;
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v48, -1, -1);
        MEMORY[0x1E01B07E0](v42, -1, -1);

        v56(v23, v55);
      }
      else
      {
        sub_1DCD74490(a1);
        sub_1DCD74490(a1);

        v38(v23, v8);
        uint64_t v32 = v60;
      }
      uint64_t v49 = v57;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1DCD72A00(a1, v49);
      swift_beginAccess();
      uint64_t *v27 = v50;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v33 = v60;
    sub_1DCDB40EC((uint64_t)v20);
    sub_1DCDB4300((uint64_t)v17);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v9 + 8);
    v34(v20, v8);
    uint64_t v35 = sub_1DD048048();
    os_log_type_t v36 = sub_1DD048848();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl(&dword_1DCCF9000, v35, v36, "Application can parse any domain", v37, 2u);
      MEMORY[0x1E01B07E0](v37, -1, -1);
    }

    v34(v17, v8);
    uint64_t v32 = v33;
  }
  sub_1DCEA3DA4();
  swift_beginAccess();
  uint64_t v51 = swift_bridgeObjectRetain();
  v32(v51);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCEB3F90@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unint64_t a11)
{
  uint64_t v194 = a7;
  uint64_t v195 = a9;
  uint64_t v212 = a6;
  uint64_t v214 = a5;
  unint64_t v215 = (_UNKNOWN **)a3;
  long long v216 = a1;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C38);
  MEMORY[0x1F4188790](v14 - 8);
  *(void *)&long long v205 = (char *)&v183 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig(0);
  uint64_t v203 = *(unsigned int (***)(void, void, void))(v16 - 8);
  uint64_t v204 = v16;
  MEMORY[0x1F4188790](v16);
  *((void *)&v205 + 1) = (char *)&v183 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DD048068();
  uint64_t v206 = *(void *)(v18 - 8);
  uint64_t v207 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v196 = (uint64_t)&v183 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  unint64_t v202 = (unint64_t)&v183 - v21;
  uint64_t v22 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v208 = v22;
  uint64_t v209 = v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v211 = (uint64_t)&v183 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v192 = (uint64_t)&v183 - v26;
  uint64_t v27 = sub_1DD047C38();
  MEMORY[0x1F4188790](v27 - 8);
  unint64_t v193 = (char *)&v183 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v31 = (char *)&v183 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v183 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v183 - v36;
  uint64_t v38 = *a2;
  uint64_t v39 = a2[1];
  uint64_t v40 = a2[2];
  uint64_t v41 = a2[3];
  uint64_t v42 = a8;
  uint64_t v43 = (_UNKNOWN **)*a4;
  uint64_t v200 = a4[1];
  id v201 = v43;
  uint64_t v44 = a4[2];
  uint64_t v198 = a4[3];
  uint64_t v199 = v44;
  uint64_t v45 = a4[5];
  uint64_t v197 = (_UNKNOWN **)a4[4];
  uint64_t v47 = a4[6];
  uint64_t v46 = a4[7];
  uint64_t v48 = v213;
  uint64_t result = sub_1DCEBBFB8((uint64_t)v216, (uint64_t)v215, v42);
  if (v48) {
    return result;
  }
  long long v185 = v31;
  long long v186 = v34;
  uint64_t v187 = v46;
  uint64_t v188 = v47;
  uint64_t v189 = v45;
  uint64_t v210 = v37;
  uint64_t v50 = &selRef_parseCameraFrameWithVisualQuery_completion_;
  uint64_t v51 = v214;
  uint64_t v213 = 0;
  uint64_t v191 = v42;
  if (v214) {
    BOOL v52 = objc_msgSend(v214, sel_imageType) == (id)3;
  }
  else {
    BOOL v52 = 0;
  }
  unint64_t v53 = v208;
  unint64_t v208 = a11;
  id v54 = v51;
  sub_1DCD95A8C(v51, (uint64_t)&v232);
  id v190 = v54;

  if (!v52)
  {
    *(_OWORD *)v245 = v232;
    uint64_t v55 = (void *)*((void *)&v233 + 1);
    *(void *)&v245[16] = v233;
    long long v246 = *(_OWORD *)&v245[8];
    BOOL v56 = self;
    *((void *)&v225 + 1) = &type metadata for ParseStartEvent;
    uint64_t v226 = &off_1F383A248;
    uint64_t v57 = swift_allocObject();
    *(void *)&long long v224 = v57;
    long long v58 = v233;
    *(_OWORD *)(v57 + 16) = v232;
    *(_OWORD *)(v57 + 32) = v58;
    *(unsigned char *)(v57 + 48) = v234;
    uint64_t v59 = (objc_class *)type metadata accessor for AnyVIAEvent();
    id v60 = objc_allocWithZone(v59);
    sub_1DCD3A3BC((uint64_t)&v224, (uint64_t)v60 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
    sub_1DCD64B20((uint64_t)&v246);
    id v61 = v55;
    sub_1DCD64B20((uint64_t)&v246);
    v231.receiver = v60;
    v231.super_class = v59;
    id v62 = v61;
    id v63 = objc_msgSendSuper2(&v231, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v224);
    objc_msgSend(v56, sel_logEvent_, v63);

    sub_1DCD64B4C((uint64_t)&v246);
  }
  unint64_t v64 = *(void (**)(char *, uint64_t, uint64_t, unint64_t))(v209 + 56);
  v64(v210, 1, 1, v53);
  unint64_t v65 = v208;
  if (v208 >> 60 != 15)
  {
    switch(v208 >> 62)
    {
      case 1uLL:
        if ((int)a10 == a10 >> 32) {
          goto LABEL_8;
        }
        goto LABEL_34;
      case 2uLL:
        if (*(void *)(a10 + 16) == *(void *)(a10 + 24)) {
          goto LABEL_8;
        }
LABEL_34:
        sub_1DCD33F64(a10, v208);
        goto LABEL_35;
      case 3uLL:
        goto LABEL_11;
      default:
        if ((v208 & 0xFF000000000000) == 0)
        {
LABEL_11:
          sub_1DCD392D4(a10, v208);
          uint64_t v66 = v249;
          goto LABEL_12;
        }
LABEL_35:
        *(void *)&long long v218 = a10;
        *((void *)&v218 + 1) = v65;
        uint64_t v226 = 0;
        long long v224 = 0u;
        long long v225 = 0u;
        sub_1DCD33F64(a10, v65);
        uint64_t v184 = a10;
        sub_1DD047C28();
        sub_1DCEBF8CC(&qword_1EBE866D8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
        uint64_t v137 = (uint64_t)v186;
        unint64_t v138 = v65;
        uint64_t v139 = v213;
        sub_1DD047E38();
        uint64_t v213 = v139;
        if (v139)
        {
          sub_1DCD2479C((uint64_t)v210, &qword_1EBE866F8);
          v243[0] = v232;
          uint64_t v140 = (void *)*((void *)&v233 + 1);
          *(void *)&v243[1] = v233;
          long long v244 = *(_OWORD *)((char *)v243 + 8);
          sub_1DCD64B4C((uint64_t)&v244);

          return sub_1DCD392D4(v184, v138);
        }
        unint64_t v175 = v53;
        uint64_t v176 = (uint64_t)v210;
        sub_1DCD2479C((uint64_t)v210, &qword_1EBE866F8);
        v64((char *)v137, 0, 1, v175);
        sub_1DCD43B04(v137, v176, &qword_1EBE866F8);
        uint64_t v177 = (uint64_t)v185;
        sub_1DCD2889C(v176, (uint64_t)v185, &qword_1EBE866F8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v209 + 48))(v177, 1, v175) == 1)
        {
          sub_1DCD392D4(v184, v208);
          sub_1DCD2479C(v177, &qword_1EBE866F8);
          uint64_t v66 = v249;
          uint64_t v50 = &selRef_parseCameraFrameWithVisualQuery_completion_;
          goto LABEL_12;
        }
        uint64_t v178 = v192;
        sub_1DCEBE808(v177, v192, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
        BOOL v179 = sub_1DCD4CE94();
        uint64_t v66 = v249;
        uint64_t v50 = &selRef_parseCameraFrameWithVisualQuery_completion_;
        uint64_t v180 = v184;
        if (v179)
        {
          sub_1DCEB90BC(v178, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
          sub_1DCD392D4(v180, v208);
          goto LABEL_12;
        }
        sub_1DCE6A230();
        swift_allocError();
        *uint64_t v181 = 2;
        swift_willThrow();
        sub_1DCD392D4(v180, v208);
        v241[0] = v232;
        uint64_t v182 = (void *)*((void *)&v233 + 1);
        *(void *)&v241[1] = v233;
        long long v242 = *(_OWORD *)((char *)v241 + 8);
        sub_1DCD64B4C((uint64_t)&v242);

        sub_1DCEB90BC(v178, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
        break;
    }
    return sub_1DCD2479C((uint64_t)v210, &qword_1EBE866F8);
  }
LABEL_8:
  uint64_t v66 = v249;
LABEL_12:
  LODWORD(v208) = v52;
  if (v51)
  {
    id v67 = [v190 v50[368]];
    char v68 = v216;
    sub_1DCD3A3BC((uint64_t)v216, (uint64_t)v230);
    if (v67 == (id)3) {
      goto LABEL_17;
    }
  }
  else
  {
    char v68 = v216;
    sub_1DCD3A3BC((uint64_t)v216, (uint64_t)v230);
  }
  sub_1DCD3A3BC((uint64_t)v68, (uint64_t)&v224);
  uint64_t v69 = type metadata accessor for ImageContentLazy();
  uint64_t v70 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
  uint64_t v71 = swift_allocObject();
  *(_DWORD *)(v71 + 16) = 0;
  uint64_t v72 = MEMORY[0x1E4FBC860];
  *(void *)(v70 + 56) = v71;
  *(void *)(v70 + 64) = v72;
  *(_OWORD *)(v70 + 72) = 0u;
  *(_OWORD *)(v70 + 88) = 0u;
  *(_OWORD *)(v70 + 104) = 0u;
  sub_1DCD3A4DC(&v224, v70 + 16);
  sub_1DCEA33D4((uint64_t)sub_1DCEA3508, 0);
  uint64_t v73 = v68[3];
  uint64_t v74 = v68[4];
  __swift_project_boxed_opaque_existential_1(v68, v73);
  double v75 = (*(double (**)(uint64_t, uint64_t))(v74 + 16))(v73, v74);
  uint64_t v77 = sub_1DCFE6C7C(v75, v76);
  char v79 = v78;
  uint64_t v80 = swift_allocObject();
  *(void *)(v80 + 16) = v77;
  char v81 = v79 & 1;
  uint64_t v66 = v249;
  *(unsigned char *)(v80 + 24) = v81;
  sub_1DCEA33D4((uint64_t)sub_1DCEBE7A0, v80);
  swift_release();
  *((void *)&v225 + 1) = v69;
  uint64_t v226 = &off_1F383A738;
  *(void *)&long long v224 = v70;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v230);
  sub_1DCD3A4DC(&v224, (uint64_t)v230);
  swift_release();
LABEL_17:
  *(void *)&long long v218 = v38;
  *((void *)&v218 + 1) = v39;
  *(void *)&long long v219 = v40;
  *((void *)&v219 + 1) = v41;
  uint64_t v82 = v66 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_config;
  uint64_t v83 = v66;
  uint64_t v84 = v211;
  double v85 = v214;
  uint64_t v86 = v212;
  uint64_t v87 = sub_1DCFA9760(&v224, v211, (uint64_t)v230, (uint64_t *)&v218, v214, v82, (uint64_t)v210, v212);
  long long v88 = v224;
  long long v89 = v225;
  uint64_t v90 = v191;
  double v91 = (os_unfair_lock_s *)(*(void *)(v191 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
  os_unfair_lock_lock(v91);
  LODWORD(v90) = *(unsigned __int8 *)(v90 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
  os_unfair_lock_unlock(v91);
  if (v90 == 1)
  {
    swift_bridgeObjectRelease();
    unint64_t v92 = v202;
    sub_1DCDB40EC(v202);
    long long v93 = sub_1DD048048();
    os_log_type_t v94 = sub_1DD048848();
    BOOL v95 = os_log_type_enabled(v93, v94);
    uint64_t v97 = v206;
    uint64_t v96 = v207;
    if (v95)
    {
      double v98 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v98 = 0;
      _os_log_impl(&dword_1DCCF9000, v93, v94, "parse(): canceled", v98, 2u);
      MEMORY[0x1E01B07E0](v98, -1, -1);
    }

    (*(void (**)(unint64_t, uint64_t))(v97 + 8))(v92, v96);
    sub_1DCE6A230();
    swift_allocError();
    *double v99 = 0;
    swift_willThrow();
    v235[0] = v232;
    unint64_t v100 = (void *)*((void *)&v233 + 1);
    *(void *)&v235[1] = v233;
    long long v236 = *(_OWORD *)((char *)v235 + 8);
    sub_1DCD64B4C((uint64_t)&v236);

    uint64_t v101 = v84;
    goto LABEL_29;
  }
  unint64_t v102 = sub_1DCE72D18(v87, (uint64_t)v215, v85, v86);
  swift_bridgeObjectRelease();
  long long v224 = v88;
  long long v225 = v89;
  uint64_t v103 = sub_1DCD34078(v102, &v224, v86);
  swift_bridgeObjectRelease();
  *(void *)&long long v218 = v201;
  *((void *)&v218 + 1) = v200;
  *(void *)&long long v219 = v199;
  *((void *)&v219 + 1) = v198;
  uint64_t v220 = v197;
  uint64_t v221 = v189;
  uint64_t v222 = v188;
  uint64_t v223 = v187;
  uint64_t v104 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20);
  unint64_t v202 = v82;
  uint64_t v105 = *(void *)(v82 + v104)
       + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__safetyConfig;
  swift_beginAccess();
  uint64_t v106 = v205;
  sub_1DCD2889C(v105, v205, &qword_1EBE84C38);
  uint64_t v107 = v204;
  uint64_t v108 = v83;
  if (v203[6](v106, 1, v204) == 1)
  {
    uint64_t v109 = (void *)*((void *)&v205 + 1);
    **((_WORD **)&v205 + 1) = 0;
    uint64_t v110 = MEMORY[0x1E4FBC860];
    v109[1] = sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
    v109[2] = sub_1DCDB8914(v110);
    v109[3] = v110;
    v109[4] = v110;
    v109[5] = v110;
    sub_1DD047BE8();
    uint64_t v111 = (char *)v109 + *(int *)(v107 + 48);
    uint64_t v112 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.CornerGlyphConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v111, 1, 1, v112);
    sub_1DCD2479C(v106, &qword_1EBE84C38);
  }
  else
  {
    uint64_t v109 = (void *)*((void *)&v205 + 1);
    sub_1DCEBE808(v106, *((uint64_t *)&v205 + 1), type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  }
  char v113 = v216;
  sub_1DCDC2D30(v103, (uint64_t *)&v218, (uint64_t)v109, &v224);
  sub_1DCEB90BC((uint64_t)v109, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  uint64_t v209 = v224;
  uint64_t v198 = v103;
  long long v114 = (unsigned int (**)(void, void, void))*((void *)&v224 + 1);
  uint64_t v115 = v226;
  long long v205 = v225;
  uint64_t v116 = v227;
  uint64_t v117 = v228;
  uint64_t v118 = v229;
  uint64_t v197 = *(_UNKNOWN ***)(v108 + 40);
  long long v218 = v88;
  long long v219 = v89;
  long long v119 = v113;
  uint64_t v120 = v113[3];
  uint64_t v121 = v119[4];
  __swift_project_boxed_opaque_existential_1(v119, v120);
  double v122 = *(double (**)(uint64_t, uint64_t))(v121 + 16);
  uint64_t v123 = v121;
  uint64_t v124 = v249;
  double v125 = v122(v120, v123);
  *(void *)&long long v224 = v209;
  *((void *)&v224 + 1) = v114;
  uint64_t v203 = v114;
  uint64_t v204 = v118;
  long long v225 = v205;
  uint64_t v200 = v116;
  id v201 = v115;
  uint64_t v226 = v115;
  uint64_t v227 = v116;
  uint64_t v199 = v117;
  uint64_t v228 = v117;
  uint64_t v229 = v118;
  double v126 = v214;
  unint64_t v128 = sub_1DCE2DF54(v198, (double *)&v218, (uint64_t)&v224, v202, v212, v214, v125, v127);
  swift_bridgeObjectRelease();
  LOBYTE(v224) = *(unsigned char *)(v124 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_mlEngineType);
  if (sub_1DCFE71F8((unsigned __int8 *)&v224, v128))
  {
    uint64_t v129 = v196;
    sub_1DCDB40EC(v196);
    uint64_t v130 = sub_1DD048048();
    os_log_type_t v131 = sub_1DD048848();
    if (os_log_type_enabled(v130, v131))
    {
      double v132 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v132 = 0;
      _os_log_impl(&dword_1DCCF9000, v130, v131, "Domain selection is enabled.", v132, 2u);
      double v133 = v132;
      uint64_t v129 = v196;
      MEMORY[0x1E01B07E0](v133, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v129, v207);
    long long v224 = v88;
    long long v225 = v89;
    uint64_t v134 = v213;
    unint64_t v135 = sub_1DCDBFD04(v128, v216, &v224, v126, v212);
    if (v134)
    {
      sub_1DCD43C58(v209);
      v239[0] = v232;
      uint64_t v136 = (void *)*((void *)&v233 + 1);
      *(void *)&v239[1] = v233;
      long long v240 = *(_OWORD *)((char *)v239 + 8);
      sub_1DCD64B4C((uint64_t)&v240);
      swift_bridgeObjectRelease();

      uint64_t v101 = v211;
LABEL_29:
      sub_1DCEB90BC(v101, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v230);
      return sub_1DCD2479C((uint64_t)v210, &qword_1EBE866F8);
    }
    unint64_t v141 = v135;
    uint64_t v213 = 0;
    swift_bridgeObjectRelease();
    unint64_t v128 = v141;
  }
  uint64_t v142 = *(void *)(v124 + 48);
  v247[0] = 0x6C46206573726150;
  v247[1] = 0xEA0000000000776FLL;
  v247[2] = "VI: Region Grouping";
  v247[3] = 19;
  char v248 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  uint64_t v143 = v212;
  swift_retain();
  sub_1DCEA469C((uint64_t)v247, v143);
  swift_release();
  type metadata accessor for RegionGroupingProcessor();
  long long v224 = v88;
  long long v225 = v89;
  *(void *)&long long v224 = sub_1DCF9A954(v128, (uint64_t *)&v224, *(void *)(v142 + OBJC_IVAR____TtC18VisualIntelligence23RegionGroupingProcessor_boxScorer), v142 + OBJC_IVAR____TtC18VisualIntelligence23RegionGroupingProcessor_config);
  swift_bridgeObjectRetain();
  uint64_t v144 = v213;
  sub_1DCEB2F4C((void **)&v224);
  uint64_t v213 = v144;
  if (v144)
  {
    swift_release();
    __break(1u);
    JUMPOUT(0x1DCEB5400);
  }
  int v145 = v208 ^ 1;
  swift_bridgeObjectRelease();
  unint64_t v146 = v224;
  sub_1DCEA3DA4();
  swift_bridgeObjectRelease();
  swift_release();
  LODWORD(v206) = v145;
  if (v214)
  {
    id v147 = objc_msgSend(v190, sel_imageType);
    uint64_t v148 = v202;
    if (v147 == (id)3)
    {
      uint64_t v149 = sub_1DCFDFAA0(v146);
      swift_release();
      unint64_t v146 = sub_1DCFCDF4C(v149);
      swift_bridgeObjectRelease();
    }
    uint64_t v150 = (uint64_t)v215;
  }
  else
  {
    uint64_t v150 = (uint64_t)v215;
    uint64_t v148 = v202;
  }
  uint64_t v151 = (void (**)(char *, uint64_t, uint64_t))sub_1DCD7AA68(v146, v150, *(void *)(v124+ OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_domainGlyphConfig), v148);
  swift_bridgeObjectRelease();
  *(void *)&long long v218 = v209;
  *((void *)&v218 + 1) = v203;
  long long v219 = v205;
  uint64_t v220 = v201;
  uint64_t v221 = v200;
  uint64_t v222 = v199;
  uint64_t v223 = v204;
  unint64_t v202 = sub_1DCEB5410(&v224, (void (*)(char *, uint64_t))v230, v151, &v218, v214, v212);
  swift_bridgeObjectRelease();
  sub_1DCD43C58(v209);
  unint64_t v152 = *((void *)&v224 + 1);
  uint64_t v153 = v224;
  uint64_t v154 = *((void *)&v225 + 1);
  unint64_t v215 = v226;
  *(void *)&long long v205 = v225;
  *((void *)&v205 + 1) = v227;
  uint64_t v209 = v228;
  uint64_t v207 = v229;
  sub_1DCEA3DA4();
  if ((v208 & 1) == 0)
  {
    long long v155 = v232;
    unint64_t v208 = v152;
    long long v156 = v233;
    uint64_t v204 = v153;
    char v157 = v234;
    id v158 = objc_allocWithZone(MEMORY[0x1E4F9A078]);
    swift_bridgeObjectRetain();
    id v159 = *((id *)&v156 + 1);
    id v160 = objc_msgSend(v158, sel_initWithStartSearch_, v159);
    uint64_t v203 = (unsigned int (**)(void, void, void))self;
    *((void *)&v225 + 1) = &type metadata for ParseEndEvent;
    uint64_t v226 = &off_1F3839228;
    uint64_t v161 = swift_allocObject();
    *(void *)&long long v224 = v161;
    *(void *)(v161 + 16) = v160;
    *(_OWORD *)(v161 + 24) = v155;
    *(void *)(v161 + 40) = v156;
    *(void *)(v161 + 48) = v159;
    *(unsigned char *)(v161 + 56) = v157;
    uint64_t v153 = v204;
    *(unsigned char *)(v161 + 57) = 0;
    uint64_t v162 = (objc_class *)type metadata accessor for AnyVIAEvent();
    id v163 = objc_allocWithZone(v162);
    sub_1DCD3A3BC((uint64_t)&v224, (uint64_t)v163 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
    v217.receiver = v163;
    v217.super_class = v162;
    unint64_t v152 = v208;
    id v164 = v160;
    swift_bridgeObjectRetain_n();
    id v165 = v159;
    id v166 = v164;
    id v167 = v165;
    id v168 = objc_msgSendSuper2(&v217, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v224);
    objc_msgSend(v203, sel_logEvent_, v168);

    swift_bridgeObjectRelease_n();
  }
  uint64_t v169 = v216[3];
  uint64_t v170 = v216[4];
  __swift_project_boxed_opaque_existential_1(v216, v169);
  double v171 = (*(double (**)(uint64_t, uint64_t))(v170 + 16))(v169, v170);
  long long v218 = v88;
  long long v219 = v89;
  *(void *)&long long v224 = v153;
  *((void *)&v224 + 1) = v152;
  *(void *)&long long v225 = v205;
  *((void *)&v225 + 1) = v154;
  uint64_t v226 = v215;
  uint64_t v227 = *((void *)&v205 + 1);
  uint64_t v228 = v209;
  uint64_t v229 = v207;
  uint64_t v172 = v211;
  sub_1DCEB5E6C(v202, &v218, (uint64_t *)&v224, v214, v211, v206, v212, v195, v171, v173);
  swift_bridgeObjectRelease();
  v237[0] = v232;
  CGRect v174 = (void *)*((void *)&v233 + 1);
  *(void *)&v237[1] = v233;
  long long v238 = *(_OWORD *)((char *)v237 + 8);
  sub_1DCD64B4C((uint64_t)&v238);

  sub_1DCEB90BC(v172, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v230);
  sub_1DCD2479C((uint64_t)v210, &qword_1EBE866F8);
  return sub_1DCD43C58(v153);
}

unint64_t sub_1DCEB5410(_OWORD *a1, void (*a2)(char *, uint64_t), void (**a3)(char *, uint64_t, uint64_t), long long *a4, void *a5, uint64_t a6)
{
  double v85 = a2;
  uint64_t v86 = a3;
  uint64_t v11 = sub_1DD048068();
  *(void *)&long long v77 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  char v81 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v87 = (char *)&v69 - v14;
  uint64_t v80 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v76 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v79 = (uint64_t)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v83 = (uint64_t)&v69 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v69 - v19;
  long long v84 = *a4;
  long long v82 = a4[1];
  long long v78 = a4[2];
  uint64_t v21 = *((void *)a4 + 6);
  uint64_t v22 = *((void *)a4 + 7);
  sub_1DCD5AAE0((uint64_t)objc_msgSend(a5, sel_preferredMetalDevice));
  swift_unknownObjectRelease();
  v88[0] = v84;
  v88[1] = v82;
  v88[2] = v78;
  uint64_t v89 = v21;
  uint64_t v90 = v22;
  unint64_t v23 = sub_1DCD5AD58((uint64_t *)&v91, v85, (uint64_t)v86, (uint64_t *)v88, v6 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_config, a6);
  unint64_t v24 = v23;
  long long v25 = v91;
  long long v26 = v92;
  long long v27 = v93;
  long long v28 = v94;
  uint64_t v29 = *(void *)(v23 + 16);
  if (v29)
  {
    long long v69 = v94;
    long long v70 = v93;
    long long v71 = v92;
    long long v72 = v91;
    uint64_t v74 = a1;
    uint64_t v30 = v23 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
    uint64_t v31 = *(void *)(v76 + 72);
    uint64_t v86 = (void (**)(char *, uint64_t, uint64_t))(v77 + 16);
    uint64_t v32 = (void (**)(char *, uint64_t))(v77 + 8);
    unint64_t v73 = v23;
    swift_bridgeObjectRetain();
    *(void *)&long long v82 = "coarseCategoryDistribution";
    unint64_t v75 = 0x80000001DD067880;
    *(void *)&long long v33 = 136315138;
    long long v77 = v33;
    uint64_t v76 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v34 = v81;
    *(void *)&long long v84 = v32;
    *(void *)&long long v78 = v31;
    while (1)
    {
      sub_1DCEBE6BC(v30, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (qword_1EBE87190 != -1) {
        swift_once();
      }
      if (byte_1EBE87188 != 1) {
        goto LABEL_21;
      }
      id v35 = objc_msgSend(self, sel_mainBundle);
      id v36 = objc_msgSend(v35, sel_bundleIdentifier);

      if (v36)
      {
        uint64_t v37 = sub_1DD048408();
        uint64_t v39 = v38;

        if (v37 == 0xD00000000000002BLL && v39 == v75)
        {
          swift_bridgeObjectRelease();
LABEL_13:
          uint64_t v41 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            uint64_t v41 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_17;
        }
        char v40 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v40) {
          goto LABEL_13;
        }
      }
      uint64_t v41 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v41 = &qword_1EBE871E8;
      }
LABEL_17:
      uint64_t v42 = *(void **)(*v41 + 32);
      swift_retain();
      uint64_t v43 = (void *)sub_1DD0483D8();
      LODWORD(v42) = objc_msgSend(v42, sel_BOOLForKey_, v43);
      swift_release();

      uint64_t v32 = (void (**)(char *, uint64_t))v84;
      if (v42)
      {
        if (qword_1EAB01C80 != -1) {
          swift_once();
        }
        uint64_t v44 = v11;
        uint64_t v45 = qword_1EAB02B70;
        goto LABEL_24;
      }
LABEL_21:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v44 = v11;
      uint64_t v45 = qword_1EBE871A8;
LABEL_24:
      uint64_t v46 = __swift_project_value_buffer(v44, (uint64_t)v45);
      uint64_t v47 = *v86;
      (*v86)(v87, v46, v11);
      if ((byte_1EBE87188 & 1) == 0) {
        goto LABEL_36;
      }
      id v48 = objc_msgSend(self, sel_mainBundle);
      id v49 = objc_msgSend(v48, sel_bundleIdentifier);

      if (v49)
      {
        uint64_t v50 = sub_1DD048408();
        uint64_t v52 = v51;

        if (v50 == 0xD00000000000002BLL && v52 == ((unint64_t)v82 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
LABEL_30:
          id v54 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            id v54 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_34;
        }
        char v53 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v53) {
          goto LABEL_30;
        }
      }
      id v54 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        id v54 = &qword_1EBE871E8;
      }
LABEL_34:
      uint64_t v55 = *(void **)(*v54 + 32);
      swift_retain();
      BOOL v56 = (void *)sub_1DD0483D8();
      LODWORD(v55) = objc_msgSend(v55, sel_BOOLForKey_, v56);
      swift_release();

      uint64_t v32 = (void (**)(char *, uint64_t))v84;
      if (!v55)
      {
LABEL_36:
        if (qword_1EBE871C8 != -1) {
          swift_once();
        }
        uint64_t v58 = __swift_project_value_buffer(v11, (uint64_t)qword_1EBE871A8);
        uint64_t v57 = v34;
        goto LABEL_39;
      }
      uint64_t v57 = v34;
      uint64_t v58 = (uint64_t)v87;
LABEL_39:
      v47(v57, v58, v11);
      double v85 = *v32;
      v85(v87, v11);
      uint64_t v59 = v83;
      sub_1DCEBE6BC((uint64_t)v20, v83, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      id v60 = sub_1DD048048();
      os_log_type_t v61 = sub_1DD048848();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = swift_slowAlloc();
        uint64_t v63 = swift_slowAlloc();
        *(void *)&long long v91 = v63;
        *(_DWORD *)uint64_t v62 = v77;
        sub_1DCEBE6BC(v59, v79, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v64 = sub_1DD048498();
        *(void *)(v62 + 4) = sub_1DCED7FA0(v64, v65, (uint64_t *)&v91);
        swift_bridgeObjectRelease();
        uint64_t v31 = v78;
        sub_1DCEB90BC(v59, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        _os_log_impl(&dword_1DCCF9000, v60, v61, "%s", (uint8_t *)v62, 0xCu);
        swift_arrayDestroy();
        uint64_t v66 = v63;
        uint64_t v34 = v81;
        MEMORY[0x1E01B07E0](v66, -1, -1);
        uint64_t v67 = v62;
        uint64_t v32 = (void (**)(char *, uint64_t))v84;
        MEMORY[0x1E01B07E0](v67, -1, -1);
      }
      else
      {

        sub_1DCEB90BC(v59, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      }
      v85(v34, v11);
      sub_1DCEB90BC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      v30 += v31;
      if (!--v29)
      {
        unint64_t v24 = v73;
        swift_bridgeObjectRelease();
        a1 = v74;
        long long v25 = v72;
        long long v26 = v71;
        long long v27 = v70;
        long long v28 = v69;
        break;
      }
    }
  }
  *a1 = v25;
  a1[1] = v26;
  a1[2] = v27;
  a1[3] = v28;
  return v24;
}

uint64_t sub_1DCEB5E6C@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  uint64_t v93 = a5;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85EF8);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v92 = (uint64_t)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig(0);
  uint64_t v90 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v97 = (unint64_t *)((char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  MEMORY[0x1F4188790](v25);
  long long v27 = *a2;
  long long v28 = a2[1];
  uint64_t v29 = *a3;
  uint64_t v30 = a3[2];
  uint64_t v31 = a3[3];
  uint64_t v32 = a3[4];
  uint64_t v33 = a3[5];
  uint64_t v34 = a3[6];
  uint64_t v35 = a3[7];
  uint64_t v105 = a3[1];
  uint64_t v106 = v29;
  uint64_t v103 = v31;
  uint64_t v104 = v30;
  uint64_t v101 = v33;
  uint64_t v102 = v32;
  uint64_t v100 = v34;
  double v98 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = v35;
  uint64_t v94 = v36;
  long long v88 = v28;
  long long v89 = v27;
  if (a4)
  {
    sub_1DCD434B4(v29);
    id v37 = objc_msgSend(a4, sel_queryID);
    if (a7)
    {
LABEL_3:
      swift_beginAccess();
      uint64_t v38 = swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1DCD434B4(v29);
    id v37 = 0;
    if (a7) {
      goto LABEL_3;
    }
  }
  uint64_t v38 = MEMORY[0x1E4FBC860];
LABEL_6:
  *(void *)&long long v121 = a1;
  *((void *)&v121 + 1) = v106;
  *(void *)&long long v122 = v105;
  *((void *)&v122 + 1) = v104;
  *(void *)&long long v123 = v103;
  *((void *)&v123 + 1) = v102;
  *(void *)&long long v124 = v101;
  *((void *)&v124 + 1) = v100;
  *(void *)&v125[0] = v99;
  *(_OWORD *)((char *)v125 + 8) = v89;
  *(_OWORD *)((char *)&v125[1] + 8) = v88;
  *((double *)&v125[2] + 1) = a9;
  *(double *)&long long v126 = a10;
  BYTE8(v126) = 0;
  *(void *)&long long v127 = 0;
  *((void *)&v127 + 1) = 0xE000000000000000;
  long long v128 = (unint64_t)v37;
  long long v129 = 0uLL;
  uint64_t v130 = v38;
  BOOL v95 = v21;
  if ((a6 & 1) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_17:
    uint64_t v50 = v97;
    uint64_t v49 = (uint64_t)v98;
    uint64_t v51 = v96;
    goto LABEL_19;
  }
  long long v117 = v127;
  long long v118 = v128;
  long long v119 = v129;
  uint64_t v120 = v130;
  long long v113 = v125[0];
  long long v114 = v125[1];
  long long v115 = v125[2];
  long long v116 = v126;
  long long v109 = v121;
  long long v110 = v122;
  long long v111 = v123;
  long long v112 = v124;
  swift_bridgeObjectRetain();
  uint64_t v39 = *(void *)(VisualUnderstanding.imageRegions.getter() + 16);
  swift_bridgeObjectRelease();
  if (v39)
  {
    long long v117 = v127;
    long long v118 = v128;
    long long v119 = v129;
    uint64_t v120 = v130;
    long long v113 = v125[0];
    long long v114 = v125[1];
    long long v115 = v125[2];
    long long v116 = v126;
    long long v109 = v121;
    long long v110 = v122;
    long long v111 = v123;
    long long v112 = v124;
    id v40 = a4;
    sub_1DCD433F0((uint64_t)&v121);
    sub_1DCD95B9C(a4, &v109, (uint64_t)v131);
    v134[0] = *(_OWORD *)&v131[8];
    sub_1DCD43B04((uint64_t)&v131[24], (uint64_t)&v133, &qword_1EBE82CB8);
    uint64_t v41 = self;
    *((void *)&v110 + 1) = &type metadata for ParseResultEvent;
    *(void *)&long long v111 = &off_1F383A898;
    uint64_t v42 = swift_allocObject();
    *(void *)&long long v109 = v42;
    long long v43 = *(_OWORD *)&v131[16];
    *(_OWORD *)(v42 + 16) = *(_OWORD *)v131;
    *(_OWORD *)(v42 + 32) = v43;
    *(unsigned char *)(v42 + 48) = v132;
    uint64_t v44 = (objc_class *)type metadata accessor for AnyVIAEvent();
    id v45 = objc_allocWithZone(v44);
    sub_1DCD3A3BC((uint64_t)&v109, (uint64_t)v45 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
    sub_1DCD64B20((uint64_t)v134);
    sub_1DCD64C00(&v133);
    sub_1DCD64B20((uint64_t)v134);
    sub_1DCD64C00(&v133);
    v108.receiver = v45;
    v108.super_class = v44;
    id v46 = objc_msgSendSuper2(&v108, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
    objc_msgSend(v41, sel_logEvent_, v46);

    sub_1DCD64B4C((uint64_t)v134);
    sub_1DCD64C2C(&v133);
    sub_1DCD64B4C((uint64_t)v134);
    sub_1DCD64C2C(&v133);
  }
  if (a7)
  {
    swift_beginAccess();
    uint64_t v47 = *(void *)(a7 + 16);
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1DCD24E28(a4, 0, v47);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v48 = MEMORY[0x1E4FBC860];
  }
  uint64_t v50 = v97;
  uint64_t v49 = (uint64_t)v98;
  uint64_t v51 = v96;
  uint64_t v52 = *(void *)(v48 + 16);
  if (v52)
  {
    uint64_t v87 = a1;
    *(void *)&long long v88 = v25;
    *(void *)&long long v89 = a8;
    uint64_t v53 = self;
    uint64_t v54 = v48;
    uint64_t v55 = (void *)v53;
    uint64_t v86 = v54;
    BOOL v56 = (unsigned char *)(v54 + 64);
    do
    {
      uint64_t v57 = *((void *)v56 - 4);
      uint64_t v58 = *((void *)v56 - 3);
      uint64_t v59 = *((void *)v56 - 2);
      id v60 = (void *)*((void *)v56 - 1);
      char v61 = *v56;
      v56 += 40;
      *((void *)&v110 + 1) = &type metadata for DurationEvent;
      *(void *)&long long v111 = &off_1F3834F98;
      uint64_t v62 = swift_allocObject();
      *(void *)&long long v109 = v62;
      *(void *)(v62 + 16) = v57;
      *(void *)(v62 + 24) = v58;
      *(void *)(v62 + 32) = v59;
      *(void *)(v62 + 40) = v60;
      *(unsigned char *)(v62 + 48) = v61;
      uint64_t v63 = (objc_class *)type metadata accessor for AnyVIAEvent();
      id v64 = objc_allocWithZone(v63);
      sub_1DCD3A3BC((uint64_t)&v109, (uint64_t)v64 + OBJC_IVAR____TtC18VisualIntelligence11AnyVIAEvent_event);
      v107.receiver = v64;
      v107.super_class = v63;
      swift_bridgeObjectRetain_n();
      id v65 = v60;
      id v66 = objc_msgSendSuper2(&v107, sel_init, v86);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
      objc_msgSend(v55, sel_logEvent_, v66);

      swift_bridgeObjectRelease_n();
      --v52;
    }
    while (v52);
    swift_bridgeObjectRelease();
    a8 = v89;
    a1 = v87;
    uint64_t v25 = v88;
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v67 = v91 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_config;
  uint64_t v68 = *(void *)(v67 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20))
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__parseCachingConfig;
  swift_beginAccess();
  uint64_t v69 = v68;
  uint64_t v70 = v92;
  sub_1DCD2889C(v69, v92, (uint64_t *)&unk_1EBE85EF8);
  uint64_t v71 = a1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v70, 1, v51) == 1)
  {
    uint64_t v72 = v70;
    uint64_t v73 = MEMORY[0x1E4FBC860];
    *uint64_t v50 = sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
    v50[1] = sub_1DCDB86BC(v73);
    void v50[2] = sub_1DCDB86BC(v73);
    sub_1DD047BE8();
    uint64_t v74 = (char *)v50 + *(int *)(v51 + 32);
    uint64_t v75 = type metadata accessor for Argos_Protos_Queryflow_DomainSignalsCachingConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v74, 1, 1, v75);
    uint64_t v76 = sub_1DCD2479C(v72, (uint64_t *)&unk_1EBE85EF8);
  }
  else
  {
    uint64_t v76 = sub_1DCEBE808(v70, (uint64_t)v50, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
  }
  MEMORY[0x1F4188790](v76);
  *(&v86 - 4) = v93;
  *(&v86 - 3) = v71;
  *(&v86 - 2) = (uint64_t)v50;
  sub_1DCEBF8CC(&qword_1EBE866D8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  sub_1DD047E78();
  sub_1DCEB90BC((uint64_t)v50, type metadata accessor for Argos_Protos_Queryflow_ParseCachingConfig);
  *(void *)&long long v109 = v106;
  *((void *)&v109 + 1) = v105;
  *(void *)&long long v110 = v104;
  *((void *)&v110 + 1) = v103;
  *(void *)&long long v111 = v102;
  *((void *)&v111 + 1) = v101;
  *(void *)&long long v112 = v100;
  *((void *)&v112 + 1) = v99;
  if (sub_1DCD4B63C(&v109, v67))
  {
    uint64_t v77 = (uint64_t)v95;
    sub_1DCEBE808(v49, (uint64_t)v95, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    uint64_t v78 = 0;
  }
  else
  {
    sub_1DCEB90BC(v49, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    uint64_t v78 = 1;
    uint64_t v77 = (uint64_t)v95;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v77, v78, 1, v25);
  long long v79 = v128;
  *(_OWORD *)(a8 + 128) = v127;
  *(_OWORD *)(a8 + 144) = v79;
  *(_OWORD *)(a8 + 160) = v129;
  *(void *)(a8 + 176) = v130;
  long long v80 = v125[1];
  *(_OWORD *)(a8 + 64) = v125[0];
  *(_OWORD *)(a8 + 80) = v80;
  long long v81 = v126;
  *(_OWORD *)(a8 + 96) = v125[2];
  *(_OWORD *)(a8 + 112) = v81;
  long long v82 = v122;
  *(_OWORD *)a8 = v121;
  *(_OWORD *)(a8 + 16) = v82;
  long long v83 = v124;
  *(_OWORD *)(a8 + 32) = v123;
  *(_OWORD *)(a8 + 48) = v83;
  uint64_t v84 = type metadata accessor for ParseResult(0);
  return sub_1DCD43B04(v77, a8 + *(int *)(v84 + 20), &qword_1EBE866F8);
}

uint64_t sub_1DCEB67BC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1DCEB90BC(v0 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_config, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_modelProviderService);
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1DCEB68B0()
{
  sub_1DCEB67BC();
  return swift_deallocClassInstance();
}

uint64_t ParseResult.visualUnderstanding.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = v1[9];
  long long v3 = v1[7];
  long long v24 = v1[8];
  long long v25 = v2;
  long long v4 = v1[9];
  long long v26 = v1[10];
  long long v5 = v1[5];
  long long v7 = v1[3];
  long long v20 = v1[4];
  long long v6 = v20;
  long long v21 = v5;
  long long v8 = v1[5];
  long long v9 = v1[7];
  long long v22 = v1[6];
  long long v10 = v22;
  long long v23 = v9;
  long long v11 = v1[1];
  v17[0] = *v1;
  v17[1] = v11;
  long long v12 = v1[3];
  long long v14 = *v1;
  long long v13 = v1[1];
  long long v18 = v1[2];
  long long v15 = v18;
  long long v19 = v12;
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 160) = v1[10];
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 112) = v3;
  *(_OWORD *)a1 = v14;
  *(_OWORD *)(a1 + 16) = v13;
  uint64_t v27 = *((void *)v1 + 22);
  *(void *)(a1 + 176) = *((void *)v1 + 22);
  *(_OWORD *)(a1 + 32) = v15;
  *(_OWORD *)(a1 + 48) = v7;
  return sub_1DCD433F0((uint64_t)v17);
}

uint64_t ParseResult.cachedResults.getter()
{
  uint64_t v1 = sub_1DD048068();
  MEMORY[0x1F4188790](v1);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8);
  MEMORY[0x1F4188790](v2 - 8);
  long long v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ParseResult(0);
  sub_1DCD2889C(v0 + *(int *)(v9 + 20), (uint64_t)v4, &qword_1EBE866F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE866F8);
    return 0;
  }
  else
  {
    sub_1DCEBE808((uint64_t)v4, (uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    sub_1DCEBF8CC(&qword_1EBE866D8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
    uint64_t v10 = sub_1DD047E28();
    unint64_t v12 = v11;
    uint64_t v13 = sub_1DD0464D8();
    sub_1DCD21954(v10, v12);
    sub_1DCEB90BC((uint64_t)v8, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  }
  return v13;
}

uint64_t type metadata accessor for ParseResult(uint64_t a1)
{
  return sub_1DCD27FD4(a1, qword_1EBE85678);
}

uint64_t sub_1DCEB6DBC()
{
  return type metadata accessor for ParseFlow(0);
}

uint64_t type metadata accessor for ParseFlow(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86D50);
}

uint64_t sub_1DCEB6DE4()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ParseResult(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v9 = a2 + 1;
    uint64_t v8 = a2[1];
    swift_bridgeObjectRetain();
    if (v8 == 1)
    {
      long long v10 = v9[1];
      *(_OWORD *)(a1 + 8) = *v9;
      *(_OWORD *)(a1 + 24) = v10;
      long long v11 = v9[3];
      *(_OWORD *)(a1 + 40) = v9[2];
      *(_OWORD *)(a1 + 56) = v11;
    }
    else
    {
      uint64_t v12 = a2[2];
      uint64_t v13 = a2[3];
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v12;
      uint64_t v14 = a2[4];
      uint64_t v15 = a2[5];
      *(void *)(a1 + 24) = v13;
      *(void *)(a1 + 32) = v14;
      uint64_t v17 = a2[6];
      uint64_t v16 = a2[7];
      *(void *)(a1 + 40) = v15;
      *(void *)(a1 + 48) = v17;
      uint64_t v18 = a2[8];
      *(void *)(a1 + 56) = v16;
      *(void *)(a1 + 64) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v19 = a2[19];
    long long v20 = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 88) = v20;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    uint64_t v21 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v21;
    *(void *)(a1 + 144) = a2[18];
    swift_bridgeObjectRetain();
    if (v19)
    {
      uint64_t v22 = a2[20];
      uint64_t v23 = a2[21];
      *(void *)(a1 + 152) = v19;
      *(void *)(a1 + 160) = v22;
      *(void *)(a1 + 168) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
      *(void *)(a1 + 168) = a2[21];
    }
    *(void *)(a1 + 176) = a2[22];
    uint64_t v24 = *(int *)(a3 + 20);
    long long v25 = (char *)(a1 + v24);
    long long v26 = (char *)a2 + v24;
    uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    swift_bridgeObjectRetain();
    if (v29(v26, 1, v27))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8);
      memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = sub_1DD047BF8();
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
      v32(v25, v26, v31);
      uint64_t v79 = v27;
      uint64_t v33 = *(int *)(v27 + 20);
      uint64_t v34 = &v25[v33];
      uint64_t v35 = &v26[v33];
      uint64_t v36 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v78 = v25;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86500);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        uint64_t v40 = *((void *)v35 + 1);
        *(void *)uint64_t v34 = *(void *)v35;
        *((void *)v34 + 1) = v40;
        *((void *)v34 + 2) = *((void *)v35 + 2);
        uint64_t v41 = *(int *)(v36 + 24);
        uint64_t v76 = v28;
        uint64_t v42 = &v34[v41];
        long long v43 = &v35[v41];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v44 = v42;
        uint64_t v28 = v76;
        v32(v44, v43, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      uint64_t v39 = v31;
      uint64_t v45 = *(int *)(v79 + 24);
      id v46 = &v25[v45];
      uint64_t v47 = &v26[v45];
      uint64_t v48 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
      uint64_t v49 = *(void *)(v48 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
      {
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864D0);
        memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
        uint64_t v51 = v78;
      }
      else
      {
        uint64_t v75 = v49;
        uint64_t v77 = v28;
        uint64_t v52 = *((void *)v47 + 1);
        *(void *)id v46 = *(void *)v47;
        *((void *)v46 + 1) = v52;
        *((void *)v46 + 2) = *((void *)v47 + 2);
        uint64_t v53 = *(int *)(v48 + 24);
        uint64_t v54 = &v46[v53];
        uint64_t v55 = &v47[v53];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32(v54, v55, v31);
        uint64_t v56 = *(int *)(v48 + 28);
        uint64_t v57 = &v46[v56];
        uint64_t v58 = &v47[v56];
        uint64_t v59 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
        uint64_t v60 = *(void *)(v59 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
        {
          uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE865E8);
          memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
          uint64_t v62 = *((void *)v58 + 1);
          *(void *)uint64_t v57 = *(void *)v58;
          *((void *)v57 + 1) = v62;
          uint64_t v63 = *((void *)v58 + 3);
          *((void *)v57 + 2) = *((void *)v58 + 2);
          *((void *)v57 + 3) = v63;
          uint64_t v64 = *(int *)(v59 + 24);
          uint64_t v74 = &v57[v64];
          id v65 = &v58[v64];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v32(v74, v65, v31);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
        }
        uint64_t v28 = v77;
        uint64_t v39 = v31;
        uint64_t v51 = v78;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v46, 0, 1, v48);
      }
      uint64_t v66 = *(int *)(v79 + 28);
      uint64_t v67 = &v51[v66];
      uint64_t v68 = &v26[v66];
      uint64_t v69 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
      uint64_t v70 = *(void *)(v69 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
      {
        uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
        memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        long long v72 = *((_OWORD *)v68 + 1);
        *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
        *((_OWORD *)v67 + 1) = v72;
        v32(&v67[*(int *)(v69 + 32)], &v68[*(int *)(v69 + 32)], v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v51, 0, 1, v79);
    }
  }
  return a1;
}

uint64_t destroy for ParseResult(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v17(v4, v7);
    uint64_t v8 = v4 + v5[5];
    uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17(v8 + *(int *)(v9 + 24), v7);
    }
    uint64_t v10 = v4 + v5[6];
    uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17(v10 + *(int *)(v11 + 24), v7);
      uint64_t v12 = v10 + *(int *)(v11 + 28);
      uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17(v12 + *(int *)(v13 + 24), v7);
      }
    }
    uint64_t v14 = v4 + v5[7];
    uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15);
    if (!result)
    {
      uint64_t v16 = v14 + *(int *)(v15 + 32);
      return ((uint64_t (*)(uint64_t, uint64_t))v17)(v16, v7);
    }
  }
  return result;
}

uint64_t initializeWithCopy for ParseResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v8 = (_OWORD *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    long long v9 = v8[1];
    *uint64_t v6 = *v8;
    *(_OWORD *)(a1 + 24) = v9;
    long long v10 = v8[3];
    *(_OWORD *)(a1 + 40) = v8[2];
    *(_OWORD *)(a1 + 56) = v10;
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 16);
    uint64_t v12 = *(void *)(a2 + 24);
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v11;
    uint64_t v13 = *(void *)(a2 + 32);
    uint64_t v14 = *(void *)(a2 + 40);
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v13;
    uint64_t v16 = *(void *)(a2 + 48);
    uint64_t v15 = *(void *)(a2 + 56);
    *(void *)(a1 + 40) = v14;
    *(void *)(a1 + 48) = v16;
    uint64_t v17 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v15;
    *(void *)(a1 + 64) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v18 = *(void *)(a2 + 152);
  long long v19 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v19;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v20;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  if (v18)
  {
    uint64_t v21 = *(void *)(a2 + 160);
    uint64_t v22 = *(void *)(a2 + 168);
    *(void *)(a1 + 152) = v18;
    *(void *)(a1 + 160) = v21;
    *(void *)(a1 + 168) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (char *)(a1 + v23);
  long long v25 = (char *)(a2 + v23);
  uint64_t v26 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  swift_bridgeObjectRetain();
  if (v28(v25, 1, v26))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8);
    memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = sub_1DD047BF8();
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
    v31(v24, v25, v30);
    uint64_t v80 = v26;
    uint64_t v32 = *(int *)(v26 + 20);
    uint64_t v33 = &v24[v32];
    uint64_t v34 = &v25[v32];
    uint64_t v35 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v79 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86500);
      memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      uint64_t v38 = *((void *)v34 + 1);
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = v38;
      *((void *)v33 + 2) = *((void *)v34 + 2);
      uint64_t v39 = *(int *)(v35 + 24);
      uint64_t v77 = v27;
      uint64_t v40 = &v33[v39];
      uint64_t v41 = &v34[v39];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v42 = v40;
      uint64_t v27 = v77;
      v31(v42, v41, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    uint64_t v43 = v30;
    uint64_t v44 = *(int *)(v80 + 24);
    uint64_t v45 = &v24[v44];
    id v46 = &v25[v44];
    uint64_t v47 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
    uint64_t v48 = *(void *)(v47 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864D0);
      memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v50 = v79;
    }
    else
    {
      uint64_t v75 = v48;
      uint64_t v78 = v27;
      uint64_t v51 = *((void *)v46 + 1);
      *(void *)uint64_t v45 = *(void *)v46;
      *((void *)v45 + 1) = v51;
      uint64_t v52 = v43;
      *((void *)v45 + 2) = *((void *)v46 + 2);
      uint64_t v53 = *(int *)(v47 + 24);
      uint64_t v54 = &v45[v53];
      uint64_t v55 = &v46[v53];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31(v54, v55, v43);
      uint64_t v56 = *(int *)(v47 + 28);
      uint64_t v57 = &v45[v56];
      uint64_t v58 = &v46[v56];
      uint64_t v59 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
      uint64_t v60 = *(void *)(v59 - 8);
      uint64_t v76 = v52;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE865E8);
        memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        uint64_t v62 = *((void *)v58 + 1);
        *(void *)uint64_t v57 = *(void *)v58;
        *((void *)v57 + 1) = v62;
        uint64_t v63 = *((void *)v58 + 3);
        *((void *)v57 + 2) = *((void *)v58 + 2);
        *((void *)v57 + 3) = v63;
        uint64_t v64 = *(int *)(v59 + 24);
        uint64_t v74 = &v57[v64];
        id v65 = &v58[v64];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v31(v74, v65, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      uint64_t v50 = v79;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v45, 0, 1, v47);
      uint64_t v43 = v76;
      uint64_t v27 = v78;
    }
    uint64_t v66 = *(int *)(v80 + 28);
    uint64_t v67 = &v50[v66];
    uint64_t v68 = &v25[v66];
    uint64_t v69 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
    uint64_t v70 = *(void *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
    {
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
      memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      long long v72 = *((_OWORD *)v68 + 1);
      *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
      *((_OWORD *)v67 + 1) = v72;
      v31(&v67[*(int *)(v69 + 32)], &v68[*(int *)(v69 + 32)], v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v50, 0, 1, v80);
  }
  return a1;
}

uint64_t assignWithCopy for ParseResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v8 = (long long *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1)
  {
    if (v7 == 1)
    {
      long long v9 = *v8;
      long long v10 = *(_OWORD *)(a2 + 24);
      long long v11 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v11;
      *uint64_t v6 = v9;
      *(_OWORD *)(a1 + 24) = v10;
    }
    else
    {
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_1DCD6C7FC(a1 + 8);
    long long v12 = *(_OWORD *)(a2 + 56);
    long long v14 = *v8;
    long long v13 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v12;
    *uint64_t v6 = v14;
    *(_OWORD *)(a1 + 24) = v13;
  }
  else
  {
    *(void *)(a1 + 8) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  long long v15 = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v15;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (_OWORD *)(a1 + 152);
  uint64_t v17 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  long long v19 = (_OWORD *)(a2 + 152);
  uint64_t v18 = *(void *)(a2 + 152);
  if (v17)
  {
    if (v18)
    {
      *(void *)(a1 + 152) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DCD85050(a1 + 152);
      uint64_t v20 = *(void *)(a2 + 168);
      *uint64_t v16 = *v19;
      *(void *)(a1 + 168) = v20;
    }
  }
  else if (v18)
  {
    *(void *)(a1 + 152) = v18;
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *v19;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *uint64_t v16 = v21;
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (char *)(a2 + v22);
  long long v25 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  uint64_t v26 = *((void *)v25 - 1);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  __src = v24;
  int v29 = v27((uint64_t)v24, 1, v25);
  if (!v28)
  {
    if (v29)
    {
      sub_1DCEB90BC(v23, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
      goto LABEL_21;
    }
    uint64_t v42 = sub_1DD047BF8();
    uint64_t v142 = *(void *)(v42 - 8);
    uint64_t v147 = v42;
    uint64_t v140 = *(void (**)(uint64_t, char *))(v142 + 24);
    v140(v23, v24);
    uint64_t v43 = v25[5];
    uint64_t v143 = v23;
    uint64_t v44 = (char *)(v23 + v43);
    uint64_t v45 = &v24[v43];
    uint64_t v46 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
    int v49 = v48(v44, 1, v46);
    int v50 = v48(v45, 1, v46);
    if (v49)
    {
      if (!v50)
      {
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = *((void *)v45 + 1);
        *((void *)v44 + 2) = *((void *)v45 + 2);
        uint64_t v51 = *(int *)(v46 + 24);
        uint64_t v52 = &v44[v51];
        uint64_t v53 = &v45[v51];
        uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v142 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v54(v52, v53, v147);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v50)
      {
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = *((void *)v45 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((void *)v44 + 2) = *((void *)v45 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        ((void (*)(char *, char *, uint64_t))v140)(&v44[*(int *)(v46 + 24)], &v45[*(int *)(v46 + 24)], v147);
LABEL_34:
        uint64_t v78 = v143;
        uint64_t v79 = v25[6];
        uint64_t v80 = (char *)(v143 + v79);
        long long v81 = &__src[v79];
        uint64_t v82 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
        uint64_t v83 = *(void *)(v82 - 8);
        uint64_t v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48);
        int v85 = v84(v80, 1, v82);
        int v86 = v84(v81, 1, v82);
        if (v85)
        {
          if (!v86)
          {
            uint64_t v138 = v83;
            *(void *)uint64_t v80 = *(void *)v81;
            *((void *)v80 + 1) = *((void *)v81 + 1);
            *((void *)v80 + 2) = *((void *)v81 + 2);
            uint64_t v87 = *(int *)(v82 + 24);
            long long v88 = &v80[v87];
            long long v89 = &v81[v87];
            uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v142 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v90(v88, v89, v147);
            uint64_t v91 = *(int *)(v82 + 28);
            uint64_t v92 = &v80[v91];
            uint64_t v93 = &v81[v91];
            uint64_t v94 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
            uint64_t v95 = *(void *)(v94 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
            {
              uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE865E8);
              memcpy(v92, v93, *(void *)(*(void *)(v96 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v92 = *(void *)v93;
              *((void *)v92 + 1) = *((void *)v93 + 1);
              *((void *)v92 + 2) = *((void *)v93 + 2);
              *((void *)v92 + 3) = *((void *)v93 + 3);
              uint64_t v125 = *(int *)(v94 + 24);
              uint64_t v136 = &v92[v125];
              long long v126 = &v93[v125];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v90(v136, v126, v147);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v138 + 56))(v80, 0, 1, v82);
            uint64_t v78 = v143;
            goto LABEL_55;
          }
        }
        else
        {
          if (!v86)
          {
            *(void *)uint64_t v80 = *(void *)v81;
            *((void *)v80 + 1) = *((void *)v81 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *((void *)v80 + 2) = *((void *)v81 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            ((void (*)(char *, char *, uint64_t))v140)(&v80[*(int *)(v82 + 24)], &v81[*(int *)(v82 + 24)], v147);
            uint64_t v111 = *(int *)(v82 + 28);
            long long v112 = &v80[v111];
            long long v113 = &v81[v111];
            uint64_t v114 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
            uint64_t v115 = *(void *)(v114 - 8);
            long long v116 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48);
            int v117 = v116(v112, 1, v114);
            int v118 = v116(v113, 1, v114);
            if (v117)
            {
              uint64_t v78 = v143;
              if (!v118)
              {
                *(void *)long long v112 = *(void *)v113;
                *((void *)v112 + 1) = *((void *)v113 + 1);
                *((void *)v112 + 2) = *((void *)v113 + 2);
                *((void *)v112 + 3) = *((void *)v113 + 3);
                uint64_t v119 = *(int *)(v114 + 24);
                uint64_t v120 = &v112[v119];
                long long v121 = &v113[v119];
                long long v122 = *(void (**)(char *, char *, uint64_t))(v142 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                long long v123 = v120;
                uint64_t v78 = v143;
                uint64_t v124 = v147;
                v122(v123, v121, v147);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
LABEL_56:
                uint64_t v127 = v25[7];
                long long v128 = (char *)(v78 + v127);
                long long v129 = &__src[v127];
                uint64_t v130 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
                uint64_t v131 = *(void *)(v130 - 8);
                char v132 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v131 + 48);
                int v133 = v132(v128, 1, v130);
                int v134 = v132(v129, 1, v130);
                if (v133)
                {
                  if (!v134)
                  {
                    *(void *)long long v128 = *(void *)v129;
                    *((void *)v128 + 1) = *((void *)v129 + 1);
                    *((void *)v128 + 2) = *((void *)v129 + 2);
                    *((void *)v128 + 3) = *((void *)v129 + 3);
                    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(&v128[*(int *)(v130 + 32)], &v129[*(int *)(v130 + 32)], v124);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
                    return a1;
                  }
                }
                else
                {
                  if (!v134)
                  {
                    *(void *)long long v128 = *(void *)v129;
                    *((void *)v128 + 1) = *((void *)v129 + 1);
                    *((void *)v128 + 2) = *((void *)v129 + 2);
                    *((void *)v128 + 3) = *((void *)v129 + 3);
                    ((void (*)(char *, char *, uint64_t))v140)(&v128[*(int *)(v130 + 32)], &v129[*(int *)(v130 + 32)], v124);
                    return a1;
                  }
                  sub_1DCEB90BC((uint64_t)v128, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
                }
                size_t v39 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570) - 8)
                                + 64);
                uint64_t v40 = v128;
                uint64_t v41 = v129;
                goto LABEL_22;
              }
            }
            else
            {
              uint64_t v78 = v143;
              if (!v118)
              {
                *(void *)long long v112 = *(void *)v113;
                *((void *)v112 + 1) = *((void *)v113 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *((void *)v112 + 2) = *((void *)v113 + 2);
                *((void *)v112 + 3) = *((void *)v113 + 3);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                uint64_t v124 = v147;
                ((void (*)(char *, char *, uint64_t))v140)(&v112[*(int *)(v114 + 24)], &v113[*(int *)(v114 + 24)], v147);
                goto LABEL_56;
              }
              sub_1DCEB90BC((uint64_t)v112, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
            }
            size_t v97 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE865E8) - 8) + 64);
            double v98 = v112;
            uint64_t v99 = v113;
            goto LABEL_41;
          }
          sub_1DCEB90BC((uint64_t)v80, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
        }
        size_t v97 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864D0) - 8) + 64);
        double v98 = v80;
        uint64_t v99 = v81;
LABEL_41:
        memcpy(v98, v99, v97);
LABEL_55:
        uint64_t v124 = v147;
        goto LABEL_56;
      }
      sub_1DCEB90BC((uint64_t)v44, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
    }
    uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86500);
    memcpy(v44, v45, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_34;
  }
  if (v29)
  {
LABEL_21:
    size_t v39 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8) - 8) + 64);
    uint64_t v40 = (void *)v23;
    uint64_t v41 = v24;
LABEL_22:
    memcpy(v40, v41, v39);
    return a1;
  }
  uint64_t v139 = v26;
  uint64_t v30 = sub_1DD047BF8();
  uint64_t v31 = v25;
  uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v30 - 8) + 16);
  v32(v23, v24, v30);
  unint64_t v146 = v31;
  uint64_t v33 = v31[5];
  uint64_t v34 = (void *)(v23 + v33);
  uint64_t v35 = &v24[v33];
  uint64_t v36 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v141 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86500);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    *uint64_t v34 = *(void *)v35;
    v34[1] = *((void *)v35 + 1);
    id v34[2] = *((void *)v35 + 2);
    uint64_t v55 = *(int *)(v36 + 24);
    uint64_t v144 = v23;
    uint64_t v56 = (char *)v34 + v55;
    uint64_t v57 = &v35[v55];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v58 = v56;
    uint64_t v23 = v144;
    v32((uint64_t)v58, v57, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  uint64_t v59 = v146[6];
  uint64_t v60 = (void *)(v23 + v59);
  uint64_t v61 = &v24[v59];
  uint64_t v62 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  uint64_t v63 = *(void *)(v62 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864D0);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
    uint64_t v65 = v141;
  }
  else
  {
    uint64_t v137 = v63;
    uint64_t v145 = v23;
    *uint64_t v60 = *(void *)v61;
    v60[1] = *((void *)v61 + 1);
    id v60[2] = *((void *)v61 + 2);
    uint64_t v66 = *(int *)(v62 + 24);
    uint64_t v67 = (char *)v60 + v66;
    uint64_t v68 = &v61[v66];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32((uint64_t)v67, v68, v141);
    uint64_t v69 = *(int *)(v62 + 28);
    uint64_t v70 = (void *)((char *)v60 + v69);
    uint64_t v71 = &v61[v69];
    uint64_t v72 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
    uint64_t v73 = *(void *)(v72 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
    {
      uint64_t v74 = v70;
      uint64_t v75 = v141;
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE865E8);
      memcpy(v74, v71, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      *uint64_t v70 = *(void *)v71;
      v70[1] = *((void *)v71 + 1);
      v70[2] = *((void *)v71 + 2);
      v70[3] = *((void *)v71 + 3);
      uint64_t v100 = *(int *)(v72 + 24);
      unint64_t v135 = (char *)v70 + v100;
      uint64_t v101 = &v71[v100];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v102 = v101;
      uint64_t v103 = v70;
      uint64_t v75 = v141;
      v32((uint64_t)v135, v102, v141);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v103, 0, 1, v72);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v137 + 56))(v60, 0, 1, v62);
    uint64_t v23 = v145;
    uint64_t v65 = v75;
  }
  uint64_t v104 = v146[7];
  uint64_t v105 = (void *)(v23 + v104);
  uint64_t v106 = &__src[v104];
  uint64_t v107 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v108 = *(void *)(v107 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
  {
    uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
  }
  else
  {
    *uint64_t v105 = *(void *)v106;
    v105[1] = *((void *)v106 + 1);
    v105[2] = *((void *)v106 + 2);
    v105[3] = *((void *)v106 + 3);
    v32((uint64_t)v105 + *(int *)(v107 + 32), &v106[*(int *)(v107 + 32)], v65);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v139 + 56))(v23, 0, 1, v146);
  return a1;
}

uint64_t sub_1DCEB90BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for ParseResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  uint64_t v9 = *(int *)(a3 + 20);
  long long v10 = (char *)(a1 + v9);
  long long v11 = (char *)(a2 + v9);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v12 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  uint64_t v13 = *((void *)v12 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v49 = v13;
    uint64_t v15 = sub_1DD047BF8();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
    v16(v10, v11, v15);
    uint64_t v17 = v12[5];
    uint64_t v52 = v10;
    uint64_t v18 = &v10[v17];
    long long v19 = &v11[v17];
    uint64_t v20 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
    uint64_t v21 = *(void *)(v20 - 8);
    int v50 = v16;
    uint64_t v51 = v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86500);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((void *)v18 + 2) = *((void *)v19 + 2);
      v16(&v18[*(int *)(v20 + 24)], &v19[*(int *)(v20 + 24)], v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v23 = v12[6];
    uint64_t v24 = v52;
    long long v25 = &v52[v23];
    uint64_t v26 = &v11[v23];
    uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864D0);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      uint64_t v31 = v16;
      uint64_t v30 = v51;
    }
    else
    {
      *(_OWORD *)long long v25 = *(_OWORD *)v26;
      *((void *)v25 + 2) = *((void *)v26 + 2);
      v16(&v25[*(int *)(v27 + 24)], &v26[*(int *)(v27 + 24)], v51);
      uint64_t v32 = *(int *)(v27 + 28);
      __dst = &v25[v32];
      uint64_t v33 = &v26[v32];
      uint64_t v34 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE865E8);
        memcpy(__dst, v33, *(void *)(*(void *)(v36 - 8) + 64));
        uint64_t v31 = v50;
      }
      else
      {
        long long v37 = *((_OWORD *)v33 + 1);
        *(_OWORD *)__dst = *(_OWORD *)v33;
        *((_OWORD *)__dst + 1) = v37;
        uint64_t v38 = *(int *)(v34 + 24);
        size_t v39 = &v33[v38];
        uint64_t v31 = v50;
        v50(&__dst[v38], v39, v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v34);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      uint64_t v30 = v51;
      uint64_t v24 = v52;
    }
    uint64_t v40 = v12[7];
    uint64_t v41 = &v24[v40];
    uint64_t v42 = &v11[v40];
    uint64_t v43 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
    uint64_t v44 = *(void *)(v43 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      long long v46 = *((_OWORD *)v42 + 1);
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v46;
      v31(&v41[*(int *)(v43 + 32)], &v42[*(int *)(v43 + 32)], v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v49 + 56))(v52, 0, 1, v12);
  }
  return a1;
}

uint64_t assignWithTake for ParseResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) == 1) {
    goto LABEL_4;
  }
  if (v6 == 1)
  {
    sub_1DCD6C7FC(a1 + 8);
LABEL_4:
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
    long long v8 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v8;
    goto LABEL_6;
  }
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 152);
  uint64_t v12 = *(void *)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  if (v12)
  {
    if (v11)
    {
      *(void *)(a1 + 152) = v11;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1DCD85050(a1 + 152);
  }
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
LABEL_11:
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  uint64_t v18 = *((void *)v17 - 1);
  long long v19 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19((uint64_t)v16, 1, v17);
  if (!v20)
  {
    if (v21)
    {
      sub_1DCEB90BC(v15, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
      goto LABEL_17;
    }
    uint64_t v35 = sub_1DD047BF8();
    uint64_t v118 = *(void *)(v35 - 8);
    uint64_t v120 = v35;
    int v117 = *(void (**)(uint64_t, char *))(v118 + 40);
    v117(v15, v16);
    uint64_t v36 = v17[5];
    uint64_t v121 = v15;
    long long v37 = (char *)(v15 + v36);
    uint64_t v38 = &v16[v36];
    uint64_t v39 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
    int v42 = v41(v37, 1, v39);
    int v43 = v41(v38, 1, v39);
    if (v42)
    {
      if (!v43)
      {
        *(_OWORD *)long long v37 = *(_OWORD *)v38;
        *((void *)v37 + 2) = *((void *)v38 + 2);
        (*(void (**)(char *, char *, uint64_t))(v118 + 32))(&v37[*(int *)(v39 + 24)], &v38[*(int *)(v39 + 24)], v120);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v43)
      {
        uint64_t v85 = *((void *)v38 + 1);
        *(void *)long long v37 = *(void *)v38;
        *((void *)v37 + 1) = v85;
        swift_bridgeObjectRelease();
        *((void *)v37 + 2) = *((void *)v38 + 2);
        swift_bridgeObjectRelease();
        ((void (*)(char *, char *, uint64_t))v117)(&v37[*(int *)(v39 + 24)], &v38[*(int *)(v39 + 24)], v120);
LABEL_30:
        uint64_t v59 = v17[6];
        uint64_t v60 = (char *)(v121 + v59);
        uint64_t v61 = &v16[v59];
        uint64_t v62 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
        uint64_t v63 = *(void *)(v62 - 8);
        uint64_t v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
        int v65 = v64(v60, 1, v62);
        int v66 = v64(v61, 1, v62);
        if (v65)
        {
          if (!v66)
          {
            *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
            *((void *)v60 + 2) = *((void *)v61 + 2);
            uint64_t v111 = *(void (**)(char *, char *, uint64_t))(v118 + 32);
            v111(&v60[*(int *)(v62 + 24)], &v61[*(int *)(v62 + 24)], v120);
            uint64_t v67 = *(int *)(v62 + 28);
            __dsta = &v60[v67];
            uint64_t v68 = &v61[v67];
            uint64_t v69 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
            uint64_t v70 = *(void *)(v69 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
            {
              uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE865E8);
              memcpy(__dsta, v68, *(void *)(*(void *)(v71 - 8) + 64));
            }
            else
            {
              long long v97 = *((_OWORD *)v68 + 1);
              *(_OWORD *)__dsta = *(_OWORD *)v68;
              *((_OWORD *)__dsta + 1) = v97;
              v111(&__dsta[*(int *)(v69 + 24)], &v68[*(int *)(v69 + 24)], v120);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(__dsta, 0, 1, v69);
            }
            uint64_t v73 = v121;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
            goto LABEL_53;
          }
        }
        else
        {
          if (!v66)
          {
            uint64_t v86 = *((void *)v61 + 1);
            *(void *)uint64_t v60 = *(void *)v61;
            *((void *)v60 + 1) = v86;
            swift_bridgeObjectRelease();
            *((void *)v60 + 2) = *((void *)v61 + 2);
            swift_bridgeObjectRelease();
            ((void (*)(char *, char *, uint64_t))v117)(&v60[*(int *)(v62 + 24)], &v61[*(int *)(v62 + 24)], v120);
            uint64_t v87 = *(int *)(v62 + 28);
            long long v88 = &v60[v87];
            long long v89 = &v61[v87];
            uint64_t v90 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
            uint64_t v91 = *(void *)(v90 - 8);
            uint64_t v92 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 48);
            int v93 = v92(v88, 1, v90);
            int v94 = v92(v89, 1, v90);
            if (v93)
            {
              uint64_t v73 = v121;
              if (!v94)
              {
                long long v95 = *((_OWORD *)v89 + 1);
                *(_OWORD *)long long v88 = *(_OWORD *)v89;
                *((_OWORD *)v88 + 1) = v95;
                uint64_t v96 = v120;
                (*(void (**)(char *, char *, uint64_t))(v118 + 32))(&v88[*(int *)(v90 + 24)], &v89[*(int *)(v90 + 24)], v120);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
LABEL_54:
                uint64_t v99 = v17[7];
                uint64_t v100 = (char *)(v73 + v99);
                uint64_t v101 = &v16[v99];
                uint64_t v102 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
                uint64_t v103 = *(void *)(v102 - 8);
                uint64_t v104 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 48);
                int v105 = v104(v100, 1, v102);
                int v106 = v104(v101, 1, v102);
                if (v105)
                {
                  if (!v106)
                  {
                    long long v107 = *((_OWORD *)v101 + 1);
                    *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
                    *((_OWORD *)v100 + 1) = v107;
                    (*(void (**)(char *, char *, uint64_t))(v118 + 32))(&v100[*(int *)(v102 + 32)], &v101[*(int *)(v102 + 32)], v96);
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
                    return a1;
                  }
                }
                else
                {
                  if (!v106)
                  {
                    long long v108 = *((_OWORD *)v101 + 1);
                    *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
                    *((_OWORD *)v100 + 1) = v108;
                    ((void (*)(char *, char *, uint64_t))v117)(&v100[*(int *)(v102 + 32)], &v101[*(int *)(v102 + 32)], v96);
                    return a1;
                  }
                  sub_1DCEB90BC((uint64_t)v100, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect);
                }
                size_t v32 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570) - 8)
                                + 64);
                uint64_t v33 = v100;
                uint64_t v34 = v101;
                goto LABEL_18;
              }
            }
            else
            {
              uint64_t v73 = v121;
              if (!v94)
              {
                uint64_t v109 = *((void *)v89 + 1);
                *(void *)long long v88 = *(void *)v89;
                *((void *)v88 + 1) = v109;
                swift_bridgeObjectRelease();
                uint64_t v110 = *((void *)v89 + 3);
                *((void *)v88 + 2) = *((void *)v89 + 2);
                *((void *)v88 + 3) = v110;
                swift_bridgeObjectRelease();
                uint64_t v96 = v120;
                ((void (*)(char *, char *, uint64_t))v117)(&v88[*(int *)(v90 + 24)], &v89[*(int *)(v90 + 24)], v120);
                goto LABEL_54;
              }
              sub_1DCEB90BC((uint64_t)v88, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion);
            }
            uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE865E8);
            memcpy(v88, v89, *(void *)(*(void *)(v98 - 8) + 64));
LABEL_53:
            uint64_t v96 = v120;
            goto LABEL_54;
          }
          sub_1DCEB90BC((uint64_t)v60, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults);
        }
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864D0);
        memcpy(v60, v61, *(void *)(*(void *)(v72 - 8) + 64));
        uint64_t v73 = v121;
        goto LABEL_53;
      }
      sub_1DCEB90BC((uint64_t)v37, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults);
    }
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86500);
    memcpy(v37, v38, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_30;
  }
  if (v21)
  {
LABEL_17:
    size_t v32 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8) - 8) + 64);
    uint64_t v33 = (void *)v15;
    uint64_t v34 = v16;
LABEL_18:
    memcpy(v33, v34, v32);
    return a1;
  }
  uint64_t v22 = v17;
  uint64_t v23 = sub_1DD047BF8();
  uint64_t v24 = v16;
  long long v25 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 32);
  v25(v15, v24, v23);
  uint64_t v115 = v24;
  long long v116 = v22;
  uint64_t v26 = v22[5];
  uint64_t v27 = (void *)(v15 + v26);
  uint64_t v28 = &v24[v26];
  uint64_t v29 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.CoarseClassificationResults(0);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v114 = v23;
  uint64_t v119 = v25;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86500);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    void v27[2] = *((void *)v28 + 2);
    v25((uint64_t)v27 + *(int *)(v29 + 24), &v28[*(int *)(v29 + 24)], v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  uint64_t v45 = v115;
  uint64_t v44 = v116;
  uint64_t v46 = v116[6];
  uint64_t v47 = (void *)(v15 + v46);
  uint64_t v48 = &v115[v46];
  uint64_t v49 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorResults(0);
  uint64_t v50 = *(void *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE864D0);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    uint64_t v52 = (void (*)(char *, char *, uint64_t))v119;
  }
  else
  {
    uint64_t v122 = v15;
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    v47[2] = *((void *)v48 + 2);
    v119((uint64_t)v47 + *(int *)(v49 + 24), &v48[*(int *)(v49 + 24)], v114);
    uint64_t v53 = *(int *)(v49 + 28);
    __dst = (_OWORD *)((char *)v47 + v53);
    uint64_t v54 = &v48[v53];
    uint64_t v55 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.ObjectDetectorVersion(0);
    uint64_t v56 = *(void *)(v55 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE865E8);
      memcpy(__dst, v54, *(void *)(*(void *)(v57 - 8) + 64));
      uint64_t v52 = (void (*)(char *, char *, uint64_t))v119;
    }
    else
    {
      long long v74 = *((_OWORD *)v54 + 1);
      _OWORD *__dst = *(_OWORD *)v54;
      __dst[1] = v74;
      uint64_t v75 = *(int *)(v55 + 24);
      uint64_t v76 = &v54[v75];
      uint64_t v52 = (void (*)(char *, char *, uint64_t))v119;
      v119((uint64_t)__dst + v75, v76, v114);
      uint64_t v45 = v115;
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v56 + 56))(__dst, 0, 1, v55);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    uint64_t v15 = v122;
    uint64_t v44 = v116;
  }
  uint64_t v77 = v44[7];
  uint64_t v78 = (_OWORD *)(v15 + v77);
  uint64_t v79 = &v45[v77];
  uint64_t v80 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults.UpperLeftRect(0);
  uint64_t v81 = *(void *)(v80 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
  {
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86570);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    long long v83 = *((_OWORD *)v79 + 1);
    *uint64_t v78 = *(_OWORD *)v79;
    v78[1] = v83;
    v52((char *)v78 + *(int *)(v80 + 32), &v79[*(int *)(v80 + 32)], v114);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v44);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParseResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCEBA4AC);
}

uint64_t sub_1DCEBA4AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ParseResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCEBA574);
}

void *sub_1DCEBA574(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1DCEBA620()
{
  sub_1DCEBA6B8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1DCEBA6B8()
{
  if (!qword_1EBE86700)
  {
    type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(255);
    unint64_t v0 = sub_1DD048A08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBE86700);
    }
  }
}

void sub_1DCEBA710(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v132 = *(void *)(v4 - 8);
  uint64_t v133 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v129 = (uint64_t)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v139 = (uint64_t)&v124 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v136 = (uint64_t)&v124 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v135 = (uint64_t)&v124 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_1DD048F68();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      sub_1DCEBB1C0(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v126 = v13;
  if (v12 < 2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    unint64_t v131 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      int v20 = (char *)MEMORY[0x1E4FBC860];
LABEL_105:
      int v117 = v20;
      uint64_t v125 = v18;
      if (v21 >= 2)
      {
        uint64_t v118 = *a1;
        do
        {
          unint64_t v119 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v118) {
            goto LABEL_147;
          }
          uint64_t v120 = *(void *)&v117[16 * v119 + 32];
          uint64_t v121 = *(void *)&v117[16 * v21 + 24];
          sub_1DCEBB480(v118 + *(void *)(v132 + 72) * v120, v118 + *(void *)(v132 + 72) * *(void *)&v117[16 * v21 + 16], v118 + *(void *)(v132 + 72) * v121, v131);
          if (v2) {
            break;
          }
          if (v121 < v120) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v117 = sub_1DCD729EC((uint64_t)v117);
          }
          if (v119 >= *((void *)v117 + 2)) {
            goto LABEL_137;
          }
          uint64_t v122 = &v117[16 * v119 + 32];
          *(void *)uint64_t v122 = v120;
          *((void *)v122 + 1) = v121;
          unint64_t v123 = *((void *)v117 + 2);
          if (v21 > v123) {
            goto LABEL_138;
          }
          memmove(&v117[16 * v21 + 16], &v117[16 * v21 + 32], 16 * (v123 - v21));
          *((void *)v117 + 2) = v123 - 1;
          unint64_t v21 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v125 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v125 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1DD0486F8();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v132 + 80);
    uint64_t v125 = v16;
    unint64_t v131 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  int v20 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v138 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    uint64_t v130 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v33 = v19 + 1;
      goto LABEL_25;
    }
    uint64_t v128 = *a1;
    uint64_t v140 = *(void *)(v132 + 72);
    uint64_t v24 = v140;
    uint64_t v25 = v135;
    sub_1DCEBE6BC(v128 + v140 * v23, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v26 = v128 + v24 * v22;
    uint64_t v27 = v136;
    sub_1DCEBE6BC(v26, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    float v28 = *(float *)(v25 + 72);
    float v29 = *(float *)(v27 + 72);
    sub_1DCEB90BC(v27, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v30 = v25;
    uint64_t v31 = v128;
    sub_1DCEB90BC(v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v32 = v140;
    uint64_t v33 = v22 + 2;
    if (v22 + 2 >= v12)
    {
LABEL_22:
      if (v29 >= v28) {
        goto LABEL_25;
      }
LABEL_43:
      if (v33 < v22) {
        goto LABEL_141;
      }
      if (v22 < v33)
      {
        uint64_t v134 = v12;
        uint64_t v127 = v20;
        uint64_t v55 = 0;
        uint64_t v56 = v32 * (v33 - 1);
        uint64_t v57 = v22;
        uint64_t v58 = v33 * v32;
        uint64_t v59 = v57;
        uint64_t v60 = v57 * v32;
        do
        {
          if (v59 != v33 + v55 - 1)
          {
            uint64_t v62 = v128;
            if (!v128) {
              goto LABEL_146;
            }
            unint64_t v63 = v128 + v60;
            uint64_t v137 = v128 + v56;
            sub_1DCEBE808(v128 + v60, v129, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            if (v60 < v56 || v63 >= v62 + v58)
            {
              uint64_t v61 = v137;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v61 = v137;
              if (v60 != v56) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1DCEBE808(v129, v61, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            uint64_t v32 = v140;
          }
          ++v59;
          --v55;
          v56 -= v32;
          v58 -= v32;
          v60 += v32;
        }
        while (v59 < v33 + v55);
        a1 = v138;
        int v20 = v127;
        uint64_t v22 = v130;
        uint64_t v12 = v134;
      }
      goto LABEL_25;
    }
    uint64_t v124 = v2;
    uint64_t v127 = v20;
    uint64_t v137 = v140 * v23;
    uint64_t v134 = v140 * v33;
    while (1)
    {
      uint64_t v34 = v33;
      uint64_t v35 = v135;
      sub_1DCEBE6BC(v31 + v134, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v36 = v136;
      sub_1DCEBE6BC(v31 + v137, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      BOOL v37 = *(float *)(v36 + 72) >= *(float *)(v35 + 72);
      sub_1DCEB90BC(v36, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCEB90BC(v35, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v29 < v28 == v37) {
        break;
      }
      ++v33;
      uint64_t v32 = v140;
      v31 += v140;
      if (v12 == v34 + 1)
      {
        uint64_t v33 = v12;
        int v20 = v127;
        uint64_t v2 = v124;
        uint64_t v22 = v130;
        goto LABEL_22;
      }
    }
    int v20 = v127;
    uint64_t v2 = v124;
    uint64_t v22 = v130;
    uint64_t v32 = v140;
    if (v29 < v28) {
      goto LABEL_43;
    }
LABEL_25:
    if (v33 < v12)
    {
      if (__OFSUB__(v33, v22)) {
        goto LABEL_139;
      }
      if (v33 - v22 < v126) {
        break;
      }
    }
LABEL_57:
    if (v33 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      int v20 = sub_1DCD71FDC(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v66 = *((void *)v20 + 2);
    unint64_t v65 = *((void *)v20 + 3);
    unint64_t v21 = v66 + 1;
    if (v66 >= v65 >> 1) {
      int v20 = sub_1DCD71FDC((char *)(v65 > 1), v66 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    uint64_t v67 = v20 + 32;
    uint64_t v68 = &v20[16 * v66 + 32];
    uint64_t v69 = v137;
    *(void *)uint64_t v68 = v22;
    *((void *)v68 + 1) = v69;
    if (v66)
    {
      while (1)
      {
        unint64_t v70 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v75 = &v67[16 * v21];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_123;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_124;
          }
          unint64_t v82 = v21 - 2;
          long long v83 = &v67[16 * v21 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_126;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_129;
          }
          if (v87 >= v78)
          {
            int v105 = &v67[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_133;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v99 = *((void *)v20 + 4);
            uint64_t v100 = *((void *)v20 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_88;
          }
          uint64_t v72 = *((void *)v20 + 4);
          uint64_t v71 = *((void *)v20 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_125;
        }
        unint64_t v82 = v21 - 2;
        long long v88 = &v67[16 * v21 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_128;
        }
        int v94 = &v67[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_131;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_132;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_94:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v93) {
          goto LABEL_127;
        }
        uint64_t v101 = &v67[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_130;
        }
        if (v104 < v92) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v110 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v111 = v20;
        long long v112 = &v67[16 * v109];
        uint64_t v113 = *(void *)v112;
        uint64_t v114 = &v67[16 * v70];
        uint64_t v115 = *((void *)v114 + 1);
        sub_1DCEBB480(v110 + *(void *)(v132 + 72) * *(void *)v112, v110 + *(void *)(v132 + 72) * *(void *)v114, v110 + *(void *)(v132 + 72) * v115, v131);
        if (v2) {
          goto LABEL_116;
        }
        if (v115 < v113) {
          goto LABEL_120;
        }
        if (v70 > *((void *)v111 + 2)) {
          goto LABEL_121;
        }
        *(void *)long long v112 = v113;
        *(void *)&v67[16 * v109 + 8] = v115;
        unint64_t v116 = *((void *)v111 + 2);
        if (v70 >= v116) {
          goto LABEL_122;
        }
        int v20 = v111;
        unint64_t v21 = v116 - 1;
        memmove(&v67[16 * v70], v114 + 16, 16 * (v116 - 1 - v70));
        *((void *)v111 + 2) = v116 - 1;
        a1 = v138;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v19 = v137;
    if (v137 >= v12)
    {
      uint64_t v18 = v125;
      goto LABEL_105;
    }
  }
  if (__OFADD__(v22, v126)) {
    goto LABEL_142;
  }
  if (v22 + v126 >= v12) {
    uint64_t v38 = v12;
  }
  else {
    uint64_t v38 = v22 + v126;
  }
  if (v38 >= v22)
  {
    if (v33 != v38)
    {
      uint64_t v127 = v20;
      uint64_t v128 = v38;
      uint64_t v124 = v2;
      uint64_t v39 = *(void *)(v132 + 72);
      uint64_t v140 = v39 * (v33 - 1);
      uint64_t v134 = v39;
      uint64_t v40 = v33 * v39;
      do
      {
        uint64_t v42 = 0;
        uint64_t v43 = v22;
        uint64_t v137 = v33;
        while (1)
        {
          uint64_t v44 = v138;
          uint64_t v45 = *v138;
          uint64_t v46 = v40;
          uint64_t v47 = v40 + v42 + *v138;
          uint64_t v48 = v135;
          sub_1DCEBE6BC(v47, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v49 = v140 + v42 + v45;
          uint64_t v50 = v136;
          sub_1DCEBE6BC(v49, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          float v51 = *(float *)(v48 + 72);
          float v52 = *(float *)(v50 + 72);
          sub_1DCEB90BC(v50, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCEB90BC(v48, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v52 >= v51) {
            break;
          }
          uint64_t v53 = *v44;
          if (!*v44) {
            goto LABEL_144;
          }
          uint64_t v40 = v46;
          uint64_t v54 = v53 + v140 + v42;
          sub_1DCEBE808(v53 + v46 + v42, v139, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          swift_arrayInitWithTakeFrontToBack();
          sub_1DCEBE808(v139, v54, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          v42 -= v134;
          ++v43;
          uint64_t v41 = v137;
          if (v137 == v43) {
            goto LABEL_36;
          }
        }
        uint64_t v41 = v137;
        uint64_t v40 = v46;
LABEL_36:
        uint64_t v33 = v41 + 1;
        v140 += v134;
        v40 += v134;
        uint64_t v22 = v130;
      }
      while (v33 != v128);
      uint64_t v33 = v128;
      uint64_t v2 = v124;
      a1 = v138;
      int v20 = v127;
    }
    goto LABEL_57;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_1DD048C98();
  __break(1u);
}

void sub_1DCEBB1C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (float *)((char *)&v24 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (float *)((char *)&v24 - v13);
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v32 = v15 * (v29 - 1);
    uint64_t v28 = v15;
    uint64_t v31 = v15 * v29;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v26;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = a4;
      sub_1DCEBE6BC(v31 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCEBE6BC(v32 + v16 + v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      float v20 = v14[18];
      float v21 = v10[18];
      sub_1DCEB90BC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCEB90BC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v21 >= v20)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v25) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v23 = v22 + v32 + v16;
      sub_1DCEBE808(v22 + v31 + v16, v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_arrayInitWithTakeFrontToBack();
      sub_1DCEBE808(v30, v23, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      v16 -= v28;
      ++v17;
      a4 = v19;
      if (v29 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DCEBB480(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v40);
  uint64_t v9 = (float *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (float *)((char *)&v38 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      unint64_t v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v31 = a3 - v14;
          sub_1DCEBE6BC(v29 - v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          unint64_t v32 = a2 - v14;
          sub_1DCEBE6BC(a2 - v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          float v33 = v12[18];
          float v34 = v9[18];
          sub_1DCEB90BC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCEB90BC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v34 >= v33)
          {
            unint64_t v35 = v41;
            v41 -= v14;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 -= v14;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v32;
          a3 -= v14;
        }
        while (v32 > v39);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1DCEBE6BC(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCEBE6BC(a4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        float v22 = v12[18];
        float v23 = v9[18];
        sub_1DCEB90BC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCEB90BC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v24 = v43;
        if (v23 >= v22)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_67:
    sub_1DCD720D8(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCEBB954(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v45 = a8;
  uint64_t v48 = a6;
  uint64_t v47 = a5;
  uint64_t v46 = a9;
  uint64_t v51 = sub_1DD0481B8();
  uint64_t v54 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v50 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1DD0481D8();
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v49 = (char *)v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58[3] = a11;
  v58[4] = a12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v58);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 16))(boxed_opaque_existential_1, a1, a11);
  uint64_t v20 = *a2;
  uint64_t v21 = a2[1];
  uint64_t v22 = a2[2];
  uint64_t v23 = a2[3];
  sub_1DCD43B04(a4, (uint64_t)v59, &qword_1EBE855D8);
  type metadata accessor for MetricsBucket();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = MEMORY[0x1E4FBC860];
  v60[0] = 0x6150202D20453245;
  v60[1] = 0xEB00000000657372;
  id v60[2] = "Parse Overall";
  void v60[3] = 13;
  char v61 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  uint64_t v25 = sub_1DCEA469C((uint64_t)v60, v24);
  swift_release();
  if (a7) {
    id v26 = a7;
  }
  else {
    id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9B8]), sel_init);
  }
  id v27 = a7;
  uint64_t v28 = sub_1DD0464E8();
  unint64_t v30 = v29;
  v44[0] = v29;

  _OWORD v44[2] = *(void *)(a10 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_queue);
  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  sub_1DCD3A3BC((uint64_t)v58, (uint64_t)v57);
  unint64_t v32 = (void *)swift_allocObject();
  long long v32[2] = v31;
  v32[3] = a3;
  unsigned char v32[4] = v24;
  sub_1DCD3A4DC(v57, (uint64_t)(v32 + 5));
  v32[10] = v20;
  v32[11] = v21;
  v32[12] = v22;
  v32[13] = v23;
  sub_1DCD43B04((uint64_t)v59, (uint64_t)(v32 + 14), &qword_1EBE855D8);
  float v33 = v47;
  v32[22] = v47;
  v32[23] = v25;
  v44[1] = v25;
  float v34 = v48;
  v32[24] = v48;
  v32[25] = v28;
  uint64_t v35 = v45;
  v32[26] = v30;
  v32[27] = v35;
  v32[28] = v46;
  aBlock[4] = sub_1DCEBF864;
  aBlock[5] = v32;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCEC8CA4;
  aBlock[3] = &block_descriptor_5;
  uint64_t v36 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DCEBF700(v59);
  id v37 = v33;
  swift_retain();
  id v38 = v34;
  unint64_t v39 = v44[0];
  sub_1DCD33F64(v28, v44[0]);
  swift_retain();
  uint64_t v40 = v49;
  sub_1DD0481C8();
  uint64_t v55 = MEMORY[0x1E4FBC860];
  sub_1DCEBF8CC(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCEBF914();
  unint64_t v41 = v50;
  uint64_t v42 = v51;
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v40, v41, v36);
  _Block_release(v36);
  sub_1DCD21954(v28, v39);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v42);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v53);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
}

unint64_t sub_1DCEBBF08(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_1DD048528();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_1DD048638();
}

uint64_t sub_1DCEBBFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v56 = a1;
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v57 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v48 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v48 - v13;
  int64_t v15 = (os_unfair_lock_s *)(*(void *)(a3 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
  os_unfair_lock_lock(v15);
  LODWORD(a3) = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
  os_unfair_lock_unlock(v15);
  if (a3 == 1)
  {
    sub_1DCDB40EC((uint64_t)v14);
    uint64_t v16 = sub_1DD048048();
    os_log_type_t v17 = sub_1DD048848();
    if (!os_log_type_enabled(v16, v17))
    {
      char v19 = 0;
LABEL_22:

      (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
      sub_1DCE6A230();
      swift_allocError();
      *unint64_t v41 = v19;
      return swift_willThrow();
    }
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_1DCCF9000, v16, v17, "parse(): canceled", v18, 2u);
    char v19 = 0;
LABEL_19:
    MEMORY[0x1E01B07E0](v18, -1, -1);
    goto LABEL_22;
  }
  if (!*(void *)(a2 + 16))
  {
    sub_1DCDB40EC((uint64_t)v11);
    uint64_t v16 = sub_1DD048048();
    os_log_type_t v40 = sub_1DD048848();
    if (!os_log_type_enabled(v16, v40))
    {
      char v19 = 1;
      uint64_t v14 = v11;
      goto LABEL_22;
    }
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_1DCCF9000, v16, v40, "parse(): no domain is allowed.", v18, 2u);
    char v19 = 1;
    uint64_t v14 = v11;
    goto LABEL_19;
  }
  uint64_t v20 = v57;
  sub_1DCDB40EC(v57);
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_1DD048048();
  int v22 = sub_1DD048848();
  if (!os_log_type_enabled(v21, (os_log_type_t)v22))
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v6);
    return sub_1DCDE4150(v56);
  }
  int v53 = v22;
  os_log_t v55 = v21;
  uint64_t v23 = swift_slowAlloc();
  uint64_t v52 = swift_slowAlloc();
  uint64_t v62 = v52;
  *(_DWORD *)uint64_t v23 = 134218242;
  uint64_t v60 = *(void *)(a2 + 16);
  uint64_t v51 = &v61;
  sub_1DD048A28();
  uint64_t v54 = (uint8_t *)v23;
  *(_WORD *)(v23 + 12) = 2080;
  int64_t v24 = *(void *)(a2 + 16);
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if (!v24)
  {
LABEL_23:
    uint64_t v42 = v54;
    uint64_t v43 = MEMORY[0x1E01AE380](v25, MEMORY[0x1E4FBB1A0]);
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_1DCED7FA0(v43, v45, &v62);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v46 = v55;
    _os_log_impl(&dword_1DCCF9000, v55, (os_log_type_t)v53, "Parse allowed domain count %ld, domains: %s", v42, 0x16u);
    uint64_t v47 = v52;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v47, -1, -1);
    MEMORY[0x1E01B07E0](v42, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v57, v6);
    return sub_1DCDE4150(v56);
  }
  uint64_t v48 = v3;
  uint64_t v49 = v7;
  uint64_t v50 = v6;
  uint64_t v60 = MEMORY[0x1E4FBC860];
  sub_1DCFC4948(0, v24, 0);
  uint64_t v25 = v60;
  uint64_t result = sub_1DCF55B0C(a2);
  int64_t v27 = result;
  int v29 = v28;
  int v31 = v30 & 1;
  uint64_t v58 = a2 + 56;
  while ((v27 & 0x8000000000000000) == 0 && v27 < 1 << *(unsigned char *)(a2 + 32))
  {
    if (((*(void *)(v58 + (((unint64_t)v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(a2 + 36) != v29) {
      goto LABEL_27;
    }
    int v59 = v31;
    uint64_t v32 = sub_1DCD9C35C(*(unsigned char *)(*(void *)(a2 + 48) + v27));
    uint64_t v34 = v33;
    uint64_t v60 = v25;
    unint64_t v36 = *(void *)(v25 + 16);
    unint64_t v35 = *(void *)(v25 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_1DCFC4948(v35 > 1, v36 + 1, 1);
      uint64_t v25 = v60;
    }
    *(void *)(v25 + 16) = v36 + 1;
    unint64_t v37 = v25 + 16 * v36;
    *(void *)(v37 + 32) = v32;
    *(void *)(v37 + 40) = v34;
    uint64_t result = sub_1DCF55BAC(v27, v29, v59 & 1, a2);
    int64_t v27 = result;
    int v29 = v38;
    int v31 = v39 & 1;
    if (!--v24)
    {
      sub_1DCD74484(result, v38, v31);
      uint64_t v7 = v49;
      uint64_t v6 = v50;
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1DCEBC544(void *a1)
{
  uint64_t v2 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v25 = (uint64_t)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DD047C38();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE866F8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v24 - v10;
  double v13 = MEMORY[0x1F4188790](v12);
  int64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v3 + 56);
  v16((char *)&v24 - v14, 1, 1, v2, v13);
  if (!a1)
  {
    uint64_t v8 = v15;
    goto LABEL_9;
  }
  uint64_t v24 = v3;
  id v17 = a1;
  uint64_t v29 = sub_1DD0464E8();
  uint64_t v30 = v18;
  uint64_t v28 = 0;
  long long v26 = 0u;
  long long v27 = 0u;
  sub_1DD047C28();
  sub_1DCEBF8CC(&qword_1EBE866D8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
  uint64_t v19 = v31;
  sub_1DD047E38();
  sub_1DCD2479C((uint64_t)v15, &qword_1EBE866F8);
  if (!v19)
  {
    ((void (*)(char *, void, uint64_t, uint64_t))v16)(v11, 0, 1, v2);
    sub_1DCD43B04((uint64_t)v11, (uint64_t)v15, &qword_1EBE866F8);
    sub_1DCD2889C((uint64_t)v15, (uint64_t)v8, &qword_1EBE866F8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v8, 1, v2) == 1)
    {
      sub_1DCD2479C((uint64_t)v15, &qword_1EBE866F8);
    }
    else
    {
      uint64_t v20 = v25;
      sub_1DCEBE808((uint64_t)v8, v25, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
      if (!sub_1DCD4CE94())
      {
        sub_1DCE6A230();
        swift_allocError();
        *uint64_t v23 = 2;
        swift_willThrow();

        sub_1DCEB90BC(v20, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
        uint64_t v21 = (uint64_t)v15;
        goto LABEL_10;
      }

      sub_1DCEB90BC(v20, type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults);
      uint64_t v8 = v15;
    }
LABEL_9:
    uint64_t v21 = (uint64_t)v8;
LABEL_10:
    sub_1DCD2479C(v21, &qword_1EBE866F8);
    return 1;
  }

  return 1;
}

uint64_t sub_1DCEBC90C(long long *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v7 = type metadata accessor for RegionSearchResult.ResultItem(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v104 = v7;
  uint64_t v105 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v106 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for ObjectKnowledge();
  uint64_t v103 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v108 = (uint64_t *)((char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v15 - 8);
  id v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  long long v19 = a1[9];
  long long v177 = a1[8];
  long long v178 = v19;
  long long v179 = a1[10];
  uint64_t v180 = *((void *)a1 + 22);
  long long v20 = a1[5];
  long long v173 = a1[4];
  long long v174 = v20;
  long long v21 = a1[7];
  long long v175 = a1[6];
  long long v176 = v21;
  long long v22 = a1[1];
  long long v169 = *a1;
  long long v170 = v22;
  long long v23 = a1[3];
  long long v171 = a1[2];
  long long v172 = v23;
  uint64_t v24 = *(void (**)(void))(v12 + 56);
  uint64_t v120 = (uint64_t)&v102 - v25;
  *(void *)&long long v119 = v11;
  v24();
  sub_1DCD5DA7C((uint64_t)v181);
  int v117 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v169 + 16);
  if (v117)
  {
    uint64_t v109 = v169;
    uint64_t v110 = v17;
    long long v112 = v14;
    uint64_t v113 = a4;
    uint64_t v114 = a3;
    *(void *)&long long v116 = v169
                     + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    swift_bridgeObjectRetain();
    sub_1DCD43B04((uint64_t)v181, (uint64_t)&v137, &qword_1EBE85400);
    uint64_t v26 = 0;
    uint64_t v111 = v12;
    uint64_t v115 = *(void *)(v12 + 72);
    while (1)
    {
      uint64_t v27 = v116 + v115 * v26;
      uint64_t v28 = *(void *)(v27 + 48);
      uint64_t v29 = *(void *)(v28 + 16);
      if (v29)
      {
        *(void *)&long long v118 = v26;
        swift_bridgeObjectRetain();
        sub_1DCD43B04((uint64_t)&v137, (uint64_t)&v124, &qword_1EBE85400);
        uint64_t v30 = v29 - 1;
        for (uint64_t i = 32; ; i += 160)
        {
          long long v32 = *(_OWORD *)(v28 + i);
          long long v161 = *(_OWORD *)(v28 + i + 16);
          long long v160 = v32;
          long long v33 = *(_OWORD *)(v28 + i + 32);
          long long v34 = *(_OWORD *)(v28 + i + 48);
          long long v35 = *(_OWORD *)(v28 + i + 64);
          long long v165 = *(_OWORD *)(v28 + i + 80);
          long long v164 = v35;
          long long v163 = v34;
          long long v162 = v33;
          long long v36 = *(_OWORD *)(v28 + i + 96);
          long long v37 = *(_OWORD *)(v28 + i + 112);
          long long v38 = *(_OWORD *)(v28 + i + 128);
          *(_OWORD *)((char *)v168 + 13) = *(_OWORD *)(v28 + i + 141);
          v168[0] = v38;
          long long v167 = v37;
          long long v166 = v36;
          if (*(void *)&v168[1])
          {
            sub_1DCD32CC8((uint64_t)&v160);
            uint64_t v39 = v120;
            sub_1DCD2479C(v120, &qword_1EBE855F0);
            sub_1DCEBE6BC(v27, v39, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            ((void (*)(uint64_t, void, uint64_t, void))v24)(v39, 0, 1, v119);
            sub_1DCEBE644((uint64_t)&v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
            v121[6] = v166;
            v121[7] = v167;
            v122[0] = v168[0];
            *(_OWORD *)((char *)v122 + 13) = *(_OWORD *)((char *)v168 + 13);
            v121[2] = v162;
            v121[3] = v163;
            v121[4] = v164;
            v121[5] = v165;
            v121[0] = v160;
            v121[1] = v161;
            faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v121);
            os_log_type_t v40 = v121;
          }
          else
          {
            os_log_type_t v40 = &v124;
          }
          sub_1DCD43B04((uint64_t)v40, (uint64_t)v150, &qword_1EBE85400);
          if (!v30) {
            break;
          }
          sub_1DCD43B04((uint64_t)v150, (uint64_t)&v124, &qword_1EBE85400);
          --v30;
        }
        swift_bridgeObjectRelease();
        sub_1DCD43B04((uint64_t)v150, (uint64_t)v123, &qword_1EBE85400);
        uint64_t v26 = v118;
      }
      else
      {
        sub_1DCD43B04((uint64_t)&v137, (uint64_t)v123, &qword_1EBE85400);
      }
      if ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))++v26 == v117) {
        break;
      }
      sub_1DCD43B04((uint64_t)v123, (uint64_t)&v137, &qword_1EBE85400);
    }
    swift_bridgeObjectRelease();
    sub_1DCD43B04((uint64_t)v123, (uint64_t)&v160, &qword_1EBE85400);
    a4 = v113;
    a3 = v114;
    uint64_t v12 = v111;
    uint64_t v14 = v112;
    id v17 = v110;
  }
  else
  {
    sub_1DCD43B04((uint64_t)v181, (uint64_t)&v160, &qword_1EBE85400);
  }
  sub_1DCD2889C(v120, (uint64_t)v17, &qword_1EBE855F0);
  if ((*(unsigned int (**)(char *, uint64_t, void))(v12 + 48))(v17, 1, v119) != 1)
  {
    sub_1DCEBE808((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD43B04((uint64_t)&v160, (uint64_t)v150, &qword_1EBE85400);
    if (sub_1DCD32CA4((uint64_t)v150) == 1 || (uint64_t v41 = v152) == 0 || (v42 = v158) == 0)
    {
      sub_1DCEB90BC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      goto LABEL_30;
    }
    long long v112 = v14;
    uint64_t v113 = a4;
    uint64_t v114 = a3;
    *(void *)&long long v118 = v151;
    uint64_t v43 = v157;
    uint64_t v44 = v107;
    unint64_t v45 = v108;
    os_log_t v46 = (char *)v108 + *(int *)(v107 + 24);
    uint64_t v47 = sub_1DD046478();
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56);
    v48(v46, 1, 1, v47);
    uint64_t v49 = *(int *)(v44 + 40);
    uint64_t v50 = v43;
    v48((char *)v45 + v49, 1, 1, v47);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1DCEBE644((uint64_t)&v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
    if (sub_1DD0485D8())
    {
      swift_bridgeObjectRetain();
      unint64_t v51 = sub_1DCEBBF08(1uLL, v43, v42);
      unint64_t v53 = v52;
      unint64_t v55 = v54;
      unint64_t v57 = v56;
      swift_bridgeObjectRelease();
      if ((v51 ^ v53) >= 0x4000)
      {
        uint64_t v58 = sub_1DCD5109C(v51, v53, v55, v57, 10);
        if ((v59 & 0x100) != 0) {
          uint64_t v58 = (uint64_t)sub_1DCD4F45C(v51, v53, v55, v57, 10);
        }
        uint64_t v60 = v58;
        char v61 = v59;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v61) {
          uint64_t v62 = 0;
        }
        else {
          uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v60;
        }
        int v117 = v62;
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    int v117 = 0;
LABEL_33:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F38);
    unint64_t v65 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C20) - 8);
    unint64_t v66 = (*(unsigned __int8 *)(*(void *)v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v65 + 80);
    uint64_t v67 = swift_allocObject();
    long long v119 = xmmword_1DD04E910;
    *(_OWORD *)(v67 + 16) = xmmword_1DD04E910;
    uint64_t v68 = (void *)(v67 + v66 + v65[14]);
    swift_bridgeObjectRetain();
    sub_1DD0465C8();
    uint64_t v69 = v118;
    void *v68 = v118;
    v68[1] = v41;
    swift_bridgeObjectRetain();
    unint64_t v70 = sub_1DCDB8BB4(v67);
    double v71 = v159;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F40);
    uint64_t v72 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C10) - 8);
    unint64_t v73 = (*(unsigned __int8 *)(*(void *)v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v72 + 80);
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = v119;
    unint64_t v75 = v74 + v73;
    uint64_t v76 = v72[14];
    sub_1DD0465C8();
    *(void *)(v75 + v76) = MEMORY[0x1E4FBC870];
    unint64_t v77 = sub_1DCDB8DB0(v74);
    uint64_t v78 = v41;
    uint64_t v79 = (int *)v107;
    uint64_t v80 = v108;
    *uint64_t v108 = v50;
    v80[1] = v42;
    v80[2] = v69;
    v80[3] = v78;
    uint64_t v81 = v78;
    uint64_t v115 = v78;
    *(_DWORD *)((char *)v80 + v79[7]) = 0;
    unint64_t v82 = (uint64_t *)((char *)v80 + v79[8]);
    *unint64_t v82 = 0;
    v82[1] = 0xE000000000000000;
    long long v83 = (uint64_t *)((char *)v80 + v79[9]);
    *long long v83 = 0;
    v83[1] = 0xE000000000000000;
    *(uint64_t *)((char *)v80 + v79[11]) = MEMORY[0x1E4FBC860];
    uint64_t v84 = (_OWORD *)((char *)v80 + v79[12]);
    v84[2] = 0u;
    v84[3] = 0u;
    *uint64_t v84 = 0u;
    v84[1] = 0u;
    uint64_t v85 = (char *)v80 + v79[13];
    *(void *)uint64_t v85 = 123711979;
    v85[8] = 0;
    uint64_t v86 = v79[14];
    long long v116 = xmmword_1DD0535A0;
    *(_OWORD *)((char *)v80 + v86) = xmmword_1DD0535A0;
    uint64_t v87 = (char *)v80 + v79[15];
    *(void *)uint64_t v87 = v117;
    *((_WORD *)v87 + 4) = 1;
    *((void *)v87 + 2) = v69;
    *((void *)v87 + 3) = v81;
    *((void *)v87 + 4) = v70;
    *((double *)v87 + 5) = v71;
    v87[48] = 0;
    *((void *)v87 + 7) = 0;
    *((void *)v87 + 8) = 0xE000000000000000;
    *((void *)v87 + 9) = 0;
    *((void *)v87 + 10) = 0xE000000000000000;
    *((void *)v87 + 12) = 0;
    *((void *)v87 + 13) = 0;
    *((void *)v87 + 11) = v77;
    *((_DWORD *)v87 + 28) = 0;
    *(_DWORD *)((char *)v80 + v79[16]) = 0;
    LODWORD(v111) = v150[0];
    uint64_t v88 = v153;
    uint64_t v89 = v154;
    uint64_t v90 = v155;
    uint64_t v91 = v156;
    sub_1DCD32D4C(v153, v154);
    int v117 = sub_1DCD5D920;
    sub_1DCEBE644((uint64_t)&v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
    uint64_t v92 = v104;
    uint64_t v93 = (uint64_t)v106;
    uint64_t v94 = (uint64_t)&v106[*(int *)(v104 + 28)];
    sub_1DCEBE6BC((uint64_t)v80, v94, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v103 + 56))(v94, 0, 1, v79);
    *(unsigned char *)uint64_t v93 = v111;
    uint64_t v95 = v115;
    *(void *)(v93 + 8) = v118;
    *(void *)(v93 + 16) = v95;
    *(void *)(v93 + 24) = v88;
    *(void *)(v93 + 32) = v89;
    *(void *)(v93 + 40) = v90;
    *(void *)(v93 + 48) = v91;
    *(_DWORD *)(v93 + *(int *)(v92 + 32)) = 1065353216;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03C50);
    uint64_t v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = v119;
    uint64_t v97 = (uint64_t)v112;
    long long v118 = *(_OWORD *)v112;
    uint64_t v98 = *((void *)v112 + 2);
    uint64_t v99 = *((void *)v112 + 3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02740);
    unint64_t v100 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
    uint64_t v101 = swift_allocObject();
    *(_OWORD *)(v101 + 16) = v119;
    sub_1DCEBE6BC(v93, v101 + v100, type metadata accessor for RegionSearchResult.ResultItem);
    *(_OWORD *)(v96 + 32) = v118;
    *(void *)(v96 + 48) = v98;
    *(void *)(v96 + 56) = v99;
    *(void *)(v96 + 64) = v101;
    *(void *)(v96 + 72) = MEMORY[0x1E4FBC860];
    *(void *)(v96 + 80) = 0;
    *(void *)(v96 + 88) = 0xE000000000000000;
    *(unsigned char *)(v96 + 96) = 1;
    long long v132 = v177;
    long long v133 = v178;
    long long v134 = v179;
    long long v128 = v173;
    long long v129 = v174;
    long long v130 = v175;
    long long v131 = v176;
    long long v124 = v169;
    long long v125 = v170;
    long long v126 = v171;
    long long v127 = v172;
    *(void *)&long long v135 = v180;
    *((void *)&v135 + 1) = v96;
    long long v143 = v175;
    long long v144 = v176;
    long long v145 = v177;
    long long v146 = v178;
    long long v139 = v171;
    long long v140 = v172;
    long long v141 = v173;
    long long v142 = v174;
    long long v138 = v170;
    long long v136 = v116;
    long long v137 = v169;
    long long v147 = v179;
    long long v148 = v135;
    long long v149 = v116;
    sub_1DCEBF5FC((uint64_t)&v137);
    sub_1DCD43B04((uint64_t)&v137, (uint64_t)v123, &qword_1EAB03D58);
    sub_1DCD433F0((uint64_t)&v169);
    v114(v123);
    sub_1DCEBE560(&v124);
    sub_1DCEB90BC(v93, type metadata accessor for RegionSearchResult.ResultItem);
    sub_1DCEB90BC((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
    sub_1DCEB90BC(v97, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    unint64_t v63 = v117;
    goto LABEL_31;
  }
  sub_1DCD2479C((uint64_t)v17, &qword_1EBE855F0);
LABEL_30:
  long long v132 = v177;
  long long v133 = v178;
  long long v134 = v179;
  long long v128 = v173;
  long long v129 = v174;
  long long v130 = v175;
  long long v131 = v176;
  long long v124 = v169;
  long long v125 = v170;
  long long v126 = v171;
  long long v127 = v172;
  *(void *)&long long v135 = v180;
  *((void *)&v135 + 1) = MEMORY[0x1E4FBC860];
  long long v143 = v175;
  long long v144 = v176;
  long long v145 = v177;
  long long v146 = v178;
  long long v139 = v171;
  long long v140 = v172;
  long long v141 = v173;
  long long v142 = v174;
  long long v138 = v170;
  long long v136 = xmmword_1DD0535A0;
  long long v137 = v169;
  long long v147 = v179;
  long long v148 = v135;
  long long v149 = xmmword_1DD0535A0;
  sub_1DCEBF5FC((uint64_t)&v137);
  sub_1DCD43B04((uint64_t)&v137, (uint64_t)v123, &qword_1EAB03D58);
  sub_1DCD433F0((uint64_t)&v169);
  a3(v123);
  sub_1DCEBE560(&v124);
  unint64_t v63 = sub_1DCD5D920;
LABEL_31:
  sub_1DCEBE644((uint64_t)&v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))v63);
  return sub_1DCD2479C(v120, &qword_1EBE855F0);
}

void sub_1DCEBD67C(long long *a1, uint64_t a2, const void *a3)
{
  uint64_t v4 = a1;
  long long v5 = a1[9];
  long long v168 = a1[8];
  long long v169 = v5;
  long long v170 = a1[10];
  uint64_t v171 = *((void *)a1 + 22);
  long long v6 = a1[5];
  long long v164 = a1[4];
  long long v165 = v6;
  long long v7 = a1[7];
  long long v166 = a1[6];
  long long v167 = v7;
  long long v8 = a1[1];
  long long v160 = *a1;
  long long v161 = v8;
  long long v9 = a1[3];
  long long v162 = a1[2];
  long long v163 = v9;
  uint64_t v10 = type metadata accessor for RegionSearchResult.ResultItem(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v104 = v10;
  uint64_t v105 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v106 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for ObjectKnowledge();
  uint64_t v103 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v108 = (uint64_t *)((char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v112 = (uint64_t)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v21 = MEMORY[0x1F4188790](v20);
  long long v22 = *(void (**)(double))(v15 + 56);
  uint64_t v119 = (uint64_t)&v103 - v23;
  *(void *)&long long v118 = v14;
  v22(v21);
  sub_1DCD5DA7C((uint64_t)v172);
  uint64_t v158 = *v4;
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v158 + 16);
  uint64_t v113 = v15;
  long long v116 = v24;
  if (v24)
  {
    uint64_t v109 = v17;
    uint64_t v110 = v4;
    *(void *)&long long v115 = v158
                     + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    _Block_copy(a3);
    uint64_t v111 = a3;
    _Block_copy(a3);
    sub_1DCD43B68((uint64_t)&v158);
    sub_1DCD43B04((uint64_t)v172, (uint64_t)&v135, &qword_1EBE85400);
    uint64_t v25 = 0;
    uint64_t v114 = *(void *)(v15 + 72);
    uint64_t v26 = v119;
    while (1)
    {
      uint64_t v27 = v115 + v114 * v25;
      uint64_t v28 = *(void *)(v27 + 48);
      uint64_t v29 = *(void *)(v28 + 16);
      if (v29)
      {
        *(void *)&long long v117 = v25;
        swift_bridgeObjectRetain();
        sub_1DCD43B04((uint64_t)&v135, (uint64_t)v159, &qword_1EBE85400);
        uint64_t v30 = v29 - 1;
        for (uint64_t i = 32; ; i += 160)
        {
          long long v32 = *(_OWORD *)(v28 + i + 16);
          long long v149 = *(_OWORD *)(v28 + i);
          long long v150 = v32;
          long long v33 = *(_OWORD *)(v28 + i + 32);
          long long v34 = *(_OWORD *)(v28 + i + 48);
          long long v35 = *(_OWORD *)(v28 + i + 80);
          long long v153 = *(_OWORD *)(v28 + i + 64);
          long long v154 = v35;
          long long v151 = v33;
          long long v152 = v34;
          long long v36 = *(_OWORD *)(v28 + i + 96);
          long long v37 = *(_OWORD *)(v28 + i + 112);
          long long v38 = *(_OWORD *)(v28 + i + 128);
          *(_OWORD *)((char *)v157 + 13) = *(_OWORD *)(v28 + i + 141);
          v157[0] = v38;
          long long v156 = v37;
          long long v155 = v36;
          if (*(void *)&v157[1])
          {
            sub_1DCD2479C(v26, &qword_1EBE855F0);
            sub_1DCEBE6BC(v27, v26, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            ((void (*)(uint64_t, void, uint64_t, void))v22)(v26, 0, 1, v118);
            v120[6] = v155;
            v120[7] = v156;
            v121[0] = v157[0];
            *(_OWORD *)((char *)v121 + 13) = *(_OWORD *)((char *)v157 + 13);
            v120[2] = v151;
            v120[3] = v152;
            v120[4] = v153;
            v120[5] = v154;
            v120[0] = v149;
            v120[1] = v150;
            faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v120);
            sub_1DCD32CC8((uint64_t)&v149);
            sub_1DCEBE644((uint64_t)v159, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
            uint64_t v39 = v120;
          }
          else
          {
            uint64_t v39 = v159;
          }
          sub_1DCD43B04((uint64_t)v39, (uint64_t)v148, &qword_1EBE85400);
          if (!v30) {
            break;
          }
          sub_1DCD43B04((uint64_t)v148, (uint64_t)v159, &qword_1EBE85400);
          --v30;
        }
        swift_bridgeObjectRelease();
        sub_1DCD43B04((uint64_t)v148, (uint64_t)&v122, &qword_1EBE85400);
        uint64_t v25 = v117;
      }
      else
      {
        sub_1DCD43B04((uint64_t)&v135, (uint64_t)&v122, &qword_1EBE85400);
      }
      if ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))++v25 == v116) {
        break;
      }
      sub_1DCD43B04((uint64_t)&v122, (uint64_t)&v135, &qword_1EBE85400);
    }
    sub_1DCEBE450((uint64_t)&v158);
    sub_1DCD43B04((uint64_t)&v122, (uint64_t)v159, &qword_1EBE85400);
    uint64_t v4 = v110;
    a3 = v111;
    id v17 = v109;
  }
  else
  {
    _Block_copy(a3);
    _Block_copy(a3);
    sub_1DCD43B04((uint64_t)v172, (uint64_t)v159, &qword_1EBE85400);
  }
  uint64_t v40 = v112;
  sub_1DCD2889C(v119, v112, &qword_1EBE855F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v113 + 48))(v40, 1, v118) != 1)
  {
    sub_1DCEBE808(v40, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD43B04((uint64_t)v159, (uint64_t)&v149, &qword_1EBE85400);
    if (sub_1DCD32CA4((uint64_t)&v149) == 1
      || (uint64_t v41 = *((void *)&v152 + 1)) == 0
      || (unint64_t v42 = *(void *)&v157[1]) == 0)
    {
      sub_1DCEB90BC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      goto LABEL_30;
    }
    uint64_t v109 = v17;
    uint64_t v110 = v4;
    uint64_t v111 = a3;
    *(void *)&long long v117 = v152;
    uint64_t v43 = *((void *)&v157[0] + 1);
    uint64_t v45 = v107;
    uint64_t v44 = v108;
    os_log_t v46 = (char *)v108 + *(int *)(v107 + 24);
    uint64_t v47 = sub_1DD046478();
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56);
    v48(v46, 1, 1, v47);
    uint64_t v49 = (char *)v44 + *(int *)(v45 + 40);
    uint64_t v50 = v43;
    v48(v49, 1, 1, v47);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_1DCEBE644((uint64_t)v159, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
    if (sub_1DD0485D8())
    {
      swift_bridgeObjectRetain();
      unint64_t v51 = sub_1DCEBBF08(1uLL, v43, v42);
      unint64_t v53 = v52;
      unint64_t v54 = v42;
      unint64_t v56 = v55;
      unint64_t v58 = v57;
      unint64_t v59 = v54;
      swift_bridgeObjectRelease();
      if ((v51 ^ v53) >= 0x4000)
      {
        uint64_t v60 = sub_1DCD5109C(v51, v53, v56, v58, 10);
        if ((v61 & 0x100) != 0) {
          uint64_t v60 = (uint64_t)sub_1DCD4F45C(v51, v53, v56, v58, 10);
        }
        uint64_t v62 = v60;
        char v63 = v61;
        unint64_t v42 = v59;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v63) {
          uint64_t v64 = 0;
        }
        else {
          uint64_t v64 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v62;
        }
        long long v116 = v64;
        goto LABEL_33;
      }
      unint64_t v42 = v59;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    long long v116 = 0;
LABEL_33:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F38);
    uint64_t v67 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C20) - 8);
    unint64_t v68 = (*(unsigned __int8 *)(*(void *)v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v67 + 80);
    uint64_t v69 = swift_allocObject();
    long long v118 = xmmword_1DD04E910;
    *(_OWORD *)(v69 + 16) = xmmword_1DD04E910;
    unint64_t v70 = (void *)(v69 + v68 + v67[14]);
    swift_bridgeObjectRetain();
    sub_1DD0465C8();
    uint64_t v71 = v117;
    *unint64_t v70 = v117;
    v70[1] = v41;
    swift_bridgeObjectRetain();
    unint64_t v72 = sub_1DCDB8BB4(v69);
    double v73 = *((float *)&v157[1] + 2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F40);
    uint64_t v74 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C10) - 8);
    unint64_t v75 = (*(unsigned __int8 *)(*(void *)v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v74 + 80);
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = v118;
    unint64_t v77 = v76 + v75;
    uint64_t v78 = v74[14];
    sub_1DD0465C8();
    *(void *)(v77 + v78) = MEMORY[0x1E4FBC870];
    unint64_t v79 = sub_1DCDB8DB0(v76);
    uint64_t v80 = v41;
    uint64_t v81 = v108;
    *uint64_t v108 = v50;
    v81[1] = v42;
    v81[2] = v71;
    v81[3] = v80;
    uint64_t v82 = v80;
    uint64_t v114 = v80;
    long long v83 = (int *)v107;
    *(_DWORD *)((char *)v81 + *(int *)(v107 + 28)) = 0;
    uint64_t v84 = (uint64_t *)((char *)v81 + v83[8]);
    *uint64_t v84 = 0;
    v84[1] = 0xE000000000000000;
    uint64_t v85 = (uint64_t *)((char *)v81 + v83[9]);
    *uint64_t v85 = 0;
    v85[1] = 0xE000000000000000;
    *(uint64_t *)((char *)v81 + v83[11]) = MEMORY[0x1E4FBC860];
    uint64_t v86 = (_OWORD *)((char *)v81 + v83[12]);
    v86[2] = 0u;
    v86[3] = 0u;
    *uint64_t v86 = 0u;
    v86[1] = 0u;
    uint64_t v87 = (char *)v81 + v83[13];
    *(void *)uint64_t v87 = 123711979;
    v87[8] = 0;
    uint64_t v88 = v83[14];
    long long v115 = xmmword_1DD0535A0;
    *(_OWORD *)((char *)v81 + v88) = xmmword_1DD0535A0;
    uint64_t v89 = (char *)v81 + v83[15];
    *(void *)uint64_t v89 = v116;
    *((_WORD *)v89 + 4) = 1;
    *((void *)v89 + 2) = v71;
    *((void *)v89 + 3) = v82;
    *((void *)v89 + 4) = v72;
    *((double *)v89 + 5) = v73;
    v89[48] = 0;
    *((void *)v89 + 7) = 0;
    *((void *)v89 + 8) = 0xE000000000000000;
    *((void *)v89 + 9) = 0;
    *((void *)v89 + 10) = 0xE000000000000000;
    *((void *)v89 + 12) = 0;
    *((void *)v89 + 13) = 0;
    *((void *)v89 + 11) = v79;
    *((_DWORD *)v89 + 28) = 0;
    *(_DWORD *)((char *)v81 + v83[16]) = 0;
    LODWORD(v113) = v149;
    long long v90 = v154;
    long long v91 = v155;
    sub_1DCD32D4C(v154, *((uint64_t *)&v154 + 1));
    long long v116 = sub_1DCD5D920;
    sub_1DCEBE644((uint64_t)v159, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
    uint64_t v92 = v104;
    uint64_t v93 = (uint64_t)v106;
    uint64_t v94 = (uint64_t)&v106[*(int *)(v104 + 28)];
    sub_1DCEBE6BC((uint64_t)v81, v94, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v103 + 56))(v94, 0, 1, v83);
    *(unsigned char *)uint64_t v93 = v113;
    uint64_t v95 = v114;
    *(void *)(v93 + 8) = v117;
    *(void *)(v93 + 16) = v95;
    *(_OWORD *)(v93 + 24) = v90;
    *(_OWORD *)(v93 + 40) = v91;
    *(_DWORD *)(v93 + *(int *)(v92 + 32)) = 1065353216;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03C50);
    uint64_t v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = v118;
    uint64_t v97 = (uint64_t)v109;
    long long v117 = *(_OWORD *)v109;
    uint64_t v98 = *((void *)v109 + 2);
    uint64_t v99 = *((void *)v109 + 3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02740);
    unint64_t v100 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
    uint64_t v101 = swift_allocObject();
    *(_OWORD *)(v101 + 16) = v118;
    sub_1DCEBE6BC(v93, v101 + v100, type metadata accessor for RegionSearchResult.ResultItem);
    *(_OWORD *)(v96 + 32) = v117;
    *(void *)(v96 + 48) = v98;
    *(void *)(v96 + 56) = v99;
    *(void *)(v96 + 64) = v101;
    *(void *)(v96 + 72) = MEMORY[0x1E4FBC860];
    *(void *)(v96 + 80) = 0;
    *(void *)(v96 + 88) = 0xE000000000000000;
    *(unsigned char *)(v96 + 96) = 1;
    long long v143 = v168;
    long long v144 = v169;
    long long v145 = v170;
    long long v139 = v164;
    long long v140 = v165;
    long long v141 = v166;
    long long v142 = v167;
    long long v135 = v160;
    long long v136 = v161;
    long long v137 = v162;
    long long v138 = v163;
    *(void *)&long long v146 = v171;
    *((void *)&v146 + 1) = v96;
    long long v147 = v115;
    long long v132 = v170;
    long long v133 = v146;
    long long v134 = v115;
    long long v128 = v166;
    long long v129 = v167;
    long long v130 = v168;
    long long v131 = v169;
    long long v124 = v162;
    long long v125 = v163;
    long long v126 = v164;
    long long v127 = v165;
    long long v122 = v160;
    long long v123 = v161;
    a3 = v111;
    _Block_copy(v111);
    sub_1DCD433F0((uint64_t)v110);
    sub_1DCEBE47C(&v135);
    id v102 = sub_1DCD9B8F4();
    (*((void (**)(const void *, id, void))a3 + 2))(a3, v102, 0);

    sub_1DCEBE560(&v135);
    _Block_release(a3);
    sub_1DCEBE560(&v135);
    sub_1DCEB90BC(v93, type metadata accessor for RegionSearchResult.ResultItem);
    sub_1DCEB90BC((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
    sub_1DCEB90BC(v97, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    unint64_t v66 = v116;
    goto LABEL_31;
  }
  sub_1DCD2479C(v40, &qword_1EBE855F0);
LABEL_30:
  long long v143 = v168;
  long long v144 = v169;
  long long v145 = v170;
  long long v139 = v164;
  long long v140 = v165;
  long long v141 = v166;
  long long v142 = v167;
  long long v135 = v160;
  long long v136 = v161;
  long long v137 = v162;
  long long v138 = v163;
  *(void *)&long long v146 = v171;
  *((void *)&v146 + 1) = MEMORY[0x1E4FBC860];
  long long v147 = xmmword_1DD0535A0;
  long long v132 = v170;
  long long v133 = v146;
  long long v134 = xmmword_1DD0535A0;
  long long v128 = v166;
  long long v129 = v167;
  long long v130 = v168;
  long long v131 = v169;
  long long v124 = v162;
  long long v125 = v163;
  long long v126 = v164;
  long long v127 = v165;
  long long v122 = v160;
  long long v123 = v161;
  _Block_copy(a3);
  sub_1DCD433F0((uint64_t)v4);
  sub_1DCEBE47C(&v135);
  id v65 = sub_1DCD9B8F4();
  (*((void (**)(const void *, id, void))a3 + 2))(a3, v65, 0);

  sub_1DCEBE560(&v135);
  _Block_release(a3);
  sub_1DCEBE560(&v135);
  unint64_t v66 = sub_1DCD5D920;
LABEL_31:
  sub_1DCEBE644((uint64_t)v159, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))v66);
  sub_1DCD2479C(v119, &qword_1EBE855F0);
  _Block_release(a3);
  _Block_release(a3);
}

uint64_t sub_1DCEBE450(uint64_t a1)
{
  return a1;
}

void *sub_1DCEBE47C(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[19];
  unint64_t v5 = a1[25];
  uint64_t v6 = a1[24];
  swift_bridgeObjectRetain();
  sub_1DCD434B4(v2);
  swift_bridgeObjectRetain();
  sub_1DCD43548(v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCD8400C(v6, v5);
  return a1;
}

void *sub_1DCEBE560(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[19];
  unint64_t v5 = a1[25];
  uint64_t v6 = a1[24];
  swift_bridgeObjectRelease();
  sub_1DCD43C58(v2);
  swift_bridgeObjectRelease();
  sub_1DCD43078(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCD392D4(v6, v5);
  return a1;
}

uint64_t sub_1DCEBE644(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))
{
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(unsigned int *)(a1 + 152) | ((unint64_t)*(unsigned __int8 *)(a1 + 156) << 32));
  return a1;
}

uint64_t sub_1DCEBE6BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCEBE724(uint64_t a1)
{
  return sub_1DCD4C888(a1, v1[2], v1[3], v1[4]);
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1DCEBE790()
{
  return MEMORY[0x1F4186498](v0, 25, 7);
}

void sub_1DCEBE7A0(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DCEA389C(a1, *(double *)(v2 + 16), *(unsigned char *)(v2 + 24), a2);
}

uint64_t sub_1DCEBE7C0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 58, 7);
}

uint64_t sub_1DCEBE808(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCEBE870(long long *a1, uint64_t a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v6 = a1;
  long long v7 = a1[9];
  long long v171 = a1[8];
  long long v172 = v7;
  long long v173 = a1[10];
  uint64_t v174 = *((void *)a1 + 22);
  long long v8 = a1[5];
  long long v167 = a1[4];
  long long v168 = v8;
  long long v9 = a1[7];
  long long v169 = a1[6];
  long long v170 = v9;
  long long v10 = a1[1];
  long long v163 = *a1;
  long long v164 = v10;
  long long v11 = a1[3];
  long long v165 = a1[2];
  long long v166 = v11;
  uint64_t v12 = type metadata accessor for RegionSearchResult.ResultItem(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v106 = v12;
  uint64_t v107 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v108 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for ObjectKnowledge();
  uint64_t v105 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v110 = (uint64_t *)((char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v20 - 8);
  long long v22 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v24 = MEMORY[0x1F4188790](v23);
  uint64_t v25 = *(void (**)(double))(v17 + 56);
  uint64_t v122 = (uint64_t)&v104 - v26;
  *(void *)&long long v121 = v16;
  v25(v24);
  sub_1DCD5DA7C((uint64_t)v175);
  uint64_t v161 = *v6;
  uint64_t v119 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v161 + 16);
  if (v119)
  {
    uint64_t v111 = v22;
    uint64_t v113 = v19;
    uint64_t v114 = v6;
    uint64_t v115 = a4;
    long long v116 = a3;
    *(void *)&long long v118 = v161
                     + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    swift_bridgeObjectRetain();
    sub_1DCD43B04((uint64_t)v175, (uint64_t)&v138, &qword_1EBE85400);
    uint64_t v27 = 0;
    uint64_t v112 = v17;
    unint64_t v117 = *(void *)(v17 + 72);
    uint64_t v28 = v122;
    while (1)
    {
      uint64_t v29 = v118 + v117 * v27;
      uint64_t v30 = *(void *)(v29 + 48);
      uint64_t v31 = *(void *)(v30 + 16);
      if (v31)
      {
        *(void *)&long long v120 = v27;
        swift_bridgeObjectRetain();
        sub_1DCD43B04((uint64_t)&v138, (uint64_t)v162, &qword_1EBE85400);
        uint64_t v32 = v31 - 1;
        for (uint64_t i = 32; ; i += 160)
        {
          long long v34 = *(_OWORD *)(v30 + i + 16);
          long long v152 = *(_OWORD *)(v30 + i);
          long long v153 = v34;
          long long v35 = *(_OWORD *)(v30 + i + 32);
          long long v36 = *(_OWORD *)(v30 + i + 48);
          long long v37 = *(_OWORD *)(v30 + i + 80);
          long long v156 = *(_OWORD *)(v30 + i + 64);
          long long v157 = v37;
          long long v154 = v35;
          long long v155 = v36;
          long long v38 = *(_OWORD *)(v30 + i + 96);
          long long v39 = *(_OWORD *)(v30 + i + 112);
          long long v40 = *(_OWORD *)(v30 + i + 128);
          *(_OWORD *)((char *)v160 + 13) = *(_OWORD *)(v30 + i + 141);
          v160[0] = v40;
          long long v159 = v39;
          long long v158 = v38;
          if (*(void *)&v160[1])
          {
            sub_1DCD2479C(v28, &qword_1EBE855F0);
            sub_1DCEBE6BC(v29, v28, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            ((void (*)(uint64_t, void, uint64_t, void))v25)(v28, 0, 1, v121);
            v123[6] = v158;
            v123[7] = v159;
            v124[0] = v160[0];
            *(_OWORD *)((char *)v124 + 13) = *(_OWORD *)((char *)v160 + 13);
            v123[2] = v154;
            v123[3] = v155;
            v123[4] = v156;
            v123[5] = v157;
            v123[0] = v152;
            v123[1] = v153;
            faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v123);
            sub_1DCD32CC8((uint64_t)&v152);
            sub_1DCEBE644((uint64_t)v162, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
            uint64_t v41 = v123;
          }
          else
          {
            uint64_t v41 = v162;
          }
          sub_1DCD43B04((uint64_t)v41, (uint64_t)v151, &qword_1EBE85400);
          if (!v32) {
            break;
          }
          sub_1DCD43B04((uint64_t)v151, (uint64_t)v162, &qword_1EBE85400);
          --v32;
        }
        swift_bridgeObjectRelease();
        sub_1DCD43B04((uint64_t)v151, (uint64_t)&v125, &qword_1EBE85400);
        uint64_t v27 = v120;
      }
      else
      {
        sub_1DCD43B04((uint64_t)&v138, (uint64_t)&v125, &qword_1EBE85400);
      }
      if ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))++v27 == v119) {
        break;
      }
      sub_1DCD43B04((uint64_t)&v125, (uint64_t)&v138, &qword_1EBE85400);
    }
    sub_1DCEBE450((uint64_t)&v161);
    sub_1DCD43B04((uint64_t)&v125, (uint64_t)v162, &qword_1EBE85400);
    a4 = v115;
    a3 = v116;
    uint64_t v19 = v113;
    uint64_t v6 = v114;
    long long v22 = v111;
    uint64_t v17 = v112;
  }
  else
  {
    sub_1DCD43B04((uint64_t)v175, (uint64_t)v162, &qword_1EBE85400);
  }
  sub_1DCD2889C(v122, (uint64_t)v22, &qword_1EBE855F0);
  if ((*(unsigned int (**)(char *, uint64_t, void))(v17 + 48))(v22, 1, v121) == 1)
  {
    sub_1DCD2479C((uint64_t)v22, &qword_1EBE855F0);
LABEL_30:
    long long v146 = v171;
    long long v147 = v172;
    long long v148 = v173;
    long long v142 = v167;
    long long v143 = v168;
    long long v144 = v169;
    long long v145 = v170;
    long long v138 = v163;
    long long v139 = v164;
    long long v140 = v165;
    long long v141 = v166;
    *(void *)&long long v149 = v174;
    *((void *)&v149 + 1) = MEMORY[0x1E4FBC860];
    long long v150 = xmmword_1DD0535A0;
    long long v135 = v173;
    long long v136 = v149;
    long long v137 = xmmword_1DD0535A0;
    long long v131 = v169;
    long long v132 = v170;
    long long v133 = v171;
    long long v134 = v172;
    long long v127 = v165;
    long long v128 = v166;
    long long v129 = v167;
    long long v130 = v168;
    long long v125 = v163;
    long long v126 = v164;
    sub_1DCD433F0((uint64_t)v6);
    sub_1DCEBE47C(&v138);
    id v67 = sub_1DCD9B8F4();
    a3(v67, 0);

    sub_1DCEBE560(&v138);
    sub_1DCEBE560(&v138);
    unint64_t v68 = sub_1DCD5D920;
    goto LABEL_31;
  }
  sub_1DCEBE808((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  sub_1DCD43B04((uint64_t)v162, (uint64_t)&v152, &qword_1EBE85400);
  if (sub_1DCD32CA4((uint64_t)&v152) == 1
    || (uint64_t v42 = *((void *)&v155 + 1)) == 0
    || (unint64_t v43 = *(void *)&v160[1]) == 0)
  {
    sub_1DCEB90BC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    goto LABEL_30;
  }
  uint64_t v113 = v19;
  uint64_t v114 = v6;
  uint64_t v115 = a4;
  long long v116 = a3;
  *(void *)&long long v120 = v155;
  uint64_t v44 = *((void *)&v160[0] + 1);
  uint64_t v45 = v109;
  os_log_t v46 = v110;
  uint64_t v47 = (char *)v110 + *(int *)(v109 + 24);
  uint64_t v48 = sub_1DD046478();
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56);
  v49(v47, 1, 1, v48);
  v49((char *)v46 + *(int *)(v45 + 40), 1, 1, v48);
  uint64_t v50 = v44;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1DCEBE644((uint64_t)v162, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  if (sub_1DD0485D8())
  {
    uint64_t v51 = v42;
    swift_bridgeObjectRetain();
    uint64_t v52 = v44;
    unint64_t v53 = sub_1DCEBBF08(1uLL, v44, v43);
    unint64_t v55 = v54;
    unint64_t v56 = v43;
    unint64_t v58 = v57;
    unint64_t v60 = v59;
    unint64_t v61 = v56;
    swift_bridgeObjectRelease();
    if ((v53 ^ v55) < 0x4000)
    {
      unint64_t v43 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v119 = 0;
      uint64_t v42 = v51;
      uint64_t v50 = v52;
    }
    else
    {
      uint64_t v62 = sub_1DCD5109C(v53, v55, v58, v60, 10);
      if ((v63 & 0x100) != 0) {
        uint64_t v62 = (uint64_t)sub_1DCD4F45C(v53, v55, v58, v60, 10);
      }
      uint64_t v64 = v62;
      char v65 = v63;
      unint64_t v43 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v42 = v51;
      if (v65) {
        unint64_t v66 = 0;
      }
      else {
        unint64_t v66 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v64;
      }
      uint64_t v119 = v66;
      uint64_t v50 = v52;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v119 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F38);
  unint64_t v70 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C20) - 8);
  unint64_t v71 = (*(unsigned __int8 *)(*(void *)v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v70 + 80);
  uint64_t v72 = swift_allocObject();
  long long v121 = xmmword_1DD04E910;
  *(_OWORD *)(v72 + 16) = xmmword_1DD04E910;
  double v73 = (void *)(v72 + v71 + v70[14]);
  swift_bridgeObjectRetain();
  sub_1DD0465C8();
  uint64_t v74 = v120;
  void *v73 = v120;
  v73[1] = v42;
  swift_bridgeObjectRetain();
  unint64_t v117 = sub_1DCDB8BB4(v72);
  double v75 = *((float *)&v160[1] + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F40);
  uint64_t v76 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C10) - 8);
  unint64_t v77 = (*(unsigned __int8 *)(*(void *)v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v76 + 80);
  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = v121;
  uint64_t v79 = v42;
  unint64_t v80 = v78 + v77;
  uint64_t v81 = v76[14];
  sub_1DD0465C8();
  *(void *)(v80 + v81) = MEMORY[0x1E4FBC870];
  unint64_t v82 = sub_1DCDB8DB0(v78);
  long long v83 = v110;
  *uint64_t v110 = v50;
  v83[1] = v43;
  v83[2] = v74;
  v83[3] = v79;
  uint64_t v112 = v79;
  uint64_t v84 = (int *)v109;
  *(_DWORD *)((char *)v83 + *(int *)(v109 + 28)) = 0;
  uint64_t v85 = (uint64_t *)((char *)v83 + v84[8]);
  *uint64_t v85 = 0;
  v85[1] = 0xE000000000000000;
  uint64_t v86 = (uint64_t *)((char *)v83 + v84[9]);
  *uint64_t v86 = 0;
  v86[1] = 0xE000000000000000;
  *(uint64_t *)((char *)v83 + v84[11]) = MEMORY[0x1E4FBC860];
  uint64_t v87 = (_OWORD *)((char *)v83 + v84[12]);
  v87[2] = 0u;
  v87[3] = 0u;
  *uint64_t v87 = 0u;
  v87[1] = 0u;
  uint64_t v88 = (char *)v83 + v84[13];
  *(void *)uint64_t v88 = 123711979;
  v88[8] = 0;
  uint64_t v89 = v84[14];
  long long v118 = xmmword_1DD0535A0;
  *(_OWORD *)((char *)v83 + v89) = xmmword_1DD0535A0;
  long long v90 = (char *)v83 + v84[15];
  *(void *)long long v90 = v119;
  *((_WORD *)v90 + 4) = 1;
  *((void *)v90 + 2) = v74;
  *((void *)v90 + 3) = v79;
  *((void *)v90 + 4) = v117;
  *((double *)v90 + 5) = v75;
  v90[48] = 0;
  *((void *)v90 + 7) = 0;
  *((void *)v90 + 8) = 0xE000000000000000;
  *((void *)v90 + 9) = 0;
  *((void *)v90 + 10) = 0xE000000000000000;
  *((void *)v90 + 12) = 0;
  *((void *)v90 + 13) = 0;
  *((void *)v90 + 11) = v82;
  *((_DWORD *)v90 + 28) = 0;
  *(_DWORD *)((char *)v83 + v84[16]) = 0;
  LODWORD(v117) = v152;
  long long v91 = v157;
  long long v92 = v158;
  sub_1DCD32D4C(v157, *((uint64_t *)&v157 + 1));
  uint64_t v119 = sub_1DCD5D920;
  sub_1DCEBE644((uint64_t)v162, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
  uint64_t v93 = v106;
  uint64_t v94 = (uint64_t)v108;
  uint64_t v95 = (uint64_t)&v108[*(int *)(v106 + 28)];
  sub_1DCEBE6BC((uint64_t)v83, v95, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v105 + 56))(v95, 0, 1, v84);
  *(unsigned char *)uint64_t v94 = v117;
  uint64_t v96 = v112;
  *(void *)(v94 + 8) = v120;
  *(void *)(v94 + 16) = v96;
  *(_OWORD *)(v94 + 24) = v91;
  *(_OWORD *)(v94 + 40) = v92;
  *(_DWORD *)(v94 + *(int *)(v93 + 32)) = 1065353216;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03C50);
  uint64_t v97 = swift_allocObject();
  *(_OWORD *)(v97 + 16) = v121;
  uint64_t v98 = (uint64_t)v113;
  long long v120 = *(_OWORD *)v113;
  uint64_t v99 = *((void *)v113 + 2);
  uint64_t v100 = *((void *)v113 + 3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02740);
  unint64_t v101 = (*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
  uint64_t v102 = swift_allocObject();
  *(_OWORD *)(v102 + 16) = v121;
  sub_1DCEBE6BC(v94, v102 + v101, type metadata accessor for RegionSearchResult.ResultItem);
  *(_OWORD *)(v97 + 32) = v120;
  *(void *)(v97 + 48) = v99;
  *(void *)(v97 + 56) = v100;
  *(void *)(v97 + 64) = v102;
  *(void *)(v97 + 72) = MEMORY[0x1E4FBC860];
  *(void *)(v97 + 80) = 0;
  *(void *)(v97 + 88) = 0xE000000000000000;
  *(unsigned char *)(v97 + 96) = 1;
  long long v146 = v171;
  long long v147 = v172;
  long long v148 = v173;
  long long v142 = v167;
  long long v143 = v168;
  long long v144 = v169;
  long long v145 = v170;
  long long v138 = v163;
  long long v139 = v164;
  long long v140 = v165;
  long long v141 = v166;
  *(void *)&long long v149 = v174;
  *((void *)&v149 + 1) = v97;
  long long v150 = v118;
  long long v135 = v173;
  long long v136 = v149;
  long long v137 = v118;
  long long v131 = v169;
  long long v132 = v170;
  long long v133 = v171;
  long long v134 = v172;
  long long v127 = v165;
  long long v128 = v166;
  long long v129 = v167;
  long long v130 = v168;
  long long v125 = v163;
  long long v126 = v164;
  sub_1DCD433F0((uint64_t)v114);
  sub_1DCEBE47C(&v138);
  id v103 = sub_1DCD9B8F4();
  v116(v103, 0);

  sub_1DCEBE560(&v138);
  sub_1DCEBE560(&v138);
  sub_1DCEB90BC(v94, type metadata accessor for RegionSearchResult.ResultItem);
  sub_1DCEB90BC((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
  sub_1DCEB90BC(v98, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  unint64_t v68 = v119;
LABEL_31:
  sub_1DCEBE644((uint64_t)v162, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))v68);
  return sub_1DCD2479C(v122, &qword_1EBE855F0);
}