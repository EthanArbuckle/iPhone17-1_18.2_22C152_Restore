uint64_t sub_1DCEBF5FC(uint64_t result)
{
  *(unsigned char *)(result + 208) = 0;
  return result;
}

uint64_t sub_1DCEBF604()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  if (*(void *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_release();
  swift_release();

  sub_1DCD21954(*(void *)(v0 + 192), *(void *)(v0 + 200));
  swift_release();
  return MEMORY[0x1F4186498](v0, 224, 7);
}

uint64_t sub_1DCEBF6B4(uint64_t a1)
{
  return sub_1DCEB3250(a1, *(double *)(v1 + 64), *(double *)(v1 + 72), *(double *)(v1 + 80), *(double *)(v1 + 88), *(void *)(v1 + 16), (void *)(v1 + 24), v1 + 96, *(void **)(v1 + 160), *(void *)(v1 + 168), *(void *)(v1 + 176), *(void *)(v1 + 184), *(void *)(v1 + 192), *(void *)(v1 + 200), *(void (**)(uint64_t))(v1 + 208), *(void *)(v1 + 216));
}

uint64_t *sub_1DCEBF700(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1DCEBF73C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCEBF774()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCEBF7AC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  if (*(void *)(v0 + 112) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_release();
  sub_1DCD21954(*(void *)(v0 + 200), *(void *)(v0 + 208));
  swift_release();
  return MEMORY[0x1F4186498](v0, 232, 7);
}

uint64_t sub_1DCEBF864()
{
  return sub_1DCEB2FF4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v0 + 40, (uint64_t *)(v0 + 112), *(void **)(v0 + 176), *(void *)(v0 + 184), *(void **)(v0 + 192), *(double *)(v0 + 80), *(double *)(v0 + 88), *(double *)(v0 + 96), *(double *)(v0 + 104), *(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 224));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_1DCEBF8CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1DCEBF914()
{
  unint64_t result = qword_1EBE84FE0;
  if (!qword_1EBE84FE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBE84FD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84FE0);
  }
  return result;
}

double S2Cell.center.getter@<D0>(double *a1@<X8>)
{
  S2CellId.rawPoint.getter(&v6);
  double v2 = sqrt(v6 * v6 + v7 * v7 + v8 * v8);
  if (v2 != 0.0) {
    double v2 = 1.0 / v2;
  }
  double result = v6 * v2;
  double v4 = v7 * v2;
  double v5 = v8 * v2;
  *a1 = v6 * v2;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

Swift::Bool __swiftcall S2Cell.contains(point:)(VisualIntelligence::S2Point point)
{
  uint64_t v3 = *((void *)v1 + 2);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 8);
  double v5 = *(void **)(v2 + 16);
  long long v12 = *v1;
  uint64_t v13 = v3;
  Swift::Bool result = static S2Projections.faceXyzToUv(face:point:)(v4, (double *)&v12, (uint64_t)&v14);
  if (v16) {
    return 0;
  }
  unint64_t v7 = v5[2];
  if (!v7)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = v5[4];
  unint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(double *)(v8 + 32) > v14) {
    return 0;
  }
  if (v9 < 2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v14 <= *(double *)(v8 + 40))
  {
    if (v7 >= 2)
    {
      uint64_t v10 = v5[5];
      unint64_t v11 = *(void *)(v10 + 16);
      if (v11)
      {
        if (*(double *)(v10 + 32) > v15) {
          return 0;
        }
        if (v11 >= 2) {
          return v15 <= *(double *)(v10 + 40);
        }
LABEL_19:
        __break(1u);
        return result;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return 0;
}

void S2Cell.rectBound.getter(long long *a1@<X8>)
{
  uint64_t v4 = a1;
  int v5 = *((unsigned __int8 *)v1 + 8);
  int v6 = *((char *)v1 + 9);
  if (v6 < 1)
  {
    switch(*((unsigned char *)v1 + 8))
    {
      case 0:
        long long v18 = xmmword_1DD05B110;
        *a1 = xmmword_1DD05B110;
        goto LABEL_42;
      case 1:
        long long v34 = xmmword_1DD05B110;
        long long v35 = xmmword_1DD05B150;
        goto LABEL_49;
      case 2:
        if (qword_1EAB01F40 != -1) {
          swift_once();
        }
        *(void *)uint64_t v4 = qword_1EAB03D60;
        *(long long *)((char *)v4 + 8) = xmmword_1DD05B140;
        *((void *)v4 + 3) = 0x400921FB54442D18;
        return;
      case 3:
        long long v34 = xmmword_1DD05B110;
        long long v35 = xmmword_1DD05B130;
        goto LABEL_49;
      case 4:
        long long v34 = xmmword_1DD05B110;
        long long v35 = xmmword_1DD05B120;
LABEL_49:
        *a1 = v34;
        a1[1] = v35;
        break;
      default:
        if (qword_1EAB01F40 == -1) {
          goto LABEL_41;
        }
        goto LABEL_74;
    }
    return;
  }
  unint64_t v7 = (void *)v1[2];
  unint64_t v8 = v7[2];
  if (!v8)
  {
    __break(1u);
    goto LABEL_64;
  }
  uint64_t v9 = v7[4];
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (v10 == 1)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  if (v8 < 2)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v11 = v7[5];
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  if (v12 == 1)
  {
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v13 = *v1;
  char v14 = *((unsigned char *)v1 + 10);
  double v15 = *(double *)(v9 + 32) + *(double *)(v9 + 40);
  double v16 = *(double *)(v11 + 32) + *(double *)(v11 + 40);
  uint64_t v40 = v7[4];
  v41 = v4;
  if (*((unsigned char *)v1 + 8))
  {
    switch(*((unsigned char *)v1 + 8))
    {
      case 1:
        goto LABEL_13;
      case 3:
      case 4:
        BOOL v17 = v15 > 0.0;
        break;
      default:
        BOOL v17 = v15 < 0.0;
        break;
    }
    BOOL v19 = v16 < 0.0;
  }
  else
  {
LABEL_13:
    BOOL v17 = v15 < 0.0;
    BOOL v19 = v16 > 0.0;
  }
  uint64_t v4 = (long long *)v17;
  unint64_t v20 = v19;
  double v21 = sub_1DCEC1954(v17, v19);
  *(void *)&long long v42 = v13;
  BYTE8(v42) = v5;
  BYTE9(v42) = v6;
  BYTE10(v42) = v14;
  unint64_t v22 = !v17;
  unint64_t v23 = v20 ^ 1;
  double v24 = sub_1DCEC1954(v22, v20 ^ 1);
  if (v21 > v24) {
    double v25 = v24;
  }
  else {
    double v25 = v21;
  }
  if (v21 > v24) {
    double v24 = v21;
  }
  if (v24 < v25)
  {
    double v26 = v24;
  }
  else
  {
    double v25 = v25 + -4.4408921e-16;
    double v26 = v24 + 4.4408921e-16;
  }
  if (v25 > -1.57079633) {
    double v2 = v25;
  }
  else {
    double v2 = -1.57079633;
  }
  if (v26 <= 1.57079633) {
    double v3 = v26;
  }
  else {
    double v3 = 1.57079633;
  }
  if (v2 == -1.57079633 || v3 == 1.57079633)
  {
    if (qword_1EAB01DB0 == -1)
    {
LABEL_38:
      *(double *)v41 = v2;
      *((double *)v41 + 1) = v3;
      v41[1] = xmmword_1EAB032E0;
      return;
    }
LABEL_71:
    swift_once();
    goto LABEL_38;
  }
  unint64_t v27 = *(void *)(v40 + 16);
  if (v27 <= v17) {
    goto LABEL_69;
  }
  unint64_t v28 = *(void *)(v11 + 16);
  if (v23 >= v28)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v29 = v11 + 32;
  double v30 = *(double *)(v40 + 32 + 8 * v17);
  if (v5)
  {
    double v31 = *(double *)(v29 + 8 * v23);
    v32 = v41;
    switch(v5)
    {
      case 1:
        double v31 = -v30;
        double v30 = 1.0;
        break;
      case 2:
        double v36 = -v30;
        double v30 = -v31;
        double v31 = v36;
        break;
      case 3:
        double v30 = -v31;
        double v31 = -1.0;
        break;
      case 4:
        double v30 = -1.0;
        break;
      default:
        break;
    }
  }
  else
  {
    double v31 = 1.0;
    v32 = v41;
  }
  if (v27 <= v22)
  {
    __break(1u);
  }
  else if (v28 > v20)
  {
    double v37 = *(double *)(v40 + 32 + 8 * v22);
    if (v5)
    {
      double v38 = *(double *)(v29 + 8 * v20);
      switch(v5)
      {
        case 1:
          double v38 = -v37;
          double v37 = 1.0;
          break;
        case 2:
          double v39 = -v37;
          double v37 = -v38;
          double v38 = v39;
          break;
        case 3:
          double v37 = -v38;
          double v38 = -1.0;
          break;
        case 4:
          double v37 = -1.0;
          break;
        default:
          break;
      }
    }
    else
    {
      double v38 = 1.0;
    }
    atan2(v30, v31);
    atan2(v37, v38);
    S1Interval.expanded(radius:)(4.4408921e-16);
    *(double *)v32 = v2;
    *((double *)v32 + 1) = v3;
    v32[1] = v42;
    return;
  }
  __break(1u);
LABEL_74:
  swift_once();
LABEL_41:
  double v33 = -*(double *)&qword_1EAB03D60;
  *(void *)uint64_t v4 = 0xBFF921FB54442D18;
  *((double *)v4 + 1) = v33;
  long long v18 = xmmword_1DD056890;
LABEL_42:
  v4[1] = v18;
}

VisualIntelligence::S2Point __swiftcall S2Cell.getVertex(_:)(Swift::Int a1)
{
  double v3 = *(void **)(v2 + 16);
  unint64_t v4 = v3[2];
  if (!v4)
  {
    __break(1u);
    goto LABEL_17;
  }
  Swift::Int v5 = a1 >> 1;
  unint64_t v6 = (a1 >> 1) ^ a1 & 1;
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = v3[4];
  if (v6 >= *(void *)(v7 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v4 < 2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a1 < 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v8 = v3[5];
  if (v5 >= *(void *)(v8 + 16))
  {
LABEL_21:
    __break(1u);
    JUMPOUT(0x1DCEC0168);
  }
  double v9 = *(double *)(v7 + 8 * v6 + 32);
  Swift::Int v10 = v8 + 8 * v5;
  double v11 = *(double *)(v10 + 32);
  double v12 = 1.0;
  switch(*(unsigned char *)(v2 + 8))
  {
    case 0:
      break;
    case 1:
      double v12 = -v9;
      double v9 = 1.0;
      break;
    case 2:
      double v12 = -v9;
      double v9 = -v11;
      double v11 = 1.0;
      break;
    case 3:
      double v13 = -v11;
      double v11 = -v9;
      double v12 = -1.0;
      double v9 = v13;
      break;
    case 4:
      double v12 = *(double *)(v10 + 32);
      double v11 = -v9;
      double v9 = -1.0;
      break;
    default:
      double v12 = *(double *)(v10 + 32);
      double v11 = -1.0;
      break;
  }
  double v14 = sqrt(v12 * v12 + v9 * v9 + v11 * v11);
  if (v14 != 0.0) {
    double v14 = 1.0 / v14;
  }
  double v15 = v12 * v14;
  double v16 = v9 * v14;
  double v17 = v11 * v14;
  *uint64_t v1 = v15;
  v1[1] = v16;
  v1[2] = v17;
  result.z = v15;
  result.y = v17;
  result.x = v16;
  return result;
}

double static S2Cell.averageArea(level:)(uint64_t a1)
{
  return scalb(0.523598776, 1.0 - (double)a1 + 1.0 - (double)a1);
}

uint64_t S2Cell.init(cellId:)@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v10 = *a1;
  unint64_t v48 = 0;
  unint64_t v49 = 0;
  uint64_t v11 = sub_1DCEB27B4(&v49, &v48, 7, (v10 >> 61) & 1);
  uint64_t v12 = sub_1DCEB27B4(&v49, &v48, 6, v11);
  uint64_t v13 = sub_1DCEB27B4(&v49, &v48, 5, v12);
  uint64_t v14 = sub_1DCEB27B4(&v49, &v48, 4, v13);
  uint64_t v15 = sub_1DCEB27B4(&v49, &v48, 3, v14);
  uint64_t v16 = sub_1DCEB27B4(&v49, &v48, 2, v15);
  uint64_t v17 = sub_1DCEB27B4(&v49, &v48, 1, v16);
  unint64_t v47 = v10;
  long long v18 = (uint64_t *)&v47;
  uint64_t v19 = sub_1DCEB27B4(&v49, &v48, 0, v17);
  if (__OFSUB__(0, v10))
  {
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v7 = v19 ^ ((v10 & -(uint64_t)v10 & 0x1111111111111110) != 0);
  if ((v7 & 0x8000000000000000) == 0 && v7 < 0x100)
  {
    unint64_t v47 = v10;
    long long v18 = (uint64_t *)&v47;
    uint64_t v20 = S2CellId.level.getter();
    if (v20 >= -128)
    {
      LOBYTE(v18) = v20;
      if (v20 <= 127)
      {
        unint64_t v21 = v20 << 56;
        if ((unint64_t)((v20 << 56) - 0x5E00000000000001) < 0x7FFFFFFFFFFFFFFFLL) {
          goto LABEL_7;
        }
        if (v20 >= 31) {
          goto LABEL_53;
        }
        if (v20 <= -34) {
          goto LABEL_7;
        }
        unint64_t v22 = 1 << (30 - v20);
        while (1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03CC0);
          uint64_t v23 = swift_allocObject();
          *(_OWORD *)(v23 + 16) = xmmword_1DD04EF60;
          double v3 = (double *)qword_1F3836CB8;
          *(void *)(v23 + 40) = qword_1F3836CB8;
          uint64_t v5 = -(uint64_t)v22;
          if (__OFSUB__(0, v22)) {
            break;
          }
          if ((uint64_t)(v22 + 0x4000000000000000) < 0) {
            goto LABEL_40;
          }
          unint64_t v24 = v49 & v5;
          if ((uint64_t)((v49 & v5) + 0x4000000000000000) < 0) {
            goto LABEL_41;
          }
          uint64_t v25 = 2 * v24 - 0x40000000;
          if (__OFADD__(-1073741824, 2 * v24)) {
            goto LABEL_42;
          }
          uint64_t v6 = 2 * v22;
          uint64_t v4 = v25 + 2 * v22;
          if (__OFADD__(v25, 2 * v22)) {
            goto LABEL_43;
          }
          char v46 = v7;
          unint64_t v7 = v48;
          double v26 = (double)v25 * 9.31322575e-10;
          BOOL v27 = v26 < 0.0;
          double v28 = 1.0 - (1.0 - v26) * (1.0 - v26);
          double v29 = (v26 + 1.0) * (v26 + 1.0) + -1.0;
          if (v27) {
            double v8 = v28;
          }
          else {
            double v8 = v29;
          }
          uint64_t v2 = v23;
          double v30 = (double *)qword_1F3836CE8;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v2 + 32) = qword_1F3836CE8;
          if (isUniquelyReferenced_nonNull_native)
          {
            unint64_t v32 = qword_1F3836CF8;
            if (!qword_1F3836CF8) {
              goto LABEL_45;
            }
            goto LABEL_21;
          }
LABEL_44:
          double v30 = (double *)sub_1DCEC1C64(qword_1F3836CE8);
          unint64_t v32 = *((void *)v30 + 2);
          if (!v32)
          {
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            uint64_t result = (uint64_t)sub_1DCEC1C64(qword_1F3836CB8);
            double v3 = (double *)result;
            goto LABEL_31;
          }
LABEL_21:
          v30[4] = v8 * 0.333333333;
          double v33 = (double)v4 * 9.31322575e-10;
          BOOL v27 = v33 < 0.0;
          double v34 = 1.0 - (1.0 - v33) * (1.0 - v33);
          double v35 = (v33 + 1.0) * (v33 + 1.0) + -1.0;
          if (v27) {
            double v35 = v34;
          }
          if (v32 < 2) {
            goto LABEL_46;
          }
          v30[5] = v35 * 0.333333333;
          *(void *)(v2 + 32) = v30;
          unint64_t v36 = v7 & v5;
          if ((uint64_t)((v7 & v5) + 0x4000000000000000) < 0) {
            goto LABEL_47;
          }
          BOOL v37 = __OFADD__(-1073741824, 2 * v36);
          uint64_t v38 = 2 * v36 - 0x40000000;
          if (v37) {
            goto LABEL_48;
          }
          double v30 = (double *)(v38 + v6);
          if (__OFADD__(v38, v6)) {
            goto LABEL_49;
          }
          double v39 = (double)v38 * 9.31322575e-10;
          BOOL v27 = v39 < 0.0;
          double v40 = 1.0 - (1.0 - v39) * (1.0 - v39);
          double v41 = (v39 + 1.0) * (v39 + 1.0) + -1.0;
          if (v27) {
            double v8 = v40;
          }
          else {
            double v8 = v41;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v2 + 40) = v3;
          if ((result & 1) == 0) {
            goto LABEL_50;
          }
LABEL_31:
          unint64_t v21 = *((void *)v3 + 2);
          if (v21)
          {
            v3[4] = v8 * 0.333333333;
            double v43 = (double)(uint64_t)v30 * 9.31322575e-10;
            BOOL v27 = v43 < 0.0;
            double v44 = 1.0 - (1.0 - v43) * (1.0 - v43);
            double v45 = (v43 + 1.0) * (v43 + 1.0) + -1.0;
            if (v27) {
              double v45 = v44;
            }
            if (v21 >= 2)
            {
              v3[5] = v45 * 0.333333333;
              *(void *)(v2 + 40) = v3;
              *(void *)a2 = v10;
              *(unsigned char *)(a2 + 8) = v10 >> 61;
              *(unsigned char *)(a2 + 9) = (_BYTE)v18;
              *(unsigned char *)(a2 + 10) = v46;
              *(void *)(a2 + 16) = v2;
              return result;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
LABEL_53:
          if (v21 >> 57 >= 0x2F) {
LABEL_7:
          }
            unint64_t v22 = 0;
          else {
            unint64_t v22 = 1uLL >> (v18 + 34);
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

double S2Cell.approxArea.getter()
{
  int v1 = *(char *)(v0 + 9);
  if (v1 > 1)
  {
    double v3 = *(double *)(v0 + 16);
    char v4 = *(unsigned char *)(v0 + 10);
    char v5 = *(unsigned char *)(v0 + 8);
    double v6 = *(double *)v0;
    double v16 = *(double *)v0;
    LOBYTE(v17) = v5;
    BYTE1(v17) = *(unsigned char *)(v0 + 9);
    BYTE2(v17) = v4;
    S2Cell.getVertex(_:)(2);
    S2Cell.getVertex(_:)(0);
    double v7 = v19 - v17;
    LOBYTE(v17) = v5;
    BYTE1(v17) = v1;
    BYTE2(v17) = v4;
    S2Cell.getVertex(_:)(3);
    S2Cell.getVertex(_:)(1);
    double v8 = v7 * (v20 - v3) - (v20 - v3) * (v19 - v17);
    double v9 = (v18 - v16) * (v19 - v17) - v7 * (v18 - v6);
    double v10 = sqrt(v9 * v9+ v8 * v8+ ((v20 - v3) * (v18 - v6) - (v18 - v16) * (v20 - v3)) * ((v20 - v3) * (v18 - v6) - (v18 - v16) * (v20 - v3)))* 0.5;
    double v11 = v10 * 0.318309886;
    double v12 = 1.0 - v10 * 0.318309886;
    double v13 = v10 + v10;
    BOOL v14 = v11 <= 1.0;
    double v15 = 0.0;
    if (v14) {
      double v15 = v12;
    }
    return v13 / (sqrt(v15) + 1.0);
  }
  else
  {
    return scalb(0.523598776, 1.0 - (double)v1 + 1.0 - (double)v1);
  }
}

double S2Cell.exactArea.getter()
{
  S2Cell.getVertex(_:)(0);
  long long v0 = v16;
  uint64_t v1 = v17;
  S2Cell.getVertex(_:)(1);
  S2Cell.getVertex(_:)(2);
  long long v2 = v16;
  uint64_t v3 = v17;
  VisualIntelligence::S2Point v18 = S2Cell.getVertex(_:)(3);
  long long v11 = v16;
  uint64_t v4 = v17;
  long long v14 = v16;
  uint64_t v15 = v17;
  long long v12 = v16;
  uint64_t v13 = v17;
  sub_1DCE93C70((uint64_t *)&v16, (uint64_t *)&v14, (double *)&v12, *(double *)&v16, v18.y, v18.z);
  double v6 = v5;
  long long v16 = v0;
  uint64_t v17 = v1;
  long long v14 = v2;
  uint64_t v15 = v3;
  long long v12 = v11;
  uint64_t v13 = v4;
  sub_1DCE93C70((uint64_t *)&v16, (uint64_t *)&v14, (double *)&v12, *(double *)&v11, v7, v8);
  return v6 + v9;
}

void S2Cell.capBound.getter(double *a1@<X8>)
{
  long long v2 = *(void **)(v1 + 16);
  unint64_t v3 = v2[2];
  if (!v3)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v5 = v2[4];
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v6 == 1)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v3 < 2)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v7 = v2[5];
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v8 == 1)
  {
LABEL_36:
    __break(1u);
    JUMPOUT(0x1DCEC0D4CLL);
  }
  double v9 = (*(double *)(v5 + 32) + *(double *)(v5 + 40)) * 0.5;
  double v10 = (*(double *)(v7 + 32) + *(double *)(v7 + 40)) * 0.5;
  double v11 = 1.0;
  switch(*(unsigned char *)(v1 + 8))
  {
    case 0:
      break;
    case 1:
      double v11 = -v9;
      double v9 = 1.0;
      break;
    case 2:
      double v11 = -v9;
      double v9 = -v10;
      double v10 = 1.0;
      break;
    case 3:
      double v12 = -v10;
      double v10 = -v9;
      double v11 = -1.0;
      double v9 = v12;
      break;
    case 4:
      double v11 = (*(double *)(v7 + 32) + *(double *)(v7 + 40)) * 0.5;
      double v10 = -v9;
      double v9 = -1.0;
      break;
    default:
      double v11 = (*(double *)(v7 + 32) + *(double *)(v7 + 40)) * 0.5;
      double v10 = -1.0;
      break;
  }
  double v13 = sqrt(v11 * v11 + v9 * v9 + v10 * v10);
  if (v13 != 0.0) {
    double v13 = 1.0 / v13;
  }
  double v14 = v11 * v13;
  double v15 = v9 * v13;
  double v16 = v10 * v13;
  S2Cell.getVertex(_:)(0);
  double v17 = (v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23);
  double v18 = 0.0;
  if ((v17 + (v16 - v24) * (v16 - v24)) * 2.22044605e-16 < 0.0) {
    double v19 = 0.0;
  }
  else {
    double v19 = (v17 + (v16 - v24) * (v16 - v24)) * 2.22044605e-16;
  }
  S2Cell.getVertex(_:)(1);
  double v20 = v16 - v24;
  if (v19 > ((v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23) + v20 * v20) * 2.22044605e-16) {
    double v21 = v19;
  }
  else {
    double v21 = ((v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23) + v20 * v20) * 2.22044605e-16;
  }
  S2Cell.getVertex(_:)(2);
  if (v21 >= 0.0)
  {
    if (v21 <= ((v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23) + (v16 - v24) * (v16 - v24)) * 2.22044605e-16) {
      double v21 = ((v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23) + (v16 - v24) * (v16 - v24)) * 2.22044605e-16;
    }
  }
  else
  {
    double v14 = v22;
    double v15 = v23;
    double v16 = v24;
    double v21 = 0.0;
  }
  S2Cell.getVertex(_:)(3);
  if (v21 >= 0.0)
  {
    if (v21 > ((v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23) + (v16 - v24) * (v16 - v24)) * 2.22044605e-16) {
      double v18 = v21;
    }
    else {
      double v18 = ((v14 - v22) * (v14 - v22) + (v15 - v23) * (v15 - v23) + (v16 - v24) * (v16 - v24)) * 2.22044605e-16;
    }
  }
  else
  {
    double v14 = v22;
    double v15 = v23;
    double v16 = v24;
  }
  *a1 = v14;
  a1[1] = v15;
  a1[2] = v16;
  a1[3] = v18;
}

void S2Cell.cellId.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t S2Cell.face.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t S2Cell.level.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t S2Cell.orientation.getter()
{
  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t S2Cell.uv.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t S2Cell.init(face:pos:level:)@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  S2CellId.init(face:pos:level:)(a1, a2, a3, &v9);
  uint64_t result = S2Cell.init(cellId:)((unint64_t *)&v9, (uint64_t)&v10);
  __int16 v6 = v11;
  char v7 = v12;
  uint64_t v8 = v13;
  *(void *)a4 = v10;
  *(_WORD *)(a4 + 8) = v6;
  *(unsigned char *)(a4 + 10) = v7;
  *(void *)(a4 + 16) = v8;
  return result;
}

uint64_t S2Cell.init(point:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *((void *)a1 + 2);
  long long v9 = *a1;
  uint64_t v10 = v3;
  S2CellId.init(point:)((double *)&v9, &v8);
  uint64_t result = S2Cell.init(cellId:)(&v8, (uint64_t)&v9);
  __int16 v5 = WORD4(v9);
  char v6 = BYTE10(v9);
  uint64_t v7 = v10;
  *(void *)a2 = v9;
  *(_WORD *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 10) = v6;
  *(void *)(a2 + 16) = v7;
  return result;
}

uint64_t S2Cell.init(latlng:)@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  double v3 = a1[1];
  __double2 v4 = __sincos_stret(*a1);
  __double2 v5 = __sincos_stret(v3);
  double v11 = v4.__cosval * v5.__cosval;
  double v12 = v4.__cosval * v5.__sinval;
  double sinval = v4.__sinval;
  S2CellId.init(point:)(&v11, &v10);
  uint64_t result = S2Cell.init(cellId:)(&v10, (uint64_t)&v11);
  __int16 v7 = LOWORD(v12);
  char v8 = BYTE2(v12);
  double v9 = sinval;
  *(double *)a2 = v11;
  *(_WORD *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 10) = v8;
  *(double *)(a2 + 16) = v9;
  return result;
}

BOOL S2Cell.isLeaf.getter()
{
  return *(unsigned char *)(v0 + 9) == 30;
}

VisualIntelligence::S2Point __swiftcall S2Cell.getRawVertex(_:)(Swift::Int a1)
{
  double v3 = *(void **)(v2 + 16);
  unint64_t v4 = v3[2];
  if (!v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  Swift::Int v5 = a1 >> 1;
  unint64_t v6 = (a1 >> 1) ^ a1 & 1;
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v7 = v3[4];
  if (v6 >= *(void *)(v7 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v4 < 2)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a1 < 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = v3[5];
  if (v5 >= *(void *)(v8 + 16))
  {
LABEL_13:
    __break(1u);
    goto _$s18VisualIntelligence6S2CellV12getRawVertexyAA0C5PointVSiF;
  }
  static S2Projections.faceUvToXyz(face:u:v:)(*(unsigned __int8 *)(v2 + 8), v1, *(double *)(v7 + 8 * v6 + 32), *(double *)(v8 + 8 * v5 + 32));
_$s18VisualIntelligence6S2CellV12getRawVertexyAA0C5PointVSiF:
  result.z = v11;
  result.y = v10;
  result.x = v9;
  return result;
}

VisualIntelligence::S2Point __swiftcall S2Cell.getEdge(_:)(Swift::Int a1)
{
  uint64_t v2 = v1;
  S2Cell.getRawEdge(_:)(a1);
  double v3 = sqrt(v7 * v7 + v8 * v8 + v9 * v9);
  if (v3 != 0.0) {
    double v3 = 1.0 / v3;
  }
  double v4 = v7 * v3;
  double v5 = v8 * v3;
  double v6 = v9 * v3;
  *uint64_t v2 = v7 * v3;
  v2[1] = v8 * v3;
  v2[2] = v9 * v3;
  result.z = v6;
  result.y = v5;
  result.x = v4;
  return result;
}

VisualIntelligence::S2Point __swiftcall S2Cell.getRawEdge(_:)(Swift::Int a1)
{
  uint64_t v4 = *(unsigned __int8 *)(v2 + 8);
  double v5 = *(void **)(v2 + 16);
  if (a1 == 2)
  {
    if (v5[2] < 2uLL)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v10 = v5[5];
    if (*(void *)(v10 + 16) < 2uLL)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    double v11 = *(double *)(v10 + 40);
    double v12 = 0.0;
    double v13 = -1.0;
    double v14 = v11;
    switch(*(unsigned char *)(v2 + 8))
    {
      case 0:
LABEL_19:
        double v14 = -v11;
        double v12 = 1.0;
        double v13 = 0.0;
        break;
      case 1:
LABEL_20:
        double v13 = -v11;
        double v12 = 1.0;
        goto LABEL_21;
      case 2:
LABEL_17:
        double v12 = -v11;
LABEL_21:
        double v14 = 0.0;
        break;
      case 3:
        break;
      case 4:
LABEL_16:
        double v14 = 1.0;
        double v13 = v11;
        break;
      default:
LABEL_18:
        double v13 = 0.0;
        double v14 = 1.0;
        double v12 = v11;
        break;
    }
LABEL_22:
    double v9 = -v14;
    double v7 = -v13;
    double v8 = -v12;
    *uint64_t v1 = v9;
    v1[1] = v7;
    v1[2] = v8;
    goto LABEL_32;
  }
  if (a1 == 1)
  {
    if (v5[2])
    {
      uint64_t v15 = v5[4];
      if (*(void *)(v15 + 16) >= 2uLL)
      {
        static S2Projections.getUNorm(face:u:)(v4, v1, *(double *)(v15 + 40));
        goto LABEL_32;
      }
      goto LABEL_28;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (a1)
  {
    if (!v5[2])
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v16 = v5[4];
    if (!*(void *)(v16 + 16))
    {
LABEL_30:
      __break(1u);
      JUMPOUT(0x1DCEC1194);
    }
    double v11 = *(double *)(v16 + 32);
    double v13 = -1.0;
    double v12 = 0.0;
    double v14 = v11;
    switch(*(unsigned char *)(v2 + 8))
    {
      case 0:
        goto LABEL_22;
      case 1:
        goto LABEL_16;
      case 2:
        goto LABEL_18;
      case 3:
        goto LABEL_19;
      case 4:
        goto LABEL_20;
      default:
        goto LABEL_17;
    }
    goto LABEL_22;
  }
  if (v5[2] < 2uLL)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = v5[5];
  if (!*(void *)(v6 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  static S2Projections.getVNorm(face:v:)(v4, v1, *(double *)(v6 + 32));
LABEL_32:
  result.z = v9;
  result.y = v8;
  result.x = v7;
  return result;
}

uint64_t S2Cell.subdivide()()
{
  unint64_t v1 = *v0;
  if (*v0) {
    return MEMORY[0x1E4FBC860];
  }
  char v2 = *((unsigned char *)v0 + 9);
  unint64_t v3 = *((unsigned __int8 *)v0 + 10);
  uint64_t v4 = (void *)v0[2];
  char v34 = *((unsigned char *)v0 + 8);
  S2Cell.centerUV.getter(v35);
  if (__OFSUB__(0, v1))
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  unint64_t v5 = -(uint64_t)v1 & v1;
  unint64_t v6 = v1 - v5;
  if (v1 < v5)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  unint64_t v7 = v6 + (v5 >> 2);
  if (__CFADD__(v6, v5 >> 2))
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (v3 <= 3)
  {
    int v33 = v2 + 1;
    if (v33 != (char)(v2 + 1)) {
      goto LABEL_64;
    }
    double v8 = v35[0];
    double v9 = v35[1];
    uint64_t v10 = 4;
    double v11 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03CC0);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1DD04EF60;
      *(void *)(v12 + 32) = &unk_1F3836D48;
      *(void *)(v12 + 40) = &unk_1F3836D18;
      if (qword_1EBE85AC8 != -1) {
        swift_once();
      }
      if (*((void *)off_1EBE85AB8 + 2) <= v3) {
        break;
      }
      uint64_t v13 = *((void *)off_1EBE85AB8 + v3 + 4);
      if ((unint64_t)(v10 - 4) >= *(void *)(v13 + 16)) {
        goto LABEL_46;
      }
      if (v4[2] < 2uLL) {
        goto LABEL_47;
      }
      if (!*(void *)(v12 + 16)) {
        goto LABEL_48;
      }
      unint64_t v14 = *(void *)(v13 + 8 * v10);
      uint64_t v15 = *(void **)(v12 + 32);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v12 + 32) = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v15 = sub_1DCEC1C64(v15);
      }
      unint64_t v17 = (v14 >> 1) & 1;
      BOOL v18 = (v14 & 2) == 0;
      if ((unint64_t)v18 >= v15[2]) {
        goto LABEL_49;
      }
      *(double *)&v15[v18 + 4] = v8;
      *(void *)(v12 + 32) = v15;
      uint64_t v19 = v4[4];
      if (v17 >= *(void *)(v19 + 16)) {
        goto LABEL_50;
      }
      if (!*(void *)(v12 + 16)) {
        goto LABEL_51;
      }
      uint64_t v20 = *(void *)(v19 + 8 * v17 + 32);
      char v21 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v12 + 32) = v15;
      if ((v21 & 1) == 0) {
        uint64_t v15 = sub_1DCEC1C64(v15);
      }
      if (v17 >= v15[2]) {
        goto LABEL_52;
      }
      v15[v17 + 4] = v20;
      *(void *)(v12 + 32) = v15;
      if (*(void *)(v12 + 16) < 2uLL) {
        goto LABEL_53;
      }
      double v22 = *(void **)(v12 + 40);
      char v23 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v12 + 40) = v22;
      if ((v23 & 1) == 0) {
        double v22 = sub_1DCEC1C64(v22);
      }
      unint64_t v24 = v14 & 1;
      if ((v24 ^ 1) >= v22[2]) {
        goto LABEL_54;
      }
      *(double *)&v22[(v24 ^ 1) + 4] = v9;
      *(void *)(v12 + 40) = v22;
      uint64_t v25 = v4[5];
      if (v24 >= *(void *)(v25 + 16)) {
        goto LABEL_55;
      }
      if (*(void *)(v12 + 16) < 2uLL) {
        goto LABEL_56;
      }
      uint64_t v26 = *(void *)(v25 + 8 * v24 + 32);
      char v27 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v12 + 40) = v22;
      if ((v27 & 1) == 0) {
        double v22 = sub_1DCEC1C64(v22);
      }
      if (v24 >= v22[2]) {
        goto LABEL_57;
      }
      v22[v24 + 4] = v26;
      *(void *)(v12 + 40) = v22;
      if (qword_1EBE85AB0 != -1) {
        swift_once();
      }
      if ((unint64_t)(v10 - 4) >= *(void *)(qword_1EBE9C878 + 16)) {
        goto LABEL_58;
      }
      unint64_t v28 = *(void *)(qword_1EBE9C878 + 8 * v10);
      if ((v28 & 0x8000000000000000) != 0 || v28 >= 0x100) {
        goto LABEL_65;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v11 = sub_1DCE9FFEC(0, v11[2] + 1, 1, v11);
      }
      unint64_t v30 = v11[2];
      unint64_t v29 = v11[3];
      if (v30 >= v29 >> 1) {
        double v11 = sub_1DCE9FFEC((void *)(v29 > 1), v30 + 1, 1, v11);
      }
      v11[2] = v30 + 1;
      double v31 = &v11[3 * v30];
      v31[4] = v7;
      *((unsigned char *)v31 + 40) = v34;
      *((unsigned char *)v31 + 41) = v33;
      *((unsigned char *)v31 + 42) = v3 ^ v28;
      v31[6] = v12;
      if (__OFSUB__(0, v7)) {
        goto LABEL_59;
      }
      v7 += 2 * (-(uint64_t)v7 & v7);
      if (++v10 == 8) {
        return (uint64_t)v11;
      }
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

double S2Cell.centerUV.getter@<D0>(double *a1@<X8>)
{
  unint64_t v3 = *v1;
  unsigned int v4 = *((unsigned __int8 *)v1 + 9);
  unint64_t v29 = 0;
  unint64_t v30 = 0;
  uint64_t v5 = sub_1DCEB27B4(&v30, &v29, 7, (v3 >> 61) & 1);
  uint64_t v6 = sub_1DCEB27B4(&v30, &v29, 6, v5);
  uint64_t v7 = sub_1DCEB27B4(&v30, &v29, 5, v6);
  uint64_t v8 = sub_1DCEB27B4(&v30, &v29, 4, v7);
  uint64_t v9 = sub_1DCEB27B4(&v30, &v29, 3, v8);
  uint64_t v10 = sub_1DCEB27B4(&v30, &v29, 2, v9);
  uint64_t v11 = sub_1DCEB27B4(&v30, &v29, 1, v10);
  sub_1DCEB27B4(&v30, &v29, 0, v11);
  unint64_t v12 = 0;
  if (v4 - 95 >= 0x7F)
  {
    if ((char)v4 >= 31) {
      goto LABEL_24;
    }
    if ((char)v4 <= -34) {
      goto LABEL_26;
    }
    unint64_t v12 = 1 << (30 - v4);
  }
  while (1)
  {
    uint64_t v13 = -(uint64_t)v12;
    if (__OFSUB__(0, v12))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    unint64_t v14 = v30 & v13;
    if ((uint64_t)((v30 & v13) + 0x4000000000000000) < 0) {
      goto LABEL_18;
    }
    BOOL v15 = __OFADD__(v12, 2 * v14);
    unint64_t v16 = v12 + 2 * v14;
    if (v15) {
      goto LABEL_19;
    }
    BOOL v15 = __OFADD__(v16, -1073741824);
    uint64_t v17 = v16 - 0x40000000;
    if (v15) {
      goto LABEL_20;
    }
    double v18 = (double)v17 * 9.31322575e-10;
    BOOL v19 = v18 < 0.0;
    double v20 = 1.0 - (1.0 - v18) * (1.0 - v18);
    double v21 = (v18 + 1.0) * (v18 + 1.0) + -1.0;
    if (v19) {
      double v21 = v20;
    }
    unint64_t v22 = v29 & v13;
    if ((uint64_t)(v22 + 0x4000000000000000) < 0) {
      goto LABEL_21;
    }
    BOOL v15 = __OFADD__(v12, 2 * v22);
    unint64_t v23 = v12 + 2 * v22;
    if (v15) {
      goto LABEL_22;
    }
    BOOL v15 = __OFADD__(v23, -1073741824);
    uint64_t v24 = v23 - 0x40000000;
    if (!v15) {
      break;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    if (v4 >= 0x5E) {
LABEL_26:
    }
      unint64_t v12 = 0;
    else {
      unint64_t v12 = 1uLL >> (v4 + 34);
    }
  }
  double v25 = (double)v24 * 9.31322575e-10;
  BOOL v19 = v25 < 0.0;
  double v26 = 1.0 - (1.0 - v25) * (1.0 - v25);
  double v27 = (v25 + 1.0) * (v25 + 1.0) + -1.0;
  if (v19) {
    double v27 = v26;
  }
  double result = v21 * 0.333333333;
  *a1 = result;
  a1[1] = v27 * 0.333333333;
  return result;
}

uint64_t S2Cell.rawCenter.getter@<X0>(double *a1@<X8>)
{
  return S2CellId.rawPoint.getter(a1);
}

double S2Cell.averageArea.getter()
{
  double v1 = 1.0 - (double)*(char *)(v0 + 9);
  return scalb(0.523598776, v1 + v1);
}

void sub_1DCEC1938()
{
  qword_1EAB03D60 = 0x3FE3B2028082E8CFLL;
}

double sub_1DCEC1954(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = *(void **)(v2 + 16);
  unint64_t v4 = v3[2];
  if (!v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = v3[4];
  if (*(void *)(v5 + 16) <= a1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v4 < 2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = v3[5];
  if (*(void *)(v6 + 16) <= a2)
  {
LABEL_19:
    __break(1u);
    JUMPOUT(0x1DCEC1A44);
  }
  double v7 = *(double *)(v5 + 8 * a1 + 32);
  uint64_t v8 = v6 + 8 * a2;
  double v9 = *(double *)(v8 + 32);
  double v10 = 1.0;
  switch(*(unsigned char *)(v2 + 8))
  {
    case 0:
      return atan2(v9, sqrt(v10 * v10 + v7 * v7));
    case 1:
      double v10 = -v7;
      double v7 = 1.0;
      break;
    case 2:
      double v10 = -v7;
      double v7 = -v9;
      double v9 = 1.0;
      break;
    case 3:
      double v11 = -v9;
      double v9 = -v7;
      double v10 = -1.0;
      double v7 = v11;
      break;
    case 4:
      double v10 = *(double *)(v8 + 32);
      double v9 = -v7;
      double v7 = -1.0;
      break;
    default:
      double v10 = *(double *)(v8 + 32);
      double v9 = -1.0;
      break;
  }
  return atan2(v9, sqrt(v10 * v10 + v7 * v7));
}

unint64_t *S2Cell.contains(cell:)(unint64_t *result)
{
  uint64_t v2 = *v1;
  if (__OFSUB__(0, *v1))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = -*v1 & v2;
  BOOL v4 = __OFSUB__(v3, 1);
  uint64_t v5 = v3 - 1;
  if (v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (__OFSUB__(v2, v5))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*result < v2 - v5) {
    return 0;
  }
  BOOL v4 = __OFADD__(v2, v5);
  unint64_t v6 = v2 + v5;
  if (!v4) {
    return (unint64_t *)(*result <= v6);
  }
LABEL_11:
  __break(1u);
  return result;
}

unint64_t S2Cell.mayIntersect(cell:)(void *a1)
{
  uint64_t v2 = *v1;
  v4[0] = *a1;
  v4[1] = v2;
  return (unint64_t)S2CellId.intersects(with:)(v4) & 1;
}

unint64_t sub_1DCEC1AFC(void *a1)
{
  uint64_t v2 = *v1;
  v4[0] = *a1;
  v4[1] = v2;
  return (unint64_t)S2CellId.intersects(with:)(v4) & 1;
}

BOOL sub_1DCEC1B3C(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)
      && *(unsigned __int8 *)(a1 + 9) == *(unsigned __int8 *)(a2 + 9)
      && *(unsigned __int8 *)(a1 + 10) == *(unsigned __int8 *)(a2 + 10)
      && *(void *)a1 == *(void *)a2;
}

BOOL == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)
      && *(unsigned __int8 *)(a1 + 9) == *(unsigned __int8 *)(a2 + 9)
      && *(unsigned __int8 *)(a1 + 10) == *(unsigned __int8 *)(a2 + 10)
      && *(void *)a1 == *(void *)a2;
}

void *sub_1DCEC1BC4(void *a1)
{
  return sub_1DCE9D66C(0, a1[2], 0, a1);
}

void *sub_1DCEC1BD8(void *a1)
{
  return sub_1DCE9D680(0, a1[2], 0, a1);
}

uint64_t sub_1DCEC1BEC(unint64_t a1)
{
  return sub_1DCE9D7A0(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1DCEC1C00(void *a1)
{
  return sub_1DCE9D8D0(0, a1[2], 0, a1);
}

void *sub_1DCEC1C14(void *a1)
{
  return sub_1DCE9E068(0, a1[2], 0, a1);
}

uint64_t sub_1DCEC1C28(unint64_t a1)
{
  return sub_1DCE9E890(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1DCEC1C3C(void *a1)
{
  return sub_1DCE9EA98(0, a1[2], 0, a1);
}

char *sub_1DCEC1C50(uint64_t a1)
{
  return sub_1DCE9D9E0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_1DCEC1C64(void *a1)
{
  return sub_1DCE9EF0C(0, a1[2], 0, a1);
}

void *sub_1DCEC1C78(void *a1)
{
  return sub_1DCE9F01C(0, a1[2], 0, a1);
}

void *sub_1DCEC1C8C(void *a1)
{
  return sub_1DCE9F160(0, a1[2], 0, a1);
}

void *sub_1DCEC1CA4(void *a1)
{
  return sub_1DCE9FE74(0, a1[2], 0, a1);
}

void *sub_1DCEC1CB8(void *a1)
{
  return sub_1DCE9FF84(0, a1[2], 0, a1);
}

void *sub_1DCEC1CCC(void *a1)
{
  return sub_1DCE9F9B4(0, a1[2], 0, a1);
}

void *sub_1DCEC1CE0(void *a1)
{
  return sub_1DCEA0470(0, a1[2], 0, a1);
}

void sub_1DCEC1CF4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1E01AE8A0);
}

uint64_t sub_1DCEC1D74(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for S2Cell(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for S2Cell(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for S2Cell()
{
  return &type metadata for S2Cell;
}

uint64_t sub_1DCEC1E74(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD56CC8(a1, v1 + OBJC_IVAR____TtC18VisualIntelligence25UnifiedModelPostProcessor_modelInfo);
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for MLModelInfo(0) + 36));
  if (*(void *)(v7 + 16) && (uint64_t v8 = sub_1DCEAD428(9), (v9 & 1) != 0))
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void *)(v7 + 56);
    uint64_t v12 = sub_1DD046478();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, v11 + *(void *)(v13 + 72) * v10, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  }
  else
  {
    uint64_t v14 = sub_1DD046478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
  }
  type metadata accessor for FileMapper();
  swift_allocObject();
  BOOL v15 = sub_1DCEC56C0((uint64_t)v6);
  sub_1DCD59AB4(a1);
  *(void *)(v2 + 16) = v15;
  return v2;
}

uint64_t sub_1DCEC2054@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  v200 = a4;
  uint64_t v188 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v188);
  uint64_t v185 = (uint64_t)&v178 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v194 = (uint64_t)&v178 - v9;
  uint64_t v207 = sub_1DD048068();
  unint64_t v209 = *(void *)(v207 - 8);
  MEMORY[0x1F4188790](v207);
  uint64_t v208 = (uint64_t)&v178 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v178 - v12;
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v178 - v15;
  MEMORY[0x1F4188790](v17);
  BOOL v19 = (char *)&v178 - v18;
  MEMORY[0x1F4188790](v20);
  unint64_t v22 = (char *)&v178 - v21;
  uint64_t v23 = *a3;
  uint64_t v24 = a3[1];
  uint64_t v25 = a3[2];
  uint64_t v26 = a3[3];
  uint64_t v27 = a1[3];
  uint64_t v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  uint64_t v29 = v210;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
  if (v29) {
    return result;
  }
  uint64_t v31 = v209;
  v189 = v22;
  v186 = v19;
  v203 = v16;
  v198 = v13;
  uint64_t v191 = 0;
  uint64_t v201 = result;
  uint64_t v32 = *(void *)(result + 24);
  if (*(void *)(v32 + 16) < 2uLL)
  {
    uint64_t v164 = v208;
    sub_1DCDB40EC(v208);
    v165 = sub_1DD048048();
    os_log_type_t v166 = sub_1DD048858();
    BOOL v167 = os_log_type_enabled(v165, v166);
    uint64_t v168 = v207;
    if (v167)
    {
      v169 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v169 = 0;
      _os_log_impl(&dword_1DCCF9000, v165, v166, "Unified model expected at least 1 outputs", v169, 2u);
      MEMORY[0x1E01B07E0](v169, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v164, v168);
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v170 = 0xD00000000000001BLL;
    *(void *)(v170 + 8) = 0x80000001DD06D4A0;
    *(unsigned char *)(v170 + 16) = 4;
    swift_willThrow();
    return swift_release();
  }
  uint64_t v33 = *(void *)(v32 + 64);
  uint64_t v195 = v32 + 64;
  uint64_t v34 = 1 << *(unsigned char *)(v32 + 32);
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  else {
    uint64_t v35 = -1;
  }
  unint64_t v36 = v35 & v33;
  uint64_t v184 = v187 + OBJC_IVAR____TtC18VisualIntelligence25UnifiedModelPostProcessor_modelInfo;
  int64_t v196 = (unint64_t)(v34 + 63) >> 6;
  uint64_t v210 = a2 + 64;
  v206 = (void (**)(char *, uint64_t, uint64_t))(v209 + 16);
  v202 = (void (**)(char *, uint64_t))(v209 + 8);
  v190 = &v214;
  swift_bridgeObjectRetain();
  int64_t v37 = 0;
  unint64_t v183 = (unint64_t)"coarseCategoryDistribution";
  unint64_t v180 = 0x80000001DD067880;
  *(void *)&long long v38 = 136315138;
  long long v192 = v38;
  uint64_t v182 = MEMORY[0x1E4FBC840] + 8;
  v178 = "Expecting at least 1 output";
  unint64_t v179 = 0x80000001DD06D4C0;
  v181 = (void *)MEMORY[0x1E4FBC860];
  v193 = (void *)MEMORY[0x1E4FBC860];
  uint64_t result = v201;
  uint64_t v39 = v207;
  uint64_t v199 = v32;
  while (1)
  {
    double v40 = v200;
LABEL_10:
    if (v36)
    {
      unint64_t v41 = __clz(__rbit64(v36));
      uint64_t v42 = (v36 - 1) & v36;
      unint64_t v43 = v41 | (v37 << 6);
    }
    else
    {
      BOOL v44 = __OFADD__(v37++, 1);
      if (v44) {
        goto LABEL_198;
      }
      if (v37 >= v196) {
        goto LABEL_187;
      }
      unint64_t v45 = *(void *)(v195 + 8 * v37);
      if (!v45)
      {
        int64_t v46 = v37 + 1;
        if (v37 + 1 >= v196) {
          goto LABEL_187;
        }
        unint64_t v45 = *(void *)(v195 + 8 * v46);
        if (!v45)
        {
          int64_t v46 = v37 + 2;
          if (v37 + 2 >= v196) {
            goto LABEL_187;
          }
          unint64_t v45 = *(void *)(v195 + 8 * v46);
          if (!v45)
          {
            int64_t v46 = v37 + 3;
            if (v37 + 3 >= v196) {
              goto LABEL_187;
            }
            unint64_t v45 = *(void *)(v195 + 8 * v46);
            if (!v45)
            {
              int64_t v46 = v37 + 4;
              if (v37 + 4 >= v196) {
                goto LABEL_187;
              }
              unint64_t v45 = *(void *)(v195 + 8 * v46);
              if (!v45)
              {
                int64_t v46 = v37 + 5;
                if (v37 + 5 >= v196) {
                  goto LABEL_187;
                }
                unint64_t v45 = *(void *)(v195 + 8 * v46);
                if (!v45)
                {
                  while (1)
                  {
                    int64_t v37 = v46 + 1;
                    if (__OFADD__(v46, 1))
                    {
                      __break(1u);
                      return result;
                    }
                    if (v37 >= v196) {
                      break;
                    }
                    unint64_t v45 = *(void *)(v195 + 8 * v37);
                    ++v46;
                    if (v45) {
                      goto LABEL_26;
                    }
                  }
LABEL_187:
                  swift_release();
                  uint64_t result = swift_release();
                  *double v40 = v23;
                  v40[1] = v24;
                  v40[2] = v25;
                  v40[3] = v26;
                  v171 = v181;
                  v40[4] = v193;
                  v40[5] = v171;
                  return result;
                }
              }
            }
          }
        }
        int64_t v37 = v46;
      }
LABEL_26:
      uint64_t v42 = (v45 - 1) & v45;
      unint64_t v43 = __clz(__rbit64(v45)) + (v37 << 6);
    }
    unint64_t v204 = v42;
    int64_t v205 = v37;
    unint64_t v47 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v43);
    uint64_t v48 = v47[1];
    uint64_t v208 = *v47;
    unint64_t v209 = v48;
    if (a2) {
      break;
    }
    swift_bridgeObjectRetain();
LABEL_112:
    v89 = v189;
    if (qword_1EBE87190 != -1) {
      swift_once();
    }
    if (byte_1EBE87188 != 1) {
      goto LABEL_128;
    }
    id v90 = objc_msgSend(self, sel_mainBundle, v178);
    id v91 = objc_msgSend(v90, sel_bundleIdentifier);

    if (v91)
    {
      uint64_t v92 = sub_1DD048408();
      uint64_t v94 = v93;

      if (v92 == 0xD00000000000002BLL && v94 == v180)
      {
        swift_bridgeObjectRelease();
LABEL_120:
        v96 = (uint64_t *)&off_1EAB02A48;
        if (qword_1EAB01C28 != -1)
        {
          swift_once();
          v96 = (uint64_t *)&off_1EAB02A48;
        }
        goto LABEL_124;
      }
      char v95 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v95) {
        goto LABEL_120;
      }
    }
    v96 = &qword_1EBE871E8;
    if (qword_1EBE871A0 != -1)
    {
      swift_once();
      v96 = &qword_1EBE871E8;
    }
LABEL_124:
    v97 = *(void **)(*v96 + 32);
    swift_retain();
    v98 = (void *)sub_1DD0483D8();
    LODWORD(v97) = objc_msgSend(v97, sel_BOOLForKey_, v98);
    swift_release();

    v89 = v189;
    if (v97)
    {
      if (qword_1EAB01C80 != -1) {
        swift_once();
      }
      uint64_t v99 = v39;
      v100 = qword_1EAB02B70;
      goto LABEL_131;
    }
LABEL_128:
    if (qword_1EBE871C8 != -1) {
      swift_once();
    }
    uint64_t v99 = v39;
    v100 = qword_1EBE871A8;
LABEL_131:
    uint64_t v101 = __swift_project_value_buffer(v99, (uint64_t)v100);
    v102 = *v206;
    (*v206)(v89, v101, v39);
    if ((byte_1EBE87188 & 1) == 0) {
      goto LABEL_143;
    }
    id v103 = objc_msgSend(self, sel_mainBundle);
    id v104 = objc_msgSend(v103, sel_bundleIdentifier);

    if (v104)
    {
      uint64_t v105 = sub_1DD048408();
      uint64_t v107 = v106;

      if (v105 == 0xD00000000000002BLL && v107 == (v183 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
LABEL_137:
        v109 = (uint64_t *)&off_1EAB02A48;
        if (qword_1EAB01C28 != -1)
        {
          swift_once();
          v109 = (uint64_t *)&off_1EAB02A48;
        }
        goto LABEL_141;
      }
      char v108 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v108) {
        goto LABEL_137;
      }
    }
    v109 = &qword_1EBE871E8;
    if (qword_1EBE871A0 != -1)
    {
      swift_once();
      v109 = &qword_1EBE871E8;
    }
LABEL_141:
    v110 = *(void **)(*v109 + 32);
    swift_retain();
    v111 = (void *)sub_1DD0483D8();
    LODWORD(v110) = objc_msgSend(v110, sel_BOOLForKey_, v111);
    swift_release();

    v89 = v189;
    if (!v110)
    {
LABEL_143:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v114 = __swift_project_value_buffer(v39, (uint64_t)qword_1EBE871A8);
      v112 = v186;
      v113 = v186;
      goto LABEL_146;
    }
    v112 = v186;
    v113 = v186;
    uint64_t v114 = (uint64_t)v189;
LABEL_146:
    v102(v113, v114, v39);
    uint64_t v115 = v39;
    v116 = *v202;
    (*v202)(v89, v39);
    unint64_t v117 = v209;
    swift_bridgeObjectRetain_n();
    v118 = sub_1DD048048();
    os_log_type_t v119 = sub_1DD048848();
    if (os_log_type_enabled(v118, v119))
    {
      uint64_t v120 = swift_slowAlloc();
      uint64_t v121 = swift_slowAlloc();
      uint64_t v211 = v121;
      *(_DWORD *)uint64_t v120 = v192;
      swift_bridgeObjectRetain();
      v122 = v116;
      uint64_t v123 = v208;
      *(void *)(v120 + 4) = sub_1DCED7FA0(v208, v117, &v211);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v118, v119, "Process result key %s", (uint8_t *)v120, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v121, -1, -1);
      MEMORY[0x1E01B07E0](v120, -1, -1);

      v122(v112, v207);
      uint64_t v124 = v191;
      uint64_t v125 = v194;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v116(v112, v115);
      uint64_t v124 = v191;
      uint64_t v125 = v194;
      uint64_t v123 = v208;
    }
    uint64_t v126 = v188;
    if (v123 == 0x6E69646465626D65 && v209 == 0xE900000000000067 || (sub_1DD048FA8() & 1) != 0)
    {
      sub_1DCD56CC8(v184, v125);
      if (a2 && *(void *)(a2 + 16))
      {
        uint64_t v127 = v209;
        swift_bridgeObjectRetain();
        sub_1DCEAD1A4(v208, v127);
        if (v128) {
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v129 = *(void *)(v201 + 24);
      if (!*(void *)(v129 + 16)) {
        goto LABEL_190;
      }
      uint64_t v130 = v209;
      swift_bridgeObjectRetain();
      unint64_t v131 = sub_1DCEAD1A4(v208, v130);
      if ((v132 & 1) == 0) {
        goto LABEL_189;
      }
      id v133 = *(id *)(*(void *)(v129 + 56) + 8 * v131);
      swift_bridgeObjectRelease();
      v134 = (void *)sub_1DCFE1F40(v133);
      uint64_t v191 = v124;
      if (v124)
      {
        swift_bridgeObjectRelease();
        swift_release();

        goto LABEL_192;
      }
      v135 = v134;
      uint64_t v136 = sub_1DCFE2178(v134);
      uint64_t v137 = v126;
      uint64_t v138 = v136;
      uint64_t v31 = v194;
      v139 = (uint64_t *)(v194 + *(int *)(v137 + 24));
      unint64_t v140 = v139[1];
      uint64_t v211 = *v139;
      unint64_t v212 = v140;
      swift_bridgeObjectRetain();
      sub_1DD048548();

      uint64_t v141 = v211;
      unint64_t v142 = v212;
      sub_1DCD59AB4(v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v193 = sub_1DCE9E590(0, v193[2] + 1, 1, v193);
      }
      uint64_t v39 = v207;
      unint64_t v144 = v193[2];
      unint64_t v143 = v193[3];
      uint64_t result = v201;
      unint64_t v36 = v204;
      int64_t v37 = v205;
      if (v144 >= v143 >> 1)
      {
        v162 = sub_1DCE9E590((void *)(v143 > 1), v144 + 1, 1, v193);
        unint64_t v36 = v204;
        int64_t v37 = v205;
        v193 = v162;
        uint64_t result = v201;
      }
      v145 = v193;
      v193[2] = v144 + 1;
      v146 = &v145[3 * v144];
      v146[4] = v138;
      v146[5] = v141;
      v146[6] = v142;
      uint64_t v32 = v199;
    }
    else
    {
      if ((v208 != 0xD000000000000010 || v209 != v179)
        && (sub_1DD048FA8() & 1) == 0
        && (v208 != 0x7373616C63 || v209 != 0xE500000000000000)
        && (sub_1DD048FA8() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v211 = 0;
        unint64_t v212 = 0xE000000000000000;
        sub_1DD048B98();
        swift_bridgeObjectRelease();
        uint64_t v211 = 0x7463657078656E75;
        unint64_t v212 = 0xEF2079656B206465;
        sub_1DD048548();
        swift_bridgeObjectRelease();
        uint64_t v175 = v211;
        unint64_t v176 = v212;
        sub_1DCD3A548();
        swift_allocError();
        *(void *)uint64_t v177 = v175;
        *(void *)(v177 + 8) = v176;
        *(unsigned char *)(v177 + 16) = 4;
        swift_willThrow();
        swift_release();
        return swift_release();
      }
      sub_1DCD56CC8(v184, v185);
      uint64_t v147 = v187;
      if (a2 && *(void *)(a2 + 16))
      {
        uint64_t v148 = v209;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1DCEAD1A4(v208, v148);
        if (v149) {
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        uint64_t v147 = v187;
      }
      else
      {
        swift_retain();
        uint64_t v148 = v209;
      }
      uint64_t v31 = v185;
      uint64_t v150 = v191;
      uint64_t v151 = sub_1DCD7F1CC(v201, v208, v148, v185, 2, 0, (uint64_t (*)(uint64_t, id, uint64_t))sub_1DCEC3BFC, v147);
      if (v150) {
        goto LABEL_199;
      }
      uint64_t v154 = v151;
      uint64_t v155 = v152;
      uint64_t v156 = v153;
      sub_1DCD59AB4(v31);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v191 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        v181 = sub_1DCE9E6B8(0, v181[2] + 1, 1, v181);
      }
      unint64_t v36 = v204;
      int64_t v37 = v205;
      unint64_t v159 = v181[2];
      unint64_t v158 = v181[3];
      uint64_t result = v201;
      if (v159 >= v158 >> 1)
      {
        v163 = sub_1DCE9E6B8((void *)(v158 > 1), v159 + 1, 1, v181);
        unint64_t v36 = v204;
        int64_t v37 = v205;
        v181 = v163;
        uint64_t result = v201;
      }
      v160 = v181;
      v181[2] = v159 + 1;
      v161 = &v160[3 * v159];
      v161[4] = v154;
      v161[5] = v155;
      v161[6] = v156;
      uint64_t v32 = v199;
      uint64_t v39 = v207;
    }
  }
  uint64_t v49 = 1 << *(unsigned char *)(a2 + 32);
  if (v49 < 64) {
    uint64_t v50 = ~(-1 << v49);
  }
  else {
    uint64_t v50 = -1;
  }
  uint64_t v31 = v50 & *(void *)(a2 + 64);
  int64_t v51 = (unint64_t)(v49 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  int64_t v52 = 0;
  v53 = (void *)MEMORY[0x1E4FBC860];
  if (v31)
  {
LABEL_32:
    unint64_t v54 = __clz(__rbit64(v31));
    v31 &= v31 - 1;
    unint64_t v55 = v54 | (v52 << 6);
    goto LABEL_48;
  }
  while (2)
  {
    BOOL v44 = __OFADD__(v52++, 1);
    if (v44)
    {
      __break(1u);
LABEL_189:
      swift_bridgeObjectRelease();
LABEL_190:
      uint64_t v211 = 0;
      unint64_t v212 = 0xE000000000000000;
      sub_1DD048B98();
      swift_bridgeObjectRelease();
      uint64_t v211 = 0xD000000000000016;
      unint64_t v212 = 0x80000001DD06D4E0;
      sub_1DD048548();
      uint64_t v172 = v211;
      unint64_t v173 = v212;
      sub_1DCD3A548();
      swift_allocError();
      *(void *)uint64_t v174 = v172;
      *(void *)(v174 + 8) = v173;
      *(unsigned char *)(v174 + 16) = 4;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_192:
      swift_bridgeObjectRelease();
      sub_1DCD59AB4(v194);
      goto LABEL_193;
    }
    if (v52 >= v51) {
      goto LABEL_58;
    }
    unint64_t v56 = *(void *)(v210 + 8 * v52);
    if (v56)
    {
LABEL_47:
      uint64_t v31 = (v56 - 1) & v56;
      unint64_t v55 = __clz(__rbit64(v56)) + (v52 << 6);
LABEL_48:
      v58 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v55);
      uint64_t v60 = *v58;
      uint64_t v59 = v58[1];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v53 = sub_1DCE9E328(0, v53[2] + 1, 1, v53);
      }
      unint64_t v62 = v53[2];
      unint64_t v61 = v53[3];
      if (v62 >= v61 >> 1) {
        v53 = sub_1DCE9E328((void *)(v61 > 1), v62 + 1, 1, v53);
      }
      v53[2] = v62 + 1;
      v63 = &v53[2 * v62];
      v63[4] = v60;
      v63[5] = v59;
      if (v31) {
        goto LABEL_32;
      }
      continue;
    }
    break;
  }
  int64_t v57 = v52 + 1;
  if (v52 + 1 >= v51) {
    goto LABEL_58;
  }
  unint64_t v56 = *(void *)(v210 + 8 * v57);
  if (v56) {
    goto LABEL_46;
  }
  int64_t v57 = v52 + 2;
  if (v52 + 2 >= v51) {
    goto LABEL_58;
  }
  unint64_t v56 = *(void *)(v210 + 8 * v57);
  if (v56) {
    goto LABEL_46;
  }
  int64_t v57 = v52 + 3;
  if (v52 + 3 >= v51) {
    goto LABEL_58;
  }
  unint64_t v56 = *(void *)(v210 + 8 * v57);
  if (v56) {
    goto LABEL_46;
  }
  int64_t v57 = v52 + 4;
  if (v52 + 4 >= v51) {
    goto LABEL_58;
  }
  unint64_t v56 = *(void *)(v210 + 8 * v57);
  if (v56) {
    goto LABEL_46;
  }
  int64_t v57 = v52 + 5;
  if (v52 + 5 >= v51)
  {
LABEL_58:
    uint64_t v39 = v207;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v64 = v53[2];
    if (v64)
    {
      if (v53[4] == v208 && v53[5] == v209 || (sub_1DD048FA8() & 1) != 0)
      {
LABEL_110:
        swift_bridgeObjectRelease();
        goto LABEL_112;
      }
      if (v64 != 1)
      {
        if (v53[6] == v208 && v53[7] == v209 || (sub_1DD048FA8() & 1) != 0) {
          goto LABEL_110;
        }
        if (v64 != 2)
        {
          v85 = v53 + 9;
          uint64_t v86 = 2;
          while (1)
          {
            uint64_t v87 = v86 + 1;
            if (__OFADD__(v86, 1)) {
              break;
            }
            BOOL v88 = *(v85 - 1) == v208 && *v85 == v209;
            if (v88 || (sub_1DD048FA8() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              uint64_t v39 = v207;
              goto LABEL_112;
            }
            v85 += 2;
            ++v86;
            if (v87 == v64)
            {
              swift_bridgeObjectRelease();
              uint64_t v39 = v207;
              goto LABEL_68;
            }
          }
          __break(1u);
          goto LABEL_197;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_68:
    v65 = v203;
    if (qword_1EBE87190 != -1) {
      swift_once();
    }
    if (byte_1EBE87188 != 1) {
      goto LABEL_80;
    }
    if (sub_1DCDE82EC())
    {
      v66 = (uint64_t *)&off_1EAB02A48;
      if (qword_1EAB01C28 != -1)
      {
        swift_once();
        v66 = (uint64_t *)&off_1EAB02A48;
      }
    }
    else
    {
      v66 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        v66 = &qword_1EBE871E8;
      }
    }
    v67 = *(void **)(*v66 + 32);
    swift_retain();
    v68 = (void *)sub_1DD0483D8();
    LODWORD(v67) = objc_msgSend(v67, sel_BOOLForKey_, v68);
    swift_release();

    v65 = v203;
    if (v67)
    {
      if (qword_1EAB01C80 != -1) {
        swift_once();
      }
      uint64_t v69 = v39;
      v70 = qword_1EAB02B70;
    }
    else
    {
LABEL_80:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v69 = v39;
      v70 = qword_1EBE871A8;
    }
    uint64_t v71 = __swift_project_value_buffer(v69, (uint64_t)v70);
    v72 = *v206;
    (*v206)(v65, v71, v39);
    if ((byte_1EBE87188 & 1) == 0) {
      goto LABEL_91;
    }
    if (sub_1DCDE82EC())
    {
      v73 = (uint64_t *)&off_1EAB02A48;
      if (qword_1EAB01C28 != -1)
      {
        swift_once();
        v73 = (uint64_t *)&off_1EAB02A48;
      }
    }
    else
    {
      v73 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        v73 = &qword_1EBE871E8;
      }
    }
    v74 = *(void **)(*v73 + 32);
    swift_retain();
    v75 = (void *)sub_1DD0483D8();
    LODWORD(v74) = objc_msgSend(v74, sel_BOOLForKey_, v75);
    swift_release();

    v65 = v203;
    if (v74)
    {
      v76 = v198;
      v77 = v198;
      uint64_t v78 = (uint64_t)v203;
    }
    else
    {
LABEL_91:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v78 = __swift_project_value_buffer(v39, (uint64_t)qword_1EBE871A8);
      v76 = v198;
      v77 = v198;
    }
    v72(v77, v78, v39);
    v79 = *v202;
    (*v202)(v65, v39);
    uint64_t v31 = v209;
    swift_bridgeObjectRetain();
    v80 = sub_1DD048048();
    os_log_type_t v81 = sub_1DD048848();
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v82 = swift_slowAlloc();
      v197 = v79;
      v83 = (uint8_t *)v82;
      uint64_t v84 = swift_slowAlloc();
      uint64_t v211 = v84;
      *(_DWORD *)v83 = v192;
      swift_bridgeObjectRetain();
      uint64_t v213 = sub_1DCED7FA0(v208, v31, &v211);
      uint64_t v39 = v207;
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v80, v81, "Skip result key %s", v83, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v84, -1, -1);
      MEMORY[0x1E01B07E0](v83, -1, -1);

      v197(v76, v39);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v79(v76, v39);
    }
    double v40 = v200;
    uint64_t result = v201;
    uint64_t v32 = v199;
    unint64_t v36 = v204;
    int64_t v37 = v205;
    goto LABEL_10;
  }
  unint64_t v56 = *(void *)(v210 + 8 * v57);
  if (v56)
  {
LABEL_46:
    int64_t v52 = v57;
    goto LABEL_47;
  }
  while (1)
  {
    int64_t v52 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      break;
    }
    if (v52 >= v51) {
      goto LABEL_58;
    }
    unint64_t v56 = *(void *)(v210 + 8 * v52);
    ++v57;
    if (v56) {
      goto LABEL_47;
    }
  }
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1DCD59AB4(v31);
  swift_release();
LABEL_193:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_1DCEC3A58(unint64_t result, uint64_t a2, uint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > result)
  {
    return (unint64_t)sub_1DCEC589C(*(void *)(a3 + 8 * result + 32));
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCEC3A9C()
{
  swift_release();
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence25UnifiedModelPostProcessor_modelInfo);
  return swift_deallocClassInstance();
}

uint64_t sub_1DCEC3B08()
{
  return type metadata accessor for UnifiedModelPostProcessor();
}

uint64_t type metadata accessor for UnifiedModelPostProcessor()
{
  uint64_t result = qword_1EBE86F28;
  if (!qword_1EBE86F28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCEC3B5C()
{
  uint64_t result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1DCEC3BFC(unint64_t result, uint64_t a2, uint64_t a3)
{
  return sub_1DCEC3A58(result, a2, a3);
}

uint64_t sub_1DCEC3C04(char a1)
{
  sub_1DCD43238();
  if (!swift_dynamicCastMetatype()) {
    return sub_1DD048498();
  }
  char v8 = a1;
  sub_1DCDE4508();
  uint64_t v2 = sub_1DD048F88();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
  }
  else
  {
    uint64_t v3 = (void *)swift_allocError();
    *uint64_t v5 = v8;
  }
  unint64_t v6 = (void *)sub_1DD046368();

  uint64_t v4 = sub_1DCDC4434();
  return v4;
}

uint64_t sub_1DCEC3CF0()
{
  uint64_t v1 = sub_1DD0479B8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v31 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v31 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v31 - v12;
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v31 - v15;
  sub_1DCD43238();
  uint64_t v17 = swift_dynamicCastMetatype();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  uint64_t v32 = v0;
  uint64_t v19 = v0;
  uint64_t v20 = v18;
  v18(v16, v19, v1);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v16, v1);
    uint64_t v21 = v32;
    uint64_t v22 = v2;
LABEL_5:
    v20(v10, v21, v1);
    sub_1DCEC42C0();
    uint64_t v23 = sub_1DD048F88();
    if (v23)
    {
      uint64_t v24 = (void *)v23;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v1);
    }
    else
    {
      uint64_t v24 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v25, v10, v1);
    }
    uint64_t v26 = (void *)sub_1DD046368();

    uint64_t v27 = sub_1DCDC4434();
    return v27;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v13, v16, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02D48);
  uint64_t v22 = v2;
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    uint64_t v21 = v32;
    goto LABEL_5;
  }
  uint64_t v29 = v20;
  uint64_t v30 = v32;
  v29(v7, v32, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02D58);
  if (swift_dynamicCast())
  {
    sub_1DCD3A4DC(v34, (uint64_t)v33);
    __swift_project_boxed_opaque_existential_1(v33, v33[3]);
    uint64_t v27 = sub_1DD048FB8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  else
  {
    v29(v4, v30, v1);
    uint64_t v27 = sub_1DD048498();
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v1);
  return v27;
}

uint64_t type metadata accessor for AvailabilityChecker()
{
  return self;
}

uint64_t sub_1DCEC4098()
{
  return sub_1DCEC40B0();
}

uint64_t sub_1DCEC40B0()
{
  uint64_t v0 = sub_1DD048068();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = VIIsSettingsEnabledForLookup();
  if ((result & 1) == 0)
  {
    sub_1DCDB40EC((uint64_t)v3);
    uint64_t v5 = sub_1DD048048();
    os_log_type_t v6 = sub_1DD048858();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v13 = v8;
      *(_DWORD *)uint64_t v7 = 136446210;
      v12[0] = v7 + 4;
      uint64_t v9 = sub_1DCEC3C04(0);
      v12[1] = sub_1DCED7FA0(v9, v10, &v13);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v5, v6, "%{public}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v8, -1, -1);
      MEMORY[0x1E01B07E0](v7, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1DCDE4508();
    swift_allocError();
    *uint64_t v11 = 0;
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1DCEC42C0()
{
  unint64_t result = qword_1EAB039D8;
  if (!qword_1EAB039D8)
  {
    sub_1DD0479B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB039D8);
  }
  return result;
}

uint64_t type metadata accessor for VIVNImageScaler()
{
  return self;
}

void *sub_1DCEC433C(__CVBuffer *a1, uint64_t a2, CGFloat *a3, uint64_t a4, double a5, double a6)
{
  uint64_t v64 = *MEMORY[0x1E4F143B8];
  uint64_t v12 = (void *)sub_1DD048068();
  uint64_t v13 = *(v12 - 1);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v16 = *a3;
  CGFloat v17 = a3[1];
  CGFloat v18 = a3[2];
  CGFloat v19 = a3[3];
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F45880]), sel_initWithCVPixelBuffer_orientation_options_, a1, 1, 0);
  if (!v20)
  {
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v53 = 0xD000000000000029;
    *(void *)(v53 + 8) = 0x80000001DD06D560;
    *(unsigned char *)(v53 + 16) = 5;
    swift_willThrow();
    return v12;
  }
  uint64_t v21 = v20;
  double v59 = a6;
  double v60 = a5;
  CGFloat v22 = v16;
  v65.origin.double x = v16;
  CGFloat v61 = v17;
  v65.origin.double y = v17;
  v65.size.width = v18;
  v65.size.height = v19;
  double MinX = CGRectGetMinX(v65);
  if (qword_1EBE857E8 != -1) {
    swift_once();
  }
  CGPoint v24 = *(CGPoint *)ymmword_1EBE9C840;
  CGSize v25 = *(CGSize *)&ymmword_1EBE9C840[16];
  BOOL v26 = MinX < CGRectGetMinX(*(CGRect *)ymmword_1EBE9C840);
  CGFloat v27 = v22;
  if (v26) {
    goto LABEL_9;
  }
  v66.origin.double x = v22;
  v66.origin.double y = v61;
  v66.size.width = v18;
  v66.size.height = v19;
  double MinY = CGRectGetMinY(v66);
  v67.origin = v24;
  v67.size = v25;
  BOOL v26 = MinY < CGRectGetMinY(v67);
  CGFloat v27 = v22;
  if (v26) {
    goto LABEL_9;
  }
  v68.origin.double x = v22;
  v68.origin.double y = v61;
  v68.size.width = v18;
  v68.size.height = v19;
  double MaxX = CGRectGetMaxX(v68);
  v69.origin = v24;
  v69.size = v25;
  BOOL v26 = CGRectGetMaxX(v69) < MaxX;
  CGFloat v27 = v22;
  if (v26) {
    goto LABEL_9;
  }
  v70.origin.double x = v22;
  v70.origin.double y = v61;
  v70.size.width = v18;
  v70.size.height = v19;
  double MaxY = CGRectGetMaxY(v70);
  v71.origin = v24;
  v71.size = v25;
  BOOL v26 = CGRectGetMaxY(v71) < MaxY;
  CGFloat v27 = v22;
  if (v26)
  {
LABEL_9:
    unsigned int v58 = a2;
    uint64_t v31 = v21;
    uint64_t v32 = a4;
    sub_1DCDB40EC((uint64_t)v15);
    uint64_t v33 = sub_1DD048048();
    os_log_type_t v34 = sub_1DD048858();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = v12;
      unint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v36 = 0;
      _os_log_impl(&dword_1DCCF9000, v33, v34, "WARNING: VIVNImageScaler invoked with normalizedBoundingBox outside (0,0),(1,1) coordinate range, probably a bug! Clipped 0-1 RoI will be used instead", v36, 2u);
      int64_t v37 = v36;
      uint64_t v12 = v35;
      MEMORY[0x1E01B07E0](v37, -1, -1);
    }

    (*(void (**)(char *, void *))(v13 + 8))(v15, v12);
    a4 = v32;
    uint64_t v21 = v31;
    a2 = v58;
  }
  size_t Width = CVPixelBufferGetWidth(a1);
  size_t Height = CVPixelBufferGetHeight(a1);
  v72.origin.double x = v27;
  v72.origin.double y = v61;
  v72.size.width = v18;
  v72.size.height = v19;
  CGRect v73 = VNImageRectForNormalizedRect(v72, Width, Height);
  CGRect v74 = CGRectIntegral(v73);
  double x = v74.origin.x;
  double v41 = v74.size.width;
  if (v60 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v60 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  double y = v74.origin.y;
  if ((*(void *)&v60 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(void *)&v59 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_28;
  }
  if (v59 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  if (v59 >= 9.22337204e18) {
    goto LABEL_30;
  }
  double v43 = v74.size.height;
  uint64_t v44 = (uint64_t)v60;
  uint64_t v45 = (uint64_t)v59;
  sub_1DCDB96B4(MEMORY[0x1E4FBC860]);
  int64_t v46 = (void *)sub_1DD0482C8();
  swift_bridgeObjectRelease();
  unint64_t v62 = 0;
  uint64_t v12 = objc_msgSend(v21, sel_cropAndScaleBufferWithWidth_height_cropRect_format_imageCropAndScaleOption_options_error_calculatedNormalizedOriginOffset_calculatedScaleX_calculatedScaleY_, v44, v45, a2, a4, v46, &v62, x, y, v41, v43, 0, 0, 0);

  unint64_t v47 = (void *)v62;
  if (v12)
  {
    if (v62)
    {
      unint64_t v62 = 0;
      unint64_t v63 = 0xE000000000000000;
      id v48 = v47;
      sub_1DD048B98();
      swift_bridgeObjectRelease();
      unint64_t v62 = 0xD000000000000027;
      unint64_t v63 = 0x80000001DD06D5C0;
      id v49 = objc_msgSend(v48, sel_localizedDescription);
      sub_1DD048408();

      sub_1DD048548();
      swift_bridgeObjectRelease();
      unint64_t v50 = v62;
      unint64_t v51 = v63;
      sub_1DCD3A548();
      swift_allocError();
      *(void *)uint64_t v52 = v50;
      *(void *)(v52 + 8) = v51;
      *(unsigned char *)(v52 + 16) = 6;
      swift_willThrow();
    }
  }
  else
  {
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v54 = 0xD000000000000026;
    *(void *)(v54 + 8) = 0x80000001DD06D590;
    *(unsigned char *)(v54 + 16) = 6;
    id v55 = v47;
    swift_willThrow();
  }
  return v12;
}

uint64_t static S2PolygonBuilder.defaultMaxCells.getter()
{
  return 8;
}

ValueMetadata *type metadata accessor for S2PolygonBuilder()
{
  return &type metadata for S2PolygonBuilder;
}

id sub_1DCEC4988(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v66 = (uint64_t)v59 - v7;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)v59 - v9;
  uint64_t v11 = sub_1DD046478();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  CGRect v65 = (char *)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v64 = (char *)v59 - v15;
  MEMORY[0x1F4188790](v16);
  CGFloat v18 = (char *)v59 - v17;
  if (*(void *)(a1 + 16)
    && (unint64_t v19 = sub_1DCEAD1A4(7368801, 0xE300000000000000), (v20 & 1) != 0)
    && (sub_1DCD21A28(*(void *)(a1 + 56) + 32 * v19, (uint64_t)v68),
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F08),
        (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v63 = v11;
    uint64_t v21 = v67;
    id v22 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    uint64_t v23 = *(void *)(v21 + 16);
    id v24 = v22;
    if (v23
      && (unint64_t v25 = sub_1DCEAD1A4(1701667182, 0xE400000000000000), (v26 & 1) != 0)
      && (sub_1DCD21A28(*(void *)(v21 + 56) + 32 * v25, (uint64_t)v68), (swift_dynamicCast() & 1) != 0))
    {
      CGFloat v27 = (void *)sub_1DD0483D8();
      swift_bridgeObjectRelease();
    }
    else
    {
      CGFloat v27 = 0;
    }
    objc_msgSend(v24, sel_setName_, v27);

    if (*(void *)(v21 + 16)
      && (unint64_t v34 = sub_1DCEAD1A4(0x695F656C646E7562, 0xE900000000000064), (v35 & 1) != 0)
      && (sub_1DCD21A28(*(void *)(v21 + 56) + 32 * v34, (uint64_t)v68), (swift_dynamicCast() & 1) != 0))
    {
      unint64_t v36 = (void *)sub_1DD0483D8();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v36 = 0;
    }
    objc_msgSend(v24, sel_setBundleIdentifier_, v36);

    uint64_t v37 = *(void *)(v21 + 16);
    uint64_t v61 = v2;
    if (v37
      && (unint64_t v38 = sub_1DCEAD1A4(0x6C6562616CLL, 0xE500000000000000), (v39 & 1) != 0)
      && (sub_1DCD21A28(*(void *)(v21 + 56) + 32 * v38, (uint64_t)v68), (swift_dynamicCast() & 1) != 0))
    {
      double v40 = (void *)sub_1DD0483D8();
      swift_bridgeObjectRelease();
    }
    else
    {
      double v40 = 0;
    }
    id v60 = v24;
    objc_msgSend(v24, sel_setLabel_, v40);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03D68);
    uint64_t v41 = *(void *)(v3 + 72);
    unint64_t v42 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1DD04E760;
    v59[2] = v43;
    uint64_t v44 = (char *)(v43 + v42);
    sub_1DCEC5344(0x74756F68636E7570, 0xEC0000006972755FLL, v21, v44);
    sub_1DCEC5344(7107189, 0xE300000000000000, a1, &v44[v41]);
    swift_bridgeObjectRelease();
    sub_1DCEC5344(0x5F6C6C6174736E69, 0xEB000000006C7275, v21, &v44[2 * v41]);
    swift_bridgeObjectRelease();
    uint64_t v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v62 = v12;
    int64_t v46 = (void (**)(char *, char *, uint64_t))(v12 + 32);
    unint64_t v47 = MEMORY[0x1E4FBC860];
    uint64_t v48 = 3;
    v59[1] = v44;
    uint64_t v49 = (uint64_t)v44;
    uint64_t v50 = v63;
    do
    {
      uint64_t v51 = v66;
      sub_1DCDCD66C(v49, v66);
      sub_1DCDBF910(v51, (uint64_t)v5);
      if ((*v45)(v5, 1, v50) == 1)
      {
        sub_1DCDE6F34((uint64_t)v5);
      }
      else
      {
        uint64_t v52 = *v46;
        uint64_t v53 = v64;
        (*v46)(v64, v5, v50);
        v52(v65, v53, v50);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v47 = sub_1DCE9FADC(0, *(void *)(v47 + 16) + 1, 1, v47);
        }
        unint64_t v55 = *(void *)(v47 + 16);
        unint64_t v54 = *(void *)(v47 + 24);
        if (v55 >= v54 >> 1) {
          unint64_t v47 = sub_1DCE9FADC(v54 > 1, v55 + 1, 1, v47);
        }
        *(void *)(v47 + 16) = v55 + 1;
        unint64_t v56 = v47
            + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))
            + *(void *)(v62 + 72) * v55;
        uint64_t v50 = v63;
        v52((char *)v56, v65, v63);
      }
      v49 += v41;
      --v48;
    }
    while (v48);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v57 = (void *)sub_1DD0486A8();
    swift_bridgeObjectRelease();
    id v28 = v60;
    objc_msgSend(v60, sel_setUrls_, v57);
  }
  else
  {
    sub_1DCEC5344(7107189, 0xE300000000000000, a1, v10);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_1DCDE6F34((uint64_t)v10);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v10, v11);
      id v29 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03C60);
      uint64_t v30 = v11;
      unint64_t v31 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1DD04E910;
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 16))(v32 + v31, v18, v30);
      id v28 = v29;
      uint64_t v33 = (void *)sub_1DD0486A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v28, sel_setUrls_, v33);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v30);
    }
  }
  return v28;
}

void sub_1DCEC5150(void *a1)
{
  id v3 = objc_msgSend(v1, sel_inlineCard);
  if (!v3) {
    goto LABEL_18;
  }
  uint64_t v4 = v3;
  id v5 = objc_msgSend(v3, sel_cardSections);

  if (!v5) {
    return;
  }
  sub_1DCD95648(0, &qword_1EAB02EC8);
  unint64_t v6 = sub_1DD0486B8();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_5;
    }
  }
  else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    if ((v6 & 0xC000000000000001) != 0)
    {
      id v7 = (id)MEMORY[0x1E01AE890](0, v6);
      goto LABEL_8;
    }
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v7 = *(id *)(v6 + 32);
LABEL_8:
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1DD050EE0;
      *(void *)(v9 + 32) = a1;
      sub_1DD0486D8();
      sub_1DCD95648(0, &qword_1EAB02ED0);
      id v10 = a1;
      id v12 = (id)sub_1DD0486A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setPunchoutOptions_, v12);

      return;
    }
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_1DCEC5344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v8 - 8);
  char v35 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v34 - v11;
  uint64_t v13 = sub_1DD046478();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18.n128_f64[0] = MEMORY[0x1F4188790](v17);
  char v20 = (char *)&v34 - v19;
  if (*(void *)(a3 + 16) && (unint64_t v21 = sub_1DCEAD1A4(a1, a2), (v22 & 1) != 0))
  {
    unint64_t v34 = a4;
    sub_1DCD21A28(*(void *)(a3 + 56) + 32 * v21, (uint64_t)v36);
    int v23 = swift_dynamicCast();
    id v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
    v24(v12, v23 ^ 1u, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v31(v20, v12, v13);
      uint64_t v32 = v34;
      v31(v34, v20, v13);
      return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v24)(v32, 0, 1, v13);
    }
    a4 = v34;
  }
  else
  {
    id v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v24)(v12, 1, 1, v13, v18);
  }
  sub_1DCDE6F34((uint64_t)v12);
  if (*(void *)(a3 + 16))
  {
    unint64_t v25 = sub_1DCEAD1A4(a1, a2);
    if (v26)
    {
      sub_1DCD21A28(*(void *)(a3 + 56) + 32 * v25, (uint64_t)v36);
      if (swift_dynamicCast())
      {
        uint64_t v27 = (uint64_t)v35;
        sub_1DD046458();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v27, 1, v13) != 1)
        {
          uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
          v33(v16, v27, v13);
          v33(a4, (uint64_t)v16, v13);
          id v28 = a4;
          uint64_t v29 = 0;
          return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v24)(v28, v29, 1, v13);
        }
        sub_1DCDE6F34(v27);
      }
    }
  }
  id v28 = a4;
  uint64_t v29 = 1;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v24)(v28, v29, 1, v13);
}

void *sub_1DCEC56C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  sub_1DCDCD66C(a1, (uint64_t)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  sub_1DCDBF910((uint64_t)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  *(void *)(v9 + ((v7 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE862C0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 24) = 0;
  *(unsigned char *)(v10 + 32) = -1;
  *(void *)(v10 + 56) = 0;
  *(void *)(v10 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(void *)(v10 + 80) = v11;
  *(void *)(v10 + 40) = sub_1DCEC5E50;
  *(void *)(v10 + 48) = v9;
  swift_retain();
  swift_retain();
  sub_1DCD33E90(0);
  *(void *)(v10 + 72) = 4;
  swift_release();
  uint64_t v12 = sub_1DCF31D08();
  swift_release();
  sub_1DCD2479C(a1, &qword_1EBE848E0);
  v2[2] = v12;
  return v2;
}

void *sub_1DCEC589C(unint64_t a1)
{
  uint64_t v2 = sub_1DCFE3010()[2];
  swift_bridgeObjectRelease();
  uint64_t v3 = 0;
  if ((a1 & 0x8000000000000000) != 0 || v2 <= (uint64_t)a1) {
    return (void *)v3;
  }
  unint64_t result = sub_1DCFE3010();
  if (result[2] > a1)
  {
    uint64_t v3 = result[2 * a1 + 4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return (void *)v3;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FileMapper()
{
  return self;
}

unint64_t sub_1DCEC598C(uint64_t a1)
{
  sub_1DCEC5A24(a1, &v3);
  if (v4)
  {
    sub_1DCD9E7E8(&v3, v5);
    sub_1DCD9E7E8(v5, &v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84ED0);
    if (swift_dynamicCast()) {
      return v2;
    }
  }
  else
  {
    sub_1DCD2479C((uint64_t)&v3, &qword_1EAB041B0);
  }
  return sub_1DCDB7FCC(MEMORY[0x1E4FBC860]);
}

_OWORD *sub_1DCEC5A24@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v25[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD046478();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCDCD66C(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    unint64_t result = (_OWORD *)sub_1DCD2479C((uint64_t)v6, &qword_1EBE848E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v12 = sub_1DD046488();
    unint64_t v14 = v13;
    uint64_t v15 = sub_1DCF47ED8(v12, v13);
    unint64_t v17 = v16;
    sub_1DCD21954(v12, v14);
    __n128 v18 = self;
    uint64_t v19 = (void *)sub_1DD0464D8();
    v25[0] = 0;
    id v20 = objc_msgSend(v18, sel_JSONObjectWithData_options_error_, v19, 0, v25);

    id v21 = v25[0];
    if (v20)
    {
      sub_1DD048AC8();
      sub_1DCD21954(v15, v17);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return sub_1DCD9E7E8(&v26, a2);
    }
    char v22 = v21;
    int v23 = (void *)sub_1DD046378();

    swift_willThrow();
    sub_1DCD21954(v15, v17);

    unint64_t result = (_OWORD *)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  *a2 = 0u;
  a2[1] = 0u;
  return result;
}

uint64_t type metadata accessor for JsonFileMapper()
{
  return self;
}

uint64_t sub_1DCEC5D24()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_1DD046478();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  return MEMORY[0x1F4186498](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void *sub_1DCEC5E50@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0) - 8);
  unint64_t result = sub_1DCEC5FF4(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  *a1 = result;
  return result;
}

void *sub_1DCEC5EC0(uint64_t a1)
{
  uint64_t v2 = sub_1DCE9E328(0, *(void *)(a1 + 16), 0, MEMORY[0x1E4FBC860]);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    sub_1DCEC6340();
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t v5 = sub_1DD048AB8();
      if (!*(void *)(a1 + 16)) {
        break;
      }
      unint64_t v7 = sub_1DCEAD1A4(v5, v6);
      if ((v8 & 1) == 0) {
        break;
      }
      uint64_t v9 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v7);
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v13 = v2[2];
      unint64_t v12 = v2[3];
      if (v13 >= v12 >> 1) {
        uint64_t v2 = sub_1DCE9E328((void *)(v12 > 1), v13 + 1, 1, v2);
      }
      ++v4;
      v2[2] = v13 + 1;
      unint64_t v14 = &v2[2 * v13];
      v14[4] = v11;
      v14[5] = v10;
      if (v3 == v4) {
        return v2;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v2;
}

void *sub_1DCEC5FF4(uint64_t a1)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DD046478();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v24[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCDCD66C(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE848E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v9 = sub_1DD046488();
    unint64_t v11 = v10;
    uint64_t v14 = sub_1DCF47ED8(v9, v10);
    unint64_t v16 = v15;
    sub_1DCD21954(v9, v11);
    unint64_t v17 = self;
    __n128 v18 = (void *)sub_1DD0464D8();
    v24[0] = 0;
    id v19 = objc_msgSend(v17, sel_JSONObjectWithData_options_error_, v18, 0, v24);

    id v20 = v24[0];
    if (v19)
    {
      sub_1DD048AC8();
      swift_unknownObjectRelease();
      sub_1DCD9E7E8(v25, v26);
      sub_1DCD21A28((uint64_t)v26, (uint64_t)v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84ED0);
      if (swift_dynamicCast())
      {
        unint64_t v12 = sub_1DCEC5EC0((uint64_t)v24[0]);
        sub_1DCD21954(v14, v16);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        return v12;
      }
      sub_1DCD21954(v14, v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    }
    else
    {
      id v21 = v20;
      char v22 = (void *)sub_1DD046378();

      swift_willThrow();
      sub_1DCD21954(v14, v16);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return (void *)MEMORY[0x1E4FBC860];
}

unint64_t sub_1DCEC6340()
{
  unint64_t result = qword_1EBE84EC8;
  if (!qword_1EBE84EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84EC8);
  }
  return result;
}

uint64_t sub_1DCEC6394(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 1 || a4 <= 0.0)
  {
    *(void *)(v5 + 24) = 30;
    *(void *)(v5 + 16) = sub_1DCEC6974(30, 0.5, 0.5, 0.5);
    sub_1DCDB40EC((uint64_t)v13);
    uint64_t v14 = sub_1DD048048();
    os_log_type_t v15 = sub_1DD048848();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v16 = 0;
      _os_log_impl(&dword_1DCCF9000, v14, v15, "Invalid Box Scorer Config. Create Box Scorer using default config.", v16, 2u);
      MEMORY[0x1E01B07E0](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    *(void *)(v5 + 24) = a1;
    *(void *)(v5 + 16) = sub_1DCEC6974(a1, a4, a2, a3);
  }
  return v5;
}

void sub_1DCEC6548(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_1DD048068();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*(void *)&a1 & 0x7FF0000000000000) != 0
    && (~*(void *)&a2 & 0x7FF0000000000000) != 0
    && (~*(void *)&a3 & 0x7FF0000000000000) != 0
    && (~*(void *)&a4 & 0x7FF0000000000000) != 0)
  {
    uint64_t v16 = *(void *)(v4 + 24);
    double v17 = (double)v16;
    double v18 = (double)v16 * a1;
    if ((~*(void *)&v18 & 0x7FF0000000000000) != 0)
    {
      if (v18 > -9.22337204e18)
      {
        if (v18 < 9.22337204e18)
        {
          if (((uint64_t)v18 & ~((uint64_t)v18 >> 63)) >= v16) {
            uint64_t v19 = *(void *)(v4 + 24);
          }
          else {
            uint64_t v19 = (uint64_t)v18 & ~((uint64_t)v18 >> 63);
          }
          double v20 = v17 * a2;
          if ((~COERCE__INT64(v17 * a2) & 0x7FF0000000000000) != 0)
          {
            if (v20 > -9.22337204e18)
            {
              if (v20 < 9.22337204e18)
              {
                uint64_t v21 = (uint64_t)v20 & ~((uint64_t)v20 >> 63);
                if (v21 >= v16) {
                  uint64_t v21 = *(void *)(v4 + 24);
                }
                double v22 = (a1 + a3) * v17;
                if ((~*(void *)&v22 & 0x7FF0000000000000) != 0)
                {
                  if (v22 > -9.22337204e18)
                  {
                    if (v22 < 9.22337204e18)
                    {
                      if (((uint64_t)v22 & ~((uint64_t)v22 >> 63)) >= v16) {
                        unint64_t v23 = *(void *)(v4 + 24);
                      }
                      else {
                        unint64_t v23 = (uint64_t)v22 & ~((uint64_t)v22 >> 63);
                      }
                      double v24 = (a2 + a4) * v17;
                      if ((~*(void *)&v24 & 0x7FF0000000000000) != 0)
                      {
                        if (v24 > -9.22337204e18)
                        {
                          if (v24 < 9.22337204e18)
                          {
                            if (((uint64_t)v24 & ~((uint64_t)v24 >> 63)) >= v16) {
                              unint64_t v25 = *(void *)(v4 + 24);
                            }
                            else {
                              unint64_t v25 = (uint64_t)v24 & ~((uint64_t)v24 >> 63);
                            }
                            if ((v23 & 0x8000000000000000) == 0)
                            {
                              uint64_t v26 = *(void *)(v4 + 16);
                              unint64_t v27 = *(void *)(v26 + 16);
                              if (v23 < v27)
                              {
                                if ((v25 & 0x8000000000000000) == 0)
                                {
                                  uint64_t v28 = v26 + 32;
                                  unint64_t v29 = *(void *)(*(void *)(v28 + 8 * v23) + 16);
                                  if (v25 < v29)
                                  {
                                    BOOL v30 = __OFSUB__(v19, 1);
                                    uint64_t v31 = v19 - 1;
                                    if (!v30)
                                    {
                                      if (v31 >= 1)
                                      {
                                        if (v31 >= v27)
                                        {
LABEL_65:
                                          __break(1u);
                                          goto LABEL_66;
                                        }
                                        if (v25 >= *(void *)(*(void *)(v28 + 8 * v31) + 16))
                                        {
LABEL_66:
                                          __break(1u);
                                          goto LABEL_67;
                                        }
                                      }
                                      BOOL v30 = __OFSUB__(v21, 1);
                                      uint64_t v32 = v21 - 1;
                                      if (!v30)
                                      {
                                        if (v32 < 1) {
                                          return;
                                        }
                                        if (v32 < v29)
                                        {
                                          if (v31 < 1) {
                                            return;
                                          }
                                          if (v31 < v27)
                                          {
                                            if ((unint64_t)v32 < *(void *)(*(void *)(v28 + 8 * v31) + 16)) {
                                              return;
                                            }
LABEL_69:
                                            __break(1u);
                                            return;
                                          }
LABEL_68:
                                          __break(1u);
                                          goto LABEL_69;
                                        }
LABEL_67:
                                        __break(1u);
                                        goto LABEL_68;
                                      }
LABEL_64:
                                      __break(1u);
                                      goto LABEL_65;
                                    }
LABEL_63:
                                    __break(1u);
                                    goto LABEL_64;
                                  }
LABEL_62:
                                  __break(1u);
                                  goto LABEL_63;
                                }
LABEL_61:
                                __break(1u);
                                goto LABEL_62;
                              }
LABEL_60:
                              __break(1u);
                              goto LABEL_61;
                            }
LABEL_59:
                            __break(1u);
                            goto LABEL_60;
                          }
LABEL_58:
                          __break(1u);
                          goto LABEL_59;
                        }
LABEL_57:
                        __break(1u);
                        goto LABEL_58;
                      }
LABEL_56:
                      __break(1u);
                      goto LABEL_57;
                    }
LABEL_55:
                    __break(1u);
                    goto LABEL_56;
                  }
LABEL_54:
                  __break(1u);
                  goto LABEL_55;
                }
LABEL_53:
                __break(1u);
                goto LABEL_54;
              }
LABEL_52:
              __break(1u);
              goto LABEL_53;
            }
LABEL_51:
            __break(1u);
            goto LABEL_52;
          }
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_49;
  }
  sub_1DCDB40EC((uint64_t)v12);
  unint64_t v13 = sub_1DD048048();
  os_log_type_t v14 = sub_1DD048858();
  if (os_log_type_enabled(v13, v14))
  {
    os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v15 = 0;
    _os_log_impl(&dword_1DCCF9000, v13, v14, "Invalid box input", v15, 2u);
    MEMORY[0x1E01B07E0](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1DCEC6918()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BoxScorer()
{
  return self;
}

uint64_t sub_1DCEC6974(uint64_t result, double a2, double a3, double a4)
{
  uint64_t v4 = result + 1;
  if (__OFADD__(result, 1))
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  uint64_t v7 = result;
  uint64_t v9 = sub_1DCDE1EBC(result + 1, 0.0);
  unint64_t result = sub_1DCDE1FC8(v9, v4);
  if (v7 < 0)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  uint64_t v10 = (void *)result;
  unint64_t v11 = 0;
  double v12 = (double)v7;
  while (2)
  {
    double v14 = exp(((double)(uint64_t)v11 / v12 - a3) / a2 * (((double)(uint64_t)v11 / v12 - a3) / a2 * -0.5));
    unint64_t v15 = 0;
    unint64_t v16 = v11 - 1;
    do
    {
      double v17 = exp(((double)(uint64_t)v15 / v12 - a4) / a2 * (((double)(uint64_t)v15 / v12 - a4) / a2 * -0.5));
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        unint64_t result = (uint64_t)sub_1DCEC1CB8(v10);
        uint64_t v10 = (void *)result;
      }
      if (v11 >= v10[2])
      {
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
      double v18 = v10 + 4;
      uint64_t v19 = (void *)v10[v11 + 4];
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      v10[v11 + 4] = v19;
      if ((result & 1) == 0)
      {
        unint64_t result = (uint64_t)sub_1DCEC1C64(v19);
        uint64_t v19 = (void *)result;
        v18[v11] = result;
      }
      if (v15 >= v19[2]) {
        goto LABEL_59;
      }
      v19[v15 + 4] = 0;
      if (v11)
      {
        unint64_t v20 = v10[2];
        if (v16 >= v20) {
          goto LABEL_62;
        }
        uint64_t v21 = v18[v16];
        if (v15 >= *(void *)(v21 + 16)) {
          goto LABEL_63;
        }
        if (v11 >= v20) {
          goto LABEL_64;
        }
        double v22 = (void *)v18[v11];
        double v23 = *(double *)(v21 + 8 * v15 + 32);
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        v18[v11] = v22;
        if ((result & 1) == 0)
        {
          unint64_t result = (uint64_t)sub_1DCEC1C64(v22);
          double v22 = (void *)result;
          v18[v11] = result;
        }
        if (v15 >= v22[2]) {
          goto LABEL_66;
        }
        *(double *)&v22[v15 + 4] = v23 + *(double *)&v22[v15 + 4];
      }
      if (v15)
      {
        if (v11 >= v10[2]) {
          goto LABEL_65;
        }
        double v24 = (void *)v18[v11];
        if (v15 - 1 >= v24[2]) {
          goto LABEL_67;
        }
        double v25 = *(double *)&v24[v15 + 3];
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        v18[v11] = v24;
        if ((result & 1) == 0)
        {
          unint64_t result = (uint64_t)sub_1DCEC1C64(v24);
          double v24 = (void *)result;
          v18[v11] = result;
        }
        if (v15 >= v24[2]) {
          goto LABEL_68;
        }
        *(double *)&v24[v15 + 4] = v25 + *(double *)&v24[v15 + 4];
        if (v11)
        {
          unint64_t v26 = v10[2];
          if (v16 >= v26) {
            goto LABEL_69;
          }
          uint64_t v27 = v18[v16];
          if (v15 - 1 >= *(void *)(v27 + 16)) {
            goto LABEL_70;
          }
          if (v11 >= v26) {
            goto LABEL_71;
          }
          double v28 = *(double *)(v27 + 8 * v15 + 24);
          unint64_t v29 = (void *)v18[v11];
          unint64_t result = swift_isUniquelyReferenced_nonNull_native();
          v18[v11] = v29;
          if ((result & 1) == 0)
          {
            unint64_t result = (uint64_t)sub_1DCEC1C64(v29);
            unint64_t v29 = (void *)result;
            v18[v11] = result;
          }
          if (v15 >= v29[2]) {
            goto LABEL_72;
          }
          *(double *)&v29[v15 + 4] = *(double *)&v29[v15 + 4] - v28;
        }
      }
      if (v11 >= v10[2]) {
        goto LABEL_60;
      }
      BOOL v30 = (void *)v18[v11];
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      v18[v11] = v30;
      if ((result & 1) == 0)
      {
        unint64_t result = (uint64_t)sub_1DCEC1C64(v30);
        BOOL v30 = (void *)result;
        v18[v11] = result;
      }
      if (v15 >= v30[2]) {
        goto LABEL_61;
      }
      *(double *)&v30[v15 + 4] = v14 * v17 + *(double *)&v30[v15 + 4];
      ++v15;
    }
    while (v7 + 1 != v15);
    if (v11++ != v7) {
      continue;
    }
    break;
  }
  if (v10[2] > v7)
  {
    uint64_t v31 = v18[v7];
    if (*(void *)(v31 + 16) <= v7) {
      goto LABEL_79;
    }
    unint64_t v32 = 0;
    double v33 = *(double *)(v31 + 8 * v7 + 32);
    while (1)
    {
      uint64_t v34 = v18[v32];
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      v18[v32] = v34;
      if (result)
      {
        if (!*(void *)(v34 + 16)) {
          goto LABEL_56;
        }
      }
      else
      {
        unint64_t result = (uint64_t)sub_1DCEC1C64((void *)v34);
        uint64_t v34 = result;
        v18[v32] = result;
        if (!*(void *)(result + 16))
        {
LABEL_56:
          __break(1u);
          return (uint64_t)v10;
        }
      }
      *(double *)(v34 + 32) = *(double *)(v34 + 32) / v33;
      if (v7) {
        break;
      }
LABEL_52:
      if (v32 == v7) {
        return (uint64_t)v10;
      }
      if (++v32 >= v10[2]) {
        goto LABEL_75;
      }
    }
    uint64_t v35 = 0;
    while (v32 < v10[2])
    {
      unint64_t v36 = (void *)v18[v32];
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      v18[v32] = v36;
      if ((result & 1) == 0)
      {
        unint64_t result = (uint64_t)sub_1DCEC1C64(v36);
        unint64_t v36 = (void *)result;
        v18[v32] = result;
      }
      uint64_t v37 = v35 + 1;
      if ((unint64_t)(v35 + 1) >= v36[2]) {
        goto LABEL_74;
      }
      *(double *)&v36[v35 + 5] = *(double *)&v36[v35 + 5] / v33;
      ++v35;
      if (v7 == v37) {
        goto LABEL_52;
      }
    }
    goto LABEL_73;
  }
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_1DCEC6DE8(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v43 = a3;
  uint64_t v45 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868D8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v44 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE867E0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v47 = v11;
  uint64_t v48 = v12;
  MEMORY[0x1F4188790](v11);
  int64_t v46 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1DD0481B8();
  uint64_t v41 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  unint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DD0481D8();
  uint64_t v39 = *(void *)(v16 - 8);
  uint64_t v40 = v16;
  MEMORY[0x1F4188790](v16);
  double v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1DD0478F8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x1F4188790](v19);
  double v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  *(_WORD *)(v5 + 32) = 2;
  *(void *)(v5 + 40) = v23;
  *(void *)(v5 + 48) = 0;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = 0;
  *(double *)(v5 + 56) = a4;
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  double v25 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v42 = v19;
  v25(v22, a3, v19);
  unint64_t v26 = (*(unsigned __int8 *)(v20 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v27 + v26, v22, v19);
  aBlock[4] = sub_1DCEC9344;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCEC8CA4;
  aBlock[3] = &block_descriptor_29;
  double v28 = _Block_copy(aBlock);
  id v29 = a1;
  swift_retain();
  sub_1DD0481C8();
  id v49 = (id)MEMORY[0x1E4FBC860];
  sub_1DCEC918C(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCD52850((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  uint64_t v30 = v38;
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v18, v15, v28);
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v30);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v40);
  swift_release();
  swift_release();
  id v49 = v29;
  aBlock[0] = v45;
  uint64_t v31 = sub_1DD048888();
  uint64_t v32 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v44, 1, 1, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE867F8);
  sub_1DCD95648(0, (unint64_t *)&qword_1EBE87140);
  sub_1DCD52850((unint64_t *)&unk_1EBE867E8, &qword_1EBE867F8);
  sub_1DCEC93A8();
  double v33 = v46;
  sub_1DD0480E8();
  sub_1DCEC9410(v32);
  swift_allocObject();
  swift_weakInit();
  sub_1DCD52850(&qword_1EBE867D8, &qword_1EBE867E0);
  uint64_t v34 = v47;
  uint64_t v35 = sub_1DD0480F8();

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v43, v42);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v34);
  *(void *)(v5 + 24) = v35;
  swift_release();
  return v5;
}

uint64_t sub_1DCEC7450(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DCEC82E4(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCEC74B0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DCEC79D4(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCEC7510(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v4 = (void *)sub_1DD048068();
  uint64_t v5 = *(v4 - 1);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = sub_1DD048208();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = MEMORY[0x1F4188790](v14);
  double v18 = (uint64_t *)((char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(void **)(v3 + 16);
  *double v18 = v19;
  (*(void (**)(void *, void, uint64_t, double))(v15 + 104))(v18, *MEMORY[0x1E4FBCBF0], v14, v16);
  id v20 = v19;
  LOBYTE(v19) = sub_1DD048228();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v18, v14);
  if ((v19 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    uint64_t v4 = sub_1DCE9F544(0, v4[2] + 1, 1, v4);
    *(void *)uint64_t v5 = v4;
    goto LABEL_16;
  }
  int v21 = *(unsigned __int8 *)(v3 + 32);
  if (v21 != 2)
  {
    uint64_t v26 = v21 & 1;
    sub_1DCDB40EC((uint64_t)v13);
    uint64_t v27 = sub_1DD048048();
    os_log_type_t v28 = sub_1DD048848();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v29 = 67109120;
      int v42 = v26;
      sub_1DD048A28();
      _os_log_impl(&dword_1DCCF9000, v27, v28, "Valid state %{BOOL}d", v29, 8u);
      MEMORY[0x1E01B07E0](v29, -1, -1);
    }

    (*(void (**)(char *, void *))(v5 + 8))(v13, v4);
    uint64_t v25 = v26;
    return v40(v25);
  }
  if (*(unsigned char *)(v3 + 33))
  {
    sub_1DCDB40EC((uint64_t)v7);
    double v22 = sub_1DD048048();
    os_log_type_t v23 = sub_1DD048848();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1DCCF9000, v22, v23, "Publisher timed out. Default false.", v24, 2u);
      MEMORY[0x1E01B07E0](v24, -1, -1);
    }

    (*(void (**)(char *, void *))(v5 + 8))(v7, v4);
    uint64_t v25 = 0;
    return v40(v25);
  }
  if (!*(void *)(v3 + 48)) {
    sub_1DCEC8520();
  }
  sub_1DCDB40EC((uint64_t)v10);
  uint64_t v31 = sub_1DD048048();
  os_log_type_t v32 = sub_1DD048848();
  if (os_log_type_enabled(v31, v32))
  {
    double v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v33 = 0;
    _os_log_impl(&dword_1DCCF9000, v31, v32, "Pending values", v33, 2u);
    MEMORY[0x1E01B07E0](v33, -1, -1);
  }

  (*(void (**)(char *, void *))(v5 + 8))(v10, v4);
  uint64_t v7 = (char *)swift_allocObject();
  uint64_t v34 = v41;
  *((void *)v7 + 2) = v40;
  *((void *)v7 + 3) = v34;
  uint64_t v5 = v3 + 40;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 40);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 40) = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_20;
  }
LABEL_16:
  unint64_t v37 = v4[2];
  unint64_t v36 = v4[3];
  if (v37 >= v36 >> 1)
  {
    uint64_t v4 = sub_1DCE9F544((void *)(v36 > 1), v37 + 1, 1, v4);
    *(void *)uint64_t v5 = v4;
  }
  void v4[2] = v37 + 1;
  uint64_t v38 = &v4[2 * v37];
  v38[4] = sub_1DCEC924C;
  v38[5] = v7;
  return swift_endAccess();
}

uint64_t sub_1DCEC79D4(uint64_t a1)
{
  uint64_t v3 = sub_1DD0478F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v31 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v36 = (char *)v29 - v7;
  uint64_t v8 = sub_1DD048068();
  uint64_t v35 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v37 = (uint64_t)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DD048208();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (void *)((char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v1 + 16);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t, double))(v11 + 104))(v14, *MEMORY[0x1E4FBCBF0], v10, v12);
  id v16 = v15;
  char v17 = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v14, v10);
  if (v17)
  {
    uint64_t v32 = v8;
    uint64_t v34 = v1;
    sub_1DCDB40EC(v37);
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v33 = a1;
    v19(v36, a1, v3);
    id v20 = sub_1DD048048();
    os_log_type_t v21 = sub_1DD048848();
    if (os_log_type_enabled(v20, v21))
    {
      double v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v39 = v30;
      *(_DWORD *)double v22 = 136315138;
      v29[1] = v22 + 4;
      os_log_type_t v23 = v36;
      v19(v31, (uint64_t)v36, v3);
      uint64_t v24 = sub_1DD048498();
      uint64_t v38 = sub_1DCED7FA0(v24, v25, &v39);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v23, v3);
      _os_log_impl(&dword_1DCCF9000, v20, v21, "Received values %s", v22, 0xCu);
      uint64_t v26 = v30;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v26, -1, -1);
      MEMORY[0x1E01B07E0](v22, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v36, v3);
    }

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v37, v32);
    uint64_t v27 = v34;
    uint64_t result = sub_1DCEC82E4(v33);
    int v28 = *(unsigned __int8 *)(v27 + 32);
    if (v28 != 2) {
      return sub_1DCEC8008(v28 & 1);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCEC7DD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DD048068();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DD048208();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v1 + 16);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t, double))(v7 + 104))(v10, *MEMORY[0x1E4FBCBF0], v6, v8);
  id v12 = v11;
  LOBYTE(v11) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v10, v6);
  if (v11)
  {
    sub_1DCDB40EC((uint64_t)v5);
    uint64_t v14 = sub_1DD048048();
    os_log_type_t v15 = sub_1DD048848();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v16 = 0;
      _os_log_impl(&dword_1DCCF9000, v14, v15, "Enable state timed out", v16, 2u);
      MEMORY[0x1E01B07E0](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(unsigned char *)(v1 + 33) = 1;
    sub_1DCEC8008(*(unsigned char *)(v1 + 32) & 1);
    return sub_1DCEC8DC8();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCEC8008(char a1)
{
  uint64_t v3 = sub_1DD048068();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD048208();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v12 = *(void **)(v1 + 16);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x1E4FBCBF0], v7, v9);
  id v13 = v12;
  LOBYTE(v12) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  if (v12)
  {
    os_log_type_t v15 = (uint64_t *)(v1 + 40);
    swift_beginAccess();
    uint64_t v16 = *(void *)(*(void *)(v1 + 40) + 16);
    sub_1DCDB40EC((uint64_t)v6);
    uint64_t v17 = sub_1DD048048();
    os_log_type_t v18 = sub_1DD048848();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 134217984;
      uint64_t v25 = v16;
      sub_1DD048A28();
      _os_log_impl(&dword_1DCCF9000, v17, v18, "Releasing %ld completion(s)", v19, 0xCu);
      MEMORY[0x1E01B07E0](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v20 = *v15;
    uint64_t v21 = *(void *)(*v15 + 16);
    if (v21)
    {
      char v22 = a1 & 1;
      swift_bridgeObjectRetain();
      uint64_t v23 = v20 + 40;
      do
      {
        uint64_t v24 = *(void (**)(uint64_t *))(v23 - 8);
        LOBYTE(v25) = v22;
        swift_retain();
        v24(&v25);
        swift_release();
        v23 += 16;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
    }
    *os_log_type_t v15 = MEMORY[0x1E4FBC860];
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCEC82E4(uint64_t a1)
{
  uint64_t v3 = sub_1DD0478F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD048208();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v12 = *(void **)(v1 + 16);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x1E4FBCBF0], v7, v9);
  id v13 = v12;
  LOBYTE(v12) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  if (v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
    if (result == *MEMORY[0x1E4F89BE0])
    {
      *(unsigned char *)(v1 + 32) = 0;
      sub_1DCEC8DC8();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    if (result != *MEMORY[0x1E4F89BD0])
    {
      if (result != *MEMORY[0x1E4F89BD8]) {
        return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      }
      *(unsigned char *)(v1 + 32) = 1;
      return sub_1DCEC8DC8();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCEC8520()
{
  uint64_t v1 = sub_1DD0481B8();
  uint64_t v42 = *(void *)(v1 - 8);
  uint64_t v43 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v40 = (char *)&ObjectType - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1DD0481D8();
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v38 = (char *)&ObjectType - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1DD0481A8();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = (char *)&ObjectType - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int64_t v46 = (char *)&ObjectType - v7;
  uint64_t v51 = sub_1DD0481F8();
  uint64_t v45 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  double v9 = (char *)&ObjectType - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v44 = (char *)&ObjectType - v11;
  uint64_t v12 = sub_1DD0488D8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&ObjectType - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DD048208();
  uint64_t v17 = *(void *)(v16 - 8);
  double v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (uint64_t *)((char *)&ObjectType - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v50 = v0;
  uint64_t v21 = *(void **)(v0 + 16);
  *uint64_t v20 = v21;
  (*(void (**)(void *, void, uint64_t, double))(v17 + 104))(v20, *MEMORY[0x1E4FBCBF0], v16, v18);
  id v22 = v21;
  LOBYTE(v21) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v20, v16);
  if (v21)
  {
    sub_1DCD95648(0, (unint64_t *)&qword_1EBE85058);
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1DCEC918C((unint64_t *)&unk_1EBE82D10, MEMORY[0x1E4FBCC70]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82D48);
    sub_1DCD52850(&qword_1EBE82D50, &qword_1EBE82D48);
    sub_1DD048AE8();
    uint64_t v24 = sub_1DD0488E8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v25 = v50;
    *(void *)(v50 + 48) = v24;
    uint64_t result = swift_unknownObjectRelease();
    if (*(void *)(v25 + 48))
    {
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1DD0481E8();
      uint64_t v26 = v44;
      MEMORY[0x1E01ADED0](v9, *(double *)(v25 + 56));
      uint64_t v45 = *(void *)(v45 + 8);
      ((void (*)(char *, uint64_t))v45)(v9, v51);
      uint64_t v28 = v48;
      uint64_t v27 = v49;
      id v29 = *(void (**)(char *, void, uint64_t))(v48 + 104);
      uint64_t v30 = v46;
      v29(v46, *MEMORY[0x1E4FBCAD0], v49);
      uint64_t v31 = v47;
      *(void *)uint64_t v47 = 0;
      v29(v31, *MEMORY[0x1E4FBCAA8], v27);
      MEMORY[0x1E01AE650](v26, v30, v31, ObjectType);
      swift_unknownObjectRelease();
      uint64_t v32 = *(void (**)(char *, uint64_t))(v28 + 8);
      v32(v31, v27);
      v32(v30, v27);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v45)(v26, v51);
      if (*(void *)(v25 + 48))
      {
        swift_getObjectType();
        uint64_t v33 = swift_allocObject();
        swift_weakInit();
        aBlock[4] = sub_1DCEC920C;
        aBlock[5] = v33;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1DCEC8CA4;
        aBlock[3] = &block_descriptor_19;
        uint64_t v34 = _Block_copy(aBlock);
        swift_unknownObjectRetain();
        swift_retain();
        uint64_t v35 = v38;
        sub_1DD0481C8();
        unint64_t v36 = v40;
        sub_1DCEC8CEC();
        sub_1DD048948();
        _Block_release(v34);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v43);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v35, v41);
        swift_release();
        uint64_t result = swift_release();
        if (*(void *)(v25 + 48))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          sub_1DD048968();
          return swift_unknownObjectRelease();
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCEC8C4C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1DCEC7DD4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCEC8CA4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1DCEC8CEC()
{
  return sub_1DD048AE8();
}

uint64_t sub_1DCEC8DC8()
{
  uint64_t v1 = v0;
  uint64_t v19 = sub_1DD0481B8();
  uint64_t v2 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1DD0481D8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DD048208();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (uint64_t *)((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v1 + 16);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t, double))(v10 + 104))(v13, *MEMORY[0x1E4FBCBF0], v9, v11);
  id v15 = v14;
  LOBYTE(v14) = sub_1DD048228();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v13, v9);
  if (v14)
  {
    if (*(void *)(v1 + 48))
    {
      swift_getObjectType();
      aBlock[4] = faiss::NormalizationTransform::~NormalizationTransform;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1DCEC8CA4;
      aBlock[3] = &block_descriptor_6;
      uint64_t v17 = _Block_copy(aBlock);
      swift_unknownObjectRetain();
      sub_1DD0481C8();
      sub_1DCEC8CEC();
      sub_1DD048948();
      _Block_release(v17);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v19);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if (*(void *)(v1 + 48))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_1DD048958();
        swift_unknownObjectRelease();
      }
      *(void *)(v1 + 48) = 0;
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCEC9100()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PegasusProxyEnableListener()
{
  return self;
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1DCEC918C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCEC91D4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCEC920C()
{
  return sub_1DCEC8C4C();
}

uint64_t sub_1DCEC9214()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DCEC924C(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1DCEC9278()
{
  uint64_t v1 = sub_1DD0478F8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1DCEC9344()
{
  uint64_t v1 = *(void *)(sub_1DD0478F8() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_1DCEC7450(v2, v3);
}

unint64_t sub_1DCEC93A8()
{
  unint64_t result = qword_1EBE868E0;
  if (!qword_1EBE868E0)
  {
    sub_1DCD95648(255, (unint64_t *)&qword_1EBE87140);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE868E0);
  }
  return result;
}

uint64_t sub_1DCEC9410(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCEC9470(uint64_t a1)
{
  return sub_1DCEC74B0(a1);
}

uint64_t sub_1DCEC9478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v64 = a2;
  uint64_t v65 = a1;
  uint64_t v12 = sub_1DD048068();
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v59 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v55 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v54 = (uint64_t)&v53 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v56 = (uint64_t)&v53 - v17;
  uint64_t v18 = sub_1DD048208();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (uint64_t *)((char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v22 = (void *)swift_allocObject();
  v22[2] = a3;
  v22[3] = a4;
  v22[4] = a5;
  v22[5] = a6;
  uint64_t v57 = a6;
  v22[6] = a7;
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v25 = v64;
  uint64_t v24 = v65;
  v23[2] = v64;
  v23[3] = sub_1DCECA190;
  uint64_t v62 = v23;
  v23[4] = v22;
  uint64_t v26 = *(void **)(v24 + 16);
  *uint64_t v21 = v26;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E4FBCBF0], v18);
  uint64_t v63 = a3;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v60 = a7;
  swift_retain_n();
  swift_retain();
  uint64_t v61 = v22;
  swift_retain();
  id v27 = v26;
  LOBYTE(v26) = sub_1DD048228();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if ((v26 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    uint64_t v21 = sub_1DCE9F544(0, v21[2] + 1, 1, v21);
    *id v22 = v21;
    goto LABEL_16;
  }
  uint64_t v28 = v65;
  int v29 = *(unsigned __int8 *)(v65 + 32);
  if (v29 != 2)
  {
    int v37 = v29 & 1;
    uint64_t v38 = v56;
    sub_1DCDB40EC(v56);
    uint64_t v39 = sub_1DD048048();
    os_log_type_t v40 = sub_1DD048848();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 67109120;
      int v66 = v37;
      sub_1DD048A28();
      _os_log_impl(&dword_1DCCF9000, v39, v40, "Valid state %{BOOL}d", v41, 8u);
      MEMORY[0x1E01B07E0](v41, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v38, v59);
    uint64_t v42 = v63;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v43 = v60;
    swift_retain();
    sub_1DCD74618(v37, v25, v42, a4, a5, v57, v43);
    swift_release();
    goto LABEL_10;
  }
  uint64_t v30 = v62;
  if (*(unsigned char *)(v65 + 33))
  {
    uint64_t v31 = v54;
    sub_1DCDB40EC(v54);
    uint64_t v32 = sub_1DD048048();
    os_log_type_t v33 = sub_1DD048848();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_1DCCF9000, v32, v33, "Publisher timed out. Default false.", v34, 2u);
      MEMORY[0x1E01B07E0](v34, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v31, v59);
    uint64_t v35 = v63;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v36 = v60;
    swift_retain();
    sub_1DCD74618(0, v25, v35, a4, a5, v57, v36);
    swift_release();
LABEL_10:
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    goto LABEL_19;
  }
  if (!*(void *)(v65 + 48)) {
    sub_1DCEC8520();
  }
  uint64_t v44 = v55;
  sub_1DCDB40EC(v55);
  uint64_t v45 = sub_1DD048048();
  os_log_type_t v46 = sub_1DD048848();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v47 = 0;
    _os_log_impl(&dword_1DCCF9000, v45, v46, "Pending values", v47, 2u);
    MEMORY[0x1E01B07E0](v47, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v44, v59);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1DCECA1E4;
  *(void *)(v18 + 24) = v30;
  id v22 = (void *)(v28 + 40);
  swift_beginAccess();
  uint64_t v21 = *(void **)(v28 + 40);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v28 + 40) = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_21;
  }
LABEL_16:
  unint64_t v50 = v21[2];
  unint64_t v49 = v21[3];
  if (v50 >= v49 >> 1)
  {
    uint64_t v21 = sub_1DCE9F544((void *)(v49 > 1), v50 + 1, 1, v21);
    *id v22 = v21;
  }
  v21[2] = v50 + 1;
  uint64_t v51 = &v21[2 * v50];
  v51[4] = sub_1DCECA1E8;
  v51[5] = v18;
  swift_endAccess();
  swift_release();
  swift_release();
LABEL_19:
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1DCEC9B14(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void *a5)
{
  uint64_t v10 = sub_1DD048068();
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v51 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v48 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v47 = (uint64_t)&v47 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = sub_1DD048208();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t *)((char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a3;
  v21[3] = a4;
  unint64_t v49 = a4;
  v21[4] = a5;
  id v22 = (void *)swift_allocObject();
  v22[2] = a2;
  v22[3] = sub_1DCECA124;
  uint64_t v53 = v22;
  v22[4] = v21;
  uint64_t v23 = *(void **)(a1 + 16);
  *uint64_t v20 = v23;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FBCBF0], v17);
  uint64_t v52 = a3;
  uint64_t v24 = (uint64_t)a5;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  id v25 = v23;
  LOBYTE(v23) = sub_1DD048228();
  (*(void (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  if ((v23 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    a5 = sub_1DCE9F544(0, a5[2] + 1, 1, a5);
    *uint64_t v20 = a5;
    goto LABEL_16;
  }
  int v26 = *(unsigned __int8 *)(a1 + 32);
  if (v26 != 2)
  {
    int v33 = v26 & 1;
    sub_1DCDB40EC((uint64_t)v16);
    uint64_t v34 = sub_1DD048048();
    os_log_type_t v35 = sub_1DD048848();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 67109120;
      int v54 = v33;
      sub_1DD048A28();
      _os_log_impl(&dword_1DCCF9000, v34, v35, "Valid state %{BOOL}d", v36, 8u);
      MEMORY[0x1E01B07E0](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v51);
    uint64_t v37 = v52;
    swift_retain();
    swift_retain();
    sub_1DCD75620(v33, a2, v37, v49, v24);
    swift_release();
    goto LABEL_10;
  }
  id v27 = v53;
  if (*(unsigned char *)(a1 + 33))
  {
    uint64_t v28 = v47;
    sub_1DCDB40EC(v47);
    int v29 = sub_1DD048048();
    os_log_type_t v30 = sub_1DD048848();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_1DCCF9000, v29, v30, "Publisher timed out. Default false.", v31, 2u);
      MEMORY[0x1E01B07E0](v31, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v28, v51);
    uint64_t v32 = v52;
    swift_retain();
    swift_retain();
    sub_1DCD75620(0, a2, v32, v49, v24);
    swift_release();
LABEL_10:
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_19;
  }
  if (!*(void *)(a1 + 48)) {
    sub_1DCEC8520();
  }
  uint64_t v38 = v48;
  sub_1DCDB40EC(v48);
  uint64_t v39 = sub_1DD048048();
  os_log_type_t v40 = sub_1DD048848();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl(&dword_1DCCF9000, v39, v40, "Pending values", v41, 2u);
    MEMORY[0x1E01B07E0](v41, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v38, v51);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = sub_1DCECA134;
  *((void *)v16 + 3) = v27;
  uint64_t v20 = (void *)(a1 + 40);
  swift_beginAccess();
  a5 = *(void **)(a1 + 40);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 40) = a5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_21;
  }
LABEL_16:
  unint64_t v44 = a5[2];
  unint64_t v43 = a5[3];
  if (v44 >= v43 >> 1)
  {
    a5 = sub_1DCE9F544((void *)(v43 > 1), v44 + 1, 1, a5);
    *uint64_t v20 = a5;
  }
  a5[2] = v44 + 1;
  uint64_t v45 = &a5[2 * v44];
  v45[4] = sub_1DCECA1E8;
  v45[5] = v16;
  swift_endAccess();
  swift_release();
  swift_release();
LABEL_19:
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1DCECA124(unint64_t a1)
{
  return sub_1DCF5AAC4(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

unint64_t sub_1DCECA134(char a1)
{
  return sub_1DCD6DA38(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1DCECA140()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1DCECA190(unint64_t a1)
{
  return sub_1DCEB3A3C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40), *(void *)(v1 + 48));
}

uint64_t objectdestroy_32Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1DCECA204(uint64_t a1, unint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v336 = a4;
  unsigned int v328 = a3;
  uint64_t v342 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0);
  uint64_t v307 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v309 = (uint64_t)&v279 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v308 = v7;
  MEMORY[0x1F4188790](v8);
  v311 = (char *)&v279 - v9;
  uint64_t v318 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v318);
  v310 = (uint64_t *)((char *)&v279 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v312 = (uint64_t)&v279 - v12;
  uint64_t v306 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v306);
  v314 = (char *)&v279 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v305 = (uint64_t)&v279 - v15;
  MEMORY[0x1F4188790](v16);
  v317 = (char *)&v279 - v17;
  uint64_t v18 = sub_1DD046478();
  uint64_t v330 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  v321 = (char *)&v279 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  v304 = (char *)&v279 - v21;
  MEMORY[0x1F4188790](v22);
  v331 = (char *)&v279 - v23;
  uint64_t v24 = sub_1DD048068();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  v320 = (char *)&v279 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  v316 = (char *)&v279 - v28;
  MEMORY[0x1F4188790](v29);
  v319 = (char *)&v279 - v30;
  MEMORY[0x1F4188790](v31);
  v315 = (char *)&v279 - v32;
  MEMORY[0x1F4188790](v33);
  v303 = (char *)&v279 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v313 = (uint64_t)&v279 - v36;
  MEMORY[0x1F4188790](v37);
  v323 = (uint64_t *)((char *)&v279 - v38);
  MEMORY[0x1F4188790](v39);
  v322 = (uint64_t *)((char *)&v279 - v40);
  MEMORY[0x1F4188790](v41);
  v325 = (char *)&v279 - v42;
  MEMORY[0x1F4188790](v43);
  v329 = (char *)&v279 - v44;
  MEMORY[0x1F4188790](v45);
  unint64_t v333 = (unint64_t)&v279 - v46;
  MEMORY[0x1F4188790](v47);
  unint64_t v49 = (char *)&v279 - v48;
  MEMORY[0x1F4188790](v50);
  uint64_t v52 = (char *)&v279 - v51;
  MEMORY[0x1F4188790](v53);
  uint64_t v55 = (char *)&v279 - v54;
  uint64_t v324 = a1;
  *(void *)&long long v340 = a1;
  *((void *)&v340 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_1DD048548();
  long long v56 = v340;
  swift_bridgeObjectRetain();
  uint64_t v332 = v56;
  int v57 = sub_1DCFDE018();
  uint64_t v335 = v24;
  if (v57 == 63)
  {
    uint64_t v58 = v25;
    swift_bridgeObjectRelease();
    sub_1DCDB40EC((uint64_t)v55);
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1DD048048();
    os_log_type_t v60 = sub_1DD048858();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(void *)&long long v340 = v62;
      *(_DWORD *)uint64_t v61 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v338 = sub_1DCED7FA0(v332, *((unint64_t *)&v56 + 1), (uint64_t *)&v340);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, (os_log_t)v56, v60, "TrialModelProvider failed: model info factor name %s not a supported Trial Factor Name", v61, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v62, -1, -1);
      MEMORY[0x1E01B07E0](v61, -1, -1);

      swift_release();
    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v335);
    goto LABEL_13;
  }
  int v63 = v57;
  unint64_t v302 = a2;
  sub_1DCDB40EC((uint64_t)v52);
  sub_1DCDB4300((uint64_t)v49);
  uint64_t v300 = v25;
  uint64_t v64 = *(void (**)(char *, uint64_t))(v25 + 8);
  v64(v52, v24);
  swift_bridgeObjectRetain_n();
  uint64_t v65 = sub_1DD048048();
  os_log_type_t v66 = sub_1DD048848();
  BOOL v67 = os_log_type_enabled(v65, v66);
  uint64_t v326 = v18;
  uint64_t v327 = v25 + 8;
  v301 = v64;
  if (v67)
  {
    CGRect v68 = (uint8_t *)swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    *(void *)&long long v340 = v69;
    *(_DWORD *)CGRect v68 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v338 = sub_1DCED7FA0(v332, *((unint64_t *)&v56 + 1), (uint64_t *)&v340);
    uint64_t v24 = v335;
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DCCF9000, (os_log_t)v56, v66, "TrialModelProvider: init with info factor %s", v68, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v69, -1, -1);
    MEMORY[0x1E01B07E0](v68, -1, -1);

    CGRect v70 = (void (*)(unint64_t, uint64_t))v301;
    v301(v49, v24);
    CGRect v71 = v70;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v64(v49, v24);
    CGRect v71 = (void (*)(unint64_t, uint64_t))v64;
  }
  uint64_t v72 = sub_1DCFD9704(v63, v328, 0x7473696C70, 0xE500000000000000);
  unint64_t v74 = v73;
  unint64_t v75 = v333;
  sub_1DCDB40EC(v333);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v76 = sub_1DD048048();
  os_log_type_t v77 = sub_1DD048848();
  if (os_log_type_enabled(v76, v77))
  {
    uint64_t v78 = swift_slowAlloc();
    uint64_t v79 = swift_slowAlloc();
    *(void *)&long long v340 = v79;
    *(_DWORD *)uint64_t v78 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v338 = sub_1DCED7FA0(v332, *((unint64_t *)&v56 + 1), (uint64_t *)&v340);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v78 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v338 = sub_1DCED7FA0(v72, v74, (uint64_t *)&v340);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DCCF9000, (os_log_t)v56, v77, "TrialModelProvider: init with info factor %s, info path %s", (uint8_t *)v78, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v79, -1, -1);
    MEMORY[0x1E01B07E0](v78, -1, -1);

    unint64_t v80 = v333;
    uint64_t v81 = v335;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    unint64_t v80 = v75;
    uint64_t v81 = v24;
  }
  v71(v80, v81);
  uint64_t v83 = v330;
  uint64_t v82 = v331;
  uint64_t v84 = v326;
  sub_1DD0463C8();
  swift_bridgeObjectRelease();
  uint64_t v85 = sub_1DD046488();
  uint64_t v86 = (uint64_t)v329;
  uint64_t v89 = v85;
  unint64_t v91 = v90;
  uint64_t v92 = self;
  uint64_t v93 = (void *)sub_1DD0464D8();
  *(void *)&long long v340 = 0;
  id v94 = objc_msgSend(v92, sel_propertyListWithData_options_format_error_, v93, 1, 0, &v340);

  if (!v94)
  {
    id v100 = (id)v340;
    swift_bridgeObjectRelease();
    uint64_t v101 = (void *)sub_1DD046378();

    swift_willThrow();
LABEL_22:
    sub_1DCDB40EC(v86);
    sub_1DCD33F64(v89, v91);
    sub_1DCD33F64(v89, v91);
    v102 = sub_1DD048048();
    os_log_type_t v103 = sub_1DD048858();
    if (os_log_type_enabled(v102, v103))
    {
      id v104 = (uint8_t *)swift_slowAlloc();
      uint64_t v105 = swift_slowAlloc();
      *(void *)&long long v340 = v105;
      *(_DWORD *)id v104 = 136315138;
      sub_1DCD33F64(v89, v91);
      uint64_t v106 = sub_1DD046498();
      uint64_t v107 = v89;
      unint64_t v109 = v108;
      sub_1DCD21954(v107, v91);
      uint64_t v338 = sub_1DCED7FA0(v106, v109, (uint64_t *)&v340);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD21954(v107, v91);
      sub_1DCD21954(v107, v91);
      _os_log_impl(&dword_1DCCF9000, v102, v103, "TrialModelProvider failed to load info plist %s", v104, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v105, -1, -1);
      MEMORY[0x1E01B07E0](v104, -1, -1);

      swift_release();
      sub_1DCD21954(v107, v91);
      v301(v329, v335);
      (*(void (**)(char *, uint64_t))(v330 + 8))(v331, v326);
LABEL_13:
      type metadata accessor for TrialModelProvider();
      swift_deallocPartialClassInstance();
      return 0;
    }

    swift_release();
    sub_1DCD21954(v89, v91);
    sub_1DCD21954(v89, v91);
    sub_1DCD21954(v89, v91);
    v110 = (uint64_t *)v86;
LABEL_25:
    v301((char *)v110, v335);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v84);
    goto LABEL_13;
  }
  unint64_t v333 = v91;
  id v95 = (id)v340;
  sub_1DD048AC8();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F08);
  uint64_t v96 = MEMORY[0x1E4FBC840];
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    unint64_t v91 = v333;
    goto LABEL_22;
  }
  uint64_t v97 = v338;
  if (*(void *)(v338 + 16) && (unint64_t v98 = sub_1DCEAD1A4(0x4C45444F4D5F4956, 0xE800000000000000), (v99 & 1) != 0))
  {
    sub_1DCD21A28(*(void *)(v97 + 56) + 32 * v98, (uint64_t)&v340);
  }
  else
  {
    long long v340 = 0u;
    long long v341 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v341 + 1))
  {
    sub_1DCD2479C((uint64_t)&v340, &qword_1EAB041B0);
    uint64_t v112 = (uint64_t)v325;
LABEL_34:
    sub_1DCDB40EC(v112);
    unint64_t v119 = v302;
    swift_bridgeObjectRetain();
    uint64_t v120 = sub_1DD048048();
    os_log_type_t v121 = sub_1DD048858();
    if (os_log_type_enabled(v120, v121))
    {
      uint64_t v332 = v89;
      v122 = (uint8_t *)swift_slowAlloc();
      uint64_t v123 = swift_slowAlloc();
      *(void *)&long long v340 = v123;
      *(_DWORD *)v122 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v338 = sub_1DCED7FA0(v324, v119, (uint64_t *)&v340);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v120, v121, "TrialModelProvider missing VI_MODEL dict for model name %s", v122, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v123, -1, -1);
      MEMORY[0x1E01B07E0](v122, -1, -1);

      swift_release();
      sub_1DCD21954(v332, v333);
      v301((char *)v112, v335);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v331, v326);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release();
      sub_1DCD21954(v89, v333);
      v301((char *)v112, v335);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v326);
    }
    goto LABEL_13;
  }
  char v111 = swift_dynamicCast();
  uint64_t v112 = (uint64_t)v325;
  if ((v111 & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v113 = v338;
  uint64_t v114 = *(void *)(v338 + 16);
  v329 = (char *)v338;
  if (v114
    && (unint64_t v115 = sub_1DCEAD1A4(0x6361466C65646F6DLL, 0xEF656D614E726F74), (v116 & 1) != 0)
    && (sub_1DCD21A28(*(void *)(v113 + 56) + 32 * v115, (uint64_t)&v340), swift_dynamicCast()))
  {
    uint64_t v118 = v338;
    unint64_t v117 = v339;
  }
  else
  {
    uint64_t v118 = 0;
    unint64_t v117 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  int v124 = sub_1DCFDE018();
  if (v124 == 63)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v125 = v322;
    sub_1DCDB40EC((uint64_t)v322);
    swift_bridgeObjectRetain();
    uint64_t v126 = sub_1DD048048();
    os_log_type_t v127 = sub_1DD048858();
    if (os_log_type_enabled(v126, v127))
    {
      uint64_t v332 = v89;
      char v128 = (uint8_t *)swift_slowAlloc();
      uint64_t v129 = swift_slowAlloc();
      *(void *)&long long v340 = v129;
      *(_DWORD *)char v128 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v338 = sub_1DCED7FA0(v118, v117, (uint64_t *)&v340);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v126, v127, "TrialModelProvider failed: model factor name %s not a supported Trial Factor Name", v128, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v129, -1, -1);
      MEMORY[0x1E01B07E0](v128, -1, -1);

      swift_release();
      sub_1DCD21954(v332, v333);
      v301((char *)v125, v335);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v331, v326);
      goto LABEL_13;
    }
    swift_bridgeObjectRelease_n();

    swift_release();
    sub_1DCD21954(v89, v333);
    v110 = v125;
    goto LABEL_25;
  }
  int v130 = v124;
  swift_bridgeObjectRelease();
  uint64_t v131 = sub_1DCFD9704(v130, v328, 0, 0xE000000000000000);
  uint64_t v133 = v132;
  v134 = v329;
  if (!*((void *)v329 + 2)
    || (v135 = v131, unint64_t v136 = sub_1DCEAD1A4(1701605234, 0xE400000000000000), (v137 & 1) == 0)
    || (sub_1DCD21A28(*((void *)v134 + 7) + 32 * v136, (uint64_t)&v340), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCDB40EC((uint64_t)v323);
    v146 = sub_1DD048048();
    os_log_type_t v147 = sub_1DD048858();
    BOOL v148 = os_log_type_enabled(v146, v147);
    unint64_t v149 = v333;
    if (v148)
    {
      uint64_t v150 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v150 = 0;
      _os_log_impl(&dword_1DCCF9000, v146, v147, "TrialModelProvider: found model without role", v150, 2u);
      MEMORY[0x1E01B07E0](v150, -1, -1);
    }

    swift_release();
    sub_1DCD21954(v89, v149);
    v110 = v323;
    goto LABEL_25;
  }
  uint64_t v299 = v133;
  uint64_t v139 = v338;
  unint64_t v138 = v339;
  swift_bridgeObjectRetain();
  int v140 = sub_1DCEA523C();
  if (v140 == 7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v141 = v313;
    sub_1DCDB40EC(v313);
    swift_bridgeObjectRetain();
    unint64_t v142 = sub_1DD048048();
    os_log_type_t v143 = sub_1DD048858();
    if (os_log_type_enabled(v142, v143))
    {
      uint64_t v332 = v89;
      unint64_t v144 = (uint8_t *)swift_slowAlloc();
      uint64_t v145 = swift_slowAlloc();
      *(void *)&long long v340 = v145;
      *(_DWORD *)unint64_t v144 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v338 = sub_1DCED7FA0(v139, v138, (uint64_t *)&v340);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v142, v143, "TrialModelProvider: found model with unknown role %s", v144, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v145, -1, -1);
      MEMORY[0x1E01B07E0](v144, -1, -1);

      swift_release();
      sub_1DCD21954(v332, v333);
      v301((char *)v141, v335);
      (*(void (**)(char *, uint64_t))(v330 + 8))(v331, v84);
      goto LABEL_13;
    }
    swift_bridgeObjectRelease_n();

    swift_release();
    sub_1DCD21954(v89, v333);
    v110 = (uint64_t *)v141;
    goto LABEL_25;
  }
  int v290 = v140;
  swift_bridgeObjectRelease();
  unint64_t v337 = sub_1DCDB88EC(MEMORY[0x1E4FBC860]);
  uint64_t v151 = v329;
  uint64_t v152 = *((void *)v329 + 2);
  uint64_t v332 = v89;
  if (!v152 || (unint64_t v153 = sub_1DCEAD1A4(0x737465737361, 0xE600000000000000), (v154 & 1) == 0))
  {
LABEL_142:
    if (!*((void *)v151 + 2)) {
      goto LABEL_150;
    }
LABEL_143:
    unint64_t v239 = sub_1DCEAD1A4(0x61656869746C756DLL, 0xE900000000000064);
    if ((v240 & 1) != 0
      && (sub_1DCD21A28(*((void *)v151 + 7) + 32 * v239, (uint64_t)&v340),
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84EE0),
          (swift_dynamicCast() & 1) != 0))
    {
      uint64_t v241 = v338;
      *(void *)&long long v340 = sub_1DCDB87D0(MEMORY[0x1E4FBC860]);
      MEMORY[0x1F4188790](v340);
      *(&v279 - 2) = (uint64_t)&v340;
      sub_1DCECD168(v241, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DCECD62C);
      uint64_t v151 = v329;
      swift_bridgeObjectRelease();
      uint64_t v335 = v340;
    }
    else
    {
LABEL_150:
      uint64_t v335 = 0;
    }
    sub_1DD0463C8();
    swift_bridgeObjectRelease();
    if (*((void *)v151 + 2)
      && (unint64_t v246 = sub_1DCEAD1A4(7238261, 0xE300000000000000), (v247 & 1) != 0)
      && (sub_1DCD21A28(*((void *)v151 + 7) + 32 * v246, (uint64_t)&v340), swift_dynamicCast()))
    {
      uint64_t v248 = v338;
      unint64_t v249 = v339;
    }
    else
    {
      uint64_t v248 = 0;
      unint64_t v249 = 0xE000000000000000;
    }
    v250 = v329;
    if (*((void *)v329 + 2) && (unint64_t v251 = sub_1DCEAD1A4(0x44496C65646F6DLL, 0xE700000000000000), (v252 & 1) != 0))
    {
      sub_1DCD21A28(*((void *)v250 + 7) + 32 * v251, (uint64_t)&v340);
    }
    else
    {
      long long v340 = 0u;
      long long v341 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v341 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v253 = v338;
        unint64_t v254 = v339;
LABEL_165:
        swift_beginAccess();
        unint64_t v255 = v337;
        uint64_t v256 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
        uint64_t v257 = (uint64_t)v311;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v256 - 8) + 56))(v311, 1, 1, v256);
        uint64_t v258 = (uint64_t)v310;
        unint64_t v259 = v302;
        void *v310 = v324;
        *(void *)(v258 + 8) = v259;
        v260 = (int *)v318;
        (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v258 + *(int *)(v318 + 20), v321, v84);
        v261 = (uint64_t *)(v258 + v260[6]);
        uint64_t *v261 = v248;
        v261[1] = v249;
        v262 = (uint64_t *)(v258 + v260[7]);
        uint64_t *v262 = v253;
        v262[1] = v254;
        *(unsigned char *)(v258 + v260[8]) = v290;
        *(void *)(v258 + v260[9]) = v255;
        *(void *)(v258 + v260[10]) = v335;
        uint64_t v263 = v257;
        uint64_t v264 = v309;
        sub_1DCECD308(v257, v309);
        unint64_t v265 = (*(unsigned __int8 *)(v307 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v307 + 80);
        unint64_t v266 = (v308 + v265 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v267 = swift_allocObject();
        sub_1DCECD4C4(v264, v267 + v265);
        *(void *)(v267 + v266) = v255;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86298);
        uint64_t v268 = swift_allocObject();
        uint64_t v269 = v268 + *(void *)(*(void *)v268 + 152);
        uint64_t v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B38);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v270 - 8) + 56))(v269, 1, 1, v270);
        v271 = (uint64_t *)(v268 + *(void *)(*(void *)v268 + 160));
        uint64_t *v271 = 0;
        v271[1] = 0;
        v272 = (void *)(v268 + *(void *)(*(void *)v268 + 168));
        void *v272 = 0;
        v272[1] = 0;
        uint64_t v273 = *(void *)(*(void *)v268 + 184);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
        uint64_t v274 = swift_allocObject();
        *(_DWORD *)(v274 + 16) = 0;
        *(void *)(v268 + v273) = v274;
        uint64_t v275 = *v271;
        uint64_t *v271 = (uint64_t)sub_1DCECD52C;
        v271[1] = v267;
        swift_bridgeObjectRetain_n();
        swift_retain();
        swift_retain();
        sub_1DCD33E90(v275);
        *(void *)(v268 + *(void *)(*(void *)v268 + 176)) = 2;
        swift_release();
        uint64_t v276 = sub_1DCF31D08();
        swift_release();
        sub_1DCD2479C(v263, &qword_1EBE85DB0);
        v277 = *(void (**)(char *, uint64_t))(v83 + 8);
        v277(v321, v84);
        *(void *)(v258 + *(int *)(v318 + 44)) = v276;
        uint64_t v278 = v312;
        sub_1DCECD5C8(v258, v312);
        swift_release();
        sub_1DCD21954(v332, v333);
        v277(v331, v84);
        uint64_t v87 = v334;
        sub_1DCECD5C8(v278, v334 + OBJC_IVAR____TtC18VisualIntelligence18TrialModelProvider_info);
        swift_bridgeObjectRelease();
        return v87;
      }
    }
    else
    {
      sub_1DCD2479C((uint64_t)&v340, &qword_1EAB041B0);
    }
    uint64_t v253 = 0;
    unint64_t v254 = 0xE000000000000000;
    goto LABEL_165;
  }
  sub_1DCD21A28(*((void *)v151 + 7) + 32 * v153, (uint64_t)&v340);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84ED0);
  uint64_t v286 = v96 + 8;
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
    uint64_t v151 = v329;
    goto LABEL_142;
  }
  uint64_t v279 = v135;
  int64_t v156 = 0;
  uint64_t v157 = *(void *)(v338 + 64);
  uint64_t v287 = v338 + 64;
  uint64_t v292 = v338;
  uint64_t v158 = 1 << *(unsigned char *)(v338 + 32);
  uint64_t v159 = -1;
  if (v158 < 64) {
    uint64_t v159 = ~(-1 << v158);
  }
  unint64_t v160 = v159 & v157;
  int64_t v288 = (unint64_t)(v158 + 63) >> 6;
  v323 = (uint64_t *)(v300 + 16);
  v285 = &v339;
  v294 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56);
  v291 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
  v284 = (void (**)(char *, uint64_t, uint64_t))(v83 + 32);
  uint64_t v280 = v83 + 16;
  v283 = (char *)&v340 + 8;
  *(void *)&long long v155 = 136315650;
  long long v282 = v155;
  *(void *)&long long v155 = 136315906;
  long long v281 = v155;
  uint64_t v161 = v335;
  while (1)
  {
    if (v160)
    {
      unint64_t v162 = __clz(__rbit64(v160));
      uint64_t v163 = (v160 - 1) & v160;
      unint64_t v164 = v162 | (v156 << 6);
    }
    else
    {
      int64_t v165 = v156 + 1;
      if (__OFADD__(v156, 1)) {
        goto LABEL_170;
      }
      if (v165 >= v288)
      {
LABEL_149:
        swift_release();
        uint64_t v151 = v329;
        uint64_t v83 = v330;
        if (*((void *)v329 + 2)) {
          goto LABEL_143;
        }
        goto LABEL_150;
      }
      unint64_t v166 = *(void *)(v287 + 8 * v165);
      ++v156;
      if (!v166)
      {
        int64_t v156 = v165 + 1;
        if (v165 + 1 >= v288) {
          goto LABEL_149;
        }
        unint64_t v166 = *(void *)(v287 + 8 * v156);
        if (!v166)
        {
          int64_t v156 = v165 + 2;
          if (v165 + 2 >= v288) {
            goto LABEL_149;
          }
          unint64_t v166 = *(void *)(v287 + 8 * v156);
          if (!v166)
          {
            int64_t v167 = v165 + 3;
            if (v167 >= v288) {
              goto LABEL_149;
            }
            unint64_t v166 = *(void *)(v287 + 8 * v167);
            if (!v166)
            {
              uint64_t v161 = v335;
              while (1)
              {
                int64_t v156 = v167 + 1;
                if (__OFADD__(v167, 1)) {
                  goto LABEL_171;
                }
                if (v156 >= v288) {
                  goto LABEL_149;
                }
                unint64_t v166 = *(void *)(v287 + 8 * v156);
                ++v167;
                if (v166) {
                  goto LABEL_76;
                }
              }
            }
            int64_t v156 = v167;
            uint64_t v161 = v335;
          }
        }
      }
LABEL_76:
      uint64_t v163 = (v166 - 1) & v166;
      unint64_t v164 = __clz(__rbit64(v166)) + (v156 << 6);
    }
    uint64_t v168 = 16 * v164;
    v169 = (uint64_t *)(*(void *)(v292 + 48) + v168);
    uint64_t v170 = *v169;
    unint64_t v171 = v169[1];
    uint64_t v172 = (uint64_t *)(*(void *)(v292 + 56) + v168);
    uint64_t v173 = *v172;
    uint64_t v174 = (char *)v172[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v298 = v170;
    LODWORD(v300) = sub_1DCD28850();
    if (v300 == 11)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCD21954(v332, v333);
LABEL_168:
      swift_release();
      (*(void (**)(char *, uint64_t))(v330 + 8))(v331, v84);
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    uint64_t v297 = v173;
    *(void *)&long long v340 = v173;
    *((void *)&v340 + 1) = v174;
    uint64_t v338 = 46;
    unint64_t v339 = 0xE100000000000000;
    sub_1DCD21A84();
    uint64_t result = sub_1DD048A48();
    if (!*(void *)(result + 16)) {
      break;
    }
    uint64_t v176 = *(void *)(result + 32);
    unint64_t v175 = *(void *)(result + 40);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    int v177 = sub_1DCFDE018();
    if (v177 == 63)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCDB40EC((uint64_t)v303);
      swift_bridgeObjectRetain();
      v242 = sub_1DD048048();
      os_log_type_t v243 = sub_1DD048858();
      if (os_log_type_enabled(v242, v243))
      {
        v244 = (uint8_t *)swift_slowAlloc();
        uint64_t v245 = swift_slowAlloc();
        *(void *)&long long v340 = v245;
        *(_DWORD *)v244 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v338 = sub_1DCED7FA0(v176, v175, (uint64_t *)&v340);
        sub_1DD048A28();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DCCF9000, v242, v243, "TrialModelProvider failed: asset factor name %s not a supported Trial Factor Name", v244, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v245, -1, -1);
        MEMORY[0x1E01B07E0](v244, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      swift_release();
      sub_1DCD21954(v332, v333);
      v301(v303, v335);
      goto LABEL_168;
    }
    LODWORD(v313) = v177;
    swift_bridgeObjectRelease();
    if (qword_1EBE87190 != -1) {
      swift_once();
    }
    v325 = v174;
    int64_t v295 = v156;
    unint64_t v296 = v163;
    if (byte_1EBE87188 != 1) {
      goto LABEL_92;
    }
    if (sub_1DCDE82EC())
    {
      v178 = (uint64_t *)&off_1EAB02A48;
      if (qword_1EAB01C28 != -1)
      {
        swift_once();
        v178 = (uint64_t *)&off_1EAB02A48;
      }
    }
    else
    {
      v178 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        v178 = &qword_1EBE871E8;
      }
    }
    unint64_t v179 = *(void **)(*v178 + 32);
    swift_retain();
    unint64_t v180 = (void *)sub_1DD0483D8();
    LODWORD(v179) = objc_msgSend(v179, sel_BOOLForKey_, v180, v279, v280);
    swift_release();

    if (v179)
    {
      if (qword_1EAB01C80 != -1) {
        swift_once();
      }
      uint64_t v181 = v161;
      uint64_t v182 = qword_1EAB02B70;
    }
    else
    {
LABEL_92:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v181 = v161;
      uint64_t v182 = qword_1EBE871A8;
    }
    uint64_t v183 = __swift_project_value_buffer(v181, (uint64_t)v182);
    uint64_t v184 = v315;
    v322 = (uint64_t *)*v323;
    ((void (*)(char *, uint64_t, uint64_t))v322)(v315, v183, v161);
    uint64_t v185 = v319;
    if ((byte_1EBE87188 & 1) == 0) {
      goto LABEL_103;
    }
    if (sub_1DCDE82EC())
    {
      v186 = (uint64_t *)&off_1EAB02A48;
      if (qword_1EAB01C28 != -1)
      {
        swift_once();
        v186 = (uint64_t *)&off_1EAB02A48;
      }
    }
    else
    {
      v186 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        v186 = &qword_1EBE871E8;
      }
    }
    uint64_t v187 = *(void **)(*v186 + 32);
    swift_retain();
    uint64_t v188 = (void *)sub_1DD0483D8();
    LODWORD(v187) = objc_msgSend(v187, sel_BOOLForKey_, v188);
    swift_release();

    if (v187)
    {
      v189 = v185;
      uint64_t v190 = (uint64_t)v184;
    }
    else
    {
LABEL_103:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v190 = __swift_project_value_buffer(v161, (uint64_t)qword_1EBE871A8);
      v189 = v185;
    }
    ((void (*)(char *, uint64_t, uint64_t))v322)(v189, v190, v161);
    uint64_t v191 = v301;
    v301(v184, v161);
    swift_bridgeObjectRetain_n();
    unint64_t v192 = v171;
    unint64_t v193 = (unint64_t)v325;
    swift_bridgeObjectRetain_n();
    uint64_t v194 = sub_1DD048048();
    os_log_type_t v195 = sub_1DD048848();
    int v196 = v195;
    if (os_log_type_enabled(v194, v195))
    {
      uint64_t v197 = swift_slowAlloc();
      LODWORD(v293) = v196;
      uint64_t v198 = v197;
      uint64_t v289 = swift_slowAlloc();
      *(void *)&long long v340 = v289;
      *(_DWORD *)uint64_t v198 = v282;
      swift_bridgeObjectRetain();
      uint64_t v338 = sub_1DCED7FA0(v298, v192, (uint64_t *)&v340);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v198 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v338 = sub_1DCED7FA0(v297, v193, (uint64_t *)&v340);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v198 + 22) = 2080;
      int v199 = v313;
      unint64_t v200 = sub_1DCFD8BF4(v313);
      uint64_t v338 = sub_1DCED7FA0(v200, v201, (uint64_t *)&v340);
      uint64_t v161 = v335;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v194, (os_log_type_t)v293, "TrialModelProvider: retrieving path for model related asset %s %s %s", (uint8_t *)v198, 0x20u);
      uint64_t v202 = v289;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v202, -1, -1);
      MEMORY[0x1E01B07E0](v198, -1, -1);

      v191(v319, v161);
      uint64_t v203 = (uint64_t)v317;
      unint64_t v204 = v316;
      unint64_t v205 = v192;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v191(v185, v161);
      uint64_t v203 = (uint64_t)v317;
      unint64_t v204 = v316;
      unint64_t v205 = v192;
      int v199 = v313;
    }
    sub_1DCFD9704(v199, v328, 1852797802, 0xE400000000000000);
    sub_1DD0463C8();
    swift_bridgeObjectRelease();
    v293 = *v294;
    v293(v203, 0, 1, v84);
    swift_beginAccess();
    if ((*v291)(v203, 1, v84) == 1)
    {
      sub_1DCD2479C(v203, &qword_1EBE848E0);
      uint64_t v206 = v305;
      sub_1DCE9063C(v300, v305);
      sub_1DCD2479C(v206, &qword_1EBE848E0);
    }
    else
    {
      uint64_t v207 = (uint64_t)v304;
      (*v284)(v304, v203, v84);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v338 = v337;
      unint64_t v337 = 0x8000000000000000;
      sub_1DCE861BC(v207, v300, isUniquelyReferenced_nonNull_native);
      unint64_t v337 = v338;
      swift_bridgeObjectRelease();
    }
    unint64_t v209 = v322;
    swift_endAccess();
    if (byte_1EBE87188 != 1) {
      goto LABEL_121;
    }
    if (sub_1DCDE82EC())
    {
      uint64_t v210 = (uint64_t *)&off_1EAB02A48;
      if (qword_1EAB01C28 != -1)
      {
        swift_once();
        uint64_t v210 = (uint64_t *)&off_1EAB02A48;
      }
    }
    else
    {
      uint64_t v210 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v210 = &qword_1EBE871E8;
      }
    }
    uint64_t v211 = *(void **)(*v210 + 32);
    swift_retain();
    unint64_t v212 = (void *)sub_1DD0483D8();
    LODWORD(v211) = objc_msgSend(v211, sel_BOOLForKey_, v212);
    swift_release();

    if (v211)
    {
      uint64_t v213 = qword_1EAB02B70;
      if (qword_1EAB01C80 != -1)
      {
        swift_once();
        uint64_t v213 = qword_1EAB02B70;
      }
    }
    else
    {
LABEL_121:
      uint64_t v213 = qword_1EBE871A8;
      if (qword_1EBE871C8 != -1)
      {
        swift_once();
        uint64_t v213 = qword_1EBE871A8;
      }
    }
    uint64_t v214 = __swift_project_value_buffer(v161, (uint64_t)v213);
    ((void (*)(char *, uint64_t, uint64_t))v209)(v204, v214, v161);
    if ((byte_1EBE87188 & 1) == 0) {
      goto LABEL_131;
    }
    if (sub_1DCDE82EC())
    {
      v215 = (uint64_t *)&off_1EAB02A48;
      if (qword_1EAB01C28 != -1)
      {
        swift_once();
        v215 = (uint64_t *)&off_1EAB02A48;
      }
    }
    else
    {
      v215 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        v215 = &qword_1EBE871E8;
      }
    }
    v216 = *(void **)(*v215 + 32);
    swift_retain();
    v217 = (void *)sub_1DD0483D8();
    LODWORD(v216) = objc_msgSend(v216, sel_BOOLForKey_, v217);
    swift_release();

    if (v216)
    {
      v218 = v320;
      v219 = v320;
      uint64_t v220 = (uint64_t)v204;
    }
    else
    {
LABEL_131:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v220 = __swift_project_value_buffer(v161, (uint64_t)qword_1EBE871A8);
      v218 = v320;
      v219 = v320;
    }
    ((void (*)(char *, uint64_t, uint64_t))v209)(v219, v220, v161);
    v221 = (uint64_t (*)(char *, uint64_t))v301;
    v301(v204, v161);
    swift_bridgeObjectRetain();
    unint64_t v222 = v205;
    swift_bridgeObjectRetain();
    v223 = sub_1DD048048();
    os_log_type_t v224 = sub_1DD048848();
    BOOL v225 = os_log_type_enabled(v223, v224);
    unint64_t v160 = v296;
    if (v225)
    {
      uint64_t v226 = swift_slowAlloc();
      v227 = (uint64_t *)swift_slowAlloc();
      uint64_t v338 = (uint64_t)v227;
      *(_DWORD *)uint64_t v226 = v281;
      swift_beginAccess();
      unint64_t v228 = v337;
      uint64_t v229 = *(void *)(v337 + 16);
      v322 = v227;
      if (v229 && (uint64_t v230 = sub_1DCEAD428(v300), (v231 & 1) != 0))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v330 + 16))(v314, *(void *)(v228 + 56) + *(void *)(v330 + 72) * v230, v84);
        uint64_t v232 = 0;
      }
      else
      {
        uint64_t v232 = 1;
      }
      v293((uint64_t)v314, v232, 1, v84);
      swift_endAccess();
      uint64_t v233 = sub_1DD048478();
      *(void *)&long long v340 = sub_1DCED7FA0(v233, v234, &v338);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v226 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v340 = sub_1DCED7FA0(v298, v222, &v338);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v226 + 22) = 2080;
      unint64_t v235 = (unint64_t)v325;
      swift_bridgeObjectRetain();
      *(void *)&long long v340 = sub_1DCED7FA0(v297, v235, &v338);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v226 + 32) = 2080;
      unint64_t v236 = sub_1DCFD8BF4(v313);
      *(void *)&long long v340 = sub_1DCED7FA0(v236, v237, &v338);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v223, v224, "TrialModelProvider: stored url '%s' for model related asset %s %s %s", (uint8_t *)v226, 0x2Au);
      v238 = v322;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v238, -1, -1);
      MEMORY[0x1E01B07E0](v226, -1, -1);

      uint64_t v161 = v335;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v301)(v320, v335);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t result = v221(v218, v161);
    }
    int64_t v156 = v295;
  }
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
  return result;
}

uint64_t sub_1DCECD09C()
{
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence18TrialModelProvider_info);
  return swift_deallocClassInstance();
}

uint64_t sub_1DCECD100()
{
  return type metadata accessor for TrialModelProvider();
}

uint64_t type metadata accessor for TrialModelProvider()
{
  uint64_t result = qword_1EBE86C40;
  if (!qword_1EBE86C40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCECD154@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD56CC8(v1 + OBJC_IVAR____TtC18VisualIntelligence18TrialModelProvider_info, a1);
}

uint64_t sub_1DCECD168(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v4 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v4 + 8 * v10);
        if (!v18)
        {
          int64_t v10 = v17 + 3;
          if (v17 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v4 + 8 * v10);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v14, v15, v16);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v8) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v4 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DCECD308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCECD370()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v3, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v0 + v3 + *(int *)(v5 + 24);
    uint64_t v7 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1DCECD4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCECD52C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1DCD26ABC(v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_1DCECD5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MLModelInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCECD62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCFA72AC(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

double sub_1DCECD634@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1DD048068();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v8 - 8);
  int64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DD046478();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v1 + *(int *)(type metadata accessor for MLModelInfo(0) + 36));
  if (*(void *)(v15 + 16) && (uint64_t v16 = sub_1DCEAD428(2), (v17 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, *(void *)(v15 + 56) + *(void *)(v12 + 72) * v16, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
      uint64_t v31 = sub_1DD046488();
      unint64_t v22 = v21;
      sub_1DD0461B8();
      swift_allocObject();
      sub_1DD0461A8();
      sub_1DCEDE080();
      unint64_t v30 = v22;
      sub_1DD046198();
      sub_1DCD21954(v31, v30);
      swift_release();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      uint64_t v23 = v33;
      uint64_t v24 = v35;
      int v25 = v36;
      uint64_t v26 = v37;
      char v27 = v38;
      char v28 = v40;
      *(_OWORD *)a1 = v32;
      *(void *)(a1 + 16) = v23;
      *(_OWORD *)(a1 + 24) = v34;
      *(void *)(a1 + 40) = v24;
      *(_DWORD *)(a1 + 48) = v25;
      *(void *)(a1 + 56) = v26;
      *(unsigned char *)(a1 + 64) = v27 & 1;
      *(_OWORD *)(a1 + 72) = v39;
      *(unsigned char *)(a1 + 88) = v28 & 1;
      double result = v41[0];
      *(_OWORD *)(a1 + 96) = *(_OWORD *)v41;
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_1DCD2479C((uint64_t)v10, &qword_1EBE848E0);
  sub_1DCDB40EC((uint64_t)v7);
  unint64_t v18 = sub_1DD048048();
  os_log_type_t v19 = sub_1DD048858();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_1DCCF9000, v18, v19, "missing metadata", v20, 2u);
    MEMORY[0x1E01B07E0](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  double result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

double sub_1DCECDB18()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86920);
  uint64_t v0 = swift_allocObject();
  *(_DWORD *)(v0 + 40) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 16) = xmmword_1DD052320;
  *(void *)(v0 + 32) = 0;
  qword_1EBE855D0 = v0;
  return result;
}

unint64_t static VisualIntelligenceService.VIErrorDomain.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static VisualIntelligenceService.VIErrorUserFeedbackDomain.getter()
{
  return 0xD000000000000028;
}

unint64_t static VisualIntelligenceService.feedbackTestContainerId.getter()
{
  return 0xD00000000000002DLL;
}

unint64_t static VisualIntelligenceService.feedbackProductionContainerId.getter()
{
  return 0xD000000000000029;
}

uint64_t VisualIntelligenceService.Options.customizedEndpoint.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD2889C(v1, a1, &qword_1EBE848E0);
}

uint64_t VisualIntelligenceService.Options.customizedEndpoint.setter(uint64_t a1)
{
  return sub_1DCE09968(a1, v1, &qword_1EBE848E0);
}

void (*VisualIntelligenceService.Options.customizedEndpoint.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t VisualIntelligenceService.Options.networkTimeoutInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for VisualIntelligenceService.Options(0);
  return sub_1DCD2889C(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&unk_1EBE85380);
}

uint64_t type metadata accessor for VisualIntelligenceService.Options(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE849E8);
}

uint64_t VisualIntelligenceService.Options.networkTimeoutInterval.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for VisualIntelligenceService.Options(0);
  return sub_1DCE09968(a1, v1 + *(int *)(v3 + 20), (uint64_t *)&unk_1EBE85380);
}

void (*VisualIntelligenceService.Options.networkTimeoutInterval.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t VisualIntelligenceService.Options.debugParameters.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for VisualIntelligenceService.Options(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VisualIntelligenceService.Options.debugParameters.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for VisualIntelligenceService.Options(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

void (*VisualIntelligenceService.Options.debugParameters.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t VisualIntelligenceService.Options.mlEngineType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for VisualIntelligenceService.Options(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t VisualIntelligenceService.Options.mlEngineType.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for VisualIntelligenceService.Options(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

void (*VisualIntelligenceService.Options.mlEngineType.modify())(faiss::NormalizationTransform *__hidden this)
{
  return faiss::NormalizationTransform::~NormalizationTransform;
}

uint64_t VisualIntelligenceService.Options.init(customizedEndpoint:networkTimeoutInterval:debugParameters:mlEngineType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v14 = *a5;
  uint64_t v15 = sub_1DD046478();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a6, 1, 1, v15);
  uint64_t v16 = (int *)type metadata accessor for VisualIntelligenceService.Options(0);
  uint64_t v17 = a6 + v16[5];
  uint64_t v18 = sub_1DD0481A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  os_log_type_t v19 = (void *)(a6 + v16[6]);
  *os_log_type_t v19 = 0;
  v19[1] = 0;
  sub_1DCED7F3C(a1, a6, &qword_1EBE848E0);
  sub_1DCED7F3C(a2, v17, (uint64_t *)&unk_1EBE85380);
  swift_bridgeObjectRelease();
  uint64_t v20 = v41;
  *os_log_type_t v19 = v40;
  v19[1] = v20;
  if (v14 == 3) {
    int v21 = 2;
  }
  else {
    int v21 = v14;
  }
  *(unsigned char *)(a6 + v16[7]) = v21;
  sub_1DCDB40EC((uint64_t)v13);
  unint64_t v22 = sub_1DD048048();
  os_log_type_t v23 = sub_1DD048848();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v38 = a2;
    long long v39 = v13;
    uint64_t v24 = v11;
    uint64_t v40 = a1;
    uint64_t v41 = v10;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v43 = v26;
    *(_DWORD *)uint64_t v25 = 136315394;
    unint64_t v27 = 0xE600000000000000;
    unint64_t v28 = 0xE800000000000000;
    uint64_t v29 = 0x6F73736572707365;
    if (v14 != 1)
    {
      uint64_t v29 = 13669;
      unint64_t v28 = 0xE200000000000000;
    }
    if (v14) {
      unint64_t v27 = v28;
    }
    else {
      uint64_t v29 = 0x6E6F69736976;
    }
    if (v14 == 3) {
      uint64_t v30 = 7104878;
    }
    else {
      uint64_t v30 = v29;
    }
    if (v14 == 3) {
      unint64_t v31 = 0xE300000000000000;
    }
    else {
      unint64_t v31 = v27;
    }
    uint64_t v42 = sub_1DCED7FA0(v30, v31, &v43);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    unint64_t v32 = 0xE800000000000000;
    uint64_t v33 = 0x6F73736572707365;
    if (v21 != 1)
    {
      uint64_t v33 = 13669;
      unint64_t v32 = 0xE200000000000000;
    }
    if (v21) {
      uint64_t v34 = v33;
    }
    else {
      uint64_t v34 = 0x6E6F69736976;
    }
    if (v21) {
      unint64_t v35 = v32;
    }
    else {
      unint64_t v35 = 0xE600000000000000;
    }
    uint64_t v36 = v39;
    uint64_t v42 = sub_1DCED7FA0(v34, v35, &v43);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v22, v23, "mlEngineType = %s -> %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v26, -1, -1);
    MEMORY[0x1E01B07E0](v25, -1, -1);

    sub_1DCD2479C(v38, (uint64_t *)&unk_1EBE85380);
    sub_1DCD2479C(v40, &qword_1EBE848E0);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v36, v41);
  }
  else
  {

    sub_1DCD2479C(a2, (uint64_t *)&unk_1EBE85380);
    sub_1DCD2479C(a1, &qword_1EBE848E0);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void *sub_1DCECE2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v147 = a5;
  uint64_t v138 = a4;
  uint64_t v148 = a3;
  uint64_t v151 = a2;
  uint64_t v146 = a1;
  uint64_t v7 = sub_1DD0478F8();
  MEMORY[0x1F4188790](v7 - 8);
  int v140 = &v131[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v145 = &v131[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v149 = &v131[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v144 = (unint64_t)&v131[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v139 = &v131[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  uint64_t v150 = &v131[-v18];
  uint64_t v19 = sub_1DD048878();
  MEMORY[0x1F4188790](v19);
  uint64_t v20 = sub_1DD0481D8();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v21 = sub_1DD048898();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = &v131[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EBE85288 != -1) {
    swift_once();
  }
  uint64_t v25 = (uint64_t *)(qword_1EBE855D0 + 16);
  uint64_t v26 = (os_unfair_lock_s *)(qword_1EBE855D0 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1EBE855D0 + 40));
  sub_1DCECF48C(v25);
  os_unfair_lock_unlock(v26);
  sub_1DCD95648(0, (unint64_t *)&qword_1EBE87140);
  (*(void (**)(unsigned char *, void, uint64_t))(v22 + 104))(v24, *MEMORY[0x1E4FBCC68], v21);
  sub_1DD0481C8();
  uint64_t v156 = MEMORY[0x1E4FBC860];
  sub_1DCEDDDF8(&qword_1EBE87138, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87120);
  sub_1DCE779F4((unint64_t *)&qword_1EBE87128, &qword_1EBE87120);
  sub_1DD048AE8();
  unint64_t v27 = (void *)sub_1DD0488C8();
  v6[2] = v27;
  id v136 = v27;
  uint64_t v28 = v147;
  swift_retain();
  sub_1DCFD9704(7, 0, 1852797802, 0xE400000000000000);
  sub_1DCD204D4(v29, 0, (int64_t)&v156);
  swift_release();
  v6[3] = v156;
  uint64_t v30 = sub_1DCFD9704(10, 0, 0x7478746270, 0xE500000000000000);
  sub_1DCF16280(v30, v31, v150);
  swift_bridgeObjectRelease();
  uint64_t v32 = sub_1DCFD9704(9, 0, 0x7478746270, 0xE500000000000000);
  uint64_t v33 = v144;
  sub_1DCDB350C(v32, v34, v144);
  swift_bridgeObjectRelease();
  sub_1DCEDDEAC(v33, (uint64_t)v6 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  uint64_t v35 = sub_1DCFD9704(8, 0, 0x7478746270, 0xE500000000000000);
  uint64_t v36 = v149;
  sub_1DCF21698(v35, v37, (uint64_t)v149);
  swift_bridgeObjectRelease();
  char v137 = (char *)v6 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_parseConfig;
  sub_1DCEDDEAC((uint64_t)v36, (uint64_t)v6 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_parseConfig, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  uint64_t v38 = sub_1DCFD9704(11, 0, 0x7478746270, 0xE500000000000000);
  long long v39 = v145;
  sub_1DCD7BDE4(v38, v40, v145);
  swift_bridgeObjectRelease();
  sub_1DCEDDEAC((uint64_t)v39, (uint64_t)v6 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_refineRegionConfig, (uint64_t (*)(void))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig);
  uint64_t v41 = type metadata accessor for VisualIntelligenceModelProviderService();
  swift_allocObject();
  uint64_t v42 = swift_retain();
  uint64_t v43 = sub_1DCE113A8(v42);
  v6[8] = v41;
  v6[9] = &off_1F38381F8;
  v6[5] = v43;
  uint64_t v141 = v6 + 5;
  uint64_t v145 = (void *)*(int *)(type metadata accessor for VisualIntelligenceService.Options(0) + 28);
  uint64_t v44 = v151;
  int v132 = *((unsigned __int8 *)v145 + v151);
  sub_1DCD3A3BC((uint64_t)(v6 + 5), (uint64_t)&v156);
  uint64_t v45 = v6[3];
  uint64_t v46 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v156, v157);
  v134 = v131;
  double v47 = MEMORY[0x1F4188790](v46);
  unint64_t v49 = (uint64_t *)&v131[-((v48 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v50 + 16))(v49, v47);
  uint64_t v51 = *v49;
  uint64_t v154 = v41;
  long long v155 = &off_1F38381F8;
  v153[0] = v51;
  type metadata accessor for ObjectDetector();
  uint64_t v52 = (uint64_t *)swift_allocObject();
  uint64_t v53 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v153, v41);
  uint64_t v54 = *(void *)(v41 - 8);
  uint64_t v143 = *(void *)(v54 + 64);
  double v55 = MEMORY[0x1F4188790](v53);
  unint64_t v144 = (v56 + 15) & 0xFFFFFFFFFFFFFFF0;
  int v57 = (uint64_t *)&v131[-v144];
  unint64_t v142 = *(void (**)(unsigned char *, double))(v54 + 16);
  v142(&v131[-v144], v55);
  uint64_t v135 = v54 + 16;
  uint64_t v58 = *v57;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v59 = sub_1DCED8B40(v132, v58, v28, v45, v52);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v153);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
  v6[4] = v59;
  LOBYTE(v58) = *((unsigned char *)v145 + v44);
  sub_1DCD3A3BC((uint64_t)v141, (uint64_t)&v156);
  os_log_type_t v60 = v139;
  sub_1DCEDB47C((uint64_t)v150, (uint64_t)v139, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig);
  uint64_t v61 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v156, v157);
  double v62 = MEMORY[0x1F4188790](v61);
  uint64_t v64 = (uint64_t *)&v131[-((v63 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v65 + 16))(v64, v62);
  uint64_t v66 = *v64;
  uint64_t v154 = v41;
  long long v155 = &off_1F38381F8;
  v153[0] = v66;
  type metadata accessor for DomainModelRegistry();
  uint64_t v67 = swift_allocObject();
  uint64_t v68 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v153, v41);
  double v69 = MEMORY[0x1F4188790](v68);
  CGRect v70 = (uint64_t *)&v131[-v144];
  v142(&v131[-v144], v69);
  uint64_t v71 = *v70;
  v152[3] = v41;
  v152[4] = &off_1F38381F8;
  v152[0] = v71;
  __swift_project_boxed_opaque_existential_1(v152, v41);
  *(void *)(v67 + 16) = sub_1DCED76C0(v58);
  sub_1DCEDDEAC((uint64_t)v60, v67 + OBJC_IVAR____TtC18VisualIntelligence19DomainModelRegistry_domainModelConfig, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v152);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v153);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
  v6[10] = v67;
  type metadata accessor for MemoryPressureObserver();
  swift_allocObject();
  *(void *)((char *)v6 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_memoryObserver) = sub_1DCF323E8();
  uint64_t v72 = OBJC_IVAR____TtC18VisualIntelligence14NetworkService_searchClient;
  uint64_t v73 = v146;
  id v74 = v136;
  sub_1DD047928();
  uint64_t v75 = sub_1DD047908();
  swift_release();
  uint64_t v76 = v73;
  sub_1DD047928();
  uint64_t v77 = (uint64_t)v140;
  sub_1DD047918();
  swift_release();
  type metadata accessor for PegasusProxyEnableListener();
  swift_allocObject();
  int v140 = (unsigned char *)sub_1DCEC6DE8(v74, v75, v77, 5.0);
  uint64_t v78 = v147;
  uint64_t v139 = (char *)sub_1DCFD9704(6, 0, 0x7473696C70, 0xE500000000000000);
  uint64_t v80 = v79;
  uint64_t v81 = *(void *)(v76 + v72);
  uint64_t v82 = sub_1DD0479E8();
  uint64_t v157 = v82;
  uint64_t v158 = &off_1F3837370;
  uint64_t v156 = v81;
  type metadata accessor for AvailableDomainManager();
  uint64_t v83 = (uint64_t *)swift_allocObject();
  uint64_t v84 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v156, v82);
  double v85 = MEMORY[0x1F4188790](v84);
  uint64_t v87 = (uint64_t *)&v131[-((v86 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v88 + 16))(v87, v85);
  uint64_t v89 = *v87;
  swift_retain_n();
  id v90 = v74;
  id v136 = v90;
  uint64_t v91 = (uint64_t)v140;
  swift_retain();
  uint64_t v92 = sub_1DCED8590((uint64_t)v139, v80, (uint64_t)v90, v91, v89, v83);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
  swift_release();
  uint64_t v93 = sub_1DCFD9704(5, 0, 0x7473696C70, 0xE500000000000000);
  unint64_t v95 = v94;
  type metadata accessor for VisualDomainGlyphManager();
  swift_initStackObject();
  uint64_t v139 = (char *)sub_1DCFD0B10(v93, v95);
  sub_1DCD3A3BC((uint64_t)v141, (uint64_t)&v156);
  uint64_t v96 = v6[4];
  LODWORD(v145) = *((unsigned __int8 *)v145 + v151);
  sub_1DCEDB47C((uint64_t)v137, (uint64_t)v149, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  uint64_t v133 = v6;
  uint64_t v97 = v6[3];
  char v137 = (char *)v6[2];
  uint64_t v98 = v6[10];
  uint64_t v99 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v156, v157);
  uint64_t v141 = v131;
  double v100 = MEMORY[0x1F4188790](v99);
  v102 = (uint64_t *)&v131[-((v101 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *, double))(v103 + 16))(v102, v100);
  uint64_t v104 = *v102;
  uint64_t v154 = v41;
  long long v155 = &off_1F38381F8;
  v153[0] = v104;
  type metadata accessor for ParseFlow(0);
  uint64_t v105 = (void *)swift_allocObject();
  uint64_t v106 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v153, v41);
  double v107 = MEMORY[0x1F4188790](v106);
  unint64_t v108 = (uint64_t *)&v131[-v144];
  v142(&v131[-v144], v107);
  uint64_t v109 = *v108;
  swift_retain();
  uint64_t v110 = v96;
  swift_retain();
  uint64_t v111 = v148;
  swift_retain();
  v134 = (unsigned char *)v92;
  swift_retain();
  uint64_t v112 = v137;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v113 = sub_1DCED995C(v109, v110, v111, v92, (int)v145, (uint64_t)v149, v112, v78, v97, v98, v139, v105);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v153);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v156);
  uint64_t v114 = v133;
  v133[11] = v113;
  uint64_t v115 = v114[10];
  char v116 = (void *)v114[2];
  type metadata accessor for SearchFlow();
  unint64_t v117 = (void *)swift_allocObject();
  type metadata accessor for SignalsExtractor();
  uint64_t v118 = swift_allocObject();
  *(void *)(v118 + 16) = v115;
  *(void *)(v118 + 24) = v78;
  v117[2] = v118;
  type metadata accessor for ServerSearchProcessor();
  unint64_t v119 = (void *)swift_allocObject();
  v119[2] = v146;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86290);
  uint64_t v120 = swift_allocObject();
  *(void *)(v120 + 24) = 0;
  *(void *)(v120 + 32) = 0;
  *(unsigned char *)(v120 + 40) = -1;
  *(void *)(v120 + 64) = 0;
  *(void *)(v120 + 72) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
  uint64_t v121 = swift_allocObject();
  *(_DWORD *)(v121 + 16) = 0;
  *(void *)(v120 + 88) = v121;
  *(void *)(v120 + 48) = sub_1DCEDDE90;
  *(void *)(v120 + 56) = v78;
  swift_retain_n();
  swift_retain_n();
  id v122 = v116;
  swift_retain();
  swift_retain();
  sub_1DCD33E90(0);
  *(void *)(v120 + 80) = 0;
  swift_release();
  uint64_t v123 = sub_1DCF31D08();
  swift_release();
  v119[3] = v123;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE854E0);
  uint64_t v124 = swift_allocObject();
  *(void *)(v124 + 24) = 0;
  *(void *)(v124 + 32) = 0;
  *(unsigned char *)(v124 + 40) = -1;
  *(void *)(v124 + 64) = 0;
  *(void *)(v124 + 72) = 0;
  uint64_t v125 = swift_allocObject();
  *(_DWORD *)(v125 + 16) = 0;
  *(void *)(v124 + 88) = v125;
  *(void *)(v124 + 48) = sub_1DCF8AB18;
  *(void *)(v124 + 56) = 0;
  swift_retain();
  sub_1DCD33E90(0);
  *(void *)(v124 + 80) = 0;
  swift_release();
  uint64_t v126 = sub_1DCF31D08();
  swift_release();
  swift_release();
  v119[4] = v126;
  swift_release();
  v117[3] = v119;
  type metadata accessor for ServerResultsProcessor();
  uint64_t v127 = swift_allocObject();
  uint64_t v128 = v138;
  v117[4] = v127;
  v117[5] = v128;
  v117[6] = v134;
  v117[7] = v122;
  uint64_t v129 = *((void *)v139 + 2);
  swift_bridgeObjectRetain();
  swift_release();
  v117[8] = v129;

  swift_release();
  swift_release();
  sub_1DCEDA584(v151, type metadata accessor for VisualIntelligenceService.Options);
  sub_1DCEDA584((uint64_t)v150, type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig);
  *(void *)((char *)v114 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow) = v117;
  return v114;
}

void sub_1DCECF48C(uint64_t *a1)
{
  uint64_t v3 = sub_1DD048068();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = a1[2];
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  a1[2] = v10 + 1;
  uint64_t v11 = *a1 + 1;
  if (__OFADD__(*a1, 1))
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v25 = v10 + 1;
  *a1 = v11;
  uint64_t v12 = a1[1];
  if (v12 < v11)
  {
    a1[1] = v11;
    uint64_t v12 = v11;
  }
  sub_1DCDB40EC((uint64_t)&v22 - v8);
  sub_1DCDB4300((uint64_t)v6);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v4 + 8);
  v26(v9, v3);
  uint64_t v13 = sub_1DD048048();
  os_log_type_t v14 = sub_1DD048848();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = v1;
    uint64_t v17 = v16;
    uint64_t v23 = v3;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v30 = v16;
    uint64_t v22 = v15 + 4;
    uint64_t v27 = v11;
    uint64_t v28 = v12;
    uint64_t v29 = v25;
    uint64_t v18 = sub_1DD048498();
    uint64_t v27 = sub_1DCED7FA0(v18, v19, &v30);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v13, v14, "VisualIntelligenceService.init(): %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v17, -1, -1);
    MEMORY[0x1E01B07E0](v15, -1, -1);

    uint64_t v20 = v6;
    uint64_t v21 = v23;
  }
  else
  {

    uint64_t v20 = v6;
    uint64_t v21 = v3;
  }
  v26(v20, v21);
}

uint64_t VisualIntelligenceService.deinit()
{
  uint64_t v1 = v0;
  sub_1DCF32CD4(32);
  if (qword_1EBE85288 != -1) {
    swift_once();
  }
  char v2 = (uint64_t *)(qword_1EBE855D0 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(qword_1EBE855D0 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(qword_1EBE855D0 + 40));
  sub_1DCECF890(v2);
  os_unfair_lock_unlock(v3);

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v1 + 40);
  swift_release();
  swift_release();
  sub_1DCEDA584(v1 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_parseConfig, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  swift_release();
  sub_1DCEDA584(v1 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  sub_1DCEDA584(v1 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_refineRegionConfig, (uint64_t (*)(void))type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig);
  swift_release();
  return v1;
}

void sub_1DCECF890(uint64_t *a1)
{
  uint64_t v3 = sub_1DD048068();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = *a1 - 1;
  if (__OFSUB__(*a1, 1))
  {
    __break(1u);
  }
  else
  {
    *a1 = v10;
    uint64_t v11 = a1[1];
    if (v11 < v10)
    {
      a1[1] = v10;
      uint64_t v11 = v10;
    }
    uint64_t v24 = a1[2];
    sub_1DCDB40EC((uint64_t)&v21 - v8);
    sub_1DCDB4300((uint64_t)v6);
    uint64_t v25 = *(void (**)(char *, uint64_t))(v4 + 8);
    v25(v9, v3);
    uint64_t v12 = sub_1DD048048();
    os_log_type_t v13 = sub_1DD048848();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v23 = v1;
      uint64_t v16 = v15;
      uint64_t v22 = v3;
      *(_DWORD *)os_log_type_t v14 = 136315138;
      uint64_t v29 = v15;
      uint64_t v21 = v14 + 4;
      uint64_t v26 = v10;
      uint64_t v27 = v11;
      uint64_t v28 = v24;
      uint64_t v17 = sub_1DD048498();
      uint64_t v26 = sub_1DCED7FA0(v17, v18, &v29);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v12, v13, "VisualIntelligenceService.deinit(): %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v16, -1, -1);
      MEMORY[0x1E01B07E0](v14, -1, -1);

      unint64_t v19 = v6;
      uint64_t v20 = v22;
    }
    else
    {

      unint64_t v19 = v6;
      uint64_t v20 = v3;
    }
    v25(v19, v20);
  }
}

uint64_t VisualIntelligenceService.__deallocating_deinit()
{
  VisualIntelligenceService.deinit();
  return swift_deallocClassInstance();
}

uint64_t VisualIntelligenceService.__allocating_init(serviceOptions:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VisualIntelligenceService.Options(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v5 = sub_1DCDE82EC();
  type metadata accessor for TrialWrapper();
  swift_allocObject();
  uint64_t v6 = sub_1DCFD946C((v5 & 1) == 0);
  sub_1DCEDB47C(a1, (uint64_t)v4, type metadata accessor for VisualIntelligenceService.Options);
  uint64_t v7 = sub_1DCEDA5E4((uint64_t)v4, v6);
  sub_1DCEDA584(a1, type metadata accessor for VisualIntelligenceService.Options);
  return v7;
}

CGSize_optional __swiftcall VisualIntelligenceService.targetImageSize(for:)(CGSize a1)
{
  char v1 = sub_1DCFE81CC(a1.width, a1.height);
  result.value.height = v3;
  result.value.width = v2;
  result.is_nil = v1;
  return result;
}

Swift::Void __swiftcall VisualIntelligenceService.warmupSearch()()
{
  swift_retain();
  sub_1DD047938();
  swift_release();
}

id VisualIntelligenceService.parse(query:cachedResults:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1DD048068();
  uint64_t v48 = *(void *)(v10 - 8);
  double v11 = MEMORY[0x1F4188790](v10);
  os_log_type_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v49 = a1;
  id v14 = objc_msgSend(a1, sel_domainsOfInterest, v11);
  uint64_t v15 = sub_1DD0487D8();

  uint64_t v16 = Set<>.toVisualDomains()(v15);
  swift_bridgeObjectRelease();
  sub_1DCDB40EC((uint64_t)v13);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1DD048048();
  os_log_type_t v18 = sub_1DD048848();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  uint64_t v50 = v16;
  uint64_t v51 = a4;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v47 = v10;
    uint64_t v21 = v20;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v54 = v46;
    *(_DWORD *)uint64_t v21 = 134218242;
    v63[0] = *(void *)(v16 + 16);
    sub_1DD048A28();
    *(_WORD *)(v21 + 12) = 2080;
    v45[1] = v21 + 14;
    Set<>.toDomainNames()(v16);
    uint64_t v22 = MEMORY[0x1E01AE380]();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    v63[0] = sub_1DCED7FA0(v22, v24, &v54);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v17, v18, "Parse input domain count %ld, domains: %s", (uint8_t *)v21, 0x16u);
    uint64_t v25 = v46;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v25, -1, -1);
    MEMORY[0x1E01B07E0](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v47);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v10);
  }
  uint64_t v26 = v49;
  id v49 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  uint64_t v48 = *(void *)(v5 + 88);
  id v27 = objc_msgSend(v26, sel_image);
  swift_getObjectType();
  sub_1DCE9BF6C(v63);
  swift_unknownObjectRelease();
  objc_msgSend(v26, sel_normalizedRegionOfInterest);
  v67.origin.double x = 0.0;
  v67.origin.double y = 0.0;
  v67.size.width = 1.0;
  v67.size.height = 1.0;
  CGRect v62 = CGRectIntersection(v66, v67);
  id v28 = objc_msgSend(v26, sel_annotation);
  if (v28)
  {
    uint64_t v29 = v28;
    VIAnnotation.mappedAnnotation.getter(&v54);

    uint64_t v31 = v54;
    uint64_t v30 = v55;
    uint64_t v33 = v56;
    uint64_t v32 = v57;
    uint64_t v34 = v58;
    uint64_t v35 = v59;
    uint64_t v37 = v60;
    uint64_t v36 = v61;
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v33 = 0;
    uint64_t v32 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v37 = 0;
    uint64_t v36 = 0;
    uint64_t v31 = 1;
  }
  uint64_t v47 = v36;
  uint64_t v54 = v31;
  uint64_t v55 = v30;
  uint64_t v56 = v33;
  uint64_t v57 = v32;
  uint64_t v58 = v34;
  uint64_t v59 = v35;
  uint64_t v60 = v37;
  uint64_t v61 = v36;
  id v38 = objc_msgSend(v26, sel_queryContext);
  uint64_t v40 = v64;
  uint64_t v39 = v65;
  uint64_t v41 = __swift_project_boxed_opaque_existential_1(v63, v64);
  uint64_t v44 = v40;
  id v42 = v49;
  sub_1DCEBB954((uint64_t)v41, (uint64_t *)&v62, v50, (uint64_t)&v54, v38, v49, v52, v53, v51, v48, v44, v39);
  swift_bridgeObjectRelease();

  sub_1DCD43C58(v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  return v42;
}

id sub_1DCED01B4()
{
  uint64_t v1 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v1);
  double v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = *(void *)(*(void *)(v0 + 32) + 136);
  if (!v7) {
    return 0;
  }
  sub_1DCEDB47C(v7 + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_modelInfo, (uint64_t)v3, type metadata accessor for MLModelInfo);
  sub_1DCEDDEAC((uint64_t)v3, (uint64_t)v6, type metadata accessor for MLModelInfo);
  swift_bridgeObjectRetain();
  double v8 = sub_1DCD27D54();
  double v10 = v9;
  id v11 = objc_allocWithZone((Class)VIDetectorModelDescription);
  uint64_t v12 = (void *)sub_1DD0463E8();
  os_log_type_t v13 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v14 = (void *)sub_1DD0486A8();
  id v15 = objc_msgSend(v11, sel_initWithModelURL_modelID_modelOutputs_inputImageSize_, v12, v13, v14, v8, v10);

  sub_1DCEDA584((uint64_t)v6, type metadata accessor for MLModelInfo);
  return v15;
}

id VisualIntelligenceService.parseCameraFrame(query:cachedResults:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v52 = a1;
  id v15 = objc_msgSend(a1, sel_domainsOfInterest, v12);
  uint64_t v16 = sub_1DD0487D8();

  uint64_t v17 = Set<>.toVisualDomains()(v16);
  swift_bridgeObjectRelease();
  sub_1DCDB40EC((uint64_t)v14);
  swift_bridgeObjectRetain_n();
  os_log_type_t v18 = sub_1DD048048();
  os_log_type_t v19 = sub_1DD048848();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v53 = v17;
  uint64_t v54 = a4;
  if (v20)
  {
    uint64_t v21 = v17;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t v57 = v48;
    *(_DWORD *)uint64_t v22 = 134218242;
    v66[0] = *(void *)(v21 + 16);
    uint64_t v50 = v11;
    sub_1DD048A28();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v51 = v5;
    Set<>.toDomainNames()(v21);
    uint64_t v49 = v10;
    uint64_t v23 = MEMORY[0x1E01AE380]();
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    v66[0] = sub_1DCED7FA0(v23, v25, &v57);
    uint64_t v5 = v51;
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v18, v19, "Parse input domain count %ld, domains: %s", (uint8_t *)v22, 0x16u);
    uint64_t v26 = v48;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v26, -1, -1);
    MEMORY[0x1E01B07E0](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v49);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  id v27 = v52;
  id v52 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  uint64_t v51 = *(void *)(v5 + 88);
  id v28 = objc_msgSend(v27, sel_image);
  swift_getObjectType();
  sub_1DCE9BF6C(v66);
  swift_unknownObjectRelease();
  objc_msgSend(v27, sel_normalizedRegionOfInterest);
  v70.origin.double x = 0.0;
  v70.origin.double y = 0.0;
  v70.size.width = 1.0;
  v70.size.height = 1.0;
  CGRect v65 = CGRectIntersection(v69, v70);
  id v29 = objc_msgSend(v27, sel_annotation);
  if (v29)
  {
    uint64_t v30 = v29;
    VIAnnotation.mappedAnnotation.getter(&v57);

    uint64_t v32 = v57;
    uint64_t v31 = v58;
    uint64_t v34 = v59;
    uint64_t v33 = v60;
    uint64_t v35 = v61;
    uint64_t v36 = v62;
    uint64_t v38 = v63;
    uint64_t v37 = v64;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v34 = 0;
    uint64_t v33 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v38 = 0;
    uint64_t v37 = 0;
    uint64_t v32 = 1;
  }
  uint64_t v50 = v37;
  uint64_t v57 = v32;
  uint64_t v58 = v31;
  uint64_t v59 = v34;
  uint64_t v60 = v33;
  uint64_t v61 = v35;
  uint64_t v62 = v36;
  uint64_t v63 = v38;
  uint64_t v64 = v37;
  id v39 = objc_msgSend(v27, sel_queryContext);
  id v40 = sub_1DCEDA9EC(v39);

  uint64_t v42 = v67;
  uint64_t v41 = v68;
  uint64_t v43 = __swift_project_boxed_opaque_existential_1(v66, v67);
  uint64_t v46 = v42;
  id v44 = v52;
  sub_1DCEBB954((uint64_t)v43, (uint64_t *)&v65, v53, (uint64_t)&v57, v40, v52, v55, v56, v54, v51, v46, v41);
  swift_bridgeObjectRelease();

  sub_1DCD43C58(v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  return v44;
}

id VisualIntelligenceService.parseCameraFrame(visualQueryContext:image:normalizedRegionOfInterest:annotation:cachedResults:completion:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  uint64_t v12 = v11;
  uint64_t v59 = a6;
  uint64_t v54 = a4;
  uint64_t v57 = a1;
  uint64_t v21 = sub_1DD048068();
  uint64_t v56 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = *(void **)a2;
  int v58 = *(_DWORD *)(a2 + 8);
  sub_1DCD43B04(a3, (uint64_t)v62, &qword_1EBE855D8);
  id v25 = VIAllVisualSearchDomains();
  uint64_t v26 = sub_1DD0487D8();

  uint64_t v27 = Set<>.toVisualDomains()(v26);
  swift_bridgeObjectRelease();
  sub_1DCDB40EC((uint64_t)v23);
  swift_bridgeObjectRetain_n();
  uint64_t v55 = v23;
  id v28 = sub_1DD048048();
  os_log_type_t v29 = sub_1DD048848();
  int v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v31 = swift_slowAlloc();
    int v50 = v30;
    uint64_t v32 = v27;
    uint64_t v33 = v31;
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 134218242;
    uint64_t v60 = *(void *)(v32 + 16);
    uint64_t v61 = v34;
    uint64_t v53 = a7;
    sub_1DD048A28();
    *(_WORD *)(v33 + 12) = 2080;
    uint64_t v49 = v33 + 14;
    Set<>.toDomainNames()(v32);
    uint64_t v51 = v21;
    uint64_t v35 = MEMORY[0x1E01AE380]();
    unint64_t v52 = a5;
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_1DCED7FA0(v35, v37, &v61);
    a7 = v53;
    sub_1DD048A28();
    uint64_t v38 = v32;
    swift_bridgeObjectRelease_n();
    a5 = v52;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v28, (os_log_type_t)v50, "Parse input domain count %ld, domains: %s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v34, -1, -1);
    MEMORY[0x1E01B07E0](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v51);
  }
  else
  {

    uint64_t v38 = v27;
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v21);
  }
  id v39 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  uint64_t v40 = *(void *)(v12 + 88);
  id v41 = v24;
  v65.origin.double x = 0.0;
  v65.origin.double y = 0.0;
  v65.size.double width = 1.0;
  v65.size.double height = 1.0;
  v63.origin.double x = a8;
  v63.origin.double y = a9;
  v63.size.double width = a10;
  v63.size.double height = a11;
  CGRect v64 = CGRectIntersection(v63, v65);
  double x = v64.origin.x;
  double y = v64.origin.y;
  double width = v64.size.width;
  double height = v64.size.height;
  id v46 = sub_1DCEDB078(v57);
  uint64_t v47 = 0;
  if (a5 >> 60 != 15) {
    uint64_t v47 = (void *)sub_1DD0464D8();
  }
  sub_1DCED93C0(v41, v58, v38, (uint64_t)v62, v46, v39, v47, v59, x, y, width, height, a7, v40);

  swift_bridgeObjectRelease();
  return v39;
}

uint64_t VisualIntelligenceService.searchableVisualUnderstanding(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DD048068();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v44 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v44 - v12;
  if (*(void *)(a1 + 16) <= 2uLL)
  {
    sub_1DCEDB2D4(v56);
    unint64_t v24 = (long long *)v56;
    return sub_1DCD43B04((uint64_t)v24, a2, &qword_1EAB03D70);
  }
  long long v14 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)&v56[128] = *(_OWORD *)(a1 + 160);
  *(_OWORD *)&v56[144] = v14;
  long long v15 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)&v56[160] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)&v56[176] = v15;
  long long v16 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)&v56[64] = *(_OWORD *)(a1 + 96);
  *(_OWORD *)&v56[80] = v16;
  long long v17 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)&v56[96] = *(_OWORD *)(a1 + 128);
  *(_OWORD *)&v56[112] = v17;
  long long v18 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)uint64_t v56 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)&v56[16] = v18;
  long long v19 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)&v56[32] = *(_OWORD *)(a1 + 64);
  *(_OWORD *)&v56[48] = v19;
  double v20 = *(double *)v56;
  long long v52 = *(_OWORD *)&v56[136];
  long long v53 = *(_OWORD *)&v56[152];
  long long v54 = *(_OWORD *)&v56[168];
  *(void *)&long long v55 = *(void *)&v56[184];
  long long v48 = *(_OWORD *)&v56[72];
  long long v49 = *(_OWORD *)&v56[88];
  long long v50 = *(_OWORD *)&v56[104];
  long long v51 = *(_OWORD *)&v56[120];
  long long v44 = *(_OWORD *)&v56[8];
  long long v45 = *(_OWORD *)&v56[24];
  long long v46 = *(_OWORD *)&v56[40];
  long long v47 = *(_OWORD *)&v56[56];
  sub_1DCEDB2F4((uint64_t)v56);
  if (sub_1DCFBBF4C())
  {
    sub_1DCDB40EC((uint64_t)v13);
    sub_1DCD433F0((uint64_t)&v56[8]);
    uint64_t v21 = sub_1DD048048();
    os_log_type_t v22 = sub_1DD048848();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 134217984;
      *(double *)&long long v44 = v20;
      sub_1DD048A28();
      sub_1DCEDB3B8((uint64_t)v56);
      _os_log_impl(&dword_1DCCF9000, v21, v22, "latest frame at %f contains dominant good box", v23, 0xCu);
      MEMORY[0x1E01B07E0](v23, -1, -1);
    }
    else
    {
      sub_1DCEDB3B8((uint64_t)v56);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
LABEL_17:
    long long v52 = *(_OWORD *)&v56[128];
    long long v53 = *(_OWORD *)&v56[144];
    long long v54 = *(_OWORD *)&v56[160];
    long long v55 = *(_OWORD *)&v56[176];
    long long v48 = *(_OWORD *)&v56[64];
    long long v49 = *(_OWORD *)&v56[80];
    long long v50 = *(_OWORD *)&v56[96];
    long long v51 = *(_OWORD *)&v56[112];
    long long v44 = *(_OWORD *)v56;
    long long v45 = *(_OWORD *)&v56[16];
    long long v46 = *(_OWORD *)&v56[32];
    long long v47 = *(_OWORD *)&v56[48];
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v44);
LABEL_18:
    unint64_t v24 = &v44;
    return sub_1DCD43B04((uint64_t)v24, a2, &qword_1EAB03D70);
  }
  double v25 = *(double *)(a1 + 224);
  if (v20 - v25 > 1.001)
  {
    sub_1DCDB40EC((uint64_t)v10);
    sub_1DCEDB2F4((uint64_t)v56);
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1DD048048();
    os_log_type_t v27 = sub_1DD048848();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 134218240;
      *(double *)&long long v44 = v20;
      sub_1DD048A28();
      sub_1DCEDB3B8((uint64_t)v56);
      *(_WORD *)(v28 + 12) = 2048;
      *(double *)&long long v44 = v25;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v26, v27, "latest frame at %f, second latest frame at %f", (uint8_t *)v28, 0x16u);
      MEMORY[0x1E01B07E0](v28, -1, -1);
    }
    else
    {
      sub_1DCEDB3B8((uint64_t)v56);

      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_17;
  }
  long long v52 = *(_OWORD *)&v56[136];
  long long v53 = *(_OWORD *)&v56[152];
  long long v54 = *(_OWORD *)&v56[168];
  *(void *)&long long v55 = *(void *)&v56[184];
  long long v48 = *(_OWORD *)&v56[72];
  long long v49 = *(_OWORD *)&v56[88];
  long long v50 = *(_OWORD *)&v56[104];
  long long v51 = *(_OWORD *)&v56[120];
  long long v44 = *(_OWORD *)&v56[8];
  long long v45 = *(_OWORD *)&v56[24];
  long long v46 = *(_OWORD *)&v56[40];
  long long v47 = *(_OWORD *)&v56[56];
  float v29 = sub_1DCFBC1C0();
  long long v30 = *(_OWORD *)(a1 + 376);
  long long v52 = *(_OWORD *)(a1 + 360);
  long long v53 = v30;
  long long v54 = *(_OWORD *)(a1 + 392);
  *(void *)&long long v55 = *(void *)(a1 + 408);
  long long v31 = *(_OWORD *)(a1 + 312);
  long long v48 = *(_OWORD *)(a1 + 296);
  long long v49 = v31;
  long long v32 = *(_OWORD *)(a1 + 344);
  long long v50 = *(_OWORD *)(a1 + 328);
  long long v51 = v32;
  long long v33 = *(_OWORD *)(a1 + 248);
  long long v44 = *(_OWORD *)(a1 + 232);
  long long v45 = v33;
  long long v34 = *(_OWORD *)(a1 + 280);
  long long v46 = *(_OWORD *)(a1 + 264);
  long long v47 = v34;
  if (sub_1DCFBC1C0() >= v29)
  {
    *(void *)&long long v55 = *(void *)(a1 + 600);
    long long v35 = *(_OWORD *)(a1 + 568);
    long long v52 = *(_OWORD *)(a1 + 552);
    long long v53 = v35;
    long long v54 = *(_OWORD *)(a1 + 584);
    long long v36 = *(_OWORD *)(a1 + 504);
    long long v48 = *(_OWORD *)(a1 + 488);
    long long v49 = v36;
    long long v37 = *(_OWORD *)(a1 + 536);
    long long v50 = *(_OWORD *)(a1 + 520);
    long long v51 = v37;
    long long v38 = *(_OWORD *)(a1 + 440);
    long long v44 = *(_OWORD *)(a1 + 424);
    long long v45 = v38;
    long long v39 = *(_OWORD *)(a1 + 472);
    long long v46 = *(_OWORD *)(a1 + 456);
    long long v47 = v39;
    if (sub_1DCFBC1C0() >= v29)
    {
      sub_1DCEDB3B8((uint64_t)v56);
      sub_1DCEDB2D4(&v44);
      goto LABEL_18;
    }
  }
  sub_1DCDB40EC((uint64_t)v7);
  sub_1DCD433F0((uint64_t)&v56[8]);
  uint64_t v40 = sub_1DD048048();
  os_log_type_t v41 = sub_1DD048848();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 134218240;
    *(double *)&long long v44 = v20;
    sub_1DD048A28();
    sub_1DCEDB3B8((uint64_t)v56);
    sub_1DCEDB3B8((uint64_t)v56);
    *(_WORD *)(v42 + 12) = 2048;
    *(double *)&long long v44 = v29;
    sub_1DD048A28();
    _os_log_impl(&dword_1DCCF9000, v40, v41, "latest frame at %f box score %f is larger than at least one of the previous 2", (uint8_t *)v42, 0x16u);
    MEMORY[0x1E01B07E0](v42, -1, -1);
  }
  else
  {
    sub_1DCEDB3B8((uint64_t)v56);
    sub_1DCEDB3B8((uint64_t)v56);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  long long v52 = *(_OWORD *)&v56[128];
  long long v53 = *(_OWORD *)&v56[144];
  long long v54 = *(_OWORD *)&v56[160];
  long long v55 = *(_OWORD *)&v56[176];
  long long v48 = *(_OWORD *)&v56[64];
  long long v49 = *(_OWORD *)&v56[80];
  long long v50 = *(_OWORD *)&v56[96];
  long long v51 = *(_OWORD *)&v56[112];
  long long v44 = *(_OWORD *)v56;
  long long v45 = *(_OWORD *)&v56[16];
  long long v46 = *(_OWORD *)&v56[32];
  long long v47 = *(_OWORD *)&v56[48];
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v44);
  sub_1DCD43B04((uint64_t)&v44, a2, &qword_1EAB03D70);
  return sub_1DCEDB2F4((uint64_t)v56);
}

id VisualIntelligenceService.searchCameraFrame(visualQueryContext:visualUnderstanding:completion:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  long long v14 = (char *)&v33 - v13;
  long long v15 = *(_OWORD *)(a2 + 144);
  long long v45 = *(_OWORD *)(a2 + 128);
  long long v46 = v15;
  long long v47 = *(_OWORD *)(a2 + 160);
  uint64_t v48 = *(void *)(a2 + 176);
  long long v16 = *(_OWORD *)(a2 + 80);
  long long v41 = *(_OWORD *)(a2 + 64);
  long long v42 = v16;
  long long v17 = *(_OWORD *)(a2 + 112);
  long long v43 = *(_OWORD *)(a2 + 96);
  long long v44 = v17;
  long long v18 = *(_OWORD *)(a2 + 16);
  long long v37 = *(_OWORD *)a2;
  long long v38 = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  long long v39 = *(_OWORD *)(a2 + 32);
  long long v40 = v19;
  id v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  sub_1DCEDB47C(v4 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  id v21 = sub_1DCEDB078(a1);
  os_log_type_t v22 = v21;
  if (!v21 || (id v23 = objc_msgSend(v21, sel_featureIdentifier)) == 0)
  {
    sub_1DD048408();
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  unint64_t v24 = v23;
  uint64_t v34 = a3;
  uint64_t v25 = sub_1DD048408();
  uint64_t v27 = v26;

  uint64_t v28 = sub_1DD048408();
  if (!v27)
  {
    a3 = v34;
    goto LABEL_9;
  }
  if (v28 == v25 && v27 == v29)
  {
    swift_bridgeObjectRelease_n();
    a3 = v34;
LABEL_11:
    v14[8] = 0;
    goto LABEL_12;
  }
  char v30 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a3 = v34;
  if (v30) {
    goto LABEL_11;
  }
LABEL_12:
  v35[8] = v45;
  v35[9] = v46;
  v35[10] = v47;
  uint64_t v36 = v48;
  v35[4] = v41;
  v35[5] = v42;
  v35[6] = v43;
  v35[7] = v44;
  v35[0] = v37;
  v35[1] = v38;
  double v35[2] = v39;
  v35[3] = v40;
  sub_1DCEDB47C((uint64_t)v14, (uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = a3;
  *(void *)(v31 + 24) = a4;
  swift_retain();
  sub_1DCF59610(v35, v22, (uint64_t)v11, v20, sub_1DCEDB51C, v31);

  swift_release();
  sub_1DCEDA584((uint64_t)v11, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  sub_1DCEDA584((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  return v20;
}

void sub_1DCED15D4(uint64_t a1, void (*a2)(_OWORD *, void *))
{
  uint64_t v4 = type metadata accessor for VisualSearchResultInternal(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (void **)&v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1DCD2889C(a1, (uint64_t)v9, (uint64_t *)&unk_1EAB03DC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = *v9;
    sub_1DCEDB524(v36);
    sub_1DCD43B04((uint64_t)v36, (uint64_t)v33, &qword_1EAB03D80);
    id v11 = v10;
    a2(v33, v10);
  }
  else
  {
    sub_1DCEDDEAC((uint64_t)v9, (uint64_t)v6, type metadata accessor for VisualSearchResultInternal);
    uint64_t v12 = *((void *)v6 + 23);
    uint64_t v32 = *((void *)v6 + 22);
    long long v13 = *((_OWORD *)v6 + 9);
    long long v29 = *((_OWORD *)v6 + 8);
    long long v30 = v13;
    long long v31 = *((_OWORD *)v6 + 10);
    long long v14 = *((_OWORD *)v6 + 5);
    long long v25 = *((_OWORD *)v6 + 4);
    long long v26 = v14;
    long long v15 = *((_OWORD *)v6 + 7);
    long long v27 = *((_OWORD *)v6 + 6);
    long long v28 = v15;
    long long v16 = *((_OWORD *)v6 + 1);
    long long v21 = *(_OWORD *)v6;
    long long v22 = v16;
    long long v17 = *((_OWORD *)v6 + 3);
    long long v23 = *((_OWORD *)v6 + 2);
    long long v24 = v17;
    sub_1DCD433F0((uint64_t)&v21);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1DCD84020();
    v33[8] = v29;
    v33[9] = v30;
    v33[10] = v31;
    void v33[4] = v25;
    v33[5] = v26;
    v33[6] = v27;
    v33[7] = v28;
    v33[0] = v21;
    v33[1] = v22;
    v33[2] = v23;
    v33[3] = v24;
    *(void *)&long long v34 = v32;
    *((void *)&v34 + 1) = v12;
    *(void *)&long long v35 = v18;
    *((void *)&v35 + 1) = v19;
    v36[6] = v27;
    v36[7] = v28;
    v36[8] = v29;
    v36[9] = v30;
    v36[2] = v23;
    v36[3] = v24;
    v36[4] = v25;
    v36[5] = v26;
    v36[0] = v21;
    v36[1] = v22;
    v36[10] = v31;
    v36[11] = v34;
    v36[12] = v35;
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v36);
    sub_1DCD43B04((uint64_t)v36, (uint64_t)v20, &qword_1EAB03D80);
    a2(v20, 0);
    sub_1DCEBE560(v33);
    sub_1DCEDA584((uint64_t)v6, type metadata accessor for VisualSearchResultInternal);
  }
}

id VisualIntelligenceService.searchCameraFrame(timestamp:visualQueryContext:visualUnderstanding:searchHistoryEntries:completion:)(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5, double a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v14 - 8);
  long long v16 = &v35[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = &v35[-v18];
  sub_1DCD43B04(a2, (uint64_t)v44, &qword_1EAB03D78);
  id v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  sub_1DCD43B04((uint64_t)v44, (uint64_t)v45, &qword_1EAB03D78);
  if (sub_1DCD6E720((uint64_t *)v45) != 1)
  {
    long long v38 = v20;
    long long v39 = a4;
    sub_1DCEDB47C(v7 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, (uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    id v21 = sub_1DCEDB078(a1);
    long long v22 = v21;
    if (v21 && (id v23 = objc_msgSend(v21, sel_featureIdentifier)) != 0)
    {
      long long v24 = v23;
      uint64_t v37 = v7;
      uint64_t v25 = sub_1DD048408();
      uint64_t v27 = v26;

      uint64_t v28 = sub_1DD048408();
      if (v27)
      {
        if (v28 == v25 && v27 == v29)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v30 = a3;
          uint64_t v31 = a5;
LABEL_13:
          v19[8] = 0;
          goto LABEL_14;
        }
        int v36 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v30 = a3;
        uint64_t v31 = a5;
        if (v36) {
          goto LABEL_13;
        }
LABEL_14:
        v42[8] = v45[8];
        v42[9] = v45[9];
        v42[10] = v45[10];
        uint64_t v43 = v46;
        v42[4] = v45[4];
        v42[5] = v45[5];
        v42[6] = v45[6];
        v42[7] = v45[7];
        v42[0] = v45[0];
        v42[1] = v45[1];
        v42[2] = v45[2];
        v42[3] = v45[3];
        sub_1DCEDB47C((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 16) = v39;
        *(void *)(v32 + 24) = v31;
        *(double *)(v32 + 32) = a6;
        *(void *)(v32 + 40) = v30;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v33 = v38;
        sub_1DCF59610(v42, v22, (uint64_t)v16, v38, sub_1DCEDB588, v32);

        id v20 = v33;
        swift_release();
        sub_1DCEDA584((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        sub_1DCEDA584((uint64_t)v19, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        return v20;
      }
      uint64_t v30 = a3;
      uint64_t v31 = a5;
    }
    else
    {
      sub_1DD048408();
      uint64_t v30 = a3;
      uint64_t v31 = a5;
    }
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_1DCEDB524(v42);
  sub_1DCD43B04((uint64_t)v42, (uint64_t)v41, &qword_1EAB03D80);
  memset(v40, 0, sizeof(v40));
  a4(v41, v40, 0);
  return v20;
}

void sub_1DCED1C50(uint64_t a1, void (*a2)(long long *, unsigned char *, void *), double a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for VisualSearchResultInternal(0);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (void **)((char *)&v27[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCD2889C(a1, (uint64_t)v14, (uint64_t *)&unk_1EAB03DC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = *v14;
    sub_1DCEDB524(v54);
    sub_1DCD43B04((uint64_t)v54, (uint64_t)&v41, &qword_1EAB03D80);
    memset(v28, 0, 24);
    id v16 = v15;
    a2(&v41, v28, v15);
  }
  else
  {
    sub_1DCEDDEAC((uint64_t)v14, (uint64_t)v11, type metadata accessor for VisualSearchResultInternal);
    uint64_t v17 = *((void *)v11 + 23);
    uint64_t v40 = *((void *)v11 + 22);
    long long v18 = *((_OWORD *)v11 + 9);
    long long v37 = *((_OWORD *)v11 + 8);
    long long v38 = v18;
    long long v39 = *((_OWORD *)v11 + 10);
    long long v19 = *((_OWORD *)v11 + 5);
    long long v33 = *((_OWORD *)v11 + 4);
    long long v34 = v19;
    long long v20 = *((_OWORD *)v11 + 7);
    long long v35 = *((_OWORD *)v11 + 6);
    long long v36 = v20;
    long long v21 = *((_OWORD *)v11 + 1);
    long long v29 = *(_OWORD *)v11;
    long long v30 = v21;
    long long v22 = *((_OWORD *)v11 + 3);
    long long v31 = *((_OWORD *)v11 + 2);
    long long v32 = v22;
    sub_1DCD433F0((uint64_t)&v29);
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1DCD84020();
    long long v49 = v37;
    long long v50 = v38;
    long long v51 = v39;
    long long v45 = v33;
    long long v46 = v34;
    long long v47 = v35;
    long long v48 = v36;
    long long v41 = v29;
    long long v42 = v30;
    long long v43 = v31;
    long long v44 = v32;
    *(void *)&long long v52 = v40;
    *((void *)&v52 + 1) = v17;
    *(void *)&long long v53 = v23;
    *((void *)&v53 + 1) = v24;
    char v25 = sub_1DCF1AC54(v17, a5);
    v54[10] = v51;
    v54[11] = v52;
    v54[12] = v53;
    v54[6] = v47;
    v54[7] = v48;
    v54[8] = v49;
    v54[9] = v50;
    v54[2] = v43;
    v54[3] = v44;
    v54[4] = v45;
    v54[5] = v46;
    v54[0] = v41;
    v54[1] = v42;
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v54);
    sub_1DCD43B04((uint64_t)v54, (uint64_t)v28, &qword_1EAB03D80);
    *(double *)uint64_t v27 = a3;
    v27[1] = v25 & 1;
    v27[2] = v17;
    swift_bridgeObjectRetain();
    sub_1DCEBE47C(&v41);
    a2((long long *)v28, v27, 0);
    sub_1DCEBE560(&v41);
    swift_bridgeObjectRelease();
    sub_1DCEBE560(&v41);
    sub_1DCEDA584((uint64_t)v11, type metadata accessor for VisualSearchResultInternal);
  }
}

id VisualIntelligenceService.searchCameraFrame(image:visualUnderstanding:queryContext:completion:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_1DCEDB598(a2, a3, a4, a5);
}

void sub_1DCED1F64(uint64_t a1, void (*a2)(id, void *))
{
  uint64_t v4 = type metadata accessor for VisualSearchResultInternal(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (void **)((char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCD2889C(a1, (uint64_t)v9, (uint64_t *)&unk_1EAB03DC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = *v9;
    id v11 = objc_msgSend(self, sel_empty);
    id v12 = v10;
    a2(v11, v10);
  }
  else
  {
    sub_1DCEDDEAC((uint64_t)v9, (uint64_t)v6, type metadata accessor for VisualSearchResultInternal);
    uint64_t v13 = *((void *)v6 + 23);
    uint64_t v34 = *((void *)v6 + 22);
    long long v14 = *((_OWORD *)v6 + 9);
    long long v31 = *((_OWORD *)v6 + 8);
    long long v32 = v14;
    long long v33 = *((_OWORD *)v6 + 10);
    long long v15 = *((_OWORD *)v6 + 5);
    long long v27 = *((_OWORD *)v6 + 4);
    long long v28 = v15;
    long long v16 = *((_OWORD *)v6 + 7);
    long long v29 = *((_OWORD *)v6 + 6);
    long long v30 = v16;
    long long v17 = *((_OWORD *)v6 + 1);
    long long v23 = *(_OWORD *)v6;
    long long v24 = v17;
    long long v18 = *((_OWORD *)v6 + 3);
    long long v25 = *((_OWORD *)v6 + 2);
    long long v26 = v18;
    sub_1DCD433F0((uint64_t)&v23);
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1DCD84020();
    v35[8] = v31;
    v35[9] = v32;
    v35[10] = v33;
    v35[4] = v27;
    v35[5] = v28;
    v35[6] = v29;
    v35[7] = v30;
    v35[0] = v23;
    v35[1] = v24;
    double v35[2] = v25;
    v35[3] = v26;
    *(void *)&long long v36 = v34;
    *((void *)&v36 + 1) = v13;
    *(void *)&long long v37 = v19;
    *((void *)&v37 + 1) = v20;
    v22[10] = v33;
    v22[11] = v36;
    v22[12] = v37;
    v22[6] = v29;
    v22[7] = v30;
    v22[8] = v31;
    v22[9] = v32;
    v22[2] = v25;
    v22[3] = v26;
    v22[4] = v27;
    v22[5] = v28;
    v22[0] = v23;
    v22[1] = v24;
    id v21 = sub_1DCD9B8F4();
    sub_1DCEBE560(v35);
    a2(v21, 0);

    sub_1DCEDA584((uint64_t)v6, type metadata accessor for VisualSearchResultInternal);
  }
}

id VisualIntelligenceService.parseAndSearchCamera(visualQueryContext:image:normalizedRegionOfInterest:annotation:cachedResults:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10, double a11)
{
  uint64_t v12 = v11;
  uint64_t v56 = a7;
  uint64_t v55 = a6;
  unint64_t v54 = a5;
  uint64_t v53 = a4;
  uint64_t v59 = sub_1DD0481B8();
  uint64_t v62 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  int v58 = &v49[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v61 = sub_1DD0481D8();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  long long v52 = &v49[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t Context = type metadata accessor for VisualQueryContext();
  uint64_t v23 = *(void *)(Context - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  MEMORY[0x1F4188790](Context - 8);
  long long v25 = &v49[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v26 = *(void **)a2;
  int v50 = *(_DWORD *)(a2 + 8);
  sub_1DCD43B04(a3, (uint64_t)v65, &qword_1EBE855D8);
  id v57 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  uint64_t v27 = v12;
  uint64_t v51 = *(void *)(v12 + 16);
  sub_1DCEDB47C(a1, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for VisualQueryContext);
  unint64_t v28 = (*(unsigned __int8 *)(v23 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v29 = (v24 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v27;
  sub_1DCEDDEAC((uint64_t)v25, v34 + v28, (uint64_t (*)(void))type metadata accessor for VisualQueryContext);
  unint64_t v35 = v34 + v29;
  long long v36 = v26;
  *(void *)unint64_t v35 = v26;
  *(_DWORD *)(v35 + 8) = v50;
  long long v37 = (double *)(v34 + v30);
  *long long v37 = a8;
  v37[1] = a9;
  v37[2] = a10;
  v37[3] = a11;
  sub_1DCD43B04((uint64_t)v65, v34 + v31, &qword_1EBE855D8);
  long long v38 = (uint64_t *)(v34 + v32);
  uint64_t v39 = v53;
  unint64_t v40 = v54;
  *long long v38 = v53;
  v38[1] = v40;
  long long v41 = (void *)(v34 + v33);
  uint64_t v42 = v56;
  void *v41 = v55;
  v41[1] = v42;
  aBlock[4] = sub_1DCEDBB40;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCEC8CA4;
  aBlock[3] = &block_descriptor_7;
  long long v43 = _Block_copy(aBlock);
  swift_retain();
  id v44 = v36;
  sub_1DCEBF700(v65);
  sub_1DCD8400C(v39, v40);
  swift_retain();
  long long v45 = v52;
  sub_1DD0481C8();
  uint64_t v63 = MEMORY[0x1E4FBC860];
  sub_1DCEDDDF8(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCE779F4((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  long long v46 = v58;
  uint64_t v47 = v59;
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v45, v46, v43);
  _Block_release(v43);
  (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v46, v47);
  (*(void (**)(unsigned char *, uint64_t))(v60 + 8))(v45, v61);
  swift_release();
  return v57;
}

void sub_1DCED2704(uint64_t a1, uint64_t *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, uint64_t a13)
{
  uint64_t v30 = a6;
  unint64_t v31 = a7;
  uint64_t Context = type metadata accessor for VisualQueryContext();
  uint64_t v24 = *(void *)(Context - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  MEMORY[0x1F4188790](Context - 8);
  long long v26 = (char *)&v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a3;
  int v34 = a4;
  sub_1DCD43B04(a5, (uint64_t)v32, &qword_1EBE855D8);
  sub_1DCEDB47C((uint64_t)a2, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for VisualQueryContext);
  unint64_t v27 = (*(unsigned __int8 *)(v24 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v28 = (void *)swift_allocObject();
  v28[2] = a8;
  v28[3] = a13;
  v28[4] = a1;
  sub_1DCEDDEAC((uint64_t)v26, (uint64_t)v28 + v27, (uint64_t (*)(void))type metadata accessor for VisualQueryContext);
  swift_retain();
  swift_retain();
  id v29 = VisualIntelligenceService.parseCameraFrame(visualQueryContext:image:normalizedRegionOfInterest:annotation:cachedResults:completion:)(a2, (uint64_t)&v33, (uint64_t)v32, v30, v31, (uint64_t)sub_1DCEDDC78, (uint64_t)v28, a9, a10, a11, a12);
  swift_release();
}

void sub_1DCED28E0(uint64_t a1, void (*a2)(_OWORD *), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for ParseResult(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B20);
  MEMORY[0x1F4188790](v13);
  long long v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCD2889C(a1, (uint64_t)v15, &qword_1EBE86B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)&long long v32 = *v15;
    long long v16 = (void *)v32;
    sub_1DCEDD7B0((uint64_t)&v32);
    sub_1DCD43B04((uint64_t)&v32, (uint64_t)v30, &qword_1EAB03D58);
    id v17 = v16;
    a2(v30);
  }
  else
  {
    id v29 = a5;
    sub_1DCEDDEAC((uint64_t)v15, (uint64_t)v12, type metadata accessor for ParseResult);
    long long v18 = *((_OWORD *)v12 + 9);
    long long v40 = *((_OWORD *)v12 + 8);
    long long v41 = v18;
    long long v42 = *((_OWORD *)v12 + 10);
    uint64_t v43 = *((void *)v12 + 22);
    long long v19 = *((_OWORD *)v12 + 5);
    long long v36 = *((_OWORD *)v12 + 4);
    long long v37 = v19;
    long long v20 = *((_OWORD *)v12 + 7);
    long long v38 = *((_OWORD *)v12 + 6);
    long long v39 = v20;
    long long v21 = *((_OWORD *)v12 + 1);
    long long v32 = *(_OWORD *)v12;
    long long v33 = v21;
    long long v22 = *((_OWORD *)v12 + 3);
    long long v34 = *((_OWORD *)v12 + 2);
    long long v35 = v22;
    sub_1DD046208();
    swift_allocObject();
    sub_1DCD433F0((uint64_t)&v32);
    sub_1DD0461F8();
    v30[8] = v40;
    v30[9] = v41;
    v30[10] = v42;
    uint64_t v31 = v43;
    v30[4] = v36;
    v30[5] = v37;
    v30[6] = v38;
    v30[7] = v39;
    v30[0] = v32;
    v30[1] = v33;
    v30[2] = v34;
    v30[3] = v35;
    sub_1DCD9C2D8();
    uint64_t v23 = sub_1DD0461E8();
    unint64_t v25 = v24;
    swift_release();
    sub_1DCD43B94((uint64_t)&v32);
    long long v54 = v40;
    long long v55 = v41;
    long long v56 = v42;
    uint64_t v57 = v43;
    long long v50 = v36;
    long long v51 = v37;
    long long v52 = v38;
    long long v53 = v39;
    long long v46 = v32;
    long long v47 = v33;
    long long v48 = v34;
    long long v49 = v35;
    uint64_t v26 = VisualUnderstanding.imageRegions.getter();
    *(_OWORD *)((char *)v44 + 8) = 0u;
    *(_OWORD *)((char *)&v44[1] + 8) = 0u;
    *(_OWORD *)((char *)&v44[2] + 8) = 0u;
    *(void *)&v44[0] = 1;
    *((void *)&v44[3] + 1) = 0;
    sub_1DCD33F64(v23, v25);
    VisualUnderstanding.init(_:annotation:payload:)(v26, (uint64_t *)v44, v23, v25, &v46);
    v44[8] = v54;
    v44[9] = v55;
    v44[10] = v56;
    uint64_t v45 = v57;
    v44[4] = v50;
    v44[5] = v51;
    v44[6] = v52;
    v44[7] = v53;
    v44[0] = v46;
    v44[1] = v47;
    v44[2] = v48;
    v44[3] = v49;
    unint64_t v27 = (void *)swift_allocObject();
    v27[2] = a4;
    void v27[3] = a2;
    v27[4] = a3;
    swift_retain();
    swift_retain();

    swift_release();
    sub_1DCD21954(v23, v25);
    sub_1DCEDA584((uint64_t)v12, type metadata accessor for ParseResult);
    sub_1DCD43B94((uint64_t)&v46);
  }
}

uint64_t sub_1DCED2CAC(uint64_t a1, void *a2, uint64_t a3, void (*a4)(_OWORD *))
{
  sub_1DCD43B04(a1, (uint64_t)v15, &qword_1EAB03D80);
  if (a2)
  {
    *(void *)&v12[0] = a2;
  }
  else
  {
    sub_1DCD43B04((uint64_t)v15, (uint64_t)v13, &qword_1EAB03D80);
    if (sub_1DCD6E720((uint64_t *)v13) != 1)
    {
      v12[10] = v13[10];
      v12[11] = v13[11];
      v12[12] = v13[12];
      v12[6] = v13[6];
      v12[7] = v13[7];
      v12[8] = v13[8];
      v12[9] = v13[9];
      void v12[2] = v13[2];
      v12[3] = v13[3];
      v12[4] = v13[4];
      v12[5] = v13[5];
      v12[0] = v13[0];
      v12[1] = v13[1];
      sub_1DCEBF5FC((uint64_t)v12);
      sub_1DCD43B04((uint64_t)v15, (uint64_t)v11, &qword_1EAB03D80);
      sub_1DCEBE47C(v11);
      goto LABEL_7;
    }
    id v6 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v7 = (void *)sub_1DD0483D8();
    id v8 = objc_msgSend(v6, sel_initWithDomain_code_userInfo_, v7, -1, 0);

    *(void *)&v12[0] = v8;
  }
  sub_1DCEDD7B0((uint64_t)v12);
LABEL_7:
  sub_1DCD43B04((uint64_t)v12, (uint64_t)v14, &qword_1EAB03D58);
  sub_1DCD43B04((uint64_t)v14, (uint64_t)v12, &qword_1EAB03D58);
  id v9 = a2;
  a4(v12);
  return sub_1DCEDD7E8((uint64_t)v14);
}

id VisualIntelligenceService.parseAndSearch(image:regionOfInterest:boundingBoxes:domains:annotation:queryContext:completion:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v60 = a8;
  uint64_t v61 = a3;
  int v58 = a6;
  uint64_t v59 = a1;
  uint64_t v14 = sub_1DD0481B8();
  uint64_t v66 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  CGRect v65 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DD0481D8();
  uint64_t v63 = *(void *)(v16 - 8);
  uint64_t v64 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v62 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DD048068();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  long long v21 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a2;
  uint64_t v23 = a2[1];
  uint64_t v24 = a2[2];
  uint64_t v25 = a2[3];
  sub_1DCDB40EC((uint64_t)v21);
  swift_bridgeObjectRetain_n();
  uint64_t v26 = sub_1DD048048();
  os_log_type_t v27 = sub_1DD048848();
  int v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v29 = swift_slowAlloc();
    os_log_t v53 = v26;
    uint64_t v30 = v29;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v54 = v31;
    *(_DWORD *)uint64_t v30 = 134218242;
    uint64_t v67 = *(void *)(a4 + 16);
    aBlock[0] = v31;
    uint64_t v57 = a5;
    uint64_t v55 = v18;
    sub_1DD048A28();
    *(_WORD *)(v30 + 12) = 2080;
    v50[1] = v30 + 14;
    Set<>.toDomainNames()(a4);
    int v51 = v28;
    uint64_t v32 = MEMORY[0x1E01AE380]();
    uint64_t v52 = v19;
    uint64_t v33 = v32;
    uint64_t v56 = a7;
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v67 = sub_1DCED7FA0(v33, v35, aBlock);
    a5 = v57;
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    a7 = v56;
    swift_bridgeObjectRelease();
    os_log_t v36 = v53;
    _os_log_impl(&dword_1DCCF9000, v53, (os_log_type_t)v51, "Parse and search domain count %ld, domains: %s", (uint8_t *)v30, 0x16u);
    uint64_t v37 = v54;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v37, -1, -1);
    MEMORY[0x1E01B07E0](v30, -1, -1);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v21, v55);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  id v38 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  uint64_t v57 = *(void **)(v9 + 16);
  long long v39 = (void *)swift_allocObject();
  v39[2] = v61;
  v39[3] = v9;
  long long v40 = v58;
  v39[4] = v59;
  v39[5] = v22;
  v39[6] = v23;
  v39[7] = v24;
  v39[8] = v25;
  v39[9] = a4;
  v39[10] = a5;
  long long v41 = a5;
  v39[11] = v40;
  v39[12] = v38;
  uint64_t v42 = v60;
  v39[13] = a7;
  v39[14] = v42;
  aBlock[4] = (uint64_t)sub_1DCEDBCA0;
  aBlock[5] = (uint64_t)v39;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1DCEC8CA4;
  aBlock[3] = (uint64_t)&block_descriptor_12;
  uint64_t v43 = _Block_copy(aBlock);
  id v44 = v40;
  id v45 = v38;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  id v46 = v41;
  long long v47 = v62;
  sub_1DD0481C8();
  uint64_t v67 = MEMORY[0x1E4FBC860];
  sub_1DCEDDDF8(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCE779F4((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  long long v48 = v65;
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v47, v48, v43);
  _Block_release(v43);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v48, v14);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v47, v64);
  swift_release();
  return v45;
}

uint64_t sub_1DCED3428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, char *a7, void (*a8)(long long *), double a9, double a10, double a11, double a12, uint64_t a13)
{
  uint64_t v96 = a8;
  uint64_t v97 = a13;
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B20);
  MEMORY[0x1F4188790](v94);
  uint64_t v95 = (uint64_t)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for ParseResult(0);
  MEMORY[0x1F4188790](v92);
  uint64_t v93 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v100 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v101 = (uint64_t)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v86 - v29;
  uint64_t v98 = a1;
  uint64_t v31 = *(void *)(a1 + 16);
  if (!v31)
  {
    *(void *)&long long v102 = a4;
    uint64_t v101 = *(void *)(a2 + 88);
    swift_getObjectType();
    sub_1DCE9BF6C(v108);
    *(double *)double v107 = a9;
    *(double *)&v107[1] = a10;
    *(double *)&v107[2] = a11;
    *(double *)&v107[3] = a12;
    uint64_t v67 = a7;
    if (a5)
    {
      VIAnnotation.mappedAnnotation.getter(&v103);
      long long v68 = v103;
      long long v69 = v104;
      long long v70 = v105;
      long long v71 = v106;
    }
    else
    {
      long long v68 = xmmword_1DD059E70;
      long long v69 = 0uLL;
      long long v70 = 0uLL;
      long long v71 = 0uLL;
    }
    long long v103 = v68;
    long long v104 = v69;
    long long v105 = v70;
    long long v106 = v71;
    uint64_t v77 = (void *)swift_allocObject();
    v77[2] = a2;
    v77[3] = a3;
    v77[4] = a5;
    v77[5] = a6;
    uint64_t v78 = v67;
    uint64_t v79 = v96;
    v77[6] = v67;
    v77[7] = v79;
    v77[8] = v97;
    uint64_t v80 = v109;
    uint64_t v81 = v110;
    uint64_t v82 = __swift_project_boxed_opaque_existential_1(v108, v109);
    id v83 = a6;
    uint64_t v84 = v78;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    id v85 = a5;
    sub_1DCEBB954((uint64_t)v82, v107, v102, (uint64_t)&v103, a6, v84, 0, (uint64_t)sub_1DCEDD9F4, (uint64_t)v77, v101, v80, v81);
    swift_release();
    sub_1DCD43C58(v103);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
  }
  uint64_t v87 = a7;
  uint64_t v88 = a3;
  uint64_t v89 = a2;
  uint64_t v90 = (uint64_t)a5;
  id v91 = a6;
  uint64_t v32 = *(void *)(a4 + 56);
  uint64_t v99 = a4 + 56;
  uint64_t v33 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v34 = -1;
  if (v33 < 64) {
    uint64_t v34 = ~(-1 << v33);
  }
  unint64_t v35 = v34 & v32;
  *(void *)&long long v102 = (unint64_t)(v33 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v36 = 0;
  uint64_t v37 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v38 = v101;
    if (v35)
    {
      unint64_t v39 = __clz(__rbit64(v35));
      v35 &= v35 - 1;
      unint64_t v40 = v39 | (v36 << 6);
      goto LABEL_21;
    }
    uint64_t v41 = v36 + 1;
    if (__OFADD__(v36, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v41 >= (uint64_t)v102) {
      goto LABEL_26;
    }
    unint64_t v42 = *(void *)(v99 + 8 * v41);
    ++v36;
    if (!v42)
    {
      int64_t v36 = v41 + 1;
      if (v41 + 1 >= (uint64_t)v102) {
        goto LABEL_26;
      }
      unint64_t v42 = *(void *)(v99 + 8 * v36);
      if (!v42)
      {
        int64_t v36 = v41 + 2;
        if (v41 + 2 >= (uint64_t)v102) {
          goto LABEL_26;
        }
        unint64_t v42 = *(void *)(v99 + 8 * v36);
        if (!v42) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v35 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v36 << 6);
LABEL_21:
    uint64_t v44 = a4;
    char v45 = *(unsigned char *)(*(void *)(a4 + 48) + v40);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v37 = sub_1DCE9D680(0, v37[2] + 1, 1, v37);
    }
    unint64_t v47 = v37[2];
    unint64_t v46 = v37[3];
    if (v47 >= v46 >> 1) {
      uint64_t v37 = sub_1DCE9D680((void *)(v46 > 1), v47 + 1, 1, v37);
    }
    v37[2] = v47 + 1;
    long long v48 = &v37[20 * v47];
    *((unsigned char *)v48 + 32) = v45;
    int v49 = *(_DWORD *)((char *)&v103 + 3);
    *(_DWORD *)((char *)v48 + 33) = v103;
    *((_DWORD *)v48 + 9) = v49;
    *(_OWORD *)(v48 + 5) = 0u;
    *(_OWORD *)(v48 + 7) = 0u;
    *((unsigned char *)v48 + 72) = 0;
    int v50 = *(_DWORD *)((char *)v108 + 3);
    *(_DWORD *)((char *)v48 + 73) = v108[0];
    *((_DWORD *)v48 + 19) = v50;
    *((_OWORD *)v48 + 5) = 0u;
    *((_OWORD *)v48 + 6) = 0u;
    *((_OWORD *)v48 + 7) = 0u;
    *((_OWORD *)v48 + 8) = 0u;
    *((_DWORD *)v48 + 36) = 1065353216;
    *((unsigned char *)v48 + 156) = 0;
    *(void *)((char *)v48 + 148) = 0;
    *((unsigned char *)v48 + 157) = 1;
    *(_DWORD *)((char *)v48 + 158) = 0;
    LOWORD(v50) = WORD2(v107[0]);
    *(_DWORD *)((char *)v48 + 162) = v107[0];
    *((_WORD *)v48 + 83) = v50;
    v48[21] = 0;
    v48[22] = 0;
    *(void *)((char *)v48 + 181) = 0;
    a4 = v44;
  }
  uint64_t v43 = v41 + 3;
  if (v43 < (uint64_t)v102)
  {
    unint64_t v42 = *(void *)(v99 + 8 * v43);
    if (!v42)
    {
      while (1)
      {
        int64_t v36 = v43 + 1;
        if (__OFADD__(v43, 1)) {
          break;
        }
        if (v36 >= (uint64_t)v102) {
          goto LABEL_26;
        }
        unint64_t v42 = *(void *)(v99 + 8 * v36);
        ++v43;
        if (v42) {
          goto LABEL_20;
        }
      }
LABEL_42:
      __break(1u);
LABEL_43:
      swift_once();
      goto LABEL_33;
    }
    int64_t v36 = v43;
    goto LABEL_20;
  }
LABEL_26:
  swift_release();
  int v51 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
  __asm { FMOV            V8.2S, #1.0 }
  int64_t v36 = MEMORY[0x1E4FBC860];
  do
  {
    long long v102 = *(_OWORD *)(v51 - 3);
    uint64_t v57 = *(v51 - 1);
    uint64_t v58 = *v51;
    swift_bridgeObjectRetain();
    sub_1DD046588();
    *(_OWORD *)uint64_t v30 = v102;
    *((void *)v30 + 2) = v57;
    *((void *)v30 + 3) = v58;
    v30[32] = 1;
    uint64_t v59 = MEMORY[0x1E4FBC860];
    *((void *)v30 + 5) = MEMORY[0x1E4FBC860];
    *((void *)v30 + 6) = v37;
    *((void *)v30 + 7) = v59;
    *((void *)v30 + 8) = v59;
    *((void *)v30 + 9) = _D8;
    *((void *)v30 + 11) = 0;
    *((void *)v30 + 12) = 0;
    *((void *)v30 + 10) = 0;
    v30[104] = 0;
    *((void *)v30 + 14) = v59;
    v30[*(int *)(v26 + 64)] = 0;
    *(void *)&v30[*(int *)(v26 + 68)] = v59;
    sub_1DCEDB47C((uint64_t)v30, v38, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v36 = sub_1DCE9D7A0(0, *(void *)(v36 + 16) + 1, 1, v36);
    }
    unint64_t v61 = *(void *)(v36 + 16);
    unint64_t v60 = *(void *)(v36 + 24);
    if (v61 >= v60 >> 1) {
      int64_t v36 = sub_1DCE9D7A0(v60 > 1, v61 + 1, 1, v36);
    }
    *(void *)(v36 + 16) = v61 + 1;
    sub_1DCEDDEAC(v38, v36+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(void *)(v100 + 72) * v61, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCEDA584((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    v51 += 4;
    --v31;
  }
  while (v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EBE84A80 != -1) {
    goto LABEL_43;
  }
LABEL_33:
  long long v62 = xmmword_1EBE84A60;
  long long v63 = xmmword_1EBE84A70;
  id v64 = v91;
  uint64_t v65 = v88;
  if (v91) {
    id v66 = objc_msgSend(v91, sel_queryID);
  }
  else {
    id v66 = 0;
  }
  LOBYTE(v108[0]) = 1;
  uint64_t v72 = (uint64_t)v93;
  uint64_t v73 = &v93[*(int *)(v92 + 20)];
  uint64_t v74 = type metadata accessor for Argos_Protos_Queryflow_ParseFlowIntermediateResults(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v73, 1, 1, v74);
  *(void *)uint64_t v72 = v36;
  *(void *)(v72 + 8) = 1;
  *(_OWORD *)(v72 + 16) = 0u;
  *(_OWORD *)(v72 + 32) = 0u;
  *(_OWORD *)(v72 + 48) = 0u;
  *(void *)(v72 + 64) = 0;
  *(_OWORD *)(v72 + 72) = v62;
  *(_OWORD *)(v72 + 88) = v63;
  *(void *)(v72 + 104) = 0;
  *(void *)(v72 + 112) = 0;
  *(unsigned char *)(v72 + 120) = v108[0];
  *(_DWORD *)(v72 + 121) = v103;
  *(_DWORD *)(v72 + 124) = *(_DWORD *)((char *)&v103 + 3);
  *(void *)(v72 + 128) = 0;
  *(void *)(v72 + 136) = 0xE000000000000000;
  *(void *)(v72 + 144) = v66;
  *(void *)(v72 + 152) = 0;
  *(void *)(v72 + 160) = 0;
  *(void *)(v72 + 168) = 0;
  *(void *)(v72 + 176) = MEMORY[0x1E4FBC860];
  uint64_t v75 = v95;
  sub_1DCEDB47C(v72, v95, type metadata accessor for ParseResult);
  swift_storeEnumTagMultiPayload();
  sub_1DCED3D50(v65, v90, v64, v87, v75, v96, v97);
  sub_1DCD2479C(v75, &qword_1EBE86B20);
  return sub_1DCEDA584(v72, type metadata accessor for ParseResult);
}

void sub_1DCED3D50(uint64_t a1, uint64_t a2, void *a3, char *a4, uint64_t a5, void (*a6)(long long *), uint64_t a7)
{
  uint64_t v75 = a3;
  uint64_t v78 = a2;
  uint64_t v79 = a1;
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v80 = (uint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v74 = (char *)&v69 - v14;
  uint64_t v15 = sub_1DD048068();
  uint64_t v76 = *(void *)(v15 - 8);
  uint64_t v77 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ParseResult(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B20);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (uint64_t *)((char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCD2889C(a5, (uint64_t)v23, &qword_1EBE86B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)&long long v93 = *v23;
    uint64_t v24 = (void *)v93;
    sub_1DCEDD7B0((uint64_t)&v93);
    sub_1DCD43B04((uint64_t)&v93, (uint64_t)&v81, &qword_1EAB03D58);
    id v25 = v24;
    a6(&v81);

    return;
  }
  uint64_t v71 = a7;
  uint64_t v72 = a6;
  sub_1DCEDDEAC((uint64_t)v23, (uint64_t)v20, type metadata accessor for ParseResult);
  uint64_t v26 = (os_unfair_lock_s *)(*(void *)&a4[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
  os_unfair_lock_lock(v26);
  int v27 = a4[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
  os_unfair_lock_unlock(v26);
  if (v27 != 1)
  {
    long long v33 = *((_OWORD *)v20 + 9);
    long long v34 = *((_OWORD *)v20 + 7);
    long long v101 = *((_OWORD *)v20 + 8);
    long long v102 = v33;
    long long v35 = *((_OWORD *)v20 + 9);
    long long v103 = *((_OWORD *)v20 + 10);
    long long v36 = *((_OWORD *)v20 + 5);
    long long v37 = *((_OWORD *)v20 + 3);
    long long v97 = *((_OWORD *)v20 + 4);
    long long v98 = v36;
    long long v38 = *((_OWORD *)v20 + 5);
    long long v39 = *((_OWORD *)v20 + 7);
    long long v99 = *((_OWORD *)v20 + 6);
    long long v100 = v39;
    long long v40 = *((_OWORD *)v20 + 1);
    long long v93 = *(_OWORD *)v20;
    long long v94 = v40;
    long long v41 = *((_OWORD *)v20 + 3);
    long long v43 = *(_OWORD *)v20;
    long long v42 = *((_OWORD *)v20 + 1);
    long long v95 = *((_OWORD *)v20 + 2);
    long long v96 = v41;
    long long v89 = v101;
    long long v90 = v35;
    long long v91 = *((_OWORD *)v20 + 10);
    long long v85 = v97;
    long long v86 = v38;
    long long v87 = v99;
    long long v88 = v34;
    long long v81 = v43;
    long long v82 = v42;
    uint64_t v104 = *((void *)v20 + 22);
    uint64_t v92 = *((void *)v20 + 22);
    long long v83 = v95;
    long long v84 = v37;
    sub_1DCD433F0((uint64_t)&v93);
    uint64_t v44 = VisualUnderstanding.imageRegions.getter();
    long long v70 = a4;
    uint64_t v45 = v44;
    if (v78)
    {
      VIAnnotation.mappedAnnotation.getter(&v81);
      long long v46 = v81;
      long long v47 = v82;
      long long v48 = v83;
      long long v49 = v84;
    }
    else
    {
      long long v46 = xmmword_1DD059E70;
      long long v47 = 0uLL;
      long long v48 = 0uLL;
      long long v49 = 0uLL;
    }
    uint64_t v51 = (uint64_t)v74;
    int v50 = v75;
    uint64_t v52 = v73;
    v110[0] = v46;
    v110[1] = v47;
    v110[2] = v48;
    v110[3] = v49;
    sub_1DD046208();
    swift_allocObject();
    sub_1DD0461F8();
    long long v89 = v101;
    long long v90 = v102;
    long long v91 = v103;
    uint64_t v92 = v104;
    long long v85 = v97;
    long long v86 = v98;
    long long v87 = v99;
    long long v88 = v100;
    long long v81 = v93;
    long long v82 = v94;
    long long v83 = v95;
    long long v84 = v96;
    sub_1DCD9C2D8();
    uint64_t v53 = sub_1DD0461E8();
    unint64_t v55 = v54;
    swift_release();
    sub_1DCD43B94((uint64_t)&v93);
    VisualUnderstanding.init(_:annotation:payload:)(v45, (uint64_t *)v110, v53, v55, v108);
    sub_1DCEDB47C(v52 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, v51, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    if (v50 && (id v56 = objc_msgSend(v50, sel_featureIdentifier)) != 0)
    {
      uint64_t v57 = v56;
      uint64_t v58 = sub_1DD048408();
      uint64_t v60 = v59;

      uint64_t v61 = sub_1DD048408();
      if (v60)
      {
        uint64_t v64 = v71;
        long long v63 = v72;
        if (v61 == v58 && v60 == v62)
        {
          swift_bridgeObjectRelease_n();
LABEL_19:
          *(unsigned char *)(v51 + 8) = 0;
          goto LABEL_20;
        }
        char v65 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v65) {
          goto LABEL_19;
        }
LABEL_20:
        swift_getObjectType();
        sub_1DCE9BF6C(v107);
        v105[8] = v108[8];
        v105[9] = v108[9];
        v105[10] = v108[10];
        uint64_t v106 = v109;
        v105[4] = v108[4];
        v105[5] = v108[5];
        v105[6] = v108[6];
        v105[7] = v108[7];
        v105[0] = v108[0];
        v105[1] = v108[1];
        v105[2] = v108[2];
        v105[3] = v108[3];
        uint64_t v66 = v52;
        uint64_t v67 = v80;
        sub_1DCEDB47C(v51, v80, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        long long v68 = (void *)swift_allocObject();
        v68[2] = v66;
        v68[3] = v63;
        v68[4] = v64;
        swift_retain();
        swift_retain();
        sub_1DCF58B70((uint64_t)v107, v105, v50, v67, v70, (uint64_t)sub_1DCEDDA50, (uint64_t)v68);
        swift_release();
        sub_1DCEDA584(v67, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        sub_1DCD2479C((uint64_t)v107, &qword_1EBE85740);
        sub_1DCEDA584(v51, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
        sub_1DCEDA584((uint64_t)v20, type metadata accessor for ParseResult);
        sub_1DCD43B94((uint64_t)v108);
        return;
      }
    }
    else
    {
      sub_1DD048408();
    }
    uint64_t v64 = v71;
    long long v63 = v72;
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_1DCDB40EC((uint64_t)v17);
  uint64_t v28 = sub_1DD048048();
  os_log_type_t v29 = sub_1DD048848();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl(&dword_1DCCF9000, v28, v29, "parseAndSearchCompletion(): canceled", v30, 2u);
    MEMORY[0x1E01B07E0](v30, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v76 + 8))(v17, v77);
  sub_1DCE6A230();
  uint64_t v31 = (void *)swift_allocError();
  unsigned char *v32 = 0;
  *(void *)&long long v93 = v31;
  sub_1DCEDD7B0((uint64_t)&v93);
  sub_1DCD43B04((uint64_t)&v93, (uint64_t)&v81, &qword_1EAB03D58);
  v72(&v81);

  sub_1DCEDA584((uint64_t)v20, type metadata accessor for ParseResult);
}

id VisualIntelligenceService.parseAndEncryptedSearch(image:regionOfInterest:domains:annotation:queryContext:completion:)(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v57 = a5;
  uint64_t v58 = a7;
  uint64_t v59 = a1;
  uint64_t v13 = sub_1DD0481B8();
  uint64_t v63 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1DD0481D8();
  uint64_t v61 = *(void *)(v16 - 8);
  uint64_t v62 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v60 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1DD048068();
  uint64_t v56 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a2;
  uint64_t v22 = a2[1];
  uint64_t v23 = a2[2];
  uint64_t v24 = a2[3];
  sub_1DCDB40EC((uint64_t)v20);
  swift_bridgeObjectRetain_n();
  id v25 = sub_1DD048048();
  os_log_type_t v26 = sub_1DD048848();
  int v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v28 = swift_slowAlloc();
    unint64_t v55 = v15;
    uint64_t v29 = v28;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v52 = v30;
    *(_DWORD *)uint64_t v29 = 134218242;
    uint64_t v64 = *(void *)(a3 + 16);
    aBlock[0] = v30;
    unint64_t v54 = a4;
    sub_1DD048A28();
    *(_WORD *)(v29 + 12) = 2080;
    v49[1] = v29 + 14;
    Set<>.toDomainNames()(a3);
    int v50 = v27;
    uint64_t v31 = MEMORY[0x1E01AE380]();
    uint64_t v51 = v18;
    uint64_t v32 = v31;
    uint64_t v53 = a6;
    unint64_t v34 = v33;
    swift_bridgeObjectRelease();
    uint64_t v64 = sub_1DCED7FA0(v32, v34, aBlock);
    a4 = v54;
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    a6 = v53;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v25, (os_log_type_t)v50, "Parse and search domain count %ld, domains: %s", (uint8_t *)v29, 0x16u);
    uint64_t v35 = v52;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v35, -1, -1);
    uint64_t v36 = v29;
    uint64_t v15 = v55;
    MEMORY[0x1E01B07E0](v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v51);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v18);
  }
  id v37 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  uint64_t v56 = *(void *)(v8 + 16);
  long long v38 = (void *)swift_allocObject();
  uint64_t v39 = v59;
  v38[2] = v8;
  v38[3] = v39;
  v38[4] = v21;
  v38[5] = v22;
  v38[6] = v23;
  v38[7] = v24;
  v38[8] = a3;
  v38[9] = a4;
  long long v40 = a4;
  long long v42 = v57;
  uint64_t v41 = v58;
  v38[10] = v57;
  v38[11] = v37;
  v38[12] = a6;
  v38[13] = v41;
  aBlock[4] = (uint64_t)sub_1DCEDBD48;
  aBlock[5] = (uint64_t)v38;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1DCEC8CA4;
  aBlock[3] = (uint64_t)&block_descriptor_18;
  long long v43 = _Block_copy(aBlock);
  id v44 = v42;
  id v45 = v37;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  id v46 = v40;
  long long v47 = v60;
  sub_1DD0481C8();
  uint64_t v64 = MEMORY[0x1E4FBC860];
  sub_1DCEDDDF8(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCE779F4((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v47, v15, v43);
  _Block_release(v43);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v15, v13);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v62);
  swift_release();
  return v45;
}

uint64_t sub_1DCED4A84(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12)
{
  uint64_t v35 = *(void *)(a1 + 88);
  swift_getObjectType();
  sub_1DCE9BF6C(v42);
  *(double *)uint64_t v41 = a9;
  *(double *)&v41[1] = a10;
  *(double *)&v41[2] = a11;
  *(double *)&v41[3] = a12;
  if (a4)
  {
    VIAnnotation.mappedAnnotation.getter(&v37);
    long long v23 = v37;
    long long v24 = v38;
    long long v25 = v39;
    long long v26 = v40;
  }
  else
  {
    long long v23 = xmmword_1DD059E70;
    long long v24 = 0uLL;
    long long v25 = 0uLL;
    long long v26 = 0uLL;
  }
  long long v37 = v23;
  long long v38 = v24;
  long long v39 = v25;
  long long v40 = v26;
  int v27 = (void *)swift_allocObject();
  v27[2] = a1;
  void v27[3] = a2;
  v27[4] = a4;
  v27[5] = a5;
  v27[6] = a6;
  v27[7] = a7;
  v27[8] = a8;
  uint64_t v29 = v43;
  uint64_t v28 = v44;
  uint64_t v30 = __swift_project_boxed_opaque_existential_1(v42, v43);
  id v31 = a5;
  id v32 = a6;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  id v33 = a4;
  sub_1DCEBB954((uint64_t)v30, v41, a3, (uint64_t)&v37, a5, v32, 0, (uint64_t)sub_1DCEDD798, (uint64_t)v27, v35, v29, v28);
  swift_release();
  sub_1DCD43C58(v37);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
}

void sub_1DCED4C24(uint64_t a1, uint64_t a2, void *a3, char *a4, uint64_t a5, void (*a6)(uint64_t *), uint64_t a7)
{
  uint64_t v128 = a6;
  uint64_t v124 = a2;
  id v125 = a3;
  uint64_t v120 = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v10 - 8);
  id v122 = (char *)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v121 = (uint64_t)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v126 = (uint64_t)&v118 - v15;
  uint64_t v16 = sub_1DD048068();
  uint64_t v123 = *(void (***)(void, void))(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ParseResult(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B20);
  MEMORY[0x1F4188790](v22);
  long long v24 = (uint64_t *)((char *)&v118 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DCD2889C(a5, (uint64_t)v24, &qword_1EBE86B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)&long long v132 = *v24;
    long long v25 = (void *)v132;
    sub_1DCEDD7B0((uint64_t)&v132);
    sub_1DCD43B04((uint64_t)&v132, (uint64_t)v129, &qword_1EAB03D58);
    id v26 = v25;
    v128(v129);

    return;
  }
  uint64_t v119 = a7;
  sub_1DCEDDEAC((uint64_t)v24, (uint64_t)v21, type metadata accessor for ParseResult);
  int v27 = (os_unfair_lock_s *)(*(void *)&a4[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock] + 16);
  os_unfair_lock_lock(v27);
  int v28 = a4[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled];
  os_unfair_lock_unlock(v27);
  uint64_t v29 = (uint64_t)v21;
  if (v28 == 1)
  {
    sub_1DCDB40EC((uint64_t)v18);
    uint64_t v30 = sub_1DD048048();
    os_log_type_t v31 = sub_1DD048848();
    BOOL v32 = os_log_type_enabled(v30, v31);
    id v33 = v128;
    if (v32)
    {
      unint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v34 = 0;
      _os_log_impl(&dword_1DCCF9000, v30, v31, "parseAndSearchCompletion(): canceled", v34, 2u);
      MEMORY[0x1E01B07E0](v34, -1, -1);
    }

    ((void (**)(char *, uint64_t))v123)[1](v18, v16);
    sub_1DCE6A230();
    uint64_t v35 = (void *)swift_allocError();
    *uint64_t v36 = 0;
    *(void *)&long long v132 = v35;
    sub_1DCEDD7B0((uint64_t)&v132);
    sub_1DCD43B04((uint64_t)&v132, (uint64_t)v129, &qword_1EAB03D58);
    v33(v129);

    goto LABEL_7;
  }
  uint64_t v123 = (void (**)(void, void))a4;
  long long v37 = *((_OWORD *)v21 + 9);
  long long v38 = *((_OWORD *)v21 + 7);
  long long v177 = *((_OWORD *)v21 + 8);
  long long v178 = v37;
  long long v39 = *((_OWORD *)v21 + 9);
  long long v179 = *((_OWORD *)v21 + 10);
  long long v40 = *((_OWORD *)v21 + 5);
  long long v41 = *((_OWORD *)v21 + 3);
  long long v173 = *((_OWORD *)v21 + 4);
  long long v174 = v40;
  long long v42 = *((_OWORD *)v21 + 5);
  long long v43 = *((_OWORD *)v21 + 7);
  long long v175 = *((_OWORD *)v21 + 6);
  long long v176 = v43;
  long long v44 = *((_OWORD *)v21 + 1);
  long long v169 = *(_OWORD *)v21;
  long long v170 = v44;
  long long v45 = *((_OWORD *)v21 + 3);
  long long v47 = *(_OWORD *)v21;
  long long v46 = *((_OWORD *)v21 + 1);
  long long v171 = *((_OWORD *)v21 + 2);
  long long v172 = v45;
  long long v140 = v177;
  long long v141 = v39;
  long long v142 = *((_OWORD *)v21 + 10);
  long long v136 = v173;
  long long v137 = v42;
  long long v138 = v175;
  long long v139 = v38;
  long long v132 = v47;
  long long v133 = v46;
  uint64_t v180 = *((void *)v21 + 22);
  uint64_t v143 = *((void *)v21 + 22);
  long long v134 = v171;
  long long v135 = v41;
  sub_1DCD433F0((uint64_t)&v169);
  uint64_t v48 = VisualUnderstanding.imageRegions.getter();
  if (v124)
  {
    VIAnnotation.mappedAnnotation.getter(&v132);
    long long v49 = v132;
    long long v50 = v133;
    long long v51 = v134;
    long long v52 = v135;
  }
  else
  {
    long long v49 = xmmword_1DD059E70;
    long long v50 = 0uLL;
    long long v51 = 0uLL;
    long long v52 = 0uLL;
  }
  uint64_t v53 = (uint64_t)v122;
  v168[0] = v49;
  v168[1] = v50;
  v168[2] = v51;
  v168[3] = v52;
  sub_1DD046208();
  swift_allocObject();
  sub_1DD0461F8();
  long long v164 = v177;
  long long v165 = v178;
  long long v166 = v179;
  uint64_t v167 = v180;
  long long v160 = v173;
  long long v161 = v174;
  long long v162 = v175;
  long long v163 = v176;
  long long v156 = v169;
  long long v157 = v170;
  long long v158 = v171;
  long long v159 = v172;
  sub_1DCD9C2D8();
  uint64_t v54 = sub_1DD0461E8();
  unint64_t v56 = v55;
  swift_release();
  sub_1DCD43B94((uint64_t)&v169);
  VisualUnderstanding.init(_:annotation:payload:)(v48, (uint64_t *)v168, v54, v56, &v144);
  uint64_t v57 = v126;
  sub_1DCEDB47C(v127 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, v126, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  id v58 = v125;
  if (!v125 || (id v59 = objc_msgSend(v125, sel_featureIdentifier)) == 0)
  {
    sub_1DD048408();
    goto LABEL_18;
  }
  uint64_t v60 = v59;
  uint64_t v61 = sub_1DD048408();
  uint64_t v63 = v62;

  uint64_t v64 = sub_1DD048408();
  if (!v63)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v64 == v61 && v63 == v65)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v91 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v91 & 1) == 0) {
      goto LABEL_19;
    }
  }
  *(unsigned char *)(v57 + 8) = 0;
LABEL_19:
  long long v140 = v152;
  long long v141 = v153;
  long long v142 = v154;
  uint64_t v143 = v155;
  long long v136 = v148;
  long long v137 = v149;
  long long v138 = v150;
  long long v139 = v151;
  long long v132 = v144;
  long long v133 = v145;
  long long v134 = v146;
  long long v135 = v147;
  uint64_t v66 = VisualUnderstanding.imageRegions.getter();
  uint64_t v67 = *(void *)(v66 + 16);
  uint64_t v68 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v69 = *(void *)(v68 - 8);
  if (v67)
  {
    sub_1DCEDB47C(v66+ ((*(unsigned __int8 *)(*(void *)(v68 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v68 - 8) + 80)), v53, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v70 = 0;
  }
  else
  {
    uint64_t v70 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v53, v70, 1, v68);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v53, 1, v68) == 1)
  {
    sub_1DCD2479C(v53, &qword_1EBE855F0);
LABEL_30:
    sub_1DD048408();
    uint64_t v73 = 0;
    goto LABEL_31;
  }
  uint64_t v71 = VisualUnderstanding.ImageRegion.domainInfo.getter();
  sub_1DCEDA584(v53, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  if (!*(void *)(v71 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  char v72 = *(unsigned char *)(v71 + 32);
  swift_bridgeObjectRelease();
  LOBYTE(v132) = v72;
  uint64_t v73 = VisualDomain.mappedDomainKey.getter();
  uint64_t v75 = v74;
  uint64_t v76 = sub_1DD048408();
  if (!v75)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    sub_1DD048408();
    swift_bridgeObjectRelease();
    uint64_t v75 = 0;
    char v78 = 1;
    goto LABEL_32;
  }
  if (v73 == v76 && v75 == v77)
  {
    swift_bridgeObjectRelease();
LABEL_62:
    swift_bridgeObjectRelease();
    uint64_t v127 = *(void *)(v127 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
    swift_getObjectType();
    sub_1DCE9BF6C(v129);
    long long v140 = v152;
    long long v141 = v153;
    long long v142 = v154;
    uint64_t v143 = v155;
    long long v136 = v148;
    long long v137 = v149;
    long long v138 = v150;
    long long v139 = v151;
    long long v132 = v144;
    long long v133 = v145;
    long long v134 = v146;
    long long v135 = v147;
    uint64_t v94 = v121;
    sub_1DCEDB47C(v57, v121, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
    uint64_t v95 = swift_allocObject();
    long long v96 = v58;
    uint64_t v97 = v119;
    *(void *)(v95 + 16) = v128;
    *(void *)(v95 + 24) = v97;
    uint64_t v99 = v130;
    uint64_t v98 = v131;
    long long v100 = __swift_project_boxed_opaque_existential_1(v129, v130);
    swift_retain();
    sub_1DCF5C230((uint64_t)v100, &v132, v96, v94, v123, (uint64_t)sub_1DCEDE124, v95, v127, v99, v98);
    goto LABEL_63;
  }
  char v93 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v93) {
    goto LABEL_62;
  }
  if (v73 == sub_1DD048408() && v75 == v103)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v105 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if ((v105 & 1) == 0)
    {
      char v78 = 0;
LABEL_32:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DB0);
      uint64_t v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_1DD0535D0;
      *(void *)(v79 + 32) = sub_1DD048408();
      *(void *)(v79 + 40) = v80;
      *(void *)(v79 + 48) = sub_1DD048408();
      *(void *)(v79 + 56) = v81;
      *(void *)(v79 + 64) = sub_1DD048408();
      *(void *)(v79 + 72) = v82;
      *(void *)(v79 + 80) = sub_1DD048408();
      *(void *)(v79 + 88) = v83;
      *(void *)(v79 + 96) = sub_1DD048408();
      *(void *)(v79 + 104) = v84;
      *(void *)(v79 + 112) = sub_1DD048408();
      *(void *)(v79 + 120) = v85;
      *(void *)(v79 + 128) = sub_1DD048408();
      *(void *)(v79 + 136) = v86;
      *(void *)(v79 + 144) = sub_1DD048408();
      *(void *)(v79 + 152) = v87;
      uint64_t v88 = *(void *)(v79 + 40);
      if (v88)
      {
        if (v78 & 1) == 0 && (*(void *)(v79 + 32) == v73 && v88 == v75 || (sub_1DD048FA8())) {
          goto LABEL_97;
        }
      }
      else if (v78)
      {
        goto LABEL_99;
      }
      uint64_t v89 = *(void *)(v79 + 56);
      if (v89)
      {
        if (v78 & 1) == 0 && (*(void *)(v79 + 48) == v73 && v89 == v75 || (sub_1DD048FA8())) {
          goto LABEL_97;
        }
      }
      else if (v78)
      {
        goto LABEL_99;
      }
      uint64_t v90 = *(void *)(v79 + 72);
      if (v90)
      {
        if (v78 & 1) == 0 && (*(void *)(v79 + 64) == v73 && v90 == v75 || (sub_1DD048FA8())) {
          goto LABEL_97;
        }
      }
      else if (v78)
      {
        goto LABEL_99;
      }
      uint64_t v92 = *(void *)(v79 + 88);
      if (v92)
      {
        if (v78 & 1) == 0 && (*(void *)(v79 + 80) == v73 && v92 == v75 || (sub_1DD048FA8())) {
          goto LABEL_97;
        }
      }
      else if (v78)
      {
        goto LABEL_99;
      }
      uint64_t v102 = *(void *)(v79 + 104);
      if (v102)
      {
        if (v78 & 1) == 0 && (*(void *)(v79 + 96) == v73 && v102 == v75 || (sub_1DD048FA8())) {
          goto LABEL_97;
        }
      }
      else if (v78)
      {
        goto LABEL_99;
      }
      uint64_t v104 = *(void *)(v79 + 120);
      if (v104)
      {
        if (v78 & 1) == 0 && (*(void *)(v79 + 112) == v73 && v104 == v75 || (sub_1DD048FA8())) {
          goto LABEL_97;
        }
      }
      else if (v78)
      {
        goto LABEL_99;
      }
      uint64_t v112 = *(void *)(v79 + 136);
      if (v112)
      {
        if (v78 & 1) == 0 && (*(void *)(v79 + 128) == v73 && v112 == v75 || (sub_1DD048FA8())) {
          goto LABEL_97;
        }
      }
      else if (v78)
      {
        goto LABEL_99;
      }
      uint64_t v113 = *(void *)(v79 + 152);
      if (v113)
      {
        if (v78 & 1) == 0 && (*(void *)(v79 + 144) == v73 && v113 == v75 || (sub_1DD048FA8()))
        {
LABEL_97:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_100:
          swift_getObjectType();
          sub_1DCE9BF6C(v129);
          long long v140 = v152;
          long long v141 = v153;
          long long v142 = v154;
          uint64_t v143 = v155;
          long long v136 = v148;
          long long v137 = v149;
          long long v138 = v150;
          long long v139 = v151;
          long long v132 = v144;
          long long v133 = v145;
          long long v134 = v146;
          long long v135 = v147;
          uint64_t v114 = v121;
          sub_1DCEDB47C(v57, v121, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
          uint64_t v115 = swift_allocObject();
          *(void *)(v115 + 16) = v128;
          *(void *)(v115 + 24) = v119;
          swift_retain();
          sub_1DCEBC90C(&v132, v114, (void (*)(void))sub_1DCEDD7BC, v115);
          swift_release();
          uint64_t v101 = v114;
          goto LABEL_101;
        }
LABEL_103:
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        swift_bridgeObjectRelease();
        sub_1DCD43B94((uint64_t)&v144);
        sub_1DCE6A230();
        char v116 = (void *)swift_allocError();
        *unint64_t v117 = 3;
        *(void *)&long long v132 = v116;
        sub_1DCEDD7B0((uint64_t)&v132);
        sub_1DCD43B04((uint64_t)&v132, (uint64_t)v129, &qword_1EAB03D58);
        v128(v129);

        sub_1DCEDA584(v57, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
LABEL_7:
        sub_1DCEDA584(v29, type metadata accessor for ParseResult);
        return;
      }
      if ((v78 & 1) == 0) {
        goto LABEL_103;
      }
LABEL_99:
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      goto LABEL_100;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v127 = *(void *)(v127 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchFlow);
  swift_getObjectType();
  sub_1DCE9BF6C(v129);
  long long v140 = v152;
  long long v141 = v153;
  long long v142 = v154;
  uint64_t v143 = v155;
  long long v136 = v148;
  long long v137 = v149;
  long long v138 = v150;
  long long v139 = v151;
  long long v132 = v144;
  long long v133 = v145;
  long long v134 = v146;
  long long v135 = v147;
  uint64_t v94 = v121;
  sub_1DCEDB47C(v57, v121, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  uint64_t v106 = swift_allocObject();
  double v107 = v58;
  uint64_t v108 = v119;
  *(void *)(v106 + 16) = v128;
  *(void *)(v106 + 24) = v108;
  uint64_t v110 = v130;
  uint64_t v109 = v131;
  uint64_t v111 = __swift_project_boxed_opaque_existential_1(v129, v130);
  swift_retain();
  sub_1DCF5C280((uint64_t)v111, &v132, v107, v94, v123, (uint64_t)sub_1DCEDD7C4, v106, v127, v110, v109);
LABEL_63:
  swift_release();
  uint64_t v101 = v94;
LABEL_101:
  sub_1DCEDA584(v101, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v129);
  sub_1DCEDA584(v57, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  sub_1DCEDA584(v29, type metadata accessor for ParseResult);
  sub_1DCD43B94((uint64_t)&v144);
}

uint64_t sub_1DCED5C20(uint64_t a1, void (*a2)(unsigned char *))
{
  sub_1DCD43B04(a1, (uint64_t)v9, &qword_1EAB03D58);
  sub_1DCD43B04((uint64_t)v9, (uint64_t)v10, &qword_1EAB03D58);
  if (sub_1DCEDD7E0((uint64_t)v10) == 1)
  {
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v10);
    sub_1DCD43B04((uint64_t)v9, (uint64_t)v7, &qword_1EAB03D58);
    sub_1DCD43B04((uint64_t)v9, (uint64_t)v8, &qword_1EAB03D58);
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v8);
    id v4 = *v3;
  }
  else
  {
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v10);
    sub_1DCD43B04((uint64_t)v9, (uint64_t)v7, &qword_1EAB03D58);
    sub_1DCD43B04((uint64_t)v9, (uint64_t)v8, &qword_1EAB03D58);
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v8);
    sub_1DCEBE47C(v5);
  }
  a2(v7);
  return sub_1DCEDD7E8((uint64_t)v9);
}

id VisualIntelligenceService.submitUserFeedback(image:request:report:reportIdentifier:environment:container:completion:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, void (*a12)(void), uint64_t a13)
{
  uint64_t v67 = a8;
  uint64_t v70 = a1;
  uint64_t v68 = *v13;
  uint64_t v20 = sub_1DD0481B8();
  uint64_t v75 = *(void *)(v20 - 8);
  uint64_t v76 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v73 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1DD0481D8();
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v71 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1DD048068();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v65 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  int v28 = (char *)&v62 - v27;
  sub_1DCDB40EC((uint64_t)&v62 - v27);
  swift_bridgeObjectRetain();
  sub_1DCD8400C(a2, a3);
  sub_1DCD8400C(a4, a5);
  swift_bridgeObjectRetain();
  sub_1DCD8400C(a2, a3);
  sub_1DCD8400C(a4, a5);
  uint64_t v29 = sub_1DD048048();
  os_log_type_t v30 = sub_1DD048848();
  uint64_t v81 = v29;
  unsigned int v77 = v30;
  BOOL v31 = os_log_type_enabled(v29, v30);
  unint64_t v78 = a5;
  uint64_t v79 = v24;
  uint64_t v69 = a6;
  uint64_t v80 = v23;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    uint64_t v82 = v64;
    uint64_t aBlock = a6;
    *(_DWORD *)uint64_t v32 = 136315650;
    uint64_t v84 = a7;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
    uint64_t v33 = sub_1DD048478();
    uint64_t aBlock = sub_1DCED7FA0(v33, v34, &v82);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2080;
    uint64_t aBlock = a2;
    uint64_t v84 = a3;
    sub_1DCD8400C(a2, a3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028A8);
    uint64_t v35 = sub_1DD048478();
    uint64_t aBlock = sub_1DCED7FA0(v35, v36, &v82);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD392D4(a2, a3);
    sub_1DCD392D4(a2, a3);
    *(_WORD *)(v32 + 22) = 2080;
    uint64_t aBlock = a4;
    uint64_t v84 = a5;
    sub_1DCD8400C(a4, a5);
    uint64_t v37 = sub_1DD048478();
    uint64_t aBlock = sub_1DCED7FA0(v37, v38, &v82);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD392D4(a4, a5);
    sub_1DCD392D4(a4, a5);
    long long v39 = v81;
    _os_log_impl(&dword_1DCCF9000, v81, (os_log_type_t)v77, "submitUserFeedback(): reportIdentifier=%s request=%s report=%s", (uint8_t *)v32, 0x20u);
    uint64_t v40 = v64;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v40, -1, -1);
    MEMORY[0x1E01B07E0](v32, -1, -1);

    long long v41 = *(void (**)(char *, uint64_t))(v79 + 8);
    v41(v28, v80);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1DCD392D4(a2, a3);
    sub_1DCD392D4(a2, a3);
    sub_1DCD392D4(a4, a5);
    sub_1DCD392D4(a4, a5);

    long long v41 = *(void (**)(char *, uint64_t))(v24 + 8);
    v41(v28, v23);
  }
  id v42 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  if (a3 >> 60 == 15)
  {
    uint64_t v43 = sub_1DCEDC004(0xD000000000000025, 0x80000001DD06D7F0, (uint64_t)v42, a12, a13);
    swift_unknownObjectRetain();
LABEL_13:

    return (id)v43;
  }
  if (!a7)
  {
    sub_1DCD8400C(a2, a3);
    uint64_t v43 = sub_1DCEDC004(0xD00000000000002ELL, 0x80000001DD06D820, (uint64_t)v42, a12, a13);
    swift_unknownObjectRetain();
    sub_1DCD392D4(a2, a3);
    goto LABEL_13;
  }
  uint64_t v44 = a10;
  uint64_t v45 = a11;
  unsigned int v77 = a9;
  swift_bridgeObjectRetain();
  sub_1DCD8400C(a2, a3);
  if (v78 >> 60 == 15)
  {
    uint64_t v63 = a10;
    uint64_t v81 = a3;
    uint64_t v64 = a7;
    uint64_t v46 = a4;
    sub_1DCDB40EC((uint64_t)v65);
    long long v47 = sub_1DD048048();
    os_log_type_t v48 = sub_1DD048848();
    if (os_log_type_enabled(v47, v48))
    {
      long long v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v49 = 0;
      _os_log_impl(&dword_1DCCF9000, v47, v48, "submitUserFeedback(): warning: report data was empty", v49, 2u);
      long long v50 = v49;
      uint64_t v45 = a11;
      MEMORY[0x1E01B07E0](v50, -1, -1);
    }

    v41(v65, v80);
    a4 = v46;
    a7 = v64;
    a3 = (unint64_t)v81;
    uint64_t v44 = v63;
  }
  uint64_t v81 = *(NSObject **)(v66 + 16);
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v42;
  *(void *)(v51 + 24) = a12;
  uint64_t v52 = v67;
  *(void *)(v51 + 32) = a13;
  *(void *)(v51 + 40) = v52;
  *(unsigned char *)(v51 + 48) = v77 & 1;
  *(void *)(v51 + 56) = v44;
  *(void *)(v51 + 64) = v45;
  *(void *)(v51 + 72) = a2;
  *(void *)(v51 + 80) = a3;
  uint64_t v53 = v69;
  *(void *)(v51 + 88) = v70;
  *(void *)(v51 + 96) = a4;
  unint64_t v54 = v78;
  *(void *)(v51 + 104) = v78;
  *(void *)(v51 + 112) = v53;
  uint64_t v55 = v68;
  *(void *)(v51 + 120) = a7;
  *(void *)(v51 + 128) = v55;
  uint64_t v87 = sub_1DCEDC2FC;
  uint64_t v88 = v51;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v84 = 1107296256;
  uint64_t v85 = sub_1DCEC8CA4;
  uint64_t v86 = &block_descriptor_24;
  unint64_t v56 = _Block_copy(&aBlock);
  sub_1DCD8400C(a2, a3);
  sub_1DCD8400C(a4, v54);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v57 = v42;
  swift_retain();
  id v58 = v71;
  sub_1DD0481C8();
  uint64_t v82 = MEMORY[0x1E4FBC860];
  sub_1DCEDDDF8(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCE779F4((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  id v59 = v73;
  uint64_t v60 = v76;
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v58, v59, v56);
  _Block_release(v56);
  sub_1DCD392D4(a2, a3);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v59, v60);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v58, v74);
  swift_release();
  return v57;
}

void sub_1DCED65F8(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, int a5, void *a6, uint64_t a7, uint64_t a8, unint64_t a9, void *a10, uint64_t a11, unint64_t a12)
{
  uint64_t v110 = a8;
  uint64_t v118 = a7;
  uint64_t v120 = a4;
  id v121 = a6;
  LODWORD(v119) = a5;
  uint64_t v15 = sub_1DD047C38();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v112 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals();
  MEMORY[0x1F4188790](v111);
  uint64_t v113 = (uint64_t *)((char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1DD048068();
  uint64_t v123 = *(void *)(v18 - 8);
  uint64_t v124 = v18;
  MEMORY[0x1F4188790](v18);
  id v122 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v114 = (char *)&v109 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v109 - v23;
  uint64_t v25 = (os_unfair_lock_s *)(*(void *)(a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
  os_unfair_lock_lock(v25);
  LODWORD(a1) = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled);
  os_unfair_lock_unlock(v25);
  if (a1 == 1)
  {
    sub_1DCDB40EC((uint64_t)v24);
    uint64_t v26 = sub_1DD048048();
    os_log_type_t v27 = sub_1DD048848();
    if (os_log_type_enabled(v26, v27))
    {
      int v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v28 = 0;
      _os_log_impl(&dword_1DCCF9000, v26, v27, "submitUserFeedback(): canceled", v28, 2u);
      MEMORY[0x1E01B07E0](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v123 + 8))(v24, v124);
    sub_1DCE6A230();
    uint64_t v29 = (void *)swift_allocError();
    *os_log_type_t v30 = 0;
    a2();
  }
  uint64_t v115 = a2;
  uint64_t v116 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03D88);
  uint64_t inited = swift_initStackObject();
  long long v117 = xmmword_1DD04E760;
  *(_OWORD *)(inited + 16) = xmmword_1DD04E760;
  if ((sub_1DCDE82EC() & 1) == 0)
  {
    if (qword_1EBE871A0 == -1) {
      goto LABEL_9;
    }
    goto LABEL_55;
  }
  if (qword_1EAB01C28 != -1) {
LABEL_55:
  }
    swift_once();
LABEL_9:
  swift_retain();
  sub_1DCD9D284();
  uint64_t v33 = v32;
  char v35 = v34;
  swift_release();
  *(void *)(inited + 32) = v33;
  char v36 = v119 & 1;
  if (v119) {
    uint64_t v37 = 2;
  }
  else {
    uint64_t v37 = 1;
  }
  uint64_t v38 = 64;
  if (v119) {
    uint64_t v38 = 96;
  }
  *(unsigned char *)(inited + 40) = v35 & 1;
  *(void *)(inited + 48) = 0x6C616E7265746E69;
  *(void *)(inited + 56) = 0xE800000000000000;
  *(void *)(inited + 64) = v120;
  *(unsigned char *)(inited + 72) = v36;
  *(void *)(inited + 80) = 0x746E656D75677261;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(void *)(inited + 96) = 1;
  *(unsigned char *)(inited + 104) = 0;
  *(void *)(inited + 112) = 0x746C7561666564;
  *(void *)(inited + 120) = 0xE700000000000000;
  long long v39 = (uint64_t *)(inited + v38);
  if (v35) {
    uint64_t v40 = v37;
  }
  else {
    uint64_t v40 = 0;
  }
  if ((v35 & 1) == 0) {
    long long v39 = (uint64_t *)(inited + 32);
  }
  uint64_t v41 = *(void *)(inited + 32 + 32 * v40 + 24);
  uint64_t v120 = *v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03D90);
  uint64_t v42 = swift_initStackObject();
  *(_OWORD *)(v42 + 16) = v117;
  if (sub_1DCDE82EC())
  {
    if (qword_1EAB01C28 != -1) {
      swift_once();
    }
    uint64_t v43 = (uint64_t *)&off_1EAB02A48;
  }
  else
  {
    if (qword_1EBE871A0 != -1) {
      swift_once();
    }
    uint64_t v43 = &qword_1EBE871E8;
  }
  uint64_t v44 = *(void **)(*v43 + 32);
  swift_retain();
  uint64_t v45 = (void *)sub_1DD0483D8();
  id v46 = objc_msgSend(v44, sel_stringForKey_, v45);

  if (v46)
  {
    uint64_t v47 = sub_1DD048408();
    unint64_t v49 = v48;
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v47 = 0;
    unint64_t v49 = 0;
  }
  *(void *)(v42 + 96) = 0xD000000000000029;
  long long v50 = (uint64_t *)(v42 + 96);
  *(void *)(v42 + 32) = v47;
  *(void *)(v42 + 40) = v49;
  *(void *)(v42 + 64) = v121;
  *(void *)(v42 + 48) = 0x6C616E7265746E69;
  *(void *)(v42 + 56) = 0xE800000000000000;
  unint64_t v51 = v118;
  *(void *)(v42 + 72) = v118;
  *(void *)(v42 + 80) = 0x746E656D75677261;
  *(void *)(v42 + 88) = 0xE800000000000000;
  *(void *)(v42 + 104) = 0x80000001DD06D7C0;
  *(void *)(v42 + 112) = 0x746C7561666564;
  *(void *)(v42 + 120) = 0xE700000000000000;
  if (v49)
  {
    uint64_t v52 = 0;
    long long v50 = (uint64_t *)(v42 + 32);
  }
  else
  {
    uint64_t v52 = 1;
    if (v51) {
      long long v50 = (uint64_t *)(v42 + 64);
    }
    else {
      uint64_t v52 = 2;
    }
    if (v51) {
      unint64_t v49 = v51;
    }
    else {
      unint64_t v49 = 0x80000001DD06D7C0;
    }
  }
  uint64_t v53 = v42 + 32 + 32 * v52;
  uint64_t v54 = *(void *)(v53 + 16);
  uint64_t v55 = *(void *)(v53 + 24);
  uint64_t v56 = *v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v41)
  {
    sub_1DCEDD6F4(v56, v49, v54, v55);
    sub_1DCEDD738();
    uint64_t v68 = (void *)swift_allocError();
    uint64_t v69 = 0x69766E65206C696ELL;
    unint64_t v70 = 0xEF746E656D6E6F72;
LABEL_44:
    uint64_t *v67 = v69;
    v67[1] = v70;
    swift_willThrow();
    uint64_t v74 = (uint64_t)v122;
    sub_1DCDB40EC((uint64_t)v122);
    id v75 = v68;
    id v76 = v68;
    unsigned int v77 = sub_1DD048048();
    os_log_type_t v78 = sub_1DD048858();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v80 = (uint8_t *)swift_slowAlloc();
      uint64_t v81 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v80 = 138412290;
      id v82 = v68;
      uint64_t v83 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v125 = v83;
      uint64_t v74 = (uint64_t)v122;
      sub_1DD048A28();
      *uint64_t v81 = v83;

      _os_log_impl(&dword_1DCCF9000, v77, v78, "submitUserFeedback(): %@", v80, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v81, -1, -1);
      MEMORY[0x1E01B07E0](v80, -1, -1);
    }
    else
    {
    }
    uint64_t v84 = v115;

    (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v74, v124);
    id v85 = v68;
    ((void (*)(void *))v84)(v68);

    return;
  }
  swift_bridgeObjectRelease();
  if (!v55 || (swift_bridgeObjectRelease(), !v49))
  {
    sub_1DCEDD738();
    uint64_t v68 = (void *)swift_allocError();
    uint64_t v69 = 0x746E6F63206C696ELL;
    unint64_t v70 = 0xED000072656E6961;
    goto LABEL_44;
  }
  unint64_t v57 = a9;
  id v58 = v114;
  sub_1DCDB40EC((uint64_t)v114);
  swift_bridgeObjectRetain_n();
  id v59 = sub_1DD048048();
  os_log_type_t v60 = sub_1DD048848();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = swift_slowAlloc();
    id v121 = (id)swift_slowAlloc();
    *(void *)&long long v125 = v121;
    *(_DWORD *)uint64_t v61 = 136315394;
    uint64_t v119 = v61 + 4;
    id v62 = (id)CKContainerEnvironmentString();
    uint64_t v63 = sub_1DD048408();
    unint64_t v65 = v64;

    uint64_t v129 = sub_1DCED7FA0(v63, v65, (uint64_t *)&v125);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v61 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v129 = sub_1DCED7FA0(v56, v49, (uint64_t *)&v125);
    unint64_t v57 = a9;
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DCCF9000, v59, v60, "submitUserFeedback(): environment=%s, container=%s", (uint8_t *)v61, 0x16u);
    id v66 = v121;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v66, -1, -1);
    MEMORY[0x1E01B07E0](v61, -1, -1);

    (*(void (**)(char *, uint64_t))(v123 + 8))(v114, v124);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v123 + 8))(v58, v124);
  }
  uint64_t v71 = v113;
  uint64_t v129 = v110;
  unint64_t v130 = v57;
  uint64_t v127 = 0;
  long long v125 = 0u;
  long long v126 = 0u;
  sub_1DCD33F64(v110, v57);
  sub_1DD047C28();
  sub_1DCEDDDF8(&qword_1EAB02850, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals);
  sub_1DD047E38();
  sub_1DCF0FBE8(a10, 1);
  uint64_t v73 = (void *)v72;
  uint64_t v86 = sub_1DCF0FE88(v72);
  unint64_t v88 = v87;

  uint64_t v124 = sub_1DD0483D8();
  swift_bridgeObjectRelease();
  uint64_t v89 = *v71;
  unint64_t v90 = v71[1];
  sub_1DCD33F64(*v71, v90);
  uint64_t v123 = sub_1DD0464D8();
  sub_1DCD21954(v89, v90);
  if (a12 >> 60 == 15) {
    id v122 = 0;
  }
  else {
    id v122 = (char *)sub_1DD0464D8();
  }
  id v121 = self;
  uint64_t v91 = (uint64_t)v71;
  uint64_t v92 = v71[2];
  unint64_t v93 = v71[3];
  sub_1DCD33F64(v92, v93);
  uint64_t v119 = sub_1DD0464D8();
  sub_1DCD21954(v92, v93);
  swift_bridgeObjectRetain();
  uint64_t v118 = sub_1DD0483D8();
  swift_bridgeObjectRelease();
  int v94 = *(_DWORD *)(v91 + 32);
  uint64_t v95 = (char *)sub_1DD0464D8();
  uint64_t v114 = v95;
  uint64_t v96 = sub_1DD0483D8();
  *(void *)&long long v117 = v96;
  uint64_t v97 = swift_allocObject();
  uint64_t v98 = v116;
  *(void *)(v97 + 16) = v115;
  *(void *)(v97 + 24) = v98;
  uint64_t v127 = sub_1DCEDD78C;
  uint64_t v128 = v97;
  *(void *)&long long v125 = MEMORY[0x1E4F143A8];
  *((void *)&v125 + 1) = 1107296256;
  *(void *)&long long v126 = sub_1DCED7654;
  *((void *)&v126 + 1) = &block_descriptor_33;
  unint64_t v99 = v88;
  long long v100 = _Block_copy(&v125);
  swift_retain();
  swift_release();
  uint64_t v108 = v96;
  double v107 = v95;
  uint64_t v102 = (void *)v123;
  uint64_t v101 = (void *)v124;
  uint64_t v103 = v122;
  uint64_t v104 = (void *)v118;
  char v105 = (void *)v119;
  LODWORD(v106) = v94;
  objc_msgSend(v121, sel_uploadUserFeedbackToEnvironment_container_request_sfReport_intermediateResults_deviceInfo_nsfwConfidence_imageData_reportIdentifier_completionHandler_, v120, v124, v123, v122, v119, v118, v106, v107, v108, v100);
  sub_1DCD21954(v86, v99);
  _Block_release(v100);

  sub_1DCEDA584(v91, (uint64_t (*)(void))type metadata accessor for Argos_Protos_Userfeedback_UserFeedbackOnDeviceSignals);
}

uint64_t sub_1DCED7360(void *a1, uint64_t (*a2)(void *))
{
  os_log_type_t v27 = a2;
  uint64_t v3 = sub_1DD048068();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v24 - v8;
  if (a1)
  {
    id v10 = a1;
    sub_1DCDB40EC((uint64_t)v6);
    id v11 = a1;
    id v12 = a1;
    uint64_t v13 = sub_1DD048048();
    os_log_type_t v14 = sub_1DD048848();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_t v25 = v13;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      uint64_t v26 = v4;
      *(_DWORD *)uint64_t v15 = 138412290;
      v24[1] = v15 + 4;
      id v17 = a1;
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v28 = v18;
      uint64_t v4 = v26;
      sub_1DD048A28();
      *uint64_t v16 = v18;

      os_log_t v19 = v25;
      _os_log_impl(&dword_1DCCF9000, v25, v14, "submitUserFeedback(): %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v16, -1, -1);
      MEMORY[0x1E01B07E0](v15, -1, -1);
    }
    else
    {
    }
    uint64_t v9 = v6;
  }
  else
  {
    sub_1DCDB40EC((uint64_t)v24 - v8);
    uint64_t v20 = sub_1DD048048();
    os_log_type_t v21 = sub_1DD048848();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_1DCCF9000, v20, v21, "submitUserFeedback(): successful", v22, 2u);
      MEMORY[0x1E01B07E0](v22, -1, -1);
    }
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  return v27(a1);
}

void sub_1DCED7654(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1DCED76C0(char a1)
{
  uint64_t v2 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD04EF00;
  *(unsigned char *)(inited + 32) = 3;
  *(void *)(inited + 40) = sub_1DCED7934(a1, 3u, (void (*)(void))type metadata accessor for NatureworldModelFactory, (uint64_t (*)(char *, unsigned char *, uint64_t))sub_1DCF21558, "Failed to resolve provider for natureworld");
  *(unsigned char *)(inited + 48) = 2;
  *(void *)(inited + 56) = sub_1DCED7934(a1, 2u, (void (*)(void))type metadata accessor for UnifiedModelFactory, (uint64_t (*)(char *, unsigned char *, uint64_t))sub_1DCE95C5C, "Failed to resolve provider for unified");
  *(unsigned char *)(inited + 64) = 4;
  *(void *)(inited + 72) = sub_1DCED7934(a1, 4u, (void (*)(void))type metadata accessor for ApparelModelFactory, (uint64_t (*)(char *, unsigned char *, uint64_t))sub_1DCFA4448, "Failed to resolve provider for natureworld");
  *(unsigned char *)(inited + 80) = 5;
  if (sub_1DCE12B64(5u))
  {
    uint64_t v7 = v6;
    HIBYTE(v14) = a1;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
    type metadata accessor for FoodModelFactory();
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = sub_1DCF1EDA0((char *)&v14 + 7, (uint64_t)v4, v9);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v10 = 0;
  }
  *(void *)(inited + 88) = v10;
  *(unsigned char *)(inited + 96) = 6;
  *(void *)(inited + 104) = sub_1DCED7934(a1, 6u, (void (*)(void))type metadata accessor for SignSymbolModelFactory, (uint64_t (*)(char *, unsigned char *, uint64_t))sub_1DCF57CAC, "Failed to resolve provider for signSymbol");
  unint64_t v11 = sub_1DCDBA3E4(inited);
  uint64_t v12 = sub_1DCED7B5C(v11);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1DCED7934(char a1, unsigned __int8 a2, void (*a3)(void), uint64_t (*a4)(char *, unsigned char *, uint64_t), const char *a5)
{
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = &v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (sub_1DCE12B64(a2))
  {
    uint64_t v18 = v17;
    char v27 = a1;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(ObjectType, v18);
    a3(0);
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = a4(&v27, v16, v20);
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_1DCDB40EC((uint64_t)v13);
    uint64_t v22 = sub_1DD048048();
    os_log_type_t v23 = sub_1DD048858();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_1DCCF9000, v22, v23, a5, v24, 2u);
      MEMORY[0x1E01B07E0](v24, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  return v21;
}

uint64_t sub_1DCED7B5C(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC868];
  uint64_t v3 = a1 + 64;
  uint64_t v30 = MEMORY[0x1E4FBC868];
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    if (v11)
    {
      char v16 = *(unsigned char *)(*(void *)(a1 + 48) + v10);
      unint64_t v17 = *(void *)(v2 + 16);
      if (*(void *)(v2 + 24) <= v17)
      {
        uint64_t v18 = v17 + 1;
        swift_retain_n();
        sub_1DCE833D8(v18, 1);
        uint64_t v2 = v30;
      }
      else
      {
        swift_retain_n();
      }
      sub_1DD0490B8();
      sub_1DD0484F8();
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_1DD049108();
      uint64_t v20 = v2 + 64;
      uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v22 = v19 & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v2 + 64 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v2 + 64 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v26 && (v25 & 1) != 0) {
            goto LABEL_41;
          }
          BOOL v27 = v23 == v26;
          if (v23 == v26) {
            unint64_t v23 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v20 + 8 * v23);
        }
        while (v28 == -1);
        unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
      }
      *(void *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      *(unsigned char *)(*(void *)(v2 + 48) + v24) = v16;
      *(void *)(*(void *)(v2 + 56) + 8 * v24) = v11;
      ++*(void *)(v2 + 16);
      swift_release();
      if (v6) {
        goto LABEL_5;
      }
    }
    else if (v6)
    {
      goto LABEL_5;
    }
LABEL_8:
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x1DCED7F20);
    }
    if (v12 >= v7) {
      goto LABEL_39;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    int64_t v14 = v8 + 1;
    if (!v13)
    {
      int64_t v14 = v8 + 2;
      if (v8 + 2 >= v7) {
        goto LABEL_39;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v8 + 3;
        if (v8 + 3 >= v7) {
          goto LABEL_39;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v8 + 4;
          if (v8 + 4 >= v7) {
            goto LABEL_39;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v14);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v8 = v14;
  }
  int64_t v15 = v8 + 5;
  if (v8 + 5 < v7)
  {
    unint64_t v13 = *(void *)(v3 + 8 * v15);
    if (!v13)
    {
      while (1)
      {
        int64_t v14 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_42;
        }
        if (v14 >= v7) {
          goto LABEL_39;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v14);
        ++v15;
        if (v13) {
          goto LABEL_23;
        }
      }
    }
    int64_t v14 = v8 + 5;
    goto LABEL_23;
  }
LABEL_39:
  sub_1DCD505A4();
  return v2;
}

uint64_t sub_1DCED7F3C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCED7FA0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1DCED8074(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1DCD21A28((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1DCD21A28((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1DCED8074(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1DD048A38();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1DCED8230(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1DD048C18();
  if (!v8)
  {
    sub_1DD048C98();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1DD048D18();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1DCED8230(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1DCED82C8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DCED8440(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1DCED8440(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1DCED82C8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1DCD4E6E0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1DD048BA8();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1DD048C98();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1DD048578();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1DD048D18();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1DD048C98();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1DCED8440(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86AF8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCED8590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v51 = a4;
  uint64_t v9 = sub_1DD048068();
  uint64_t v50 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  size_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1DD046478();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  int64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1DD0479E8();
  uint64_t v56 = &off_1F3837370;
  *(void *)&long long v54 = a5;
  sub_1DD0463C8();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1DD046488();
  unint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1DD046358();
  swift_allocObject();
  sub_1DD046348();
  sub_1DCEDDF64();
  sub_1DD046338();
  uint64_t v26 = v53;
  if (*(void *)(v53 + 16) && (unint64_t v27 = sub_1DCEAD1A4(5459817, 0xE300000000000000), (v28 & 1) != 0))
  {
    uint64_t v29 = *(void *)(*(void *)(v26 + 56) + 8 * v27);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v53 = MEMORY[0x1E4FBC870];
  uint64_t v30 = *(void *)(v29 + 16);
  if (v30)
  {
    uint64_t v44 = v16;
    unint64_t v45 = v18;
    uint64_t v46 = a3;
    int v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = -v30;
    uint64_t v34 = v29 + 40;
    unint64_t v48 = 0x80000001DD06D970;
    uint64_t v49 = v9;
    uint64_t v43 = v29 + 40;
LABEL_12:
    int v47 = v31;
    char v35 = (uint64_t *)(v34 + 16 * v32++);
    while ((unint64_t)(v32 - 1) < *(void *)(v29 + 16))
    {
      uint64_t v38 = *(v35 - 1);
      uint64_t v37 = *v35;
      swift_bridgeObjectRetain_n();
      uint64_t v39 = sub_1DCD9CB54();
      if (v39 == 26)
      {
        if (v38 == 0xD000000000000010 && v37 == v48)
        {
          uint64_t result = swift_bridgeObjectRelease();
LABEL_22:
          int v31 = 1;
          uint64_t v34 = v43;
          if (v33 + v32) {
            goto LABEL_12;
          }
          sub_1DCD21954(v44, v45);
          swift_bridgeObjectRelease();
          a3 = v46;
          uint64_t v9 = v49;
LABEL_25:
          swift_bridgeObjectRelease();
          a6[2] = 0;
          goto LABEL_2;
        }
        char v40 = sub_1DD048FA8();
        uint64_t result = swift_bridgeObjectRelease();
        if (v40) {
          goto LABEL_22;
        }
      }
      else
      {
        uint64_t v36 = v39;
        swift_bridgeObjectRelease();
        uint64_t result = sub_1DCF51818(&v52, v36);
      }
      ++v32;
      v35 += 2;
      if (v33 + v32 == 1)
      {
        sub_1DCD21954(v44, v45);
        swift_bridgeObjectRelease();
        uint64_t v41 = v53;
        a3 = v46;
        uint64_t v9 = v49;
        if ((v47 & 1) == 0) {
          goto LABEL_27;
        }
        goto LABEL_25;
      }
    }
    __break(1u);
  }
  else
  {
    sub_1DCD21954(v16, v18);
    swift_bridgeObjectRelease();
    uint64_t v41 = MEMORY[0x1E4FBC870];
LABEL_27:
    if (*(void *)(v41 + 16))
    {
      a6[2] = v41;
    }
    else
    {
      swift_bridgeObjectRelease();
      a6[2] = 1;
    }
LABEL_2:
    sub_1DCDB40EC((uint64_t)v11);
    swift_retain_n();
    uint64_t v19 = sub_1DD048048();
    os_log_type_t v20 = sub_1DD048848();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v49 = v9;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v53 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v23 = sub_1DCD6D7D4(a6[2]);
      uint64_t v52 = sub_1DCED7FA0(v23, v24, &v53);
      sub_1DD048A28();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v19, v20, "Domains from Trial: %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v22, -1, -1);
      MEMORY[0x1E01B07E0](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v49);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v9);
    }
    a6[3] = v51;
    a6[4] = a3;
    sub_1DCD3A4DC(&v54, (uint64_t)(a6 + 5));
    return (uint64_t)a6;
  }
  return result;
}

uint64_t *sub_1DCED8B40(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v45 = *a5;
  uint64_t v46 = a3;
  uint64_t v9 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v9);
  size_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for VisualIntelligenceModelProviderService();
  v48[3] = v12;
  v48[4] = &off_1F38381F8;
  v48[0] = a2;
  int v44 = a1;
  *((unsigned char *)a5 + 16) = a1;
  a5[18] = a4;
  __swift_project_boxed_opaque_existential_1(v48, v12);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1DCE12B64(0);
  uint64_t v15 = v14;
  if (v13)
  {
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    swift_unknownObjectRetain();
    v17(ObjectType, v15);
    swift_unknownObjectRelease();
    sub_1DCECD634((uint64_t)v47);
    sub_1DCEDA584((uint64_t)v11, type metadata accessor for MLModelInfo);
    long long v18 = v47[0];
    long long v19 = v47[1];
    long long v20 = v47[2];
    long long v21 = v47[3];
    long long v22 = v47[4];
    long long v23 = v47[5];
    long long v24 = v47[6];
  }
  else
  {
    long long v18 = 0uLL;
    long long v19 = 0uLL;
    long long v20 = 0uLL;
    long long v21 = 0uLL;
    long long v22 = 0uLL;
    long long v23 = 0uLL;
    long long v24 = 0uLL;
  }
  *(_OWORD *)(a5 + 3) = v18;
  *(_OWORD *)(a5 + 5) = v19;
  *(_OWORD *)(a5 + 7) = v20;
  *(_OWORD *)(a5 + 9) = v21;
  *(_OWORD *)(a5 + 11) = v22;
  *(_OWORD *)(a5 + 13) = v23;
  *(_OWORD *)(a5 + 15) = v24;
  if (v13)
  {
    uint64_t v25 = swift_getObjectType();
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    swift_unknownObjectRetain();
    v26(v25, v15);
    swift_unknownObjectRelease();
    unint64_t v27 = &v11[*(int *)(v9 + 24)];
    uint64_t v29 = *(void *)v27;
    uint64_t v28 = *((void *)v27 + 1);
    swift_bridgeObjectRetain();
    sub_1DCEDA584((uint64_t)v11, type metadata accessor for MLModelInfo);
    a5[21] = v29;
    a5[22] = v28;
    LOBYTE(v47[0]) = v44;
    uint64_t v30 = swift_getObjectType();
    swift_unknownObjectRetain();
    v26(v30, v15);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v13;
    *(void *)(v31 + 24) = v15;
    type metadata accessor for CachedCoreMLModelProvider();
    swift_allocObject();
    uint64_t v32 = sub_1DCF3D39C((char *)v47, (uint64_t)v11, 4, 0, (uint64_t)sub_1DCEDE078, v31);
    swift_release();
  }
  else
  {
    uint64_t v32 = 0;
    a5[21] = 0;
    a5[22] = 0;
  }
  a5[17] = (uint64_t)v32;
  sub_1DCD3A3BC((uint64_t)v48, (uint64_t)v47);
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = a4;
  sub_1DCD3A4DC(v47, (uint64_t)(v33 + 3));
  uint64_t v34 = v45;
  v33[8] = v46;
  v33[9] = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86278);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 24) = 0;
  *(unsigned char *)(v35 + 32) = -1;
  *(void *)(v35 + 56) = 0;
  *(void *)(v35 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
  uint64_t v36 = swift_allocObject();
  *(_DWORD *)(v36 + 16) = 0;
  *(void *)(v35 + 80) = v36;
  *(void *)(v35 + 40) = sub_1DCEDE000;
  *(void *)(v35 + 48) = v33;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1DCD33E90(0);
  *(void *)(v35 + 72) = 8;
  swift_release();
  uint64_t v37 = sub_1DCF31D08();
  swift_release();
  a5[19] = v37;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v13;
  *(void *)(v38 + 24) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B70);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 24) = 0;
  *(unsigned char *)(v39 + 32) = -1;
  *(void *)(v39 + 56) = 0;
  *(void *)(v39 + 64) = 0;
  uint64_t v40 = swift_allocObject();
  *(_DWORD *)(v40 + 16) = 0;
  *(void *)(v39 + 80) = v40;
  *(void *)(v39 + 40) = sub_1DCEDE05C;
  *(void *)(v39 + 48) = v38;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_1DCD33E90(0);
  *(void *)(v39 + 72) = 0;
  swift_release();
  uint64_t v41 = sub_1DCF31D08();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  a5[20] = v41;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return a5;
}

void *sub_1DCED9000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_1DD048068();
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v16 - 8);
  long long v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for VisualIntelligenceModelProviderService();
  v36[3] = v19;
  v36[4] = &off_1F38381F8;
  v36[0] = a2;
  a5[3] = a4;
  a5[4] = a3;
  a5[2] = a1;
  __swift_project_boxed_opaque_existential_1(v36, v19);
  swift_retain();
  swift_retain();
  if (sub_1DCE12B64(1u))
  {
    uint64_t v21 = v20;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(ObjectType, v21);
    type metadata accessor for DomainPredictionNet();
    swift_allocObject();
    uint64_t v23 = sub_1DCD76D1C((uint64_t)v18, 8, 0);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1DCDB40EC((uint64_t)v15);
    long long v24 = sub_1DD048048();
    os_log_type_t v25 = sub_1DD048858();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_1DCCF9000, v24, v25, "DomainPredictionModel cannot be not initialized.", v26, 2u);
      MEMORY[0x1E01B07E0](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v10);
    uint64_t v23 = 0;
  }
  a5[5] = v23;
  a5[9] = &type metadata for EspressoRequestHandler;
  a5[10] = &off_1F383B7A0;
  unint64_t v27 = (_OWORD *)swift_allocObject();
  a5[6] = v27;
  v27[1] = 0u;
  v27[2] = 0u;
  void v27[3] = 0u;
  v27[4] = 0u;
  v27[5] = 0u;
  sub_1DCD2889C((uint64_t)(a5 + 6), (uint64_t)v34, (uint64_t *)&unk_1EBE859E0);
  if (v35)
  {
    swift_release();
    swift_release();
    sub_1DCD2479C((uint64_t)v34, (uint64_t *)&unk_1EBE859E0);
  }
  else
  {
    sub_1DCD2479C((uint64_t)v34, (uint64_t *)&unk_1EBE859E0);
    sub_1DCDB40EC((uint64_t)v12);
    uint64_t v28 = sub_1DD048048();
    os_log_type_t v29 = sub_1DD048858();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_1DCCF9000, v28, v29, "domainPredictionNetHandler cannot be not initialized.", v30, 2u);
      MEMORY[0x1E01B07E0](v30, -1, -1);
    }
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return a5;
}

uint64_t sub_1DCED93C0(void *a1, int a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14)
{
  uint64_t v55 = a8;
  id v58 = a6;
  uint64_t v53 = a5;
  uint64_t v57 = a13;
  uint64_t v63 = sub_1DD0481B8();
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  id v59 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1DD0481D8();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v56 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = &type metadata for PixelImage;
  unint64_t v70 = &off_1F3838208;
  uint64_t v67 = a1;
  int v68 = a2;
  type metadata accessor for MetricsBucket();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = MEMORY[0x1E4FBC860];
  v71[0] = 0x6150202D20453245;
  v71[1] = 0xEB00000000657372;
  v71[2] = "Parse Overall";
  v71[3] = 13;
  char v72 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  id v26 = a1;
  uint64_t v27 = sub_1DCEA469C((uint64_t)v71, v25);
  swift_release();
  if (a7) {
    id v28 = a7;
  }
  else {
    id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9B8]), sel_init);
  }
  id v29 = a7;
  uint64_t v30 = sub_1DD0464E8();
  uint64_t v50 = v30;
  unint64_t v32 = v31;
  unint64_t v51 = v31;

  uint64_t v54 = *(void *)(a14 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_queue);
  uint64_t v33 = swift_allocObject();
  swift_weakInit();
  sub_1DCD3A3BC((uint64_t)&v67, (uint64_t)v66);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v33;
  *(void *)(v34 + 24) = a3;
  *(void *)(v34 + 32) = v25;
  sub_1DCD3A4DC(v66, v34 + 40);
  *(double *)(v34 + 80) = a9;
  *(double *)(v34 + 88) = a10;
  *(double *)(v34 + 96) = a11;
  *(double *)(v34 + 104) = a12;
  uint64_t v35 = (uint64_t *)a4;
  sub_1DCD43B04(a4, v34 + 112, &qword_1EBE855D8);
  uint64_t v36 = v53;
  *(void *)(v34 + 176) = v53;
  *(void *)(v34 + 184) = v27;
  uint64_t v37 = v27;
  uint64_t v38 = v58;
  *(void *)(v34 + 192) = v58;
  *(void *)(v34 + 200) = v30;
  uint64_t v39 = v55;
  *(void *)(v34 + 208) = v32;
  *(void *)(v34 + 216) = v39;
  uint64_t v52 = v37;
  *(void *)(v34 + 224) = v57;
  aBlock[4] = sub_1DCEBF864;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCEC8CA4;
  aBlock[3] = &block_descriptor_69;
  uint64_t v40 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1DCEBF700(v35);
  id v41 = v36;
  swift_retain();
  id v42 = v38;
  uint64_t v43 = v50;
  unint64_t v44 = v51;
  sub_1DCD33F64(v50, v51);
  swift_retain();
  uint64_t v45 = v56;
  sub_1DD0481C8();
  uint64_t v64 = MEMORY[0x1E4FBC860];
  sub_1DCEDDDF8(&qword_1EBE84EB0, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84FD0);
  sub_1DCE779F4((unint64_t *)&qword_1EBE84FE0, (uint64_t *)&unk_1EBE84FD0);
  uint64_t v46 = v59;
  uint64_t v47 = v63;
  sub_1DD048AE8();
  MEMORY[0x1E01AE570](0, v45, v46, v40);
  _Block_release(v40);
  sub_1DCD21954(v43, v44);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v46, v47);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v61);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
}

void *sub_1DCED995C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11, void *a12)
{
  uint64_t v102 = a8;
  id v101 = a7;
  LODWORD(v99) = a5;
  uint64_t v100 = a4;
  uint64_t v98 = a3;
  uint64_t v15 = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0);
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  uint64_t v96 = (uint64_t)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB8);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v92 = (uint64_t)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v91 = (uint64_t)&v87 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v94 = (uint64_t)&v87 - v23;
  MEMORY[0x1F4188790](v24);
  id v26 = (char *)&v87 - v25;
  uint64_t v27 = type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig(0);
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v95 = (char *)&v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  unint64_t v88 = (float *)((char *)&v87 - v31);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v87 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (uint64_t *)((char *)&v87 - v36);
  uint64_t v106 = type metadata accessor for VisualIntelligenceModelProviderService();
  double v107 = &off_1F38381F8;
  uint64_t v93 = v106;
  uint64_t v105 = a1;
  sub_1DCD3A3BC((uint64_t)&v105, (uint64_t)a12 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_modelProviderService);
  *(void *)((char *)a12 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_objectDetector) = a2;
  sub_1DCEDB47C(a6, (uint64_t)a12 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_config, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  a12[13] = v98;
  a12[14] = v100;
  *(void *)((char *)a12 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_queue) = v101;
  *(void *)((char *)a12 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_trialWrapper) = v102;
  *((unsigned char *)a12 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_mlEngineType) = v99;
  uint64_t v38 = *(int *)(v16 + 28);
  uint64_t v99 = a6;
  uint64_t v90 = v38;
  uint64_t v39 = *(void *)(a6 + v38)
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__boxScorerConfig;
  swift_beginAccess();
  sub_1DCD2889C(v39, (uint64_t)v26, &qword_1EBE85DB8);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  uint64_t v87 = v28 + 48;
  int v41 = v40(v26, 1, v27);
  uint64_t v97 = a2;
  if (v41 == 1)
  {
    *uint64_t v37 = 0;
    v37[1] = 0;
    swift_retain();
    swift_retain();
    swift_retain();
    id v42 = v101;
    swift_retain();
    sub_1DD047BE8();
    sub_1DCD2479C((uint64_t)v26, &qword_1EBE85DB8);
  }
  else
  {
    sub_1DCEDDEAC((uint64_t)v26, (uint64_t)v37, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
    swift_retain();
    swift_retain();
    swift_retain();
    id v43 = v101;
    swift_retain();
  }
  uint64_t v89 = *(int *)v37;
  sub_1DCEDA584((uint64_t)v37, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  uint64_t v44 = v99;
  uint64_t v45 = v90;
  uint64_t v46 = *(void *)(v99 + v90)
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__boxScorerConfig;
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = v94;
  sub_1DCD2889C(v47, v94, &qword_1EBE85DB8);
  int v49 = v40((char *)v48, 1, v27);
  uint64_t v50 = v88;
  if (v49 == 1)
  {
    *(void *)uint64_t v34 = 0;
    *((void *)v34 + 1) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C(v48, &qword_1EBE85DB8);
  }
  else
  {
    sub_1DCEDDEAC(v48, (uint64_t)v34, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  }
  uint64_t v51 = (uint64_t)v95;
  uint64_t v95 = a11;
  uint64_t v94 = a10;
  float v52 = *((float *)v34 + 1);
  sub_1DCEDA584((uint64_t)v34, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  uint64_t v53 = *(void *)(v44 + v45)
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__boxScorerConfig;
  swift_beginAccess();
  uint64_t v54 = v53;
  uint64_t v55 = v91;
  sub_1DCD2889C(v54, v91, &qword_1EBE85DB8);
  if (v40((char *)v55, 1, v27) == 1)
  {
    *(void *)uint64_t v50 = 0;
    *((void *)v50 + 1) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C(v55, &qword_1EBE85DB8);
  }
  else
  {
    sub_1DCEDDEAC(v55, (uint64_t)v50, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  }
  float v56 = v50[2];
  sub_1DCEDA584((uint64_t)v50, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  uint64_t v57 = *(void *)(v44 + v45)
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__boxScorerConfig;
  swift_beginAccess();
  uint64_t v58 = v57;
  uint64_t v59 = v92;
  sub_1DCD2889C(v58, v92, &qword_1EBE85DB8);
  if (v40((char *)v59, 1, v27) == 1)
  {
    *(void *)uint64_t v51 = 0;
    *(void *)(v51 + 8) = 0;
    sub_1DD047BE8();
    sub_1DCD2479C(v59, &qword_1EBE85DB8);
  }
  else
  {
    sub_1DCEDDEAC(v59, v51, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  }
  uint64_t v60 = v102;
  float v61 = *(float *)(v51 + 12);
  sub_1DCEDA584(v51, type metadata accessor for Argos_Protos_Queryflow_BoxScorerConfig);
  type metadata accessor for BoxScorer();
  swift_allocObject();
  uint64_t v62 = sub_1DCEC6394(v89, v52, v56, v61);
  sub_1DCD3A3BC((uint64_t)&v105, (uint64_t)v104);
  uint64_t v63 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v104, v104[3]);
  double v64 = MEMORY[0x1F4188790](v63);
  id v66 = (uint64_t *)((char *)&v87 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v67 + 16))(v66, v64);
  uint64_t v68 = *v66;
  v103[4] = &off_1F38381F8;
  uint64_t v69 = v93;
  v103[3] = v93;
  v103[0] = v68;
  type metadata accessor for TriggeringModelProcessor();
  unint64_t v70 = (void *)swift_allocObject();
  uint64_t v71 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v103, v69);
  double v72 = MEMORY[0x1F4188790](v71);
  uint64_t v74 = (uint64_t *)((char *)&v87 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v75 + 16))(v74, v72);
  uint64_t v76 = *v74;
  uint64_t v77 = v97;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  os_log_type_t v78 = sub_1DCED9000(v77, v76, a9, v62, v70);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
  a12[2] = v78;
  v104[0] = a9;
  uint64_t v79 = v99;
  uint64_t v80 = v96;
  sub_1DCEDB47C(v99, v96, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  type metadata accessor for DomainAssignmentProcessor();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  a12[3] = sub_1DCE71A1C(v104, v60, v80);
  sub_1DCEDB47C(v79, v80, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  type metadata accessor for RegionMergingProcessor();
  uint64_t v81 = swift_allocObject();
  *(void *)(v81 + OBJC_IVAR____TtC18VisualIntelligence22RegionMergingProcessor_boxScorer) = v62;
  sub_1DCEDDEAC(v80, v81 + OBJC_IVAR____TtC18VisualIntelligence22RegionMergingProcessor_config, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  a12[4] = v81;
  sub_1DCEDB47C(v79, v80, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  type metadata accessor for RegionGroupingProcessor();
  uint64_t v82 = swift_allocObject();
  *(void *)(v82 + OBJC_IVAR____TtC18VisualIntelligence23RegionGroupingProcessor_boxScorer) = v62;
  sub_1DCEDDEAC(v80, v82 + OBJC_IVAR____TtC18VisualIntelligence23RegionGroupingProcessor_config, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  a12[6] = v82;
  type metadata accessor for RegionSelectionProcessor();
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 16) = a9;
  a12[5] = v83;
  type metadata accessor for CameraAdditionalSignalProcessor();
  a12[7] = swift_allocObject();
  type metadata accessor for TriggeringPredictionProcessor();
  a12[8] = swift_allocObject();
  type metadata accessor for AnnotationExtractorProcessor();
  a12[9] = swift_allocObject();
  type metadata accessor for NSFWCheckerProcessor();
  swift_allocObject();
  swift_retain_n();
  swift_bridgeObjectRetain();
  a12[10] = sub_1DCD5A8DC();
  v104[0] = a9;
  sub_1DCEDB47C(v79, v80, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  type metadata accessor for DomainSelectionProcessor();
  swift_allocObject();
  uint64_t v84 = sub_1DCDBFE40(v94, v60, v104, v80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
  a12[11] = v84;
  type metadata accessor for DetectionUpdatingProcessor();
  uint64_t v85 = swift_allocObject();
  sub_1DCEDDEAC(v79, v85 + OBJC_IVAR____TtC18VisualIntelligence26DetectionUpdatingProcessor_config, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  a12[12] = v85;
  *(void *)((char *)a12 + OBJC_IVAR____TtC18VisualIntelligence9ParseFlow_domainGlyphConfig) = *((void *)v95 + 2);
  swift_bridgeObjectRetain();
  return a12;
}

uint64_t sub_1DCEDA584(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCEDA5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisualIntelligenceService.Options(0);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85380);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v38 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v37 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851C8);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1DD04EF60;
  uint64_t v15 = type metadata accessor for AvailabilityChecker();
  uint64_t v16 = swift_allocObject();
  *(void *)(v14 + 56) = v15;
  *(void *)(v14 + 64) = &off_1F383AF60;
  *(void *)(v14 + 32) = v16;
  uint64_t v17 = type metadata accessor for ImageSizeChecker();
  uint64_t v18 = swift_allocObject();
  *(void *)(v14 + 96) = v17;
  *(void *)(v14 + 104) = &off_1F383A768;
  *(void *)(v14 + 72) = v18;
  uint64_t v36 = a2;
  uint64_t v19 = sub_1DCFD9704(13, 0, 0x7478746270, 0xE500000000000000);
  sub_1DCD56E54(v19, v20, (uint64_t)v13);
  swift_bridgeObjectRelease();
  type metadata accessor for EligibilityChecker();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v14;
  sub_1DCEDDEAC((uint64_t)v13, v21 + OBJC_IVAR____TtC18VisualIntelligence18EligibilityChecker_config, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DD04E910;
  uint64_t v23 = swift_allocObject();
  *(void *)(v22 + 56) = v15;
  *(void *)(v22 + 64) = &off_1F383AF60;
  *(void *)(v22 + 32) = v23;
  uint64_t v24 = sub_1DCFD9704(13, 0, 0x7478746270, 0xE500000000000000);
  sub_1DCD56E54(v24, v25, (uint64_t)v13);
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v22;
  sub_1DCEDDEAC((uint64_t)v13, v26 + OBJC_IVAR____TtC18VisualIntelligence18EligibilityChecker_config, type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
  uint64_t v27 = v37;
  sub_1DCD2889C(a1, v37, &qword_1EBE848E0);
  uint64_t v28 = v38;
  sub_1DCD2889C(a1 + *(int *)(v5 + 28), v38, (uint64_t *)&unk_1EBE85380);
  uint64_t v29 = (uint64_t *)(a1 + *(int *)(v5 + 32));
  uint64_t v30 = *v29;
  unint64_t v31 = v29[1];
  type metadata accessor for NetworkService(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1DCE593DC(v27, v28, v30, v31);
  uint64_t v33 = v39;
  sub_1DCEDB47C(a1, v39, type metadata accessor for VisualIntelligenceService.Options);
  type metadata accessor for VisualIntelligenceService(0);
  uint64_t v34 = swift_allocObject();
  sub_1DCECE2A8(v32, v33, v21, v26, v36);
  sub_1DCEDA584(a1, type metadata accessor for VisualIntelligenceService.Options);
  return v34;
}

id sub_1DCEDA9EC(void *a1)
{
  uint64_t v2 = sub_1DD048068();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  MEMORY[0x1F4188790](v4);
  double v64 = (char *)&v61 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v61 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v61 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v63 = (uint64_t)&v61 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v62 = (uint64_t)&v61 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v61 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v61 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v61 - v23;
  double v26 = MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v61 - v27;
  if (a1 && objc_msgSend(a1, sel_imageType, v26) == (id)3)
  {
    uint64_t v29 = a1;
    sub_1DCDB40EC((uint64_t)v28);
    sub_1DCDB4300((uint64_t)v24);
    uint64_t v30 = *(void (**)(char *, uint64_t))(v3 + 8);
    v30(v28, v2);
    unint64_t v31 = sub_1DD048048();
    os_log_type_t v32 = sub_1DD048848();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl(&dword_1DCCF9000, v31, v32, "VIQueryContextImageTypeCameraFrame is already correctly set", v33, 2u);
      MEMORY[0x1E01B07E0](v33, -1, -1);
    }

    v30(v24, v2);
    id v34 = v29;
  }
  else
  {
    uint64_t v65 = a1;
    sub_1DCDB40EC((uint64_t)v21);
    sub_1DCDB4300((uint64_t)v18);
    uint64_t v35 = *(void (**)(char *, uint64_t))(v3 + 8);
    v35(v21, v2);
    uint64_t v36 = sub_1DD048048();
    os_log_type_t v37 = sub_1DD048848();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = v2;
      uint64_t v39 = v35;
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl(&dword_1DCCF9000, v36, v37, "Try to set VIQueryContextImageTypeCameraFrame into VIQueryContext", v40, 2u);
      int v41 = v40;
      uint64_t v35 = v39;
      uint64_t v2 = v38;
      MEMORY[0x1E01B07E0](v41, -1, -1);
    }

    v35(v18, v2);
    uint64_t v29 = v65;
    if (v65)
    {
      sub_1DCDB40EC((uint64_t)v11);
      sub_1DCDB4300((uint64_t)v8);
      v35(v11, v2);
      id v42 = sub_1DD048048();
      os_log_type_t v43 = sub_1DD048858();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = v2;
        uint64_t v45 = v35;
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl(&dword_1DCCF9000, v42, v43, "VIQueryContextImageTypeCameraFrame can't be set to imageType since it's a readonly property. System behavior might be not expected. This will later be enforced as a runtime error.", v46, 2u);
        uint64_t v47 = v46;
        uint64_t v35 = v45;
        uint64_t v2 = v44;
        MEMORY[0x1E01B07E0](v47, -1, -1);
      }

      v35(v8, v2);
      id v34 = v29;
    }
    else
    {
      sub_1DCD95648(0, qword_1EBE82D80);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82D20);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1DD04E910;
      *(void *)(inited + 32) = sub_1DD048408();
      *(void *)(inited + 40) = v49;
      uint64_t v50 = sub_1DD048808();
      *(void *)(inited + 72) = sub_1DCD95648(0, (unint64_t *)&qword_1EBE850A0);
      *(void *)(inited + 48) = v50;
      sub_1DCDB7C48(inited);
      id v34 = sub_1DCEA6F2C();
      uint64_t v51 = v62;
      sub_1DCDB40EC(v62);
      uint64_t v52 = v63;
      sub_1DCDB4300(v63);
      v35((char *)v51, v2);
      uint64_t v53 = sub_1DD048048();
      uint64_t v54 = sub_1DD048848();
      if (os_log_type_enabled(v53, (os_log_type_t)v54))
      {
        uint64_t v55 = v2;
        float v56 = v35;
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v57 = 0;
        _os_log_impl(&dword_1DCCF9000, v53, (os_log_type_t)v54, "VIQueryContextImageTypeCameraFrame is set", v57, 2u);
        uint64_t v58 = v57;
        uint64_t v35 = v56;
        uint64_t v2 = v55;
        MEMORY[0x1E01B07E0](v58, -1, -1);
      }

      v35((char *)v52, v2);
    }
  }
  id v59 = v29;
  return v34;
}

id sub_1DCEDB078(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE82D20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD04E760;
  *(void *)(inited + 32) = sub_1DD048408();
  *(void *)(inited + 40) = v3;
  uint64_t Context = type metadata accessor for VisualQueryContext();
  uint64_t v5 = *(uint64_t *)((char *)a1 + *(int *)(Context + 52));
  *(void *)(inited + 72) = MEMORY[0x1E4FBC538];
  *(void *)(inited + 48) = v5;
  *(void *)(inited + 80) = sub_1DD048408();
  *(void *)(inited + 88) = v6;
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  *(void *)(inited + 120) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 96) = v7;
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 128) = sub_1DD048408();
  *(void *)(inited + 136) = v9;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1DD048808();
  *(void *)(inited + 168) = sub_1DCD95648(0, (unint64_t *)&qword_1EBE850A0);
  *(void *)(inited + 144) = v10;
  sub_1DCDB7C48(inited);
  uint64_t v11 = *(void **)((char *)a1 + *(int *)(Context + 44));
  if (v11)
  {
    uint64_t v12 = sub_1DD048408();
    uint64_t v14 = v13;
    uint64_t v25 = sub_1DCD95648(0, &qword_1EAB03DE0);
    *(void *)&long long v24 = v11;
    sub_1DCD9E7E8(&v24, v23);
    id v15 = v11;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1DCE85354(v23, v12, v14, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = sub_1DD048408();
  uint64_t v19 = v18;
  uint64_t v20 = a1[3];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DD0);
  *(void *)&long long v24 = v20;
  sub_1DCD9E7E8(&v24, v23);
  swift_bridgeObjectRetain();
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_1DCE85354(v23, v17, v19, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCD95648(0, qword_1EBE82D80);
  return sub_1DCEA6F2C();
}

double sub_1DCEDB2D4(_OWORD *a1)
{
  double result = 0.0;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1DCEDB2F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 160);
  swift_bridgeObjectRetain();
  sub_1DCD434B4(v2);
  swift_bridgeObjectRetain();
  sub_1DCD43548(v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCEDB3B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 160);
  swift_bridgeObjectRelease();
  sub_1DCD43C58(v2);
  swift_bridgeObjectRelease();
  sub_1DCD43078(v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCEDB47C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCEDB4E4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1DCEDB51C(uint64_t a1)
{
  sub_1DCED15D4(a1, *(void (**)(_OWORD *, void *))(v1 + 16));
}

double sub_1DCEDB524(_OWORD *a1)
{
  double result = 0.0;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1DCEDB548()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1DCEDB588(uint64_t a1)
{
  sub_1DCED1C50(a1, *(void (**)(long long *, unsigned char *, void *))(v1 + 16), *(double *)(v1 + 32), *(void *)(v1 + 24), *(void *)(v1 + 40));
}

id sub_1DCEDB598(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v27[1] = a1;
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v27 - v12;
  id v14 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CancelSession()), sel_init);
  sub_1DCEDB47C(v4 + OBJC_IVAR____TtC18VisualIntelligence25VisualIntelligenceService_searchConfig, (uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  uint64_t v28 = a4;
  if (!a2 || (id v15 = objc_msgSend(a2, sel_featureIdentifier)) == 0)
  {
    uint64_t v17 = a3;
    sub_1DD048408();
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v16 = v15;
  uint64_t v17 = a3;
  v27[0] = v14;
  uint64_t v18 = sub_1DD048408();
  uint64_t v20 = v19;

  uint64_t v21 = sub_1DD048408();
  if (!v20)
  {
    id v14 = (id)v27[0];
    goto LABEL_12;
  }
  if (v21 == v18 && v20 == v22)
  {
    swift_bridgeObjectRelease_n();
    id v14 = (id)v27[0];
LABEL_15:
    v13[8] = 0;
    goto LABEL_13;
  }
  char v24 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v14 = (id)v27[0];
  if (v24) {
    goto LABEL_15;
  }
LABEL_13:
  sub_1DCE9D160(v29);
  sub_1DCEDB47C((uint64_t)v13, (uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v17;
  *(void *)(v25 + 24) = v28;
  swift_retain();
  sub_1DCF59610(v29, a2, (uint64_t)v10, v14, sub_1DCEDDD00, v25);
  swift_release();
  sub_1DCEDA584((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  v31[8] = v29[8];
  v31[9] = v29[9];
  v31[10] = v29[10];
  uint64_t v32 = v30;
  v31[4] = v29[4];
  v31[5] = v29[5];
  v31[6] = v29[6];
  v31[7] = v29[7];
  v31[0] = v29[0];
  v31[1] = v29[1];
  v31[2] = v29[2];
  v31[3] = v29[3];
  sub_1DCD43B94((uint64_t)v31);
  sub_1DCEDA584((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_SearchConfig);
  return v14;
}

uint64_t sub_1DCEDB894()
{
  uint64_t Context = (int *)type metadata accessor for VisualQueryContext();
  uint64_t v14 = *(unsigned __int8 *)(*((void *)Context - 1) + 80);
  uint64_t v2 = (v14 + 24) & ~v14;
  unint64_t v13 = (*(void *)(*((void *)Context - 1) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v3 = (((v13 + 19) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v4 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v2 + Context[10];
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  swift_unknownObjectRelease();
  uint64_t v9 = v4 + Context[14];
  if (!v8(v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  }
  unint64_t v10 = (v3 + 71) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + v3) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v11 = *(void *)(v0 + v10 + 8);
  if (v11 >> 60 != 15) {
    sub_1DCD21954(*(void *)(v0 + v10), v11);
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v14 | 7);
}

void sub_1DCEDBB40()
{
  uint64_t v1 = *(void *)(type metadata accessor for VisualQueryContext() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 71) & 0xFFFFFFFFFFFFFFF8;
  sub_1DCED2704(*(void *)(v0 + 16), (uint64_t *)(v0 + v2), *(void *)(v0 + v3), *(_DWORD *)(v0 + v3 + 8), v0 + v5, *(void *)(v0 + v6), *(void *)(v0 + v6 + 8), *(void *)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(CGFloat *)(v0 + v4), *(CGFloat *)(v0 + v4 + 8), *(CGFloat *)(v0 + v4 + 16), *(CGFloat *)(v0 + v4 + 24), *(void *)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_1DCEDBC30()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 120, 7);
}

uint64_t sub_1DCEDBCA0()
{
  return sub_1DCED3428(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 72), *(void **)(v0 + 80), *(void **)(v0 + 88), *(char **)(v0 + 96), *(void (**)(long long *))(v0 + 104), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(void *)(v0 + 112));
}

uint64_t sub_1DCEDBCE0()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_1DCEDBD48()
{
  return sub_1DCED4A84(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 64), *(void **)(v0 + 72), *(void **)(v0 + 80), *(void **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56));
}

void sub_1DCEDBD64(uint64_t a1, void (*a2)(unsigned char *))
{
  uint64_t v4 = type metadata accessor for VisualSearchResultInternal(0);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1DCD2889C(a1, (uint64_t)v9, (uint64_t *)&unk_1EAB03DC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)&v37[0] = *v9;
    unint64_t v10 = *(void **)&v37[0];
    sub_1DCEDD7B0((uint64_t)v37);
    sub_1DCD43B04((uint64_t)v37, (uint64_t)v21, &qword_1EAB03D58);
    id v11 = v10;
    a2(v21);
  }
  else
  {
    sub_1DCEDDEAC((uint64_t)v9, (uint64_t)v6, type metadata accessor for VisualSearchResultInternal);
    uint64_t v12 = *((void *)v6 + 23);
    uint64_t v33 = *((void *)v6 + 22);
    long long v13 = *((_OWORD *)v6 + 9);
    long long v30 = *((_OWORD *)v6 + 8);
    long long v31 = v13;
    long long v32 = *((_OWORD *)v6 + 10);
    long long v14 = *((_OWORD *)v6 + 5);
    long long v26 = *((_OWORD *)v6 + 4);
    long long v27 = v14;
    long long v15 = *((_OWORD *)v6 + 7);
    long long v28 = *((_OWORD *)v6 + 6);
    long long v29 = v15;
    long long v16 = *((_OWORD *)v6 + 1);
    long long v22 = *(_OWORD *)v6;
    long long v23 = v16;
    long long v17 = *((_OWORD *)v6 + 3);
    long long v24 = *((_OWORD *)v6 + 2);
    long long v25 = v17;
    sub_1DCD433F0((uint64_t)&v22);
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1DCD84020();
    v34[8] = v30;
    v34[9] = v31;
    v34[10] = v32;
    v34[4] = v26;
    v34[5] = v27;
    v34[6] = v28;
    v34[7] = v29;
    v34[0] = v22;
    v34[1] = v23;
    long long v34[2] = v24;
    v34[3] = v25;
    *(void *)&long long v35 = v33;
    *((void *)&v35 + 1) = v12;
    *(void *)&long long v36 = v18;
    *((void *)&v36 + 1) = v19;
    v37[6] = v28;
    v37[7] = v29;
    v37[8] = v30;
    v37[9] = v31;
    v37[2] = v24;
    v37[3] = v25;
    v37[4] = v26;
    v37[5] = v27;
    v37[0] = v22;
    v37[1] = v23;
    v37[10] = v32;
    v37[11] = v35;
    v37[12] = v36;
    sub_1DCEBF5FC((uint64_t)v37);
    sub_1DCD43B04((uint64_t)v37, (uint64_t)v21, &qword_1EAB03D58);
    a2(v21);
    sub_1DCEBE560(v34);
    sub_1DCEDA584((uint64_t)v6, type metadata accessor for VisualSearchResultInternal);
  }
}

uint64_t sub_1DCEDC004(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  long long v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCDB40EC((uint64_t)v13);
  swift_bridgeObjectRetain_n();
  long long v14 = sub_1DD048048();
  os_log_type_t v15 = sub_1DD048858();
  if (os_log_type_enabled(v14, v15))
  {
    long long v25 = a4;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = a3;
    long long v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    v24[0] = v10;
    uint64_t v19 = v18;
    uint64_t v28 = v18;
    v24[1] = a5;
    *(_DWORD *)long long v17 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1DCED7FA0(a1, a2, &v28);
    a4 = v25;
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DCCF9000, v14, v15, "submitUserFeedback failed with error: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v19, -1, -1);
    uint64_t v20 = v17;
    a3 = v26;
    MEMORY[0x1E01B07E0](v20, -1, -1);

    (*(void (**)(char *, void))(v11 + 8))(v13, v24[0]);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  sub_1DCF47084();
  sub_1DCEDD738();
  uint64_t v21 = (void *)swift_allocError();
  *long long v22 = a1;
  v22[1] = a2;
  swift_bridgeObjectRetain();
  a4(v21);

  return a3;
}

uint64_t sub_1DCEDC284()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_1DCD21954(*(void *)(v0 + 72), *(void *)(v0 + 80));
  swift_unknownObjectRelease();
  unint64_t v1 = *(void *)(v0 + 104);
  if (v1 >> 60 != 15) {
    sub_1DCD21954(*(void *)(v0 + 96), v1);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 136, 7);
}

void sub_1DCEDC2FC()
{
  sub_1DCED65F8(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));
}

ValueMetadata *type metadata accessor for VisualIntelligenceServiceError()
{
  return &type metadata for VisualIntelligenceServiceError;
}

uint64_t sub_1DCEDC358()
{
  return type metadata accessor for VisualIntelligenceService(0);
}

uint64_t type metadata accessor for VisualIntelligenceService(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86DD8);
}

uint64_t sub_1DCEDC380()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Argos_Protos_Queryflow_SearchConfig(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Argos_Protos_Queryflow_RefineRegionConfig();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t method lookup function for VisualIntelligenceService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VisualIntelligenceService);
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualIntelligenceService.Options(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DD046478();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    long long v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1DD0481A8();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85380);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    uint64_t v19 = (uint64_t *)((char *)a1 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for VisualIntelligenceService.Options(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD046478();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_1DD0481A8();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for VisualIntelligenceService.Options(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1DD0481A8();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85380);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  a1[v16] = a2[v16];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for VisualIntelligenceService.Options(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1DD0481A8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85380);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  long long v22 = &a1[v21];
  long long v23 = &a2[v21];
  *(void *)long long v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *initializeWithTake for VisualIntelligenceService.Options(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1DD0481A8();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85380);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  a1[v15] = a2[v15];
  return a1;
}

char *assignWithTake for VisualIntelligenceService.Options(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_1DD0481A8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85380);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  long long v22 = &a1[v21];
  long long v23 = &a2[v21];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)long long v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualIntelligenceService.Options(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCEDD330);
}

uint64_t sub_1DCEDD330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85380);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualIntelligenceService.Options(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCEDD470);
}

uint64_t sub_1DCEDD470(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85380);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1DCEDD58C()
{
  sub_1DCEDD6A0(319, (unint64_t *)&qword_1EBE84920, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F)
  {
    sub_1DCEDD6A0(319, &qword_1EBE85390, MEMORY[0x1E4FBCAF0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1DCEDD6A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DD048A08();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DCEDD6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1DCEDD738()
{
  unint64_t result = qword_1EAB03D98;
  if (!qword_1EAB03D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03D98);
  }
  return result;
}

uint64_t sub_1DCEDD78C(void *a1)
{
  return sub_1DCED7360(a1, *(uint64_t (**)(void *))(v1 + 16));
}

uint64_t sub_1DCEDD798(uint64_t a1)
{
  return sub_1DCEDDA0C(a1, (uint64_t (*)(void, void, void, void, uint64_t, void, void))sub_1DCED4C24);
}

uint64_t sub_1DCEDD7B0(uint64_t result)
{
  *(unsigned char *)(result + 208) = 1;
  return result;
}

uint64_t sub_1DCEDD7BC(uint64_t a1)
{
  return sub_1DCED5C20(a1, *(void (**)(unsigned char *))(v1 + 16));
}

void sub_1DCEDD7C4(uint64_t a1)
{
  sub_1DCEDBD64(a1, *(void (**)(unsigned char *))(v1 + 16));
}

uint64_t sub_1DCEDD7E0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 208);
}

uint64_t sub_1DCEDD7E8(uint64_t a1)
{
  sub_1DCEDD85C(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(unsigned char *)(a1 + 208));
  return a1;
}

void sub_1DCEDD85C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,char a27)
{
  if (a27)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1DCD43C58(a2);
    swift_bridgeObjectRelease();
    sub_1DCD43078(a20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCD392D4(a25, a26);
  }
}

uint64_t objectdestroy_35Tm()
{
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1DCEDD9F4(uint64_t a1)
{
  return sub_1DCEDDA0C(a1, (uint64_t (*)(void, void, void, void, uint64_t, void, void))sub_1DCED3D50);
}

uint64_t sub_1DCEDDA0C(uint64_t a1, uint64_t (*a2)(void, void, void, void, uint64_t, void, void))
{
  return a2(v2[3], v2[4], v2[5], v2[6], a1, v2[7], v2[8]);
}

void sub_1DCEDDA50(uint64_t a1)
{
  sub_1DCEDBD64(a1, *(void (**)(unsigned char *))(v1 + 24));
}

uint64_t sub_1DCEDDA6C()
{
  uint64_t Context = (int *)type metadata accessor for VisualQueryContext();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)Context - 1) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v11 = *(void *)(*((void *)Context - 1) + 64);
  swift_release();
  swift_release();
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + Context[10];
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  swift_unknownObjectRelease();
  uint64_t v9 = v4 + Context[14];
  if (!v8(v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v3 + v11, v2 | 7);
}

void sub_1DCEDDC78(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for VisualQueryContext() - 8);
  uint64_t v4 = (void (*)(_OWORD *))v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)((char *)v1
                + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  sub_1DCED28E0(a1, v4, v5, v6, v7);
}

uint64_t sub_1DCEDDCF4(uint64_t a1, void *a2)
{
  return sub_1DCED2CAC(a1, a2, *(void *)(v2 + 16), *(void (**)(_OWORD *))(v2 + 24));
}

void sub_1DCEDDD00(uint64_t a1)
{
  sub_1DCED1F64(a1, *(void (**)(id, void *))(v1 + 16));
}

uint64_t sub_1DCEDDD08()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCEDDD40()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  if (*(void *)(v0 + 112) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_release();
  sub_1DCD21954(*(void *)(v0 + 200), *(void *)(v0 + 208));
  swift_release();
  return MEMORY[0x1F4186498](v0, 232, 7);
}

uint64_t sub_1DCEDDDF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1DCEDDE90@<X0>(uint64_t *a1@<X8>)
{
  return sub_1DCF8AA9C(a1);
}

uint64_t sub_1DCEDDEAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCEDDF14()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  return MEMORY[0x1F4186498](v0, 96, 7);
}

unint64_t sub_1DCEDDF64()
{
  unint64_t result = qword_1EBE84B58;
  if (!qword_1EBE84B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84B58);
  }
  return result;
}

uint64_t sub_1DCEDDFB8()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

NSObject *sub_1DCEDE000@<X0>(NSObject **a1@<X8>)
{
  return sub_1DCE4D3C0(v1[2], v1 + 3, v1[8], a1);
}

uint64_t sub_1DCEDE024()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1DCEDE05C(unint64_t *a1@<X8>)
{
  sub_1DCE4D3F4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1DCEDE078(void *a1)
{
  return sub_1DCE4D09C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1DCEDE080()
{
  unint64_t result = qword_1EBE84BA8;
  if (!qword_1EBE84BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84BA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for InstanceCounter()
{
  return &type metadata for InstanceCounter;
}

uint64_t sub_1DCEDE128(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v8 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
    uint64_t v9 = v7 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    *(unsigned char *)(v7 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v14 = v7 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    *(void *)uint64_t v14 = *(void *)v15;
    *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
    *(void *)(v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1DCEDE260(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
  uint64_t v3 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCEDE2F4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCEDE3E0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  char v13 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = v13;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCEDE4D0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1DCEDE59C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0) + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCEDE678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCEDE68C);
}

uint64_t sub_1DCEDE68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DCEDE74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCEDE760);
}

uint64_t sub_1DCEDE760(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for BoxScoreDomainAssignmentRule()
{
  uint64_t result = qword_1EBE85A90;
  if (!qword_1EBE85A90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCEDE868()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCEDE914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v60 = (long long *)((char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (long long *)((char *)&v57 - v11);
  uint64_t v61 = type metadata accessor for BoxScoreDomainAssignmentRule();
  MEMORY[0x1F4188790](v61);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v57 - v16;
  uint64_t v18 = sub_1DD048068();
  uint64_t v63 = *(void *)(v18 - 8);
  uint64_t v64 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  long long v23 = (char *)&v57 - v22;
  sub_1DCD32C3C(a1, (uint64_t)v94);
  uint64_t v24 = *(void *)v4;
  if (!*(void *)(*(void *)v4 + 16))
  {
    uint64_t v34 = a3;
LABEL_8:
    sub_1DCD32C3C((uint64_t)v94, v34);
    return sub_1DCD5D8A8((uint64_t)v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  }
  uint64_t v62 = a3;
  if ((sub_1DCEDF214(v24, *(float *)(a2 + 76)) & 1) == 0)
  {
    uint64_t v34 = v62;
    goto LABEL_8;
  }
  if (v4[8] != 1)
  {
    sub_1DCD5D8A8((uint64_t)v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
    long long v36 = v20;
    sub_1DCDB40EC((uint64_t)v20);
    sub_1DCEDFB28((uint64_t)v4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BoxScoreDomainAssignmentRule);
    os_log_type_t v37 = v60;
    sub_1DCEDFB28(a2, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v38 = sub_1DD048048();
    os_log_type_t v39 = sub_1DD048848();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      *(void *)&v78[0] = v58;
      *(_DWORD *)uint64_t v40 = 136315394;
      id v59 = v36;
      uint64_t v41 = v61;
      uint64_t v42 = sub_1DCD9C35C(v14[*(int *)(v61 + 20)]);
      *(void *)&long long v85 = sub_1DCED7FA0(v42, v43, (uint64_t *)v78);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCEDFBF4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BoxScoreDomainAssignmentRule);
      *(_WORD *)(v40 + 12) = 2080;
      long long v44 = v37[1];
      long long v85 = *v37;
      long long v86 = v44;
      uint64_t v45 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v85 = sub_1DCED7FA0(v45, v46, (uint64_t *)v78);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCEDFBF4((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1DCCF9000, v38, v39, "Assign %s to region %s", (uint8_t *)v40, 0x16u);
      uint64_t v47 = v58;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v47, -1, -1);
      MEMORY[0x1E01B07E0](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v59, v64);
    }
    else
    {
      sub_1DCEDFBF4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BoxScoreDomainAssignmentRule);
      sub_1DCEDFBF4((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v36, v64);
      uint64_t v41 = v61;
    }
    LOBYTE(v76[0]) = v4[*(int *)(v41 + 20)];
    char v49 = v76[0];
    *(void *)&v78[0] = *(void *)&v4[*(int *)(v41 + 28)];
    sub_1DCD9F35C((uint64_t *)v78, &v85);
    LOBYTE(v78[0]) = v49;
    *(_OWORD *)((char *)v78 + 8) = 0u;
    *(_OWORD *)((char *)&v78[1] + 8) = 0u;
    BYTE8(v78[2]) = 0;
    long long v79 = 0u;
    long long v80 = 0u;
    long long v81 = v85;
    long long v82 = v86;
    long long v83 = 0uLL;
    LOWORD(v84[0]) = 0;
    *(void *)((char *)&v84[1] + 5) = 0;
    *((void *)&v84[0] + 1) = 0;
    *(void *)&v84[1] = 0;
    sub_1DCD32C3C((uint64_t)v94, (uint64_t)&v85);
    if (sub_1DCD32CA4((uint64_t)&v85) != 1)
    {
      uint64_t v50 = sub_1DCD9C35C(v85);
      uint64_t v52 = v51;
      if (v50 == sub_1DCD9C35C(v49) && v52 == v53)
      {
        swift_bridgeObjectRelease_n();
LABEL_20:
        v76[6] = v91;
        v76[7] = v92;
        v77[0] = v93[0];
        *(_OWORD *)((char *)v77 + 13) = *(_OWORD *)((char *)v93 + 13);
        v76[2] = v87;
        v76[3] = v88;
        v76[4] = v89;
        v76[5] = v90;
        v76[0] = v85;
        v76[1] = v86;
        long long v73 = v82;
        long long v74 = v83;
        v75[0] = v84[0];
        *(_OWORD *)((char *)v75 + 13) = *(_OWORD *)((char *)v84 + 13);
        long long v69 = v78[2];
        long long v70 = v79;
        long long v71 = v80;
        long long v72 = v81;
        long long v67 = v78[0];
        long long v68 = v78[1];
        sub_1DCF22BB0((uint64_t)v76, &v67, (uint64_t)v65);
        sub_1DCD5D8A8((uint64_t)v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
        sub_1DCD32DD4((uint64_t)v78);
        long long v73 = v65[6];
        long long v74 = v65[7];
        v75[0] = v66[0];
        *(_OWORD *)((char *)v75 + 13) = *(_OWORD *)((char *)v66 + 13);
        long long v69 = v65[2];
        long long v70 = v65[3];
        long long v71 = v65[4];
        long long v72 = v65[5];
        long long v55 = v65[0];
        long long v56 = v65[1];
LABEL_23:
        long long v67 = v55;
        long long v68 = v56;
        faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v67);
        sub_1DCD32C3C((uint64_t)&v67, (uint64_t)v76);
        return sub_1DCD32C3C((uint64_t)v76, v62);
      }
      char v54 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v54) {
        goto LABEL_20;
      }
      sub_1DCD5D8A8((uint64_t)v94, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
    }
    long long v73 = v82;
    long long v74 = v83;
    v75[0] = v84[0];
    *(_OWORD *)((char *)v75 + 13) = *(_OWORD *)((char *)v84 + 13);
    long long v69 = v78[2];
    long long v70 = v79;
    long long v71 = v80;
    long long v72 = v81;
    long long v55 = v78[0];
    long long v56 = v78[1];
    goto LABEL_23;
  }
  sub_1DCDB40EC((uint64_t)v23);
  sub_1DCEDFB28((uint64_t)v4, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for BoxScoreDomainAssignmentRule);
  sub_1DCEDFB28(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  uint64_t v25 = sub_1DD048048();
  os_log_type_t v26 = sub_1DD048848();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(void *)&v78[0] = v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v29 = sub_1DCD9C35C(v17[*(int *)(v61 + 20)]);
    *(void *)&long long v85 = sub_1DCED7FA0(v29, v30, (uint64_t *)v78);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCEDFBF4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for BoxScoreDomainAssignmentRule);
    *(_WORD *)(v27 + 12) = 2080;
    long long v31 = v12[1];
    long long v85 = *v12;
    long long v86 = v31;
    uint64_t v32 = NormalizedRect.loggingDescription.getter();
    *(void *)&long long v85 = sub_1DCED7FA0(v32, v33, (uint64_t *)v78);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCEDFBF4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    _os_log_impl(&dword_1DCCF9000, v25, v26, "Reject %s for region %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v28, -1, -1);
    MEMORY[0x1E01B07E0](v27, -1, -1);
  }
  else
  {
    sub_1DCEDFBF4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for BoxScoreDomainAssignmentRule);
    sub_1DCEDFBF4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  }

  (*(void (**)(char *, uint64_t))(v63 + 8))(v23, v64);
  uint64_t v48 = v62;
  sub_1DCD5DA7C((uint64_t)&v85);
  return sub_1DCD32C3C((uint64_t)&v85, v48);
}

uint64_t sub_1DCEDF214(uint64_t a1, float a2)
{
  uint64_t v4 = sub_1DD048068();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v81 = (char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v80 = (char *)v67 - v8;
  uint64_t v72 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange(0);
  MEMORY[0x1F4188790](v72);
  uint64_t v10 = (float *)((char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (float *)((char *)v67 - v15);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return 0;
  }
  uint64_t v77 = v14;
  uint64_t v18 = a1;
  uint64_t v19 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v20 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v21 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v22 = *(void *)(v13 + 72);
  v67[1] = v18;
  swift_bridgeObjectRetain();
  long long v23 = &OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__ontologyBoxScoreThresholds;
  unint64_t v73 = (unint64_t)"coarseCategoryDistribution";
  unint64_t v68 = 0x80000001DD067880;
  *(void *)&long long v24 = 136315138;
  long long v70 = v24;
  uint64_t v69 = MEMORY[0x1E4FBC840] + 8;
  os_log_type_t v78 = v10;
  uint64_t v75 = v21;
  uint64_t v76 = v20;
  uint64_t v71 = v4;
  uint64_t v74 = v22;
  do
  {
    sub_1DCEDFB28(v19, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
    float v25 = *v16;
    if (v16[1] < *v16)
    {
      if (qword_1EBE87190 != -1) {
        swift_once();
      }
      int v26 = *((unsigned __int8 *)v23 + 392);
      uint64_t v79 = v17;
      if (v26 != 1) {
        goto LABEL_27;
      }
      id v27 = objc_msgSend(self, sel_mainBundle);
      id v28 = objc_msgSend(v27, sel_bundleIdentifier);

      if (v28)
      {
        uint64_t v29 = sub_1DD048408();
        uint64_t v31 = v30;

        if (v29 == 0xD00000000000002BLL && v31 == v68)
        {
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
        char v33 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v33)
        {
LABEL_19:
          uint64_t v34 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            uint64_t v34 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_23;
        }
      }
      uint64_t v34 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v34 = &qword_1EBE871E8;
      }
LABEL_23:
      long long v35 = *(void **)(*v34 + 32);
      swift_retain();
      long long v36 = (void *)sub_1DD0483D8();
      LODWORD(v35) = objc_msgSend(v35, sel_BOOLForKey_, v36);
      swift_release();

      uint64_t v21 = v75;
      if (v35)
      {
        if (qword_1EAB01C80 != -1) {
          swift_once();
        }
        uint64_t v37 = v4;
        uint64_t v38 = qword_1EAB02B70;
        goto LABEL_30;
      }
LABEL_27:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v37 = v4;
      uint64_t v38 = qword_1EBE871A8;
LABEL_30:
      uint64_t v39 = __swift_project_value_buffer(v37, (uint64_t)v38);
      uint64_t v40 = *v20;
      (*v20)(v80, v39, v4);
      if ((v23[49] & 1) == 0) {
        goto LABEL_42;
      }
      id v41 = objc_msgSend(self, sel_mainBundle);
      id v42 = objc_msgSend(v41, sel_bundleIdentifier);

      if (v42)
      {
        uint64_t v43 = sub_1DD048408();
        uint64_t v45 = v44;

        if (v43 == 0xD00000000000002BLL && v45 == (v73 | 0x8000000000000000))
        {
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
        char v46 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        if (v46)
        {
LABEL_36:
          uint64_t v47 = (uint64_t *)&off_1EAB02A48;
          if (qword_1EAB01C28 != -1)
          {
            swift_once();
            uint64_t v47 = (uint64_t *)&off_1EAB02A48;
          }
          goto LABEL_40;
        }
      }
      uint64_t v47 = &qword_1EBE871E8;
      if (qword_1EBE871A0 != -1)
      {
        swift_once();
        uint64_t v47 = &qword_1EBE871E8;
      }
LABEL_40:
      uint64_t v48 = *(void **)(*v47 + 32);
      swift_retain();
      char v49 = (void *)sub_1DD0483D8();
      LODWORD(v48) = objc_msgSend(v48, sel_BOOLForKey_, v49);
      swift_release();

      uint64_t v21 = v75;
      if (v48)
      {
        uint64_t v51 = (uint64_t)v80;
        uint64_t v50 = v81;
LABEL_45:
        v40(v50, v51, v4);
        uint64_t v52 = *v21;
        (*v21)(v80, v4);
        uint64_t v53 = (uint64_t)v16;
        uint64_t v54 = (uint64_t)v16;
        uint64_t v55 = v77;
        sub_1DCEDFB28(v53, v77, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
        long long v56 = sub_1DD048048();
        uint64_t v57 = v21;
        os_log_type_t v58 = sub_1DD048848();
        if (os_log_type_enabled(v56, v58))
        {
          uint64_t v59 = swift_slowAlloc();
          uint64_t v60 = swift_slowAlloc();
          uint64_t v82 = v60;
          *(_DWORD *)uint64_t v59 = v70;
          sub_1DCEDFC54();
          uint64_t v61 = sub_1DD048FB8();
          *(void *)(v59 + 4) = sub_1DCED7FA0(v61, v62, &v82);
          swift_bridgeObjectRelease();
          sub_1DCEDFBF4(v55, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
          _os_log_impl(&dword_1DCCF9000, v56, v58, "Invalid threshold %s", (uint8_t *)v59, 0xCu);
          swift_arrayDestroy();
          uint64_t v63 = v60;
          uint64_t v64 = v81;
          uint64_t v4 = v71;
          MEMORY[0x1E01B07E0](v63, -1, -1);
          MEMORY[0x1E01B07E0](v59, -1, -1);

          v52(v64, v4);
        }
        else
        {

          sub_1DCEDFBF4(v55, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
          v52(v81, v4);
        }
        sub_1DCEDFBF4(v54, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
        uint64_t v10 = v78;
        uint64_t v17 = v79;
        uint64_t v16 = (float *)v54;
        uint64_t v20 = v76;
        uint64_t v21 = v57;
        uint64_t v22 = v74;
        long long v23 = &OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__ontologyBoxScoreThresholds;
        goto LABEL_5;
      }
LABEL_42:
      if (qword_1EBE871C8 != -1) {
        swift_once();
      }
      uint64_t v51 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBE871A8);
      uint64_t v50 = v81;
      goto LABEL_45;
    }
    sub_1DCEDFB90((uint64_t)v16, (uint64_t)v10);
    if (v25 <= a2)
    {
      float v32 = v10[1];
      sub_1DCEDFBF4((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
      if (v32 >= a2)
      {
        uint64_t v65 = 1;
        goto LABEL_49;
      }
    }
    else
    {
      sub_1DCEDFBF4((uint64_t)v10, type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange);
    }
LABEL_5:
    v19 += v22;
    --v17;
  }
  while (v17);
  uint64_t v65 = 0;
LABEL_49:
  swift_bridgeObjectRelease();
  return v65;
}

uint64_t sub_1DCEDFB28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCEDFB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCEDFBF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1DCEDFC54()
{
  unint64_t result = qword_1EBE86390;
  if (!qword_1EBE86390)
  {
    type metadata accessor for Argos_Protos_Queryflow_BoxScoreDomainAssignmentRule.BoxScoreRange(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE86390);
  }
  return result;
}

uint64_t sub_1DCEDFCAC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE848B0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DD046478();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_allocWithZone(MEMORY[0x1E4F28B50]);
  uint64_t v15 = (void *)sub_1DD0463E8();
  id v16 = objc_msgSend(v14, sel_initWithURL_, v15);

  if (v16)
  {
    sub_1DCEE0190(v16, (uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    uint64_t v17 = type metadata accessor for MLModelBundle();
    uint64_t v18 = *(void *)(v17 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v5, 1, v17))
    {
      uint64_t v28 = v36;
      sub_1DCD56DEC((uint64_t)v5, v36, (uint64_t (*)(void))type metadata accessor for MLModelBundle);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v28, 0, 1, v17);
    }
    sub_1DCD2479C((uint64_t)v5, (uint64_t *)&unk_1EBE848B0);
  }
  else
  {
    uint64_t v35 = v11;
    sub_1DCDB40EC((uint64_t)v13);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, a1, v6);
    uint64_t v19 = sub_1DD048048();
    uint64_t v20 = sub_1DD048858();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v38 = v34;
      char v33 = v21;
      *(_DWORD *)uint64_t v21 = 136315138;
      v32[1] = v21 + 4;
      sub_1DCD28968();
      uint64_t v22 = sub_1DD048F78();
      uint64_t v37 = sub_1DCED7FA0(v22, v23, &v38);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      long long v24 = *(void (**)(char *, uint64_t))(v7 + 8);
      v24(v9, v6);
      os_log_type_t v25 = v20;
      int v26 = v33;
      _os_log_impl(&dword_1DCCF9000, v19, v25, "Cannot create bundle with %s", v33, 0xCu);
      uint64_t v27 = v34;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v27, -1, -1);
      MEMORY[0x1E01B07E0](v26, -1, -1);

      v24(a1, v6);
    }
    else
    {

      uint64_t v30 = *(void (**)(char *, uint64_t))(v7 + 8);
      v30(v9, v6);
      v30(a1, v6);
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
  }
  uint64_t v31 = type metadata accessor for MLModelBundle();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v36, 1, 1, v31);
}

uint64_t type metadata accessor for MLModelBundle()
{
  uint64_t result = qword_1EBE848A0;
  if (!qword_1EBE848A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCEE0190@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v166 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0);
  uint64_t v148 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v151 = (uint64_t)&v147 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = v4;
  MEMORY[0x1F4188790](v5);
  long long v153 = (char *)&v147 - v6;
  uint64_t v154 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v154);
  long long v152 = (uint64_t *)((char *)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v155 = (uint64_t)&v147 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1DD046478();
  uint64_t v160 = *(void *)(v13 - 8);
  uint64_t v161 = v13;
  MEMORY[0x1F4188790](v13);
  long long v157 = (char *)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v147 - v16;
  MEMORY[0x1F4188790](v18);
  long long v159 = (char *)&v147 - v19;
  uint64_t v20 = sub_1DD048068();
  uint64_t v21 = *(void *)(v20 - 8);
  long long v162 = (void (*)(uint64_t, char *, uint64_t))v20;
  uint64_t v163 = v21;
  MEMORY[0x1F4188790](v20);
  unint64_t v156 = (unint64_t)&v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v158 = (uint64_t)&v147 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v147 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v147 - v29;
  MEMORY[0x1F4188790](v31);
  char v33 = (char *)&v147 - v32;
  MEMORY[0x1F4188790](v34);
  uint64_t v36 = (char *)&v147 - v35;
  MEMORY[0x1F4188790](v37);
  uint64_t v39 = (char *)&v147 - v38;
  uint64_t v40 = type metadata accessor for MLModelBundle();
  uint64_t v164 = *(void *)(v40 - 8);
  uint64_t v165 = v40;
  double v41 = MEMORY[0x1F4188790](v40);
  long long v150 = (char *)&v147 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a1;
  id v44 = objc_msgSend(a1, sel_infoDictionary, v41);
  if (!v44)
  {
    sub_1DCDB40EC((uint64_t)v39);
    os_log_type_t v78 = sub_1DD048048();
    os_log_type_t v79 = sub_1DD048858();
    if (os_log_type_enabled(v78, v79))
    {
      long long v80 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v80 = 0;
      _os_log_impl(&dword_1DCCF9000, v78, v79, "Cannot access MLModels Meta bundle Info.plist", v80, 2u);
      MEMORY[0x1E01B07E0](v80, -1, -1);
    }

    (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v163 + 8))(v39, v162);
    goto LABEL_24;
  }
  uint64_t v45 = v44;
  uint64_t v46 = sub_1DD0482D8();

  if (!*(void *)(v46 + 16) || (unint64_t v47 = sub_1DCEAD1A4(0x4C45444F4D5F4956, 0xE800000000000000), (v48 & 1) == 0))
  {
    long long v170 = 0u;
    long long v171 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  sub_1DCD21A28(*(void *)(v46 + 56) + 32 * v47, (uint64_t)&v170);
  swift_bridgeObjectRelease();
  if (!*((void *)&v171 + 1))
  {
LABEL_18:
    sub_1DCD2479C((uint64_t)&v170, &qword_1EAB041B0);
    sub_1DCDB40EC((uint64_t)v36);
    unint64_t v73 = sub_1DD048048();
    os_log_type_t v74 = sub_1DD048858();
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v75 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      *(void *)&long long v172 = v76;
      *(_DWORD *)uint64_t v75 = 136315138;
      *(void *)&long long v170 = sub_1DCED7FA0(0x4C45444F4D5F4956, 0xE800000000000000, (uint64_t *)&v172);
      sub_1DD048A28();
      _os_log_impl(&dword_1DCCF9000, v73, v74, "The %s key is missing", v75, 0xCu);
      uint64_t v77 = 1;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v76, -1, -1);
      MEMORY[0x1E01B07E0](v75, -1, -1);

      (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v163 + 8))(v36, v162);
LABEL_25:
      uint64_t v82 = v165;
      uint64_t v81 = v166;
LABEL_26:
      uint64_t v83 = v164;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v81, v77, 1, v82);
    }

    (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v163 + 8))(v36, v162);
LABEL_24:
    uint64_t v77 = 1;
    goto LABEL_25;
  }
  sub_1DCD9E7E8(&v170, &v172);
  sub_1DCD21A28((uint64_t)&v172, (uint64_t)&v170);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F08);
  if (swift_dynamicCast())
  {
    uint64_t v49 = v168;
    uint64_t v50 = v43;
    if (!*(void *)(v168 + 16)
      || (unint64_t v51 = sub_1DCEAD1A4(1701667182, 0xE400000000000000), (v52 & 1) == 0)
      || (sub_1DCD21A28(*(void *)(v49 + 56) + 32 * v51, (uint64_t)&v170), (swift_dynamicCast() & 1) == 0))
    {
      swift_bridgeObjectRelease();
      sub_1DCDB40EC((uint64_t)v30);
      long long v90 = sub_1DD048048();
      os_log_type_t v91 = sub_1DD048858();
      BOOL v92 = os_log_type_enabled(v90, v91);
      uint64_t v83 = v164;
      if (v92)
      {
        uint64_t v93 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v93 = 0;
        _os_log_impl(&dword_1DCCF9000, v90, v91, "Missing file name in description", v93, 2u);
        MEMORY[0x1E01B07E0](v93, -1, -1);
      }

      (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v163 + 8))(v30, v162);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v172);
      goto LABEL_34;
    }
    unint64_t v53 = v169;
    uint64_t v147 = v168;
    uint64_t v54 = (void *)sub_1DD0483D8();
    uint64_t v55 = (void *)sub_1DD0483D8();
    id v56 = objc_msgSend(v50, sel_URLForResource_withExtension_, v54, v55);

    if (v56)
    {
      sub_1DD046438();

      uint64_t v57 = v160;
      os_log_type_t v58 = *(void (**)(char *, char *, uint64_t))(v160 + 32);
      uint64_t v59 = v17;
      uint64_t v60 = v161;
      v58(v12, v59, v161);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v12, 0, 1, v60);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v12, 1, v60) != 1)
      {
        uint64_t v61 = v53;
        unint64_t v62 = v159;
        v58(v159, v12, v60);
        if (*(void *)(v49 + 16))
        {
          unint64_t v63 = sub_1DCEAD1A4(1701605234, 0xE400000000000000);
          if (v64)
          {
            sub_1DCD21A28(*(void *)(v49 + 56) + 32 * v63, (uint64_t)&v170);
            if (swift_dynamicCast())
            {
              uint64_t v66 = v168;
              unint64_t v65 = v169;
              swift_bridgeObjectRetain();
              int v67 = sub_1DCEA523C();
              if (v67 == 7)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v68 = v156;
                sub_1DCDB40EC(v156);
                swift_bridgeObjectRetain();
                uint64_t v69 = sub_1DD048048();
                os_log_type_t v70 = sub_1DD048858();
                if (os_log_type_enabled(v69, v70))
                {
                  uint64_t v71 = (uint8_t *)swift_slowAlloc();
                  uint64_t v72 = swift_slowAlloc();
                  *(void *)&long long v170 = v72;
                  *(_DWORD *)uint64_t v71 = 136315138;
                  swift_bridgeObjectRetain();
                  uint64_t v168 = sub_1DCED7FA0(v66, v65, (uint64_t *)&v170);
                  sub_1DD048A28();
                  swift_bridgeObjectRelease_n();
                  _os_log_impl(&dword_1DCCF9000, v69, v70, "Found model with unknown role %s", v71, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1E01B07E0](v72, -1, -1);
                  MEMORY[0x1E01B07E0](v71, -1, -1);

                  (*(void (**)(unint64_t, void (*)(uint64_t, char *, uint64_t)))(v163 + 8))(v156, v162);
                  (*(void (**)(char *, uint64_t))(v57 + 8))(v159, v161);
                }
                else
                {
                  swift_bridgeObjectRelease_n();

                  (*(void (**)(uint64_t, void (*)(uint64_t, char *, uint64_t)))(v163 + 8))(v68, v162);
                  (*(void (**)(char *, uint64_t))(v57 + 8))(v62, v60);
                }
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v172);
                uint64_t v83 = v164;
LABEL_34:
                uint64_t v77 = 1;
                uint64_t v82 = v165;
                uint64_t v81 = v166;
                return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v81, v77, 1, v82);
              }
              LODWORD(v163) = v67;
              swift_bridgeObjectRelease();
              unint64_t v167 = sub_1DCDB88EC(MEMORY[0x1E4FBC860]);
              if (*(void *)(v49 + 16))
              {
                unint64_t v101 = sub_1DCEAD1A4(0x737465737361, 0xE600000000000000);
                if (v102)
                {
                  sub_1DCD21A28(*(void *)(v49 + 56) + 32 * v101, (uint64_t)&v170);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84ED0);
                  uint64_t v103 = swift_dynamicCast();
                  if (v103)
                  {
                    uint64_t v104 = v168;
                    MEMORY[0x1F4188790](v103);
                    *(&v147 - 4) = v147;
                    *(&v147 - 3) = v61;
                    *(&v147 - 2) = (uint64_t)v50;
                    *(&v147 - 1) = (uint64_t)&v167;
                    sub_1DCEE21D8(v104, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1DCEE23A0);
                    swift_bridgeObjectRelease();
                  }
                }
              }
              if (*(void *)(v49 + 16)
                && (unint64_t v105 = sub_1DCEAD1A4(0x61656869746C756DLL, 0xE900000000000064), (v106 & 1) != 0)
                && (sub_1DCD21A28(*(void *)(v49 + 56) + 32 * v105, (uint64_t)&v170),
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84EE0),
                    (swift_dynamicCast() & 1) != 0))
              {
                uint64_t v107 = v168;
                *(void *)&long long v170 = sub_1DCDB87D0(MEMORY[0x1E4FBC860]);
                MEMORY[0x1F4188790](v170);
                *(&v147 - 2) = (uint64_t)&v170;
                sub_1DCECD168(v107, (void (*)(uint64_t, uint64_t, uint64_t))sub_1DCECD62C);
                swift_bridgeObjectRelease();
                uint64_t v108 = v170;
              }
              else
              {
                uint64_t v108 = 0;
              }
              uint64_t v111 = *(void (**)(uint64_t, char *, uint64_t))(v57 + 16);
              uint64_t v110 = v57 + 16;
              uint64_t v109 = v111;
              v111((uint64_t)v157, v62, v60);
              if (*(void *)(v49 + 16)
                && (unint64_t v112 = sub_1DCEAD1A4(7238261, 0xE300000000000000), (v113 & 1) != 0)
                && (sub_1DCD21A28(*(void *)(v49 + 56) + 32 * v112, (uint64_t)&v170), swift_dynamicCast()))
              {
                uint64_t v115 = v168;
                unint64_t v114 = v169;
              }
              else
              {
                uint64_t v115 = 0;
                unint64_t v114 = 0xE000000000000000;
              }
              if (*(void *)(v49 + 16)
                && (unint64_t v116 = sub_1DCEAD1A4(0x44496C65646F6DLL, 0xE700000000000000), (v117 & 1) != 0))
              {
                sub_1DCD21A28(*(void *)(v49 + 56) + 32 * v116, (uint64_t)&v170);
              }
              else
              {
                long long v170 = 0u;
                long long v171 = 0u;
              }
              swift_bridgeObjectRelease();
              long long v162 = v109;
              uint64_t v158 = v110;
              unint64_t v156 = v114;
              if (*((void *)&v171 + 1))
              {
                if (swift_dynamicCast())
                {
                  uint64_t v118 = v115;
                  uint64_t v119 = v168;
                  unint64_t v120 = v169;
LABEL_68:
                  unint64_t v121 = v167;
                  uint64_t v122 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
                  uint64_t v123 = (uint64_t)v153;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v153, 1, 1, v122);
                  uint64_t v124 = (uint64_t)v152;
                  *long long v152 = v147;
                  *(void *)(v124 + 8) = v61;
                  long long v125 = (int *)v154;
                  v162(v124 + *(int *)(v154 + 20), v157, v161);
                  long long v126 = (uint64_t *)(v124 + v125[6]);
                  uint64_t v127 = v156;
                  *long long v126 = v118;
                  v126[1] = v127;
                  uint64_t v128 = (uint64_t *)(v124 + v125[7]);
                  *uint64_t v128 = v119;
                  v128[1] = v120;
                  *(unsigned char *)(v124 + v125[8]) = v163;
                  unint64_t v129 = v121;
                  *(void *)(v124 + v125[9]) = v121;
                  *(void *)(v124 + v125[10]) = v108;
                  uint64_t v130 = v151;
                  sub_1DCECD308(v123, v151);
                  unint64_t v131 = (*(unsigned __int8 *)(v148 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80);
                  unint64_t v132 = (v149 + v131 + 7) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v133 = swift_allocObject();
                  sub_1DCECD4C4(v130, v133 + v131);
                  *(void *)(v133 + v132) = v129;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86298);
                  uint64_t v134 = swift_allocObject();
                  uint64_t v135 = v134 + *(void *)(*(void *)v134 + 152);
                  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B38);
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v135, 1, 1, v136);
                  long long v137 = (uint64_t *)(v134 + *(void *)(*(void *)v134 + 160));
                  *long long v137 = 0;
                  v137[1] = 0;
                  long long v138 = (void *)(v134 + *(void *)(*(void *)v134 + 168));
                  *long long v138 = 0;
                  v138[1] = 0;
                  uint64_t v139 = *(void *)(*(void *)v134 + 184);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
                  uint64_t v140 = swift_allocObject();
                  *(_DWORD *)(v140 + 16) = 0;
                  *(void *)(v134 + v139) = v140;
                  uint64_t v141 = *v137;
                  *long long v137 = (uint64_t)sub_1DCECD52C;
                  v137[1] = v133;
                  swift_bridgeObjectRetain_n();
                  swift_retain();
                  swift_retain();
                  sub_1DCD33E90(v141);
                  *(void *)(v134 + *(void *)(*(void *)v134 + 176)) = 2;
                  swift_release();
                  uint64_t v142 = sub_1DCF31D08();
                  swift_release();
                  sub_1DCD2479C(v123, &qword_1EBE85DB0);
                  uint64_t v143 = v161;
                  long long v144 = *(void (**)(char *, uint64_t))(v160 + 8);
                  v144(v157, v161);
                  *(void *)(v124 + v125[11]) = v142;
                  uint64_t v145 = v155;
                  sub_1DCD56DEC(v124, v155, type metadata accessor for MLModelInfo);
                  v144(v159, v143);
                  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v172);
                  uint64_t v82 = v165;
                  long long v146 = v150;
                  sub_1DCD56DEC(v145, (uint64_t)&v150[*(int *)(v165 + 20)], type metadata accessor for MLModelInfo);
                  void *v146 = v50;
                  swift_bridgeObjectRelease();
                  uint64_t v81 = v166;
                  sub_1DCD56DEC((uint64_t)v146, v166, (uint64_t (*)(void))type metadata accessor for MLModelBundle);
                  uint64_t v77 = 0;
                  goto LABEL_26;
                }
              }
              else
              {
                sub_1DCD2479C((uint64_t)&v170, &qword_1EAB041B0);
              }
              uint64_t v118 = v115;
              uint64_t v119 = 0;
              unint64_t v120 = 0xE000000000000000;
              goto LABEL_68;
            }
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v97 = v158;
        sub_1DCDB40EC(v158);
        uint64_t v98 = sub_1DD048048();
        os_log_type_t v99 = sub_1DD048858();
        if (os_log_type_enabled(v98, v99))
        {
          uint64_t v100 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v100 = 0;
          _os_log_impl(&dword_1DCCF9000, v98, v99, "Found model without role", v100, 2u);
          MEMORY[0x1E01B07E0](v100, -1, -1);
        }

        (*(void (**)(uint64_t, void (*)(uint64_t, char *, uint64_t)))(v163 + 8))(v97, v162);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v62, v60);
        goto LABEL_42;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v12, 1, 1, v161);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE848E0);
    sub_1DCDB40EC((uint64_t)v27);
    uint64_t v94 = sub_1DD048048();
    os_log_type_t v95 = sub_1DD048858();
    if (os_log_type_enabled(v94, v95))
    {
      uint64_t v96 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v96 = 0;
      _os_log_impl(&dword_1DCCF9000, v94, v95, "Cannot find model in the bundle", v96, 2u);
      MEMORY[0x1E01B07E0](v96, -1, -1);
    }

    (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v163 + 8))(v27, v162);
LABEL_42:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v172);
    goto LABEL_24;
  }
  sub_1DCDB40EC((uint64_t)v33);
  long long v85 = sub_1DD048048();
  os_log_type_t v86 = sub_1DD048858();
  BOOL v87 = os_log_type_enabled(v85, v86);
  uint64_t v83 = v164;
  if (v87)
  {
    long long v88 = (uint8_t *)swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    *(void *)&long long v170 = v89;
    *(_DWORD *)long long v88 = 136315138;
    uint64_t v168 = sub_1DCED7FA0(0x4C45444F4D5F4956, 0xE800000000000000, (uint64_t *)&v170);
    sub_1DD048A28();
    _os_log_impl(&dword_1DCCF9000, v85, v86, "The %s key has invalid value", v88, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v89, -1, -1);
    MEMORY[0x1E01B07E0](v88, -1, -1);
  }

  (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v163 + 8))(v33, v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v172);
  uint64_t v82 = v165;
  uint64_t v81 = v166;
  uint64_t v77 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v81, v77, 1, v82);
}

uint64_t sub_1DCEE1650(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v84 = a8;
  id v87 = a7;
  uint64_t v88 = a5;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v83 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  long long v85 = (char *)&v74 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v74 - v18;
  uint64_t v20 = sub_1DD046478();
  uint64_t v92 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v82 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v74 - v23;
  MEMORY[0x1F4188790](v25);
  uint64_t v89 = (char *)&v74 - v26;
  uint64_t v27 = sub_1DD048068();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v90 = v27;
  uint64_t v91 = v28;
  MEMORY[0x1F4188790](v27);
  os_log_type_t v86 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v74 - v31;
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v74 - v34;
  swift_bridgeObjectRetain();
  unsigned int v36 = sub_1DCD28850();
  if (v36 == 11)
  {
    sub_1DCDB40EC((uint64_t)v35);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v37 = sub_1DD048048();
    os_log_type_t v38 = sub_1DD048858();
    unint64_t v39 = a6;
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v94[0] = v41;
      *(_DWORD *)uint64_t v40 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1DCED7FA0(a1, a2, v94);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v40 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1DCED7FA0(v88, v39, v94);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v37, v38, "Unknown asset role %s for model %s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v41, -1, -1);
      MEMORY[0x1E01B07E0](v40, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v49 = *(uint64_t (**)(char *, uint64_t))(v91 + 8);
    uint64_t v50 = v35;
    return v49(v50, v90);
  }
  unsigned int v80 = v36;
  unint64_t v81 = a6;
  sub_1DD046458();
  unint64_t v42 = a4;
  uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48);
  if (v43(v19, 1, v20) == 1)
  {
    sub_1DCD2479C((uint64_t)v19, &qword_1EBE848E0);
    sub_1DCDB40EC((uint64_t)v32);
    unint64_t v44 = v81;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v45 = sub_1DD048048();
    os_log_type_t v46 = sub_1DD048858();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      v94[0] = v48;
      *(_DWORD *)uint64_t v47 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1DCED7FA0(a3, v42, v94);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v93 = sub_1DCED7FA0(v88, v44, v94);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v45, v46, "Invalid name %s for model %s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v48, -1, -1);
      MEMORY[0x1E01B07E0](v47, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v49 = *(uint64_t (**)(char *, uint64_t))(v91 + 8);
    uint64_t v50 = v32;
    return v49(v50, v90);
  }
  uint64_t v75 = a3;
  uint64_t v76 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v43;
  uint64_t v51 = v92;
  char v52 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
  unint64_t v77 = a4;
  os_log_type_t v78 = v52;
  v52(v89, v19, v20);
  sub_1DD0463F8();
  sub_1DD0463D8();
  uint64_t v54 = *(uint64_t (**)(char *, uint64_t))(v51 + 8);
  uint64_t v53 = v51 + 8;
  os_log_type_t v79 = v54;
  v54(v24, v20);
  sub_1DD046398();
  uint64_t v55 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v56 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v57 = objc_msgSend(v87, sel_URLForResource_withExtension_, v55, v56);

  if (v57)
  {
    sub_1DD046438();

    uint64_t v58 = (uint64_t)v85;
    v78(v85, v24, v20);
    uint64_t v59 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v92 + 56);
    v59(v58, 0, 1, v20);
    uint64_t v60 = v20;
    int v61 = v76(v58, 1, v20);
    uint64_t v62 = (uint64_t)v86;
    if (v61 != 1)
    {
      unint64_t v63 = v82;
      v78(v82, (char *)v58, v60);
      uint64_t v64 = (uint64_t)v83;
      (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v83, v63, v60);
      v59(v64, 0, 1, v60);
      sub_1DCEE7C9C(v64, v80);
      unint64_t v65 = v79;
      v79(v63, v60);
      return v65(v89, v60);
    }
  }
  else
  {
    uint64_t v58 = (uint64_t)v85;
    uint64_t v60 = v20;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v85, 1, 1, v20);
    uint64_t v62 = (uint64_t)v86;
  }
  sub_1DCD2479C(v58, &qword_1EBE848E0);
  sub_1DCDB40EC(v62);
  unint64_t v67 = v81;
  swift_bridgeObjectRetain_n();
  unint64_t v68 = v77;
  swift_bridgeObjectRetain_n();
  uint64_t v69 = sub_1DD048048();
  os_log_type_t v70 = sub_1DD048858();
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v71 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    v94[0] = v72;
    *(_DWORD *)uint64_t v71 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_1DCED7FA0(v75, v68, v94);
    uint64_t v92 = v53;
    uint64_t v93 = v73;
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v71 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v93 = sub_1DCED7FA0(v88, v67, v94);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DCCF9000, v69, v70, "Cannot locate resource %s for model %s", (uint8_t *)v71, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v72, -1, -1);
    MEMORY[0x1E01B07E0](v71, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v62, v90);
  return v79(v89, v60);
}

uint64_t sub_1DCEE2084()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85DB0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v3, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v0 + v3 + *(int *)(v5 + 24);
    uint64_t v7 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1DCEE21D8(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v22 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v7) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v22 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v20 = *(void *)(v22 + 8 * v9);
      if (!v20)
      {
        int64_t v9 = v19 + 2;
        if (v19 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v20 = *(void *)(v22 + 8 * v9);
        if (!v20)
        {
          int64_t v9 = v19 + 3;
          if (v19 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v20 = *(void *)(v22 + 8 * v9);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v20 - 1) & v20;
    unint64_t v11 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = 16 * v11;
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 56) + v12);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v14, v15, v17, v18);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v7) {
    return swift_release();
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v22 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DCEE23A0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1DCEE1650(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void **)(v4 + 32), *(void *)(v4 + 40));
}

void **sub_1DCEE23AC(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    int64_t v7 = (void **)((char *)a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *int64_t v7 = *(void **)((char *)a2 + v6);
    v7[1] = v9;
    unint64_t v10 = (int *)type metadata accessor for MLModelInfo(0);
    uint64_t v11 = v10[5];
    uint64_t v25 = (char *)v7 + v11;
    uint64_t v12 = &v8[v11];
    uint64_t v13 = sub_1DD046478();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    uint64_t v15 = v4;
    swift_bridgeObjectRetain();
    v14(v25, v12, v13);
    uint64_t v16 = v10[6];
    uint64_t v17 = (void *)((char *)v7 + v16);
    uint64_t v18 = &v8[v16];
    uint64_t v19 = *((void *)v18 + 1);
    *uint64_t v17 = *(void *)v18;
    v17[1] = v19;
    uint64_t v20 = v10[7];
    int64_t v21 = (void *)((char *)v7 + v20);
    uint64_t v22 = &v8[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *int64_t v21 = *(void *)v22;
    v21[1] = v23;
    *((unsigned char *)v7 + v10[8]) = v8[v10[8]];
    *(void *)((char *)v7 + v10[9]) = *(void *)&v8[v10[9]];
    *(void *)((char *)v7 + v10[10]) = *(void *)&v8[v10[10]];
    *(void *)((char *)v7 + v10[11]) = *(void *)&v8[v10[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v5;
}

uint64_t sub_1DCEE253C(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v5 = &v4[*(int *)(type metadata accessor for MLModelInfo(0) + 20)];
  uint64_t v6 = sub_1DD046478();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void **sub_1DCEE261C(void **a1, void **a2, uint64_t a3)
{
  int v3 = *a2;
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void **)((char *)a1 + v4);
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = *(uint64_t *)((char *)a2 + v4 + 8);
  *uint64_t v5 = *(void **)((char *)a2 + v4);
  v5[1] = v7;
  uint64_t v8 = (int *)type metadata accessor for MLModelInfo(0);
  uint64_t v9 = v8[5];
  unint64_t v10 = (char *)v5 + v9;
  uint64_t v11 = &v6[v9];
  uint64_t v12 = sub_1DD046478();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  id v14 = v3;
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v15 = v8[6];
  uint64_t v16 = (void *)((char *)v5 + v15);
  uint64_t v17 = &v6[v15];
  uint64_t v18 = *((void *)v17 + 1);
  *uint64_t v16 = *(void *)v17;
  v16[1] = v18;
  uint64_t v19 = v8[7];
  uint64_t v20 = (void *)((char *)v5 + v19);
  int64_t v21 = &v6[v19];
  uint64_t v22 = *((void *)v21 + 1);
  *uint64_t v20 = *(void *)v21;
  v20[1] = v22;
  *((unsigned char *)v5 + v8[8]) = v6[v8[8]];
  *(void *)((char *)v5 + v8[9]) = *(void *)&v6[v8[9]];
  *(void *)((char *)v5 + v8[10]) = *(void *)&v6[v8[10]];
  *(void *)((char *)v5 + v8[11]) = *(void *)&v6[v8[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void **sub_1DCEE2764(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  unint64_t v10 = (void **)((char *)a1 + v9);
  uint64_t v11 = (char *)a2 + v9;
  *unint64_t v10 = *(void **)((char *)a2 + v9);
  v10[1] = *(void **)((char *)a2 + v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for MLModelInfo(0);
  uint64_t v13 = v12[5];
  id v14 = (char *)v10 + v13;
  uint64_t v15 = &v11[v13];
  uint64_t v16 = sub_1DD046478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = v12[6];
  uint64_t v18 = (void *)((char *)v10 + v17);
  uint64_t v19 = &v11[v17];
  *uint64_t v18 = *(void *)v19;
  v18[1] = *((void *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v12[7];
  int64_t v21 = (void *)((char *)v10 + v20);
  uint64_t v22 = &v11[v20];
  *int64_t v21 = *(void *)v22;
  v21[1] = *((void *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v10 + v12[8]) = v11[v12[8]];
  *(void *)((char *)v10 + v12[9]) = *(void *)&v11[v12[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v10 + v12[10]) = *(void *)&v11[v12[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v10 + v12[11]) = *(void *)&v11[v12[11]];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1DCEE28EC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(_OWORD *)((char *)a1 + v4) = *(_OWORD *)((char *)a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for MLModelInfo(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = &v5[v8];
  unint64_t v10 = &v6[v8];
  uint64_t v11 = sub_1DD046478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)&v5[v7[6]] = *(_OWORD *)&v6[v7[6]];
  *(_OWORD *)&v5[v7[7]] = *(_OWORD *)&v6[v7[7]];
  v5[v7[8]] = v6[v7[8]];
  *(void *)&v5[v7[9]] = *(void *)&v6[v7[9]];
  *(void *)&v5[v7[10]] = *(void *)&v6[v7[10]];
  *(void *)&v5[v7[11]] = *(void *)&v6[v7[11]];
  return a1;
}

void **sub_1DCEE29D8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void **)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(uint64_t *)((char *)a2 + v7 + 8);
  *uint64_t v8 = *(void **)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for MLModelInfo(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  id v14 = &v9[v12];
  uint64_t v15 = sub_1DD046478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = (void *)((char *)v8 + v16);
  uint64_t v18 = &v9[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = v11[7];
  uint64_t v22 = (void *)((char *)v8 + v21);
  uint64_t v23 = &v9[v21];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  *((unsigned char *)v8 + v11[8]) = v9[v11[8]];
  *(void *)((char *)v8 + v11[9]) = *(void *)&v9[v11[9]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v8 + v11[10]) = *(void *)&v9[v11[10]];
  swift_bridgeObjectRelease();
  *(void *)((char *)v8 + v11[11]) = *(void *)&v9[v11[11]];
  swift_release();
  return a1;
}

uint64_t sub_1DCEE2B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCEE2B28);
}

uint64_t sub_1DCEE2B28(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MLModelInfo(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCEE2BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCEE2BEC);
}

void *sub_1DCEE2BEC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MLModelInfo(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCEE2C94()
{
  uint64_t result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCEE2D30(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DCEC1CE0(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_1DCEE4B48(v5);
  *a1 = v2;
  return result;
}

uint64_t static S2RegionCoverer.defaultMaxCells.getter()
{
  return 8;
}

uint64_t sub_1DCEE2DA8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03CE0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DD0535E0;
  S2CellId.init(face:pos:level:)(0, 0, 0, &v20);
  S2Cell.init(cellId:)((unint64_t *)&v20, (uint64_t)&v21);
  __int16 v1 = v22;
  char v2 = v23;
  uint64_t v3 = v24;
  *(void *)(v0 + 32) = v21;
  *(_WORD *)(v0 + 40) = v1;
  *(unsigned char *)(v0 + 42) = v2;
  *(void *)(v0 + 48) = v3;
  S2CellId.init(face:pos:level:)(1, 0, 0, &v20);
  S2Cell.init(cellId:)((unint64_t *)&v20, (uint64_t)&v21);
  __int16 v4 = v22;
  char v5 = v23;
  uint64_t v6 = v24;
  *(void *)(v0 + 56) = v21;
  *(_WORD *)(v0 + 64) = v4;
  *(unsigned char *)(v0 + 66) = v5;
  *(void *)(v0 + 72) = v6;
  S2CellId.init(face:pos:level:)(2, 0, 0, &v20);
  S2Cell.init(cellId:)((unint64_t *)&v20, (uint64_t)&v21);
  __int16 v7 = v22;
  char v8 = v23;
  uint64_t v9 = v24;
  *(void *)(v0 + 80) = v21;
  *(_WORD *)(v0 + 88) = v7;
  *(unsigned char *)(v0 + 90) = v8;
  *(void *)(v0 + 96) = v9;
  S2CellId.init(face:pos:level:)(3, 0, 0, &v20);
  S2Cell.init(cellId:)((unint64_t *)&v20, (uint64_t)&v21);
  __int16 v10 = v22;
  char v11 = v23;
  uint64_t v12 = v24;
  *(void *)(v0 + 104) = v21;
  *(_WORD *)(v0 + 112) = v10;
  *(unsigned char *)(v0 + 114) = v11;
  *(void *)(v0 + 120) = v12;
  S2CellId.init(face:pos:level:)(4, 0, 0, &v20);
  S2Cell.init(cellId:)((unint64_t *)&v20, (uint64_t)&v21);
  __int16 v13 = v22;
  char v14 = v23;
  uint64_t v15 = v24;
  *(void *)(v0 + 128) = v21;
  *(_WORD *)(v0 + 136) = v13;
  *(unsigned char *)(v0 + 138) = v14;
  *(void *)(v0 + 144) = v15;
  S2CellId.init(face:pos:level:)(5, 0, 0, &v20);
  uint64_t result = S2Cell.init(cellId:)((unint64_t *)&v20, (uint64_t)&v21);
  __int16 v17 = v22;
  char v18 = v23;
  uint64_t v19 = v24;
  *(void *)(v0 + 152) = v21;
  *(_WORD *)(v0 + 160) = v17;
  *(unsigned char *)(v0 + 162) = v18;
  *(void *)(v0 + 168) = v19;
  off_1EAB03DE8 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_1DCEE2F7C()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1DCEE2F84(uint64_t result)
{
  uint64_t v2 = 30;
  if (result < 30) {
    uint64_t v2 = result;
  }
  *(void *)(v1 + 16) = v2 & ~(v2 >> 63);
  return result;
}

uint64_t *(*sub_1DCEE2F9C(void *a1))(uint64_t *result)
{
  *a1 = *(void *)(v1 + 16);
  a1[1] = v1;
  return sub_1DCEE2FC4;
}

uint64_t *sub_1DCEE2FC4(uint64_t *result)
{
  uint64_t v1 = *result;
  if (*result >= 30) {
    uint64_t v1 = 30;
  }
  *(void *)(result[1] + 16) = v1 & ~(v1 >> 63);
  return result;
}

uint64_t sub_1DCEE2FE0()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_1DCEE2FE8(uint64_t result)
{
  uint64_t v2 = 30;
  if (result < 30) {
    uint64_t v2 = result;
  }
  *(void *)(v1 + 24) = v2 & ~(v2 >> 63);
  return result;
}

uint64_t *(*sub_1DCEE3000(void *a1))(uint64_t *result)
{
  *a1 = *(void *)(v1 + 24);
  a1[1] = v1;
  return sub_1DCEE3028;
}

uint64_t *sub_1DCEE3028(uint64_t *result)
{
  uint64_t v1 = *result;
  if (*result >= 30) {
    uint64_t v1 = 30;
  }
  *(void *)(result[1] + 24) = v1 & ~(v1 >> 63);
  return result;
}

uint64_t sub_1DCEE3044()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_1DCEE304C(uint64_t result)
{
  uint64_t v2 = 3;
  if (result < 3) {
    uint64_t v2 = result;
  }
  if (v2 <= 1) {
    uint64_t v2 = 1;
  }
  *(void *)(v1 + 32) = v2;
  return result;
}

uint64_t *(*sub_1DCEE3068(void *a1))(uint64_t *result)
{
  *a1 = *(void *)(v1 + 32);
  a1[1] = v1;
  return sub_1DCEE3090;
}

uint64_t *sub_1DCEE3090(uint64_t *result)
{
  uint64_t v1 = *result;
  if (*result >= 3) {
    uint64_t v1 = 3;
  }
  if (v1 <= 1) {
    uint64_t v1 = 1;
  }
  *(void *)(result[1] + 32) = v1;
  return result;
}

uint64_t sub_1DCEE30B0()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_1DCEE30B8(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

void *(*sub_1DCEE30C0(void *a1))(void *result)
{
  *a1 = *(void *)(v1 + 40);
  a1[1] = v1;
  return sub_1DCEE30E8;
}

void *sub_1DCEE30E8(void *result)
{
  *(void *)(result[1] + 40) = *result;
  return result;
}

BOOL sub_1DCEE30F4(void *a1, void *a2)
{
  return *a2 < *a1;
}

BOOL sub_1DCEE3108(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1DCEE311C(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1DCEE3130(void *a1, void *a2)
{
  return *a1 < *a2;
}

double S2RegionCoverer.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1DD05B570;
  *(_OWORD *)(v0 + 32) = xmmword_1DD05B580;
  *(unsigned char *)(v0 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 88) = 0;
  *(void *)(v0 + 96) = v2;
  *(void *)(v0 + 104) = v2;
  return result;
}

double S2RegionCoverer.init()()
{
  *(_OWORD *)(v0 + 16) = xmmword_1DD05B570;
  *(_OWORD *)(v0 + 32) = xmmword_1DD05B580;
  *(unsigned char *)(v0 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 88) = 0;
  *(void *)(v0 + 96) = v2;
  *(void *)(v0 + 104) = v2;
  return result;
}

uint64_t sub_1DCEE31D8(uint64_t a1)
{
  *(unsigned char *)(v1 + 48) = 0;
  sub_1DCEE3F14(a1);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  S2CellUnion.normalize()();
  uint64_t v2 = S2CellUnion.denormalize(minLevel:levelMod:)(*(void *)(v1 + 16), *(void *)(v1 + 32));
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1DCEE3260(uint64_t a1)
{
  *(unsigned char *)(v1 + 48) = 1;
  sub_1DCEE3F14(a1);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  S2CellUnion.normalize()();
  uint64_t v2 = S2CellUnion.denormalize(minLevel:levelMod:)(*(void *)(v1 + 16), *(void *)(v1 + 32));
  swift_bridgeObjectRelease();
  return v2;
}

BOOL sub_1DCEE32EC@<W0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(unsigned char *)(v2 + 48) = 0;
  sub_1DCEE3F14(a1);
  swift_beginAccess();
  *a2 = *(void *)(v2 + 96);
  swift_bridgeObjectRetain();
  return S2CellUnion.normalize()();
}

BOOL sub_1DCEE3344@<W0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *(unsigned char *)(v2 + 48) = 1;
  sub_1DCEE3F14(a1);
  swift_beginAccess();
  *a2 = *(void *)(v2 + 96);
  swift_bridgeObjectRetain();
  return S2CellUnion.normalize()();
}

uint64_t sub_1DCEE33A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int8 *)a1 + 8);
  uint64_t v7 = *((char *)a1 + 9);
  uint64_t v8 = *((unsigned __int8 *)a1 + 10);
  uint64_t v9 = a1[2];
  swift_beginAccess();
  sub_1DCEE49F0(v2 + 56, (uint64_t)&v36);
  if (!v38)
  {
    uint64_t result = sub_1DCEE4324((uint64_t)&v36);
LABEL_7:
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  sub_1DCD3A4DC(&v36, (uint64_t)v40);
  uint64_t v10 = v41;
  uint64_t v11 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  uint64_t v30 = v5;
  *(void *)&long long v36 = v5;
  uint64_t v12 = v6;
  BYTE8(v36) = v6;
  BYTE9(v36) = v7;
  uint64_t v13 = v8;
  BYTE10(v36) = v8;
  uint64_t v14 = v9;
  uint64_t v37 = v9;
  uint64_t result = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v11 + 32))(&v36, v10, v11);
  if ((result & 1) == 0)
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    goto LABEL_7;
  }
  if (*(void *)(v2 + 16) > v7)
  {
    char v16 = 0;
    uint64_t v17 = v30;
    uint64_t v18 = v12;
LABEL_19:
    *(void *)a2 = v17;
    *(void *)(a2 + 8) = v18 | ((unint64_t)v7 << 8) | (v13 << 16);
    *(void *)(a2 + 16) = v14;
    *(void *)(a2 + 24) = v16 & 1;
    *(void *)(a2 + 32) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  uint64_t v18 = v12;
  if (*(unsigned char *)(v2 + 48) != 1)
  {
    uint64_t v21 = *(void *)(v2 + 32);
    uint64_t v22 = v7 + v21;
    if (!__OFADD__(v7, v21))
    {
      uint64_t v23 = *(void *)(v3 + 24);
      sub_1DCD3A3BC((uint64_t)v40, (uint64_t)&v36);
      BOOL v24 = v23 < v22;
      uint64_t v17 = v30;
      if (v24)
      {
        char v16 = 1;
      }
      else
      {
        uint64_t v28 = v38;
        uint64_t v29 = v39;
        __swift_project_boxed_opaque_existential_1(&v36, v38);
        uint64_t v31 = v30;
        char v32 = v18;
        char v33 = v7;
        char v34 = v13;
        uint64_t v35 = v14;
        char v16 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v29 + 24))(&v31, v28, v29);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
      goto LABEL_19;
    }
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v20 = v41;
  uint64_t v19 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  *(void *)&long long v36 = v30;
  BYTE8(v36) = v18;
  BYTE9(v36) = v7;
  BYTE10(v36) = v13;
  uint64_t v37 = v14;
  uint64_t result = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(v19 + 24))(&v36, v20, v19);
  if (result)
  {
    char v16 = 1;
    uint64_t v17 = v30;
    goto LABEL_19;
  }
  uint64_t v25 = *(void *)(v2 + 32);
  BOOL v26 = __OFADD__(v7, v25);
  uint64_t v27 = v7 + v25;
  if (v26)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v17 = v30;
  if (*(void *)(v2 + 24) >= v27)
  {
    char v16 = 0;
    goto LABEL_19;
  }
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
}

uint64_t *sub_1DCEE3658(uint64_t *result)
{
  uint64_t v5 = result[2];
  if (!v5) {
    return result;
  }
  uint64_t v7 = *result;
  uint64_t v6 = (void *)result[1];
  uint64_t v8 = result[3];
  uint64_t v9 = (void *)result[4];
  uint64_t v40 = *result;
  __int16 v41 = (__int16)v6;
  unsigned __int8 v42 = BYTE2(v6);
  uint64_t v43 = v5;
  char v44 = v8 & 1;
  uint64_t v45 = v9;
  if (v8)
  {
    uint64_t v11 = (void *)(v1 + 96);
    swift_beginAccess();
    uint64_t v12 = *(void **)(v1 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v1 + 96) = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v12 = sub_1DCE9FE74(0, v12[2] + 1, 1, v12);
      *uint64_t v11 = v12;
    }
    unint64_t v15 = v12[2];
    unint64_t v14 = v12[3];
    if (v15 >= v14 >> 1)
    {
      uint64_t v12 = sub_1DCE9FE74((void *)(v14 > 1), v15 + 1, 1, v12);
      *uint64_t v11 = v12;
    }
    void v12[2] = v15 + 1;
    v12[v15 + 4] = v7;
    swift_endAccess();
    return (uint64_t *)sub_1DCEE4A58(v7, (uint64_t)v6, v5);
  }
  if (*(void *)(v1 + 16) <= SBYTE1(v6)) {
    uint64_t v10 = *(void *)(v1 + 32);
  }
  else {
    uint64_t v10 = 1;
  }
  uint64_t v39 = v10;
  uint64_t v34 = v7;
  LOWORD(v35) = (_WORD)v6;
  BYTE2(v35) = BYTE2(v6);
  uint64_t v36 = v5;
  sub_1DCEE4A9C(v7, (uint64_t)v6, v5);
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1DCEE3AA4((uint64_t)&v40, &v34, &v39);
  swift_bridgeObjectRelease();
  uint64_t v17 = v45;
  uint64_t v18 = v45[2];
  if (!v18)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  uint64_t v19 = *(void *)(v1 + 32);
  unint64_t v20 = 2 * v19;
  uint64_t v21 = v19 + 0x4000000000000000;
  if (*(unsigned char *)(v1 + 48))
  {
    if ((v21 & 0x8000000000000000) == 0) {
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_15;
  }
  if (v21 < 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  if ((uint64_t)v20 < -64 || (uint64_t)v20 > 64) {
    goto LABEL_19;
  }
  if ((v20 & 0x8000000000000000) != 0) {
    goto LABEL_50;
  }
  if (v20 >= 0x40) {
    goto LABEL_19;
  }
  if (v16 == 1 << (v20 & 0x3E)) {
    goto LABEL_24;
  }
  while (1)
  {
LABEL_25:
    char v2 = HIBYTE(v41);
    if (v20 - 65 < 0xFFFFFFFFFFFFFF7FLL)
    {
LABEL_26:
      uint64_t v22 = 0;
      goto LABEL_31;
    }
    uint64_t v21 = SHIBYTE(v41);
    if ((v20 & 0x8000000000000000) == 0)
    {
      if (v20 > 0x3F) {
        goto LABEL_26;
      }
      v20 &= 0x3Eu;
      uint64_t v23 = (uint64_t)SHIBYTE(v41) << v20;
      BOOL v24 = __OFADD__(v23, v18);
      v18 += v23;
      if (!v24)
      {
        uint64_t v22 = v18 << v20;
        goto LABEL_31;
      }
      goto LABEL_49;
    }
LABEL_44:
    LOBYTE(v30) = 63;
    if (v20 > 0xFFFFFFFFFFFFFFC0) {
      int v30 = -(int)v20 & 0x3E;
    }
    uint64_t v31 = v21 >> v30;
    BOOL v24 = __OFADD__(v31, v18);
    v18 += v31;
    if (!v24) {
      break;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    if (v20 <= 0xFFFFFFFFFFFFFFC0)
    {
LABEL_19:
      if (!v16)
      {
LABEL_24:
        if (*(void *)(v1 + 16) <= SHIBYTE(v41))
        {
          uint64_t v34 = v40;
          unint64_t v35 = v41 | ((unint64_t)HIBYTE(v41) << 8) | ((unint64_t)v42 << 16);
          uint64_t v36 = v43;
          uint64_t v37 = 1;
          uint64_t v38 = v17;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1DCEE3658(&v34);
          swift_bridgeObjectRelease_n();
          return (uint64_t *)swift_bridgeObjectRelease_n();
        }
      }
    }
    else if (v16 == 1uLL >> (-(char)v20 & 0x3E))
    {
      goto LABEL_24;
    }
  }
  if (v20 <= 0xFFFFFFFFFFFFFFC0) {
    uint64_t v22 = v18 >> 63;
  }
  else {
    uint64_t v22 = v18 >> (-(char)v20 & 0x3E);
  }
LABEL_31:
  BOOL v24 = __OFADD__(v22, v16);
  uint64_t v25 = v22 + v16;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = -v25;
    if (!__OFSUB__(0, v25))
    {
      uint64_t v32 = v40;
      char v4 = v41;
      unsigned __int8 v33 = v42;
      uint64_t v16 = v43;
      uint64_t v9 = (void *)(v1 + 104);
      LOBYTE(v7) = v44;
      swift_beginAccess();
      uint64_t v6 = *(void **)(v1 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v26 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v1 + 104) = v6;
      if (v26) {
        goto LABEL_34;
      }
      goto LABEL_42;
    }
  }
  __break(1u);
LABEL_42:
  uint64_t v6 = sub_1DCEA0470(0, v6[2] + 1, 1, v6);
  *uint64_t v9 = v6;
LABEL_34:
  unint64_t v28 = v6[2];
  unint64_t v27 = v6[3];
  if (v28 >= v27 >> 1)
  {
    uint64_t v6 = sub_1DCEA0470((void *)(v27 > 1), v28 + 1, 1, v6);
    *uint64_t v9 = v6;
  }
  v6[2] = v28 + 1;
  uint64_t v29 = &v6[6 * v28];
  v29[4] = v3;
  v29[5] = v32;
  *((unsigned char *)v29 + 48) = v4;
  *((unsigned char *)v29 + 49) = v2;
  *((unsigned char *)v29 + 50) = v33;
  v29[7] = v16;
  *((unsigned char *)v29 + 64) = v7;
  v29[9] = v17;
  swift_endAccess();
  swift_bridgeObjectRelease();
  return (uint64_t *)swift_bridgeObjectRelease();
}

uint64_t sub_1DCEE3AA4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *a2;
  char v6 = *((unsigned char *)a2 + 8);
  char v7 = *((unsigned char *)a2 + 9);
  char v8 = *((unsigned char *)a2 + 10);
  uint64_t v9 = a2[2];
  swift_beginAccess();
  sub_1DCEE49F0(v3 + 56, (uint64_t)&v43);
  if (!v45)
  {
    sub_1DCEE4324((uint64_t)&v43);
    return 0;
  }
  uint64_t result = sub_1DCD3A4DC(&v43, (uint64_t)v47);
  if (__OFSUB__(*a3, 1)) {
    goto LABEL_25;
  }
  uint64_t v34 = a3;
  --*a3;
  *(void *)&long long v43 = v5;
  BYTE8(v43) = v6;
  BYTE9(v43) = v7;
  BYTE10(v43) = v8;
  uint64_t v44 = v9;
  uint64_t v11 = S2Cell.subdivide()();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
    uint64_t v36 = 0;
LABEL_23:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    return v36;
  }
  uint64_t v36 = 0;
  uint64_t v13 = (void *)(v11 + 48);
  unint64_t v14 = a3;
  while (1)
  {
    uint64_t v15 = *(v13 - 2);
    char v16 = *((unsigned char *)v13 - 8);
    char v17 = *((unsigned char *)v13 - 7);
    char v18 = *((unsigned char *)v13 - 6);
    uint64_t v19 = *v13;
    if (*v14 >= 1) {
      break;
    }
    uint64_t v38 = *(v13 - 2);
    char v39 = v16;
    char v40 = v17;
    char v41 = v18;
    uint64_t v42 = v19;
    swift_bridgeObjectRetain();
    sub_1DCEE33A0(&v38, (uint64_t)&v43);
    swift_bridgeObjectRelease();
    uint64_t v25 = v44;
    if (!v44) {
      goto LABEL_7;
    }
    uint64_t v27 = *((void *)&v43 + 1);
    uint64_t v26 = v43;
    char v28 = v45;
    uint64_t v29 = v46;
    int v30 = *(void **)(a1 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v37 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v30 = sub_1DCEA034C(0, v30[2] + 1, 1, v30);
    }
    unint64_t v32 = v30[2];
    unint64_t v31 = v30[3];
    if (v32 >= v31 >> 1) {
      int v30 = sub_1DCEA034C((void *)(v31 > 1), v32 + 1, 1, v30);
    }
    v30[2] = v32 + 1;
    unsigned __int8 v33 = &v30[5 * v32];
    void v33[4] = v26;
    *((_WORD *)v33 + 20) = v27;
    *((unsigned char *)v33 + 42) = BYTE2(v27);
    v33[6] = v25;
    *((unsigned char *)v33 + 56) = v28 & 1;
    v33[8] = v29;
    uint64_t result = sub_1DCEE4A58(v26, v27, v25);
    *(void *)(a1 + 32) = v30;
    if (v28)
    {
      uint64_t v24 = v36 + 1;
      if (__OFADD__(v36, 1)) {
        goto LABEL_24;
      }
      goto LABEL_20;
    }
LABEL_6:
    uint64_t v12 = v37;
LABEL_7:
    v13 += 3;
    if (!--v12) {
      goto LABEL_23;
    }
  }
  uint64_t v37 = v12;
  uint64_t v20 = v48;
  uint64_t v21 = v49;
  __swift_project_boxed_opaque_existential_1(v47, v48);
  *(void *)&long long v43 = v15;
  BYTE8(v43) = v16;
  BYTE9(v43) = v17;
  BYTE10(v43) = v18;
  uint64_t v44 = v19;
  uint64_t v22 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v21 + 32);
  swift_bridgeObjectRetain();
  if ((v22(&v43, v20, v21) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = v34;
    goto LABEL_6;
  }
  *(void *)&long long v43 = v15;
  BYTE8(v43) = v16;
  BYTE9(v43) = v17;
  BYTE10(v43) = v18;
  uint64_t v44 = v19;
  unint64_t v14 = v34;
  uint64_t v23 = sub_1DCEE3AA4(a1, &v43, v34);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v24 = v36 + v23;
  if (!__OFADD__(v36, v23))
  {
LABEL_20:
    uint64_t v36 = v24;
    goto LABEL_6;
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1DCEE3DC4()
{
  swift_beginAccess();
  sub_1DCEE49F0(v0 + 56, (uint64_t)&v16);
  uint64_t v1 = v19;
  uint64_t result = sub_1DCEE4324((uint64_t)&v16);
  if (v1)
  {
    if (qword_1EAB01F50 != -1) {
      goto LABEL_8;
    }
    while (1)
    {
      uint64_t v3 = 0;
      unint64_t v4 = 0;
      while (v4 < *((void *)off_1EAB03DE8 + 2))
      {
        ++v4;
        __int16 v5 = *(_WORD *)((char *)off_1EAB03DE8 + v3 + 40);
        char v6 = *((unsigned char *)off_1EAB03DE8 + v3 + 42);
        uint64_t v7 = *(void *)((char *)off_1EAB03DE8 + v3 + 48);
        uint64_t v11 = *(void *)((char *)off_1EAB03DE8 + v3 + 32);
        LOWORD(v12) = v5;
        BYTE2(v12) = v6;
        uint64_t v13 = v7;
        swift_bridgeObjectRetain();
        sub_1DCEE33A0(&v11, (uint64_t)&v16);
        swift_bridgeObjectRelease();
        uint64_t v8 = v16;
        uint64_t v9 = v17;
        uint64_t v10 = v18;
        uint64_t v11 = v16;
        uint64_t v12 = v17;
        uint64_t v13 = v18;
        uint64_t v14 = v19;
        uint64_t v15 = v20;
        sub_1DCEE3658(&v11);
        uint64_t result = sub_1DCEE4A58(v8, v9, v10);
        v3 += 24;
        if (v3 == 144) {
          return result;
        }
      }
      __break(1u);
LABEL_8:
      swift_once();
    }
  }
  return result;
}

uint64_t sub_1DCEE3F14(uint64_t a1)
{
  uint64_t v3 = v1 + 104;
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 104) + 16))
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    uint64_t result = sub_1DD048D18();
    __break(1u);
    return result;
  }
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 96) + 16)) {
    goto LABEL_35;
  }
  sub_1DCD3A3BC(a1, (uint64_t)&v26);
  swift_beginAccess();
  sub_1DCEE4AE0((uint64_t)&v26, v1 + 56);
  swift_endAccess();
  sub_1DCEE3DC4();
  swift_beginAccess();
  sub_1DCEE2D30((void **)(v1 + 104));
  swift_endAccess();
  if (*(void *)(*(void *)(v1 + 104) + 16))
  {
    do
    {
      if (*(unsigned char *)(v1 + 48) == 1 && *(void *)(*(void *)(v1 + 96) + 16) >= *(void *)(v1 + 40)) {
        break;
      }
      swift_beginAccess();
      unint64_t v4 = *(void **)v3;
      int64_t v5 = *(void *)(*(void *)v3 + 16);
      if (!v5)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      uint64_t v6 = v4[5];
      uint64_t v7 = *((unsigned __int8 *)v4 + 48);
      uint64_t v8 = *((char *)v4 + 49);
      uint64_t v9 = *((unsigned __int8 *)v4 + 50);
      uint64_t v10 = v4[7];
      uint64_t v11 = v4[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || (unint64_t)(v5 - 1) > v4[3] >> 1) {
        unint64_t v4 = sub_1DCEA0470(isUniquelyReferenced_nonNull_native, v5, 1, v4);
      }
      swift_arrayDestroy();
      uint64_t v13 = v4[2];
      if (!v13) {
        goto LABEL_36;
      }
      memmove(v4 + 4, v4 + 10, 48 * v13 - 48);
      void v4[2] = v13 - 1;
      *(void *)(v1 + 104) = v4;
      swift_endAccess();
      uint64_t v14 = *(void *)(v11 + 16);
      if (*(void *)(v1 + 16) > v8) {
        goto LABEL_16;
      }
      if (v14 == 1)
      {
LABEL_19:
        swift_bridgeObjectRetain();
        uint64_t v15 = 0;
        uint64_t v3 = v1 + 104;
        do
        {
          uint64_t v16 = *(void *)(v11 + v15 + 48);
          uint64_t v17 = *(unsigned __int8 *)(v11 + v15 + 56);
          uint64_t v18 = *(void *)(v11 + v15 + 64);
          unint64_t v19 = *(unsigned __int16 *)(v11 + v15 + 40) | ((unint64_t)*(unsigned __int8 *)(v11 + v15 + 42) << 16);
          *(void *)&long long v26 = *(void *)(v11 + v15 + 32);
          *((void *)&v26 + 1) = v19;
          *(void *)&long long v27 = v16;
          *((void *)&v27 + 1) = v17;
          uint64_t v28 = v18;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1DCEE3658((uint64_t *)&v26);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 += 40;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        continue;
      }
      if (*(unsigned char *)(v1 + 48)) {
        uint64_t v20 = 0;
      }
      else {
        uint64_t v20 = v4[2];
      }
      uint64_t v21 = *(void *)(*(void *)(v1 + 96) + 16);
      BOOL v22 = __OFADD__(v21, v20);
      uint64_t v23 = v21 + v20;
      if (v22) {
        goto LABEL_32;
      }
      BOOL v22 = __OFADD__(v23, v14);
      uint64_t v24 = v23 + v14;
      if (v22) {
        goto LABEL_33;
      }
      if (*(void *)(v1 + 40) >= v24)
      {
LABEL_16:
        if (v14) {
          goto LABEL_19;
        }
      }
      else if (!*(unsigned char *)(v1 + 48))
      {
        *(void *)&long long v26 = v6;
        *((void *)&v26 + 1) = v7 & 0xFFFFFFFFFFFF00FFLL | ((unint64_t)v8 << 8) | (v9 << 16);
        *(void *)&long long v27 = v10;
        *((void *)&v27 + 1) = 1;
        uint64_t v28 = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1DCEE3658((uint64_t *)&v26);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        goto LABEL_6;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      uint64_t v3 = v1 + 104;
    }
    while (*(void *)(*(void *)v3 + 16));
  }
  *(void *)uint64_t v3 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v28 = 0;
  long long v26 = 0u;
  long long v27 = 0u;
  swift_beginAccess();
  sub_1DCEE4AE0((uint64_t)&v26, v1 + 56);
  return swift_endAccess();
}

uint64_t S2RegionCoverer.deinit()
{
  sub_1DCEE4324(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DCEE4324(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03DF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t S2RegionCoverer.__deallocating_deinit()
{
  sub_1DCEE4324(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCEE43CC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 16);
  return result;
}

uint64_t *sub_1DCEE43DC(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  if (*result >= 30) {
    uint64_t v2 = 30;
  }
  *(void *)(*(void *)a2 + 16) = v2 & ~(v2 >> 63);
  return result;
}

uint64_t sub_1DCEE43FC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 24);
  return result;
}

uint64_t *sub_1DCEE440C(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  if (*result >= 30) {
    uint64_t v2 = 30;
  }
  *(void *)(*(void *)a2 + 24) = v2 & ~(v2 >> 63);
  return result;
}

uint64_t sub_1DCEE442C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 32);
  return result;
}

uint64_t *sub_1DCEE443C(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  if (*result >= 3) {
    uint64_t v2 = 3;
  }
  if (v2 <= 1) {
    uint64_t v2 = 1;
  }
  *(void *)(*(void *)a2 + 32) = v2;
  return result;
}

uint64_t sub_1DCEE4460@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 40);
  return result;
}

void *sub_1DCEE4470(void *result, uint64_t a2)
{
  *(void *)(*(void *)a2 + 40) = *result;
  return result;
}

uint64_t type metadata accessor for S2RegionCoverer()
{
  return self;
}

uint64_t method lookup function for S2RegionCoverer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for S2RegionCoverer);
}

uint64_t dispatch thunk of S2RegionCoverer.minLevel.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of S2RegionCoverer.minLevel.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of S2RegionCoverer.minLevel.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of S2RegionCoverer.maxLevel.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of S2RegionCoverer.maxLevel.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of S2RegionCoverer.maxLevel.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of S2RegionCoverer.levelMod.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of S2RegionCoverer.levelMod.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of S2RegionCoverer.levelMod.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of S2RegionCoverer.maxCells.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of S2RegionCoverer.maxCells.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of S2RegionCoverer.maxCells.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of S2RegionCoverer.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 432))();
}

uint64_t dispatch thunk of S2RegionCoverer.getCovering(region:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of S2RegionCoverer.getInteriorCovering(region:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of S2RegionCoverer.getCoveringUnion(region:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of S2RegionCoverer.getInteriorCoveringUnion(region:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t destroy for S2RegionCoverer.QueueEntry()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for S2RegionCoverer.QueueEntry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for S2RegionCoverer.QueueEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for S2RegionCoverer.QueueEntry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for S2RegionCoverer.QueueEntry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for S2RegionCoverer.QueueEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for S2RegionCoverer.QueueEntry()
{
  return &type metadata for S2RegionCoverer.QueueEntry;
}

unint64_t sub_1DCEE499C()
{
  unint64_t result = qword_1EAB03DF8;
  if (!qword_1EAB03DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03DF8);
  }
  return result;
}

uint64_t sub_1DCEE49F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCEE4A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCEE4A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1DCEE4AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCEE4B48(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DD048F68();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v99 = 0;
      uint64_t v100 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v102 = *(void *)(v100 + 48 * i);
        uint64_t v103 = v99;
        do
        {
          uint64_t v104 = (_OWORD *)(v100 + v103);
          if (*(void *)(v100 + v103) >= v102) {
            break;
          }
          if (!v100) {
            goto LABEL_140;
          }
          uint64_t v105 = v100 + v103;
          uint64_t v106 = *(void *)(v100 + v103 + 56);
          __int16 v107 = *(_WORD *)(v100 + v103 + 64);
          uint64_t result = *(unsigned __int8 *)(v100 + v103 + 66);
          uint64_t v108 = *(void *)(v100 + v103 + 72);
          char v109 = *(unsigned char *)(v100 + v103 + 80);
          uint64_t v110 = *(void *)(v100 + v103 + 88);
          long long v111 = v104[1];
          *(_OWORD *)(v100 + v103 + 48) = *v104;
          *(_OWORD *)(v100 + v103 + 64) = v111;
          *(_OWORD *)(v100 + v103 + 80) = v104[2];
          *(void *)uint64_t v105 = v102;
          *(void *)(v105 + 8) = v106;
          *(_WORD *)(v105 + 16) = v107;
          *(unsigned char *)(v105 + 18) = result;
          *(void *)(v105 + 24) = v108;
          *(unsigned char *)(v105 + 32) = v109;
          v103 -= 48;
          *(void *)(v105 + 40) = v110;
        }
        while (v103 != -48);
        v99 += 48;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  uint64_t v128 = v1;
  unint64_t v121 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      unint64_t v112 = v12;
      uint64_t v123 = v9;
      if (v13 >= 2)
      {
        uint64_t v113 = *v121;
        do
        {
          unint64_t v114 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v113) {
            goto LABEL_144;
          }
          uint64_t v115 = v112;
          uint64_t v116 = *(void *)&v112[16 * v114 + 32];
          uint64_t v117 = *(void *)&v112[16 * v13 + 24];
          sub_1DCEE52C8((char *)(v113 + 48 * v116), (char *)(v113 + 48 * *(void *)&v112[16 * v13 + 16]), v113 + 48 * v117, __dst);
          if (v128) {
            break;
          }
          if (v117 < v116) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v115 = sub_1DCD729EC((uint64_t)v115);
          }
          if (v114 >= *((void *)v115 + 2)) {
            goto LABEL_133;
          }
          uint64_t v118 = &v115[16 * v114 + 32];
          *(void *)uint64_t v118 = v116;
          *((void *)v118 + 1) = v117;
          unint64_t v119 = *((void *)v115 + 2);
          if (v13 > v119) {
            goto LABEL_134;
          }
          memmove(&v115[16 * v13 + 16], &v115[16 * v13 + 32], 16 * (v119 - v13));
          unint64_t v112 = v115;
          *((void *)v115 + 2) = v119 - 1;
          unint64_t v13 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v123 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v123 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1DD0486F8();
    *(void *)(v8 + 16) = v7;
    uint64_t v123 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v122 = *a1 + 96;
  uint64_t v120 = *a1 + 40;
  uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v124 = v6;
  uint64_t v125 = v3;
  uint64_t v126 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 48 * v10);
      uint64_t v16 = *(void *)(v11 + 48 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (uint64_t *)(v122 + 48 * v14);
        uint64_t v18 = v15;
        while (1)
        {
          uint64_t v20 = *v17;
          v17 += 6;
          uint64_t v19 = v20;
          if (v16 < v15 == v18 >= v20) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 48 * v10;
          uint64_t v22 = 48 * v14;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = (_OWORD *)(v11 + v22);
              __int16 v26 = *(_WORD *)(v11 + v22 + 16);
              uint64_t v27 = v11 + v21;
              char v28 = *(unsigned char *)(v11 + v22 + 18);
              uint64_t v29 = *(void *)(v11 + v22 + 24);
              char v30 = *(unsigned char *)(v11 + v22 + 32);
              uint64_t v31 = *(void *)(v11 + v22 + 40);
              long long v32 = *(_OWORD *)(v11 + v22);
              long long v34 = *(_OWORD *)(v11 + v21 - 32);
              long long v33 = *(_OWORD *)(v11 + v21 - 16);
              *uint64_t v25 = *(_OWORD *)(v11 + v21 - 48);
              v25[1] = v34;
              _OWORD v25[2] = v33;
              *(_OWORD *)(v27 - 48) = v32;
              *(_WORD *)(v27 - 32) = v26;
              *(unsigned char *)(v27 - 30) = v28;
              *(void *)(v27 - 24) = v29;
              *(unsigned char *)(v27 - 16) = v30;
              *(void *)(v27 - 8) = v31;
            }
            ++v24;
            v21 -= 48;
            v22 += 48;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v35 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v35 >= v3) {
      uint64_t v35 = v3;
    }
    if (v35 < v14) {
      break;
    }
    if (v10 != v35)
    {
      uint64_t v36 = v120 + 48 * v10;
      do
      {
        uint64_t v37 = *(void *)(v11 + 48 * v10);
        uint64_t v38 = v14;
        uint64_t v39 = v36;
        do
        {
          char v40 = (_OWORD *)(v39 - 88);
          if (*(void *)(v39 - 88) >= v37) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          long long v42 = *(_OWORD *)(v39 - 72);
          long long v41 = *(_OWORD *)(v39 - 56);
          *(void *)(v39 - 48) = *(void *)v39;
          v39 -= 48;
          uint64_t v43 = *(void *)(v39 + 16);
          __int16 v44 = *(_WORD *)(v39 + 24);
          char v45 = *(unsigned char *)(v39 + 26);
          uint64_t v46 = *(void *)(v39 + 32);
          char v47 = *(unsigned char *)(v39 + 40);
          void v40[3] = *v40;
          v40[4] = v42;
          v40[5] = v41;
          *(void *)(v39 - 40) = v37;
          *(void *)(v39 - 32) = v43;
          *(_WORD *)(v39 - 24) = v44;
          *(unsigned char *)(v39 - 22) = v45;
          *(void *)(v39 - 16) = v46;
          *(unsigned char *)(v39 - 8) = v47;
          ++v38;
        }
        while (v10 != v38);
        ++v10;
        v36 += 48;
      }
      while (v10 != v35);
      uint64_t v10 = v35;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1DCD71FDC(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v49 = *((void *)v12 + 2);
    unint64_t v48 = *((void *)v12 + 3);
    unint64_t v13 = v49 + 1;
    uint64_t v11 = v126;
    if (v49 >= v48 >> 1)
    {
      uint64_t v98 = sub_1DCD71FDC((char *)(v48 > 1), v49 + 1, 1, v12);
      uint64_t v11 = v126;
      uint64_t v12 = v98;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v50 = v12 + 32;
    uint64_t v51 = &v12[16 * v49 + 32];
    *(void *)uint64_t v51 = v14;
    *((void *)v51 + 1) = v10;
    if (v49)
    {
      while (1)
      {
        unint64_t v52 = v13 - 1;
        if (v13 >= 4)
        {
          id v57 = &v50[16 * v13];
          uint64_t v58 = *((void *)v57 - 8);
          uint64_t v59 = *((void *)v57 - 7);
          BOOL v63 = __OFSUB__(v59, v58);
          uint64_t v60 = v59 - v58;
          if (v63) {
            goto LABEL_119;
          }
          uint64_t v62 = *((void *)v57 - 6);
          uint64_t v61 = *((void *)v57 - 5);
          BOOL v63 = __OFSUB__(v61, v62);
          uint64_t v55 = v61 - v62;
          char v56 = v63;
          if (v63) {
            goto LABEL_120;
          }
          unint64_t v64 = v13 - 2;
          unint64_t v65 = &v50[16 * v13 - 32];
          uint64_t v67 = *(void *)v65;
          uint64_t v66 = *((void *)v65 + 1);
          BOOL v63 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          if (v63) {
            goto LABEL_122;
          }
          BOOL v63 = __OFADD__(v55, v68);
          uint64_t v69 = v55 + v68;
          if (v63) {
            goto LABEL_125;
          }
          if (v69 >= v60)
          {
            id v87 = &v50[16 * v52];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            BOOL v63 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v63) {
              goto LABEL_129;
            }
            BOOL v80 = v55 < v90;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v81 = *((void *)v12 + 4);
            uint64_t v82 = *((void *)v12 + 5);
            BOOL v63 = __OFSUB__(v82, v81);
            uint64_t v74 = v82 - v81;
            char v75 = v63;
            goto LABEL_77;
          }
          uint64_t v54 = *((void *)v12 + 4);
          uint64_t v53 = *((void *)v12 + 5);
          BOOL v63 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          char v56 = v63;
        }
        if (v56) {
          goto LABEL_121;
        }
        unint64_t v64 = v13 - 2;
        os_log_type_t v70 = &v50[16 * v13 - 32];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v73 = __OFSUB__(v71, v72);
        uint64_t v74 = v71 - v72;
        char v75 = v73;
        if (v73) {
          goto LABEL_124;
        }
        uint64_t v76 = &v50[16 * v52];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v63 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v63) {
          goto LABEL_127;
        }
        if (__OFADD__(v74, v79)) {
          goto LABEL_128;
        }
        if (v74 + v79 >= v55)
        {
          BOOL v80 = v55 < v79;
LABEL_83:
          if (v80) {
            unint64_t v52 = v64;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v75) {
          goto LABEL_123;
        }
        uint64_t v83 = &v50[16 * v52];
        uint64_t v85 = *(void *)v83;
        uint64_t v84 = *((void *)v83 + 1);
        BOOL v63 = __OFSUB__(v84, v85);
        uint64_t v86 = v84 - v85;
        if (v63) {
          goto LABEL_126;
        }
        if (v86 < v74) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v91 = v52 - 1;
        if (v52 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v92 = v12;
        uint64_t v93 = &v50[16 * v91];
        uint64_t v94 = *(void *)v93;
        os_log_type_t v95 = &v50[16 * v52];
        uint64_t v96 = *((void *)v95 + 1);
        sub_1DCEE52C8((char *)(v11 + 48 * *(void *)v93), (char *)(v11 + 48 * *(void *)v95), v11 + 48 * v96, __dst);
        if (v128) {
          goto LABEL_93;
        }
        if (v96 < v94) {
          goto LABEL_116;
        }
        if (v52 > *((void *)v92 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v93 = v94;
        *(void *)&v50[16 * v91 + 8] = v96;
        unint64_t v97 = *((void *)v92 + 2);
        if (v52 >= v97) {
          goto LABEL_118;
        }
        uint64_t v12 = v92;
        unint64_t v13 = v97 - 1;
        memmove(&v50[16 * v52], v95 + 16, 16 * (v97 - 1 - v52));
        *((void *)v92 + 2) = v97 - 1;
        uint64_t v11 = v126;
        if (v97 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v124;
    uint64_t v3 = v125;
    if (v10 >= v125)
    {
      uint64_t v9 = v123;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCEE52C8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = (long long *)__dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  char v30 = __src;
  uint64_t v29 = (long long *)__dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst) {
        memmove(__dst, a2, 48 * v11);
      }
      uint64_t v18 = &v4[3 * v11];
      char v28 = v18;
      char v30 = v6;
      if (v7 < v6 && v10 >= 48)
      {
        uint64_t v19 = (char *)(a3 - 48);
        uint64_t v20 = v6;
        while (1)
        {
          uint64_t v21 = v19 + 48;
          uint64_t v22 = *((void *)v20 - 6);
          v20 -= 48;
          if (v22 >= *((void *)v18 - 6))
          {
            char v28 = v18 - 3;
            if (v21 < (char *)v18 || v19 >= (char *)v18 || v21 != (char *)v18)
            {
              long long v25 = *(v18 - 3);
              long long v26 = *(v18 - 1);
              *((_OWORD *)v19 + 1) = *(v18 - 2);
              *((_OWORD *)v19 + 2) = v26;
              *(_OWORD *)uint64_t v19 = v25;
            }
            uint64_t v20 = v6;
            v18 -= 3;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v21 != v6 || v19 >= v6)
            {
              long long v23 = *(_OWORD *)v20;
              long long v24 = *((_OWORD *)v20 + 2);
              *((_OWORD *)v19 + 1) = *((_OWORD *)v20 + 1);
              *((_OWORD *)v19 + 2) = v24;
              *(_OWORD *)uint64_t v19 = v23;
            }
            char v30 = v20;
            if (v20 <= v7) {
              goto LABEL_38;
            }
          }
          v19 -= 48;
          uint64_t v6 = v20;
          if (v18 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst) {
      memmove(__dst, __src, 48 * v9);
    }
    uint64_t v12 = &v4[3 * v9];
    char v28 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      do
      {
        if (*(void *)v4 >= *(void *)v6)
        {
          if (v7 != (char *)v4)
          {
            long long v16 = *v4;
            long long v17 = v4[2];
            *((_OWORD *)v7 + 1) = v4[1];
            *((_OWORD *)v7 + 2) = v17;
            *(_OWORD *)uint64_t v7 = v16;
          }
          v4 += 3;
          uint64_t v29 = v4;
          unint64_t v13 = v6;
        }
        else
        {
          unint64_t v13 = v6 + 48;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
          {
            long long v14 = *(_OWORD *)v6;
            long long v15 = *((_OWORD *)v6 + 2);
            *((_OWORD *)v7 + 1) = *((_OWORD *)v6 + 1);
            *((_OWORD *)v7 + 2) = v15;
            *(_OWORD *)uint64_t v7 = v14;
          }
        }
        v7 += 48;
        if (v4 >= v12) {
          break;
        }
        uint64_t v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      char v30 = v7;
    }
LABEL_38:
    sub_1DCD7284C((void **)&v30, (const void **)&v29, &v28);
    return 1;
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t destroy for S2RegionCoverer.Candidate()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for S2RegionCoverer.Candidate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for S2RegionCoverer.Candidate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for S2RegionCoverer.Candidate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for S2RegionCoverer.Candidate(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for S2RegionCoverer.Candidate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for S2RegionCoverer.Candidate()
{
  return &type metadata for S2RegionCoverer.Candidate;
}

uint64_t _s14DetectedResultVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14DetectedResultVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14DetectedResultVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy76_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s14DetectedResultVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

uint64_t _s14DetectedResultVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 76)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14DetectedResultVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 76) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 76) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14DetectedResultVMa()
{
  return &_s14DetectedResultVN;
}

uint64_t _s7RequestVwxx(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_unknownObjectRelease();
}

uint64_t _s7RequestVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t _s7RequestVwca(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t _s7RequestVwta(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *_s7RequestVMa()
{
  return &_s7RequestVN;
}

uint64_t sub_1DCEE5BC0()
{
  uint64_t v1 = *v0;
  int v2 = *((_DWORD *)v0 + 18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85228);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DD04EF80;
  uint64_t v4 = MEMORY[0x1E4FBB5C8];
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v3 + 64) = v4;
  *(void *)(v3 + 32) = v1;
  uint64_t v5 = NormalizedRect.loggingDescription.getter();
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 96) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1DCD52754();
  *(void *)(v3 + 104) = v9;
  *(void *)(v3 + 72) = v5;
  *(void *)(v3 + 80) = v7;
  *(void *)&long long v13 = 0;
  *((void *)&v13 + 1) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DD048B98();
  sub_1DD048548();
  swift_bridgeObjectRetain();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  swift_bridgeObjectRetain();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  *(void *)(v3 + 136) = v8;
  *(void *)(v3 + 144) = v9;
  uint64_t v10 = MEMORY[0x1E4FBB470];
  uint64_t v11 = MEMORY[0x1E4FBB4D0];
  *(_OWORD *)(v3 + 112) = v13;
  *(void *)(v3 + 176) = v10;
  *(void *)(v3 + 184) = v11;
  *(_DWORD *)(v3 + 152) = v2;
  return sub_1DD048438();
}

uint64_t sub_1DCEE5DB4(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85180);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  uint64_t v12 = v1[5];
  uint64_t v22 = v1[6];
  uint64_t v23 = v12;
  uint64_t v13 = v1[7];
  uint64_t v20 = v1[8];
  uint64_t v21 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCEE63E4();
  sub_1DD049138();
  LOBYTE(v25) = 0;
  sub_1DD048EF8();
  if (!v2)
  {
    uint64_t v15 = v20;
    uint64_t v14 = v21;
    uint64_t v17 = v22;
    uint64_t v16 = v23;
    uint64_t v25 = v8;
    uint64_t v26 = v9;
    uint64_t v27 = v10;
    uint64_t v28 = v11;
    char v24 = 1;
    sub_1DCEE6438();
    sub_1DD048F18();
    uint64_t v25 = v16;
    uint64_t v26 = v17;
    uint64_t v27 = v14;
    uint64_t v28 = v15;
    char v24 = 2;
    sub_1DCEE648C();
    sub_1DD048F18();
    LOBYTE(v25) = 3;
    sub_1DD048EE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1DCEE5FE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03E00);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCEE63E4();
  sub_1DD049128();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v23) = 0;
  uint64_t v9 = sub_1DD048E08();
  char v22 = 1;
  sub_1DCEE64E0();
  sub_1DD048E28();
  uint64_t v10 = v23;
  uint64_t v11 = v24;
  uint64_t v12 = v25;
  uint64_t v13 = v26;
  char v22 = 2;
  sub_1DCEE6534();
  sub_1DD048E28();
  uint64_t v14 = v26;
  uint64_t v19 = v25;
  uint64_t v20 = v23;
  LOBYTE(v23) = 3;
  uint64_t v21 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DD048DF8();
  int v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v13;
  uint64_t v17 = v21;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v17;
  *(void *)(a2 + 56) = v19;
  *(void *)(a2 + 64) = v14;
  *(_DWORD *)(a2 + 72) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCEE6280()
{
  uint64_t result = 0x6E6F697469736F70;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E69646E756F62;
      break;
    case 2:
      uint64_t result = 0x79676F6C6F746E6FLL;
      break;
    case 3:
      uint64_t result = 0x65726F6373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCEE6310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCEE67A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCEE6338(uint64_t a1)
{
  unint64_t v2 = sub_1DCEE63E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCEE6374(uint64_t a1)
{
  unint64_t v2 = sub_1DCEE63E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1DCEE63B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCEE5FE0(a1, a2);
}

uint64_t sub_1DCEE63C8(void *a1)
{
  return sub_1DCEE5DB4(a1);
}

unint64_t sub_1DCEE63E4()
{
  unint64_t result = qword_1EBE84AA8;
  if (!qword_1EBE84AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84AA8);
  }
  return result;
}

unint64_t sub_1DCEE6438()
{
  unint64_t result = qword_1EBE84A90;
  if (!qword_1EBE84A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84A90);
  }
  return result;
}

unint64_t sub_1DCEE648C()
{
  unint64_t result = qword_1EBE84A28;
  if (!qword_1EBE84A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84A28);
  }
  return result;
}

unint64_t sub_1DCEE64E0()
{
  unint64_t result = qword_1EAB03E08;
  if (!qword_1EAB03E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03E08);
  }
  return result;
}

unint64_t sub_1DCEE6534()
{
  unint64_t result = qword_1EAB03E10;
  if (!qword_1EAB03E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03E10);
  }
  return result;
}

ValueMetadata *_s20ClassificationResultVMa()
{
  return &_s20ClassificationResultVN;
}

unsigned char *_s14DetectedResultV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCEE6664);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14DetectedResultV10CodingKeysOMa()
{
  return &_s14DetectedResultV10CodingKeysON;
}

unint64_t sub_1DCEE66A0()
{
  unint64_t result = qword_1EAB03E18;
  if (!qword_1EAB03E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03E18);
  }
  return result;
}

unint64_t sub_1DCEE66F8()
{
  unint64_t result = qword_1EBE84AC0;
  if (!qword_1EBE84AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84AC0);
  }
  return result;
}

unint64_t sub_1DCEE6750()
{
  unint64_t result = qword_1EBE84AB8;
  if (!qword_1EBE84AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84AB8);
  }
  return result;
}

uint64_t sub_1DCEE67A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79676F6C6F746E6FLL && a2 == 0xE800000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1DCEE6970@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v150 = a3;
  uint64_t v141 = sub_1DD048068();
  uint64_t v7 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  uint64_t v9 = (char *)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v149 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  int v15 = (double *)((char *)&v129 - v14);
  long long v16 = a2[9];
  long long v17 = a2[7];
  long long v176 = a2[8];
  long long v177 = v16;
  long long v18 = a2[9];
  long long v178 = a2[10];
  long long v19 = a2[5];
  long long v20 = a2[3];
  long long v172 = a2[4];
  long long v173 = v19;
  long long v21 = a2[5];
  long long v22 = a2[7];
  long long v174 = a2[6];
  long long v175 = v22;
  long long v23 = a2[1];
  long long v168 = *a2;
  long long v169 = v23;
  long long v24 = a2[3];
  long long v26 = *a2;
  long long v25 = a2[1];
  long long v170 = a2[2];
  long long v171 = v24;
  long long v27 = a2[10];
  v166[1] = v18;
  v166[2] = v27;
  long long v162 = v172;
  long long v163 = v21;
  long long v164 = v174;
  long long v165 = v17;
  v166[0] = v176;
  long long v158 = v26;
  long long v159 = v25;
  uint64_t v179 = *((void *)a2 + 22);
  uint64_t v167 = *((void *)a2 + 22);
  long long v160 = v170;
  long long v161 = v20;
  uint64_t v28 = sub_1DCF22DA4();
  uint64_t v156 = *(void *)(v28 + 16);
  if (!v156)
  {
    swift_bridgeObjectRelease();
    uint64_t v118 = (void *)MEMORY[0x1E4FBC860];
LABEL_57:
    uint64_t v119 = type metadata accessor for VisualSearchResultInternal(0);
    sub_1DCEE776C(a1, a4 + *(int *)(v119 + 24));
    uint64_t v120 = a4 + *(int *)(v119 + 28);
    uint64_t v121 = sub_1DD0477D8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v120, 1, 1, v121);
    long long v122 = v177;
    *(_OWORD *)(a4 + 128) = v176;
    *(_OWORD *)(a4 + 144) = v122;
    *(_OWORD *)(a4 + 160) = v178;
    uint64_t v123 = v179;
    long long v124 = v173;
    *(_OWORD *)(a4 + 64) = v172;
    *(_OWORD *)(a4 + 80) = v124;
    long long v125 = v175;
    *(_OWORD *)(a4 + 96) = v174;
    *(_OWORD *)(a4 + 112) = v125;
    long long v126 = v169;
    *(_OWORD *)a4 = v168;
    *(_OWORD *)(a4 + 16) = v126;
    long long v127 = v171;
    *(_OWORD *)(a4 + 32) = v170;
    *(_OWORD *)(a4 + 48) = v127;
    *(void *)(a4 + 176) = v123;
    *(void *)(a4 + 184) = v118;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DC0);
    swift_storeEnumTagMultiPayload();
    return sub_1DCD433F0((uint64_t)&v168);
  }
  long long v144 = v12;
  uint64_t v145 = v9;
  uint64_t v136 = a4;
  uint64_t v29 = type metadata accessor for ServerSearchResult();
  unint64_t v30 = 0;
  uint64_t v31 = *(unsigned __int8 *)(v149 + 80);
  uint64_t v155 = *(int *)(v29 + 20);
  uint64_t v153 = 0;
  uint64_t v154 = v28 + ((v31 + 32) & ~v31);
  uint64_t v139 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v140 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  long long v138 = (char *)&v158 + 8;
  unint64_t v131 = "coarseCategoryDistribution";
  unint64_t v130 = 0x80000001DD067880;
  *(void *)&long long v32 = 136315394;
  long long v135 = v32;
  uint64_t v134 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v151 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v33 = v150;
  uint64_t v34 = v149;
  uint64_t v35 = v28;
  uint64_t v143 = v28;
  uint64_t v146 = a1;
  while (v30 < *(void *)(v35 + 16))
  {
    sub_1DCEE77F8(v154 + *(void *)(v34 + 72) * v30, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v36 = *(void *)(a1 + v155);
    if (*(void *)(v36 + 16))
    {
      CGFloat v37 = *v15;
      CGFloat v38 = v15[1];
      CGFloat v39 = v15[2];
      CGFloat v40 = v15[3];
      unint64_t v41 = sub_1DCEAD508(*v15, v38, v39, v40);
      if (v42)
      {
        if (*(void *)(v36 + 16))
        {
          uint64_t v43 = *(void *)(*(void *)(v36 + 56) + 16 * v41);
          swift_bridgeObjectRetain();
          unint64_t v44 = sub_1DCEAD508(v37, v38, v39, v40);
          if (v45)
          {
            uint64_t v148 = v43;
            uint64_t v46 = *(void *)(*(void *)(v36 + 56) + 16 * v44 + 8);
            uint64_t v47 = *((void *)v15 + 6);
            uint64_t v48 = *(void *)(v47 + 16);
            uint64_t v152 = v46;
            if (v48)
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v49 = v48 - 1;
              uint64_t v50 = 32;
              uint64_t v51 = MEMORY[0x1E4FBC860];
              while (1)
              {
                long long v52 = *(_OWORD *)(v47 + v50 + 16);
                long long v158 = *(_OWORD *)(v47 + v50);
                long long v159 = v52;
                long long v53 = *(_OWORD *)(v47 + v50 + 32);
                long long v54 = *(_OWORD *)(v47 + v50 + 48);
                long long v55 = *(_OWORD *)(v47 + v50 + 80);
                long long v162 = *(_OWORD *)(v47 + v50 + 64);
                long long v163 = v55;
                long long v160 = v53;
                long long v161 = v54;
                long long v56 = *(_OWORD *)(v47 + v50 + 96);
                long long v57 = *(_OWORD *)(v47 + v50 + 112);
                long long v58 = *(_OWORD *)(v47 + v50 + 128);
                *(_OWORD *)((char *)v166 + 13) = *(_OWORD *)(v47 + v50 + 141);
                long long v165 = v57;
                v166[0] = v58;
                long long v164 = v56;
                if (HIBYTE(v57) == 1)
                {
                  sub_1DCD32CC8((uint64_t)&v158);
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v157 = v51;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    sub_1DCFC4A08(0, *(void *)(v51 + 16) + 1, 1);
                    uint64_t v51 = v157;
                  }
                  unint64_t v61 = *(void *)(v51 + 16);
                  unint64_t v60 = *(void *)(v51 + 24);
                  if (v61 >= v60 >> 1)
                  {
                    sub_1DCFC4A08(v60 > 1, v61 + 1, 1);
                    uint64_t v51 = v157;
                  }
                  *(void *)(v51 + 16) = v61 + 1;
                  uint64_t v62 = (_OWORD *)(v51 + 160 * v61);
                  long long v63 = v159;
                  v62[2] = v158;
                  v62[3] = v63;
                  long long v64 = v160;
                  long long v65 = v161;
                  long long v66 = v163;
                  v62[6] = v162;
                  v62[7] = v66;
                  v62[4] = v64;
                  v62[5] = v65;
                  long long v67 = v164;
                  long long v68 = v165;
                  long long v69 = v166[0];
                  *(_OWORD *)((char *)v62 + 173) = *(_OWORD *)((char *)v166 + 13);
                  v62[9] = v68;
                  v62[10] = v69;
                  v62[8] = v67;
                }
                if (!v49) {
                  break;
                }
                --v49;
                v50 += 160;
              }
              swift_bridgeObjectRelease();
              uint64_t v34 = v149;
              uint64_t v33 = v150;
              uint64_t v35 = v143;
            }
            else
            {
              swift_bridgeObjectRetain();
              uint64_t v51 = MEMORY[0x1E4FBC860];
            }
            *(void *)&long long v158 = v51;
            swift_retain();
            uint64_t v70 = v153;
            sub_1DCF23B0C((uint64_t *)&v158);
            a1 = v146;
            uint64_t v153 = v70;
            if (v70) {
              goto LABEL_59;
            }
            swift_release();
            if (*(void *)(v158 + 16))
            {
              uint64_t v71 = *(unsigned __int8 *)(v158 + 32);
              uint64_t v72 = swift_release();
              if (*(void *)(v33 + 16))
              {
                uint64_t v72 = sub_1DCEAD454(v71);
                uint64_t v73 = v153;
                uint64_t v74 = v148;
                if (v75)
                {
                  uint64_t v76 = (uint64_t *)(*(void *)(v33 + 56) + 40 * v72);
                  unint64_t v77 = v76[1];
                  uint64_t v142 = *v76;
                  unint64_t v147 = v77;
                  uint64_t v72 = swift_bridgeObjectRetain();
                }
                else
                {
                  uint64_t v142 = 0;
                  unint64_t v147 = 0xE000000000000000;
                }
              }
              else
              {
                uint64_t v142 = 0;
                unint64_t v147 = 0xE000000000000000;
                uint64_t v73 = v153;
                uint64_t v74 = v148;
              }
              MEMORY[0x1F4188790](v72);
              *((unsigned char *)&v129 - 16) = v71;
              *(&v129 - 1) = (uint64_t)v15;
              uint64_t v148 = sub_1DCD4418C((void (*)(uint64_t))sub_1DCEE77D4, (uint64_t)(&v129 - 4), v74);
              swift_bridgeObjectRelease();
              CGFloat v78 = *v15;
              uint64_t v79 = *((void *)v15 + 1);
              uint64_t v80 = *((void *)v15 + 2);
              uint64_t v81 = *((void *)v15 + 3);
              if (qword_1EBE87190 != -1) {
                swift_once();
              }
              uint64_t v153 = v73;
              if (byte_1EBE87188 != 1) {
                goto LABEL_45;
              }
              id v82 = objc_msgSend(self, sel_mainBundle);
              id v83 = objc_msgSend(v82, sel_bundleIdentifier);

              if (v83)
              {
                uint64_t v84 = sub_1DD048408();
                uint64_t v86 = v85;

                if (v84 == 0xD00000000000002BLL && v86 == v130)
                {
                  swift_bridgeObjectRelease();
LABEL_38:
                  uint64_t v88 = (uint64_t *)&off_1EAB02A48;
                  if (qword_1EAB01C28 != -1)
                  {
                    swift_once();
                    uint64_t v88 = (uint64_t *)&off_1EAB02A48;
                  }
LABEL_42:
                  uint64_t v89 = *(void **)(*v88 + 32);
                  swift_retain();
                  uint64_t v90 = (void *)sub_1DD0483D8();
                  LODWORD(v89) = objc_msgSend(v89, sel_BOOLForKey_, v90);
                  swift_release();

                  if (v89)
                  {
                    unint64_t v91 = qword_1EAB02B70;
                    unint64_t v92 = v147;
                    if (qword_1EAB01C80 != -1)
                    {
                      swift_once();
                      unint64_t v91 = qword_1EAB02B70;
                    }
LABEL_47:
                    uint64_t v93 = v141;
                    uint64_t v94 = __swift_project_value_buffer(v141, (uint64_t)v91);
                    (*v140)(v145, v94, v93);
                    sub_1DCEE77F8((uint64_t)v15, (uint64_t)v144, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
                    uint64_t v95 = v148;
                    swift_bridgeObjectRetain_n();
                    uint64_t v96 = v152;
                    swift_bridgeObjectRetain_n();
                    swift_bridgeObjectRetain_n();
                    unint64_t v97 = sub_1DD048048();
                    os_log_type_t v98 = sub_1DD048848();
                    int v137 = v98;
                    if (os_log_type_enabled(v97, v98))
                    {
                      uint64_t v99 = swift_slowAlloc();
                      uint64_t v100 = swift_slowAlloc();
                      os_log_t v132 = v97;
                      uint64_t v133 = v100;
                      uint64_t v157 = v100;
                      *(_DWORD *)uint64_t v99 = v135;
                      *(CGFloat *)&long long v158 = v78;
                      *((void *)&v158 + 1) = v79;
                      *(void *)&long long v159 = v80;
                      *((void *)&v159 + 1) = v81;
                      *(void *)&long long v160 = v95;
                      *((void *)&v160 + 1) = v96;
                      *(void *)&long long v161 = v142;
                      *((void *)&v161 + 1) = v92;
                      LOBYTE(v162) = 1;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      uint64_t v101 = sub_1DD048498();
                      *(void *)&long long v158 = sub_1DCED7FA0(v101, v102, &v157);
                      sub_1DD048A28();
                      swift_bridgeObjectRelease_n();
                      swift_bridgeObjectRelease_n();
                      swift_bridgeObjectRelease_n();
                      swift_bridgeObjectRelease();
                      *(_WORD *)(v99 + 12) = 2080;
                      uint64_t v103 = v144;
                      long long v104 = v144[1];
                      long long v158 = *v144;
                      long long v159 = v104;
                      uint64_t v105 = NormalizedRect.loggingDescription.getter();
                      *(void *)&long long v158 = sub_1DCED7FA0(v105, v106, &v157);
                      sub_1DD048A28();
                      swift_bridgeObjectRelease();
                      sub_1DCD96118((uint64_t)v103);
                      os_log_t v107 = v132;
                      _os_log_impl(&dword_1DCCF9000, v132, (os_log_type_t)v137, "Add result %s for %s", (uint8_t *)v99, 0x16u);
                      uint64_t v108 = v133;
                      swift_arrayDestroy();
                      MEMORY[0x1E01B07E0](v108, -1, -1);
                      uint64_t v109 = v99;
                      a1 = v146;
                      MEMORY[0x1E01B07E0](v109, -1, -1);

                      (*v139)(v145, v141);
                    }
                    else
                    {
                      swift_bridgeObjectRelease_n();
                      swift_bridgeObjectRelease_n();
                      swift_bridgeObjectRelease_n();
                      sub_1DCD96118((uint64_t)v144);

                      (*v139)(v145, v93);
                    }
                    uint64_t v110 = v151;
                    char v111 = swift_isUniquelyReferenced_nonNull_native();
                    uint64_t v34 = v149;
                    uint64_t v33 = v150;
                    uint64_t v35 = v143;
                    if ((v111 & 1) == 0) {
                      uint64_t v110 = sub_1DCEA0224(0, v110[2] + 1, 1, v110);
                    }
                    unint64_t v113 = v110[2];
                    unint64_t v112 = v110[3];
                    uint64_t v151 = v110;
                    if (v113 >= v112 >> 1) {
                      uint64_t v151 = sub_1DCEA0224((void *)(v112 > 1), v113 + 1, 1, v151);
                    }
                    unint64_t v114 = v151;
                    v151[2] = v113 + 1;
                    uint64_t v115 = (CGFloat *)&v114[9 * v113];
                    v115[4] = v78;
                    *((void *)v115 + 5) = v79;
                    *((void *)v115 + 6) = v80;
                    *((void *)v115 + 7) = v81;
                    uint64_t v116 = v152;
                    *((void *)v115 + 8) = v148;
                    *((void *)v115 + 9) = v116;
                    unint64_t v117 = v147;
                    *((void *)v115 + 10) = v142;
                    *((void *)v115 + 11) = v117;
                    *((unsigned char *)v115 + 96) = 1;
                    goto LABEL_4;
                  }
LABEL_45:
                  unint64_t v91 = qword_1EBE871A8;
                  unint64_t v92 = v147;
                  if (qword_1EBE871C8 != -1)
                  {
                    swift_once();
                    unint64_t v91 = qword_1EBE871A8;
                  }
                  goto LABEL_47;
                }
                char v87 = sub_1DD048FA8();
                swift_bridgeObjectRelease();
                if (v87) {
                  goto LABEL_38;
                }
              }
              uint64_t v88 = &qword_1EBE871E8;
              if (qword_1EBE871A0 != -1)
              {
                swift_once();
                uint64_t v88 = &qword_1EBE871E8;
              }
              goto LABEL_42;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
      }
    }
LABEL_4:
    ++v30;
    sub_1DCD96118((uint64_t)v15);
    if (v30 == v156)
    {
      swift_bridgeObjectRelease();
      a4 = v136;
      uint64_t v118 = v151;
      goto LABEL_57;
    }
  }
  __break(1u);
LABEL_59:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

float sub_1DCEE75AC@<S0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1DCF2316C();
  if (*(void *)(v5 + 16))
  {
    long long v6 = *(_OWORD *)(v5 + 144);
    long long v23 = *(_OWORD *)(v5 + 128);
    long long v24 = v6;
    v25[0] = *(_OWORD *)(v5 + 160);
    *(_OWORD *)((char *)v25 + 13) = *(_OWORD *)(v5 + 173);
    long long v7 = *(_OWORD *)(v5 + 80);
    v21[2] = *(_OWORD *)(v5 + 64);
    v21[3] = v7;
    long long v8 = *(_OWORD *)(v5 + 112);
    v21[4] = *(_OWORD *)(v5 + 96);
    long long v22 = v8;
    long long v9 = *(_OWORD *)(v5 + 48);
    v21[0] = *(_OWORD *)(v5 + 32);
    v21[1] = v9;
    sub_1DCD32CC8((uint64_t)v21);
    swift_bridgeObjectRelease();
    uint64_t v11 = *((void *)&v22 + 1);
    uint64_t v10 = v22;
    uint64_t v13 = *((void *)&v23 + 1);
    uint64_t v12 = v23;
    sub_1DCD32D4C(v22, *((uint64_t *)&v22 + 1));
    sub_1DCD32DD4((uint64_t)v21);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  uint64_t v14 = type metadata accessor for RegionSearchResult.ResultItem(0);
  uint64_t v15 = a3 + *(int *)(v14 + 28);
  sub_1DCEE77F8(a1, v15, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
  uint64_t v16 = type metadata accessor for ObjectKnowledge();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  float result = *(float *)(a1 + *(int *)(v16 + 64));
  *(unsigned char *)a3 = a2;
  *(void *)(a3 + 8) = v18;
  *(void *)(a3 + 16) = v19;
  *(void *)(a3 + 24) = v10;
  *(void *)(a3 + 32) = v11;
  *(void *)(a3 + 40) = v12;
  *(void *)(a3 + 48) = v13;
  *(float *)(a3 + *(int *)(v14 + 32)) = result;
  return result;
}

uint64_t type metadata accessor for ServerResultsProcessor()
{
  return self;
}

uint64_t sub_1DCEE776C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB028D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

float sub_1DCEE77D4@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCEE75AC(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_1DCEE77F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCEE7860(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  long long v6 = v5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for VisualUnderstanding.ImageRegion();
  double v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v19 + 48))(a1, 1, v16) == 1)
  {
    sub_1DCD2479C(a1, &qword_1EBE855F0);
    sub_1DCE904A0((uint64_t)v14, a2, a3, a4, a5);
    return sub_1DCD2479C((uint64_t)v14, &qword_1EBE855F0);
  }
  else
  {
    sub_1DCEF02AC(a1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v6;
    *long long v6 = 0x8000000000000000;
    sub_1DCE857A0((uint64_t)v18, isUniquelyReferenced_nonNull_native, a2, a3, a4, a5);
    *long long v6 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DCEE7A3C(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03E38);
  MEMORY[0x1F4188790](v6 - 8);
  long long v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StorefrontSignals(0);
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1DCD2479C(a1, &qword_1EAB03E38);
    unint64_t v14 = sub_1DCEAFD4C(a2);
    if (v15)
    {
      unint64_t v16 = v14;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v18 = *v3;
      uint64_t v22 = *v3;
      *int v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1DCE899DC();
        uint64_t v18 = v22;
      }
      sub_1DCEF02AC(*(void *)(v18 + 56) + *(void *)(v10 + 72) * v16, (uint64_t)v8, type metadata accessor for StorefrontSignals);
      sub_1DCFDCDFC(v16, v18);
      *int v3 = v18;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_1DCD2479C((uint64_t)v8, &qword_1EAB03E38);
  }
  else
  {
    sub_1DCEF02AC(a1, (uint64_t)v13, type metadata accessor for StorefrontSignals);
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1DCE85C08((uint64_t)v13, a2, v19);
    *int v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1DCEE7C9C(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v6 - 8);
  long long v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DD046478();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1DCD2479C(a1, &qword_1EBE848E0);
    sub_1DCE9063C(a2, (uint64_t)v8);
    return sub_1DCD2479C((uint64_t)v8, &qword_1EBE848E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    *int v3 = 0x8000000000000000;
    sub_1DCE861BC((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *int v3 = v17;
    return swift_bridgeObjectRelease();
  }
}

void sub_1DCEE7E58(void *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026D8);
  v5.n128_f64[0] = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  unint64_t v8 = v1[1];
  unint64_t v10 = *(void *)(*v1 + 16);
  if (v8 == v10)
  {
    double v11 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
    v11(a1, 1, 1, v3, v5);
  }
  else
  {
    if (v8 >= v10)
    {
      __break(1u);
    }
    else
    {
      uint64_t v18 = v4;
      uint64_t v12 = *(void *)(type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0) - 8);
      uint64_t v13 = v9
          + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
          + *(void *)(v12 + 72) * v8;
      v1[1] = v8 + 1;
      uint64_t v14 = (uint64_t)&v7[*(int *)(v3 + 48)];
      uint64_t v15 = v1[2];
      sub_1DCEEC33C(v13, v14, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      if (!__OFADD__(v15, 1))
      {
        v1[2] = v15 + 1;
        uint64_t v16 = (uint64_t)a1 + *(int *)(v3 + 48);
        *a1 = v15;
        sub_1DCEF02AC(v14, v16, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v3);
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DCEE8050(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DCD74380(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1DCEEC3A4(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_1DCEE80BC@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1DCEF2144(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCEE80E8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1DCEF20F0();
  unint64_t v5 = sub_1DCD678E0();
  return MEMORY[0x1F4185E20](a1, a2, v4, v5);
}

void sub_1DCEE8140()
{
  qword_1EAB03E20 = (uint64_t)&unk_1F38406A0;
}

uint64_t sub_1DCEE8154()
{
  uint64_t v2 = v0;
  uint64_t v41 = sub_1DD048068();
  uint64_t v42 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  unint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v38 - v6;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)v38 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v38 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v38 - v15;
  MEMORY[0x1F4188790](v17);
  char v19 = (char *)v38 - v18;
  *(_OWORD *)(v0 + 64) = xmmword_1DD05B850;
  type metadata accessor for EncryptedSearchLTR();
  sub_1DCFE9AE0(objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_init));
  if (v1)
  {

    sub_1DCDB40EC((uint64_t)v19);
    uint64_t v21 = sub_1DD048048();
    os_log_type_t v22 = sub_1DD048858();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1DCCF9000, v21, v22, "Error: Unable to load reranker model: LTR", v23, 2u);
      MEMORY[0x1E01B07E0](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v41);
    sub_1DCDE6F94();
    swift_allocError();
    *long long v24 = 0;
    swift_willThrow();
    uint64_t v25 = v2;
    type metadata accessor for Reranker();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v38[4] = v13;
    CGFloat v39 = v16;
    v38[2] = v7;
    v38[3] = v10;
    v38[1] = v4;
    *(void *)(v0 + 16) = v20;
    uint64_t v26 = v20;
    type metadata accessor for OCRTitleModel();
    id v27 = objc_allocWithZone(MEMORY[0x1E4F1E990]);
    uint64_t v40 = v26;
    swift_retain();
    sub_1DCFE93FC(objc_msgSend(v27, sel_init));
    uint64_t v29 = v28;
    *(void *)(v0 + 24) = v28;
    type metadata accessor for OCRAddressModel();
    id v30 = objc_allocWithZone(MEMORY[0x1E4F1E990]);
    CGFloat v39 = v29;
    swift_retain();
    sub_1DCFEA9B4(objc_msgSend(v30, sel_init));
    uint64_t v25 = v0;
    *(void *)(v0 + 32) = v31;
    type metadata accessor for StorefrontLabelMapper();
    swift_allocObject();
    swift_retain();
    *(void *)(v0 + 40) = sub_1DCDE6080();
    type metadata accessor for CategoryClassificationModel();
    id v32 = objc_allocWithZone(MEMORY[0x1E4F1E990]);
    swift_retain();
    sub_1DCFEB094(objc_msgSend(v32, sel_init));
    *(void *)(v0 + 48) = v33;
    type metadata accessor for TitleClassificationModel();
    id v34 = objc_allocWithZone(MEMORY[0x1E4F1E990]);
    swift_retain();
    sub_1DCFEA2DC(objc_msgSend(v34, (SEL)&selRef__cachedEventsForBundleID_));
    uint64_t v37 = v36;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(void *)(v0 + 56) = v37;
  }
  return v25;
}

void (*sub_1DCEE8A90(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1DCEECD24(v6, a2, a3);
  return sub_1DCEE8B10;
}

void sub_1DCEE8B10(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

void (*sub_1DCEE8B64(void *a1, uint64_t a2))(void *a1)
{
  unint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1DCEECE44(v4, a2);
  return sub_1DCEE8BC4;
}

void sub_1DCEE8BC4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);
  free(v1);
}

unint64_t sub_1DCEE8C10(uint64_t *a1, uint64_t a2, void *a3)
{
  v219 = a3;
  os_log_type_t v195 = a1;
  uint64_t v4 = sub_1DD048068();
  uint64_t v200 = *(void *)(v4 - 8);
  uint64_t v201 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v199 = (uint64_t)&v189 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v189 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v205 = (uint64_t)&v189 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026E0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v197 = (uint64_t *)((char *)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  int v196 = (unint64_t *)((char *)&v189 - v14);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03E38);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v206 = (uint64_t *)((char *)&v189 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v209 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  uint64_t v211 = *(void **)(v209 - 8);
  MEMORY[0x1F4188790](v209);
  uint64_t v203 = (uint64_t)&v189 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v207 = (char *)&v189 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v20 - 8);
  os_log_type_t v22 = (double *)((char *)&v189 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v24 = *(double *)a2;
  uint64_t v23 = *(void **)(a2 + 8);
  double v217 = *(double *)(a2 + 16);
  double v218 = *(double *)&v23;
  uint64_t v25 = *(void **)(a2 + 24);
  uint64_t v26 = *(void *)(a2 + 32);
  uint64_t i = *(void **)(a2 + 40);
  double v216 = *(double *)&v25;
  uint64_t v214 = *(void *)(a2 + 48);
  uint64_t v27 = *(void *)(a2 + 56);
  uint64_t v212 = *(void *)(a2 + 64);
  *(void *)&long long v213 = v27;
  unint64_t v239 = sub_1DCDBC724(MEMORY[0x1E4FBC860]);
  if (!*(void *)(*(void *)&v24 + 16)
    || (uint64_t v28 = type metadata accessor for VisualUnderstanding.ImageRegion(),
        unint64_t v29 = (*(unsigned __int8 *)(*(void *)(v28 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v28 - 8) + 80),
        uint64_t v30 = *(void *)(*(void *)&v24 + v29 + 112),
        !*(void *)(v30 + 16))
    || (uint64_t v31 = *(void *)(v30 + 64), !*(void *)(v31 + 16)))
  {
    swift_bridgeObjectRelease();
    sub_1DCDB40EC((uint64_t)v8);
    uint64_t v42 = sub_1DD048048();
    os_log_type_t v43 = sub_1DD048858();
    if (os_log_type_enabled(v42, v43))
    {
      unint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v44 = 0;
      _os_log_impl(&dword_1DCCF9000, v42, v43, "Error: Unable to get query embedding", v44, 2u);
      MEMORY[0x1E01B07E0](v44, -1, -1);
    }

    uint64_t v45 = v200;
    uint64_t v46 = *(void (**)(char *, uint64_t))(v200 + 8);
    uint64_t v47 = v8;
LABEL_13:
    uint64_t v48 = v201;
    v46(v47, v201);
    sub_1DCDE6F94();
    uint64_t v49 = (void *)swift_allocError();
    *uint64_t v50 = 4;
    swift_willThrow();
LABEL_14:
    uint64_t v51 = v199;
    sub_1DCDB40EC(v199);
    long long v52 = sub_1DD048048();
    os_log_type_t v53 = sub_1DD048858();
    if (os_log_type_enabled(v52, v53))
    {
      long long v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v54 = 0;
      _os_log_impl(&dword_1DCCF9000, v52, v53, "Error: Failed to create storefront signal", v54, 2u);
      MEMORY[0x1E01B07E0](v54, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v51, v48);
    unint64_t v55 = sub_1DCDBC724(MEMORY[0x1E4FBC860]);

    return v55;
  }
  uint64_t v32 = *(void *)(v28 - 8);
  uint64_t v33 = v28;
  uint64_t v34 = *(void *)(v31 + 32);
  uint64_t v210 = MEMORY[0x1E4FBC860];
  if (*(void *)&v218 != 1 && v26)
  {
    swift_bridgeObjectRetain();
    uint64_t v210 = v26;
  }
  if (!v219)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v57 = v205;
    sub_1DCDB40EC(v205);
    long long v58 = sub_1DD048048();
    os_log_type_t v59 = sub_1DD048858();
    if (os_log_type_enabled(v58, v59))
    {
      unint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v60 = 0;
      _os_log_impl(&dword_1DCCF9000, v58, v59, "Error: Unable to get query embedding", v60, 2u);
      MEMORY[0x1E01B07E0](v60, -1, -1);
    }

    uint64_t v45 = v200;
    uint64_t v46 = *(void (**)(char *, uint64_t))(v200 + 8);
    uint64_t v47 = (char *)v57;
    goto LABEL_13;
  }
  long long v35 = *(_OWORD *)(a2 + 104);
  long long v235 = *(_OWORD *)(a2 + 120);
  long long v36 = *(_OWORD *)(a2 + 152);
  long long v236 = *(_OWORD *)(a2 + 136);
  long long v237 = v36;
  long long v238 = *(_OWORD *)(a2 + 168);
  long long v37 = *(_OWORD *)(a2 + 88);
  long long v232 = *(_OWORD *)(a2 + 72);
  long long v233 = v37;
  CGFloat v223 = v24;
  double v224 = v218;
  CGFloat v225 = v217;
  CGFloat v226 = v216;
  uint64_t v227 = v26;
  unint64_t v228 = i;
  uint64_t v229 = v214;
  uint64_t v230 = v213;
  uint64_t v231 = v212;
  long long v234 = v35;
  uint64_t v193 = v34;
  swift_bridgeObjectRetain();
  unint64_t v192 = v219;
  uint64_t v38 = VisualUnderstanding.imageRegions.getter();
  if (*(void *)(v38 + 16))
  {
    sub_1DCEEC33C(v38 + v29, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    CGFloat v39 = *(void (**)(double *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    uint64_t v40 = v22;
    uint64_t v41 = 0;
  }
  else
  {
    CGFloat v39 = *(void (**)(double *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    uint64_t v40 = v22;
    uint64_t v41 = 1;
  }
  uint64_t v61 = v33;
  v39(v40, v41, 1, v33);
  uint64_t v62 = v208;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(v32 + 48))(v22, 1, v61) == 1)
  {
    sub_1DCD2479C((uint64_t)v22, &qword_1EBE855F0);
    v240.origin.double x = 0.0;
    v240.origin.double y = 0.0;
    v240.size.double width = 1.0;
    v240.size.double height = 1.0;
    CGFloat MinX = CGRectGetMinX(v240);
    v241.origin.double x = 0.0;
    v241.origin.double y = 0.0;
    v241.size.double width = 1.0;
    v241.size.double height = 1.0;
    double v64 = 1.0 - CGRectGetMaxY(v241);
    v242.origin.double x = 0.0;
    v242.origin.double y = 0.0;
    v242.size.double width = 1.0;
    v242.size.double height = 1.0;
    CGFloat Width = CGRectGetWidth(v242);
    v243.origin.double x = 0.0;
    v243.origin.double y = 0.0;
    v243.size.double width = 1.0;
    v243.size.double height = 1.0;
    CGFloat Height = CGRectGetHeight(v243);
  }
  else
  {
    CGFloat MinX = *v22;
    double v64 = v22[1];
    CGFloat Width = v22[2];
    CGFloat Height = v22[3];
    sub_1DCEEC2DC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  }
  swift_retain_n();
  long long v67 = v195;
  long long v68 = v192;
  uint64_t v194 = sub_1DCD69828(v195, v192);
  long long v69 = (void *)sub_1DCD69FF0(v67, v68);
  uint64_t v70 = *v67;
  uint64_t v71 = *(void **)(*v67 + 16);
  if (v71)
  {
    uint64_t v190 = *v67;
    uint64_t v191 = v69;
    uint64_t v72 = *(void *)(v210 + 16);
    uint64_t v214 = v62[5];
    uint64_t v73 = v70 + ((*((unsigned __int8 *)v211 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v211 + 80));
    unint64_t v204 = (void *)v211[9];
    uint64_t v205 = v72;
    swift_bridgeObjectRetain();
    uint64_t v74 = (void *)MEMORY[0x1E4FBC860];
    long long v213 = xmmword_1DD04E910;
    uint64_t v202 = 0x80000001DD06DD70;
    double v218 = MEMORY[0x1E4FBC860];
    v219 = (void *)MEMORY[0x1E4FBC860];
    char v75 = (void *)MEMORY[0x1E4FBC860];
    double v216 = MEMORY[0x1E4FBC860];
    double v217 = MEMORY[0x1E4FBC860];
    uint64_t v76 = (uint64_t)v207;
    while (1)
    {
      uint64_t v211 = v71;
      uint64_t v212 = v73;
      uint64_t i = v74;
      sub_1DCEEC33C(v73, v76, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      uint64_t v78 = *(void *)(v76 + *(int *)(v209 + 20));
      swift_beginAccess();
      uint64_t v79 = *(void *)(v78 + 16);
      uint64_t v80 = v76;
      uint64_t v81 = (uint64_t)v206;
      sub_1DCEEC33C(v80, (uint64_t)v206, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      uint64_t v82 = type metadata accessor for StorefrontSignals(0);
      *(void *)(v81 + *(int *)(v82 + 20)) = 0;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 0, 1, v82);
      sub_1DCEE7A3C(v81, v79);
      id v83 = (uint64_t *)(v78
                      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefName);
      swift_beginAccess();
      uint64_t v84 = sub_1DD048488();
      uint64_t v86 = v85;
      uint64_t v87 = *(void *)(v214 + 32);
      if (!*(void *)(v87 + 16)) {
        goto LABEL_34;
      }
      uint64_t v88 = v84;
      swift_bridgeObjectRetain();
      unint64_t v89 = sub_1DCEAD1A4(v88, v86);
      if ((v90 & 1) == 0) {
        break;
      }
      uint64_t v91 = *(void *)(*(void *)(v87 + 56) + 8 * v89);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v92 = 1.0;
      if (v91 < 0) {
        goto LABEL_35;
      }
LABEL_36:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v75 = sub_1DCE9EF0C(0, v75[2] + 1, 1, v75);
      }
      double v93 = v217;
      unint64_t v95 = v75[2];
      unint64_t v94 = v75[3];
      if (v95 >= v94 >> 1) {
        char v75 = sub_1DCE9EF0C((void *)(v94 > 1), v95 + 1, 1, v75);
      }
      _OWORD v75[2] = v95 + 1;
      *(double *)&v75[v95 + 4] = v92;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v213;
      unint64_t v97 = (void *)(v78
                     + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefCategoryID);
      swift_beginAccess();
      uint64_t v98 = v97[1];
      *(void *)(inited + 32) = *v97;
      *(void *)(inited + 40) = v98;
      swift_bridgeObjectRetain();
      double v99 = sub_1DCE791F8(inited, v214);
      swift_setDeallocating();
      swift_arrayDestroy();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v93 = COERCE_DOUBLE(sub_1DCE9EF0C(0, *(void *)(*(void *)&v93 + 16) + 1, 1, *(void **)&v93));
      }
      unint64_t v101 = *(void *)(*(void *)&v93 + 16);
      unint64_t v100 = *(void *)(*(void *)&v93 + 24);
      unint64_t v102 = v75;
      if (v101 >= v100 >> 1) {
        double v93 = COERCE_DOUBLE(sub_1DCE9EF0C((void *)(v100 > 1), v101 + 1, 1, *(void **)&v93));
      }
      *(void *)(*(void *)&v93 + 16) = v101 + 1;
      *(double *)(*(void *)&v93 + 8 * v101 + 32) = v99;
      uint64_t v103 = sub_1DD048488();
      uint64_t v105 = v104;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      double v217 = v93;
      if (isUniquelyReferenced_nonNull_native) {
        double v107 = v218;
      }
      else {
        double v107 = COERCE_DOUBLE(sub_1DCE9E328(0, *(void *)(*(void *)&v218 + 16) + 1, 1, *(void **)&v218));
      }
      unint64_t v109 = *(void *)(*(void *)&v107 + 16);
      unint64_t v108 = *(void *)(*(void *)&v107 + 24);
      if (v109 >= v108 >> 1) {
        double v107 = COERCE_DOUBLE(sub_1DCE9E328((void *)(v108 > 1), v109 + 1, 1, *(void **)&v107));
      }
      *(void *)(*(void *)&v107 + 16) = v109 + 1;
      double v218 = v107;
      uint64_t v110 = (void *)(*(void *)&v107 + 16 * v109);
      v110[4] = v103;
      _OWORD v110[5] = v105;
      uint64_t v111 = swift_allocObject();
      *(_OWORD *)(v111 + 16) = v213;
      uint64_t v112 = v97[1];
      *(void *)(v111 + 32) = *v97;
      *(void *)(v111 + 40) = v112;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v219 = sub_1DCE9F174(0, v219[2] + 1, 1, v219);
      }
      uint64_t v74 = i;
      char v75 = v102;
      unint64_t v114 = v219[2];
      unint64_t v113 = v219[3];
      uint64_t v76 = (uint64_t)v207;
      uint64_t v62 = v208;
      if (v114 >= v113 >> 1) {
        v219 = sub_1DCE9F174((void *)(v113 > 1), v114 + 1, 1, v219);
      }
      uint64_t v115 = v219;
      v219[2] = v114 + 1;
      v115[v114 + 4] = v111;
      if (v205)
      {
        uint64_t v117 = *v83;
        unint64_t v116 = v83[1];
        CGFloat v223 = MinX;
        double v224 = v64;
        CGFloat v225 = Width;
        CGFloat v226 = Height;
        swift_bridgeObjectRetain();
        sub_1DCE792B0(v117, v116, &v223, v210, 10, 2);
        uint64_t v119 = v118;
        swift_bridgeObjectRelease();
        if (qword_1EAB01F18 != -1) {
          swift_once();
        }
        uint64_t v120 = (void *)qword_1EAB03B70;
        swift_retain();
        swift_bridgeObjectRetain();
        unint64_t v121 = sub_1DCE7A0F8(0x616D5F656C746974, 0xEF72636F5F686374, v120, v119, 3, (uint64_t)v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v74 = sub_1DCE9F14C(0, v74[2] + 1, 1, v74);
        }
        unint64_t v77 = v211;
        unint64_t v123 = v74[2];
        unint64_t v122 = v74[3];
        if (v123 >= v122 >> 1) {
          uint64_t v74 = sub_1DCE9F14C((void *)(v122 > 1), v123 + 1, 1, v74);
        }
        v74[2] = v123 + 1;
        v74[v123 + 4] = v121;
        uint64_t v124 = sub_1DCE7A768(v76);
        CGFloat v223 = MinX;
        double v224 = v64;
        CGFloat v225 = Width;
        CGFloat v226 = Height;
        sub_1DCE792B0(v124, v125, &v223, v210, 10, 2);
        uint64_t v127 = v126;
        swift_bridgeObjectRelease();
        uint64_t v128 = (void *)qword_1EAB03B70;
        swift_retain();
        swift_bridgeObjectRetain();
        unint64_t v129 = sub_1DCE7B308(0xD000000000000011, v202, v128, v127, 3, (uint64_t)v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v216 = COERCE_DOUBLE(sub_1DCE9F14C(0, *(void *)(*(void *)&v216 + 16) + 1, 1, *(void **)&v216));
        }
        unint64_t v131 = *(void *)(*(void *)&v216 + 16);
        unint64_t v130 = *(void *)(*(void *)&v216 + 24);
        if (v131 >= v130 >> 1) {
          double v216 = COERCE_DOUBLE(sub_1DCE9F14C((void *)(v130 > 1), v131 + 1, 1, *(void **)&v216));
        }
        double v132 = v216;
        *(void *)(*(void *)&v216 + 16) = v131 + 1;
        *(void *)(*(void *)&v132 + 8 * v131 + 32) = v129;
      }
      else
      {
        unint64_t v77 = v211;
      }
      sub_1DCEEC2DC(v76, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      uint64_t v73 = (uint64_t)v204 + v212;
      uint64_t v71 = (void *)((char *)v77 - 1);
      if (!v71)
      {
        swift_bridgeObjectRelease();
        long long v69 = v191;
        double v133 = v218;
        goto LABEL_67;
      }
    }
    swift_bridgeObjectRelease();
LABEL_34:
    swift_bridgeObjectRelease();
LABEL_35:
    double v92 = 0.0;
    goto LABEL_36;
  }
  double v133 = MEMORY[0x1E4FBC860];
  v219 = (void *)MEMORY[0x1E4FBC860];
  char v75 = (void *)MEMORY[0x1E4FBC860];
  double v216 = MEMORY[0x1E4FBC860];
  double v217 = MEMORY[0x1E4FBC860];
  uint64_t v74 = (void *)MEMORY[0x1E4FBC860];
LABEL_67:
  uint64_t v134 = v62[5];
  uint64_t v135 = v193;
  sub_1DCE7BAC4(*(uint64_t *)&v133, v193, v134, v62[7], 1);
  uint64_t v137 = v136;
  swift_bridgeObjectRelease();
  unint64_t v138 = v62[6];
  if (qword_1EAB01F58 != -1) {
LABEL_135:
  }
    swift_once();
  sub_1DCE7C714((uint64_t)v219, v135, v134, v138, qword_1EAB03E20, 1);
  uint64_t v140 = v139;
  uint64_t v142 = v141;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v143 = *v195;
  uint64_t v221 = 0;
  uint64_t v222 = 0;
  long long v144 = v69;
  uint64_t v211 = v69 + 4;
  uint64_t v212 = v194 + 32;
  double v218 = *(double *)&v140;
  v219 = (void *)v137;
  uint64_t v206 = v140 + 4;
  uint64_t v207 = (char *)(v137 + 32);
  uint64_t v214 = v142;
  uint64_t v220 = v143;
  *(void *)&long long v213 = v75;
  unint64_t v204 = v75 + 4;
  uint64_t v205 = v142 + 32;
  char v75 = (void *)(*(void *)&v217 + 32);
  uint64_t v135 = (uint64_t)(v74 + 4);
  long long v69 = (void *)(*(void *)&v216 + 32);
  swift_bridgeObjectRetain();
  uint64_t v202 = 0x80000001DD06DD90;
  os_log_type_t v195 = (uint64_t *)0x80000001DD06DDB0;
  uint64_t v193 = 0x80000001DD06DDD0;
  uint64_t v190 = 0x80000001DD06DE10;
  uint64_t v191 = (void *)0x80000001DD06DDF0;
  uint64_t v189 = 0x80000001DD06DE30;
  for (i = v74; ; uint64_t v74 = i)
  {
    uint64_t v145 = v197;
    sub_1DCEE7E58(v197);
    uint64_t v146 = (uint64_t)v145;
    unint64_t v147 = v196;
    sub_1DCD43B04(v146, (uint64_t)v196, &qword_1EAB026E0);
    uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026D8);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(*(void *)(v134 - 8) + 48))(v147, 1, v134) == 1)break; {
    uint64_t v148 = v147;
    }
    unint64_t v138 = *v147;
    sub_1DCEF02AC((uint64_t)v148 + *(int *)(v134 + 48), v203, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    uint64_t v149 = sub_1DD0486F8();
    *(void *)(v149 + 16) = 53;
    *(_OWORD *)(v149 + 32) = 0u;
    *(_OWORD *)(v149 + 48) = 0u;
    *(_OWORD *)(v149 + 64) = 0u;
    *(_OWORD *)(v149 + 80) = 0u;
    *(_OWORD *)(v149 + 96) = 0u;
    *(_OWORD *)(v149 + 112) = 0u;
    *(_OWORD *)(v149 + 128) = 0u;
    *(_OWORD *)(v149 + 144) = 0u;
    *(_OWORD *)(v149 + 160) = 0u;
    *(_OWORD *)(v149 + 176) = 0u;
    *(_OWORD *)(v149 + 192) = 0u;
    *(_OWORD *)(v149 + 208) = 0u;
    *(_OWORD *)(v149 + 224) = 0u;
    *(_DWORD *)(v149 + 240) = 0;
    if ((v138 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    if (v138 >= *(void *)(v194 + 16)) {
      goto LABEL_116;
    }
    float v150 = *(double *)(v212 + 8 * v138);
    *(float *)(v149 + 32) = v150;
    if (v138 >= v144[2]) {
      goto LABEL_117;
    }
    uint64_t v137 = v149;
    float v151 = *(double *)&v211[v138];
    *(float *)(v149 + 36) = v151;
    if (v138 >= v219[2]) {
      goto LABEL_118;
    }
    float v152 = *(double *)&v207[8 * v138];
    *(float *)(v149 + 40) = v152;
    if (v138 >= *(void *)(*(void *)&v218 + 16)) {
      goto LABEL_119;
    }
    float v153 = *(double *)&v206[v138];
    *(float *)(v149 + 44) = v153;
    if (v138 >= *(void *)(v214 + 16)) {
      goto LABEL_120;
    }
    float v154 = *(double *)(v205 + 8 * v138);
    *(float *)(v149 + 48) = v154;
    if (v138 >= *(void *)(v213 + 16)) {
      goto LABEL_121;
    }
    float v155 = *(double *)&v204[v138];
    *(float *)(v149 + 52) = v155;
    if (v138 >= *(void *)(*(void *)&v217 + 16)) {
      goto LABEL_122;
    }
    float v156 = *(double *)&v75[v138];
    *(float *)(v149 + 56) = v156;
    if (*(void *)(v210 + 16))
    {
      if (v138 >= v74[2]) {
        goto LABEL_123;
      }
      uint64_t v134 = *(void *)(v135 + 8 * v138);
      if (!*(void *)(v134 + 16)) {
        goto LABEL_111;
      }
      swift_bridgeObjectRetain();
      unint64_t v157 = sub_1DCEAD1A4(0xD000000000000011, v202);
      if ((v158 & 1) == 0) {
        goto LABEL_110;
      }
      double v159 = *(double *)(*(void *)(v134 + 56) + 8 * v157);
      swift_bridgeObjectRelease();
      if (*(void *)(v137 + 16) < 8uLL) {
        goto LABEL_124;
      }
      float v160 = v159;
      *(float *)(v137 + 60) = v160;
      if (v138 >= v74[2]) {
        goto LABEL_125;
      }
      uint64_t v134 = *(void *)(v135 + 8 * v138);
      if (!*(void *)(v134 + 16)) {
        goto LABEL_111;
      }
      swift_bridgeObjectRetain();
      unint64_t v161 = sub_1DCEAD1A4(0xD000000000000011, (uint64_t)v195);
      if ((v162 & 1) == 0) {
        goto LABEL_110;
      }
      double v163 = *(double *)(*(void *)(v134 + 56) + 8 * v161);
      swift_bridgeObjectRelease();
      if (*(void *)(v137 + 16) < 9uLL) {
        goto LABEL_126;
      }
      float v164 = v163;
      *(float *)(v137 + 64) = v164;
      if (v138 >= v74[2]) {
        goto LABEL_127;
      }
      uint64_t v134 = *(void *)(v135 + 8 * v138);
      if (!*(void *)(v134 + 16)) {
        goto LABEL_111;
      }
      swift_bridgeObjectRetain();
      unint64_t v165 = sub_1DCEAD1A4(0xD000000000000011, v193);
      if ((v166 & 1) == 0) {
        goto LABEL_110;
      }
      double v167 = *(double *)(*(void *)(v134 + 56) + 8 * v165);
      swift_bridgeObjectRelease();
      if (*(void *)(v137 + 16) < 0xAuLL) {
        goto LABEL_128;
      }
      float v168 = v167;
      *(float *)(v137 + 68) = v168;
      if (v138 >= *(void *)(*(void *)&v216 + 16)) {
        goto LABEL_129;
      }
      uint64_t v134 = v69[v138];
      if (!*(void *)(v134 + 16)) {
        goto LABEL_111;
      }
      swift_bridgeObjectRetain();
      unint64_t v169 = sub_1DCEAD1A4(0xD000000000000013, (uint64_t)v191);
      if ((v170 & 1) == 0) {
        goto LABEL_110;
      }
      double v171 = *(double *)(*(void *)(v134 + 56) + 8 * v169);
      swift_bridgeObjectRelease();
      if (*(void *)(v137 + 16) < 0xBuLL) {
        goto LABEL_130;
      }
      float v172 = v171;
      *(float *)(v137 + 72) = v172;
      if (v138 >= *(void *)(*(void *)&v216 + 16)) {
        goto LABEL_131;
      }
      uint64_t v134 = v69[v138];
      if (!*(void *)(v134 + 16)) {
        goto LABEL_111;
      }
      swift_bridgeObjectRetain();
      unint64_t v173 = sub_1DCEAD1A4(0xD000000000000013, v190);
      if ((v174 & 1) == 0) {
        goto LABEL_110;
      }
      double v175 = *(double *)(*(void *)(v134 + 56) + 8 * v173);
      swift_bridgeObjectRelease();
      if (*(void *)(v137 + 16) < 0xCuLL) {
        goto LABEL_132;
      }
      float v176 = v175;
      *(float *)(v137 + 76) = v176;
      if (v138 >= *(void *)(*(void *)&v216 + 16)) {
        goto LABEL_133;
      }
      uint64_t v134 = v69[v138];
      if (!*(void *)(v134 + 16)) {
        goto LABEL_111;
      }
      swift_bridgeObjectRetain();
      unint64_t v177 = sub_1DCEAD1A4(0xD000000000000013, v189);
      if ((v178 & 1) == 0)
      {
LABEL_110:
        swift_bridgeObjectRelease();
LABEL_111:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DCDE6F94();
        uint64_t v49 = (void *)swift_allocError();
        *uint64_t v188 = 4;
        swift_willThrow();

        sub_1DCEEC2DC(v203, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
LABEL_112:
        uint64_t v45 = v200;
        uint64_t v48 = v201;
        goto LABEL_14;
      }
      double v179 = *(double *)(*(void *)(v134 + 56) + 8 * v177);
      swift_bridgeObjectRelease();
      if (*(void *)(v137 + 16) < 0xDuLL) {
        goto LABEL_134;
      }
      float v180 = v179;
      *(float *)(v137 + 80) = v180;
    }
    else
    {
      *(void *)(v149 + 68) = 0;
      *(void *)(v149 + 60) = 0;
      *(void *)(v149 + 76) = 0;
    }
    uint64_t v181 = v198;
    sub_1DCEEE640(v137, 0, 13);
    uint64_t v198 = v181;
    if (v181)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1DCEEC2DC(v203, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v49 = v198;
      goto LABEL_112;
    }
    uint64_t v183 = v182;
    swift_bridgeObjectRelease();
    uint64_t v184 = *(void *)(v203 + *(int *)(v209 + 20));
    swift_beginAccess();
    uint64_t v185 = sub_1DCEE8B64(&v223, *(void *)(v184 + 16));
    uint64_t v137 = v186;
    uint64_t v187 = type metadata accessor for StorefrontSignals(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v187 - 8) + 48))(v137, 1, v187))
    {
      *(void *)(v137 + *(int *)(v187 + 20)) = v183;
      swift_retain();
      swift_release();
    }
    ((void (*)(CGFloat *, void))v185)(&v223, 0);
    swift_release();
    sub_1DCEEC2DC(v203, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unint64_t v55 = v239;
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v55;
}

void sub_1DCEEA3C0(uint64_t a1)
{
  v27[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1DD048068();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v7 = *(void *)(v1 + 16);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E9E0]), sel_init);
  uint64_t v9 = *(void **)(v7 + 16);
  v27[0] = 0;
  id v10 = objc_msgSend(v9, sel_predictionFromFeatures_options_error_, a1, v8, v27);
  id v11 = v27[0];
  if (v10)
  {
    uint64_t v12 = v10;
    type metadata accessor for EncryptedSearchLTROutput();
    *(void *)(swift_initStackObject() + 16) = v12;
    id v13 = v11;

    uint64_t v14 = (void *)sub_1DD0483D8();
    id v15 = objc_msgSend(v12, sel_featureValueForName_, v14);

    if (v15)
    {
      id v16 = objc_msgSend(v15, sel_multiArrayValue);

      if (v16)
      {
        id v17 = objc_msgSend(v16, sel_objectAtIndexedSubscript_, 0);

        objc_msgSend(v17, sel_doubleValue);
        double v19 = v18;
        swift_release();

        exp(-v19);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    id v20 = v27[0];
    uint64_t v21 = (void *)sub_1DD046378();

    swift_willThrow();
    sub_1DCDB40EC((uint64_t)v6);
    os_log_type_t v22 = sub_1DD048048();
    os_log_type_t v23 = sub_1DD048858();
    if (os_log_type_enabled(v22, v23))
    {
      double v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v24 = 0;
      _os_log_impl(&dword_1DCCF9000, v22, v23, "Error: LTR inference failed", v24, 2u);
      MEMORY[0x1E01B07E0](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1DCDE6F94();
    swift_allocError();
    *uint64_t v25 = 3;
    swift_willThrow();
  }
}

uint64_t sub_1DCEEA6E0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v118 = a3;
  uint64_t v112 = a4;
  uint64_t v6 = sub_1DD048068();
  uint64_t v110 = *(void *)(v6 - 8);
  uint64_t v111 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v113 = (uint64_t)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v104 - v12;
  uint64_t v107 = type metadata accessor for LandmarkSignals(0);
  uint64_t v14 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  id v16 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  double v19 = (char *)&v104 - v18;
  MEMORY[0x1F4188790](v20);
  unint64_t v106 = (char *)&v104 - v21;
  uint64_t v22 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  MEMORY[0x1F4188790](v22);
  double v24 = (char **)((char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = v119;
  uint64_t v26 = sub_1DCEEE980(a1, a2, v118);
  if (v25)
  {
    uint64_t v27 = v25;
LABEL_3:
    uint64_t v119 = 0;
    uint64_t v28 = v113;
    sub_1DCDB40EC(v113);
    id v29 = v27;
    id v30 = v27;
    uint64_t v31 = sub_1DD048048();
    os_log_type_t v32 = sub_1DD048858();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 138412290;
      id v35 = v27;
      uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v120 = v36;
      sub_1DD048A28();
      *uint64_t v34 = v36;

      _os_log_impl(&dword_1DCCF9000, v31, v32, "Reranker getTopLandmark failed with error %@", v33, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
      swift_arrayDestroy();
      long long v37 = v34;
      uint64_t v28 = v113;
      MEMORY[0x1E01B07E0](v37, -1, -1);
      MEMORY[0x1E01B07E0](v33, -1, -1);
    }
    else
    {
    }
    uint64_t v38 = v112;
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v28, v111);
    uint64_t v39 = type metadata accessor for ObjectKnowledge();
    uint64_t v40 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56);
    uint64_t v41 = v38;
    return v40(v41, 1, 1, v39);
  }
  uint64_t v43 = v26;
  unint64_t v116 = v16;
  uint64_t v119 = 0;
  uint64_t v104 = v10;
  uint64_t v105 = v13;
  *double v24 = 0;
  v24[1] = 0xE000000000000000;
  void v24[2] = 0;
  v24[3] = 0xE000000000000000;
  v24[4] = 0;
  v24[5] = MEMORY[0x1E4FBC860];
  sub_1DD047BE8();
  uint64_t v44 = *(int *)(v22 + 40);
  unint64_t v109 = v24;
  uint64_t v45 = (char *)v24 + v44;
  uint64_t v46 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
  LODWORD(v118) = 0;
  int64_t v47 = 0;
  uint64_t v48 = *(void *)(v43 + 64);
  uint64_t v114 = v43 + 64;
  uint64_t v49 = 1 << *(unsigned char *)(v43 + 32);
  uint64_t v50 = -1;
  if (v49 < 64) {
    uint64_t v50 = ~(-1 << v49);
  }
  unint64_t v51 = v50 & v48;
  double v52 = -INFINITY;
  int64_t v115 = (unint64_t)(v49 + 63) >> 6;
  uint64_t v54 = v107;
  uint64_t v53 = v108;
  uint64_t v55 = (uint64_t)v106;
  uint64_t v117 = v43;
  while (1)
  {
    if (v51)
    {
      unint64_t v56 = __clz(__rbit64(v51));
      v51 &= v51 - 1;
      unint64_t v57 = v56 | (v47 << 6);
      goto LABEL_29;
    }
    if (__OFADD__(v47++, 1))
    {
      __break(1u);
      goto LABEL_62;
    }
    if (v47 >= v115) {
      goto LABEL_47;
    }
    unint64_t v59 = *(void *)(v114 + 8 * v47);
    if (!v59) {
      break;
    }
LABEL_28:
    unint64_t v51 = (v59 - 1) & v59;
    unint64_t v57 = __clz(__rbit64(v59)) + (v47 << 6);
LABEL_29:
    sub_1DCEEC33C(*(void *)(v43 + 56) + *(void *)(v14 + 72) * v57, v55, type metadata accessor for LandmarkSignals);
    sub_1DCEF02AC(v55, (uint64_t)v19, type metadata accessor for LandmarkSignals);
    if (!*(void *)&v19[*(int *)(v54 + 20)])
    {
      sub_1DCDE6F94();
      uint64_t v27 = (void *)swift_allocError();
      unsigned char *v70 = 4;
      swift_willThrow();
      sub_1DCEEC2DC((uint64_t)v19, type metadata accessor for LandmarkSignals);
      swift_release();
      sub_1DCEEC2DC((uint64_t)v109, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      goto LABEL_3;
    }
    uint64_t v61 = swift_retain();
    uint64_t v62 = v53;
    long long v63 = v119;
    sub_1DCEEA3C0(v61);
    uint64_t v119 = v63;
    if (v63)
    {
      swift_release();
      sub_1DCEEC2DC((uint64_t)v19, type metadata accessor for LandmarkSignals);
      swift_release();
      sub_1DCEEC2DC((uint64_t)v109, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      uint64_t v27 = v119;
      goto LABEL_3;
    }
    double v65 = v64;
    swift_release();
    uint64_t v66 = (uint64_t)v116;
    sub_1DCEEC33C((uint64_t)v19, (uint64_t)v116, type metadata accessor for LandmarkSignals);
    if (v118)
    {
      int v67 = *(unsigned __int8 *)(v66 + *(int *)(v54 + 24));
      sub_1DCEEC2DC(v66, type metadata accessor for LandmarkSignals);
      uint64_t v53 = v62;
      if (v52 >= v65)
      {
        LODWORD(v118) = 1;
        goto LABEL_12;
      }
    }
    else
    {
      sub_1DCEEC2DC(v66, type metadata accessor for LandmarkSignals);
      uint64_t v53 = v62;
      if (v52 >= v65)
      {
        LODWORD(v118) = 0;
LABEL_12:
        uint64_t v43 = v117;
        goto LABEL_13;
      }
      int v67 = 1;
    }
    uint64_t v43 = v117;
    if (*(double *)(v53 + 64) < v65 && v67 != 0)
    {
      long long v69 = v109;
      sub_1DCEEC2DC((uint64_t)v109, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      sub_1DCEEC33C((uint64_t)v19, (uint64_t)v69, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      LODWORD(v118) = v19[*(int *)(v54 + 24)];
      double v52 = v65;
    }
LABEL_13:
    sub_1DCEEC2DC((uint64_t)v19, type metadata accessor for LandmarkSignals);
  }
  int64_t v60 = v47 + 1;
  if (v47 + 1 >= v115) {
    goto LABEL_47;
  }
  unint64_t v59 = *(void *)(v114 + 8 * v60);
  if (v59) {
    goto LABEL_27;
  }
  int64_t v60 = v47 + 2;
  if (v47 + 2 >= v115) {
    goto LABEL_47;
  }
  unint64_t v59 = *(void *)(v114 + 8 * v60);
  if (v59) {
    goto LABEL_27;
  }
  int64_t v60 = v47 + 3;
  if (v47 + 3 >= v115) {
    goto LABEL_47;
  }
  unint64_t v59 = *(void *)(v114 + 8 * v60);
  if (v59)
  {
LABEL_27:
    int64_t v47 = v60;
    goto LABEL_28;
  }
  int64_t v60 = v47 + 4;
  if (v47 + 4 < v115)
  {
    unint64_t v59 = *(void *)(v114 + 8 * v60);
    if (!v59)
    {
      while (1)
      {
        int64_t v47 = v60 + 1;
        if (__OFADD__(v60, 1)) {
          break;
        }
        if (v47 >= v115) {
          goto LABEL_47;
        }
        unint64_t v59 = *(void *)(v114 + 8 * v47);
        ++v60;
        if (v59) {
          goto LABEL_28;
        }
      }
LABEL_62:
      __break(1u);
LABEL_63:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v117 = 0;
      uint64_t v73 = (uint64_t)v105;
      uint64_t v71 = v109;
      goto LABEL_60;
    }
    goto LABEL_27;
  }
LABEL_47:
  swift_release();
  uint64_t v71 = v109;
  uint64_t v53 = *v109;
  unint64_t v51 = v109[1];
  uint64_t v72 = HIBYTE(v51) & 0xF;
  if ((v51 & 0x2000000000000000) == 0) {
    uint64_t v72 = *v109 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v73 = (uint64_t)v105;
  if (!v72)
  {
    sub_1DCEEC2DC((uint64_t)v109, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
    uint64_t v39 = type metadata accessor for ObjectKnowledge();
    uint64_t v40 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56);
    uint64_t v41 = v112;
    return v40(v41, 1, 1, v39);
  }
  uint64_t v54 = v109[3];
  uint64_t v118 = (void *)v109[2];
  uint64_t v74 = sub_1DD046478();
  char v75 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56);
  v75(v73, 1, 1, v74);
  v75((uint64_t)v104, 1, 1, v74);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if ((sub_1DD0485D8() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v117 = 0;
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  unint64_t v76 = sub_1DCEBBF08(1uLL, v53, v51);
  unint64_t v78 = v77;
  unint64_t v80 = v79;
  unint64_t v82 = v81;
  swift_bridgeObjectRelease();
  if ((v76 ^ v78) < 0x4000) {
    goto LABEL_63;
  }
  id v83 = v119;
  uint64_t v84 = sub_1DCD5109C(v76, v78, v80, v82, 10);
  uint64_t v119 = v83;
  if ((v85 & 0x100) != 0) {
    uint64_t v84 = (uint64_t)sub_1DCD4F45C(v76, v78, v80, v82, 10);
  }
  uint64_t v86 = v84;
  char v87 = v85;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v73 = (uint64_t)v105;
  uint64_t v71 = v109;
  if (v87) {
    uint64_t v88 = 0;
  }
  else {
    uint64_t v88 = v86;
  }
  uint64_t v117 = v88;
LABEL_60:
  swift_bridgeObjectRetain();
  uint64_t v89 = swift_bridgeObjectRetain();
  uint64_t v90 = sub_1DCEEFEE8(v89);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F40);
  uint64_t v91 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C10) - 8);
  unint64_t v92 = (*(unsigned __int8 *)(*(void *)v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v91 + 80);
  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_1DD04E910;
  uint64_t v94 = v91[14];
  sub_1DD0465C8();
  *(void *)(v93 + v92 + v94) = MEMORY[0x1E4FBC870];
  unint64_t v95 = sub_1DCDB8DB0(v93);
  sub_1DCEEC2DC((uint64_t)v71, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
  uint64_t v96 = v112;
  uint64_t *v112 = v53;
  v96[1] = v51;
  unint64_t v97 = v118;
  v96[2] = (uint64_t)v118;
  v96[3] = v54;
  uint64_t v98 = (int *)type metadata accessor for ObjectKnowledge();
  sub_1DCD43B04(v73, (uint64_t)v96 + v98[6], &qword_1EBE848E0);
  *(_DWORD *)((char *)v96 + v98[7]) = 0;
  double v99 = (uint64_t *)((char *)v96 + v98[8]);
  *double v99 = 0;
  v99[1] = 0xE000000000000000;
  unint64_t v100 = (uint64_t *)((char *)v96 + v98[9]);
  void *v100 = 0;
  v100[1] = 0xE000000000000000;
  sub_1DCD43B04((uint64_t)v104, (uint64_t)v96 + v98[10], &qword_1EBE848E0);
  *(uint64_t *)((char *)v96 + v98[11]) = MEMORY[0x1E4FBC860];
  unint64_t v101 = (_OWORD *)((char *)v96 + v98[12]);
  v101[2] = 0u;
  v101[3] = 0u;
  *unint64_t v101 = 0u;
  v101[1] = 0u;
  unint64_t v102 = (char *)v96 + v98[13];
  *(void *)unint64_t v102 = 123711979;
  v102[8] = 0;
  *(_OWORD *)((char *)v96 + v98[14]) = xmmword_1DD0535A0;
  uint64_t v103 = (char *)v96 + v98[15];
  *(void *)uint64_t v103 = v117;
  *((_WORD *)v103 + 4) = 2;
  *((void *)v103 + 2) = v97;
  *((void *)v103 + 3) = v54;
  *((void *)v103 + 4) = v90;
  *((double *)v103 + 5) = v52;
  v103[48] = 0;
  *((void *)v103 + 7) = 0;
  *((void *)v103 + 8) = 0xE000000000000000;
  *((void *)v103 + 9) = 0;
  *((void *)v103 + 10) = 0xE000000000000000;
  *((void *)v103 + 12) = 0;
  *((void *)v103 + 13) = 0;
  *((void *)v103 + 11) = v95;
  *((_DWORD *)v103 + 28) = 0;
  *(_DWORD *)((char *)v96 + v98[16]) = 0;
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, int *))(*((void *)v98 - 1) + 56))(v96, 0, 1, v98);
}

uint64_t sub_1DCEEB324@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unint64_t *a4@<X8>)
{
  unint64_t v122 = a3;
  uint64_t v121 = a2;
  uint64_t v119 = a4;
  uint64_t v118 = sub_1DD048068();
  unint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x1F4188790](v118);
  uint64_t v120 = (uint64_t)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB026D0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v113 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v114 = (uint64_t)&v106 - v10;
  uint64_t v116 = type metadata accessor for Com_Apple_Visualintelligence_LatLng(0);
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v112 = (uint64_t *)((char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v111 = (uint64_t *)((char *)&v106 - v13);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  double v19 = (char *)&v106 - v18;
  uint64_t v20 = (void *)type metadata accessor for StorefrontSignals(0);
  uint64_t v124 = *(v20 - 1);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v106 - v24;
  uint64_t v26 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v29 = (void *)v123;
  unint64_t v30 = sub_1DCEE8C10(a1, v121, v122);
  if (v29)
  {
    uint64_t v31 = v29;
LABEL_3:
    uint64_t v32 = v120;
    sub_1DCDB40EC(v120);
    id v33 = v31;
    id v34 = v31;
    id v35 = sub_1DD048048();
    os_log_type_t v36 = sub_1DD048858();
    if (os_log_type_enabled(v35, v36))
    {
      long long v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v37 = 138412290;
      id v39 = v31;
      uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v127 = v40;
      sub_1DD048A28();
      *uint64_t v38 = v40;

      _os_log_impl(&dword_1DCCF9000, v35, v36, "Reranker getTopStorefront failed with error %@", v37, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v38, -1, -1);
      uint64_t v41 = v37;
      uint64_t v32 = v120;
      MEMORY[0x1E01B07E0](v41, -1, -1);
    }
    else
    {
    }
    uint64_t v42 = v119;
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v32, v118);
    uint64_t v43 = type metadata accessor for ObjectKnowledge();
    uint64_t v44 = *(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
    uint64_t v45 = v42;
    return v44(v45, 1, 1, v43);
  }
  unint64_t v122 = v20;
  unint64_t v123 = v30;
  uint64_t v110 = v19;
  uint64_t v108 = v16;
  sub_1DD047BE8();
  unint64_t v47 = *(int *)(v26 + 20);
  if (qword_1EAB01DE0 != -1) {
LABEL_47:
  }
    swift_once();
  unint64_t v109 = v47;
  *(void *)&v28[v47] = qword_1EAB03310;
  unint64_t v48 = v123;
  unint64_t v47 = v123 + 64;
  uint64_t v49 = 1 << *(unsigned char *)(v123 + 32);
  uint64_t v50 = -1;
  if (v49 < 64) {
    uint64_t v50 = ~(-1 << v49);
  }
  unint64_t v51 = v50 & *(void *)(v123 + 64);
  uint64_t v121 = (unint64_t)(v49 + 63) >> 6;
  uint64_t result = swift_retain();
  uint64_t v52 = 0;
  double v53 = -INFINITY;
  while (1)
  {
    if (v51)
    {
      unint64_t v54 = __clz(__rbit64(v51));
      v51 &= v51 - 1;
      unint64_t v55 = v54 | (v52 << 6);
      goto LABEL_28;
    }
    if (__OFADD__(v52++, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v52 >= v121) {
      break;
    }
    unint64_t v57 = *(void *)(v47 + 8 * v52);
    if (!v57)
    {
      uint64_t v58 = v52 + 1;
      if (v52 + 1 >= v121) {
        break;
      }
      unint64_t v57 = *(void *)(v47 + 8 * v58);
      if (!v57)
      {
        uint64_t v58 = v52 + 2;
        if (v52 + 2 >= v121) {
          break;
        }
        unint64_t v57 = *(void *)(v47 + 8 * v58);
        if (!v57)
        {
          uint64_t v58 = v52 + 3;
          if (v52 + 3 >= v121) {
            break;
          }
          unint64_t v57 = *(void *)(v47 + 8 * v58);
          if (!v57)
          {
            uint64_t v58 = v52 + 4;
            if (v52 + 4 >= v121) {
              break;
            }
            unint64_t v57 = *(void *)(v47 + 8 * v58);
            if (!v57)
            {
              while (1)
              {
                uint64_t v52 = v58 + 1;
                if (__OFADD__(v58, 1)) {
                  break;
                }
                if (v52 >= v121) {
                  goto LABEL_37;
                }
                unint64_t v57 = *(void *)(v47 + 8 * v52);
                ++v58;
                if (v57) {
                  goto LABEL_27;
                }
              }
              __break(1u);
              return result;
            }
          }
        }
      }
      uint64_t v52 = v58;
    }
LABEL_27:
    unint64_t v51 = (v57 - 1) & v57;
    unint64_t v55 = __clz(__rbit64(v57)) + (v52 << 6);
LABEL_28:
    sub_1DCEEC33C(*(void *)(v48 + 56) + *(void *)(v124 + 72) * v55, (uint64_t)v25, type metadata accessor for StorefrontSignals);
    sub_1DCEF02AC((uint64_t)v25, (uint64_t)v22, type metadata accessor for StorefrontSignals);
    if (!*(void *)&v22[*((int *)v122 + 5)])
    {
      sub_1DCDE6F94();
      uint64_t v31 = (void *)swift_allocError();
      *uint64_t v62 = 4;
      swift_willThrow();
      sub_1DCEEC2DC((uint64_t)v22, type metadata accessor for StorefrontSignals);
      swift_release();
      sub_1DCEEC2DC((uint64_t)v28, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      goto LABEL_3;
    }
    uint64_t v59 = swift_retain();
    sub_1DCEEA3C0(v59);
    double v61 = v60;
    swift_release();
    if (v53 < v61 && *(double *)(v4 + 72) < v61)
    {
      sub_1DCEEC2DC((uint64_t)v28, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      sub_1DCEEC33C((uint64_t)v22, (uint64_t)v28, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
      double v53 = v61;
    }
    uint64_t result = sub_1DCEEC2DC((uint64_t)v22, type metadata accessor for StorefrontSignals);
    unint64_t v48 = v123;
  }
LABEL_37:
  swift_release();
  uint64_t v63 = *(void *)&v28[v109];
  swift_beginAccess();
  unint64_t v64 = *(void *)(v63 + 16);
  uint64_t v65 = (uint64_t)v28;
  uint64_t v66 = (uint64_t)v110;
  if (!v64)
  {
    sub_1DCEEC2DC(v65, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
    uint64_t v43 = type metadata accessor for ObjectKnowledge();
    uint64_t v44 = *(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
    uint64_t v45 = v119;
    return v44(v45, 1, 1, v43);
  }
  uint64_t v124 = v65;
  unint64_t v125 = v64 % 0xFFFFFFFF;
  sub_1DD048F78();
  unint64_t v125 = 81;
  unint64_t v126 = 0xE100000000000000;
  sub_1DD048548();
  swift_bridgeObjectRelease();
  unint64_t v117 = v125;
  unint64_t v107 = v126;
  int v67 = (uint64_t *)(v63
                  + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefName);
  swift_beginAccess();
  uint64_t v68 = *v67;
  uint64_t v69 = v67[1];
  uint64_t v120 = v68;
  uint64_t v70 = sub_1DD046478();
  uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56);
  v71(v66, 1, 1, v70);
  v71((uint64_t)v108, 1, 1, v70);
  uint64_t v118 = *(void *)(v63 + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  uint64_t v72 = swift_bridgeObjectRetain();
  uint64_t v106 = sub_1DCEEFEE8(v72);
  swift_bridgeObjectRelease();
  uint64_t v73 = v63
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__prefCategoryID;
  swift_beginAccess();
  uint64_t v74 = *(void **)v73;
  unint64_t v75 = *(void *)(v73 + 8);
  unint64_t v122 = v74;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F40);
  unint64_t v76 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C10) - 8);
  unint64_t v77 = (*(unsigned __int8 *)(*(void *)v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v76 + 80);
  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_1DD04E910;
  unint64_t v79 = v78 + v77;
  uint64_t v80 = v76[14];
  unint64_t v123 = v75;
  swift_bridgeObjectRetain();
  sub_1DD0465C8();
  *(void *)(v79 + v80) = MEMORY[0x1E4FBC870];
  uint64_t v121 = sub_1DCDB8DB0(v78);
  uint64_t v81 = v63
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__location;
  swift_beginAccess();
  uint64_t v82 = v81;
  uint64_t v83 = v114;
  sub_1DCD2889C(v82, v114, &qword_1EAB026D0);
  uint64_t v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
  uint64_t v85 = v116;
  if (v84(v83, 1, v116) == 1)
  {
    uint64_t v86 = v111;
    void *v111 = 0;
    v86[1] = 0;
    sub_1DD047BE8();
    sub_1DCD2479C(v83, &qword_1EAB026D0);
  }
  else
  {
    uint64_t v86 = v111;
    sub_1DCEF02AC(v83, (uint64_t)v111, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
  }
  uint64_t v87 = (uint64_t)v113;
  uint64_t v88 = v124;
  uint64_t v89 = v86[1];
  sub_1DCEEC2DC((uint64_t)v86, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
  uint64_t v90 = *(void *)(v88 + v109)
      + OBJC_IVAR____TtCV18VisualIntelligence42Com_Apple_Visualintelligence_StorefrontPoiP33_0B945AC7F219EA41D926B739BCA3A19413_StorageClass__location;
  swift_beginAccess();
  sub_1DCD2889C(v90, v87, &qword_1EAB026D0);
  if (v84(v87, 1, v85) == 1)
  {
    uint64_t v91 = v112;
    uint64_t *v112 = 0;
    v91[1] = 0;
    sub_1DD047BE8();
    sub_1DCD2479C(v87, &qword_1EAB026D0);
  }
  else
  {
    uint64_t v91 = v112;
    sub_1DCEF02AC(v87, (uint64_t)v112, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
  }
  uint64_t v92 = v120;
  uint64_t v93 = v118;
  unint64_t v94 = v117;
  unint64_t v95 = v107;
  uint64_t v96 = v106;
  sub_1DCEEC2DC(v124, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
  uint64_t v97 = *v91;
  sub_1DCEEC2DC((uint64_t)v91, type metadata accessor for Com_Apple_Visualintelligence_LatLng);
  uint64_t v98 = v119;
  *uint64_t v119 = v94;
  v98[1] = v95;
  v98[2] = v92;
  v98[3] = v69;
  double v99 = (int *)type metadata accessor for ObjectKnowledge();
  sub_1DCD43B04((uint64_t)v110, (uint64_t)v98 + v99[6], &qword_1EBE848E0);
  *(_DWORD *)((char *)v98 + v99[7]) = 0;
  unint64_t v100 = (unint64_t *)((char *)v98 + v99[8]);
  void *v100 = 0;
  v100[1] = 0xE000000000000000;
  unint64_t v101 = (unint64_t *)((char *)v98 + v99[9]);
  *unint64_t v101 = 0;
  v101[1] = 0xE000000000000000;
  sub_1DCD43B04((uint64_t)v108, (uint64_t)v98 + v99[10], &qword_1EBE848E0);
  *(unint64_t *)((char *)v98 + v99[11]) = MEMORY[0x1E4FBC860];
  unint64_t v102 = (_OWORD *)((char *)v98 + v99[12]);
  v102[2] = 0u;
  v102[3] = 0u;
  _OWORD *v102 = 0u;
  v102[1] = 0u;
  uint64_t v103 = (char *)v98 + v99[13];
  *(void *)uint64_t v103 = 123711979;
  v103[8] = 0;
  *(_OWORD *)((char *)v98 + v99[14]) = xmmword_1DD0535A0;
  uint64_t v104 = (char *)v98 + v99[15];
  *(void *)uint64_t v104 = v93;
  *((_WORD *)v104 + 4) = 3;
  *((void *)v104 + 2) = v92;
  *((void *)v104 + 3) = v69;
  *((void *)v104 + 4) = v96;
  *((double *)v104 + 5) = v53;
  v104[48] = 1;
  unint64_t v105 = v123;
  *((void *)v104 + 7) = v122;
  *((void *)v104 + 8) = v105;
  *((void *)v104 + 9) = 0;
  *((void *)v104 + 10) = 0xE000000000000000;
  *((void *)v104 + 11) = v121;
  *((void *)v104 + 12) = v89;
  *((void *)v104 + 13) = v97;
  *((_DWORD *)v104 + 28) = 0;
  *(_DWORD *)((char *)v98 + v99[16]) = 0;
  return (*(uint64_t (**)(unint64_t *, void, uint64_t, int *))(*((void *)v99 - 1) + 56))(v98, 0, 1, v99);
}

uint64_t sub_1DCEEC238()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Reranker()
{
  return self;
}

uint64_t type metadata accessor for StorefrontSignals(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EAB03E50);
}

uint64_t sub_1DCEEC2DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCEEC33C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCEEC3A4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DD048F68();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_141;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 16;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v88 = v86;
        uint64_t v89 = v85;
        do
        {
          float v90 = *(float *)(v89 + 8);
          if (*(float *)(v89 - 8) >= v90) {
            break;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v91 = *(void *)v89;
          *(_OWORD *)uint64_t v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(void *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_150;
  }
  uint64_t v6 = result;
  unint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (float *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_107:
      uint64_t v93 = v12;
      uint64_t v104 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_136;
          }
          if (!v94) {
            goto LABEL_149;
          }
          uint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_1DCEECA98((float *)(v94 + 16 * v97), (float *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v96 = sub_1DCD729EC((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_138;
          }
          double v99 = &v96[16 * v95 + 32];
          *(void *)double v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_139;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03E30);
    uint64_t v8 = sub_1DD0486F8();
    *(void *)(v8 + 16) = v7;
    uint64_t v104 = v8;
    __dst = (float *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v103 = *a1 + 8;
  uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v105 = v6;
  uint64_t v106 = v3;
  uint64_t v107 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      float v15 = *(float *)(v103 + 16 * v10);
      uint64_t v16 = 16 * v14;
      float v17 = *(float *)(v103 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (float *)(v102 + 16 * v14);
        while (v17 < v15 != *(v18 - 4) >= *v18)
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14) {
          goto LABEL_142;
        }
        if (v14 < v10)
        {
          uint64_t v19 = 16 * v10 - 16;
          uint64_t v20 = v10;
          uint64_t v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11) {
                goto LABEL_148;
              }
              uint64_t v23 = (_OWORD *)(v11 + v16);
              uint64_t v24 = (_OWORD *)(v11 + v19);
              uint64_t v25 = *(void *)(v11 + v16);
              int v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1) {
                *uint64_t v23 = *v24;
              }
              uint64_t v22 = v11 + v19;
              *(void *)uint64_t v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_50;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_140;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_50;
    }
    uint64_t v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_143;
    }
    if (v27 >= v3) {
      uint64_t v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = (float *)(v11 + 16 * v10);
      do
      {
        id v29 = v28;
        uint64_t v30 = v14;
        do
        {
          float v31 = v29[2];
          if (*(v29 - 2) >= v31) {
            break;
          }
          if (!v11) {
            goto LABEL_146;
          }
          uint64_t v32 = *(void *)v29;
          *(_OWORD *)id v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((void *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      uint64_t v10 = v27;
    }
LABEL_50:
    if (v10 < v14) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1DCD71FDC(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v107;
    if (v34 >= v33 >> 1)
    {
      uint64_t v83 = sub_1DCD71FDC((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v107;
      uint64_t v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    id v35 = v12 + 32;
    os_log_type_t v36 = &v12[16 * v34 + 32];
    *(void *)os_log_type_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_124;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_125;
          }
          unint64_t v49 = v13 - 2;
          uint64_t v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_127;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_130;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_134;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_81;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_126;
        }
        unint64_t v49 = v13 - 2;
        unint64_t v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_129;
        }
        double v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_132;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_133;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_87:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v60) {
          goto LABEL_128;
        }
        uint64_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_131;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_89:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11) {
          goto LABEL_147;
        }
        unint64_t v77 = v12;
        uint64_t v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_1DCEECA98((float *)(v11 + 16 * *(void *)v78), (float *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_97;
        }
        if (v81 < v79) {
          goto LABEL_121;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_123;
        }
        uint64_t v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v107;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v105;
    uint64_t v3 = v106;
    if (v10 >= v106)
    {
      uint64_t v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCEECA98(float *__src, float *a2, unint64_t a3, float *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  int v26 = __dst;
  uint64_t v27 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      uint64_t v19 = 4 * v13;
      if (__dst != a2 || &a2[v19] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v20 = &v4[v19];
      uint64_t v25 = &v4[v19];
      uint64_t v27 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        uint64_t v21 = (float *)(a3 - 16);
        do
        {
          uint64_t v22 = v21 + 4;
          if (*(v6 - 2) >= *(v20 - 2))
          {
            uint64_t v25 = v20 - 4;
            if (v22 < v20 || v21 >= v20 || v22 != v20) {
              *(_OWORD *)uint64_t v21 = *((_OWORD *)v20 - 1);
            }
            uint64_t v23 = v6;
            v20 -= 4;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v23 = v6 - 4;
            if (v22 != v6 || v21 >= v6) {
              *(_OWORD *)uint64_t v21 = *(_OWORD *)v23;
            }
            uint64_t v27 = v6 - 4;
            if (v23 <= v7) {
              break;
            }
          }
          v21 -= 4;
          uint64_t v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_44:
      sub_1DCD72534((void **)&v27, (const void **)&v26, &v25);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    size_t v14 = 4 * v10;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14 * 4);
    }
    float v15 = &v4[v14];
    uint64_t v25 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      uint64_t v16 = v4;
      while (1)
      {
        if (v16[2] >= v6[2])
        {
          uint64_t v4 = v16 + 4;
          uint64_t v18 = v16;
          float v17 = v6;
          if (v7 == v16)
          {
            v16 += 4;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v16 += 4;
          }
        }
        else
        {
          float v17 = v6 + 4;
          uint64_t v18 = v6;
          if (v7 == v6 && v7 < v17) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v18;
LABEL_22:
        v7 += 4;
        if (v16 < v15)
        {
          uint64_t v6 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        int v26 = v4;
        uint64_t v27 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

void (*sub_1DCEECD24(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1DCEED450(v6);
  v6[10] = sub_1DCEECF34(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1DCEECDD0;
}

void sub_1DCEECDD0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_1DCEECE44(void *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1DCEED48C(v4);
  v4[9] = sub_1DCEED1CC(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_1DCEECED4;
}

void sub_1DCEECED4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);
  free(v1);
}

void (*sub_1DCEECF34(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  v10[2] = v4;
  *uint64_t v10 = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03E28);
  uint64_t v12 = malloc(*(void *)(*(void *)(v11 - 8) + 64));
  v10[3] = v12;
  uint64_t v13 = *v4;
  unint64_t v15 = sub_1DCEAD1A4(a2, a3);
  *((unsigned char *)v10 + 40) = v14 & 1;
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    char v19 = v14;
    uint64_t v20 = *(void *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if (v19)
      {
LABEL_8:
        uint64_t v21 = *(void *)(*v5 + 56);
        uint64_t v22 = type metadata accessor for LandmarkSignals(0);
        uint64_t v23 = *(void *)(v22 - 8);
        sub_1DCEF02AC(v21 + *(void *)(v23 + 72) * v15, (uint64_t)v12, type metadata accessor for LandmarkSignals);
        uint64_t v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_1DCEED168;
      }
LABEL_11:
      uint64_t v22 = type metadata accessor for LandmarkSignals(0);
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_1DCE892A0();
      goto LABEL_7;
    }
    sub_1DCE7F580(v18, a4 & 1);
    unint64_t v25 = sub_1DCEAD1A4(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      unint64_t v15 = v25;
      v10[4] = v25;
      if (v19) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_1DD049028();
  __break(1u);
  return result;
}

void sub_1DCEED168(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void *)(*a1)[3];
  sub_1DCEED4BC((uint64_t)v2, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[2], (*a1)[4], **a1, (*a1)[1]);
  sub_1DCD2479C((uint64_t)v2, &qword_1EAB03E28);
  free(v2);
  free(v1);
}

void (*sub_1DCEED1CC(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  int64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  *int64_t v8 = a2;
  v8[1] = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03E38);
  uint64_t v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  v8[2] = v10;
  uint64_t v11 = *v3;
  unint64_t v13 = sub_1DCEAFD4C(a2);
  *((unsigned char *)v8 + 32) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v4 + 56);
        uint64_t v20 = type metadata accessor for StorefrontSignals(0);
        uint64_t v21 = *(void *)(v20 - 8);
        sub_1DCEF02AC(v19 + *(void *)(v21 + 72) * v13, (uint64_t)v10, type metadata accessor for StorefrontSignals);
        uint64_t v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_1DCEED3F0;
      }
LABEL_11:
      uint64_t v20 = type metadata accessor for StorefrontSignals(0);
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_1DCE899DC();
      goto LABEL_7;
    }
    sub_1DCE800BC(v16, a3 & 1);
    unint64_t v23 = sub_1DCEAFD4C(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      v8[3] = v23;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_1DD049028();
  __break(1u);
  return result;
}

void sub_1DCEED3F0(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void *)(*a1)[2];
  sub_1DCEED704((uint64_t)v2, *((unsigned char *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_1DCD2479C((uint64_t)v2, &qword_1EAB03E38);
  free(v2);
  free(v1);
}

uint64_t (*sub_1DCEED450(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1DCEED480;
}

uint64_t sub_1DCEED480(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t (*sub_1DCEED48C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1DCEF2154;
}

unint64_t sub_1DCEED4BC(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03E28);
  MEMORY[0x1F4188790](v10 - 8);
  char v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LandmarkSignals(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v22 - v18;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EAB03E28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t result = sub_1DCD2479C((uint64_t)v12, &qword_1EAB03E28);
    if (a2)
    {
      swift_arrayDestroy();
      return sub_1DCFDCBEC(a4, *a3);
    }
  }
  else
  {
    sub_1DCEF02AC((uint64_t)v12, (uint64_t)v19, type metadata accessor for LandmarkSignals);
    uint64_t v21 = (void *)*a3;
    if (a2)
    {
      return sub_1DCEF02AC((uint64_t)v19, v21[7] + *(void *)(v14 + 72) * a4, type metadata accessor for LandmarkSignals);
    }
    else
    {
      sub_1DCEF02AC((uint64_t)v19, (uint64_t)v16, type metadata accessor for LandmarkSignals);
      sub_1DCE87ABC(a4, v22, v23, (uint64_t)v16, v21);
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

unint64_t sub_1DCEED704(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v22 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03E38);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StorefrontSignals(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v21 - v17;
  sub_1DCD2889C(a1, (uint64_t)v11, &qword_1EAB03E38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    unint64_t result = sub_1DCD2479C((uint64_t)v11, &qword_1EAB03E38);
    if (a2) {
      return sub_1DCFDCDFC(a4, *a3);
    }
  }
  else
  {
    sub_1DCEF02AC((uint64_t)v11, (uint64_t)v18, type metadata accessor for StorefrontSignals);
    uint64_t v20 = (void *)*a3;
    if (a2)
    {
      return sub_1DCEF02AC((uint64_t)v18, v20[7] + *(void *)(v13 + 72) * a4, type metadata accessor for StorefrontSignals);
    }
    else
    {
      sub_1DCEF02AC((uint64_t)v18, (uint64_t)v15, type metadata accessor for StorefrontSignals);
      return sub_1DCE87B68(a4, v22, (uint64_t)v15, v20);
    }
  }
  return result;
}

uint64_t sub_1DCEED924(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v26 = *(void *)(a1 + 24);
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t result = sub_1DCEF0398(a1);
  uint64_t v6 = 0;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  int64_t v8 = (void *)(MEMORY[0x1E4FBC860] + 32);
  uint64_t v27 = v3;
  uint64_t v25 = v3 + 32;
  if ((v2 & 1) == 0) {
    goto LABEL_5;
  }
LABEL_2:
  if (v1 < v26)
  {
    uint64_t v9 = v1 + 1;
    if (v6) {
      goto LABEL_23;
    }
LABEL_11:
    unint64_t v11 = v7[3];
    if ((uint64_t)((v11 >> 1) + 0x4000000000000000) >= 0)
    {
      int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if (v12 <= 1) {
        uint64_t v13 = 1;
      }
      else {
        uint64_t v13 = v12;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851F8);
      uint64_t v14 = (void *)swift_allocObject();
      int64_t v15 = _swift_stdlib_malloc_size(v14);
      uint64_t v16 = v15 - 32;
      if (v15 < 32) {
        uint64_t v16 = v15 - 25;
      }
      uint64_t v17 = v16 >> 3;
      v14[2] = v13;
      v14[3] = 2 * (v16 >> 3);
      unint64_t v18 = (unint64_t)(v14 + 4);
      uint64_t v19 = v7[3] >> 1;
      if (v7[2])
      {
        uint64_t v20 = v7 + 4;
        if (v14 != v7 || v18 >= (unint64_t)v20 + 8 * v19) {
          memmove(v14 + 4, v20, 8 * v19);
        }
        v7[2] = 0;
      }
      int64_t v8 = (void *)(v18 + 8 * v19);
      uint64_t v6 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
      uint64_t result = swift_release();
      uint64_t v7 = v14;
LABEL_23:
      while (1)
      {
        BOOL v21 = __OFSUB__(v6--, 1);
        if (v21) {
          break;
        }
        *v8++ = v1;
        uint64_t v1 = v9;
        if (v2) {
          goto LABEL_2;
        }
LABEL_5:
        uint64_t v10 = *(void *)(v27 + 16);
        if (v4 >= v10) {
          goto LABEL_26;
        }
        if (v4 + 1 >= v10)
        {
          ++v4;
          uint64_t v9 = v1;
          if (!v6) {
            goto LABEL_11;
          }
        }
        else
        {
          if (v4 < -1) {
            goto LABEL_32;
          }
          uint64_t v9 = *(void *)(v25 + 8 * ++v4);
          if (!v6) {
            goto LABEL_11;
          }
        }
      }
      __break(1u);
    }
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
LABEL_26:
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  unint64_t v22 = v7[3];
  if (v22 < 2) {
    return (uint64_t)v7;
  }
  unint64_t v23 = v22 >> 1;
  BOOL v21 = __OFSUB__(v23, v6);
  uint64_t v24 = v23 - v6;
  if (!v21)
  {
    v7[2] = v24;
    return (uint64_t)v7;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1DCEEDB04(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  char v2 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v3 = result;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 4;
    while (1)
    {
      int v7 = *(_DWORD *)(v3 + 4 * v5 + 32);
      if (!v4)
      {
        unint64_t v8 = v2[3];
        if ((uint64_t)((v8 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_28;
        }
        int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
        if (v9 <= 1) {
          uint64_t v10 = 1;
        }
        else {
          uint64_t v10 = v9;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02738);
        unint64_t v11 = (void *)swift_allocObject();
        int64_t v12 = _swift_stdlib_malloc_size(v11);
        uint64_t v13 = v12 - 32;
        if (v12 < 32) {
          uint64_t v13 = v12 - 17;
        }
        uint64_t v14 = v13 >> 4;
        v11[2] = v10;
        v11[3] = 2 * (v13 >> 4);
        unint64_t v15 = (unint64_t)(v11 + 4);
        uint64_t v16 = v2[3] >> 1;
        size_t v17 = 16 * v16;
        if (v2[2])
        {
          if (v11 != v2 || v15 >= (unint64_t)&v2[v17 / 8 + 4]) {
            memmove(v11 + 4, v2 + 4, v17);
          }
          v2[2] = 0;
        }
        uint64_t v6 = (void *)(v15 + v17);
        uint64_t v4 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        uint64_t result = swift_release();
        char v2 = v11;
      }
      BOOL v19 = __OFSUB__(v4--, 1);
      if (v19) {
        break;
      }
      *uint64_t v6 = v5;
      *((_DWORD *)v6 + 2) = v7;
      v6 += 2;
      if (v1 == ++v5)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v4 = 0;
LABEL_23:
  unint64_t v20 = v2[3];
  if (v20 < 2) {
    return (uint64_t)v2;
  }
  unint64_t v21 = v20 >> 1;
  BOOL v19 = __OFSUB__(v21, v4);
  uint64_t v22 = v21 - v4;
  if (!v19)
  {
    v2[2] = v22;
    return (uint64_t)v2;
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_1DCEEDC84(unint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  uint64_t v33 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v34 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1DCEEDB04(v6);
  swift_bridgeObjectRelease();
  uint64_t v35 = v7;
  swift_bridgeObjectRetain();
  sub_1DCEE8050(&v35);
  swift_release();
  uint64_t v8 = v35;
  if (*(void *)(v35 + 16) >= 0x19uLL) {
    uint64_t v9 = 25;
  }
  else {
    uint64_t v9 = *(void *)(v35 + 16);
  }
  sub_1DD048FD8();
  swift_unknownObjectRetain_n();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_release();
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  uint64_t v11 = *(void *)(v10 + 16);
  swift_release();
  if (v11 != v9) {
    goto LABEL_34;
  }
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_release();
    uint64_t v12 = MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    swift_release();
    int64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      uint64_t v35 = MEMORY[0x1E4FBC860];
      sub_1DCFC58E0(0, v13, 0);
      uint64_t v8 = v35;
      unint64_t v14 = *(void *)(v35 + 16);
      uint64_t v15 = 32;
      do
      {
        uint64_t v16 = *(void *)(v12 + v15);
        uint64_t v35 = v8;
        unint64_t v17 = *(void *)(v8 + 24);
        if (v14 >= v17 >> 1)
        {
          sub_1DCFC58E0(v17 > 1, v14 + 1, 1);
          uint64_t v8 = v35;
        }
        *(void *)(v8 + 16) = v14 + 1;
        *(void *)(v8 + 8 * v14 + 32) = v16;
        v15 += 16;
        ++v14;
        --v13;
      }
      while (v13);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    uint64_t v32 = *(void *)(v8 + 16);
    if (!v32) {
      break;
    }
    uint64_t v18 = 0;
    unint64_t v19 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    unint64_t v30 = a1 + v19;
    id v29 = a2 + 32;
    unint64_t v31 = *(void *)(a1 + 16);
    uint64_t v20 = *((void *)a2 + 2);
    unint64_t v21 = MEMORY[0x1E4FBC860];
    a2 = (char *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v9 = *(void *)(v8 + 8 * v18 + 32);
      if (v9 >= v31) {
        break;
      }
      uint64_t v22 = *(void *)(v33 + 72);
      sub_1DCEEC33C(v30 + v22 * v9, v34, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v21 = sub_1DCE9EED8(0, *(void *)(v21 + 16) + 1, 1, v21);
      }
      unint64_t v24 = *(void *)(v21 + 16);
      unint64_t v23 = *(void *)(v21 + 24);
      a1 = v24 + 1;
      if (v24 >= v23 >> 1) {
        unint64_t v21 = sub_1DCE9EED8(v23 > 1, v24 + 1, 1, v21);
      }
      *(void *)(v21 + 16) = a1;
      sub_1DCEF02AC(v34, v21 + v19 + v24 * v22, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
      if (v9 >= v20) {
        goto LABEL_33;
      }
      int v25 = *(_DWORD *)&v29[4 * v9];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a2 = sub_1DCE9D9E0(0, *((void *)a2 + 2) + 1, 1, a2);
      }
      unint64_t v27 = *((void *)a2 + 2);
      unint64_t v26 = *((void *)a2 + 3);
      a1 = v27 + 1;
      if (v27 >= v26 >> 1) {
        a2 = sub_1DCE9D9E0((char *)(v26 > 1), v27 + 1, 1, a2);
      }
      ++v18;
      *((void *)a2 + 2) = a1;
      *(_DWORD *)&a2[4 * v27 + 32] = v25;
      if (v32 == v18)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_release();
    uint64_t v12 = sub_1DCF4D448(v8, v8 + 32, 0, (2 * v9) | 1);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

id sub_1DCEEE0B0(uint64_t a1, char a2)
{
  uint64_t v25 = sub_1DD048068();
  uint64_t v4 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1DD050EE0;
  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(v7 + 32) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v8);
  uint64_t v27 = v7;
  sub_1DD0486D8();
  uint64_t v9 = v27;
  if (a2)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1DD05B860;
    sub_1DCD56524();
    *(void *)(v10 + 32) = sub_1DD0489B8();
    *(void *)(v10 + 40) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v8);
    uint64_t v27 = v10;
    sub_1DD0486D8();
    uint64_t v9 = v27;
  }
  id v11 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
  uint64_t v12 = v26;
  id v13 = sub_1DCE4FFBC(v9, 65568);
  if (v12)
  {
    sub_1DCDB40EC((uint64_t)v6);
    unint64_t v14 = sub_1DD048048();
    os_log_type_t v15 = sub_1DD048858();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1DCCF9000, v14, v15, "Error: Unable to create MLMultiArray from float", v16, 2u);
      MEMORY[0x1E01B07E0](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
    sub_1DCDE6F94();
    swift_allocError();
    *unint64_t v17 = 5;
    swift_willThrow();
  }
  else if (v8)
  {
    unint64_t v26 = 0;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v8; ++i)
    {
      int v19 = *(_DWORD *)(a1 + 4 * i + 32);
      id v20 = objc_allocWithZone(NSNumber);
      LODWORD(v21) = v19;
      id v22 = objc_msgSend(v20, sel_initWithFloat_, v21);
      objc_msgSend(v13, sel_setObject_atIndexedSubscript_, v22, i);
    }
    swift_bridgeObjectRelease();
  }
  return v13;
}

id sub_1DCEEE3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DD050EE0;
  *(void *)(v9 + 32) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
  uint64_t v21 = v9;
  sub_1DD0486D8();
  uint64_t v10 = v21;
  id v11 = objc_allocWithZone(MEMORY[0x1E4F1E9A8]);
  id result = sub_1DCE4FFBC(v10, 65568);
  id v13 = result;
  if (v2)
  {
    sub_1DCDB40EC((uint64_t)v8);
    unint64_t v14 = sub_1DD048048();
    os_log_type_t v15 = sub_1DD048858();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1DCCF9000, v14, v15, "Error: Unable to create MLMultiArray for mask", v16, 2u);
      MEMORY[0x1E01B07E0](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1DCDE6F94();
    swift_allocError();
    *unint64_t v17 = 5;
    swift_willThrow();

    return v13;
  }
  if ((a2 & 0x8000000000000000) == 0)
  {
    if (a2)
    {
      sub_1DCD56524();
      uint64_t v18 = 0;
      do
      {
        int v19 = (void *)sub_1DD0489B8();
        objc_msgSend(v13, sel_setObject_atIndexedSubscript_, v19, v18);

        ++v18;
      }
      while (a2 != v18);
    }
    return v13;
  }
  __break(1u);
  return result;
}

void sub_1DCEEE640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)v29 - v12;
  if (*(void *)(a1 + 16) == 53)
  {
    id v14 = sub_1DCEEE0B0(a1, 0);
    os_log_type_t v15 = v3;
    if (!v3)
    {
      id v16 = v14;
      uint64_t v17 = sub_1DD0486F8();
      *(void *)(v17 + 16) = 1;
      *(float *)(v17 + 32) = (float)a2;
      id v26 = sub_1DCEEE0B0(v17, 0);
      swift_bridgeObjectRelease();
      id v27 = sub_1DCEEE3C8(53, a3);
      type metadata accessor for EncryptedSearchLTRInput();
      uint64_t v28 = (void *)swift_allocObject();
      v28[2] = v16;
      v28[3] = v26;
      v28[4] = v27;
      return;
    }
  }
  else
  {
    sub_1DCDB40EC((uint64_t)v29 - v12);
    uint64_t v18 = sub_1DD048048();
    os_log_type_t v19 = sub_1DD048858();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1DCCF9000, v18, v19, "Error: provided feature size not equal to EncryptedSearchLTRInput size", v20, 2u);
      MEMORY[0x1E01B07E0](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    sub_1DCDE6F94();
    os_log_type_t v15 = (void *)swift_allocError();
    *uint64_t v21 = 5;
    swift_willThrow();
  }
  sub_1DCDB40EC((uint64_t)v10);
  id v22 = sub_1DD048048();
  os_log_type_t v23 = sub_1DD048858();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_1DCCF9000, v22, v23, "Error: Unable to create EncryptedSearchLTRInput", v24, 2u);
    MEMORY[0x1E01B07E0](v24, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1DCDE6F94();
  swift_allocError();
  *uint64_t v25 = 5;
  swift_willThrow();
}

uint64_t sub_1DCEEE980(unint64_t a1, uint64_t a2, void *a3)
{
  id v193 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034C8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v182 = (char *)&v170 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v170 - v9;
  uint64_t v11 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  uint64_t v186 = *(char **)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v181 = (double *)((char *)&v170 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  os_log_type_t v15 = (double *)((char *)&v170 - v14);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03E28);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v190 = (uint64_t)&v170 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = type metadata accessor for LandmarkSignals(0);
  uint64_t v197 = *(void *)(v199 - 8);
  MEMORY[0x1F4188790](v199);
  uint64_t v192 = (uint64_t)&v170 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v200 = (uint64_t)&v170 - v20;
  MEMORY[0x1F4188790](v21);
  unint64_t v196 = (unint64_t)&v170 - v22;
  uint64_t v180 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  uint64_t v23 = *(void *)(v180 - 8);
  MEMORY[0x1F4188790](v180);
  uint64_t v201 = (uint64_t *)((char *)&v170 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_1DD048068();
  uint64_t v183 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v188 = (uint64_t)&v170 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  id v29 = (char *)&v170 - v28;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
    sub_1DCDB40EC((uint64_t)&v170 - v28);
    uint64_t v92 = sub_1DD048048();
    os_log_type_t v93 = sub_1DD048858();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v94 = 0;
      _os_log_impl(&dword_1DCCF9000, v92, v93, "Error: Size of landmarkEntities not equal to size of similarityScores", v94, 2u);
      MEMORY[0x1E01B07E0](v94, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v183 + 8))(v29, v25);
    sub_1DCDE6F94();
    unint64_t v95 = (void *)swift_allocError();
    unsigned char *v96 = 2;
    swift_willThrow();
LABEL_121:
    sub_1DCDB40EC(v188);
    unint64_t v165 = sub_1DD048048();
    os_log_type_t v166 = sub_1DD048858();
    if (os_log_type_enabled(v165, v166))
    {
      double v167 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v167 = 0;
      _os_log_impl(&dword_1DCCF9000, v165, v166, "Error: Failed to process landmark signal", v167, 2u);
      MEMORY[0x1E01B07E0](v167, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v188, v25);
    unint64_t v168 = sub_1DCDB8FA4(MEMORY[0x1E4FBC860]);

    return v168;
  }
  float v176 = v10;
  unint64_t v30 = sub_1DCEEDC84(a1, (char *)a2);
  uint64_t v187 = v31;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  unint64_t v203 = sub_1DCDB8FA4(MEMORY[0x1E4FBC860]);
  unint64_t v33 = sub_1DCDB8FE0(v32);
  unint64_t v34 = *(void *)(v30 + 16);
  if (v34 >= 0x19) {
    unint64_t v34 = 25;
  }
  uint64_t v175 = v11;
  unint64_t v198 = v34;
  uint64_t v191 = v3;
  uint64_t v171 = v25;
  unint64_t v177 = v15;
  unint64_t v172 = v30;
  if (!v34)
  {
LABEL_52:
    uint64_t v97 = *(void *)(v33 + 64);
    unint64_t v178 = v33 + 64;
    uint64_t v98 = 1 << *(unsigned char *)(v33 + 32);
    uint64_t v99 = -1;
    if (v98 < 64) {
      uint64_t v99 = ~(-1 << v98);
    }
    unint64_t v100 = v99 & v97;
    int64_t v179 = (unint64_t)(v98 + 63) >> 6;
    uint64_t v189 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v197 + 56);
    uint64_t v201 = (uint64_t *)(v197 + 48);
    *(void *)&long long v194 = v186 + 48;
    unint64_t v173 = (float *)(v187 + 32);
    swift_bridgeObjectRetain();
    int64_t v101 = 0;
    uint64_t v102 = 2 * v198;
    uint64_t v103 = v192;
    unint64_t v174 = v33;
    while (1)
    {
      if (v100)
      {
        unint64_t v196 = (v100 - 1) & v100;
        unint64_t v104 = __clz(__rbit64(v100)) | (v101 << 6);
      }
      else
      {
        BOOL v59 = __OFADD__(v101++, 1);
        if (v59) {
          goto LABEL_142;
        }
        if (v101 >= v179)
        {
LABEL_126:
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          unint64_t v168 = v203;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v168;
        }
        unint64_t v105 = *(void *)(v178 + 8 * v101);
        if (!v105)
        {
          int64_t v106 = v101 + 1;
          if (v101 + 1 >= v179) {
            goto LABEL_126;
          }
          unint64_t v105 = *(void *)(v178 + 8 * v106);
          if (!v105)
          {
            int64_t v106 = v101 + 2;
            if (v101 + 2 >= v179) {
              goto LABEL_126;
            }
            unint64_t v105 = *(void *)(v178 + 8 * v106);
            if (!v105)
            {
              int64_t v106 = v101 + 3;
              if (v101 + 3 >= v179) {
                goto LABEL_126;
              }
              unint64_t v105 = *(void *)(v178 + 8 * v106);
              if (!v105)
              {
                int64_t v106 = v101 + 4;
                if (v101 + 4 >= v179) {
                  goto LABEL_126;
                }
                unint64_t v105 = *(void *)(v178 + 8 * v106);
                if (!v105)
                {
                  int64_t v106 = v101 + 5;
                  if (v101 + 5 >= v179) {
                    goto LABEL_126;
                  }
                  unint64_t v105 = *(void *)(v178 + 8 * v106);
                  if (!v105)
                  {
                    while (1)
                    {
                      int64_t v101 = v106 + 1;
                      if (__OFADD__(v106, 1)) {
                        goto LABEL_143;
                      }
                      if (v101 >= v179) {
                        goto LABEL_126;
                      }
                      unint64_t v105 = *(void *)(v178 + 8 * v101);
                      ++v106;
                      if (v105) {
                        goto LABEL_72;
                      }
                    }
                  }
                }
              }
            }
          }
          int64_t v101 = v106;
        }
LABEL_72:
        unint64_t v196 = (v105 - 1) & v105;
        unint64_t v104 = __clz(__rbit64(v105)) + (v101 << 6);
      }
      uint64_t v107 = (uint64_t *)(*(void *)(v33 + 48) + 16 * v104);
      uint64_t v109 = *v107;
      uint64_t v108 = v107[1];
      swift_bridgeObjectRetain();
      uint64_t v110 = sub_1DD0486F8();
      *(void *)(v110 + 16) = 53;
      *(_OWORD *)(v110 + 32) = 0u;
      uint64_t v111 = (_DWORD *)(v110 + 32);
      *(_OWORD *)(v110 + 48) = 0u;
      *(_OWORD *)(v110 + 64) = 0u;
      *(_OWORD *)(v110 + 80) = 0u;
      *(_OWORD *)(v110 + 96) = 0u;
      *(_OWORD *)(v110 + 112) = 0u;
      *(_OWORD *)(v110 + 128) = 0u;
      *(_OWORD *)(v110 + 144) = 0u;
      *(_OWORD *)(v110 + 160) = 0u;
      *(_OWORD *)(v110 + 176) = 0u;
      *(_OWORD *)(v110 + 192) = 0u;
      *(_OWORD *)(v110 + 208) = 0u;
      *(_OWORD *)(v110 + 224) = 0u;
      *(_DWORD *)(v110 + 240) = 0;
      unint64_t v112 = v203;
      if (!*(void *)(v203 + 16))
      {
        uint64_t v116 = v190;
        (*v189)(v190, 1, 1, v199);
LABEL_116:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DCD2479C(v116, &qword_1EAB03E28);
LABEL_120:
        uint64_t v25 = v171;
        sub_1DCDE6F94();
        unint64_t v95 = (void *)swift_allocError();
        *float v164 = 4;
        swift_willThrow();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_121;
      }
      swift_bridgeObjectRetain();
      uint64_t v200 = v109;
      unint64_t v113 = sub_1DCEAD1A4(v109, v108);
      int64_t v195 = v101;
      if (v114)
      {
        uint64_t v115 = *(void *)(v112 + 56) + *(void *)(v197 + 72) * v113;
        uint64_t v116 = v190;
        sub_1DCEEC33C(v115, v190, type metadata accessor for LandmarkSignals);
        uint64_t v117 = 0;
      }
      else
      {
        uint64_t v117 = 1;
        uint64_t v116 = v190;
      }
      uint64_t v118 = v199;
      (*v189)(v116, v117, 1, v199);
      swift_bridgeObjectRelease();
      uint64_t v119 = (char *)*v201;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v201)(v116, 1, v118) == 1) {
        goto LABEL_116;
      }
      sub_1DCEF02AC(v116, v103, type metadata accessor for LandmarkSignals);
      if (!*(void *)(v33 + 16)) {
        goto LABEL_119;
      }
      swift_bridgeObjectRetain();
      unint64_t v120 = sub_1DCEAD1A4(v200, v108);
      if ((v121 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_119:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DCEEC2DC(v103, type metadata accessor for LandmarkSignals);
        swift_bridgeObjectRelease();
        goto LABEL_120;
      }
      uint64_t v122 = *(void *)(*(void *)(v33 + 56) + 8 * v120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v123 = *(void *)(v110 + 16);
      if (!v123) {
        goto LABEL_137;
      }
      _DWORD *v111 = *(_DWORD *)(v103 + 32);
      if (v123 == 1) {
        goto LABEL_138;
      }
      *(_DWORD *)(v110 + 36) = *(_DWORD *)(v103 + 36);
      if (!v193) {
        goto LABEL_90;
      }
      uint64_t v186 = v119;
      uint64_t v184 = v103 + *(int *)(v180 + 40);
      uint64_t v124 = (uint64_t)v176;
      sub_1DCD2889C(v184, (uint64_t)v176, &qword_1EAB034C8);
      uint64_t v125 = v175;
      uint64_t v185 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))v194;
      if (v185(v124, 1, v175) == 1)
      {
        unint64_t v126 = v177;
        *unint64_t v177 = 0.0;
        v126[1] = 0.0;
        v126[2] = 0.0;
        v126[3] = -2.68156159e154;
        id v127 = v193;
        sub_1DD047BE8();
        uint64_t v128 = (char *)v126 + *(int *)(v125 + 32);
        uint64_t v129 = sub_1DD047B68();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56))(v128, 1, 1, v129);
        sub_1DCD2479C(v124, &qword_1EAB034C8);
      }
      else
      {
        unint64_t v126 = v177;
        sub_1DCEF02AC(v124, (uint64_t)v177, type metadata accessor for Com_Apple_Visualintelligence_LocationPoint);
        id v131 = v193;
      }
      uint64_t v130 = (uint64_t)v182;
      double v132 = *v126;
      sub_1DCEEC2DC((uint64_t)v126, type metadata accessor for Com_Apple_Visualintelligence_LocationPoint);
      sub_1DCD2889C(v184, v130, &qword_1EAB034C8);
      if (v185(v130, 1, v125) == 1)
      {
        double v133 = v181;
        double *v181 = 0.0;
        v133[1] = 0.0;
        v133[2] = 0.0;
        v133[3] = -2.68156159e154;
        sub_1DD047BE8();
        uint64_t v134 = (char *)v133 + *(int *)(v125 + 32);
        uint64_t v135 = sub_1DD047B68();
        uint64_t v136 = v134;
        uint64_t v137 = v133;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v136, 1, 1, v135);
        sub_1DCD2479C(v130, &qword_1EAB034C8);
      }
      else
      {
        uint64_t v137 = v181;
        sub_1DCEF02AC(v130, (uint64_t)v181, type metadata accessor for Com_Apple_Visualintelligence_LocationPoint);
      }
      uint64_t v103 = v192;
      uint64_t v119 = v186;
      double v138 = v137[1];
      sub_1DCEEC2DC((uint64_t)v137, type metadata accessor for Com_Apple_Visualintelligence_LocationPoint);
      id v139 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E5F0]), sel_initWithLatitude_longitude_, v132, v138);
      id v140 = v193;
      objc_msgSend(v139, sel_distanceFromLocation_, v193);
      double v142 = v141;

      float v143 = 0.0;
      unint64_t v33 = v174;
      if (v142 < 20000.0) {
LABEL_90:
      }
        float v143 = 1.0;
      if (*(void *)(v110 + 16) < 3uLL) {
        goto LABEL_139;
      }
      *(float *)(v110 + 40) = v143;
      if (v198)
      {
        if (v198 > *(void *)(v187 + 16)) {
          goto LABEL_141;
        }
        uint64_t v144 = 0;
        uint64_t v145 = v173;
        do
        {
          if ((unint64_t)(v144 + 4) >= *(void *)(v110 + 16))
          {
            __break(1u);
            goto LABEL_128;
          }
          float v146 = *v145++;
          *(float *)(v110 + 48 + 4 * v144) = v146 * 10.0;
          v144 += 2;
        }
        while (v102 != v144);
        uint64_t v147 = *(void *)(v122 + 16);
        if (v147) {
          goto LABEL_100;
        }
      }
      else
      {
        uint64_t v147 = *(void *)(v122 + 16);
        if (v147)
        {
LABEL_100:
          uint64_t v148 = (uint64_t *)(v122 + 32);
          while (1)
          {
            uint64_t v150 = *v148++;
            uint64_t v149 = v150;
            if (v150 + 0x4000000000000000 < 0) {
              break;
            }
            uint64_t v151 = 2 * v149;
            BOOL v59 = __OFADD__(v151, 3);
            unint64_t v152 = v151 + 3;
            if (v59) {
              goto LABEL_129;
            }
            if ((v152 & 0x8000000000000000) != 0) {
              goto LABEL_130;
            }
            if (v152 >= *(void *)(v110 + 16)) {
              goto LABEL_131;
            }
            v111[v152] = 1065353216;
            if (!--v147) {
              goto LABEL_106;
            }
          }
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
      }
LABEL_106:
      swift_bridgeObjectRelease();
      float v153 = v191;
      sub_1DCEEE640(v110, 1, 53);
      uint64_t v191 = v153;
      if (v153)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DCEEC2DC(v103, type metadata accessor for LandmarkSignals);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v95 = v191;
        uint64_t v25 = v171;
        goto LABEL_121;
      }
      uint64_t v155 = v154;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v156 = v200;
      unint64_t v157 = sub_1DCEE8A90(&v202, v200, v108);
      uint64_t v159 = v158;
      uint64_t v160 = v199;
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v119)(v158, 1, v199))
      {
        *(void *)(v159 + *(int *)(v160 + 20)) = v155;
        swift_retain();
        swift_release();
      }
      ((void (*)(void **, void))v157)(&v202, 0);
      swift_bridgeObjectRelease();
      unint64_t v161 = sub_1DCEE8A90(&v202, v156, v108);
      uint64_t v163 = v162;
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v119)(v162, 1, v160)) {
        *(unsigned char *)(v163 + *(int *)(v160 + 24)) = v143 == 1.0;
      }
      ((void (*)(void **, void))v161)(&v202, 0);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v103 = v192;
      sub_1DCEEC2DC(v192, type metadata accessor for LandmarkSignals);
      int64_t v101 = v195;
      unint64_t v100 = v196;
    }
  }
  uint64_t v35 = 0;
  uint64_t v36 = v30 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  int64_t v195 = *(void *)(v23 + 72);
  long long v194 = xmmword_1DD04E910;
  unint64_t v37 = v201;
  while (1)
  {
    sub_1DCEEC33C(v36, (uint64_t)v37, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
    uint64_t v41 = *v37;
    uint64_t v40 = v37[1];
    uint64_t v42 = (uint64_t)v37;
    uint64_t v43 = v196;
    sub_1DCEEC33C(v42, v196, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
    uint64_t v45 = v199;
    uint64_t v44 = v200;
    *(void *)(v43 + *(int *)(v199 + 20)) = 0;
    *(unsigned char *)(v43 + *(int *)(v45 + 24)) = 0;
    sub_1DCEF02AC(v43, v44, type metadata accessor for LandmarkSignals);
    swift_bridgeObjectRetain();
    unint64_t v46 = v203;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v202 = (void *)v46;
    unint64_t v49 = sub_1DCEAD1A4(v41, v40);
    uint64_t v50 = *(void *)(v46 + 16);
    BOOL v51 = (v48 & 1) == 0;
    uint64_t v52 = v50 + v51;
    if (__OFADD__(v50, v51)) {
      break;
    }
    char v53 = v48;
    if (*(void *)(v46 + 24) >= v52)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v56 = v202;
        if (v48) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_1DCE892A0();
        uint64_t v56 = v202;
        if (v53) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      sub_1DCE7F580(v52, isUniquelyReferenced_nonNull_native);
      unint64_t v54 = sub_1DCEAD1A4(v41, v40);
      if ((v53 & 1) != (v55 & 1)) {
        goto LABEL_144;
      }
      unint64_t v49 = v54;
      uint64_t v56 = v202;
      if (v53)
      {
LABEL_16:
        sub_1DCEF0334(v200, v56[7] + *(void *)(v197 + 72) * v49);
        goto LABEL_17;
      }
    }
    v56[(v49 >> 6) + 8] |= 1 << v49;
    uint64_t v57 = (uint64_t *)(v56[6] + 16 * v49);
    *uint64_t v57 = v41;
    v57[1] = v40;
    sub_1DCEF02AC(v200, v56[7] + *(void *)(v197 + 72) * v49, type metadata accessor for LandmarkSignals);
    uint64_t v58 = v56[2];
    BOOL v59 = __OFADD__(v58, 1);
    uint64_t v60 = v58 + 1;
    if (v59) {
      goto LABEL_134;
    }
    v56[2] = v60;
    swift_bridgeObjectRetain();
LABEL_17:
    unint64_t v203 = (unint64_t)v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v61 = *v201;
    uint64_t v62 = v201[1];
    if (*(void *)(v33 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v63 = sub_1DCEAD1A4(v61, v62);
      if (v64)
      {
        BOOL v65 = *(void **)(*(void *)(v33 + 56) + 8 * v63);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v65 = sub_1DCE9E068(0, v65[2] + 1, 1, v65);
        }
        unint64_t v67 = v65[2];
        unint64_t v66 = v65[3];
        if (v67 >= v66 >> 1) {
          BOOL v65 = sub_1DCE9E068((void *)(v66 > 1), v67 + 1, 1, v65);
        }
        v65[2] = v67 + 1;
        v65[v67 + 4] = v35;
        swift_bridgeObjectRetain();
        unint64_t v68 = v33;
        char v69 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v202 = (void *)v68;
        unint64_t v71 = sub_1DCEAD1A4(v61, v62);
        uint64_t v72 = *(void *)(v68 + 16);
        BOOL v73 = (v70 & 1) == 0;
        uint64_t v74 = v72 + v73;
        if (__OFADD__(v72, v73)) {
          goto LABEL_136;
        }
        char v75 = v70;
        if (*(void *)(v68 + 24) >= v74)
        {
          if (v69)
          {
            unint64_t v33 = (unint64_t)v202;
            if ((v70 & 1) == 0) {
              goto LABEL_41;
            }
          }
          else
          {
            sub_1DCE89548();
            unint64_t v33 = (unint64_t)v202;
            if ((v75 & 1) == 0) {
              goto LABEL_41;
            }
          }
        }
        else
        {
          sub_1DCE7F968(v74, v69);
          unint64_t v76 = sub_1DCEAD1A4(v61, v62);
          if ((v75 & 1) != (v77 & 1)) {
            goto LABEL_144;
          }
          unint64_t v71 = v76;
          unint64_t v33 = (unint64_t)v202;
          if ((v75 & 1) == 0)
          {
LABEL_41:
            *(void *)(v33 + 8 * (v71 >> 6) + 64) |= 1 << v71;
            float v90 = (uint64_t *)(*(void *)(v33 + 48) + 16 * v71);
            *float v90 = v61;
            v90[1] = v62;
            *(void *)(*(void *)(v33 + 56) + 8 * v71) = v65;
            uint64_t v91 = *(void *)(v33 + 16);
            BOOL v59 = __OFADD__(v91, 1);
            uint64_t v89 = v91 + 1;
            if (v59) {
              goto LABEL_140;
            }
LABEL_42:
            *(void *)(v33 + 16) = v89;
            swift_bridgeObjectRetain();
            goto LABEL_7;
          }
        }
        goto LABEL_6;
      }
      swift_bridgeObjectRelease();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851F8);
    BOOL v65 = (void *)swift_allocObject();
    *((_OWORD *)v65 + 1) = v194;
    v65[4] = v35;
    swift_bridgeObjectRetain();
    unint64_t v78 = v33;
    char v79 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v202 = (void *)v78;
    unint64_t v71 = sub_1DCEAD1A4(v61, v62);
    uint64_t v81 = *(void *)(v78 + 16);
    BOOL v82 = (v80 & 1) == 0;
    uint64_t v83 = v81 + v82;
    if (__OFADD__(v81, v82)) {
      goto LABEL_133;
    }
    char v84 = v80;
    if (*(void *)(v78 + 24) >= v83)
    {
      if (v79)
      {
        unint64_t v33 = (unint64_t)v202;
        if ((v80 & 1) == 0) {
          goto LABEL_36;
        }
      }
      else
      {
        sub_1DCE89548();
        unint64_t v33 = (unint64_t)v202;
        if ((v84 & 1) == 0) {
          goto LABEL_36;
        }
      }
    }
    else
    {
      sub_1DCE7F968(v83, v79);
      unint64_t v85 = sub_1DCEAD1A4(v61, v62);
      if ((v84 & 1) != (v86 & 1)) {
        goto LABEL_144;
      }
      unint64_t v71 = v85;
      unint64_t v33 = (unint64_t)v202;
      if ((v84 & 1) == 0)
      {
LABEL_36:
        *(void *)(v33 + 8 * (v71 >> 6) + 64) |= 1 << v71;
        uint64_t v87 = (uint64_t *)(*(void *)(v33 + 48) + 16 * v71);
        *uint64_t v87 = v61;
        v87[1] = v62;
        *(void *)(*(void *)(v33 + 56) + 8 * v71) = v65;
        uint64_t v88 = *(void *)(v33 + 16);
        BOOL v59 = __OFADD__(v88, 1);
        uint64_t v89 = v88 + 1;
        if (v59) {
          goto LABEL_135;
        }
        goto LABEL_42;
      }
    }
LABEL_6:
    uint64_t v38 = *(void *)(v33 + 56);
    swift_bridgeObjectRelease();
    *(void *)(v38 + 8 * v71) = v65;
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v39 = v198;
    unint64_t v37 = v201;
    ++v35;
    sub_1DCEEC2DC((uint64_t)v201, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
    v36 += v195;
    if (v39 == v35) {
      goto LABEL_52;
    }
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCEEFEE8(uint64_t a1)
{
  uint64_t v2 = sub_1DD0465D8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v39 - v7;
  uint64_t v9 = type metadata accessor for Com_Apple_Visualintelligence_LocalizedName(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)sub_1DCDB8BB4(MEMORY[0x1E4FBC860]);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return (uint64_t)v13;
  }
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  uint64_t v45 = (void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v42 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v16 = *(void *)(v10 + 72);
  uint64_t v40 = v3;
  uint64_t v41 = v16;
  v39[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v43 = v12;
  uint64_t v44 = v8;
  while (1)
  {
    uint64_t v46 = v14;
    sub_1DCEEC33C(v15, (uint64_t)v12, type metadata accessor for Com_Apple_Visualintelligence_LocalizedName);
    swift_bridgeObjectRetain();
    sub_1DD0465A8();
    uint64_t v19 = v12;
    uint64_t v20 = *v45;
    uint64_t v21 = v2;
    (*v45)(v5, v8, v2);
    uint64_t v22 = *((void *)v19 + 2);
    uint64_t v23 = *((void *)v19 + 3);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v47 = v13;
    uint64_t v25 = (uint64_t)v5;
    unint64_t v27 = sub_1DCEAD21C((uint64_t)v5);
    uint64_t v28 = v13[2];
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (v13[3] >= v30)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v13 = v47;
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1DCE89554();
        uint64_t v13 = v47;
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1DCE7F974(v30, isUniquelyReferenced_nonNull_native);
      unint64_t v32 = sub_1DCEAD21C(v25);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      uint64_t v13 = v47;
      if (v31)
      {
LABEL_3:
        uint64_t v17 = (void *)(v13[7] + 16 * v27);
        swift_bridgeObjectRelease();
        *uint64_t v17 = v22;
        v17[1] = v23;
        goto LABEL_4;
      }
    }
    v13[(v27 >> 6) + 8] |= 1 << v27;
    v20((char *)(v13[6] + *(void *)(v40 + 72) * v27), (char *)v25, v21);
    unint64_t v34 = (void *)(v13[7] + 16 * v27);
    *unint64_t v34 = v22;
    v34[1] = v23;
    uint64_t v35 = v13[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v13[2] = v37;
LABEL_4:
    swift_bridgeObjectRelease();
    uint64_t v18 = *v42;
    uint64_t v5 = (char *)v25;
    uint64_t v2 = v21;
    (*v42)(v25, v21);
    uint64_t v8 = v44;
    v18((uint64_t)v44, v21);
    uint64_t v12 = v43;
    sub_1DCEEC2DC((uint64_t)v43, type metadata accessor for Com_Apple_Visualintelligence_LocalizedName);
    v15 += v41;
    uint64_t v14 = v46 - 1;
    if (v46 == 1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCEF02AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for LandmarkSignals(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EAB03E40);
}

uint64_t sub_1DCEF0334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LandmarkSignals(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCEF0398(uint64_t a1)
{
  return a1;
}

void *sub_1DCEF03D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    a1[4] = a2[4];
    a1[5] = a2[5];
    uint64_t v8 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
    uint64_t v9 = *(int *)(v8 + 36);
    char v33 = (char *)v4 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = v11;
    v12(v33, v10, v11);
    uint64_t v13 = *(int *)(v8 + 40);
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034C8);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      uint64_t v20 = v15[3];
      v14[2] = v15[2];
      v14[3] = v20;
      uint64_t v21 = *(int *)(v16 + 28);
      uint64_t v22 = (char *)v14 + v21;
      uint64_t v23 = (char *)v15 + v21;
      swift_bridgeObjectRetain();
      v12(v22, v23, v32);
      uint64_t v24 = *(int *)(v16 + 32);
      uint64_t v25 = (char *)v14 + v24;
      char v26 = (char *)v15 + v24;
      uint64_t v27 = sub_1DD047B68();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034D8);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v30 = *(int *)(a3 + 24);
    *(void *)((char *)v4 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)v4 + v30) = *((unsigned char *)a2 + v30);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DCEF06EC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  uint64_t v3 = a1 + *(int *)(v2 + 36);
  uint64_t v4 = sub_1DD047BF8();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = a1 + *(int *)(v2 + 40);
  uint64_t v7 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v5(v6 + *(int *)(v7 + 28), v4);
    uint64_t v8 = v6 + *(int *)(v7 + 32);
    uint64_t v9 = sub_1DD047B68();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  return swift_release();
}

void *sub_1DCEF0890(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  a1[5] = a2[5];
  uint64_t v7 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  uint64_t v8 = *(int *)(v7 + 36);
  char v31 = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_1DD047BF8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v30 = v10;
  v11(v31, v9, v10);
  uint64_t v12 = *(int *)(v7 + 40);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034C8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    uint64_t v18 = v14[3];
    v13[2] = v14[2];
    v13[3] = v18;
    uint64_t v19 = *(int *)(v15 + 28);
    uint64_t v20 = (char *)v13 + v19;
    uint64_t v21 = (char *)v14 + v19;
    swift_bridgeObjectRetain();
    v11(v20, v21, v30);
    uint64_t v22 = *(int *)(v15 + 32);
    uint64_t v23 = (char *)v13 + v22;
    uint64_t v24 = (char *)v14 + v22;
    uint64_t v25 = sub_1DD047B68();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034D8);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v28 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  swift_retain();
  return a1;
}

uint64_t sub_1DCEF0B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  uint64_t v6 = *(int *)(v5 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 24);
  uint64_t v44 = v9;
  v11(v7, v8);
  uint64_t v12 = *(int *)(v5 + 40);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v46 = a2;
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  uint64_t v43 = *(void *)(v15 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
  uint64_t v17 = v13;
  LODWORD(v13) = v16(v13, 1, v15);
  int v18 = v16(v14, 1, v15);
  if (!v13)
  {
    if (v18)
    {
      sub_1DCEEC2DC((uint64_t)v17, type metadata accessor for Com_Apple_Visualintelligence_LocationPoint);
      goto LABEL_7;
    }
    *uint64_t v17 = *v14;
    v17[1] = v14[1];
    v17[2] = v14[2];
    v17[3] = v14[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v11)((char *)v17 + *(int *)(v15 + 28), (char *)v14 + *(int *)(v15 + 28), v44);
    uint64_t v33 = *(int *)(v15 + 32);
    unint64_t v34 = (char *)v17 + v33;
    uint64_t v35 = (char *)v14 + v33;
    uint64_t v36 = sub_1DD047B68();
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
    int v39 = v38(v34, 1, v36);
    int v40 = v38(v35, 1, v36);
    if (v39)
    {
      uint64_t v29 = v46;
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
LABEL_16:
        uint64_t v32 = a3;
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v29 = v46;
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v34, v35, v36);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
    }
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034D8);
    memcpy(v34, v35, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_16;
  }
  if (v18)
  {
LABEL_7:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034C8);
    memcpy(v17, v14, *(void *)(*(void *)(v31 - 8) + 64));
    uint64_t v32 = a3;
    uint64_t v29 = v46;
    goto LABEL_17;
  }
  uint64_t v19 = v17;
  *uint64_t v17 = *v14;
  v17[1] = v14[1];
  v17[2] = v14[2];
  v17[3] = v14[3];
  uint64_t v20 = *(int *)(v15 + 28);
  uint64_t v21 = (char *)v17 + v20;
  uint64_t v22 = (char *)v14 + v20;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  v23(v21, v22, v44);
  uint64_t v24 = *(int *)(v15 + 32);
  uint64_t v25 = (char *)v17 + v24;
  uint64_t v26 = (char *)v14 + v24;
  uint64_t v27 = sub_1DD047B68();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = v46;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034D8);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v32 = a3;
  (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v19, 0, 1, v15);
LABEL_17:
  *(void *)(a1 + *(int *)(v32 + 20)) = *(void *)(v29 + *(int *)(v32 + 20));
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + *(int *)(v32 + 24)) = *(unsigned char *)(v29 + *(int *)(v32 + 24));
  return a1;
}

uint64_t sub_1DCEF107C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  uint64_t v8 = *(int *)(v7 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1DD047BF8();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(v7 + 40);
  uint64_t v14 = (_OWORD *)(a1 + v13);
  uint64_t v15 = (_OWORD *)(a2 + v13);
  uint64_t v16 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034C8);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    long long v19 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v19;
    v12((uint64_t)v14 + *(int *)(v16 + 28), (uint64_t)v15 + *(int *)(v16 + 28), v11);
    uint64_t v20 = *(int *)(v16 + 32);
    uint64_t v21 = (char *)v14 + v20;
    uint64_t v22 = (char *)v15 + v20;
    uint64_t v23 = sub_1DD047B68();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034D8);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v26 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  return a1;
}

void *sub_1DCEF1300(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(0);
  uint64_t v8 = *(int *)(v7 + 36);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1DD047BF8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, char *))(v12 + 40);
  uint64_t v44 = v11;
  v13(v9, v10);
  uint64_t v14 = *(int *)(v7 + 40);
  uint64_t v15 = (_OWORD *)((char *)a1 + v14);
  uint64_t v46 = a2;
  uint64_t v16 = (_OWORD *)((char *)a2 + v14);
  uint64_t v17 = type metadata accessor for Com_Apple_Visualintelligence_LocationPoint(0);
  uint64_t v43 = *(void *)(v17 - 8);
  uint64_t v18 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v43 + 48);
  long long v19 = v15;
  LODWORD(v15) = v18(v15, 1, v17);
  int v20 = v18(v16, 1, v17);
  if (!v15)
  {
    if (v20)
    {
      sub_1DCEEC2DC((uint64_t)v19, type metadata accessor for Com_Apple_Visualintelligence_LocationPoint);
      goto LABEL_7;
    }
    *long long v19 = *v16;
    uint64_t v32 = *((void *)v16 + 3);
    *((void *)v19 + 2) = *((void *)v16 + 2);
    *((void *)v19 + 3) = v32;
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v13)((char *)v19 + *(int *)(v17 + 28), (char *)v16 + *(int *)(v17 + 28), v44);
    uint64_t v33 = *(int *)(v17 + 32);
    unint64_t v34 = (char *)v19 + v33;
    uint64_t v35 = (char *)v16 + v33;
    uint64_t v36 = sub_1DD047B68();
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
    int v39 = v38(v34, 1, v36);
    int v40 = v38(v35, 1, v36);
    if (v39)
    {
      uint64_t v30 = v46;
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
LABEL_16:
        uint64_t v31 = a3;
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v30 = v46;
      if (!v40)
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 40))(v34, v35, v36);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
    }
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034D8);
    memcpy(v34, v35, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_16;
  }
  if (v20)
  {
LABEL_7:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034C8);
    memcpy(v19, v16, *(void *)(*(void *)(v29 - 8) + 64));
    uint64_t v31 = a3;
    uint64_t v30 = v46;
    goto LABEL_17;
  }
  long long v21 = v16[1];
  uint64_t v22 = v19;
  *long long v19 = *v16;
  v19[1] = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))((char *)v19 + *(int *)(v17 + 28), (char *)v16 + *(int *)(v17 + 28), v44);
  uint64_t v23 = *(int *)(v17 + 32);
  uint64_t v24 = (char *)v19 + v23;
  uint64_t v25 = (char *)v16 + v23;
  uint64_t v26 = sub_1DD047B68();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB034D8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v31 = a3;
  uint64_t v30 = v46;
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v43 + 56))(v22, 0, 1, v17);
LABEL_17:
  *(void *)((char *)a1 + *(int *)(v31 + 20)) = *(void *)((char *)v30 + *(int *)(v31 + 20));
  swift_release();
  *((unsigned char *)a1 + *(int *)(v31 + 24)) = *((unsigned char *)v30 + *(int *)(v31 + 24));
  return a1;
}

uint64_t sub_1DCEF17A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCEF17B8);
}

uint64_t sub_1DCEF17B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
}

uint64_t sub_1DCEF17D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCEF17E4);
}

uint64_t sub_1DCEF17E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet);
}

uint64_t sub_1DCEF17FC()
{
  uint64_t result = type metadata accessor for Com_Apple_Visualintelligence_LandmarkSnippet(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RerankerError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RerankerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCEF19F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RerankerError()
{
  return &type metadata for RerankerError;
}

uint64_t *sub_1DCEF1A30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    unsigned int v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
    *(uint64_t *)((char *)v4 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DCEF1B18(uint64_t a1)
{
  uint64_t v2 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  swift_release();
  return swift_release();
}

uint64_t sub_1DCEF1BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1DCEF1C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_retain();
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1DCEF1CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1DCEF1D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(0);
  *(void *)(a1 + *(int *)(v7 + 20)) = *(void *)(a2 + *(int *)(v7 + 20));
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_1DCEF1E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCEF1E30);
}

uint64_t sub_1DCEF1E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    int v12 = v11 - 1;
    if (v12 < 0) {
      int v12 = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1DCEF1F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCEF1F2C);
}

uint64_t sub_1DCEF1F2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5(0);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t sub_1DCEF2004()
{
  uint64_t result = type metadata accessor for Com_Apple_Visualintelligence_StorefrontPoi(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1DCEF209C()
{
  unint64_t result = qword_1EAB03E60;
  if (!qword_1EAB03E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03E60);
  }
  return result;
}

unint64_t sub_1DCEF20F0()
{
  unint64_t result = qword_1EAB03E68;
  if (!qword_1EAB03E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB03E68);
  }
  return result;
}

unint64_t sub_1DCEF2144(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t *sub_1DCEF2158(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    unint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1DD047BF8();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(a3 + 28);
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v21 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v21))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
        memcpy(v15, v16, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v72 = v21;
        uint64_t v73 = v22;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          char v64 = v13;
          uint64_t v24 = v16[1];
          *uint64_t v15 = *v16;
          v15[1] = v24;
          *((unsigned char *)v15 + 16) = *((unsigned char *)v16 + 16);
          uint64_t v70 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
          uint64_t v25 = *(int *)(v70 + 24);
          unint64_t v66 = (void *)((char *)v15 + v25);
          uint64_t v26 = (void *)((char *)v16 + v25);
          uint64_t v27 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
          __dst = *(void **)(v27 - 8);
          uint64_t v62 = (unsigned int (*)(void *, uint64_t, uint64_t))__dst[6];
          swift_bridgeObjectRetain();
          unint64_t v68 = v26;
          if (v62(v26, 1, v27))
          {
            uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
            memcpy(v66, v26, *(void *)(*(void *)(v28 - 8) + 64));
            uint64_t v29 = v70;
            uint64_t v13 = v64;
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v13 = v64;
            void *v66 = *v68;
            if (EnumCaseMultiPayload == 1) {
              uint64_t v41 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
            }
            else {
              uint64_t v41 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
            }
            uint64_t v42 = *(int *)(v41 + 20);
            uint64_t v56 = (char *)v66 + v42;
            char v69 = (char *)v68 + v42;
            swift_bridgeObjectRetain();
            v64(v56, v69, v12);
            swift_storeEnumTagMultiPayload();
            ((void (*)(void *, void, uint64_t, uint64_t))__dst[7])(v66, 0, 1, v27);
            uint64_t v29 = v70;
          }
        }
        else
        {
          *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
          uint64_t v71 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
          uint64_t v30 = *(int *)(v71 + 24);
          unint64_t v67 = (void *)((char *)v15 + v30);
          uint64_t v31 = (void *)((char *)v16 + v30);
          uint64_t v32 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
          uint64_t v65 = *(void *)(v32 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v65 + 48))(v31, 1, v32))
          {
            uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
            memcpy(v67, v31, *(void *)(*(void *)(v33 - 8) + 64));
          }
          else
          {
            uint64_t v63 = v32;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v13((char *)v67, (char *)v31, v12);
              __dsta = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
              uint64_t v35 = __dsta[5];
              unint64_t v54 = (_OWORD *)((char *)v67 + v35);
              uint64_t v36 = (_OWORD *)((char *)v31 + v35);
              uint64_t v37 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
              uint64_t v53 = *(void *)(v37 - 8);
              uint64_t v55 = v37;
              uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
              if (((unsigned int (*)(_OWORD *, uint64_t))v57)(v36, 1))
              {
                uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                memcpy(v54, v36, *(void *)(*(void *)(v38 - 8) + 64));
                int v39 = (char *)v31;
                int v40 = v67;
              }
              else
              {
                *unint64_t v54 = *v36;
                v13((char *)v54 + *(int *)(v55 + 24), (char *)v36 + *(int *)(v55 + 24), v12);
                (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v55);
                int v40 = v67;
                int v39 = (char *)v31;
              }
              uint64_t v46 = __dsta[6];
              __dstb = (_OWORD *)((char *)v40 + v46);
              uint64_t v47 = &v39[v46];
              if (v57(&v39[v46], 1, v55))
              {
                uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                memcpy(__dstb, v47, *(void *)(*(void *)(v48 - 8) + 64));
              }
              else
              {
                _OWORD *__dstb = *(_OWORD *)v47;
                v13((char *)__dstb + *(int *)(v55 + 24), &v47[*(int *)(v55 + 24)], v12);
                (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v53 + 56))(__dstb, 0, 1, v55);
              }
              uint64_t v43 = v67;
            }
            else
            {
              uint64_t v43 = v67;
              void *v67 = *v31;
              uint64_t v44 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                           + 20);
              uint64_t v58 = (char *)v67 + v44;
              uint64_t v45 = (char *)v31 + v44;
              swift_bridgeObjectRetain();
              v13(v58, v45, v12);
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v43, 0, 1, v63);
          }
          uint64_t v29 = v71;
          uint64_t v21 = v72;
        }
        uint64_t v49 = *(int *)(v29 + 28);
        uint64_t v50 = (char *)v15 + v49;
        BOOL v51 = (char *)v16 + v49;
        *(void *)uint64_t v50 = *(void *)v51;
        v50[8] = v51[8];
        v13((char *)v15 + *(int *)(v29 + 32), (char *)v16 + *(int *)(v29 + 32), v12);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(v15, 0, 1, v21);
      }
      *((unsigned char *)v15 + *(int *)(v17 + 20)) = *((unsigned char *)v16 + *(int *)(v17 + 20));
      v13((char *)v15 + *(int *)(v17 + 24), (char *)v16 + *(int *)(v17 + 24), v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t type metadata accessor for Argos_Protos_MLModel_FeatureType(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85B50);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85B18);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85D70);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85D40);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85CE8);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(uint64_t a1)
{
  return sub_1DCD27FD4(a1, qword_1EBE85CF8);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_SizeRange(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85AD0);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85CD0);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85CA0);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85C88);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85C78);
}

uint64_t sub_1DCEF2A94(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v22(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (result) {
    return result;
  }
  uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v11 = v6 + *(int *)(v10 + 24);
      uint64_t v12 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (EnumCaseMultiPayload == 1) {
          uint64_t v14 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
        }
        else {
          uint64_t v14 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
        }
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v11 = v6 + *(int *)(v10 + 24);
      uint64_t v15 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v11, 1, v15))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v22(v11, v5);
          uint64_t v16 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v17 = v11 + *(int *)(v16 + 20);
          uint64_t v18 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
          if (!v19(v17, 1, v18)) {
            v22(v17 + *(int *)(v18 + 24), v5);
          }
          v11 += *(int *)(v16 + 24);
          if (v19(v11, 1, v18)) {
            goto LABEL_17;
          }
          uint64_t v20 = *(int *)(v18 + 24);
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        uint64_t v14 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
LABEL_15:
        uint64_t v20 = *(int *)(v14 + 20);
LABEL_16:
        v22(v11 + v20, v5);
      }
    }
LABEL_17:
    v22(v6 + *(int *)(v10 + 32), v5);
  }
  uint64_t v21 = v6 + *(int *)(v7 + 24);
  return ((uint64_t (*)(uint64_t, uint64_t))v22)(v21, v5);
}

void *sub_1DCEF2E28(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1DD047BF8();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
      memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v71 = v19;
      uint64_t v72 = v20;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v62 = v12;
        uint64_t v22 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v22;
        *((unsigned char *)v14 + 16) = *((unsigned char *)v15 + 16);
        uint64_t v69 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
        uint64_t v23 = *(int *)(v69 + 24);
        char v64 = (void *)((char *)v14 + v23);
        uint64_t v24 = (void *)((char *)v15 + v23);
        uint64_t v25 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
        uint64_t v57 = *(void **)(v25 - 8);
        uint64_t v60 = (unsigned int (*)(void *, uint64_t, uint64_t))v57[6];
        swift_bridgeObjectRetain();
        unint64_t v66 = v24;
        if (v60(v24, 1, v25))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
          memcpy(v64, v24, *(void *)(*(void *)(v26 - 8) + 64));
          uint64_t v27 = v69;
          uint64_t v12 = v62;
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v12 = v62;
          *char v64 = *v66;
          if (EnumCaseMultiPayload == 1) {
            uint64_t v40 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
          }
          else {
            uint64_t v40 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
          }
          uint64_t v41 = *(int *)(v40 + 20);
          unint64_t v54 = (char *)v64 + v41;
          unint64_t v68 = (char *)v66 + v41;
          swift_bridgeObjectRetain();
          v62(v54, v68, v11);
          swift_storeEnumTagMultiPayload();
          ((void (*)(void *, void, uint64_t, uint64_t))v57[7])(v64, 0, 1, v25);
          uint64_t v27 = v69;
        }
      }
      else
      {
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        uint64_t v28 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
        uint64_t v29 = *(int *)(v28 + 24);
        unint64_t v67 = (void *)((char *)v14 + v29);
        uint64_t v70 = v28;
        uint64_t v30 = (char *)v15 + v29;
        uint64_t v31 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
        uint64_t v63 = *(void *)(v31 - 8);
        uint64_t v65 = v30;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v30, 1, v31))
        {
          uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
          memcpy(v67, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          uint64_t v61 = v31;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v12((char *)v67, v30, v11);
            uint64_t v55 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
            uint64_t v34 = *(int *)(v55 + 20);
            __dst = (_OWORD *)((char *)v67 + v34);
            uint64_t v35 = &v30[v34];
            uint64_t v36 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
            uint64_t v37 = *(void *)(v36 - 8);
            uint64_t v58 = (int *)v36;
            uint64_t v53 = *(unsigned int (**)(char *, uint64_t, int *))(v37 + 48);
            uint64_t v51 = v37;
            if (((unsigned int (*)(char *, uint64_t))v53)(v35, 1))
            {
              uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(__dst, v35, *(void *)(*(void *)(v38 - 8) + 64));
              int v39 = v58;
            }
            else
            {
              _OWORD *__dst = *(_OWORD *)v35;
              v12((char *)__dst + v58[6], &v35[v58[6]], v11);
              int v39 = v58;
              (*(void (**)(_OWORD *, void, uint64_t, int *))(v37 + 56))(__dst, 0, 1, v58);
            }
            uint64_t v44 = *(int *)(v55 + 24);
            BOOL v59 = (_OWORD *)((char *)v67 + v44);
            uint64_t v45 = &v65[v44];
            if (v53(&v65[v44], 1, v39))
            {
              uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(v59, v45, *(void *)(*(void *)(v46 - 8) + 64));
            }
            else
            {
              *BOOL v59 = *(_OWORD *)v45;
              v12((char *)v59 + v39[6], &v45[v39[6]], v11);
              (*(void (**)(_OWORD *, void, uint64_t, int *))(v51 + 56))(v59, 0, 1, v39);
            }
          }
          else
          {
            void *v67 = *(void *)v30;
            uint64_t v42 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                         + 20);
            uint64_t v56 = (char *)v67 + v42;
            uint64_t v43 = &v30[v42];
            swift_bridgeObjectRetain();
            v12(v56, v43, v11);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v67, 0, 1, v61);
        }
        uint64_t v27 = v70;
        uint64_t v19 = v71;
      }
      uint64_t v47 = *(int *)(v27 + 28);
      uint64_t v48 = (char *)v14 + v47;
      uint64_t v49 = (char *)v15 + v47;
      *(void *)uint64_t v48 = *(void *)v49;
      v48[8] = v49[8];
      v12((char *)v14 + *(int *)(v27 + 32), (char *)v15 + *(int *)(v27 + 32), v11);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v72 + 56))(v14, 0, 1, v19);
    }
    *((unsigned char *)v14 + *(int *)(v16 + 20)) = *((unsigned char *)v15 + *(int *)(v16 + 20));
    v12((char *)v14 + *(int *)(v16 + 24), (char *)v15 + *(int *)(v16 + 24), v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

void *sub_1DCEF35B8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v204 = *(void *)(v9 - 8);
  uint64_t v10 = *(void (**)(char *, char *))(v204 + 24);
  uint64_t v206 = v9;
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v207 = (uint64_t)v12;
  LODWORD(v12) = v16(v12, 1, v14);
  uint64_t v208 = v13;
  uint64_t v205 = v14;
  int v17 = v16(v13, 1, v14);
  if (!v12)
  {
    uint64_t v201 = v10;
    if (v17)
    {
      sub_1DCEF4BE4(v207, type metadata accessor for Argos_Protos_MLModel_FeatureType);
      size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60) - 8) + 64);
      uint64_t v19 = (void *)v207;
      goto LABEL_6;
    }
    uint64_t v25 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    int v28 = v27(v207, 1, v25);
    int v29 = v27((uint64_t)v208, 1, v25);
    if (v28)
    {
      uint64_t v30 = v206;
      if (!v29)
      {
        uint64_t v43 = v208;
        uint64_t v32 = (unsigned char *)v207;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v191 = v26;
          *(void *)uint64_t v207 = *(void *)v208;
          uint64_t v51 = *((void *)v208 + 1);
          *(unsigned char *)(v207 + 16) = v208[16];
          *(void *)(v207 + 8) = v51;
          uint64_t v197 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
          uint64_t v52 = *(int *)(v197 + 24);
          uint64_t v53 = (void *)(v207 + v52);
          unint64_t v54 = &v208[v52];
          uint64_t v55 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
          uint64_t v56 = *(void *)(v55 - 8);
          uint64_t v57 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v56 + 48);
          swift_bridgeObjectRetain();
          if (v57(v54, 1, v55))
          {
            uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
            memcpy(v53, v54, *(void *)(*(void *)(v58 - 8) + 64));
            uint64_t v44 = v201;
            BOOL v59 = *(void (**)(unsigned char *, char *, uint64_t))(v204 + 16);
            uint64_t v30 = v206;
            uint64_t v32 = (unsigned char *)v207;
            uint64_t v43 = v208;
            uint64_t v60 = v197;
          }
          else
          {
            uint64_t v87 = v55;
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            void *v53 = *(void *)v54;
            __dstb = v53;
            if (EnumCaseMultiPayload == 1) {
              uint64_t v109 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
            }
            else {
              uint64_t v109 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
            }
            uint64_t v186 = (char *)v53 + v109;
            uint64_t v110 = &v54[v109];
            uint64_t v111 = *(void (**)(unsigned char *, char *, uint64_t))(v204 + 16);
            swift_bridgeObjectRetain();
            unint64_t v112 = v186;
            uint64_t v187 = v111;
            v111(v112, v110, v206);
            uint64_t v32 = (unsigned char *)v207;
            uint64_t v43 = v208;
            uint64_t v60 = v197;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(__dstb, 0, 1, v87);
            uint64_t v44 = v201;
            BOOL v59 = v187;
            uint64_t v30 = v206;
          }
          uint64_t v26 = v191;
        }
        else
        {
          *(void *)uint64_t v207 = *(void *)v208;
          *(void *)(v207 + 8) = *((void *)v208 + 1);
          uint64_t v199 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
          uint64_t v77 = *(int *)(v199 + 24);
          unint64_t v78 = (void *)(v207 + v77);
          char v79 = &v208[v77];
          uint64_t v80 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
          uint64_t v81 = *(void *)(v80 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
          {
            uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
            memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
            uint64_t v44 = v201;
            BOOL v59 = *(void (**)(unsigned char *, char *, uint64_t))(v204 + 16);
          }
          else
          {
            uint64_t v174 = v81;
            __dstc = v78;
            uint64_t v170 = v80;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v185 = *(void **)(v204 + 16);
              ((void (*)(void *, char *, uint64_t))v185)(v78, v79, v206);
              unint64_t v168 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
              uint64_t v97 = v168[5];
              __srca = (void *)((char *)v78 + v97);
              uint64_t v98 = &v79[v97];
              uint64_t v99 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
              uint64_t v100 = *(void *)(v99 - 8);
              uint64_t v160 = v98;
              int64_t v101 = v98;
              uint64_t v102 = v99;
              float v164 = *(unsigned int (**)(void *, uint64_t))(v100 + 48);
              uint64_t v158 = v100;
              if (v164(v101, 1))
              {
                uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                memcpy(__srca, v160, *(void *)(*(void *)(v103 - 8) + 64));
              }
              else
              {
                void *__srca = *v160;
                __srca[1] = v160[1];
                ((void (*)(char *, char *, uint64_t))v185)((char *)__srca + *(int *)(v102 + 24), (char *)v160 + *(int *)(v102 + 24), v206);
                (*(void (**)(void *, void, uint64_t))(v100 + 56))(__srca, 0, 1);
              }
              uint64_t v130 = v168[6];
              id v131 = (void *)((char *)__dstc + v130);
              double v132 = &v79[v130];
              if (((unsigned int (*)(char *, uint64_t, uint64_t))v164)((char *)v132, 1, v102))
              {
                uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
              }
              else
              {
                *id v131 = *v132;
                v131[1] = v132[1];
                ((void (*)(char *, char *, uint64_t))v185)((char *)v131 + *(int *)(v102 + 24), (char *)v132 + *(int *)(v102 + 24), v206);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v158 + 56))(v131, 0, 1, v102);
              }
              unint64_t v78 = __dstc;
            }
            else
            {
              *unint64_t v78 = *(void *)v79;
              uint64_t v113 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                            + 20);
              char v114 = (char *)v78 + v113;
              uint64_t v188 = &v79[v113];
              uint64_t v115 = *(void (**)(void, void, void))(v204 + 16);
              swift_bridgeObjectRetain();
              uint64_t v116 = v188;
              uint64_t v185 = v115;
              v115(v114, v116, v206);
              uint64_t v30 = v206;
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v174 + 56))(v78, 0, 1, v170);
            uint64_t v44 = v201;
            BOOL v59 = (void (*)(unsigned char *, char *, uint64_t))v185;
          }
          uint64_t v60 = v199;
        }
        uint64_t v145 = *(int *)(v60 + 28);
        float v146 = &v32[v145];
        uint64_t v147 = &v43[v145];
        uint64_t v148 = *(void *)v147;
        v146[8] = v147[8];
        *(void *)float v146 = v148;
        v59(&v32[*(int *)(v60 + 32)], &v43[*(int *)(v60 + 32)], v30);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v26 + 56))(v32, 0, 1, v25);
        goto LABEL_75;
      }
      size_t v31 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28) - 8) + 64);
      uint64_t v32 = (unsigned char *)v207;
    }
    else
    {
      uint64_t v30 = v206;
      if (!v29)
      {
        uint64_t v44 = v10;
        uint64_t v32 = (unsigned char *)v207;
        uint64_t v43 = v208;
        if (a1 == a2) {
          goto LABEL_75;
        }
        sub_1DCEF4BE4(v207, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(void *)uint64_t v207 = *(void *)v208;
          uint64_t v61 = *((void *)v208 + 1);
          *(unsigned char *)(v207 + 16) = v208[16];
          *(void *)(v207 + 8) = v61;
          unint64_t v198 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
          uint64_t v62 = v198[6];
          uint64_t v63 = (void *)(v207 + v62);
          char v64 = &v208[v62];
          uint64_t v65 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
          unint64_t v66 = *(void **)(v65 - 8);
          unint64_t v67 = (unsigned int (*)(void *, uint64_t, uint64_t))v66[6];
          swift_bridgeObjectRetain();
          if (v67(v64, 1, v65))
          {
            uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
            memcpy(v63, v64, *(void *)(*(void *)(v68 - 8) + 64));
            uint64_t v44 = v201;
            uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v204 + 16);
            uint64_t v30 = v206;
            uint64_t v32 = (unsigned char *)v207;
            uint64_t v43 = v208;
          }
          else
          {
            uint64_t v189 = v66;
            uint64_t v192 = v65;
            int v124 = swift_getEnumCaseMultiPayload();
            void *v63 = *(void *)v64;
            uint64_t v30 = v206;
            if (v124 == 1) {
              uint64_t v134 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
            }
            else {
              uint64_t v134 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
            }
            uint64_t v135 = v63;
            uint64_t v136 = (char *)v63 + v134;
            uint64_t v137 = &v64[v134];
            uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v204 + 16);
            swift_bridgeObjectRetain();
            v69(v136, v137, v206);
            uint64_t v32 = (unsigned char *)v207;
            uint64_t v43 = v208;
            swift_storeEnumTagMultiPayload();
            (*((void (**)(void *, void, uint64_t, uint64_t))v189 + 7))(v135, 0, 1, v192);
            uint64_t v44 = v201;
          }
          uint64_t v138 = v198[7];
          id v139 = &v32[v138];
          id v140 = &v43[v138];
          uint64_t v141 = *(void *)v140;
          v139[8] = v140[8];
          *(void *)id v139 = v141;
          v69(&v32[v198[8]], &v43[v198[8]], v30);
          swift_storeEnumTagMultiPayload();
          goto LABEL_75;
        }
        *(void *)uint64_t v207 = *(void *)v208;
        *(void *)(v207 + 8) = *((void *)v208 + 1);
        uint64_t v89 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
        uint64_t v90 = v89[6];
        uint64_t v91 = (void *)(v207 + v90);
        uint64_t v92 = &v208[v90];
        uint64_t v93 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
        uint64_t v94 = *(void *)(v93 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
        {
          uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
          memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
          uint64_t v96 = *(void (**)(uint64_t, char *, uint64_t))(v204 + 16);
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v200 = *(void (**)(uint64_t, char *, uint64_t))(v204 + 16);
            v200((uint64_t)v91, v92, v206);
            uint64_t v125 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
            uint64_t v126 = *(int *)(v125 + 20);
            __dste = (int *)v125;
            uint64_t v190 = (void *)((char *)v91 + v126);
            id v127 = &v92[v126];
            uint64_t v128 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
            uint64_t v166 = *(void *)(v128 - 8);
            uint64_t v193 = v128;
            uint64_t v171 = *(unsigned int (**)(void *, uint64_t))(v166 + 48);
            if (v171((char *)v127, 1))
            {
              uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(v190, v127, *(void *)(*(void *)(v129 - 8) + 64));
            }
            else
            {
              void *v190 = *v127;
              v190[1] = v127[1];
              v200((uint64_t)v190 + *(int *)(v193 + 24), (char *)v127 + *(int *)(v193 + 24), v206);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v166 + 56))(v190, 0, 1, v193);
            }
            uint64_t v150 = __dste[6];
            uint64_t v151 = (void *)((char *)v91 + v150);
            unint64_t v152 = &v92[v150];
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v171)((char *)v152, 1, v193))
            {
              uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(v151, v152, *(void *)(*(void *)(v153 - 8) + 64));
            }
            else
            {
              *uint64_t v151 = *v152;
              v151[1] = v152[1];
              v200((uint64_t)v151 + *(int *)(v193 + 24), (char *)v152 + *(int *)(v193 + 24), v206);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v166 + 56))(v151, 0, 1, v193);
            }
          }
          else
          {
            *uint64_t v91 = *(void *)v92;
            uint64_t v142 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                          + 20);
            long long v194 = (char *)v91 + v142;
            float v143 = &v92[v142];
            uint64_t v144 = *(void (**)(uint64_t, char *, uint64_t))(v204 + 16);
            swift_bridgeObjectRetain();
            uint64_t v200 = v144;
            v144((uint64_t)v194, v143, v206);
            uint64_t v30 = v206;
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
          uint64_t v96 = v200;
        }
        uint64_t v154 = v89[7];
        uint64_t v32 = (unsigned char *)v207;
        uint64_t v43 = v208;
        uint64_t v155 = v207 + v154;
        uint64_t v156 = &v208[v154];
        uint64_t v157 = *(void *)v156;
        *(unsigned char *)(v155 + 8) = v156[8];
        *(void *)uint64_t v155 = v157;
        v96(v207 + v89[8], &v208[v89[8]], v30);
        swift_storeEnumTagMultiPayload();
LABEL_18:
        uint64_t v44 = v201;
LABEL_75:
        v32[*(int *)(v205 + 20)] = v43[*(int *)(v205 + 20)];
        ((void (*)(unsigned char *, char *, uint64_t))v44)(&v32[*(int *)(v205 + 24)], &v43[*(int *)(v205 + 24)], v30);
        return a1;
      }
      uint64_t v32 = (unsigned char *)v207;
      sub_1DCEF4BE4(v207, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      size_t v31 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28) - 8) + 64);
    }
    uint64_t v43 = v208;
    memcpy(v32, v208, v31);
    goto LABEL_18;
  }
  if (v17)
  {
    size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60) - 8) + 64);
    uint64_t v19 = (void *)v207;
LABEL_6:
    memcpy(v19, v13, v18);
    return a1;
  }
  uint64_t v20 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v13, 1, v20))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
    memcpy((void *)v207, v13, *(void *)(*(void *)(v22 - 8) + 64));
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v204 + 16);
    uint64_t v24 = v206;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v182 = (void *)v20;
      *(void *)uint64_t v207 = *(void *)v13;
      uint64_t v33 = *((void *)v13 + 1);
      *(unsigned char *)(v207 + 16) = v13[16];
      *(void *)(v207 + 8) = v33;
      uint64_t v34 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v35 = *(int *)(v34 + 24);
      int64_t v195 = (void *)(v207 + v35);
      uint64_t v202 = v34;
      uint64_t v36 = &v13[v35];
      uint64_t v37 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      uint64_t v38 = *(void *)(v37 - 8);
      int v39 = *(unsigned int (**)(void *, uint64_t, void *))(v38 + 48);
      uint64_t v40 = (void *)v37;
      swift_bridgeObjectRetain();
      if (v39((char *)v36, 1, v40))
      {
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
        memcpy(v195, v36, *(void *)(*(void *)(v41 - 8) + 64));
        uint64_t v42 = v202;
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v204 + 16);
        uint64_t v24 = v206;
        uint64_t v20 = (uint64_t)v182;
      }
      else
      {
        uint64_t v172 = v38;
        __dst = v40;
        int v70 = swift_getEnumCaseMultiPayload();
        *int64_t v195 = *v36;
        uint64_t v24 = v206;
        if (v70 == 1) {
          uint64_t v83 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        }
        else {
          uint64_t v83 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        }
        double v167 = (char *)v195 + v83;
        char v84 = (char *)v36 + v83;
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v204 + 16);
        swift_bridgeObjectRetain();
        v23(v167, v84, v206);
        uint64_t v20 = (uint64_t)v182;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, void *))(v172 + 56))(v195, 0, 1, __dst);
        uint64_t v42 = v202;
      }
    }
    else
    {
      uint64_t v196 = v21;
      *(void *)uint64_t v207 = *(void *)v13;
      *(void *)(v207 + 8) = *((void *)v13 + 1);
      uint64_t v203 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v45 = *(int *)(v203 + 24);
      uint64_t v46 = (void *)(v207 + v45);
      uint64_t v47 = &v13[v45];
      uint64_t v48 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      uint64_t v49 = *(void *)(v48 - 8);
      uint64_t v24 = v206;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))((char *)v47, 1, v48))
      {
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
        memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v204 + 16);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v173 = v48;
          uint64_t v71 = (char *)v46;
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v204 + 16);
          v23(v71, (char *)v47, v206);
          uint64_t v169 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v72 = *(int *)(v169 + 20);
          __dsta = &v71[v72];
          uint64_t v183 = v71;
          uint64_t v73 = (char *)v47 + v72;
          uint64_t v74 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v159 = *(void *)(v74 - 8);
          __src = v73;
          uint64_t v163 = v74;
          unint64_t v165 = *(unsigned int (**)(void *, uint64_t))(v159 + 48);
          if (v165(v73, 1))
          {
            uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(__dsta, v73, *(void *)(*(void *)(v75 - 8) + 64));
            uint64_t v76 = v163;
          }
          else
          {
            uint64_t v76 = v163;
            *(void *)__dsta = *(void *)__src;
            *((void *)__dsta + 1) = *((void *)__src + 1);
            v23(&__dsta[*(int *)(v163 + 24)], &__src[*(int *)(v163 + 24)], v206);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v159 + 56))(__dsta, 0, 1, v163);
          }
          uint64_t v104 = *(int *)(v169 + 24);
          __dstd = &v183[v104];
          unint64_t v105 = (void *)((char *)v47 + v104);
          int v106 = ((uint64_t (*)(void *, uint64_t, uint64_t))v165)(v105, 1, v76);
          uint64_t v107 = v76;
          uint64_t v48 = v173;
          if (v106)
          {
            uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(__dstd, v105, *(void *)(*(void *)(v108 - 8) + 64));
          }
          else
          {
            *(void *)__dstd = *v105;
            *((void *)__dstd + 1) = v105[1];
            uint64_t v117 = *(int *)(v107 + 24);
            uint64_t v118 = (char *)v105 + v117;
            uint64_t v119 = v107;
            v23(&__dstd[v117], v118, v206);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v159 + 56))(__dstd, 0, 1, v119);
          }
          char v86 = v183;
        }
        else
        {
          *uint64_t v46 = *v47;
          uint64_t v85 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          __dstf = (char *)v47 + v85;
          uint64_t v184 = (char *)v46 + v85;
          char v86 = (char *)v46;
          uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v204 + 16);
          swift_bridgeObjectRetain();
          v23(v184, __dstf, v206);
          uint64_t v24 = v206;
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v86, 0, 1, v48);
      }
      uint64_t v21 = v196;
      uint64_t v42 = v203;
    }
    uint64_t v120 = *(int *)(v42 + 28);
    uint64_t v121 = v207 + v120;
    uint64_t v122 = &v13[v120];
    uint64_t v123 = *(void *)v122;
    *(unsigned char *)(v121 + 8) = v122[8];
    *(void *)uint64_t v121 = v123;
    v23((char *)(v207 + *(int *)(v42 + 32)), &v13[*(int *)(v42 + 32)], v24);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v207, 0, 1, v20);
  }
  *(unsigned char *)(v207 + *(int *)(v205 + 20)) = v13[*(int *)(v205 + 20)];
  v23((char *)(v207 + *(int *)(v205 + 24)), &v13[*(int *)(v205 + 24)], v24);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v207, 0, 1, v205);
  return a1;
}

uint64_t sub_1DCEF4BE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_1DCEF4C44(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DD047BF8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
      memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *uint64_t v13 = *v14;
      uint64_t v66 = v19;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v58 = v11;
        v13[1] = v14[1];
        *((unsigned char *)v13 + 16) = *((unsigned char *)v14 + 16);
        uint64_t v22 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
        uint64_t v23 = *(int *)(v22 + 24);
        uint64_t v62 = (void *)((char *)v13 + v23);
        uint64_t v64 = v22;
        uint64_t v24 = (char *)v14 + v23;
        uint64_t v25 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
        uint64_t v56 = *(void *)(v25 - 8);
        uint64_t v60 = v24;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v24, 1, v25))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
          memcpy(v62, v24, *(void *)(*(void *)(v26 - 8) + 64));
          uint64_t v27 = v64;
          uint64_t v11 = v58;
        }
        else
        {
          int v33 = swift_getEnumCaseMultiPayload();
          *uint64_t v62 = *(void *)v24;
          if (v33 == 1) {
            uint64_t v34 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
          }
          else {
            uint64_t v34 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
          }
          uint64_t v11 = v58;
          v58((char *)v62 + *(int *)(v34 + 20), &v60[*(int *)(v34 + 20)], v10);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v62, 0, 1, v25);
          uint64_t v27 = v64;
        }
      }
      else
      {
        uint64_t v59 = v18;
        v13[1] = v14[1];
        uint64_t v28 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
        uint64_t v29 = *(int *)(v28 + 24);
        uint64_t v63 = (void *)((char *)v13 + v29);
        uint64_t v65 = v28;
        uint64_t v30 = (void *)((char *)v14 + v29);
        uint64_t v31 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
        uint64_t v57 = *(void *)(v31 - 8);
        uint64_t v61 = (char *)v30;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))((char *)v30, 1, v31))
        {
          uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
          memcpy(v63, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          uint64_t v55 = v31;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v11((char *)v63, (char *)v30, v10);
            uint64_t v52 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
            uint64_t v35 = *(int *)(v52 + 20);
            __dst = (_OWORD *)((char *)v63 + v35);
            uint64_t v36 = (_OWORD *)((char *)v30 + v35);
            uint64_t v37 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
            uint64_t v38 = *(void *)(v37 - 8);
            uint64_t v53 = (int *)v37;
            uint64_t v51 = *(unsigned int (**)(char *, uint64_t, int *))(v38 + 48);
            uint64_t v49 = v38;
            if (((unsigned int (*)(_OWORD *, uint64_t))v51)(v36, 1))
            {
              uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(__dst, v36, *(void *)(*(void *)(v39 - 8) + 64));
              uint64_t v40 = v53;
            }
            else
            {
              _OWORD *__dst = *v36;
              v11((char *)__dst + v53[6], (char *)v36 + v53[6], v10);
              uint64_t v40 = v53;
              (*(void (**)(_OWORD *, void, uint64_t, int *))(v38 + 56))(__dst, 0, 1, v53);
            }
            uint64_t v42 = *(int *)(v52 + 24);
            unint64_t v54 = (_OWORD *)((char *)v63 + v42);
            uint64_t v43 = &v61[v42];
            if (v51(&v61[v42], 1, v40))
            {
              uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(v54, v43, *(void *)(*(void *)(v44 - 8) + 64));
            }
            else
            {
              *unint64_t v54 = *v43;
              v11((char *)v54 + v40[6], (char *)v43 + v40[6], v10);
              (*(void (**)(_OWORD *, void, uint64_t, int *))(v49 + 56))(v54, 0, 1, v40);
            }
          }
          else
          {
            void *v63 = *v30;
            uint64_t v41 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
            v11((char *)v63 + *(int *)(v41 + 20), (char *)v30 + *(int *)(v41 + 20), v10);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v63, 0, 1, v55);
        }
        uint64_t v27 = v65;
        uint64_t v18 = v59;
      }
      uint64_t v45 = *(int *)(v27 + 28);
      uint64_t v46 = (char *)v13 + v45;
      uint64_t v47 = (char *)v14 + v45;
      *(void *)uint64_t v46 = *(void *)v47;
      v46[8] = v47[8];
      v11((char *)v13 + *(int *)(v27 + 32), (char *)v14 + *(int *)(v27 + 32), v10);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(v13, 0, 1, v18);
    }
    *((unsigned char *)v13 + *(int *)(v15 + 20)) = *((unsigned char *)v14 + *(int *)(v15 + 20));
    v11((char *)v13 + *(int *)(v15 + 24), (char *)v14 + *(int *)(v15 + 24), v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *sub_1DCEF5388(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v186 = sub_1DD047BF8();
  uint64_t v187 = *(void *)(v186 - 8);
  uint64_t v11 = *(void (**)(char *, char *))(v187 + 40);
  v11(v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1;
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (char *)a2 + v12;
  uint64_t v16 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v184 = *(void **)(v16 - 8);
  uint64_t v17 = (uint64_t (*)(char *, uint64_t, uint64_t))v184[6];
  uint64_t v18 = v14;
  LODWORD(v14) = v17((char *)v14, 1, v16);
  uint64_t v188 = v15;
  int v19 = v17(v15, 1, v16);
  if (!v14)
  {
    if (v19)
    {
      sub_1DCEF4BE4((uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_FeatureType);
      goto LABEL_7;
    }
    uint64_t v30 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    __dst = *(void **)(v30 - 8);
    uint64_t v31 = (uint64_t (*)(char *, uint64_t, uint64_t))__dst[6];
    uint64_t v185 = v18;
    int v32 = v31((char *)v18, 1, v30);
    uint64_t v181 = v30;
    int v33 = v31(v188, 1, v30);
    if (v32)
    {
      uint64_t v34 = v186;
      uint64_t v27 = v13;
      uint64_t v35 = (void (*)(char *, char *, uint64_t))v11;
      if (!v33)
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *uint64_t v185 = *(void *)v188;
        if (EnumCaseMultiPayload == 1)
        {
          v185[1] = *((void *)v188 + 1);
          *((unsigned char *)v185 + 16) = v188[16];
          unint64_t v54 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
          uint64_t v55 = v54[6];
          uint64_t v56 = (void *)((char *)v185 + v55);
          uint64_t v57 = &v188[v55];
          uint64_t v58 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
          uint64_t v59 = *(void *)(v58 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
          {
            uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
            memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
            uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
          }
          else
          {
            uint64_t v173 = v59;
            int v90 = swift_getEnumCaseMultiPayload();
            *uint64_t v56 = *(void *)v57;
            uint64_t v91 = (void (**)(char *, char *, uint64_t))(v187 + 32);
            unint64_t v168 = v56;
            if (v90 == 1) {
              uint64_t v112 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
            }
            else {
              uint64_t v112 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
            }
            uint64_t v113 = (char *)v56 + v112;
            uint64_t v61 = *v91;
            (*v91)(v113, &v57[v112], v186);
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(v168, 0, 1, v58);
          }
        }
        else
        {
          v185[1] = *((void *)v188 + 1);
          unint64_t v54 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
          uint64_t v80 = v54[6];
          uint64_t v81 = (void *)((char *)v185 + v80);
          uint64_t v82 = &v188[v80];
          uint64_t v83 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
          uint64_t v84 = *(void *)(v83 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
          {
            uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
            memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
            uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
          }
          else
          {
            uint64_t v174 = v84;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v100 = (char *)v81;
              uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
              v61(v100, v82, v186);
              uint64_t v101 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
              uint64_t v102 = *(int *)(v101 + 20);
              uint64_t v169 = v100;
              uint64_t v161 = v101;
              uint64_t v163 = &v100[v102];
              uint64_t v103 = &v82[v102];
              uint64_t v104 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
              __srca = *(void **)(v104 - 8);
              uint64_t v153 = v103;
              uint64_t v155 = v104;
              uint64_t v157 = (unsigned int (*)(char *, uint64_t))__srca[6];
              if (v157(v103, 1))
              {
                uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                memcpy(v163, v103, *(void *)(*(void *)(v105 - 8) + 64));
                uint64_t v106 = v155;
              }
              else
              {
                uint64_t v106 = v155;
                *(_OWORD *)uint64_t v163 = *(_OWORD *)v153;
                v61(&v163[*(int *)(v155 + 24)], &v153[*(int *)(v155 + 24)], v186);
                ((void (*)(char *, void, uint64_t, uint64_t))__srca[7])(v163, 0, 1, v155);
              }
              uint64_t v131 = *(int *)(v161 + 24);
              uint64_t v166 = &v169[v131];
              double v132 = &v82[v131];
              if (((unsigned int (*)(char *, uint64_t, uint64_t))v157)(v132, 1, v106))
              {
                uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                memcpy(v166, v132, *(void *)(*(void *)(v133 - 8) + 64));
              }
              else
              {
                *(_OWORD *)uint64_t v166 = *(_OWORD *)v132;
                v61(&v166[*(int *)(v106 + 24)], &v132[*(int *)(v106 + 24)], v186);
                ((void (*)(char *, void, uint64_t, uint64_t))__srca[7])(v166, 0, 1, v106);
              }
              uint64_t v116 = v169;
            }
            else
            {
              *uint64_t v81 = *(void *)v82;
              uint64_t v114 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                            + 20);
              uint64_t v115 = (char *)v81 + v114;
              uint64_t v116 = (char *)v81;
              uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
              v61(v115, &v82[v114], v186);
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(char *, void, uint64_t, uint64_t))(v174 + 56))(v116, 0, 1, v83);
          }
        }
        uint64_t v37 = (char *)v185;
        uint64_t v138 = v54[7];
        id v139 = (char *)v185 + v138;
        uint64_t v46 = v188;
        id v140 = &v188[v138];
        *(void *)id v139 = *(void *)v140;
        v139[8] = v140[8];
        v61((char *)v185 + v54[8], &v188[v54[8]], v186);
        swift_storeEnumTagMultiPayload();
        ((void (*)(void *, void, uint64_t, uint64_t))__dst[7])(v185, 0, 1, v181);
        goto LABEL_71;
      }
      size_t v36 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28) - 8) + 64);
      uint64_t v37 = (char *)v185;
    }
    else
    {
      uint64_t v34 = v186;
      uint64_t v27 = v13;
      uint64_t v35 = (void (*)(char *, char *, uint64_t))v11;
      if (!v33)
      {
        uint64_t v46 = v188;
        uint64_t v37 = (char *)v185;
        if (v27 != a2)
        {
          sub_1DCEF4BE4((uint64_t)v185, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
          int v62 = swift_getEnumCaseMultiPayload();
          *uint64_t v185 = *(void *)v188;
          if (v62 == 1)
          {
            v185[1] = *((void *)v188 + 1);
            *((unsigned char *)v185 + 16) = v188[16];
            uint64_t v63 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
            uint64_t v64 = v63[6];
            uint64_t v65 = (void *)((char *)v185 + v64);
            uint64_t v66 = &v188[v64];
            uint64_t v67 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
            uint64_t v68 = *(void *)(v67 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
            {
              uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
              memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
              int v70 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
            }
            else
            {
              int v123 = swift_getEnumCaseMultiPayload();
              void *v65 = *(void *)v66;
              __dstc = (void (**)(char *, char *, uint64_t))(v187 + 32);
              if (v123 == 1) {
                uint64_t v124 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
              }
              else {
                uint64_t v124 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0)
              }
                              + 20);
              uint64_t v125 = &v66[v124];
              int v70 = *__dstc;
              (*__dstc)((char *)v65 + v124, v125, v186);
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
            }
            uint64_t v134 = v63[7];
            uint64_t v135 = (char *)v185 + v134;
            uint64_t v46 = v188;
            uint64_t v136 = &v188[v134];
            *(void *)uint64_t v135 = *(void *)v136;
            v135[8] = v136[8];
            v70((char *)v185 + v63[8], &v188[v63[8]], v186);
            uint64_t v37 = (char *)v185;
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            v185[1] = *((void *)v188 + 1);
            uint64_t v92 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
            uint64_t v93 = v92[6];
            uint64_t v94 = (void *)((char *)v185 + v93);
            uint64_t v95 = &v188[v93];
            uint64_t v96 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
            uint64_t v97 = *(void *)(v96 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
            {
              uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
              memcpy(v94, v95, *(void *)(*(void *)(v98 - 8) + 64));
              uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
            }
            else
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                __dstd = *(void (**)(char *, char *, uint64_t))(v187 + 32);
                __dstd((char *)v94, v95, v186);
                uint64_t v126 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
                uint64_t v127 = *(int *)(v126 + 20);
                uint64_t v156 = v94;
                unint64_t v165 = (int *)v126;
                uint64_t v170 = (_OWORD *)((char *)v94 + v127);
                uint64_t v128 = &v95[v127];
                uint64_t v129 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
                __srcb = *(void **)(v129 - 8);
                uint64_t v159 = (unsigned int (*)(char *, uint64_t))__srcb[6];
                uint64_t v175 = v129;
                if (v159(v128, 1))
                {
                  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                  memcpy(v170, v128, *(void *)(*(void *)(v130 - 8) + 64));
                }
                else
                {
                  *uint64_t v170 = *(_OWORD *)v128;
                  __dstd((char *)v170 + *(int *)(v175 + 24), &v128[*(int *)(v175 + 24)], v186);
                  ((void (*)(_OWORD *, void, uint64_t, uint64_t))__srcb[7])(v170, 0, 1, v175);
                }
                uint64_t v142 = v165[6];
                uint64_t v94 = v156;
                uint64_t v171 = (_OWORD *)((char *)v156 + v142);
                float v143 = &v95[v142];
                if (((unsigned int (*)(char *, uint64_t, uint64_t))v159)(v143, 1, v175))
                {
                  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
                  memcpy(v171, v143, *(void *)(*(void *)(v144 - 8) + 64));
                }
                else
                {
                  _OWORD *v171 = *(_OWORD *)v143;
                  __dstd((char *)v171 + *(int *)(v175 + 24), &v143[*(int *)(v175 + 24)], v186);
                  ((void (*)(_OWORD *, void, uint64_t, uint64_t))__srcb[7])(v171, 0, 1, v175);
                }
              }
              else
              {
                *uint64_t v94 = *(void *)v95;
                uint64_t v137 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
                __dstd = *(void (**)(char *, char *, uint64_t))(v187 + 32);
                __dstd((char *)v94 + *(int *)(v137 + 20), &v95[*(int *)(v137 + 20)], v186);
              }
              swift_storeEnumTagMultiPayload();
              (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
              uint64_t v99 = __dstd;
            }
            uint64_t v145 = v92[7];
            uint64_t v37 = (char *)v185;
            float v146 = (char *)v185 + v145;
            uint64_t v46 = v188;
            uint64_t v147 = &v188[v145];
            *(void *)float v146 = *(void *)v147;
            v146[8] = v147[8];
            v99((char *)v185 + v92[8], &v188[v92[8]], v186);
            swift_storeEnumTagMultiPayload();
          }
        }
        goto LABEL_71;
      }
      uint64_t v37 = (char *)v185;
      sub_1DCEF4BE4((uint64_t)v185, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      size_t v36 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28) - 8) + 64);
    }
    uint64_t v46 = v188;
    memcpy(v37, v188, v36);
LABEL_71:
    v37[*(int *)(v16 + 20)] = v46[*(int *)(v16 + 20)];
    v35(&v37[*(int *)(v16 + 24)], &v46[*(int *)(v16 + 24)], v34);
    return v27;
  }
  if (v19)
  {
LABEL_7:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
    memcpy(v18, v15, *(void *)(*(void *)(v29 - 8) + 64));
    return v13;
  }
  uint64_t v20 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  uint64_t v21 = *(void **)(v20 - 8);
  uint64_t v22 = v15;
  uint64_t v23 = v18;
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v21 + 6))(v188, 1, v20))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
    memcpy(v18, v188, *(void *)(*(void *)(v24 - 8) + 64));
    uint64_t v25 = v186;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
    uint64_t v27 = v13;
    uint64_t v28 = v184;
  }
  else
  {
    int v38 = swift_getEnumCaseMultiPayload();
    *uint64_t v18 = *(void *)v188;
    uint64_t v25 = v186;
    uint64_t v27 = v13;
    if (v38 == 1)
    {
      v23[1] = *((void *)v188 + 1);
      *((unsigned char *)v23 + 16) = v188[16];
      uint64_t v39 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v40 = *(int *)(v39 + 24);
      __dsta = (void *)((char *)v23 + v40);
      uint64_t v182 = v39;
      uint64_t v41 = &v188[v40];
      uint64_t v42 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      uint64_t v43 = *(void *)(v42 - 8);
      uint64_t v28 = v184;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
        memcpy(__dsta, v41, *(void *)(*(void *)(v44 - 8) + 64));
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
        uint64_t v45 = v182;
      }
      else
      {
        uint64_t v172 = v43;
        int v71 = swift_getEnumCaseMultiPayload();
        void *__dsta = *(void *)v41;
        uint64_t v72 = (void (**)(char *, char *, uint64_t))(v187 + 32);
        if (v71 == 1) {
          uint64_t v73 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        }
        else {
          uint64_t v73 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        }
        uint64_t v26 = *v72;
        (*v72)((char *)__dsta + v73, &v41[v73], v186);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v172 + 56))(__dsta, 0, 1, v42);
        uint64_t v25 = v186;
        uint64_t v45 = v182;
      }
    }
    else
    {
      __dstb = v21;
      v23[1] = *((void *)v188 + 1);
      uint64_t v183 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v47 = *(int *)(v183 + 24);
      uint64_t v48 = (void *)((char *)v23 + v47);
      uint64_t v49 = &v188[v47];
      uint64_t v50 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      uint64_t v51 = *(void *)(v50 - 8);
      uint64_t v28 = v184;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
        memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v160 = v50;
          uint64_t v74 = (char *)v48;
          uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
          v26(v74, v49, v186);
          uint64_t v158 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v75 = *(int *)(v158 + 20);
          uint64_t v162 = &v74[v75];
          double v167 = v74;
          uint64_t v76 = &v49[v75];
          uint64_t v77 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v148 = *(void *)(v77 - 8);
          __src = v76;
          unint64_t v152 = (int *)v77;
          uint64_t v154 = *(unsigned int (**)(char *, uint64_t))(v148 + 48);
          if (v154(v76, 1))
          {
            uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v162, v76, *(void *)(*(void *)(v78 - 8) + 64));
            char v79 = v152;
          }
          else
          {
            char v79 = v152;
            *(_OWORD *)uint64_t v162 = *(_OWORD *)__src;
            v26(&v162[v152[6]], &__src[v152[6]], v186);
            (*(void (**)(char *, void, uint64_t, int *))(v148 + 56))(v162, 0, 1, v152);
          }
          uint64_t v107 = *(int *)(v158 + 24);
          float v164 = &v167[v107];
          uint64_t v108 = &v49[v107];
          int v109 = ((uint64_t (*)(char *, uint64_t, int *))v154)(v108, 1, v79);
          uint64_t v110 = v79;
          uint64_t v50 = v160;
          if (v109)
          {
            uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v164, v108, *(void *)(*(void *)(v111 - 8) + 64));
          }
          else
          {
            *(_OWORD *)float v164 = *(_OWORD *)v108;
            uint64_t v117 = v110[6];
            uint64_t v118 = &v108[v117];
            uint64_t v119 = v110;
            v26(&v164[v117], v118, v186);
            (*(void (**)(char *, void, uint64_t, int *))(v148 + 56))(v164, 0, 1, v119);
          }
          uint64_t v89 = v167;
        }
        else
        {
          *uint64_t v48 = *(void *)v49;
          uint64_t v86 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          uint64_t v87 = (char *)v48 + v86;
          uint64_t v88 = &v49[v86];
          uint64_t v89 = (char *)v48;
          uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
          v26(v87, v88, v186);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v89, 0, 1, v50);
      }
      uint64_t v21 = __dstb;
      uint64_t v45 = v183;
    }
    uint64_t v120 = *(int *)(v45 + 28);
    uint64_t v121 = (char *)v23 + v120;
    uint64_t v22 = v188;
    uint64_t v122 = &v188[v120];
    *(void *)uint64_t v121 = *(void *)v122;
    v121[8] = v122[8];
    v26((char *)v23 + *(int *)(v45 + 32), &v188[*(int *)(v45 + 32)], v25);
    swift_storeEnumTagMultiPayload();
    (*((void (**)(void *, void, uint64_t, uint64_t))v21 + 7))(v23, 0, 1, v20);
  }
  *((unsigned char *)v23 + *(int *)(v16 + 20)) = v22[*(int *)(v16 + 20)];
  v26((char *)v23 + *(int *)(v16 + 24), &v22[*(int *)(v16 + 24)], v25);
  ((void (*)(void *, void, uint64_t, uint64_t))v28[7])(v23, 0, 1, v16);
  return v27;
}

uint64_t sub_1DCEF682C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCEF6840);
}

uint64_t sub_1DCEF6840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DCEF6970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCEF6984);
}

uint64_t sub_1DCEF6984(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for Argos_Protos_MLModel_FeatureDescription(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85DE8);
}

void sub_1DCEF6AD4()
{
  sub_1DD047BF8();
  if (v0 <= 0x3F)
  {
    sub_1DCEF86FC(319, &qword_1EBE85B68, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureType);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DCEF6BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm_4);
}

uint64_t sub_1DCEF6BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm_4);
}

uint64_t sub_1DCEF6BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm_5);
}

uint64_t sub_1DCEF6C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm_5);
}

uint64_t *sub_1DCEF6C24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1) {
      uint64_t v7 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
    }
    else {
      uint64_t v7 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
    }
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DCEF6DAC(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1) {
    uint64_t v3 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
  }
  else {
    uint64_t v3 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
  }
  uint64_t v4 = a1 + *(int *)(v3 + 20);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_1DCEF6E44(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1) {
    uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
  }
  else {
    uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
  }
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DCEF6F74(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DCEF4BE4((uint64_t)a1, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1) {
      uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
    }
    else {
      uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
    }
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DCEF70C8(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1) {
    uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
  }
  else {
    uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
  }
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DCEF71D0(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DCEF4BE4((uint64_t)a1, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1) {
      uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
    }
    else {
      uint64_t v5 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
    }
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1DD047BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DCEF7304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCEFA9DC(a1, a2, a3, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
}

uint64_t sub_1DCEF7330(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a3[6];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *uint64_t v9 = *v10;
      if (EnumCaseMultiPayload == 1) {
        uint64_t v16 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
      }
      else {
        uint64_t v16 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
      }
      uint64_t v27 = (char *)v10 + v16;
      uint64_t v28 = (char *)v9 + v16;
      uint64_t v17 = sub_1DD047BF8();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v28, v27, v17);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    uint64_t v21 = v7 + v19;
    uint64_t v22 = (uint64_t)a2 + v19;
    *(void *)uint64_t v21 = *(void *)v22;
    *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
    uint64_t v23 = v7 + v20;
    uint64_t v24 = (uint64_t)a2 + v20;
    uint64_t v25 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return v7;
}

uint64_t sub_1DCEF75F4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1) {
      uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
    }
    else {
      uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
    }
    uint64_t v8 = v4 + *(int *)(v7 + 20);
    uint64_t v9 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + *(int *)(a2 + 32);
  uint64_t v11 = sub_1DD047BF8();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  return v12(v10, v11);
}

uint64_t sub_1DCEF7734(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v8 = *v9;
    if (EnumCaseMultiPayload == 1) {
      uint64_t v15 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
    }
    else {
      uint64_t v15 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
    }
    uint64_t v26 = (char *)v9 + v15;
    uint64_t v27 = (char *)v8 + v15;
    uint64_t v16 = sub_1DD047BF8();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v27, v26, v16);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  uint64_t v24 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

uint64_t sub_1DCEF79A4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *uint64_t v8 = *v9;
      if (EnumCaseMultiPayload == 1) {
        uint64_t v16 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
      }
      else {
        uint64_t v16 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
      }
      uint64_t v34 = (char *)v9 + v16;
      uint64_t v35 = (char *)v8 + v16;
      uint64_t v17 = sub_1DD047BF8();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v35, v34, v17);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_14;
    }
LABEL_7:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
    memcpy(v8, v9, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_14;
  }
  if (v14)
  {
    sub_1DCEF4BE4((uint64_t)v8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1DCEF4BE4((uint64_t)v8, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    int v20 = swift_getEnumCaseMultiPayload();
    *uint64_t v8 = *v9;
    if (v20 == 1) {
      uint64_t v21 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
    }
    else {
      uint64_t v21 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
    }
    uint64_t v22 = (char *)v8 + v21;
    size_t v36 = (char *)v9 + v21;
    uint64_t v23 = sub_1DD047BF8();
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    v24(v22, v36, v23);
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  uint64_t v25 = a3[7];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v28 = *v27;
  *(unsigned char *)(v26 + 8) = *((unsigned char *)v27 + 8);
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = a3[8];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

uint64_t sub_1DCEF7D90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v8 = *v9;
    if (EnumCaseMultiPayload == 1) {
      uint64_t v14 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
    }
    else {
      uint64_t v14 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
    }
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_1DD047BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  uint64_t v24 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

uint64_t sub_1DCEF7FD0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *uint64_t v7 = *v8;
      if (EnumCaseMultiPayload == 1) {
        uint64_t v15 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
      }
      else {
        uint64_t v15 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
      }
      uint64_t v16 = (char *)v7 + v15;
      uint64_t v17 = (char *)v8 + v15;
      uint64_t v18 = sub_1DD047BF8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_14;
    }
LABEL_7:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
    memcpy(v7, v8, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_14;
  }
  if (v13)
  {
    sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    int v20 = swift_getEnumCaseMultiPayload();
    *uint64_t v7 = *v8;
    if (v20 == 1) {
      uint64_t v21 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
    }
    else {
      uint64_t v21 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
    }
    uint64_t v22 = (char *)v7 + v21;
    uint64_t v23 = (char *)v8 + v21;
    uint64_t v24 = sub_1DD047BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  uint64_t v25 = a3[7];
  uint64_t v26 = a3[8];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  uint64_t v31 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  return a1;
}

uint64_t sub_1DCEF8370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCEF8384);
}

uint64_t sub_1DCEF8384(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1DD047BF8();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1DCEF84B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCEF84C8);
}

void *sub_1DCEF84C8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1DD047BF8();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 32);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1DCEF85F8()
{
  sub_1DCEF86FC(319, &qword_1EBE85CB8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  if (v0 <= 0x3F)
  {
    sub_1DD047BF8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1DCEF86FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1DD048A08();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1DCEF8764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_42Tm_0);
}

uint64_t sub_1DCEF877C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_43Tm_0);
}

uint64_t sub_1DCEF8794()
{
  return sub_1DCF0F564();
}

char *sub_1DCEF87A4(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v25(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      uint64_t v15 = v25;
    }
    else
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      uint64_t v17 = *(int *)(v11 + 24);
      uint64_t v18 = &v9[v17];
      uint64_t v24 = v9;
      uint64_t v15 = v25;
      v25(v18, &v10[v17], v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
    }
    uint64_t v19 = *(int *)(a3 + 24);
    int v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    if (v13(v21, 1, v11))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      *(_OWORD *)int v20 = *(_OWORD *)v21;
      v15(&v20[*(int *)(v11 + 24)], &v21[*(int *)(v11 + 24)], v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_1DCEF8A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v11(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6)) {
    v11(v5 + *(int *)(v6 + 24), v4);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v6);
  if (!result)
  {
    uint64_t v10 = v8 + *(int *)(v6 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v10, v4);
  }
  return result;
}

char *sub_1DCEF8B68(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v21 = a3;
  uint64_t v22 = a1;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v7(&v9[*(int *)(v11 + 24)], &v10[*(int *)(v11 + 24)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = v7;
  uint64_t v16 = *(int *)(v21 + 24);
  uint64_t v17 = &v22[v16];
  uint64_t v18 = &a2[v16];
  if (v13(v18, 1, v11))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    v15(&v17[*(int *)(v11 + 24)], &v18[*(int *)(v11 + 24)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
  }
  return v22;
}

uint64_t sub_1DCEF8D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 24);
  v22(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  if (v12)
  {
    if (!v13)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = *((void *)v9 + 1);
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(&v8[*(int *)(v10 + 24)], &v9[*(int *)(v10 + 24)], v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1DCEF4BE4((uint64_t)v8, type metadata accessor for Argos_Protos_MLModel_SizeRange);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  *((void *)v8 + 1) = *((void *)v9 + 1);
  v22((uint64_t)&v8[*(int *)(v10 + 24)], (uint64_t)&v9[*(int *)(v10 + 24)], v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  int v18 = v11((char *)(a1 + v15), 1, v10);
  int v19 = v11(v17, 1, v10);
  if (!v18)
  {
    if (!v19)
    {
      *uint64_t v16 = *(void *)v17;
      v16[1] = *((void *)v17 + 1);
      v22((uint64_t)v16 + *(int *)(v10 + 24), (uint64_t)&v17[*(int *)(v10 + 24)], v6);
      return a1;
    }
    sub_1DCEF4BE4((uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  *uint64_t v16 = *(void *)v17;
  v16[1] = *((void *)v17 + 1);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))((char *)v16 + *(int *)(v10 + 24), &v17[*(int *)(v10 + 24)], v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v10);
  return a1;
}

char *sub_1DCEF90D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v21 = a3;
  uint64_t v22 = a1;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v7(&v9[*(int *)(v11 + 24)], &v10[*(int *)(v11 + 24)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = v7;
  uint64_t v16 = *(int *)(v21 + 24);
  uint64_t v17 = &v22[v16];
  int v18 = &a2[v16];
  if (v13(v18, 1, v11))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    v15(&v17[*(int *)(v11 + 24)], &v18[*(int *)(v11 + 24)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
  }
  return v22;
}

uint64_t sub_1DCEF92EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 40);
  v22(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  if (v12)
  {
    if (!v13)
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v8[*(int *)(v10 + 24)], &v9[*(int *)(v10 + 24)], v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_1DCEF4BE4((uint64_t)v8, type metadata accessor for Argos_Protos_MLModel_SizeRange);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  v22((uint64_t)&v8[*(int *)(v10 + 24)], (uint64_t)&v9[*(int *)(v10 + 24)], v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (_OWORD *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  int v18 = v11((char *)(a1 + v15), 1, v10);
  int v19 = v11(v17, 1, v10);
  if (!v18)
  {
    if (!v19)
    {
      *uint64_t v16 = *(_OWORD *)v17;
      v22((uint64_t)v16 + *(int *)(v10 + 24), (uint64_t)&v17[*(int *)(v10 + 24)], v6);
      return a1;
    }
    sub_1DCEF4BE4((uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  *uint64_t v16 = *(_OWORD *)v17;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))((char *)v16 + *(int *)(v10 + 24), &v17[*(int *)(v10 + 24)], v6);
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v10);
  return a1;
}

uint64_t sub_1DCEF9618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCEF962C);
}

uint64_t sub_1DCEF962C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DCEF9728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCEF973C);
}

uint64_t sub_1DCEF973C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1DCEF9844()
{
  sub_1DD047BF8();
  if (v0 <= 0x3F)
  {
    sub_1DCEF86FC(319, &qword_1EBE85AE0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_SizeRange);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DCEF9928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm_6);
}

uint64_t sub_1DCEF9940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm_6);
}

uint64_t *sub_1DCEF9958(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1DD047BF8();
      uint64_t v26 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16);
      v26(a1, a2, v6);
      uint64_t v25 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v7 = *(int *)(v25 + 20);
      uint64_t v8 = (_OWORD *)((char *)a1 + v7);
      uint64_t v9 = (_OWORD *)((char *)a2 + v7);
      uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48);
      if (v12(v9, 1, v10))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        *uint64_t v8 = *v9;
        v26((uint64_t *)((char *)v8 + *(int *)(v10 + 24)), (uint64_t *)((char *)v9 + *(int *)(v10 + 24)), v6);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v20 = *(int *)(v25 + 24);
      uint64_t v21 = (_OWORD *)((char *)a1 + v20);
      uint64_t v22 = (_OWORD *)((char *)a2 + v20);
      if (v12(v22, 1, v10))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        *uint64_t v21 = *v22;
        v26((uint64_t *)((char *)v21 + *(int *)(v10 + 24)), (uint64_t *)((char *)v22 + *(int *)(v10 + 24)), v6);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
      }
    }
    else
    {
      *a1 = *a2;
      uint64_t v15 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_1DD047BF8();
      int v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DCEF9C78(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = a1 + *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
    uint64_t v10 = sub_1DD047BF8();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    uint64_t v12 = v10;
    uint64_t v13 = v9;
LABEL_8:
    return v11(v13, v12);
  }
  uint64_t v2 = sub_1DD047BF8();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v14(a1, v2);
  uint64_t v3 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  uint64_t v4 = a1 + *(int *)(v3 + 20);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5)) {
    v14(v4 + *(int *)(v5 + 24), v2);
  }
  uint64_t v7 = a1 + *(int *)(v3 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v13 = v7 + *(int *)(v5 + 24);
    uint64_t v12 = v2;
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))v14;
    goto LABEL_8;
  }
  return result;
}

void *sub_1DCEF9E28(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1DD047BF8();
    uint64_t v5 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v4 - 8) + 16);
    v5(a1, a2, v4);
    uint64_t v24 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
    uint64_t v6 = *(int *)(v24 + 20);
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (_OWORD *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48);
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v7 = *v8;
      v5((_OWORD *)((char *)v7 + *(int *)(v9 + 24)), (_OWORD *)((char *)v8 + *(int *)(v9 + 24)), v4);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    uint64_t v18 = v10;
    uint64_t v19 = *(int *)(v24 + 24);
    uint64_t v20 = (_OWORD *)((char *)a1 + v19);
    uint64_t v21 = (_OWORD *)((char *)a2 + v19);
    if (v11(v21, 1, v9))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      *uint64_t v20 = *v21;
      v5((_OWORD *)((char *)v20 + *(int *)(v9 + 24)), (_OWORD *)((char *)v21 + *(int *)(v9 + 24)), v4);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v9);
    }
  }
  else
  {
    *a1 = *a2;
    uint64_t v13 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1DD047BF8();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1DCEFA0FC(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1DCEF4BE4((uint64_t)a1, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1DD047BF8();
      uint64_t v5 = *(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16);
      v5(a1, a2, v4);
      uint64_t v24 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v6 = *(int *)(v24 + 20);
      uint64_t v7 = (void *)((char *)a1 + v6);
      uint64_t v8 = (void *)((char *)a2 + v6);
      uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48);
      if (v11(v8, 1, v9))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        v5((void *)((char *)v7 + *(int *)(v9 + 24)), (void *)((char *)v8 + *(int *)(v9 + 24)), v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      uint64_t v18 = v10;
      uint64_t v19 = *(int *)(v24 + 24);
      uint64_t v20 = (void *)((char *)a1 + v19);
      uint64_t v21 = (void *)((char *)a2 + v19);
      if (v11(v21, 1, v9))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        *uint64_t v20 = *v21;
        v20[1] = v21[1];
        v5((void *)((char *)v20 + *(int *)(v9 + 24)), (void *)((char *)v21 + *(int *)(v9 + 24)), v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v9);
      }
    }
    else
    {
      *a1 = *a2;
      uint64_t v13 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_1DD047BF8();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1DCEFA400(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1DD047BF8();
    uint64_t v5 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v4 - 8) + 32);
    v5(a1, a2, v4);
    uint64_t v23 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
    uint64_t v6 = *(int *)(v23 + 20);
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (_OWORD *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48);
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v7 = *v8;
      v5((_OWORD *)((char *)v7 + *(int *)(v9 + 24)), (_OWORD *)((char *)v8 + *(int *)(v9 + 24)), v4);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    uint64_t v17 = v10;
    uint64_t v18 = *(int *)(v23 + 24);
    uint64_t v19 = (_OWORD *)((char *)a1 + v18);
    uint64_t v20 = (_OWORD *)((char *)a2 + v18);
    if (v11(v20, 1, v9))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      *uint64_t v19 = *v20;
      v5((_OWORD *)((char *)v19 + *(int *)(v9 + 24)), (_OWORD *)((char *)v20 + *(int *)(v9 + 24)), v4);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v9);
    }
  }
  else
  {
    *a1 = *a2;
    uint64_t v13 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1DD047BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_1DCEFA6C4(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_1DCEF4BE4((uint64_t)a1, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_1DD047BF8();
      uint64_t v5 = *(void (**)(char *, char *, uint64_t))(*(void *)(v4 - 8) + 32);
      v5(a1, a2, v4);
      uint64_t v23 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v6 = *(int *)(v23 + 20);
      uint64_t v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      if (v11(v8, 1, v9))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
        v5(&v7[*(int *)(v9 + 24)], &v8[*(int *)(v9 + 24)], v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      uint64_t v13 = v5;
      uint64_t v18 = *(int *)(v23 + 24);
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      if (v11(v20, 1, v9))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        v13(&v19[*(int *)(v9 + 24)], &v20[*(int *)(v9 + 24)], v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
      }
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v14 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_1DD047BF8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DCEFA9B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCEFA9DC(a1, a2, a3, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
}

uint64_t sub_1DCEFA9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t result = a4(319);
  if (v7 <= 0x3F)
  {
    uint64_t result = a5(319);
    if (v8 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1DCEFAAAC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a3[6];
    unint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_1DD047BF8();
        uint64_t v35 = (void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        uint64_t v36 = v14;
        uint64_t v39 = *v35;
        ((void (*)(void *, void *))*v35)(v8, v9);
        uint64_t v38 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        uint64_t v15 = *(int *)(v38 + 20);
        __dst = (_OWORD *)((char *)v8 + v15);
        uint64_t v16 = (_OWORD *)((char *)v9 + v15);
        uint64_t v17 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        uint64_t v18 = *(void *)(v17 - 8);
        uint64_t v37 = *(unsigned int (**)(_OWORD *, uint64_t))(v18 + 48);
        uint64_t v42 = v17;
        if (v37(v16, 1))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          _OWORD *__dst = *v16;
          v39((char *)__dst + *(int *)(v42 + 24), (char *)v16 + *(int *)(v42 + 24), v36);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v42);
        }
        uint64_t v23 = *(int *)(v38 + 24);
        uint64_t v24 = (_OWORD *)((char *)v8 + v23);
        uint64_t v25 = (_OWORD *)((char *)v9 + v23);
        if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v37)(v25, 1, v42))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          *uint64_t v24 = *v25;
          v39((char *)v24 + *(int *)(v42 + 24), (char *)v25 + *(int *)(v42 + 24), v36);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v42);
        }
      }
      else
      {
        *unint64_t v8 = *v9;
        uint64_t v20 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        __dsta = (char *)v9 + v20;
        uint64_t v43 = (char *)v8 + v20;
        uint64_t v21 = sub_1DD047BF8();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v43, __dsta, v21);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v27 = a3[7];
    uint64_t v28 = a3[8];
    uint64_t v29 = (char *)v4 + v27;
    uint64_t v30 = (char *)a2 + v27;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = (char *)v4 + v28;
    uint64_t v32 = (char *)a2 + v28;
    uint64_t v33 = sub_1DD047BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  }
  return v4;
}

uint64_t sub_1DCEFAF00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1DD047BF8();
      uint64_t v7 = (void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      uint64_t v19 = *v7;
      (*v7)(v4, v6);
      uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v9 = v4 + *(int *)(v8 + 20);
      uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
      if (!v11(v9, 1, v10)) {
        v19(v9 + *(int *)(v10 + 24), v6);
      }
      uint64_t v12 = v4 + *(int *)(v8 + 24);
      if (!v11(v12, 1, v10)) {
        v19(v12 + *(int *)(v10 + 24), v6);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = v4
          + *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      uint64_t v14 = sub_1DD047BF8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
  }
  uint64_t v15 = a1 + *(int *)(a2 + 32);
  uint64_t v16 = sub_1DD047BF8();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
  return v17(v15, v16);
}

_OWORD *sub_1DCEFB140(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1DD047BF8();
      uint64_t v34 = (void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      uint64_t v35 = v12;
      uint64_t v36 = *v34;
      ((void (*)(void *, void *))*v34)(v7, v8);
      uint64_t v13 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v14 = *(int *)(v13 + 20);
      uint64_t v38 = v13;
      __dst = (_OWORD *)((char *)v7 + v14);
      uint64_t v15 = (_OWORD *)((char *)v8 + v14);
      uint64_t v16 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v41 = v16;
      uint64_t v37 = *(unsigned int (**)(_OWORD *, uint64_t))(v17 + 48);
      if (v37(v15, 1))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        _OWORD *__dst = *v15;
        v36((char *)__dst + *(int *)(v41 + 24), (char *)v15 + *(int *)(v41 + 24), v35);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v41);
      }
      uint64_t v22 = *(int *)(v38 + 24);
      uint64_t v23 = (_OWORD *)((char *)v7 + v22);
      uint64_t v24 = (_OWORD *)((char *)v8 + v22);
      if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v37)(v24, 1, v41))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        *uint64_t v23 = *v24;
        v36((char *)v23 + *(int *)(v41 + 24), (char *)v24 + *(int *)(v41 + 24), v35);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v41);
      }
    }
    else
    {
      *uint64_t v7 = *v8;
      uint64_t v19 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      __dsta = (char *)v8 + v19;
      uint64_t v42 = (char *)v7 + v19;
      uint64_t v20 = sub_1DD047BF8();
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v42, __dsta, v20);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v26 = a3[7];
  uint64_t v27 = a3[8];
  uint64_t v28 = (char *)a1 + v26;
  uint64_t v29 = (char *)a2 + v26;
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  uint64_t v30 = (char *)a1 + v27;
  uint64_t v31 = (char *)a2 + v27;
  uint64_t v32 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

void *sub_1DCEFB544(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_1DD047BF8();
        uint64_t v51 = (void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        uint64_t v52 = v14;
        uint64_t v58 = *v51;
        ((void (*)(void *, void *))*v51)(v7, v8);
        uint64_t v56 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        uint64_t v15 = *(int *)(v56 + 20);
        __dst = (void *)((char *)v7 + v15);
        uint64_t v16 = (void *)((char *)v8 + v15);
        uint64_t v17 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        uint64_t v18 = *(void *)(v17 - 8);
        uint64_t v63 = (int *)v17;
        unint64_t v54 = *(unsigned int (**)(void *, uint64_t))(v18 + 48);
        if (v54(v16, 1))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          void *__dst = *v16;
          __dst[1] = v16[1];
          v58((char *)__dst + v63[6], (char *)v16 + v63[6], v52);
          (*(void (**)(void *, void, uint64_t, int *))(v18 + 56))(__dst, 0, 1, v63);
        }
        uint64_t v30 = *(int *)(v56 + 24);
        uint64_t v31 = (void *)((char *)v7 + v30);
        uint64_t v32 = (void *)((char *)v8 + v30);
        if (((unsigned int (*)(void *, uint64_t, int *))v54)(v32, 1, v63))
        {
          uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          *uint64_t v31 = *v32;
          v31[1] = v32[1];
          v58((char *)v31 + v63[6], (char *)v32 + v63[6], v52);
          (*(void (**)(void *, void, uint64_t, int *))(v18 + 56))(v31, 0, 1, v63);
        }
      }
      else
      {
        *uint64_t v7 = *v8;
        uint64_t v27 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        __dstb = (char *)v8 + v27;
        uint64_t v65 = (char *)v7 + v27;
        uint64_t v28 = sub_1DD047BF8();
        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        v29(v65, __dstb, v28);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_20;
    }
LABEL_8:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_20;
  }
  if (v13)
  {
    sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1DD047BF8();
      uint64_t v53 = (void **)(*(void *)(v21 - 8) + 16);
      uint64_t v55 = v21;
      __dsta = (void (*)(char *, char *, uint64_t))*v53;
      ((void (*)(void *, void *))*v53)(v7, v8);
      uint64_t v59 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v22 = *(int *)(v59 + 20);
      uint64_t v64 = (void *)((char *)v7 + v22);
      uint64_t v23 = (void *)((char *)v8 + v22);
      uint64_t v24 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v57 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48);
      if (v57(v23, 1, v24))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v64, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        *uint64_t v64 = *v23;
        v64[1] = v23[1];
        __dsta((char *)v64 + *(int *)(v24 + 24), (char *)v23 + *(int *)(v24 + 24), v55);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v64, 0, 1, v24);
      }
      uint64_t v47 = *(int *)(v59 + 24);
      uint64_t v48 = (void *)((char *)v7 + v47);
      uint64_t v49 = (void *)((char *)v8 + v47);
      if (v57(v49, 1, v24))
      {
        uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        *uint64_t v48 = *v49;
        v48[1] = v49[1];
        __dsta((char *)v48 + *(int *)(v24 + 24), (char *)v49 + *(int *)(v24 + 24), v55);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v48, 0, 1, v24);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *uint64_t v7 = *v8;
      uint64_t v34 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      uint64_t v35 = (char *)v7 + v34;
      uint64_t v66 = (char *)v8 + v34;
      uint64_t v36 = sub_1DD047BF8();
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
      swift_bridgeObjectRetain();
      v37(v35, v66, v36);
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_20:
  uint64_t v38 = a3[7];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = *(void *)v40;
  v39[8] = v40[8];
  *(void *)uint64_t v39 = v41;
  uint64_t v42 = a3[8];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v43, v44, v45);
  return a1;
}

_OWORD *sub_1DCEFBC6C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_1DD047BF8();
      uint64_t v35 = (void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
      uint64_t v36 = v12;
      uint64_t v37 = *v35;
      ((void (*)(void *, void *))*v35)(v7, v8);
      uint64_t v13 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v14 = *(int *)(v13 + 20);
      uint64_t v39 = v13;
      __dst = (_OWORD *)((char *)v7 + v14);
      uint64_t v15 = (_OWORD *)((char *)v8 + v14);
      uint64_t v16 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v41 = v16;
      uint64_t v38 = *(unsigned int (**)(_OWORD *, uint64_t))(v17 + 48);
      if (v38(v15, 1))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        _OWORD *__dst = *v15;
        v37((char *)__dst + *(int *)(v41 + 24), (char *)v15 + *(int *)(v41 + 24), v36);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v41);
      }
      uint64_t v23 = *(int *)(v39 + 24);
      uint64_t v24 = (_OWORD *)((char *)v7 + v23);
      uint64_t v25 = (_OWORD *)((char *)v8 + v23);
      if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v38)(v25, 1, v41))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        *uint64_t v24 = *v25;
        v37((char *)v24 + *(int *)(v41 + 24), (char *)v25 + *(int *)(v41 + 24), v36);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v17 + 56))(v24, 0, 1, v41);
      }
    }
    else
    {
      *uint64_t v7 = *v8;
      uint64_t v19 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      uint64_t v20 = (char *)v7 + v19;
      uint64_t v21 = (char *)v8 + v19;
      uint64_t v22 = sub_1DD047BF8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v27 = a3[7];
  uint64_t v28 = a3[8];
  uint64_t v29 = (char *)a1 + v27;
  uint64_t v30 = (char *)a2 + v27;
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v30[8];
  uint64_t v31 = (char *)a1 + v28;
  uint64_t v32 = (char *)a2 + v28;
  uint64_t v33 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  return a1;
}

_OWORD *sub_1DCEFC064(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_1DD047BF8();
        uint64_t v53 = (void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
        uint64_t v55 = v14;
        int v62 = *v53;
        ((void (*)(void *, void *))*v53)(v7, v8);
        uint64_t v60 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        uint64_t v15 = *(int *)(v60 + 20);
        __dst = (_OWORD *)((char *)v7 + v15);
        uint64_t v16 = (_OWORD *)((char *)v8 + v15);
        uint64_t v17 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        uint64_t v18 = *(void *)(v17 - 8);
        uint64_t v58 = *(unsigned int (**)(_OWORD *, uint64_t))(v18 + 48);
        uint64_t v66 = (int *)v17;
        if (v58(v16, 1))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          _OWORD *__dst = *v16;
          v62((char *)__dst + v66[6], (char *)v16 + v66[6], v55);
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v18 + 56))(__dst, 0, 1, v66);
        }
        uint64_t v32 = *(int *)(v60 + 24);
        uint64_t v33 = (_OWORD *)((char *)v7 + v32);
        uint64_t v34 = (_OWORD *)((char *)v8 + v32);
        if (((unsigned int (*)(_OWORD *, uint64_t, int *))v58)(v34, 1, v66))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          *uint64_t v33 = *v34;
          v62((char *)v33 + v66[6], (char *)v34 + v66[6], v55);
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v18 + 56))(v33, 0, 1, v66);
        }
      }
      else
      {
        *uint64_t v7 = *v8;
        uint64_t v28 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        uint64_t v29 = (char *)v7 + v28;
        uint64_t v30 = (char *)v8 + v28;
        uint64_t v31 = sub_1DD047BF8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_20;
    }
LABEL_8:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_20;
  }
  if (v13)
  {
    sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1DD047BF8();
      uint64_t v56 = (void **)(*(void *)(v21 - 8) + 32);
      __src = (void *)v21;
      __dsta = (void (*)(char *, char *, void *))*v56;
      ((void (*)(void *, void *))*v56)(v7, v8);
      uint64_t v63 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
      uint64_t v22 = *(int *)(v63 + 20);
      uint64_t v67 = (_OWORD *)((char *)v7 + v22);
      uint64_t v23 = (char *)v8 + v22;
      uint64_t v24 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v59 = v23;
      uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      uint64_t v54 = v25;
      if (v61(v23, 1, v24))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v67, v23, *(void *)(*(void *)(v26 - 8) + 64));
        uint64_t v27 = __dsta;
      }
      else
      {
        uint64_t v27 = __dsta;
        _OWORD *v67 = *(_OWORD *)v59;
        __dsta((char *)v67 + *(int *)(v24 + 24), &v59[*(int *)(v24 + 24)], __src);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v25 + 56))(v67, 0, 1, v24);
      }
      uint64_t v48 = v24;
      uint64_t v49 = *(int *)(v63 + 24);
      uint64_t v50 = (_OWORD *)((char *)v7 + v49);
      uint64_t v51 = (_OWORD *)((char *)v8 + v49);
      if (v61((char *)v51, 1, v48))
      {
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        *uint64_t v50 = *v51;
        v27((char *)v50 + *(int *)(v48 + 24), (char *)v51 + *(int *)(v48 + 24), __src);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v54 + 56))(v50, 0, 1, v48);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *uint64_t v7 = *v8;
      uint64_t v36 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      uint64_t v37 = (char *)v7 + v36;
      uint64_t v38 = (char *)v8 + v36;
      uint64_t v39 = sub_1DD047BF8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_20:
  uint64_t v40 = a3[7];
  uint64_t v41 = a3[8];
  uint64_t v42 = (char *)a1 + v40;
  uint64_t v43 = (char *)a2 + v40;
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
  uint64_t v44 = (char *)a1 + v41;
  uint64_t v45 = (char *)a2 + v41;
  uint64_t v46 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t sub_1DCEFC744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCEFC758);
}

uint64_t sub_1DCEFC758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1DD047BF8();
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 32);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_1DCEFC858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCEFC86C);
}

uint64_t sub_1DCEFC86C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = sub_1DD047BF8();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 32);
    return v15(v17, a2, a2, v16);
  }
}

void sub_1DCEFC978()
{
  sub_1DCEF86FC(319, &qword_1EBE85D58, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  if (v0 <= 0x3F)
  {
    sub_1DD047BF8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DCEFCA74(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v6;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v7 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v8 = v7[6];
      __dst = (void *)(a1 + v8);
      uint64_t v9 = (uint64_t *)((char *)a2 + v8);
      uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      if (v12(v9, 1, v10))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
        memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        void *__dst = *v9;
        if (EnumCaseMultiPayload == 1) {
          uint64_t v22 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        }
        else {
          uint64_t v22 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        }
        uint64_t v50 = (char *)v9 + v22;
        uint64_t v52 = (char *)__dst + v22;
        uint64_t v23 = sub_1DD047BF8();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v52, v50, v23);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
      }
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v7 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v15 = v7[6];
      uint64_t v16 = (void *)(a1 + v15);
      uint64_t v17 = (uint64_t *)((char *)a2 + v15);
      uint64_t v18 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v25 = sub_1DD047BF8();
          uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
          uint64_t v47 = v25;
          ((void (*)(void *, void *))v46)(v16, v17);
          uint64_t v49 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v26 = *(int *)(v49 + 20);
          uint64_t v53 = (_OWORD *)((char *)v16 + v26);
          uint64_t v27 = (_OWORD *)((char *)v17 + v26);
          uint64_t v28 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v29 = *(void *)(v28 - 8);
          __dsta = (int *)v28;
          uint64_t v48 = *(unsigned int (**)(_OWORD *, uint64_t))(v29 + 48);
          uint64_t v45 = v29;
          if (v48(v27, 1))
          {
            uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v53, v27, *(void *)(*(void *)(v30 - 8) + 64));
          }
          else
          {
            _OWORD *v53 = *v27;
            v46((char *)v53 + __dsta[6], (char *)v27 + __dsta[6], v47);
            (*(void (**)(_OWORD *, void, uint64_t, int *))(v29 + 56))(v53, 0, 1, __dsta);
          }
          uint64_t v33 = *(int *)(v49 + 24);
          uint64_t v34 = (_OWORD *)((char *)v16 + v33);
          uint64_t v35 = (_OWORD *)((char *)v17 + v33);
          if (((unsigned int (*)(_OWORD *, uint64_t, int *))v48)(v35, 1, __dsta))
          {
            uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            *uint64_t v34 = *v35;
            v46((char *)v34 + __dsta[6], (char *)v35 + __dsta[6], v47);
            (*(void (**)(_OWORD *, void, uint64_t, int *))(v45 + 56))(v34, 0, 1, __dsta);
          }
        }
        else
        {
          *uint64_t v16 = *v17;
          uint64_t v31 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          uint64_t v54 = (char *)v17 + v31;
          __dstb = (char *)v16 + v31;
          uint64_t v32 = sub_1DD047BF8();
          uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
          swift_bridgeObjectRetain();
          v51(__dstb, v54, v32);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    uint64_t v37 = v7[7];
    uint64_t v38 = a1 + v37;
    uint64_t v39 = (uint64_t)a2 + v37;
    *(void *)uint64_t v38 = *(void *)v39;
    *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
    uint64_t v40 = v7[8];
    uint64_t v41 = a1 + v40;
    uint64_t v42 = (uint64_t)a2 + v40;
    uint64_t v43 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DCEFD150(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
    uint64_t v3 = a1 + *(int *)(v2 + 24);
    uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4)) {
      goto LABEL_14;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1) {
      uint64_t v6 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
    }
    else {
      uint64_t v6 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
    }
    goto LABEL_13;
  }
  uint64_t v2 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  uint64_t v3 = a1 + *(int *)(v2 + 24);
  uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v3, 1, v7)) {
    goto LABEL_14;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
LABEL_13:
    uint64_t v15 = v3 + *(int *)(v6 + 20);
    uint64_t v16 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    goto LABEL_14;
  }
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = (void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  uint64_t v21 = *v9;
  (*v9)(v3, v8);
  uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  uint64_t v11 = v3 + *(int *)(v10 + 20);
  uint64_t v12 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  if (!v13(v11, 1, v12)) {
    v21(v11 + *(int *)(v12 + 24), v8);
  }
  uint64_t v14 = v3 + *(int *)(v10 + 24);
  if (!v13(v14, 1, v12)) {
    v21(v14 + *(int *)(v12 + 24), v8);
  }
LABEL_14:
  uint64_t v17 = a1 + *(int *)(v2 + 32);
  uint64_t v18 = sub_1DD047BF8();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
  return v19(v17, v18);
}

uint64_t sub_1DCEFD43C(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    int v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
    uint64_t v6 = v5[6];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *uint64_t v7 = *v8;
      if (EnumCaseMultiPayload == 1) {
        uint64_t v20 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
      }
      else {
        uint64_t v20 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
      }
      uint64_t v48 = (char *)v8 + v20;
      __dsta = (char *)v7 + v20;
      uint64_t v21 = sub_1DD047BF8();
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(__dsta, v48, v21);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    int v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
    uint64_t v13 = v5[6];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (void *)(a2 + v13);
    uint64_t v16 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v23 = sub_1DD047BF8();
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        uint64_t v46 = v23;
        ((void (*)(void *, void *))v45)(v14, v15);
        uint64_t v24 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        uint64_t v25 = *(int *)(v24 + 20);
        uint64_t v49 = v24;
        __dst = (_OWORD *)((char *)v14 + v25);
        uint64_t v26 = (_OWORD *)((char *)v15 + v25);
        uint64_t v27 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v47 = *(unsigned int (**)(_OWORD *, uint64_t))(v28 + 48);
        uint64_t v54 = v27;
        uint64_t v44 = v28;
        if (v47(v26, 1))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(__dst, v26, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          _OWORD *__dst = *v26;
          v45((char *)__dst + *(int *)(v54 + 24), (char *)v26 + *(int *)(v54 + 24), v46);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v54);
        }
        uint64_t v32 = *(int *)(v49 + 24);
        uint64_t v33 = (_OWORD *)((char *)v14 + v32);
        uint64_t v34 = (_OWORD *)((char *)v15 + v32);
        if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v47)(v34, 1, v54))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          *uint64_t v33 = *v34;
          v45((char *)v33 + *(int *)(v54 + 24), (char *)v34 + *(int *)(v54 + 24), v46);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v44 + 56))(v33, 0, 1, v54);
        }
      }
      else
      {
        *uint64_t v14 = *v15;
        uint64_t v30 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        __dstb = (char *)v15 + v30;
        uint64_t v55 = (char *)v14 + v30;
        uint64_t v31 = sub_1DD047BF8();
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        v50(v55, __dstb, v31);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  uint64_t v36 = v5[7];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  *(void *)uint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  uint64_t v39 = v5[8];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DCEFDAAC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DCEF4BE4(a1, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v4 = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 8) = v4;
      int v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v6 = v5[6];
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (void *)(a2 + v6);
      uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      if (v11(v8, 1, v9))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *uint64_t v7 = *v8;
        if (EnumCaseMultiPayload == 1) {
          uint64_t v20 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        }
        else {
          uint64_t v20 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        }
        uint64_t v49 = (char *)v8 + v20;
        uint64_t v51 = (char *)v7 + v20;
        uint64_t v21 = sub_1DD047BF8();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v51, v49, v21);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      int v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v13 = v5[6];
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (void *)(a2 + v13);
      uint64_t v16 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v23 = sub_1DD047BF8();
          uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
          uint64_t v46 = v23;
          ((void (*)(void *, void *))v45)(v14, v15);
          uint64_t v48 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v24 = *(int *)(v48 + 20);
          uint64_t v52 = (void *)((char *)v14 + v24);
          uint64_t v25 = (void *)((char *)v15 + v24);
          uint64_t v26 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v27 = *(void *)(v26 - 8);
          uint64_t v54 = v26;
          uint64_t v47 = *(unsigned int (**)(void *, uint64_t))(v27 + 48);
          uint64_t v44 = v27;
          if (v47(v25, 1))
          {
            uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v52, v25, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            *uint64_t v52 = *v25;
            v52[1] = v25[1];
            v45((char *)v52 + *(int *)(v54 + 24), (char *)v25 + *(int *)(v54 + 24), v46);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v52, 0, 1, v54);
          }
          uint64_t v31 = *(int *)(v48 + 24);
          uint64_t v32 = (void *)((char *)v14 + v31);
          uint64_t v33 = (void *)((char *)v15 + v31);
          if (((unsigned int (*)(void *, uint64_t, uint64_t))v47)(v33, 1, v54))
          {
            uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
          }
          else
          {
            void *v32 = *v33;
            v32[1] = v33[1];
            v45((char *)v32 + *(int *)(v54 + 24), (char *)v33 + *(int *)(v54 + 24), v46);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v54);
          }
        }
        else
        {
          *uint64_t v14 = *v15;
          uint64_t v29 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          uint64_t v53 = (char *)v15 + v29;
          uint64_t v55 = (char *)v14 + v29;
          uint64_t v30 = sub_1DD047BF8();
          uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v55, v53, v30);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    uint64_t v35 = v5[7];
    uint64_t v36 = a1 + v35;
    uint64_t v37 = (uint64_t *)(a2 + v35);
    uint64_t v38 = *v37;
    *(unsigned char *)(v36 + 8) = *((unsigned char *)v37 + 8);
    *(void *)uint64_t v36 = v38;
    uint64_t v39 = v5[8];
    uint64_t v40 = a1 + v39;
    uint64_t v41 = a2 + v39;
    uint64_t v42 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DCEFE168(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(void *)a1 = *(void *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    int v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
    uint64_t v6 = v5[6];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      int v18 = swift_getEnumCaseMultiPayload();
      *uint64_t v7 = *v8;
      if (v18 == 1) {
        uint64_t v19 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
      }
      else {
        uint64_t v19 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
      }
      uint64_t v20 = (char *)v7 + v19;
      uint64_t v21 = (char *)v8 + v19;
      uint64_t v22 = sub_1DD047BF8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  else
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    int v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
    uint64_t v12 = v5[6];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    uint64_t v15 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v23 = sub_1DD047BF8();
        uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
        uint64_t v48 = v23;
        ((void (*)(void *, void *))v47)(v13, v14);
        uint64_t v24 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
        uint64_t v25 = *(int *)(v24 + 20);
        uint64_t v50 = v24;
        __dst = (_OWORD *)((char *)v13 + v25);
        uint64_t v26 = (_OWORD *)((char *)v14 + v25);
        uint64_t v27 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v49 = *(unsigned int (**)(_OWORD *, uint64_t))(v28 + 48);
        uint64_t v52 = v27;
        uint64_t v46 = v28;
        if (v49(v26, 1))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(__dst, v26, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          _OWORD *__dst = *v26;
          v47((char *)__dst + *(int *)(v52 + 24), (char *)v26 + *(int *)(v52 + 24), v48);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v52);
        }
        uint64_t v34 = *(int *)(v50 + 24);
        uint64_t v35 = (_OWORD *)((char *)v13 + v34);
        uint64_t v36 = (_OWORD *)((char *)v14 + v34);
        if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v49)(v36, 1, v52))
        {
          uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
          memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          *uint64_t v35 = *v36;
          v47((char *)v35 + *(int *)(v52 + 24), (char *)v36 + *(int *)(v52 + 24), v48);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v46 + 56))(v35, 0, 1, v52);
        }
      }
      else
      {
        *uint64_t v13 = *v14;
        uint64_t v30 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        uint64_t v31 = (char *)v13 + v30;
        uint64_t v32 = (char *)v14 + v30;
        uint64_t v33 = sub_1DD047BF8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  uint64_t v38 = v5[7];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  *(void *)uint64_t v39 = *(void *)v40;
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  uint64_t v41 = v5[8];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1DCEFE7A4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1DCEF4BE4(a1, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)a1 = *(void *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      int v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v6 = v5[6];
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (void *)(a2 + v6);
      uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        int v18 = swift_getEnumCaseMultiPayload();
        *uint64_t v7 = *v8;
        if (v18 == 1) {
          uint64_t v19 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        }
        else {
          uint64_t v19 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        }
        uint64_t v20 = (char *)v7 + v19;
        uint64_t v21 = (char *)v8 + v19;
        uint64_t v22 = sub_1DD047BF8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      int v5 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v12 = v5[6];
      uint64_t v13 = (void *)(a1 + v12);
      uint64_t v14 = (void *)(a2 + v12);
      uint64_t v15 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v23 = sub_1DD047BF8();
          uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
          uint64_t v47 = v23;
          ((void (*)(void *, void *))v46)(v13, v14);
          uint64_t v49 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v24 = *(int *)(v49 + 20);
          uint64_t v50 = (_OWORD *)((char *)v13 + v24);
          uint64_t v25 = (_OWORD *)((char *)v14 + v24);
          uint64_t v26 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v27 = *(void *)(v26 - 8);
          uint64_t v51 = v26;
          uint64_t v48 = *(unsigned int (**)(_OWORD *, uint64_t))(v27 + 48);
          uint64_t v45 = v27;
          if (v48(v25, 1))
          {
            uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v50, v25, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            *uint64_t v50 = *v25;
            v46((char *)v50 + *(int *)(v51 + 24), (char *)v25 + *(int *)(v51 + 24), v47);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v27 + 56))(v50, 0, 1, v51);
          }
          uint64_t v33 = *(int *)(v49 + 24);
          uint64_t v34 = (_OWORD *)((char *)v13 + v33);
          uint64_t v35 = (_OWORD *)((char *)v14 + v33);
          if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v48)(v35, 1, v51))
          {
            uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            *uint64_t v34 = *v35;
            v46((char *)v34 + *(int *)(v51 + 24), (char *)v35 + *(int *)(v51 + 24), v47);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v45 + 56))(v34, 0, 1, v51);
          }
        }
        else
        {
          *uint64_t v13 = *v14;
          uint64_t v29 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          uint64_t v30 = (char *)v13 + v29;
          uint64_t v31 = (char *)v14 + v29;
          uint64_t v32 = sub_1DD047BF8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    uint64_t v37 = v5[7];
    uint64_t v38 = a1 + v37;
    uint64_t v39 = a2 + v37;
    *(void *)uint64_t v38 = *(void *)v39;
    *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
    uint64_t v40 = v5[8];
    uint64_t v41 = a1 + v40;
    uint64_t v42 = a2 + v40;
    uint64_t v43 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1DCEFEE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCEFA9DC(a1, a2, a3, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
}

uint64_t *sub_1DCEFEE38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v71 = v8;
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        uint64_t v68 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
        uint64_t v12 = v68[6];
        __dst = (uint64_t *)((char *)a1 + v12);
        uint64_t v13 = (uint64_t *)((char *)a2 + v12);
        uint64_t v14 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
        uint64_t v15 = *(void *)(v14 - 8);
        uint64_t v16 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48);
        swift_bridgeObjectRetain();
        if (v16(v13, 1, v14))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
          memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          void *__dst = *v13;
          if (EnumCaseMultiPayload == 1) {
            uint64_t v26 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
          }
          else {
            uint64_t v26 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
          }
          uint64_t v64 = (char *)v13 + v26;
          uint64_t v65 = (char *)__dst + v26;
          uint64_t v27 = sub_1DD047BF8();
          uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
          swift_bridgeObjectRetain();
          v28(v65, v64, v27);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
        }
        uint64_t v35 = v68[7];
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        *(void *)uint64_t v36 = *(void *)v37;
        v36[8] = v37[8];
        uint64_t v38 = v68[8];
        uint64_t v39 = (char *)a1 + v38;
        uint64_t v40 = (char *)a2 + v38;
        uint64_t v41 = sub_1DD047BF8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
        uint64_t v8 = v71;
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        int v18 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
        uint64_t v19 = v18[6];
        uint64_t v20 = (uint64_t *)((char *)a1 + v19);
        uint64_t v21 = (uint64_t *)((char *)a2 + v19);
        uint64_t v22 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v29 = sub_1DD047BF8();
            uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
            uint64_t v62 = v29;
            ((void (*)(void *, void *))v61)(v20, v21);
            uint64_t v30 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
            uint64_t v31 = *(int *)(v30 + 20);
            uint64_t v72 = v20;
            uint64_t v66 = v30;
            uint64_t v69 = (_OWORD *)((char *)v20 + v31);
            uint64_t v32 = (_OWORD *)((char *)v21 + v31);
            uint64_t v33 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
            uint64_t v60 = *(void *)(v33 - 8);
            uint64_t v63 = *(unsigned int (**)(_OWORD *, uint64_t))(v60 + 48);
            __dsta = (int *)v33;
            if (v63(v32, 1))
            {
              uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(v69, v32, *(void *)(*(void *)(v34 - 8) + 64));
            }
            else
            {
              *uint64_t v69 = *v32;
              v61((char *)v69 + __dsta[6], (char *)v32 + __dsta[6], v62);
              (*(void (**)(_OWORD *, void, uint64_t, int *))(v60 + 56))(v69, 0, 1, __dsta);
            }
            uint64_t v44 = *(int *)(v66 + 24);
            uint64_t v45 = (_OWORD *)((char *)v72 + v44);
            uint64_t v46 = (_OWORD *)((char *)v21 + v44);
            if (((unsigned int (*)(_OWORD *, uint64_t, int *))v63)(v46, 1, __dsta))
            {
              uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
            }
            else
            {
              *uint64_t v45 = *v46;
              v61((char *)v45 + __dsta[6], (char *)v46 + __dsta[6], v62);
              (*(void (**)(_OWORD *, void, uint64_t, int *))(v60 + 56))(v45, 0, 1, __dsta);
            }
            uint64_t v20 = v72;
          }
          else
          {
            *uint64_t v20 = *v21;
            uint64_t v42 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                         + 20);
            int v70 = (char *)v21 + v42;
            uint64_t v73 = (char *)v20 + v42;
            uint64_t v43 = sub_1DD047BF8();
            uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
            swift_bridgeObjectRetain();
            v67(v73, v70, v43);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        uint64_t v48 = v18[7];
        uint64_t v49 = (char *)a1 + v48;
        uint64_t v50 = (char *)a2 + v48;
        *(void *)uint64_t v49 = *(void *)v50;
        v49[8] = v50[8];
        uint64_t v51 = v18[8];
        uint64_t v52 = (char *)a1 + v51;
        uint64_t v53 = (char *)a2 + v51;
        uint64_t v54 = sub_1DD047BF8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v55 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    uint64_t v58 = sub_1DD047BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  }
  return a1;
}

uint64_t sub_1DCEFF634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v6 = a1 + *(int *)(v5 + 24);
      uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (EnumCaseMultiPayload == 1) {
          uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
        }
        else {
          uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
        }
LABEL_14:
        uint64_t v17 = v6 + *(int *)(v9 + 20);
        uint64_t v18 = sub_1DD047BF8();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      }
    }
    else
    {
      uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v6 = a1 + *(int *)(v5 + 24);
      uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v6, 1, v10))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v11 = sub_1DD047BF8();
          uint64_t v25 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
          v25(v6, v11);
          uint64_t v12 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v13 = v6 + *(int *)(v12 + 20);
          uint64_t v14 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
          if (!v15(v13, 1, v14)) {
            v25(v13 + *(int *)(v14 + 24), v11);
          }
          uint64_t v16 = v6 + *(int *)(v12 + 24);
          if (!v15(v16, 1, v14)) {
            v25(v16 + *(int *)(v14 + 24), v11);
          }
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
        uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
        goto LABEL_14;
      }
    }
LABEL_15:
    uint64_t v19 = a1 + *(int *)(v5 + 32);
    uint64_t v20 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  }
  uint64_t v21 = a1 + *(int *)(a2 + 24);
  uint64_t v22 = sub_1DD047BF8();
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
  return v23(v21, v22);
}

void *sub_1DCEFF9A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v69 = v7;
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v66 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v10 = v66[6];
      __dst = (void *)((char *)a1 + v10);
      uint64_t v11 = (void *)((char *)a2 + v10);
      uint64_t v12 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
        memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        void *__dst = *v11;
        if (EnumCaseMultiPayload == 1) {
          uint64_t v24 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        }
        else {
          uint64_t v24 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        }
        uint64_t v62 = (char *)v11 + v24;
        uint64_t v63 = (char *)__dst + v24;
        uint64_t v25 = sub_1DD047BF8();
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(v63, v62, v25);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      }
      uint64_t v33 = v66[7];
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      *(void *)uint64_t v34 = *(void *)v35;
      v34[8] = v35[8];
      uint64_t v36 = v66[8];
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      uint64_t v39 = sub_1DD047BF8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      uint64_t v7 = v69;
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v16 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v17 = v16[6];
      uint64_t v18 = (void *)((char *)a1 + v17);
      uint64_t v19 = (void *)((char *)a2 + v17);
      uint64_t v20 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v27 = sub_1DD047BF8();
          uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
          uint64_t v60 = v27;
          ((void (*)(void *, void *))v59)(v18, v19);
          uint64_t v28 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v29 = *(int *)(v28 + 20);
          int v70 = v18;
          uint64_t v64 = v28;
          uint64_t v67 = (_OWORD *)((char *)v18 + v29);
          uint64_t v30 = (_OWORD *)((char *)v19 + v29);
          uint64_t v31 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v58 = *(void *)(v31 - 8);
          uint64_t v61 = *(unsigned int (**)(_OWORD *, uint64_t))(v58 + 48);
          __dsta = (int *)v31;
          if (v61(v30, 1))
          {
            uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v67, v30, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
            _OWORD *v67 = *v30;
            v59((char *)v67 + __dsta[6], (char *)v30 + __dsta[6], v60);
            (*(void (**)(_OWORD *, void, uint64_t, int *))(v58 + 56))(v67, 0, 1, __dsta);
          }
          uint64_t v42 = *(int *)(v64 + 24);
          uint64_t v43 = (_OWORD *)((char *)v70 + v42);
          uint64_t v44 = (_OWORD *)((char *)v19 + v42);
          if (((unsigned int (*)(_OWORD *, uint64_t, int *))v61)(v44, 1, __dsta))
          {
            uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
          }
          else
          {
            *uint64_t v43 = *v44;
            v59((char *)v43 + __dsta[6], (char *)v44 + __dsta[6], v60);
            (*(void (**)(_OWORD *, void, uint64_t, int *))(v58 + 56))(v43, 0, 1, __dsta);
          }
          uint64_t v18 = v70;
        }
        else
        {
          *uint64_t v18 = *v19;
          uint64_t v40 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          uint64_t v68 = (char *)v19 + v40;
          uint64_t v71 = (char *)v18 + v40;
          uint64_t v41 = sub_1DD047BF8();
          uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
          swift_bridgeObjectRetain();
          v65(v71, v68, v41);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      uint64_t v46 = v16[7];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v48[8];
      uint64_t v49 = v16[8];
      uint64_t v50 = (char *)a1 + v49;
      uint64_t v51 = (char *)a2 + v49;
      uint64_t v52 = sub_1DD047BF8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v53 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  uint64_t v56 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
  return a1;
}

uint64_t sub_1DCF00150(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v121 = a3;
        *(void *)a1 = *(void *)a2;
        uint64_t v11 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v11;
        uint64_t v115 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
        uint64_t v12 = v115[6];
        __dst = (void *)(a1 + v12);
        uint64_t v13 = (void *)(a2 + v12);
        uint64_t v14 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
        uint64_t v15 = *(void *)(v14 - 8);
        uint64_t v16 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48);
        swift_bridgeObjectRetain();
        if (v16(v13, 1, v14))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
          memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
          uint64_t v18 = v115;
          a3 = v121;
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          void *__dst = *v13;
          if (EnumCaseMultiPayload == 1) {
            uint64_t v35 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
          }
          else {
            uint64_t v35 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
          }
          int v109 = (char *)v13 + v35;
          uint64_t v111 = (char *)__dst + v35;
          uint64_t v36 = sub_1DD047BF8();
          uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
          swift_bridgeObjectRetain();
          v37(v111, v109, v36);
          uint64_t v18 = v115;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
          a3 = v121;
        }
      }
      else
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v18 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
        uint64_t v28 = v18[6];
        uint64_t v29 = (void *)(a1 + v28);
        uint64_t v30 = (void *)(a2 + v28);
        uint64_t v31 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
        uint64_t v32 = *(void *)(v31 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
          uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
          memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v45 = sub_1DD047BF8();
            uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
            uint64_t v105 = v45;
            ((void (*)(void *, void *))v104)(v29, v30);
            uint64_t v46 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
            uint64_t v47 = *(int *)(v46 + 20);
            int v123 = v29;
            uint64_t v112 = v46;
            uint64_t v116 = (void *)((char *)v29 + v47);
            uint64_t v48 = (void *)((char *)v30 + v47);
            uint64_t v49 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
            uint64_t v102 = *(void *)(v49 - 8);
            uint64_t v108 = *(unsigned int (**)(void *, uint64_t))(v102 + 48);
            __dstb = (int *)v49;
            if (v108(v48, 1))
            {
              uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(v116, v48, *(void *)(*(void *)(v50 - 8) + 64));
            }
            else
            {
              *uint64_t v116 = *v48;
              v116[1] = v48[1];
              v104((char *)v116 + __dstb[6], (char *)v48 + __dstb[6], v105);
              (*(void (**)(void *, void, uint64_t, int *))(v102 + 56))(v116, 0, 1, __dstb);
            }
            uint64_t v63 = *(int *)(v112 + 24);
            uint64_t v64 = (void *)((char *)v123 + v63);
            uint64_t v65 = (void *)((char *)v30 + v63);
            if (((unsigned int (*)(void *, uint64_t, int *))v108)(v65, 1, __dstb))
            {
              uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
            }
            else
            {
              *uint64_t v64 = *v65;
              v64[1] = v65[1];
              v104((char *)v64 + __dstb[6], (char *)v65 + __dstb[6], v105);
              (*(void (**)(void *, void, uint64_t, int *))(v102 + 56))(v64, 0, 1, __dstb);
            }
            uint64_t v29 = v123;
          }
          else
          {
            *uint64_t v29 = *v30;
            uint64_t v51 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                         + 20);
            uint64_t v117 = (char *)v30 + v51;
            uint64_t v124 = (char *)v29 + v51;
            uint64_t v52 = sub_1DD047BF8();
            uint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
            swift_bridgeObjectRetain();
            v113(v124, v117, v52);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
      }
      uint64_t v77 = v18[7];
      uint64_t v78 = a1 + v77;
      char v79 = (uint64_t *)(a2 + v77);
      uint64_t v80 = *v79;
      *(unsigned char *)(v78 + 8) = *((unsigned char *)v79 + 8);
      *(void *)uint64_t v78 = v80;
      uint64_t v81 = v18[8];
      uint64_t v82 = a1 + v81;
      uint64_t v83 = a2 + v81;
      uint64_t v84 = sub_1DD047BF8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_41;
    }
LABEL_8:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_41;
  }
  if (v10)
  {
    sub_1DCEF4BE4(a1, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1DCEF4BE4(a1, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v20 = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 8) = v20;
      uint64_t v21 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v22 = *(int *)(v21 + 24);
      uint64_t v122 = (int *)v21;
      __dsta = (void *)(a1 + v22);
      uint64_t v23 = (void *)(a2 + v22);
      uint64_t v24 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      if (v26(v23, 1, v24))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
        memcpy(__dsta, v23, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        int v53 = swift_getEnumCaseMultiPayload();
        void *__dsta = *v23;
        if (v53 == 1) {
          uint64_t v54 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        }
        else {
          uint64_t v54 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        }
        uint64_t v114 = (char *)v23 + v54;
        uint64_t v118 = (char *)__dsta + v54;
        uint64_t v55 = sub_1DD047BF8();
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v56(v118, v114, v55);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(__dsta, 0, 1, v24);
      }
      uint64_t v67 = v122[7];
      uint64_t v68 = a1 + v67;
      uint64_t v69 = (uint64_t *)(a2 + v67);
      uint64_t v70 = *v69;
      *(unsigned char *)(v68 + 8) = *((unsigned char *)v69 + 8);
      *(void *)uint64_t v68 = v70;
      uint64_t v71 = v122[8];
      uint64_t v72 = a1 + v71;
      uint64_t v73 = a2 + v71;
      uint64_t v74 = sub_1DD047BF8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v38 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v39 = v38[6];
      uint64_t v40 = (void *)(a1 + v39);
      uint64_t v41 = (void *)(a2 + v39);
      uint64_t v42 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      uint64_t v43 = *(void *)(v42 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
        memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v57 = sub_1DD047BF8();
          uint64_t v106 = *(void (**)(char *, char *, void *))(*(void *)(v57 - 8) + 16);
          __src = (void *)v57;
          ((void (*)(void *, void *))v106)(v40, v41);
          uint64_t v58 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v59 = *(int *)(v58 + 20);
          uint64_t v119 = (int *)v58;
          uint64_t v125 = (void *)((char *)v40 + v59);
          uint64_t v60 = (void *)((char *)v41 + v59);
          uint64_t v61 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v103 = *(void *)(v61 - 8);
          uint64_t v110 = *(unsigned int (**)(void *, uint64_t))(v103 + 48);
          __dstc = (int *)v61;
          if (v110(v60, 1))
          {
            uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v125, v60, *(void *)(*(void *)(v62 - 8) + 64));
          }
          else
          {
            *uint64_t v125 = *v60;
            v125[1] = v60[1];
            v106((char *)v125 + __dstc[6], (char *)v60 + __dstc[6], __src);
            (*(void (**)(void *, void, uint64_t, int *))(v103 + 56))(v125, 0, 1, __dstc);
          }
          uint64_t v90 = v119[6];
          uint64_t v91 = (void *)((char *)v40 + v90);
          uint64_t v92 = (void *)((char *)v41 + v90);
          if (((unsigned int (*)(void *, uint64_t, int *))v110)(v92, 1, __dstc))
          {
            uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            *uint64_t v91 = *v92;
            v91[1] = v92[1];
            v106((char *)v91 + __dstc[6], (char *)v92 + __dstc[6], __src);
            (*(void (**)(void *, void, uint64_t, int *))(v103 + 56))(v91, 0, 1, __dstc);
          }
        }
        else
        {
          *uint64_t v40 = *v41;
          uint64_t v75 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          uint64_t v126 = (char *)v41 + v75;
          __dstd = (char *)v40 + v75;
          uint64_t v76 = sub_1DD047BF8();
          uint64_t v120 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
          swift_bridgeObjectRetain();
          v120(__dstd, v126, v76);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      uint64_t v94 = v38[7];
      uint64_t v95 = a1 + v94;
      uint64_t v96 = (uint64_t *)(a2 + v94);
      uint64_t v97 = *v96;
      *(unsigned char *)(v95 + 8) = *((unsigned char *)v96 + 8);
      *(void *)uint64_t v95 = v97;
      uint64_t v98 = v38[8];
      uint64_t v99 = a1 + v98;
      uint64_t v100 = a2 + v98;
      uint64_t v101 = sub_1DD047BF8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_41:
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v85 = a3[6];
  uint64_t v86 = a1 + v85;
  uint64_t v87 = a2 + v85;
  uint64_t v88 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 24))(v86, v87, v88);
  return a1;
}

void *sub_1DCF00FDC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      int v10 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v11 = v10[6];
      uint64_t v12 = (void *)((char *)a1 + v11);
      uint64_t v13 = (void *)((char *)a2 + v11);
      uint64_t v14 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        int v23 = swift_getEnumCaseMultiPayload();
        *uint64_t v12 = *v13;
        if (v23 == 1) {
          uint64_t v24 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        }
        else {
          uint64_t v24 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        }
        uint64_t v59 = (char *)v12 + v24;
        uint64_t v25 = (char *)v13 + v24;
        uint64_t v26 = sub_1DD047BF8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v59, v25, v26);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
    }
    else
    {
      a1[1] = a2[1];
      int v10 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v17 = v10[6];
      uint64_t v18 = (void *)((char *)a1 + v17);
      uint64_t v19 = (void *)((char *)a2 + v17);
      uint64_t v20 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v27 = sub_1DD047BF8();
          uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32);
          uint64_t v53 = v27;
          ((void (*)(void *, void *))v52)(v18, v19);
          uint64_t v28 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v29 = *(int *)(v28 + 20);
          uint64_t v54 = v18;
          uint64_t v56 = v28;
          __dst = (_OWORD *)((char *)v18 + v29);
          uint64_t v30 = (_OWORD *)((char *)v19 + v29);
          uint64_t v31 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v51 = *(void *)(v31 - 8);
          uint64_t v55 = *(unsigned int (**)(_OWORD *, uint64_t))(v51 + 48);
          uint64_t v60 = v31;
          if (v55(v30, 1))
          {
            uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(__dst, v30, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
            _OWORD *__dst = *v30;
            v52((char *)__dst + *(int *)(v60 + 24), (char *)v30 + *(int *)(v60 + 24), v53);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 1, v60);
          }
          uint64_t v36 = *(int *)(v56 + 24);
          uint64_t v18 = v54;
          __dsta = (_OWORD *)((char *)v54 + v36);
          uint64_t v37 = (_OWORD *)((char *)v19 + v36);
          if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v55)(v37, 1, v60))
          {
            uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(__dsta, v37, *(void *)(*(void *)(v38 - 8) + 64));
          }
          else
          {
            _OWORD *__dsta = *v37;
            v52((char *)__dsta + *(int *)(v60 + 24), (char *)v37 + *(int *)(v60 + 24), v53);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v51 + 56))(__dsta, 0, 1, v60);
          }
        }
        else
        {
          *uint64_t v18 = *v19;
          uint64_t v33 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          uint64_t v61 = (char *)v18 + v33;
          uint64_t v34 = (char *)v19 + v33;
          uint64_t v35 = sub_1DD047BF8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v61, v34, v35);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
    }
    uint64_t v39 = v10[7];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    *(void *)uint64_t v40 = *(void *)v41;
    v40[8] = v41[8];
    uint64_t v42 = v10[8];
    uint64_t v43 = (char *)a1 + v42;
    uint64_t v44 = (char *)a2 + v42;
    uint64_t v45 = sub_1DD047BF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v46 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
  return a1;
}

uint64_t sub_1DCF01744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(void *)a1 = *(void *)a2;
      if (EnumCaseMultiPayload == 1)
      {
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        uint64_t v12 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
        uint64_t v13 = v12[6];
        uint64_t v14 = (void *)(a1 + v13);
        uint64_t v15 = (void *)(a2 + v13);
        uint64_t v16 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
        uint64_t v17 = *(void *)(v16 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
        {
          uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
          memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          int v34 = swift_getEnumCaseMultiPayload();
          *uint64_t v14 = *v15;
          if (v34 == 1) {
            uint64_t v35 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
          }
          else {
            uint64_t v35 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
          }
          uint64_t v108 = (char *)v14 + v35;
          uint64_t v36 = (char *)v15 + v35;
          uint64_t v37 = sub_1DD047BF8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v108, v36, v37);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
        }
      }
      else
      {
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v12 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
        uint64_t v28 = v12[6];
        uint64_t v29 = (void *)(a1 + v28);
        uint64_t v30 = (void *)(a2 + v28);
        uint64_t v31 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
        uint64_t v32 = *(void *)(v31 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
          uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
          memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v44 = sub_1DD047BF8();
            uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32);
            uint64_t v97 = v44;
            ((void (*)(void *, void *))v96)(v29, v30);
            uint64_t v45 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
            uint64_t v46 = *(int *)(v45 + 20);
            uint64_t v99 = v29;
            uint64_t v103 = v45;
            __dst = (_OWORD *)((char *)v29 + v46);
            uint64_t v47 = (_OWORD *)((char *)v30 + v46);
            uint64_t v48 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
            uint64_t v94 = *(void *)(v48 - 8);
            uint64_t v101 = *(unsigned int (**)(_OWORD *, uint64_t))(v94 + 48);
            uint64_t v109 = v48;
            if (v101(v47, 1))
            {
              uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(__dst, v47, *(void *)(*(void *)(v49 - 8) + 64));
            }
            else
            {
              _OWORD *__dst = *v47;
              v96((char *)__dst + *(int *)(v109 + 24), (char *)v47 + *(int *)(v109 + 24), v97);
              (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v94 + 56))(__dst, 0, 1, v109);
            }
            uint64_t v64 = *(int *)(v103 + 24);
            uint64_t v29 = v99;
            __dstb = (_OWORD *)((char *)v99 + v64);
            uint64_t v65 = (_OWORD *)((char *)v30 + v64);
            if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v101)(v65, 1, v109))
            {
              uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
              memcpy(__dstb, v65, *(void *)(*(void *)(v66 - 8) + 64));
            }
            else
            {
              _OWORD *__dstb = *v65;
              v96((char *)__dstb + *(int *)(v109 + 24), (char *)v65 + *(int *)(v109 + 24), v97);
              (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v94 + 56))(__dstb, 0, 1, v109);
            }
          }
          else
          {
            *uint64_t v29 = *v30;
            uint64_t v50 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0)
                         + 20);
            uint64_t v110 = (char *)v29 + v50;
            uint64_t v51 = (char *)v30 + v50;
            uint64_t v52 = sub_1DD047BF8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v110, v51, v52);
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
      }
      uint64_t v78 = v12[7];
      uint64_t v79 = a1 + v78;
      uint64_t v80 = a2 + v78;
      *(void *)uint64_t v79 = *(void *)v80;
      *(unsigned char *)(v79 + 8) = *(unsigned char *)(v80 + 8);
      uint64_t v81 = v12[8];
      uint64_t v82 = a1 + v81;
      uint64_t v83 = a2 + v81;
      uint64_t v84 = sub_1DD047BF8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_40;
    }
LABEL_8:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_40;
  }
  if (v10)
  {
    sub_1DCEF4BE4(a1, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1DCEF4BE4(a1, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    int v20 = swift_getEnumCaseMultiPayload();
    *(void *)a1 = *(void *)a2;
    if (v20 == 1)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v21 = (int *)type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      uint64_t v22 = v21[6];
      int v23 = (void *)(a1 + v22);
      uint64_t v24 = (void *)(a2 + v22);
      uint64_t v25 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      uint64_t v26 = *(void *)(v25 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
        memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        int v53 = swift_getEnumCaseMultiPayload();
        *int v23 = *v24;
        if (v53 == 1) {
          uint64_t v54 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0) + 20);
        }
        else {
          uint64_t v54 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0) + 20);
        }
        uint64_t v55 = (char *)v23 + v54;
        uint64_t v56 = (char *)v24 + v54;
        uint64_t v57 = sub_1DD047BF8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
    }
    else
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v21 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v38 = v21[6];
      uint64_t v39 = (void *)(a1 + v38);
      uint64_t v40 = (void *)(a2 + v38);
      uint64_t v41 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
      uint64_t v42 = *(void *)(v41 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
        memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v58 = sub_1DD047BF8();
          uint64_t v98 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32);
          uint64_t v100 = v58;
          ((void (*)(void *, void *))v98)(v39, v40);
          uint64_t v59 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
          uint64_t v60 = *(int *)(v59 + 20);
          uint64_t v104 = v59;
          __dsta = (_OWORD *)((char *)v39 + v60);
          uint64_t v61 = (_OWORD *)((char *)v40 + v60);
          uint64_t v62 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
          uint64_t v95 = *(void *)(v62 - 8);
          uint64_t v102 = *(unsigned int (**)(_OWORD *, uint64_t))(v95 + 48);
          uint64_t v111 = v62;
          if (v102(v61, 1))
          {
            uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(__dsta, v61, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            _OWORD *__dsta = *v61;
            v98((char *)__dsta + *(int *)(v111 + 24), (char *)v61 + *(int *)(v111 + 24), v100);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v95 + 56))(__dsta, 0, 1, v111);
          }
          uint64_t v90 = *(int *)(v104 + 24);
          uint64_t v91 = (_OWORD *)((char *)v39 + v90);
          uint64_t v92 = (_OWORD *)((char *)v40 + v90);
          if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v102)(v92, 1, v111))
          {
            uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
            memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            *uint64_t v91 = *v92;
            v98((char *)v91 + *(int *)(v111 + 24), (char *)v92 + *(int *)(v111 + 24), v100);
            (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v95 + 56))(v91, 0, 1, v111);
          }
        }
        else
        {
          *uint64_t v39 = *v40;
          uint64_t v74 = *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          uint64_t v75 = (char *)v39 + v74;
          uint64_t v76 = (char *)v40 + v74;
          uint64_t v77 = sub_1DD047BF8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
    }
    uint64_t v67 = v21[7];
    uint64_t v68 = a1 + v67;
    uint64_t v69 = a2 + v67;
    *(void *)uint64_t v68 = *(void *)v69;
    *(unsigned char *)(v68 + 8) = *(unsigned char *)(v69 + 8);
    uint64_t v70 = v21[8];
    uint64_t v71 = a1 + v70;
    uint64_t v72 = a2 + v70;
    uint64_t v73 = sub_1DD047BF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
    swift_storeEnumTagMultiPayload();
  }
LABEL_40:
  uint64_t v85 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v86 = a1 + v85;
  uint64_t v87 = a2 + v85;
  uint64_t v88 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 40))(v86, v87, v88);
  return a1;
}

uint64_t sub_1DCF0250C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF02520);
}

uint64_t sub_1DCF02520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 254)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1DCF0265C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF02670);
}

uint64_t sub_1DCF02670(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 254)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  else
  {
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1DCF0279C()
{
  sub_1DCEF86FC(319, &qword_1EBE85B30, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  if (v0 <= 0x3F)
  {
    sub_1DD047BF8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1DCF02890@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCF02A24((uint64_t (*)(void))sub_1DCF0F804, a1);
}

uint64_t sub_1DCF028A8()
{
  if (v0[8]) {
    return 10 * *(void *)v0;
  }
  else {
    return *(void *)v0;
  }
}

uint64_t sub_1DCF028C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCF02A94(a1, sub_1DCF0F804, a2);
}

void sub_1DCF028DC(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  if (*(unsigned char *)(v1 + 8)) {
    uint64_t v2 = 10 * *(void *)v1;
  }
  *a1 = v2;
}

uint64_t sub_1DCF028FC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1DCF0ED50();
  return MEMORY[0x1F4127160](a1, a2, v4);
}

BOOL sub_1DCF02948(uint64_t a1, uint64_t a2)
{
  return sub_1DCDC2CAC(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

void sub_1DCF02964()
{
  qword_1EAB1D158 = (uint64_t)&unk_1F38366C8;
}

uint64_t sub_1DCF02978@<X0>(void *a1@<X8>)
{
  return sub_1DCDE8684(&qword_1EAB01F60, &qword_1EAB1D158, a1);
}

BOOL sub_1DCF029A0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 8);
  BOOL v3 = *(void *)a1 == *(void *)a2;
  if (*(unsigned char *)(a2 + 8)) {
    BOOL v3 = 0;
  }
  BOOL v4 = COERCE_FLOAT(*(void *)a1) == COERCE_FLOAT(*(void *)a2);
  if (v2 != 1) {
    BOOL v4 = 0;
  }
  BOOL v5 = v2 == 2 && *(double *)a1 == *(double *)a2;
  if (*(unsigned char *)(a1 + 8) != 1) {
    BOOL v4 = v5;
  }
  if (*(unsigned char *)(a1 + 8)) {
    return v4;
  }
  else {
    return v3;
  }
}

uint64_t sub_1DCF02A0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCF02A24((uint64_t (*)(void))sub_1DCF0F8E4, a1);
}

uint64_t sub_1DCF02A24@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result = a1();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 9) = v5 & 1;
  return result;
}

uint64_t sub_1DCF02A5C()
{
  uint64_t result = *v0;
  if (*((unsigned char *)v0 + 8) == 1) {
    return qword_1DD05D088[result];
  }
  return result;
}

uint64_t sub_1DCF02A7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCF02A94(a1, sub_1DCF0F8E4, a2);
}

uint64_t sub_1DCF02A94@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t result = a2(*a1);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 9) = v6 & 1;
  return result;
}

void sub_1DCF02AD0(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (*((unsigned char *)v1 + 8) == 1) {
    uint64_t v2 = qword_1DD05D088[v2];
  }
  *a1 = v2;
}

uint64_t sub_1DCF02AF4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1DCF0EE0C();
  return MEMORY[0x1F4127160](a1, a2, v4);
}

BOOL sub_1DCF02B40(uint64_t a1, uint64_t a2)
{
  return sub_1DCDC2C70(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

void sub_1DCF02B5C()
{
  qword_1EAB1D160 = (uint64_t)&unk_1F3836658;
}

uint64_t sub_1DCF02B70@<X0>(void *a1@<X8>)
{
  return sub_1DCDE8684(&qword_1EAB01F68, &qword_1EAB1D160, a1);
}

uint64_t sub_1DCF02B98(uint64_t a1)
{
  return sub_1DCF052E0(a1, qword_1EAB1D168, (uint64_t)"lowerBound", (uint64_t)"upperBound", 10);
}

unint64_t sub_1DCF02BB8()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1DCF02BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF04AC4(a1, a2, a3, MEMORY[0x1E4F70EE8]);
}

uint64_t sub_1DCF02C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF04B70(a1, a2, a3, MEMORY[0x1E4F70F90], (void (*)(void))type metadata accessor for Argos_Protos_MLModel_SizeRange);
}

uint64_t sub_1DCF02C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF0AE4C(&qword_1EAB03FC0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_SizeRange);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF02CBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EAB01F70, (uint64_t)qword_1EAB1D168, a1);
}

uint64_t sub_1DCF02CE0(uint64_t a1)
{
  uint64_t v2 = sub_1DCF0AE4C(&qword_1EAB03F88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_SizeRange);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF02D4C()
{
  sub_1DCF0AE4C(&qword_1EAB03F88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_SizeRange);
  return sub_1DD047E68();
}

uint64_t sub_1DCF02DC8(char *a1, char *a2)
{
  return sub_1DCF0EB80(a1, a2, (uint64_t (*)(void, double))type metadata accessor for Argos_Protos_MLModel_SizeRange) & 1;
}

uint64_t sub_1DCF02DF8()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C880);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C880);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF00;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "width";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "height";
  *(void *)(v10 + 8) = 6;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 21;
  *(void *)uint64_t v12 = "enumeratedSizes";
  *((void *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 31;
  *(void *)uint64_t v14 = "imageSizeRange";
  *((void *)v14 + 1) = 14;
  v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 3;
  *(void *)uint64_t v15 = "colorSpace";
  *(void *)(v15 + 8) = 10;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF0307C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_1DD047CB8();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          sub_1DD047D58();
          break;
        case 3:
          sub_1DCF031FC();
          break;
        case 21:
          sub_1DCF03274(v5, a1, a2, a3);
          break;
        case 31:
          sub_1DCF037F0(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF031FC()
{
  return sub_1DD047CE8();
}

uint64_t sub_1DCF03274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v47 = a1;
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v38 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v35 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03FD0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v39 = (uint64_t)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v22 = MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v35 - v23;
  uint64_t v40 = v5;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v5 + 56);
  uint64_t v42 = v4;
  v25((char *)&v35 - v23, 1, 1, v4, v22);
  uint64_t v36 = v47 + *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0) + 24);
  sub_1DCD2889C(v36, (uint64_t)v11, &qword_1EBE85D50);
  uint64_t v37 = v13;
  LODWORD(v47) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (v47 == 1)
  {
    sub_1DCD2479C((uint64_t)v11, &qword_1EBE85D50);
    uint64_t v26 = v12;
LABEL_5:
    uint64_t v29 = v42;
    uint64_t v28 = v43;
    goto LABEL_7;
  }
  uint64_t v27 = (uint64_t)v41;
  sub_1DCF0EDA4((uint64_t)v11, (uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  sub_1DCF0EDA4((uint64_t)v18, (uint64_t)v15, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  uint64_t v26 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DCEF4BE4((uint64_t)v15, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    goto LABEL_5;
  }
  sub_1DCD2479C((uint64_t)v24, &qword_1EAB03FD0);
  sub_1DCF0EDA4((uint64_t)v15, v27, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
  sub_1DCF0EDA4(v27, (uint64_t)v24, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
  uint64_t v29 = v42;
  ((void (*)(char *, void, uint64_t, uint64_t))v25)(v24, 0, 1, v42);
  uint64_t v28 = v43;
LABEL_7:
  sub_1DCF0AE4C(&qword_1EAB03F38, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
  sub_1DD047DF8();
  if (v28) {
    return sub_1DCD2479C((uint64_t)v24, &qword_1EAB03FD0);
  }
  uint64_t v31 = v39;
  sub_1DCD2889C((uint64_t)v24, v39, &qword_1EAB03FD0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v31, 1, v29) == 1)
  {
    sub_1DCD2479C((uint64_t)v24, &qword_1EAB03FD0);
    return sub_1DCD2479C(v31, &qword_1EAB03FD0);
  }
  else
  {
    uint64_t v32 = v31;
    uint64_t v33 = v38;
    sub_1DCF0EDA4(v32, v38, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
    if (v47 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v24, &qword_1EAB03FD0);
    uint64_t v34 = v36;
    sub_1DCD2479C(v36, &qword_1EBE85D50);
    sub_1DCF0EDA4(v33, v34, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v26);
  }
}

uint64_t sub_1DCF037F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v47 = a1;
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v38 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v35 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03FD8);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v39 = (uint64_t)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v22 = MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v35 - v23;
  uint64_t v40 = v5;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v5 + 56);
  uint64_t v42 = v4;
  v25((char *)&v35 - v23, 1, 1, v4, v22);
  uint64_t v36 = v47 + *(int *)(type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0) + 24);
  sub_1DCD2889C(v36, (uint64_t)v11, &qword_1EBE85D50);
  uint64_t v37 = v13;
  LODWORD(v47) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (v47 == 1)
  {
    sub_1DCD2479C((uint64_t)v11, &qword_1EBE85D50);
    uint64_t v26 = v12;
  }
  else
  {
    uint64_t v27 = (uint64_t)v41;
    sub_1DCF0EDA4((uint64_t)v11, (uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    sub_1DCF0EDA4((uint64_t)v18, (uint64_t)v15, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    uint64_t v26 = v12;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DCD2479C((uint64_t)v24, &qword_1EAB03FD8);
      sub_1DCF0EDA4((uint64_t)v15, v27, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
      sub_1DCF0EDA4(v27, (uint64_t)v24, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
      uint64_t v28 = v42;
      ((void (*)(char *, void, uint64_t, uint64_t))v25)(v24, 0, 1, v42);
      uint64_t v29 = v43;
      goto LABEL_7;
    }
    sub_1DCEF4BE4((uint64_t)v15, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  }
  uint64_t v28 = v42;
  uint64_t v29 = v43;
LABEL_7:
  sub_1DCF0AE4C(&qword_1EAB03F18, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
  sub_1DD047DF8();
  if (v29) {
    return sub_1DCD2479C((uint64_t)v24, &qword_1EAB03FD8);
  }
  uint64_t v31 = v39;
  sub_1DCD2889C((uint64_t)v24, v39, &qword_1EAB03FD8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v31, 1, v28) == 1)
  {
    sub_1DCD2479C((uint64_t)v24, &qword_1EAB03FD8);
    return sub_1DCD2479C(v31, &qword_1EAB03FD8);
  }
  else
  {
    uint64_t v32 = v31;
    uint64_t v33 = v38;
    sub_1DCF0EDA4(v32, v38, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
    if (v47 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v24, &qword_1EAB03FD8);
    uint64_t v34 = v36;
    sub_1DCD2479C(v36, &qword_1EBE85D50);
    sub_1DCF0EDA4(v33, v34, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v26);
  }
}

uint64_t sub_1DCF03D6C()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*v0 || (uint64_t result = sub_1DD047F58(), !v1))
  {
    if (!v0[1] || (uint64_t result = sub_1DD047F58(), !v1))
    {
      uint64_t v6 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
      uint64_t v7 = (char *)v0 + *(int *)(v6 + 28);
      uint64_t v8 = *(void *)v7;
      LOBYTE(v7) = v7[8];
      uint64_t v10 = v8;
      char v11 = (char)v7;
      sub_1DCF0ED50();
      uint64_t result = sub_1DD047F18();
      if (!v1)
      {
        sub_1DCD2889C((uint64_t)v0 + *(int *)(v6 + 24), (uint64_t)v4, &qword_1EBE85D50);
        uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9) != 1)
        {
          if (swift_getEnumCaseMultiPayload() == 1) {
            sub_1DCF041C4((uint64_t)v0);
          }
          else {
            sub_1DCF03F94((uint64_t)v0);
          }
          sub_1DCEF4BE4((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
        }
        return sub_1DD047BD8();
      }
    }
  }
  return result;
}

uint64_t sub_1DCF03F94(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  sub_1DCD2889C(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_1EBE85D50);
  uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE85D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DCF0EDA4((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
    sub_1DCF0AE4C(&qword_1EAB03F38, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
    sub_1DD047FC8();
    return sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
  }
  uint64_t result = sub_1DCEF4BE4((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  __break(1u);
  return result;
}

uint64_t sub_1DCF041C4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  sub_1DCD2889C(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_1EBE85D50);
  uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE85D50);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DCF0EDA4((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
    sub_1DCF0AE4C(&qword_1EAB03F18, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
    sub_1DD047FC8();
    return sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
  }
  uint64_t result = sub_1DCEF4BE4((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  __break(1u);
  return result;
}

uint64_t sub_1DCF043F8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (char *)a2 + *(int *)(a1 + 28);
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF0448C()
{
  return 0xD000000000000025;
}

uint64_t sub_1DCF044A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF0307C(a1, a2, a3);
}

uint64_t sub_1DCF044C0()
{
  return sub_1DCF03D6C();
}

uint64_t sub_1DCF044D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF0AE4C(&qword_1EAB03FC8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF04554@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85D38, (uint64_t)qword_1EBE9C880, a1);
}

uint64_t sub_1DCF04578(uint64_t a1)
{
  uint64_t v2 = sub_1DCF0AE4C(&qword_1EBE85D60, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF045E4()
{
  sub_1DCF0AE4C(&qword_1EBE85D60, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  return sub_1DD047E68();
}

uint64_t sub_1DCF04664()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9CA10);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9CA10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04EF80;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "INVALID_COLOR_SPACE";
  *(void *)(v6 + 8) = 19;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 10;
  *(void *)unint64_t v10 = "GRAYSCALE";
  *(void *)(v10 + 8) = 9;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  char v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *char v11 = 20;
  *(void *)uint64_t v12 = "RGB";
  *((void *)v12 + 1) = 3;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 30;
  *(void *)uint64_t v14 = "BGR";
  *((void *)v14 + 1) = 3;
  v14[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF048A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85D10, (uint64_t)qword_1EBE9CA10, a1);
}

uint64_t sub_1DCF048C8(uint64_t a1)
{
  return sub_1DCF05254(a1, 0x69536567616D492ELL, 0xEA0000000000657ALL, qword_1EAB1D180, &qword_1EAB1D180[1]);
}

uint64_t sub_1DCF048F0(uint64_t a1)
{
  return sub_1DCF04910(a1, qword_1EAB1D190, (uint64_t)"width", 2, (uint64_t)"height");
}

uint64_t sub_1DCF04910(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_1DD048008();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v8 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v9 = *(void *)(*(void *)v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DD04EF60;
  uint64_t v12 = (void *)(v11 + v10);
  unint64_t v13 = v11 + v10 + v8[14];
  *uint64_t v12 = 1;
  *(void *)unint64_t v13 = a3;
  *(void *)(v13 + 8) = 5;
  *(unsigned char *)(v13 + 16) = 2;
  uint64_t v14 = *MEMORY[0x1E4F70FB8];
  uint64_t v15 = sub_1DD047FD8();
  uint64_t v16 = *(void (**)(void))(*(void *)(v15 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v16)(v13, v14, v15);
  uint64_t v17 = (char *)v12 + v9 + v8[14];
  *(void *)((char *)v12 + v9) = a4;
  *(void *)uint64_t v17 = a5;
  *((void *)v17 + 1) = 6;
  v17[16] = 2;
  v16();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF04AC4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = sub_1DD047CB8();
  if (!v5)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        a4(v4 + 8, a2, a3);
      }
      else if (result == 1)
      {
        sub_1DD047DD8();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF04B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(void))
{
  if (!*v5 || (uint64_t result = sub_1DD047FA8(), !v6))
  {
    uint64_t v12 = v5[1];
    if (!v12 || (uint64_t result = a4(v12, 2, a2, a3), !v6))
    {
      a5(0);
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCF04C44(uint64_t a1, uint64_t a2)
{
  return sub_1DCDA6DC8(a1, a2, &qword_1EAB01F78, qword_1EAB1D180);
}

uint64_t sub_1DCF04C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF04AC4(a1, a2, a3, MEMORY[0x1E4F70F30]);
}

uint64_t sub_1DCF04C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF04B70(a1, a2, a3, MEMORY[0x1E4F70FA0], (void (*)(void))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
}

uint64_t sub_1DCF04CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF0AE4C(&qword_1EAB03FF8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF04D54@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EAB01F80, (uint64_t)qword_1EAB1D190, a1);
}

uint64_t sub_1DCF04D78(uint64_t a1)
{
  uint64_t v2 = sub_1DCF0AE4C(&qword_1EAB03F58, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF04DE4()
{
  sub_1DCF0AE4C(&qword_1EAB03F58, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
  return sub_1DD047E68();
}

uint64_t sub_1DCF04E60(char *a1, char *a2)
{
  return sub_1DCF0EB80(a1, a2, (uint64_t (*)(void, double))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize) & 1;
}

uint64_t sub_1DCF04E90(uint64_t a1)
{
  return sub_1DCF05254(a1, 0xD000000000000015, 0x80000001DD06DF20, qword_1EAB1D1A8, &qword_1EAB1D1A8[1]);
}

uint64_t sub_1DCF04EB8(uint64_t a1)
{
  return sub_1DCF08470(a1, qword_1EAB1D1B8, (uint64_t)"sizes", 5);
}

uint64_t sub_1DCF04ED0()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize(0),
        sub_1DCF0AE4C(&qword_1EAB03F58, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize), uint64_t result = sub_1DD047FB8(), !v1))
  {
    type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
    return sub_1DD047BD8();
  }
  return result;
}

uint64_t sub_1DCF04FBC(uint64_t a1, uint64_t a2)
{
  return sub_1DCDA6DC8(a1, a2, &qword_1EAB01F88, qword_1EAB1D1A8);
}

uint64_t sub_1DCF04FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF085CC(a1, a2, a3, (void (*)(void))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize, &qword_1EAB03F58, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
}

uint64_t sub_1DCF05040()
{
  return sub_1DCF04ED0();
}

uint64_t sub_1DCF05058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF0AE4C(&qword_1EAB04000, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF050D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EAB01F90, (uint64_t)qword_1EAB1D1B8, a1);
}

uint64_t sub_1DCF050F8(uint64_t a1)
{
  uint64_t v2 = sub_1DCF0AE4C(&qword_1EAB03F38, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF05164()
{
  sub_1DCF0AE4C(&qword_1EAB03F38, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
  return sub_1DD047E68();
}

uint64_t sub_1DCF051E0(char *a1, char *a2)
{
  return sub_1DCF0D78C(a1, a2, (uint64_t (*)(void, void, double))sub_1DCFBB694, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes) & 1;
}

uint64_t sub_1DCF05224(uint64_t a1)
{
  return sub_1DCF05254(a1, 0x69536567616D492ELL, 0xEF65676E6152657ALL, qword_1EAB1D1D0, &qword_1EAB1D1D0[1]);
}

uint64_t sub_1DCF05254(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t result = sub_1DD048548();
  *a4 = 0xD000000000000025;
  *a5 = 0x80000001DD06DE90;
  return result;
}

uint64_t sub_1DCF052C0(uint64_t a1)
{
  return sub_1DCF052E0(a1, qword_1EAB1D1E0, (uint64_t)"widthRange", (uint64_t)"heightRange", 11);
}

uint64_t sub_1DCF052E0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_1DD048008();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v8 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v9 = *(void *)(*(void *)v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1DD04EF60;
  uint64_t v12 = (void *)(v11 + v10);
  unint64_t v13 = v11 + v10 + v8[14];
  *uint64_t v12 = 1;
  *(void *)unint64_t v13 = a3;
  *(void *)(v13 + 8) = 10;
  *(unsigned char *)(v13 + 16) = 2;
  uint64_t v14 = *MEMORY[0x1E4F70FB8];
  uint64_t v15 = sub_1DD047FD8();
  uint64_t v16 = *(void (**)(void))(*(void *)(v15 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v16)(v13, v14, v15);
  uint64_t v17 = (char *)v12 + v9 + v8[14];
  *(void *)((char *)v12 + v9) = 2;
  *(void *)uint64_t v17 = a4;
  *((void *)v17 + 1) = a5;
  v17[16] = 2;
  v16();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF05490()
{
  while (1)
  {
    uint64_t result = sub_1DD047CB8();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_1DCF055D4();
    }
    else if (result == 1)
    {
      sub_1DCF05524();
    }
  }
  return result;
}

uint64_t sub_1DCF05524()
{
  return sub_1DD047DF8();
}

uint64_t sub_1DCF055D4()
{
  return sub_1DD047DF8();
}

uint64_t sub_1DCF05684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v23[1] = a3;
  uint64_t v26 = a2;
  uint64_t v25 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)v23 - v9;
  uint64_t v11 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  v23[0] = (uint64_t)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v23 - v15;
  uint64_t v17 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  uint64_t v18 = *(int *)(v17 + 20);
  uint64_t v24 = v3;
  sub_1DCD2889C(v3 + v18, (uint64_t)v10, &qword_1EAB02418);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v19(v10, 1, v11) == 1)
  {
    sub_1DCD2479C((uint64_t)v10, &qword_1EAB02418);
    uint64_t v20 = v24;
  }
  else
  {
    sub_1DCF0EDA4((uint64_t)v10, (uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1DCF0AE4C(&qword_1EAB03F88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1DD047FC8();
    uint64_t result = sub_1DCEF4BE4((uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    uint64_t v20 = v24;
    if (v4) {
      return result;
    }
  }
  sub_1DCD2889C(v20 + *(int *)(v17 + 24), (uint64_t)v7, &qword_1EAB02418);
  if (v19(v7, 1, v11) == 1)
  {
    sub_1DCD2479C((uint64_t)v7, &qword_1EAB02418);
  }
  else
  {
    uint64_t v22 = v23[0];
    sub_1DCF0EDA4((uint64_t)v7, v23[0], type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1DCF0AE4C(&qword_1EAB03F88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1DD047FC8();
    uint64_t result = sub_1DCEF4BE4(v22, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    if (v4) {
      return result;
    }
  }
  return sub_1DD047BD8();
}

uint64_t sub_1DCF059F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DD047BE8();
  uint64_t v4 = a2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 24);
  return v8(v6, 1, 1, v5);
}

uint64_t sub_1DCF05AAC(uint64_t a1, uint64_t a2)
{
  return sub_1DCDA6DC8(a1, a2, &qword_1EAB01F98, qword_1EAB1D1D0);
}

uint64_t sub_1DCF05AD4()
{
  return sub_1DCF05490();
}

uint64_t sub_1DCF05AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF05684(a1, a2, a3);
}

uint64_t sub_1DCF05B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF0AE4C(&qword_1EAB04008, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF05B80@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EAB01FA0, (uint64_t)qword_1EAB1D1E0, a1);
}

uint64_t sub_1DCF05BA4(uint64_t a1)
{
  uint64_t v2 = sub_1DCF0AE4C(&qword_1EAB03F18, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF05C10()
{
  sub_1DCF0AE4C(&qword_1EAB03F18, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
  return sub_1DD047E68();
}

uint64_t sub_1DCF05C90()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C9F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C9F8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD05BA10;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "shape";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "dataType";
  *(void *)(v10 + 8) = 8;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 21;
  *(void *)uint64_t v12 = "enumeratedShapes";
  *((void *)v12 + 1) = 16;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 31;
  *(void *)uint64_t v14 = "shapeRange";
  *((void *)v14 + 1) = 10;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  uint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 41;
  *(void *)uint64_t v16 = "intDefaultValue";
  *((void *)v16 + 1) = 15;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  uint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 51;
  *(void *)uint64_t v18 = "floatDefaultValue";
  *((void *)v18 + 1) = 17;
  v18[16] = 2;
  v9();
  uint64_t v19 = (void *)(v5 + 6 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  *uint64_t v19 = 61;
  *(void *)uint64_t v20 = "doubleDefaultValue";
  *((void *)v20 + 1) = 18;
  v20[16] = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF05F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_1DD047CB8();
  uint64_t v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1DD047D18();
          break;
        case 2:
          sub_1DCF0EE0C();
          sub_1DD047CE8();
          break;
        case 21:
          sub_1DCF06254(v5, a1, a2, a3);
          break;
        case 31:
          sub_1DCF067D0(v5, a1, a2, a3);
          break;
        case 41:
          uint64_t v12 = (uint64_t (*)(unsigned int *, uint64_t, uint64_t))MEMORY[0x1E4F70ED0];
          uint64_t v13 = a1;
          uint64_t v14 = v5;
          uint64_t v15 = a2;
          uint64_t v16 = a3;
          uint64_t v17 = v11;
          char v18 = 0;
          goto LABEL_5;
        case 51:
          uint64_t v12 = (uint64_t (*)(unsigned int *, uint64_t, uint64_t))MEMORY[0x1E4F70EC0];
          uint64_t v13 = a1;
          uint64_t v14 = v5;
          uint64_t v15 = a2;
          uint64_t v16 = a3;
          uint64_t v17 = v11;
          char v18 = 1;
LABEL_5:
          sub_1DCF06D4C(v13, v14, v15, v16, v12, v18);
          uint64_t v11 = v17;
          break;
        case 61:
          sub_1DCF06E08();
          break;
        default:
          break;
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF06254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v47 = a1;
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v38 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v35 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  char v18 = (char *)&v35 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04018);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v39 = (uint64_t)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v22 = MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v35 - v23;
  uint64_t v40 = v5;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v5 + 56);
  uint64_t v42 = v4;
  v25((char *)&v35 - v23, 1, 1, v4, v22);
  uint64_t v36 = v47 + *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0) + 24);
  sub_1DCD2889C(v36, (uint64_t)v11, &qword_1EBE85CB0);
  uint64_t v37 = v13;
  LODWORD(v47) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (v47 == 1)
  {
    sub_1DCD2479C((uint64_t)v11, &qword_1EBE85CB0);
    uint64_t v26 = v12;
LABEL_5:
    uint64_t v29 = v42;
    uint64_t v28 = v43;
    goto LABEL_7;
  }
  uint64_t v27 = (uint64_t)v41;
  sub_1DCF0EDA4((uint64_t)v11, (uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  sub_1DCF0EDA4((uint64_t)v18, (uint64_t)v15, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  uint64_t v26 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DCEF4BE4((uint64_t)v15, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    goto LABEL_5;
  }
  sub_1DCD2479C((uint64_t)v24, &qword_1EAB04018);
  sub_1DCF0EDA4((uint64_t)v15, v27, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
  sub_1DCF0EDA4(v27, (uint64_t)v24, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
  uint64_t v29 = v42;
  ((void (*)(char *, void, uint64_t, uint64_t))v25)(v24, 0, 1, v42);
  uint64_t v28 = v43;
LABEL_7:
  sub_1DCF0AE4C(&qword_1EAB03EC8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
  sub_1DD047DF8();
  if (v28) {
    return sub_1DCD2479C((uint64_t)v24, &qword_1EAB04018);
  }
  uint64_t v31 = v39;
  sub_1DCD2889C((uint64_t)v24, v39, &qword_1EAB04018);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v31, 1, v29) == 1)
  {
    sub_1DCD2479C((uint64_t)v24, &qword_1EAB04018);
    return sub_1DCD2479C(v31, &qword_1EAB04018);
  }
  else
  {
    uint64_t v32 = v31;
    uint64_t v33 = v38;
    sub_1DCF0EDA4(v32, v38, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
    if (v47 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v24, &qword_1EAB04018);
    uint64_t v34 = v36;
    sub_1DCD2479C(v36, &qword_1EBE85CB0);
    sub_1DCF0EDA4(v33, v34, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v26);
  }
}

uint64_t sub_1DCF067D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v47 = a1;
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v38 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v35 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  char v18 = (char *)&v35 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04020);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v39 = (uint64_t)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v22 = MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v35 - v23;
  uint64_t v40 = v5;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v5 + 56);
  uint64_t v42 = v4;
  v25((char *)&v35 - v23, 1, 1, v4, v22);
  uint64_t v36 = v47 + *(int *)(type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0) + 24);
  sub_1DCD2889C(v36, (uint64_t)v11, &qword_1EBE85CB0);
  uint64_t v37 = v13;
  LODWORD(v47) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (v47 == 1)
  {
    sub_1DCD2479C((uint64_t)v11, &qword_1EBE85CB0);
    uint64_t v26 = v12;
  }
  else
  {
    uint64_t v27 = (uint64_t)v41;
    sub_1DCF0EDA4((uint64_t)v11, (uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    sub_1DCF0EDA4((uint64_t)v18, (uint64_t)v15, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    uint64_t v26 = v12;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DCD2479C((uint64_t)v24, &qword_1EAB04020);
      sub_1DCF0EDA4((uint64_t)v15, v27, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
      sub_1DCF0EDA4(v27, (uint64_t)v24, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
      uint64_t v28 = v42;
      ((void (*)(char *, void, uint64_t, uint64_t))v25)(v24, 0, 1, v42);
      uint64_t v29 = v43;
      goto LABEL_7;
    }
    sub_1DCEF4BE4((uint64_t)v15, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  }
  uint64_t v28 = v42;
  uint64_t v29 = v43;
LABEL_7:
  sub_1DCF0AE4C(&qword_1EAB03EA8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
  sub_1DD047DF8();
  if (v29) {
    return sub_1DCD2479C((uint64_t)v24, &qword_1EAB04020);
  }
  uint64_t v31 = v39;
  sub_1DCD2889C((uint64_t)v24, v39, &qword_1EAB04020);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v31, 1, v28) == 1)
  {
    sub_1DCD2479C((uint64_t)v24, &qword_1EAB04020);
    return sub_1DCD2479C(v31, &qword_1EAB04020);
  }
  else
  {
    uint64_t v32 = v31;
    uint64_t v33 = v38;
    sub_1DCF0EDA4(v32, v38, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
    if (v47 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v24, &qword_1EAB04020);
    uint64_t v34 = v36;
    sub_1DCD2479C(v36, &qword_1EBE85CB0);
    sub_1DCF0EDA4(v33, v34, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v26);
  }
}

uint64_t sub_1DCF06D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unsigned int *, uint64_t, uint64_t), char a6)
{
  unsigned int v12 = 0;
  char v13 = 1;
  uint64_t result = a5(&v12, a3, a4);
  if (!v6 && (v13 & 1) == 0)
  {
    uint64_t v10 = v12;
    uint64_t result = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
    uint64_t v11 = a2 + *(int *)(result + 28);
    if (*(unsigned __int8 *)(v11 + 8) != 255) {
      uint64_t result = sub_1DD047CC8();
    }
    *(void *)uint64_t v11 = v10;
    *(unsigned char *)(v11 + 8) = a6;
  }
  return result;
}

uint64_t sub_1DCF06E08()
{
  return sub_1DD047D98();
}

uint64_t sub_1DCF06EC0()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(*(void *)v0 + 16) || (uint64_t result = sub_1DD047ED8(), !v1))
  {
    char v6 = *(unsigned char *)(v0 + 16);
    uint64_t v9 = *(void *)(v0 + 8);
    char v10 = v6;
    sub_1DCF0EE0C();
    uint64_t result = sub_1DD047F18();
    if (!v1)
    {
      uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
      sub_1DCD2889C(v0 + *(int *)(v7 + 24), (uint64_t)v4, &qword_1EBE85CB0);
      uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) != 1)
      {
        if (swift_getEnumCaseMultiPayload() == 1) {
          sub_1DCF07368(v0);
        }
        else {
          sub_1DCF07138(v0);
        }
        sub_1DCEF4BE4((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
      }
      if (*(unsigned __int8 *)(v0 + *(int *)(v7 + 28) + 8) > 1u)
      {
        if (*(unsigned char *)(v0 + *(int *)(v7 + 28) + 8) == 2) {
          sub_1DCF07684(v0);
        }
      }
      else if (*(unsigned char *)(v0 + *(int *)(v7 + 28) + 8))
      {
        sub_1DCF0760C(v0);
      }
      else
      {
        sub_1DCF07598(v0);
      }
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCF07138(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  sub_1DCD2889C(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_1EBE85CB0);
  uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE85CB0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DCF0EDA4((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
    sub_1DCF0AE4C(&qword_1EAB03EC8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
    sub_1DD047FC8();
    return sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
  }
  uint64_t result = sub_1DCEF4BE4((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  __break(1u);
  return result;
}

uint64_t sub_1DCF07368(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  sub_1DCD2889C(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_1EBE85CB0);
  uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE85CB0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DCF0EDA4((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
    sub_1DCF0AE4C(&qword_1EAB03EA8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
    sub_1DD047FC8();
    return sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
  }
  uint64_t result = sub_1DCEF4BE4((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  __break(1u);
  return result;
}

uint64_t sub_1DCF07598(uint64_t a1)
{
  uint64_t result = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  if (!*(unsigned char *)(a1 + *(int *)(result + 28) + 8)) {
    return sub_1DD047F48();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF0760C(uint64_t a1)
{
  uint64_t result = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 28) + 8) == 1) {
    return sub_1DD047F38();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF07684(uint64_t a1)
{
  uint64_t result = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 28) + 8) == 2) {
    return sub_1DD047F78();
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF076FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = MEMORY[0x1E4FBC860];
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 28);
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = -1;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF077A0()
{
  return 0xD000000000000025;
}

uint64_t sub_1DCF077BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF05F8C(a1, a2, a3);
}

uint64_t sub_1DCF077D4()
{
  return sub_1DCF06EC0();
}

uint64_t sub_1DCF077EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF0AE4C(&qword_1EAB04010, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF07868@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85C98, (uint64_t)qword_1EBE9C9F8, a1);
}

uint64_t sub_1DCF0788C(uint64_t a1)
{
  uint64_t v2 = sub_1DCF0AE4C(&qword_1EBE85CC0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF078F8()
{
  sub_1DCF0AE4C(&qword_1EBE85CC0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
  return sub_1DD047E68();
}

uint64_t sub_1DCF07978()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C9E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C9E0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1DD04EF00;
  unint64_t v4 = v16 + v3;
  unint64_t v5 = v16 + v3 + v1[14];
  *(void *)(v16 + v3) = 0;
  *(void *)unint64_t v5 = "INVALID_ARRAY_DATA_TYPE";
  *(void *)(v5 + 8) = 23;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x1E4F70FB8];
  uint64_t v7 = sub_1DD047FD8();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 65552;
  *(void *)unint64_t v9 = "FLOAT16";
  *(void *)(v9 + 8) = 7;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  char v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *char v10 = 65568;
  *(void *)uint64_t v11 = "FLOAT32";
  *((void *)v11 + 1) = 7;
  v11[16] = 2;
  *((void *)v11 + 3) = &unk_1F3836620;
  v8();
  unsigned int v12 = (void *)(v4 + 3 * v2);
  char v13 = (char *)v12 + v1[14];
  *unsigned int v12 = 65600;
  *(void *)char v13 = "FLOAT64";
  *((void *)v13 + 1) = 7;
  v13[16] = 2;
  *((void *)v13 + 3) = &unk_1F38365E8;
  v8();
  uint64_t v14 = v4 + 4 * v2 + v1[14];
  *(void *)(v4 + 4 * v2) = 131104;
  *(void *)uint64_t v14 = "INT32";
  *(void *)(v14 + 8) = 5;
  *(unsigned char *)(v14 + 16) = 2;
  v8();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF07C34@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85C50, (uint64_t)qword_1EBE9C9E0, a1);
}

uint64_t sub_1DCF07C58()
{
  uint64_t result = sub_1DD048548();
  qword_1EAB1D1F8 = 0xD000000000000025;
  unk_1EAB1D200 = 0x80000001DD06DF60;
  return result;
}

uint64_t sub_1DCF07CC0(uint64_t a1)
{
  return sub_1DCF08470(a1, qword_1EAB1D208, (uint64_t)"shape", 5);
}

uint64_t sub_1DCF07CD8()
{
  while (1)
  {
    uint64_t result = sub_1DD047CB8();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_1DD047D18();
    }
  }
  return result;
}

uint64_t sub_1DCF07D48()
{
  if (!*(void *)(*(void *)v0 + 16) || (uint64_t result = sub_1DD047ED8(), !v1))
  {
    type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape(0);
    return sub_1DD047BD8();
  }
  return result;
}

uint64_t sub_1DCF07DE0(uint64_t a1, uint64_t a2)
{
  return sub_1DCDA6DC8(a1, a2, &qword_1EAB01FA8, &qword_1EAB1D1F8);
}

uint64_t sub_1DCF07E08()
{
  return sub_1DCF07CD8();
}

uint64_t sub_1DCF07E20()
{
  return sub_1DCF07D48();
}

uint64_t sub_1DCF07E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF0AE4C(&qword_1EAB04038, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF07EB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EAB01FB0, (uint64_t)qword_1EAB1D208, a1);
}

uint64_t sub_1DCF07ED8(uint64_t a1)
{
  uint64_t v2 = sub_1DCF0AE4C(&qword_1EAB03EE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF07F44()
{
  sub_1DCF0AE4C(&qword_1EAB03EE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
  return sub_1DD047E68();
}

uint64_t sub_1DCF07FC0(char *a1, char *a2)
{
  return sub_1DCF0D78C(a1, a2, (uint64_t (*)(void, void, double))sub_1DCFB7104, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape) & 1;
}

uint64_t sub_1DCF08004()
{
  uint64_t result = sub_1DD048548();
  qword_1EAB1D220 = 0xD000000000000025;
  *(void *)algn_1EAB1D228 = 0x80000001DD06DF60;
  return result;
}

uint64_t sub_1DCF08078(uint64_t a1)
{
  return sub_1DCF08470(a1, qword_1EAB1D230, (uint64_t)"shapes", 6);
}

uint64_t sub_1DCF08090()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape(0),
        sub_1DCF0AE4C(&qword_1EAB03EE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape), uint64_t result = sub_1DD047FB8(), !v1))
  {
    type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
    return sub_1DD047BD8();
  }
  return result;
}

uint64_t sub_1DCF0817C(uint64_t a1, uint64_t a2)
{
  return sub_1DCDA6DC8(a1, a2, &qword_1EAB01FB8, &qword_1EAB1D220);
}

uint64_t sub_1DCF081A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF085CC(a1, a2, a3, (void (*)(void))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape, &qword_1EAB03EE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
}

uint64_t sub_1DCF08200()
{
  return sub_1DCF08090();
}

uint64_t sub_1DCF08218(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF0AE4C(&qword_1EAB04040, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF08294@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EAB01FC0, (uint64_t)qword_1EAB1D230, a1);
}

uint64_t sub_1DCF082B8(uint64_t a1)
{
  uint64_t v2 = sub_1DCF0AE4C(&qword_1EAB03EC8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF08324()
{
  sub_1DCF0AE4C(&qword_1EAB03EC8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
  return sub_1DD047E68();
}

uint64_t sub_1DCF083A0(char *a1, char *a2)
{
  return sub_1DCF0D78C(a1, a2, (uint64_t (*)(void, void, double))sub_1DCFBAE6C, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes) & 1;
}

uint64_t sub_1DCF083E4()
{
  uint64_t result = sub_1DD048548();
  qword_1EAB1D248 = 0xD000000000000025;
  unk_1EAB1D250 = 0x80000001DD06DF60;
  return result;
}

uint64_t sub_1DCF08458(uint64_t a1)
{
  return sub_1DCF08470(a1, qword_1EAB1D258, (uint64_t)"sizeRanges", 10);
}

uint64_t sub_1DCF08470(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1DD048008();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v8 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DD04E910;
  unint64_t v11 = v10 + v9 + v8[14];
  *(void *)(v10 + v9) = 1;
  *(void *)unint64_t v11 = a3;
  *(void *)(v11 + 8) = a4;
  *(unsigned char *)(v11 + 16) = 2;
  uint64_t v12 = *MEMORY[0x1E4F70FB8];
  uint64_t v13 = sub_1DD047FD8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  return sub_1DD047FE8();
}

uint64_t sub_1DCF085CC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), unint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t result = sub_1DD047CB8();
  if (!v6)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 1)
      {
        a4(0);
        sub_1DCF0AE4C(a5, a6);
        sub_1DD047DE8();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF086D8()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Argos_Protos_MLModel_SizeRange(0),
        sub_1DCF0AE4C(&qword_1EAB03F88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_SizeRange), uint64_t result = sub_1DD047FB8(), !v1))
  {
    type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
    return sub_1DD047BD8();
  }
  return result;
}

uint64_t sub_1DCF087C4(uint64_t a1, uint64_t a2)
{
  return sub_1DCDA6DC8(a1, a2, &qword_1EAB01FC8, &qword_1EAB1D248);
}

uint64_t sub_1DCF087EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF085CC(a1, a2, a3, (void (*)(void))type metadata accessor for Argos_Protos_MLModel_SizeRange, &qword_1EAB03F88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_SizeRange);
}

uint64_t sub_1DCF08848()
{
  return sub_1DCF086D8();
}

uint64_t sub_1DCF08860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF0AE4C(&qword_1EAB04048, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF088DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(qword_1EAB01FD0, (uint64_t)qword_1EAB1D258, a1);
}

uint64_t sub_1DCF08900(uint64_t a1)
{
  uint64_t v2 = sub_1DCF0AE4C(&qword_1EAB03EA8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF0896C()
{
  sub_1DCF0AE4C(&qword_1EAB03EA8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
  return sub_1DD047E68();
}

uint64_t sub_1DCF089E8(char *a1, char *a2)
{
  return sub_1DCF0D78C(a1, a2, (uint64_t (*)(void, void, double))sub_1DCFBB11C, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange) & 1;
}

uint64_t sub_1DCF08A2C()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C950);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C950);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04E760;
  unint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *unint64_t v5 = 4;
  *(void *)unint64_t v6 = "imageType";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1DD047FD8();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  char v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 5;
  *(void *)char v10 = "multiArrayType";
  *((void *)v10 + 1) = 14;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 1000;
  *(void *)uint64_t v11 = "isOptional";
  *(void *)(v11 + 8) = 10;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF08C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = sub_1DD047CB8();
    uint64_t v9 = v4;
    if (v4 || (v11 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1000:
        type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
        sub_1DD047CD8();
LABEL_3:
        uint64_t v9 = 0;
        break;
      case 5:
        sub_1DCF09288(v5, a1, a2, a3);
        goto LABEL_3;
      case 4:
        sub_1DCF08D10(v5, a1, a2, a3);
        goto LABEL_3;
    }
    uint64_t v4 = v9;
  }
}

uint64_t sub_1DCF08D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D80);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE85B28);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE85B28);
    uint64_t v30 = v13;
    uint64_t v31 = v47;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v32 = (uint64_t)v45;
    sub_1DCF0EDA4((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    sub_1DCF0EDA4((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DCEF4BE4((uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      uint64_t v31 = v47;
    }
    else
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EBE85D80);
      sub_1DCF0EDA4((uint64_t)v16, v32, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
      sub_1DCF0EDA4(v32, (uint64_t)v25, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
      uint64_t v31 = v47;
      v39(v25, 0, 1, v47);
    }
  }
  uint64_t v33 = v46;
  sub_1DCF0AE4C(&qword_1EBE85D60, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, &qword_1EBE85D80);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, &qword_1EBE85D80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v31) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE85D80);
    return sub_1DCD2479C(v35, &qword_1EBE85D80);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF0EDA4(v35, v42, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE85D80);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE85B28);
    sub_1DCF0EDA4(v36, v37, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF09288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (char *)&v38 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CE0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v38 - v24;
  uint64_t v44 = v6;
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v47 = v5;
  uint64_t v27 = v5;
  uint64_t v28 = v26;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v26)((char *)&v38 - v24, 1, 1, v27, v23);
  uint64_t v41 = a1;
  sub_1DCD2889C(a1, (uint64_t)v12, &qword_1EBE85B28);
  uint64_t v40 = v14;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v29 == 1)
  {
    sub_1DCD2479C((uint64_t)v12, &qword_1EBE85B28);
    uint64_t v30 = v13;
  }
  else
  {
    uint64_t v39 = v28;
    uint64_t v31 = (uint64_t)v45;
    sub_1DCF0EDA4((uint64_t)v12, (uint64_t)v19, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    sub_1DCF0EDA4((uint64_t)v19, (uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    uint64_t v30 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DCD2479C((uint64_t)v25, &qword_1EBE85CE0);
      sub_1DCF0EDA4((uint64_t)v16, v31, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      sub_1DCF0EDA4(v31, (uint64_t)v25, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      uint64_t v32 = v47;
      v39(v25, 0, 1, v47);
      goto LABEL_7;
    }
    sub_1DCEF4BE4((uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  }
  uint64_t v32 = v47;
LABEL_7:
  uint64_t v33 = v46;
  sub_1DCF0AE4C(&qword_1EBE85CC0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
  sub_1DD047DF8();
  if (v33) {
    return sub_1DCD2479C((uint64_t)v25, &qword_1EBE85CE0);
  }
  uint64_t v35 = v43;
  sub_1DCD2889C((uint64_t)v25, v43, &qword_1EBE85CE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v35, 1, v32) == 1)
  {
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE85CE0);
    return sub_1DCD2479C(v35, &qword_1EBE85CE0);
  }
  else
  {
    uint64_t v36 = v42;
    sub_1DCF0EDA4(v35, v42, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
    if (v29 != 1) {
      sub_1DD047CC8();
    }
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE85CE0);
    uint64_t v37 = v41;
    sub_1DCD2479C(v41, &qword_1EBE85B28);
    sub_1DCF0EDA4(v36, v37, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v30);
  }
}

uint64_t sub_1DCF097FC()
{
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(v0, (uint64_t)v5, &qword_1EBE85B28);
  uint64_t v6 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) == 1) {
    goto LABEL_11;
  }
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_1DCF09BE0(v0);
  }
  else {
    sub_1DCF099BC(v0);
  }
  uint64_t v2 = v1;
  uint64_t result = sub_1DCEF4BE4((uint64_t)v5, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  if (!v1)
  {
LABEL_11:
    if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for Argos_Protos_MLModel_FeatureType(0) + 20)) != 1) {
      return sub_1DD047BD8();
    }
    uint64_t result = sub_1DD047F08();
    if (!v2) {
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCF099BC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE85B28);
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE85B28);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DCF0EDA4((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    sub_1DCF0AE4C(&qword_1EBE85D60, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    sub_1DD047FC8();
    return sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  }
  uint64_t result = sub_1DCEF4BE4((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_1DCF09BE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD2889C(a1, (uint64_t)v4, &qword_1EBE85B28);
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v4, &qword_1EBE85B28);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DCF0EDA4((uint64_t)v4, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
    sub_1DCF0AE4C(&qword_1EBE85CC0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
    sub_1DD047FC8();
    return sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
  }
  uint64_t result = sub_1DCEF4BE4((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  __break(1u);
  return result;
}

uint64_t sub_1DCF09E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  *(unsigned char *)(a2 + *(int *)(a1 + 20)) = 0;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF09E78()
{
  return 0xD000000000000020;
}

uint64_t sub_1DCF09E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCF08C30(a1, a2, a3);
}

uint64_t sub_1DCF09EAC()
{
  return sub_1DCF097FC();
}

uint64_t sub_1DCF09EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF0AE4C(&qword_1EAB04050, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureType);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF09F40@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85B38, (uint64_t)qword_1EBE9C950, a1);
}

uint64_t sub_1DCF09F64(uint64_t a1)
{
  uint64_t v2 = sub_1DCF0AE4C(&qword_1EBE85B40, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureType);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF09FD0()
{
  sub_1DCF0AE4C(&qword_1EBE85B40, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureType);
  return sub_1DD047E68();
}

uint64_t sub_1DCF0A050()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9CA48);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9CA48);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04E760;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "name";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "shortDescription";
  *((void *)v10 + 1) = 16;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "type";
  *(void *)(v11 + 8) = 4;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF0A254()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_1DCF0A30C();
      }
      else if (result == 2 || result == 1)
      {
        sub_1DD047DB8();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF0A30C()
{
  return sub_1DD047DF8();
}

uint64_t sub_1DCF0A3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = v4[1];
  uint64_t v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v14 = *v4 & 0xFFFFFFFFFFFFLL;
  }
  v19[1] = a2;
  if (!v14 || (uint64_t result = sub_1DD047F88(), !v3))
  {
    unint64_t v16 = v4[3];
    uint64_t v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0) {
      uint64_t v17 = v4[2] & 0xFFFFFFFFFFFFLL;
    }
    if (!v17 || (uint64_t result = sub_1DD047F88(), !v3))
    {
      uint64_t v18 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
      sub_1DCD2889C((uint64_t)v4 + *(int *)(v18 + 28), (uint64_t)v8, &qword_1EBE85B60);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_1DCD2479C((uint64_t)v8, &qword_1EBE85B60);
      }
      else
      {
        sub_1DCF0EDA4((uint64_t)v8, (uint64_t)v12, type metadata accessor for Argos_Protos_MLModel_FeatureType);
        sub_1DCF0AE4C(&qword_1EBE85B40, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureType);
        sub_1DD047FC8();
        uint64_t result = sub_1DCEF4BE4((uint64_t)v12, type metadata accessor for Argos_Protos_MLModel_FeatureType);
        if (v3) {
          return result;
        }
      }
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCF0A66C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  sub_1DD047BE8();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(v4, 1, 1, v5);
}

unint64_t sub_1DCF0A6FC()
{
  return 0xD000000000000027;
}

uint64_t sub_1DCF0A718()
{
  return sub_1DCF0A254();
}

uint64_t sub_1DCF0A730(uint64_t a1, uint64_t a2)
{
  return sub_1DCF0A3BC(a1, a2);
}

uint64_t sub_1DCF0A748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF0AE4C(&qword_1EAB04068, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF0A7C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85DD0, (uint64_t)qword_1EBE9CA48, a1);
}

uint64_t sub_1DCF0A7E8(uint64_t a1)
{
  uint64_t v2 = sub_1DCF0AE4C(&qword_1EBE85DD8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF0A854()
{
  sub_1DCF0AE4C(&qword_1EBE85DD8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
  return sub_1DD047E68();
}

uint64_t sub_1DCF0A8D4(uint64_t a1)
{
  return sub_1DCF04910(a1, qword_1EBE9C898, (uint64_t)"input", 10, (uint64_t)"output");
}

uint64_t sub_1DCF0A8F4()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 10 || result == 1)
      {
        type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
        sub_1DCF0AE4C(&qword_1EBE85DD8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
        sub_1DD047DE8();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF0AA34()
{
  if (!*(void *)(*v0 + 16)
    || (type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0),
        sub_1DCF0AE4C(&qword_1EBE85DD8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureDescription), uint64_t result = sub_1DD047FB8(), !v1))
  {
    if (!*(void *)(v0[1] + 16)
      || (type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0),
          sub_1DCF0AE4C(&qword_1EBE85DD8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureDescription), uint64_t result = sub_1DD047FB8(), !v1))
    {
      type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
      return sub_1DD047BD8();
    }
  }
  return result;
}

uint64_t sub_1DCF0AB98@<X0>(void *a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *a1 = MEMORY[0x1E4FBC860];
  a1[1] = v1;
  return sub_1DD047BE8();
}

unint64_t sub_1DCF0ABC4()
{
  return 0xD000000000000025;
}

uint64_t sub_1DCF0ABE0()
{
  return sub_1DCF0A8F4();
}

uint64_t sub_1DCF0ABF8()
{
  return sub_1DCF0AA34();
}

uint64_t sub_1DCF0AC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF0AE4C(&qword_1EAB04078, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ModelDescription);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF0AC8C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE85D88, (uint64_t)qword_1EBE9C898, a1);
}

uint64_t sub_1DCF0ACB0(uint64_t a1)
{
  uint64_t v2 = sub_1DCF0AE4C(&qword_1EBE85D90, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ModelDescription);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF0AD1C()
{
  sub_1DCF0AE4C(&qword_1EBE85D90, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ModelDescription);
  return sub_1DD047E68();
}

uint64_t sub_1DCF0AD9C()
{
  return sub_1DCF0AE4C(&qword_1EAB03E70, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ModelDescription);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ModelDescription(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE85DA0);
}

uint64_t sub_1DCF0AE04()
{
  return sub_1DCF0AE4C(&qword_1EBE85D90, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ModelDescription);
}

uint64_t sub_1DCF0AE4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCF0AE94()
{
  return sub_1DCF0AE4C(&qword_1EAB03E78, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ModelDescription);
}

uint64_t sub_1DCF0AEDC()
{
  return sub_1DCF0AE4C(&qword_1EBE85D98, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ModelDescription);
}

uint64_t sub_1DCF0AF24()
{
  return sub_1DCF0AE4C(&qword_1EAB03E80, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
}

uint64_t sub_1DCF0AF6C()
{
  return sub_1DCF0AE4C(&qword_1EBE85DD8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
}

uint64_t sub_1DCF0AFB4()
{
  return sub_1DCF0AE4C(&qword_1EAB03E88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
}

uint64_t sub_1DCF0AFFC()
{
  return sub_1DCF0AE4C(&qword_1EBE85DE0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
}

uint64_t sub_1DCF0B044()
{
  return sub_1DCF0AE4C(&qword_1EAB03E90, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureType);
}

uint64_t sub_1DCF0B08C()
{
  return sub_1DCF0AE4C(&qword_1EBE85B40, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureType);
}

uint64_t sub_1DCF0B0D4()
{
  return sub_1DCF0AE4C(&qword_1EAB03E98, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureType);
}

uint64_t sub_1DCF0B11C()
{
  return sub_1DCF0AE4C(&qword_1EBE85B48, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_FeatureType);
}

uint64_t sub_1DCF0B164()
{
  return sub_1DCF0AE4C(&qword_1EAB03EA0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
}

uint64_t sub_1DCF0B1AC()
{
  return sub_1DCF0AE4C(&qword_1EAB03EA8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
}

uint64_t sub_1DCF0B1F4()
{
  return sub_1DCF0AE4C(&qword_1EAB03EB0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
}

uint64_t sub_1DCF0B23C()
{
  return sub_1DCF0AE4C(&qword_1EAB03EB8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
}

uint64_t sub_1DCF0B284()
{
  return sub_1DCF0AE4C(&qword_1EAB03EC0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
}

uint64_t sub_1DCF0B2CC()
{
  return sub_1DCF0AE4C(&qword_1EAB03EC8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
}

uint64_t sub_1DCF0B314()
{
  return sub_1DCF0AE4C(&qword_1EAB03ED0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
}

uint64_t sub_1DCF0B35C()
{
  return sub_1DCF0AE4C(&qword_1EAB03ED8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
}

uint64_t sub_1DCF0B3A4()
{
  return sub_1DCF0AE4C(&qword_1EAB03EE0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EAB04080);
}

uint64_t sub_1DCF0B40C()
{
  return sub_1DCF0AE4C(&qword_1EAB03EE8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
}

uint64_t sub_1DCF0B454()
{
  return sub_1DCF0AE4C(&qword_1EAB03EF0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
}

uint64_t sub_1DCF0B49C()
{
  return sub_1DCF0AE4C(&qword_1EAB03EF8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.Shape);
}

uint64_t sub_1DCF0B4E4()
{
  return sub_1DCF0AE4C(&qword_1EAB03F00, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
}

uint64_t sub_1DCF0B52C()
{
  return sub_1DCF0AE4C(&qword_1EBE85CC0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
}

uint64_t sub_1DCF0B574()
{
  return sub_1DCF0AE4C(&qword_1EAB03F08, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
}

uint64_t sub_1DCF0B5BC()
{
  return sub_1DCF0AE4C(&qword_1EBE85CC8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
}

uint64_t sub_1DCF0B604()
{
  return sub_1DCF0AE4C(&qword_1EAB03F10, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
}

uint64_t sub_1DCF0B64C()
{
  return sub_1DCF0AE4C(&qword_1EAB03F18, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
}

uint64_t sub_1DCF0B694()
{
  return sub_1DCF0AE4C(&qword_1EAB03F20, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
}

uint64_t sub_1DCF0B6DC()
{
  return sub_1DCF0AE4C(&qword_1EAB03F28, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
}

uint64_t sub_1DCF0B724()
{
  return sub_1DCF0AE4C(&qword_1EAB03F30, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
}

uint64_t sub_1DCF0B76C()
{
  return sub_1DCF0AE4C(&qword_1EAB03F38, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
}

uint64_t sub_1DCF0B7B4()
{
  return sub_1DCF0AE4C(&qword_1EAB03F40, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
}

uint64_t sub_1DCF0B7FC()
{
  return sub_1DCF0AE4C(&qword_1EAB03F48, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
}

uint64_t sub_1DCF0B844()
{
  return sub_1DCF0AE4C(&qword_1EAB03F50, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
}

uint64_t type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EAB04090);
}

uint64_t sub_1DCF0B8AC()
{
  return sub_1DCF0AE4C(&qword_1EAB03F58, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
}

uint64_t sub_1DCF0B8F4()
{
  return sub_1DCF0AE4C(&qword_1EAB03F60, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
}

uint64_t sub_1DCF0B93C()
{
  return sub_1DCF0AE4C(&qword_1EAB03F68, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSize);
}

uint64_t sub_1DCF0B984()
{
  return sub_1DCF0AE4C(&qword_1EAB03F70, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
}

uint64_t sub_1DCF0B9CC()
{
  return sub_1DCF0AE4C(&qword_1EBE85D60, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
}

uint64_t sub_1DCF0BA14()
{
  return sub_1DCF0AE4C(&qword_1EAB03F78, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
}

uint64_t sub_1DCF0BA5C()
{
  return sub_1DCF0AE4C(&qword_1EBE85D68, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
}

uint64_t sub_1DCF0BAA4()
{
  return sub_1DCF0AE4C(&qword_1EAB03F80, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_SizeRange);
}

uint64_t sub_1DCF0BAEC()
{
  return sub_1DCF0AE4C(&qword_1EAB03F88, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_SizeRange);
}

uint64_t sub_1DCF0BB34()
{
  return sub_1DCF0AE4C(&qword_1EAB03F90, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_SizeRange);
}

uint64_t sub_1DCF0BB7C()
{
  return sub_1DCF0AE4C(&qword_1EAB03F98, (void (*)(uint64_t))type metadata accessor for Argos_Protos_MLModel_SizeRange);
}

uint64_t sub_1DCF0BBC4()
{
  return sub_1DCE05490(&qword_1EAB03FA0, &qword_1EAB03FA8);
}

uint64_t sub_1DCF0BBEC()
{
  return sub_1DCE05490(&qword_1EAB03FB0, &qword_1EAB03FB8);
}

uint64_t sub_1DCF0BC14(void *a1, void *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v45 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v43 = (char *)&v39 - v7;
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v42 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04070);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B60);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v46 = (uint64_t)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v39 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v39 - v20;
  if (*a1 == *a2 && a1[1] == a2[1] || (char v22 = 0, (sub_1DD048FA8() & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (char v22 = 0, (sub_1DD048FA8() & 1) != 0))
    {
      uint64_t v41 = v4;
      uint64_t v23 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
      sub_1DCD2889C((uint64_t)a1 + *(int *)(v23 + 28), (uint64_t)v21, &qword_1EBE85B60);
      uint64_t v40 = v23;
      sub_1DCD2889C((uint64_t)a2 + *(int *)(v23 + 28), (uint64_t)v18, &qword_1EBE85B60);
      uint64_t v24 = (uint64_t)&v13[*(int *)(v11 + 48)];
      sub_1DCD2889C((uint64_t)v21, (uint64_t)v13, &qword_1EBE85B60);
      sub_1DCD2889C((uint64_t)v18, v24, &qword_1EBE85B60);
      uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v25((uint64_t)v13, 1, v8) == 1)
      {
        sub_1DCD2479C((uint64_t)v18, &qword_1EBE85B60);
        sub_1DCD2479C((uint64_t)v21, &qword_1EBE85B60);
        if (v25(v24, 1, v8) == 1)
        {
          sub_1DCD2479C((uint64_t)v13, &qword_1EBE85B60);
LABEL_14:
          uint64_t v29 = v40;
          uint64_t v30 = (char *)a1 + *(int *)(v40 + 24);
          uint64_t v31 = v45;
          uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
          uint64_t v33 = v43;
          uint64_t v34 = v41;
          v32(v43, v30, v41);
          uint64_t v35 = (char *)a2 + *(int *)(v29 + 24);
          uint64_t v36 = v44;
          v32(v44, v35, v34);
          sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
          char v22 = sub_1DD0483B8();
          uint64_t v37 = *(void (**)(char *, uint64_t))(v31 + 8);
          v37(v36, v34);
          v37(v33, v34);
          return v22 & 1;
        }
      }
      else
      {
        uint64_t v26 = v46;
        sub_1DCD2889C((uint64_t)v13, v46, &qword_1EBE85B60);
        if (v25(v24, 1, v8) != 1)
        {
          uint64_t v27 = v42;
          sub_1DCF0EDA4(v24, v42, type metadata accessor for Argos_Protos_MLModel_FeatureType);
          char v28 = sub_1DCF0D954(v26, v27);
          sub_1DCEF4BE4(v27, type metadata accessor for Argos_Protos_MLModel_FeatureType);
          sub_1DCD2479C((uint64_t)v18, &qword_1EBE85B60);
          sub_1DCD2479C((uint64_t)v21, &qword_1EBE85B60);
          sub_1DCEF4BE4(v26, type metadata accessor for Argos_Protos_MLModel_FeatureType);
          sub_1DCD2479C((uint64_t)v13, &qword_1EBE85B60);
          if (v28) {
            goto LABEL_14;
          }
LABEL_15:
          char v22 = 0;
          return v22 & 1;
        }
        sub_1DCD2479C((uint64_t)v18, &qword_1EBE85B60);
        sub_1DCD2479C((uint64_t)v21, &qword_1EBE85B60);
        sub_1DCEF4BE4(v26, type metadata accessor for Argos_Protos_MLModel_FeatureType);
      }
      sub_1DCD2479C((uint64_t)v13, &qword_1EAB04070);
      goto LABEL_15;
    }
  }
  return v22 & 1;
}

uint64_t sub_1DCF0C17C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if (sub_1DCFBADAC(*a1, *a2) & 1) != 0 && (sub_1DCFBADAC(a1[1], a2[1]))
  {
    uint64_t v11 = type metadata accessor for Argos_Protos_MLModel_ModelDescription(0);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, (char *)a1 + *(int *)(v11 + 24), v4);
    v12(v7, (char *)a2 + *(int *)(v11 + 24), v4);
    sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v13 = sub_1DD0483B8();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1DCF0C344(uint64_t a1, uint64_t a2)
{
  uint64_t v70 = sub_1DD047BF8();
  uint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v67 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v66 = (char *)&v63 - v6;
  uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_SizeRange(0);
  uint64_t v78 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v65 = (uint64_t *)((char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v71 = (uint64_t *)((char *)&v63 - v10);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03FF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v74 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v63 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02418);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v69 = (uint64_t *)((char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  uint64_t v77 = (uint64_t)&v63 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v73 = (uint64_t)&v63 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (uint64_t *)((char *)&v63 - v23);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v63 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v63 - v29;
  uint64_t v31 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  uint64_t v32 = *(int *)(v31 + 20);
  uint64_t v75 = a1;
  sub_1DCD2889C(a1 + v32, (uint64_t)v30, &qword_1EAB02418);
  uint64_t v33 = *(int *)(v31 + 20);
  uint64_t v76 = a2;
  sub_1DCD2889C(a2 + v33, (uint64_t)v27, &qword_1EAB02418);
  uint64_t v72 = v11;
  uint64_t v34 = *(int *)(v11 + 48);
  uint64_t v35 = v78;
  uint64_t v36 = (uint64_t)&v15[v34];
  sub_1DCD2889C((uint64_t)v30, (uint64_t)v15, &qword_1EAB02418);
  sub_1DCD2889C((uint64_t)v27, v36, &qword_1EAB02418);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  if (v37((uint64_t)v15, 1, v7) == 1)
  {
    sub_1DCD2479C((uint64_t)v27, &qword_1EAB02418);
    sub_1DCD2479C((uint64_t)v30, &qword_1EAB02418);
    if (v37(v36, 1, v7) != 1)
    {
LABEL_18:
      uint64_t v58 = &qword_1EAB03FF0;
      uint64_t v59 = (uint64_t)v15;
LABEL_25:
      sub_1DCD2479C(v59, v58);
      goto LABEL_26;
    }
    uint64_t v38 = v7;
    sub_1DCD2479C((uint64_t)v15, &qword_1EAB02418);
  }
  else
  {
    sub_1DCD2889C((uint64_t)v15, (uint64_t)v24, &qword_1EAB02418);
    if (v37(v36, 1, v7) == 1)
    {
      sub_1DCD2479C((uint64_t)v27, &qword_1EAB02418);
      sub_1DCD2479C((uint64_t)v30, &qword_1EAB02418);
      uint64_t v52 = (uint64_t)v24;
LABEL_17:
      sub_1DCEF4BE4(v52, type metadata accessor for Argos_Protos_MLModel_SizeRange);
      goto LABEL_18;
    }
    int v53 = v71;
    sub_1DCF0EDA4(v36, (uint64_t)v71, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    if (*v24 != *v53 || v24[1] != v53[1])
    {
      sub_1DCEF4BE4((uint64_t)v53, type metadata accessor for Argos_Protos_MLModel_SizeRange);
      sub_1DCD2479C((uint64_t)v27, &qword_1EAB02418);
      sub_1DCD2479C((uint64_t)v30, &qword_1EAB02418);
      uint64_t v56 = (uint64_t)v24;
      goto LABEL_24;
    }
    uint64_t v64 = v7;
    sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v54 = sub_1DD0483B8();
    sub_1DCEF4BE4((uint64_t)v53, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1DCD2479C((uint64_t)v27, &qword_1EAB02418);
    uint64_t v55 = (uint64_t)v30;
    uint64_t v38 = v64;
    sub_1DCD2479C(v55, &qword_1EAB02418);
    sub_1DCEF4BE4((uint64_t)v24, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1DCD2479C((uint64_t)v15, &qword_1EAB02418);
    if ((v54 & 1) == 0) {
      goto LABEL_26;
    }
  }
  uint64_t v39 = v75;
  uint64_t v40 = v73;
  sub_1DCD2889C(v75 + *(int *)(v31 + 24), v73, &qword_1EAB02418);
  uint64_t v41 = *(int *)(v31 + 24);
  uint64_t v42 = v76;
  uint64_t v43 = v77;
  sub_1DCD2889C(v76 + v41, v77, &qword_1EAB02418);
  uint64_t v15 = v74;
  uint64_t v44 = (uint64_t)&v74[*(int *)(v72 + 48)];
  sub_1DCD2889C(v40, (uint64_t)v74, &qword_1EAB02418);
  sub_1DCD2889C(v43, v44, &qword_1EAB02418);
  if (v37((uint64_t)v15, 1, v38) != 1)
  {
    uint64_t v57 = v69;
    sub_1DCD2889C((uint64_t)v15, (uint64_t)v69, &qword_1EAB02418);
    if (v37(v44, 1, v38) == 1)
    {
      sub_1DCD2479C(v77, &qword_1EAB02418);
      sub_1DCD2479C(v40, &qword_1EAB02418);
      uint64_t v52 = (uint64_t)v57;
      goto LABEL_17;
    }
    uint64_t v60 = v65;
    sub_1DCF0EDA4(v44, (uint64_t)v65, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    if (*v57 == *v60 && v57[1] == v60[1])
    {
      sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v61 = sub_1DD0483B8();
      sub_1DCEF4BE4((uint64_t)v60, type metadata accessor for Argos_Protos_MLModel_SizeRange);
      sub_1DCD2479C(v77, &qword_1EAB02418);
      sub_1DCD2479C(v40, &qword_1EAB02418);
      sub_1DCEF4BE4((uint64_t)v57, type metadata accessor for Argos_Protos_MLModel_SizeRange);
      sub_1DCD2479C((uint64_t)v15, &qword_1EAB02418);
      if (v61) {
        goto LABEL_7;
      }
LABEL_26:
      char v50 = 0;
      return v50 & 1;
    }
    sub_1DCEF4BE4((uint64_t)v60, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    sub_1DCD2479C(v77, &qword_1EAB02418);
    sub_1DCD2479C(v40, &qword_1EAB02418);
    uint64_t v56 = (uint64_t)v57;
LABEL_24:
    sub_1DCEF4BE4(v56, type metadata accessor for Argos_Protos_MLModel_SizeRange);
    uint64_t v59 = (uint64_t)v15;
    uint64_t v58 = &qword_1EAB02418;
    goto LABEL_25;
  }
  sub_1DCD2479C(v43, &qword_1EAB02418);
  sub_1DCD2479C(v40, &qword_1EAB02418);
  if (v37(v44, 1, v38) != 1) {
    goto LABEL_18;
  }
  sub_1DCD2479C((uint64_t)v15, &qword_1EAB02418);
LABEL_7:
  uint64_t v45 = v68;
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
  uint64_t v47 = v66;
  uint64_t v48 = v70;
  v46(v66, v39, v70);
  uint64_t v49 = v67;
  v46(v67, v42, v48);
  sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
  char v50 = sub_1DD0483B8();
  uint64_t v51 = *(void (**)(char *, uint64_t))(v45 + 8);
  v51(v49, v48);
  v51(v47, v48);
  return v50 & 1;
}

uint64_t sub_1DCF0CC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v53 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v52 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v51 = (char *)&v47 - v7;
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  uint64_t v54 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04028);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85CB0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v47 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v47 - v21;
  if (!sub_1DCFB7104(*(void **)a1, *(void **)a2)) {
    goto LABEL_17;
  }
  uint64_t v50 = v4;
  char v23 = 0;
  uint64_t v24 = *(void *)(a1 + 8);
  if (!v24) {
    return v23 & 1;
  }
  uint64_t v25 = *(void *)(a2 + 8);
  if (!v25) {
    return v23 & 1;
  }
  if (*(unsigned char *)(a1 + 16) == 1) {
    uint64_t v24 = qword_1DD05D0B0[v24 - 1];
  }
  if (*(unsigned char *)(a2 + 16))
  {
    switch(v25)
    {
      case 2:
        if (v24 == 65568) {
          goto LABEL_11;
        }
        goto LABEL_17;
      case 3:
        if (v24 == 65600) {
          goto LABEL_11;
        }
        goto LABEL_17;
      case 4:
        if (v24 == 131104) {
          goto LABEL_11;
        }
        goto LABEL_17;
      default:
        if (v24 != 65552) {
          goto LABEL_17;
        }
        goto LABEL_11;
    }
  }
  if (v24 != v25)
  {
LABEL_17:
    char v23 = 0;
    return v23 & 1;
  }
LABEL_11:
  uint64_t v26 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  sub_1DCD2889C(a1 + *(int *)(v26 + 24), (uint64_t)v22, &qword_1EBE85CB0);
  uint64_t v48 = v26;
  sub_1DCD2889C(a2 + *(int *)(v26 + 24), (uint64_t)v19, &qword_1EBE85CB0);
  uint64_t v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1DCD2889C((uint64_t)v22, (uint64_t)v13, &qword_1EBE85CB0);
  uint64_t v49 = v27;
  sub_1DCD2889C((uint64_t)v19, v27, &qword_1EBE85CB0);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  if (v28((uint64_t)v13, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v19, &qword_1EBE85CB0);
    sub_1DCD2479C((uint64_t)v22, &qword_1EBE85CB0);
    if (v28(v49, 1, v8) == 1)
    {
      sub_1DCD2479C((uint64_t)v13, &qword_1EBE85CB0);
      goto LABEL_26;
    }
LABEL_16:
    sub_1DCD2479C((uint64_t)v13, &qword_1EAB04028);
    goto LABEL_17;
  }
  sub_1DCD2889C((uint64_t)v13, (uint64_t)v16, &qword_1EBE85CB0);
  if (v28(v49, 1, v8) == 1)
  {
    sub_1DCD2479C((uint64_t)v19, &qword_1EBE85CB0);
    sub_1DCD2479C((uint64_t)v22, &qword_1EBE85CB0);
    sub_1DCEF4BE4((uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    goto LABEL_16;
  }
  sub_1DCF0EDA4(v49, (uint64_t)v10, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  char v30 = sub_1DCF0D2D4((uint64_t)v16, (uint64_t)v10);
  sub_1DCEF4BE4((uint64_t)v10, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  sub_1DCD2479C((uint64_t)v19, &qword_1EBE85CB0);
  sub_1DCD2479C((uint64_t)v22, &qword_1EBE85CB0);
  sub_1DCEF4BE4((uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  sub_1DCD2479C((uint64_t)v13, &qword_1EBE85CB0);
  if ((v30 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_26:
  uint64_t v31 = v48;
  uint64_t v32 = *(int *)(v48 + 28);
  uint64_t v33 = (double *)(a1 + v32);
  int v34 = *(unsigned __int8 *)(a1 + v32 + 8);
  uint64_t v35 = a2 + v32;
  int v36 = *(unsigned __int8 *)(v35 + 8);
  if (v34 == 255)
  {
    if (v36 == 255)
    {
LABEL_28:
      uint64_t v37 = a1 + *(int *)(v48 + 32);
      uint64_t v38 = v53;
      uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
      uint64_t v40 = v50;
      uint64_t v41 = v51;
      v39(v51, v37, v50);
      uint64_t v42 = a2 + *(int *)(v31 + 32);
      uint64_t v43 = v52;
      v39(v52, v42, v40);
      sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
      char v23 = sub_1DD0483B8();
      uint64_t v44 = *(void (**)(char *, uint64_t))(v38 + 8);
      v44(v43, v40);
      v44(v41, v40);
      return v23 & 1;
    }
    goto LABEL_17;
  }
  if (v36 == 255) {
    goto LABEL_17;
  }
  double v45 = *v33;
  double v46 = *(double *)v35;
  if (v34)
  {
    if (v34 == 1)
    {
      char v23 = 0;
      if (v36 == 1 && *(float *)&v45 == *(float *)&v46) {
        goto LABEL_28;
      }
    }
    else
    {
      char v23 = 0;
      if (v36 == 2 && v45 == v46) {
        goto LABEL_28;
      }
    }
  }
  else
  {
    char v23 = 0;
    if (!v36 && LODWORD(v45) == LODWORD(v46)) {
      goto LABEL_28;
    }
  }
  return v23 & 1;
}

uint64_t sub_1DCF0D2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v2 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v26 - v12);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04030);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)&v16[*(int *)(v17 + 56)];
  sub_1DCF0EE60(v26, (uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  sub_1DCF0EE60(v27, v18, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DCF0EE60((uint64_t)v16, (uint64_t)v10, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DCF0EDA4(v18, (uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
      if (sub_1DCFBB11C(*v10, *v4))
      {
        sub_1DD047BF8();
        sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
        if (sub_1DD0483B8())
        {
          uint64_t v19 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange;
          sub_1DCEF4BE4((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
          uint64_t v20 = (uint64_t)v10;
LABEL_13:
          sub_1DCEF4BE4(v20, v19);
          sub_1DCEF4BE4((uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
          return 1;
        }
      }
      uint64_t v24 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange;
      sub_1DCEF4BE4((uint64_t)v4, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange);
      uint64_t v25 = (uint64_t)v10;
LABEL_16:
      sub_1DCEF4BE4(v25, v24);
      sub_1DCEF4BE4((uint64_t)v16, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
      return 0;
    }
    uint64_t v21 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ShapeRange;
    uint64_t v22 = (uint64_t)v10;
  }
  else
  {
    sub_1DCF0EE60((uint64_t)v16, (uint64_t)v13, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_ShapeFlexibility);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1DCF0EDA4(v18, (uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
      if (sub_1DCFBAE6C(*v13, *v7))
      {
        sub_1DD047BF8();
        sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
        if (sub_1DD0483B8())
        {
          uint64_t v19 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes;
          sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
          uint64_t v20 = (uint64_t)v13;
          goto LABEL_13;
        }
      }
      uint64_t v24 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes;
      sub_1DCEF4BE4((uint64_t)v7, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes);
      uint64_t v25 = (uint64_t)v13;
      goto LABEL_16;
    }
    uint64_t v21 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.EnumeratedShapes;
    uint64_t v22 = (uint64_t)v13;
  }
  sub_1DCEF4BE4(v22, v21);
  sub_1DCD2479C((uint64_t)v16, &qword_1EAB04030);
  return 0;
}

uint64_t sub_1DCF0D78C(char *a1, char *a2, uint64_t (*a3)(void, void, double), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - v14;
  if (a3(*(void *)a1, *(void *)a2, v13))
  {
    uint64_t v16 = a4(0);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v17(v15, &a1[*(int *)(v16 + 20)], v8);
    v17(v11, &a2[*(int *)(v16 + 20)], v8);
    sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v18 = sub_1DD0483B8();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v11, v8);
    v19(v15, v8);
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1DCF0D954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v41 = (char *)&v40 - v7;
  uint64_t v8 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v45 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04058);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85B28);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v40 - v19;
  MEMORY[0x1F4188790](v21);
  char v23 = (char *)&v40 - v22;
  uint64_t v46 = a1;
  sub_1DCD2889C(a1, (uint64_t)&v40 - v22, &qword_1EBE85B28);
  uint64_t v47 = a2;
  sub_1DCD2889C(a2, (uint64_t)v20, &qword_1EBE85B28);
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1DCD2889C((uint64_t)v23, (uint64_t)v14, &qword_1EBE85B28);
  sub_1DCD2889C((uint64_t)v20, v24, &qword_1EBE85B28);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) != 1)
  {
    sub_1DCD2889C((uint64_t)v14, (uint64_t)v17, &qword_1EBE85B28);
    if (v25(v24, 1, v8) != 1)
    {
      uint64_t v26 = v45;
      sub_1DCF0EDA4(v24, v45, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      char v27 = sub_1DCF0E81C((uint64_t)v17, v26);
      sub_1DCEF4BE4(v26, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      sub_1DCD2479C((uint64_t)v20, &qword_1EBE85B28);
      sub_1DCD2479C((uint64_t)v23, &qword_1EBE85B28);
      sub_1DCEF4BE4((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      sub_1DCD2479C((uint64_t)v14, &qword_1EBE85B28);
      if ((v27 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    sub_1DCD2479C((uint64_t)v20, &qword_1EBE85B28);
    sub_1DCD2479C((uint64_t)v23, &qword_1EBE85B28);
    sub_1DCEF4BE4((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
LABEL_6:
    sub_1DCD2479C((uint64_t)v14, &qword_1EAB04058);
    goto LABEL_9;
  }
  sub_1DCD2479C((uint64_t)v20, &qword_1EBE85B28);
  sub_1DCD2479C((uint64_t)v23, &qword_1EBE85B28);
  if (v25(v24, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_1DCD2479C((uint64_t)v14, &qword_1EBE85B28);
LABEL_8:
  uint64_t v28 = type metadata accessor for Argos_Protos_MLModel_FeatureType(0);
  uint64_t v29 = v47;
  if (*(unsigned __int8 *)(v46 + *(int *)(v28 + 20)) == *(unsigned __int8 *)(v47 + *(int *)(v28 + 20)))
  {
    uint64_t v32 = v28;
    uint64_t v34 = v43;
    uint64_t v33 = v44;
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
    int v36 = v41;
    v35(v41, v46 + *(int *)(v28 + 24), v44);
    uint64_t v37 = v29 + *(int *)(v32 + 24);
    uint64_t v38 = v42;
    v35(v42, v37, v33);
    sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v30 = sub_1DD0483B8();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
    v39(v38, v33);
    v39(v36, v33);
    return v30 & 1;
  }
LABEL_9:
  char v30 = 0;
  return v30 & 1;
}

uint64_t sub_1DCF0DE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  uint64_t v3 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v24 - v13);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03FE8);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)&v17[*(int *)(v18 + 56)];
  sub_1DCF0EE60(a1, (uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  sub_1DCF0EE60(v25, v19, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1DCF0EE60((uint64_t)v17, (uint64_t)v14, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1DCF0EDA4(v19, (uint64_t)v8, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
      if (sub_1DCFBB694(*v14, *v8))
      {
        sub_1DD047BF8();
        sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
        if (sub_1DD0483B8())
        {
          sub_1DCEF4BE4((uint64_t)v8, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
          sub_1DCEF4BE4((uint64_t)v14, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
          sub_1DCEF4BE4((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
          char v20 = 1;
          return v20 & 1;
        }
      }
      sub_1DCEF4BE4((uint64_t)v8, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
      sub_1DCEF4BE4((uint64_t)v14, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes);
      sub_1DCEF4BE4((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
LABEL_12:
      char v20 = 0;
      return v20 & 1;
    }
    uint64_t v21 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.EnumeratedImageSizes;
    uint64_t v22 = (uint64_t)v14;
LABEL_7:
    sub_1DCEF4BE4(v22, v21);
    sub_1DCD2479C((uint64_t)v17, &qword_1EAB03FE8);
    goto LABEL_12;
  }
  sub_1DCF0EE60((uint64_t)v17, (uint64_t)v11, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v21 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange;
    uint64_t v22 = (uint64_t)v11;
    goto LABEL_7;
  }
  sub_1DCF0EDA4(v19, (uint64_t)v5, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
  char v20 = sub_1DCF0C344((uint64_t)v11, (uint64_t)v5);
  sub_1DCEF4BE4((uint64_t)v5, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
  sub_1DCEF4BE4((uint64_t)v11, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ImageSizeRange);
  sub_1DCEF4BE4((uint64_t)v17, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  return v20 & 1;
}

uint64_t sub_1DCF0E2A4(void *a1, void *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v54 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v46 - v8;
  uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility(0);
  uint64_t v55 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB03FE0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85D50);
  MEMORY[0x1F4188790](v16 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v46 - v18;
  MEMORY[0x1F4188790](v20);
  if (*a1 != *a2) {
    goto LABEL_12;
  }
  uint64_t v52 = v12;
  uint64_t v53 = v15;
  uint64_t v23 = v55;
  uint64_t v50 = v9;
  uint64_t v51 = v6;
  if (a1[1] != a2[1]) {
    goto LABEL_12;
  }
  uint64_t v24 = a2;
  uint64_t v49 = v22;
  uint64_t v47 = v4;
  uint64_t v25 = (char *)&v46 - v21;
  uint64_t v26 = (int *)type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  sub_1DCD2889C((uint64_t)a1 + v26[6], (uint64_t)v25, &qword_1EBE85D50);
  uint64_t v27 = v26[6];
  uint64_t v48 = v24;
  sub_1DCD2889C((uint64_t)v24 + v27, (uint64_t)v19, &qword_1EBE85D50);
  uint64_t v28 = (uint64_t)v53;
  uint64_t v29 = (uint64_t)&v53[*(int *)(v13 + 48)];
  sub_1DCD2889C((uint64_t)v25, (uint64_t)v53, &qword_1EBE85D50);
  sub_1DCD2889C((uint64_t)v19, v29, &qword_1EBE85D50);
  char v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v30(v28, 1, v10) == 1)
  {
    sub_1DCD2479C((uint64_t)v19, &qword_1EBE85D50);
    uint64_t v28 = (uint64_t)v53;
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE85D50);
    if (v30(v29, 1, v10) == 1)
    {
      sub_1DCD2479C(v28, &qword_1EBE85D50);
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  uint64_t v31 = v49;
  sub_1DCD2889C(v28, v49, &qword_1EBE85D50);
  if (v30(v29, 1, v10) == 1)
  {
    sub_1DCD2479C((uint64_t)v19, &qword_1EBE85D50);
    sub_1DCD2479C((uint64_t)v25, &qword_1EBE85D50);
    sub_1DCEF4BE4(v31, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
LABEL_8:
    sub_1DCD2479C(v28, &qword_1EAB03FE0);
LABEL_12:
    char v43 = 0;
    return v43 & 1;
  }
  uint64_t v32 = (uint64_t)v52;
  sub_1DCF0EDA4(v29, (uint64_t)v52, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  char v33 = sub_1DCF0DE5C(v31, v32);
  sub_1DCEF4BE4(v32, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  sub_1DCD2479C((uint64_t)v19, &qword_1EBE85D50);
  sub_1DCD2479C((uint64_t)v25, &qword_1EBE85D50);
  sub_1DCEF4BE4(v31, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.OneOf_SizeFlexibility);
  sub_1DCD2479C(v28, &qword_1EBE85D50);
  if ((v33 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v34 = v48;
  if (!sub_1DCDC2CAC(*(void *)((char *)a1 + v26[7]), *((unsigned char *)a1 + v26[7] + 8), *(void *)((char *)v48 + v26[7]), *((unsigned char *)v48 + v26[7] + 8)))goto LABEL_12; {
  uint64_t v35 = (char *)a1 + v26[8];
  }
  int v36 = v26;
  uint64_t v37 = v54;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  uint64_t v39 = v50;
  uint64_t v40 = v47;
  v38(v50, v35, v47);
  uint64_t v41 = (char *)v34 + v36[8];
  uint64_t v42 = v51;
  v38(v51, v41, v40);
  sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
  char v43 = sub_1DD0483B8();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v37 + 8);
  v44(v42, v40);
  v44(v39, v40);
  return v43 & 1;
}

uint64_t sub_1DCF0E81C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v27 - v14);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04060);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v18[*(int *)(v19 + 56)];
  sub_1DCF0EE60(a1, (uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  sub_1DCF0EE60(a2, v20, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1DCF0EE60((uint64_t)v18, (uint64_t)v12, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1DCF0EDA4(v20, (uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      char v21 = sub_1DCF0CC54((uint64_t)v12, (uint64_t)v6);
      sub_1DCEF4BE4((uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType);
      uint64_t v22 = (uint64_t)v12;
      uint64_t v23 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType;
LABEL_9:
      sub_1DCEF4BE4(v22, v23);
      sub_1DCEF4BE4((uint64_t)v18, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
      return v21 & 1;
    }
    uint64_t v24 = type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType;
    uint64_t v25 = (uint64_t)v12;
  }
  else
  {
    sub_1DCF0EE60((uint64_t)v18, (uint64_t)v15, type metadata accessor for Argos_Protos_MLModel_FeatureType.OneOf_Type);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1DCF0EDA4(v20, (uint64_t)v9, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
      char v21 = sub_1DCF0E2A4(v15, v9);
      sub_1DCEF4BE4((uint64_t)v9, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
      uint64_t v22 = (uint64_t)v15;
      uint64_t v23 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType;
      goto LABEL_9;
    }
    uint64_t v24 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType;
    uint64_t v25 = (uint64_t)v15;
  }
  sub_1DCEF4BE4(v25, v24);
  sub_1DCD2479C((uint64_t)v18, &qword_1EAB04060);
  char v21 = 0;
  return v21 & 1;
}

uint64_t sub_1DCF0EB80(char *a1, char *a2, uint64_t (*a3)(void, double))
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v19 - v12;
  if (*(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1))
  {
    uint64_t v14 = a3(0, v11);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v15(v13, &a1[*(int *)(v14 + 24)], v6);
    v15(v9, &a2[*(int *)(v14 + 24)], v6);
    sub_1DCF0AE4C(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v16 = sub_1DD0483B8();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v17(v9, v6);
    v17(v13, v6);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

unint64_t sub_1DCF0ED50()
{
  unint64_t result = qword_1EBE85D18;
  if (!qword_1EBE85D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85D18);
  }
  return result;
}

uint64_t sub_1DCF0EDA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1DCF0EE0C()
{
  unint64_t result = qword_1EBE85C58;
  if (!qword_1EBE85C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85C58);
  }
  return result;
}

uint64_t sub_1DCF0EE60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCF0EEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_2Tm_7);
}

uint64_t sub_1DCF0EEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_3Tm_7);
}

uint64_t getEnumTagSinglePayload for Argos_Protos_MLModel_ArrayFeatureType.OneOf_DefaultOptionalValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Argos_Protos_MLModel_ArrayFeatureType.OneOf_DefaultOptionalValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1DCF0EF84(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1DCF0EF8C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.OneOf_DefaultOptionalValue()
{
  return &type metadata for Argos_Protos_MLModel_ArrayFeatureType.OneOf_DefaultOptionalValue;
}

ValueMetadata *type metadata accessor for Argos_Protos_MLModel_ArrayFeatureType.ArrayDataType()
{
  return &type metadata for Argos_Protos_MLModel_ArrayFeatureType.ArrayDataType;
}

void *sub_1DCF0EFB4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF0F038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_42Tm_1);
}

uint64_t sub_1DCF0F050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_43Tm_1);
}

ValueMetadata *type metadata accessor for Argos_Protos_MLModel_ImageFeatureType.ColorSpace()
{
  return &type metadata for Argos_Protos_MLModel_ImageFeatureType.ColorSpace;
}

uint64_t *sub_1DCF0F078(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1DD047BF8();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1DCF0F16C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *sub_1DCF0F1EC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1DCF0F28C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_1DCF0F338(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1DCF0F3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF0F3E8);
}

uint64_t sub_1DCF0F3E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1DD047BF8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    double v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1DCF0F498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF0F4AC);
}

void *sub_1DCF0F4AC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1DCF0F554()
{
  return sub_1DCF0F564();
}

uint64_t sub_1DCF0F564()
{
  uint64_t result = sub_1DD047BF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1DCF0F5F8()
{
  unint64_t result = qword_1EBE85D28;
  if (!qword_1EBE85D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85D28);
  }
  return result;
}

unint64_t sub_1DCF0F650()
{
  unint64_t result = qword_1EBE85C68;
  if (!qword_1EBE85C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85C68);
  }
  return result;
}

unint64_t sub_1DCF0F6A8()
{
  unint64_t result = qword_1EBE85C60;
  if (!qword_1EBE85C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85C60);
  }
  return result;
}

unint64_t sub_1DCF0F700()
{
  unint64_t result = qword_1EBE85C70;
  if (!qword_1EBE85C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85C70);
  }
  return result;
}

unint64_t sub_1DCF0F758()
{
  unint64_t result = qword_1EBE85D20;
  if (!qword_1EBE85D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85D20);
  }
  return result;
}

unint64_t sub_1DCF0F7B0()
{
  unint64_t result = qword_1EBE85D30;
  if (!qword_1EBE85D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85D30);
  }
  return result;
}

uint64_t sub_1DCF0F804(uint64_t result)
{
  switch(result)
  {
    case 10:
      unint64_t result = 1;
      break;
    case 20:
      unint64_t result = 2;
      break;
    case 30:
      unint64_t result = 3;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCF0F8E4(uint64_t result)
{
  if (result <= 65567)
  {
    if (result == 65552) {
      return 1;
    }
  }
  else
  {
    switch(result)
    {
      case 65568:
        return 2;
      case 65600:
        return 3;
      case 131104:
        return 4;
    }
  }
  return result;
}

id sub_1DCF0F98C(char a1, uint64_t a2, CGFloat a3)
{
  if ((a1 & 1) == 0)
  {
    uint64_t v9 = (void *)sub_1DD0483D8();
    id v6 = objc_msgSend(self, sel_filterWithName_, v9);

    if (v6)
    {
      CGAffineTransformMakeScale(v14, a3, a3);
      v14[1] = v14[0];
      uint64_t v10 = (void *)sub_1DD048868();
      objc_msgSend(v6, sel_setValue_forKey_, v10, *MEMORY[0x1E4F1E508]);

      objc_msgSend(v6, sel_setValue_forKey_, a2, *MEMORY[0x1E4F1E480]);
      return v6;
    }
    sub_1DCF10098();
    swift_allocError();
    *double v11 = 0xD000000000000024;
    uint64_t v12 = "could not build CIFilter for scaling";
LABEL_8:
    v11[1] = (unint64_t)(v12 - 32) | 0x8000000000000000;
    swift_willThrow();
    return v6;
  }
  uint64_t v5 = (void *)sub_1DD0483D8();
  id v6 = objc_msgSend(self, sel_filterWithName_, v5);

  if (!v6)
  {
    sub_1DCF10098();
    swift_allocError();
    *double v11 = 0xD000000000000030;
    uint64_t v12 = "could not build CIFilter CILanczosScaleTransform";
    goto LABEL_8;
  }
  objc_msgSend(v6, sel_setValue_forKey_, a2, *MEMORY[0x1E4F1E480]);
  uint64_t v7 = (void *)sub_1DD047A48();
  objc_msgSend(v6, sel_setValue_forKey_, v7, *MEMORY[0x1E4F1E4F0]);

  uint64_t v8 = (void *)sub_1DD048808();
  objc_msgSend(v6, sel_setValue_forKey_, v8, *MEMORY[0x1E4F1E410]);

  return v6;
}

void sub_1DCF0FBE8(void *a1, char a2)
{
  swift_getObjectType();
  id v5 = objc_msgSend(a1, sel_pixelBuffer);
  if (v5)
  {
    id v6 = v5;
    sub_1DCE9BF6C(v23);
    uint64_t v7 = v24;
    uint64_t v8 = v25;
    __swift_project_boxed_opaque_existential_1(v23, v24);
    double v9 = (*(double (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    double v11 = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    double v12 = sqrt(3100000.0 / (v9 * v11));
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E050]), sel_initWithCVPixelBuffer_, v6);
    uint64_t v14 = v13;
    if (v12 >= 0.9)
    {
      id v17 = v13;
    }
    else
    {
      id v15 = sub_1DCF0F98C(a2 & 1, (uint64_t)v13, v12);
      if (v2)
      {
LABEL_4:

        return;
      }
      uint64_t v20 = v15;
      id v21 = objc_msgSend(v15, sel_outputImage);
      if (!v21)
      {
        sub_1DCF10098();
        swift_allocError();
        *uint64_t v22 = 0xD000000000000015;
        v22[1] = 0x80000001DD06E1C0;
        swift_willThrow();

        goto LABEL_4;
      }
      id v17 = v21;
      double v9 = v9 * v12;
      double v11 = v11 * v12;
    }
    id v18 = objc_msgSend(v17, sel_imageByClampingToExtent);
    id v19 = objc_msgSend(v18, sel_imageByCroppingToRect_, 0.0, 0.0, v9, v11);

    objc_msgSend(v19, sel_imageByApplyingCGOrientation_, objc_msgSend(a1, sel_orientation));
  }
  else
  {
    sub_1DCF10098();
    swift_allocError();
    *char v16 = 0xD00000000000002CLL;
    v16[1] = 0x80000001DD06E190;
    swift_willThrow();
  }
}

uint64_t sub_1DCF0FE88(uint64_t a1)
{
  CGColorSpaceRef v2 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DC98]);
  if (v2)
  {
    CGColorSpaceRef v3 = v2;
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E018]), sel_init);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB040A8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1DD04E910;
    sub_1DD048408();
    uint64_t v6 = sub_1DD0483D8();
    swift_bridgeObjectRelease();
    *(void *)(inited + 64) = MEMORY[0x1E4FBB3D0];
    *(void *)(inited + 32) = v6;
    *(void *)(inited + 40) = 0x3FEB333333333333;
    sub_1DCDBA624(inited);
    type metadata accessor for CIImageRepresentationOption(0);
    sub_1DCF100EC();
    uint64_t v7 = (void *)sub_1DD0482C8();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v4, sel_JPEGRepresentationOfImage_colorSpace_options_, a1, v3, v7);

    if (v8)
    {
      a1 = sub_1DD0464E8();
    }
    else
    {
      sub_1DCF10098();
      swift_allocError();
      *double v10 = 0xD000000000000016;
      v10[1] = 0x80000001DD06E170;
      swift_willThrow();
    }
  }
  else
  {
    sub_1DCF10098();
    swift_allocError();
    *double v9 = 0xD000000000000021;
    v9[1] = 0x80000001DD06E140;
    swift_willThrow();
  }
  return a1;
}

unint64_t sub_1DCF10098()
{
  unint64_t result = qword_1EAB040A0;
  if (!qword_1EAB040A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB040A0);
  }
  return result;
}

unint64_t sub_1DCF100EC()
{
  unint64_t result = qword_1EAB02360;
  if (!qword_1EAB02360)
  {
    type metadata accessor for CIImageRepresentationOption(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB02360);
  }
  return result;
}

ValueMetadata *type metadata accessor for UserFeedbackImageScalingError()
{
  return &type metadata for UserFeedbackImageScalingError;
}

uint64_t sub_1DCF10154(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v12++, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16)
    {
      int64_t v17 = v12 + 1;
      if (v12 + 1 >= v10) {
        goto LABEL_27;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v12 + 2;
        if (v12 + 2 >= v10) {
          goto LABEL_27;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v12 + 3;
          if (v12 + 3 >= v10) {
            goto LABEL_27;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v12 + 4;
            if (v12 + 4 >= v10)
            {
LABEL_27:
              swift_release();
              char v20 = 0;
              return v20 & 1;
            }
            unint64_t v16 = *(void *)(v6 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_30;
                }
                if (v12 >= v10) {
                  goto LABEL_27;
                }
                unint64_t v16 = *(void *)(v6 + 8 * v12);
                ++v17;
                if (v16) {
                  goto LABEL_18;
                }
              }
            }
          }
        }
      }
      int64_t v12 = v17;
    }
LABEL_18:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_19:
    uint64_t v18 = *(void *)(a3 + 48) + 8 * v14;
    int v19 = *(_DWORD *)(v18 + 4);
    v21[0] = *(unsigned char *)v18;
    int v22 = v19;
    uint64_t result = a1(v21);
    if (v3)
    {
      swift_release();
      return v20 & 1;
    }
    if (result)
    {
      swift_release();
      char v20 = 1;
      return v20 & 1;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1DCF10308(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = a2;
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains.DomainSet(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v3;
  uint64_t v60 = *(void *)(*v3 + 16);
  if (!v60) {
    return 0;
  }
  uint64_t v51 = v9;
  uint64_t v52 = v7;
  uint64_t v53 = v6;
  int v58 = *a1;
  uint64_t v59 = v14 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v15 = a3 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v17 = 0;
  uint64_t v18 = v11;
  uint64_t v19 = result;
  uint64_t v55 = v18;
  uint64_t v56 = a3;
  uint64_t v57 = result;
  while (1)
  {
    if (v17 >= *(void *)(v19 + 16))
    {
      __break(1u);
LABEL_56:
      __break(1u);
      return result;
    }
    sub_1DCF108D4(v59 + *(void *)(v18 + 72) * v17, (uint64_t)v13);
    if (*(void *)(a3 + 16))
    {
      uint64_t v20 = *((void *)v13 + 1);
      int v21 = v13[16];
      uint64_t v63 = v20;
      char v64 = v21;
      sub_1DD0490B8();
      sub_1DCE10BA4();
      sub_1DD048368();
      uint64_t v22 = sub_1DD049108();
      uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v24 = v22 & ~v23;
      if ((*(void *)(v15 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24)) {
        break;
      }
    }
LABEL_5:
    ++v17;
    uint64_t result = sub_1DCF10938((uint64_t)v13);
    if (v17 == v60)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v25 = ~v23;
  while (1)
  {
    uint64_t v26 = *(void *)(a3 + 48) + 16 * v24;
    if (*(unsigned char *)(v26 + 8)) {
      uint64_t v27 = *(void *)v26 != 0;
    }
    else {
      uint64_t v27 = *(void *)v26;
    }
    if (!v21)
    {
      if (v27 == v20) {
        goto LABEL_20;
      }
      goto LABEL_11;
    }
    if (!v20) {
      break;
    }
    if (v27 == 1) {
      goto LABEL_20;
    }
LABEL_11:
    unint64_t v24 = (v24 + 1) & v25;
    if (((*(void *)(v15 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
      goto LABEL_5;
    }
  }
  if (v27) {
    goto LABEL_11;
  }
LABEL_20:
  uint64_t v28 = *(void **)v13;
  uint64_t v29 = sub_1DCD9C35C(v58);
  uint64_t v31 = v30;
  uint64_t v32 = v28[2];
  if (!v32) {
    goto LABEL_3;
  }
  uint64_t v33 = v29;
  BOOL v34 = v28[4] == v29 && v28[5] == v30;
  if (!v34 && (sub_1DD048FA8() & 1) == 0)
  {
    if (v32 != 1)
    {
      if (v28[6] == v33 && v28[7] == v31) {
        goto LABEL_26;
      }
      uint64_t result = sub_1DD048FA8();
      if (result) {
        goto LABEL_26;
      }
      if (v32 != 2)
      {
        uint64_t v54 = v28;
        uint64_t v41 = v28 + 9;
        uint64_t v42 = 2;
        while (!__OFADD__(v42, 1))
        {
          BOOL v43 = *(v41 - 1) == v33 && *v41 == v31;
          if (v43 || (v50 = v42 + 1, uint64_t result = sub_1DD048FA8(), (result & 1) != 0))
          {
            uint64_t v28 = v54;
            goto LABEL_26;
          }
          v41 += 2;
          ++v42;
          if (v50 == v32)
          {
            swift_bridgeObjectRelease();
            a3 = v56;
            uint64_t v19 = v57;
            goto LABEL_5;
          }
        }
        goto LABEL_56;
      }
    }
LABEL_3:
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
LABEL_26:
  swift_bridgeObjectRelease();
  uint64_t v35 = v28[2];
  if (!v35)
  {
LABEL_31:
    uint64_t v18 = v55;
    a3 = v56;
LABEL_4:
    uint64_t v19 = v57;
    goto LABEL_5;
  }
  uint64_t v36 = swift_bridgeObjectRetain_n();
  uint64_t v54 = v28;
  uint64_t v37 = v28 + 5;
  while (1)
  {
    uint64_t v39 = *(v37 - 1);
    unint64_t v38 = *v37;
    MEMORY[0x1F4188790](v36);
    *(&v49 - 4) = v39;
    *(&v49 - 3) = v38;
    *(&v49 - 2) = (uint64_t)v13;
    swift_bridgeObjectRetain();
    if (sub_1DCF10154((uint64_t (*)(char *))sub_1DCF10AA4, (uint64_t)(&v49 - 6), v61)) {
      break;
    }
    v37 += 2;
    uint64_t v36 = swift_bridgeObjectRelease();
    if (!--v35)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v44 = (uint64_t)v51;
  sub_1DCDB40EC((uint64_t)v51);
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_1DD048048();
  os_log_type_t v46 = sub_1DD048848();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v62[0] = v48;
    *(_DWORD *)uint64_t v47 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1DCED7FA0(v39, v38, v62);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1DCCF9000, v45, v46, "Incompatible domain %s", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v48, -1, -1);
    MEMORY[0x1E01B07E0](v47, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v44, v53);
  sub_1DCF10938((uint64_t)v13);
  return 1;
}

uint64_t sub_1DCF108D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains.DomainSet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF10938(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains.DomainSet(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1DCF10994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains.DomainSet(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (float *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  float v11 = *(float *)(a1 + 4);
  if (sub_1DCD9C35C(*(unsigned char *)a1) == a2 && v12 == a3)
  {
    swift_bridgeObjectRelease();
    sub_1DCF108D4(a4, (uint64_t)v10);
  }
  else
  {
    char v14 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    sub_1DCF108D4(a4, (uint64_t)v10);
    BOOL v15 = 0;
    if ((v14 & 1) == 0) {
      goto LABEL_9;
    }
  }
  BOOL v15 = v10[5] < v11;
LABEL_9:
  sub_1DCF10938((uint64_t)v10);
  return v15;
}

BOOL sub_1DCF10AA4(uint64_t a1)
{
  return sub_1DCF10994(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1DCF10AC8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a2 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (2)
  {
    if (!v7)
    {
      int64_t v13 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
      }
      else
      {
        if (v13 >= v8) {
          goto LABEL_108;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v13);
        ++v9;
        if (v14) {
          goto LABEL_24;
        }
        int64_t v9 = v13 + 1;
        if (v13 + 1 >= v8) {
          goto LABEL_108;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v9);
        if (v14) {
          goto LABEL_24;
        }
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_108;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v9);
        if (v14) {
          goto LABEL_24;
        }
        int64_t v9 = v13 + 3;
        if (v13 + 3 >= v8) {
          goto LABEL_108;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v9);
        if (v14) {
          goto LABEL_24;
        }
        int64_t v9 = v13 + 4;
        if (v13 + 4 >= v8) {
          goto LABEL_108;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v9);
        if (v14) {
          goto LABEL_24;
        }
        int64_t v15 = v13 + 5;
        if (v15 >= v8)
        {
LABEL_108:
          swift_release();
          return 0;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v15);
        if (v14)
        {
          int64_t v9 = v15;
LABEL_24:
          unint64_t v7 = (v14 - 1) & v14;
          unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
          goto LABEL_25;
        }
        while (1)
        {
          int64_t v9 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            break;
          }
          if (v9 >= v8) {
            goto LABEL_108;
          }
          unint64_t v14 = *(void *)(v4 + 8 * v9);
          ++v15;
          if (v14) {
            goto LABEL_24;
          }
        }
      }
      __break(1u);
      JUMPOUT(0x1DCF11224);
    }
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v9 << 6);
LABEL_25:
    unint64_t v16 = 0xE300000000000000;
    uint64_t v17 = 7631457;
    switch(*(unsigned char *)(*(void *)(a2 + 48) + 8 * v12))
    {
      case 1:
        unint64_t v16 = 0xE600000000000000;
        uint64_t v17 = 0x65727574616ELL;
        break;
      case 2:
        unint64_t v16 = 0xE800000000000000;
        uint64_t v17 = 0x6B72616D646E616CLL;
        break;
      case 3:
        uint64_t v17 = 0x4C6C61727574616ELL;
        unint64_t v16 = 0xEF6B72616D646E61;
        break;
      case 4:
        unint64_t v16 = 0xE500000000000000;
        uint64_t v17 = 0x616964656DLL;
        break;
      case 5:
        unint64_t v16 = 0xE400000000000000;
        uint64_t v17 = 1802465122;
        break;
      case 6:
        unint64_t v16 = 0xE500000000000000;
        uint64_t v17 = 0x6D75626C61;
        break;
      case 7:
        unint64_t v16 = 0xE400000000000000;
        uint64_t v17 = 1937006947;
        break;
      case 8:
        unint64_t v16 = 0xE400000000000000;
        uint64_t v17 = 1936158564;
        break;
      case 9:
        unint64_t v16 = 0xE700000000000000;
        unsigned int v18 = 1835626081;
        goto LABEL_39;
      case 0xA:
        unint64_t v16 = 0xE500000000000000;
        uint64_t v17 = 0x7364726962;
        break;
      case 0xB:
        unint64_t v16 = 0xE700000000000000;
        uint64_t v17 = 0x73746365736E69;
        break;
      case 0xC:
        unint64_t v16 = 0xE800000000000000;
        uint64_t v17 = 0x73656C6974706572;
        break;
      case 0xD:
        unint64_t v16 = 0xE700000000000000;
        unsigned int v18 = 1835884909;
LABEL_39:
        uint64_t v17 = v18 | 0x736C6100000000;
        break;
      case 0xE:
        unint64_t v16 = 0xE700000000000000;
        uint64_t v17 = 0x6C657261707061;
        break;
      case 0xF:
        uint64_t v17 = 0x726F737365636361;
        unint64_t v16 = 0xEB00000000736569;
        break;
      case 0x10:
        unint64_t v16 = 0xE400000000000000;
        uint64_t v17 = 1685024614;
        break;
      case 0x11:
        uint64_t v17 = 0x6F726665726F7473;
        unint64_t v16 = 0xEA0000000000746ELL;
        break;
      case 0x12:
        unsigned int v19 = 1852270963;
        goto LABEL_47;
      case 0x13:
        unint64_t v16 = 0x80000001DD066AB0;
        uint64_t v17 = 0xD000000000000011;
        break;
      case 0x14:
        unsigned int v19 = 1869903201;
LABEL_47:
        uint64_t v17 = v19 | 0x626D795300000000;
        unint64_t v16 = 0xEA00000000006C6FLL;
        break;
      case 0x15:
        uint64_t v17 = 0x676F4C646E617262;
        unint64_t v16 = 0xEF6C6F626D79536FLL;
        break;
      case 0x16:
        unint64_t v16 = 0xE700000000000000;
        uint64_t v17 = 0x65646F63726162;
        break;
      case 0x17:
        uint64_t v17 = 0x727574706C756373;
        unint64_t v16 = 0xE900000000000065;
        break;
      case 0x18:
        unint64_t v16 = 0xE700000000000000;
        uint64_t v17 = 0x656E696C796B73;
        break;
      case 0x19:
        unint64_t v16 = 0xE800000000000000;
        uint64_t v17 = 0x44327463656A626FLL;
        break;
      default:
        break;
    }
    unint64_t v20 = 0xE300000000000000;
    uint64_t v21 = 7631457;
    switch(v3)
    {
      case 1:
        unint64_t v20 = 0xE600000000000000;
        if (v17 != 0x65727574616ELL) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 2:
        unint64_t v20 = 0xE800000000000000;
        if (v17 != 0x6B72616D646E616CLL) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 3:
        unint64_t v20 = 0xEF6B72616D646E61;
        if (v17 != 0x4C6C61727574616ELL) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 4:
        unint64_t v20 = 0xE500000000000000;
        if (v17 != 0x616964656DLL) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 5:
        unint64_t v20 = 0xE400000000000000;
        if (v17 != 1802465122) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 6:
        unint64_t v20 = 0xE500000000000000;
        if (v17 != 0x6D75626C61) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 7:
        unint64_t v20 = 0xE400000000000000;
        if (v17 != 1937006947) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 8:
        unint64_t v20 = 0xE400000000000000;
        if (v17 != 1936158564) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 9:
        unint64_t v20 = 0xE700000000000000;
        uint64_t v22 = 1835626081;
        goto LABEL_77;
      case 10:
        unint64_t v20 = 0xE500000000000000;
        if (v17 != 0x7364726962) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 11:
        unint64_t v20 = 0xE700000000000000;
        unint64_t v23 = 0x746365736E69;
        goto LABEL_78;
      case 12:
        unint64_t v20 = 0xE800000000000000;
        if (v17 != 0x73656C6974706572) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 13:
        unint64_t v20 = 0xE700000000000000;
        uint64_t v22 = 1835884909;
LABEL_77:
        unint64_t v23 = v22 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_78:
        if (v17 != (v23 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 14:
        unint64_t v20 = 0xE700000000000000;
        if (v17 != 0x6C657261707061) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 15:
        unint64_t v20 = 0xEB00000000736569;
        if (v17 != 0x726F737365636361) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 16:
        unint64_t v20 = 0xE400000000000000;
        if (v17 != 1685024614) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 17:
        unint64_t v20 = 0xEA0000000000746ELL;
        if (v17 != 0x6F726665726F7473) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 18:
        unsigned int v24 = 1852270963;
        goto LABEL_92;
      case 19:
        unint64_t v20 = 0x80000001DD066AB0;
        if (v17 != 0xD000000000000011) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 20:
        unsigned int v24 = 1869903201;
LABEL_92:
        unint64_t v20 = 0xEA00000000006C6FLL;
        if (v17 != (v24 | 0x626D795300000000)) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 21:
        unint64_t v20 = 0xEF6C6F626D79536FLL;
        if (v17 != 0x676F4C646E617262) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 22:
        unint64_t v20 = 0xE700000000000000;
        if (v17 != 0x65646F63726162) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 23:
        unint64_t v20 = 0xE900000000000065;
        if (v17 != 0x727574706C756373) {
          goto LABEL_4;
        }
        goto LABEL_102;
      case 24:
        unint64_t v20 = 0xE700000000000000;
        uint64_t v21 = 0x656E696C796B73;
        goto LABEL_101;
      case 25:
        unint64_t v20 = 0xE800000000000000;
        if (v17 != 0x44327463656A626FLL) {
          goto LABEL_4;
        }
        goto LABEL_102;
      default:
LABEL_101:
        if (v17 != v21) {
          goto LABEL_4;
        }
LABEL_102:
        if (v16 == v20)
        {
          swift_release();
          swift_bridgeObjectRelease_n();
          goto LABEL_107;
        }
LABEL_4:
        char v10 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          continue;
        }
        swift_release();
LABEL_107:
        uint64_t result = 1;
        break;
    }
    return result;
  }
}

void sub_1DCF112F4(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1DCD742D8(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1DCF115DC(v5);
  *a1 = v3;
}

uint64_t sub_1DCF1139C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v6 - 8);
  int64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + *(int *)(type metadata accessor for MLModelInfo(0) + 36));
  if (*(void *)(v9 + 16) && (uint64_t v10 = sub_1DCEAD428(1), (v11 & 1) != 0))
  {
    uint64_t v12 = v10;
    uint64_t v13 = *(void *)(v9 + 56);
    uint64_t v14 = sub_1DD046478();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, v13 + *(void *)(v15 + 72) * v12, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  }
  else
  {
    uint64_t v16 = sub_1DD046478();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  }
  type metadata accessor for FileMapper();
  swift_allocObject();
  uint64_t v17 = sub_1DCEC56C0((uint64_t)v8);
  sub_1DCD565B8(a1, type metadata accessor for MLModelInfo);
  *(void *)(v3 + 16) = v17;
  *(void *)(v3 + 24) = a2;
  return v3;
}

uint64_t sub_1DCF11580()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DomainPredictionResponseProcessor()
{
  return self;
}

void sub_1DCF115DC(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v133 = *(void *)(v4 - 8);
  uint64_t v134 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v130 = (uint64_t)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v140 = (uint64_t)&v125 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v137 = (uint64_t)&v125 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v136 = (uint64_t)&v125 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_1DD048F68();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_142;
    }
    if (v12) {
      sub_1DCF11FF0(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_150;
  }
  uint64_t v128 = v13;
  if (v12 < 2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    unint64_t v132 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      unint64_t v20 = (char *)MEMORY[0x1E4FBC860];
LABEL_107:
      uint64_t v127 = v18;
      if (v21 >= 2)
      {
        uint64_t v119 = *a1;
        do
        {
          unint64_t v120 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_137;
          }
          if (!v119) {
            goto LABEL_149;
          }
          uint64_t v121 = *(void *)&v20[16 * v120 + 32];
          uint64_t v122 = *(void *)&v20[16 * v21 + 24];
          sub_1DCF12260(v119 + *(void *)(v133 + 72) * v121, v119 + *(void *)(v133 + 72) * *(void *)&v20[16 * v21 + 16], v119 + *(void *)(v133 + 72) * v122, v132);
          if (v2) {
            break;
          }
          if (v122 < v121) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v20 = sub_1DCD729EC((uint64_t)v20);
          }
          if (v120 >= *((void *)v20 + 2)) {
            goto LABEL_139;
          }
          int v123 = &v20[16 * v120 + 32];
          *(void *)int v123 = v121;
          *((void *)v123 + 1) = v122;
          unint64_t v124 = *((void *)v20 + 2);
          if (v21 > v124) {
            goto LABEL_140;
          }
          memmove(&v20[16 * v21 + 16], &v20[16 * v21 + 32], 16 * (v124 - v21));
          *((void *)v20 + 2) = v124 - 1;
          unint64_t v21 = v124 - 1;
        }
        while (v124 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(void *)(v127 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v127 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1DD0486F8();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v133 + 80);
    uint64_t v127 = v16;
    unint64_t v132 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  unint64_t v20 = (char *)MEMORY[0x1E4FBC860];
  id v139 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    if (v19 + 1 >= v12)
    {
      uint64_t v31 = v19 + 1;
    }
    else
    {
      uint64_t v129 = *a1;
      uint64_t v24 = v129;
      uint64_t v25 = *(void *)(v133 + 72);
      uint64_t v131 = v19;
      uint64_t v26 = v136;
      sub_1DCD36E7C(v129 + v25 * v23, v136);
      uint64_t v27 = v137;
      sub_1DCD36E7C(v24 + v25 * v131, v137);
      float v28 = *(float *)(v26 + 76);
      float v29 = *(float *)(v27 + 76);
      sub_1DCD565B8(v27, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v30 = v26;
      uint64_t v22 = v131;
      sub_1DCD565B8(v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v31 = v22 + 2;
      uint64_t v141 = v25;
      if (v22 + 2 >= v12)
      {
        uint64_t v37 = v25;
        if (v29 >= v28) {
          goto LABEL_40;
        }
      }
      else
      {
        uint64_t v126 = v2;
        uint64_t v138 = v25 * v23;
        uint64_t v32 = v129;
        uint64_t v135 = v25 * v31;
        while (1)
        {
          uint64_t v33 = v31;
          uint64_t v34 = v136;
          sub_1DCD36E7C(v32 + v135, v136);
          uint64_t v35 = v137;
          sub_1DCD36E7C(v32 + v138, v137);
          BOOL v36 = *(float *)(v35 + 76) >= *(float *)(v34 + 76);
          sub_1DCD565B8(v35, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD565B8(v34, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v29 < v28 == v36) {
            break;
          }
          ++v31;
          uint64_t v37 = v141;
          v32 += v141;
          if (v12 == v33 + 1)
          {
            uint64_t v31 = v12;
            a1 = v139;
            uint64_t v2 = v126;
            uint64_t v22 = v131;
            if (v29 < v28) {
              goto LABEL_27;
            }
            goto LABEL_40;
          }
        }
        a1 = v139;
        uint64_t v2 = v126;
        uint64_t v22 = v131;
        uint64_t v37 = v141;
        if (v29 >= v28) {
          goto LABEL_40;
        }
      }
LABEL_27:
      if (v31 < v22) {
        goto LABEL_143;
      }
      if (v22 < v31)
      {
        uint64_t v135 = v12;
        uint64_t v125 = v20;
        uint64_t v38 = 0;
        uint64_t v39 = v37 * (v31 - 1);
        uint64_t v40 = v22;
        uint64_t v41 = v31 * v37;
        uint64_t v42 = v40;
        uint64_t v43 = v40 * v37;
        do
        {
          if (v42 != v31 + v38 - 1)
          {
            uint64_t v45 = v129;
            if (!v129) {
              goto LABEL_148;
            }
            unint64_t v46 = v129 + v43;
            uint64_t v138 = v129 + v39;
            sub_1DCD36EE0(v129 + v43, v130);
            if (v43 < v39 || v46 >= v45 + v41)
            {
              uint64_t v44 = v138;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v44 = v138;
              if (v43 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1DCD36EE0(v130, v44);
            a1 = v139;
            uint64_t v37 = v141;
          }
          ++v42;
          --v38;
          v39 -= v37;
          v41 -= v37;
          v43 += v37;
        }
        while (v42 < v31 + v38);
        unint64_t v20 = v125;
        uint64_t v22 = v131;
        uint64_t v12 = v135;
      }
    }
LABEL_40:
    if (v31 < v12)
    {
      if (__OFSUB__(v31, v22)) {
        goto LABEL_141;
      }
      if (v31 - v22 < v128) {
        break;
      }
    }
LABEL_58:
    if (v31 < v22) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v138 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v20 = sub_1DCD71FDC(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v68 = *((void *)v20 + 2);
    unint64_t v67 = *((void *)v20 + 3);
    unint64_t v21 = v68 + 1;
    if (v68 >= v67 >> 1) {
      unint64_t v20 = sub_1DCD71FDC((char *)(v67 > 1), v68 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    uint64_t v69 = v20 + 32;
    uint64_t v70 = &v20[16 * v68 + 32];
    uint64_t v71 = v138;
    *(void *)uint64_t v70 = v22;
    *((void *)v70 + 1) = v71;
    if (v68)
    {
      while (1)
      {
        unint64_t v72 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v77 = &v69[16 * v21];
          uint64_t v78 = *((void *)v77 - 8);
          uint64_t v79 = *((void *)v77 - 7);
          BOOL v83 = __OFSUB__(v79, v78);
          uint64_t v80 = v79 - v78;
          if (v83) {
            goto LABEL_125;
          }
          uint64_t v82 = *((void *)v77 - 6);
          uint64_t v81 = *((void *)v77 - 5);
          BOOL v83 = __OFSUB__(v81, v82);
          uint64_t v75 = v81 - v82;
          char v76 = v83;
          if (v83) {
            goto LABEL_126;
          }
          unint64_t v84 = v21 - 2;
          uint64_t v85 = &v69[16 * v21 - 32];
          uint64_t v87 = *(void *)v85;
          uint64_t v86 = *((void *)v85 + 1);
          BOOL v83 = __OFSUB__(v86, v87);
          uint64_t v88 = v86 - v87;
          if (v83) {
            goto LABEL_128;
          }
          BOOL v83 = __OFADD__(v75, v88);
          uint64_t v89 = v75 + v88;
          if (v83) {
            goto LABEL_131;
          }
          if (v89 >= v80)
          {
            uint64_t v107 = &v69[16 * v72];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v83 = __OFSUB__(v108, v109);
            uint64_t v110 = v108 - v109;
            if (v83) {
              goto LABEL_135;
            }
            BOOL v100 = v75 < v110;
            goto LABEL_95;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v101 = *((void *)v20 + 4);
            uint64_t v102 = *((void *)v20 + 5);
            BOOL v83 = __OFSUB__(v102, v101);
            uint64_t v94 = v102 - v101;
            char v95 = v83;
            goto LABEL_89;
          }
          uint64_t v74 = *((void *)v20 + 4);
          uint64_t v73 = *((void *)v20 + 5);
          BOOL v83 = __OFSUB__(v73, v74);
          uint64_t v75 = v73 - v74;
          char v76 = v83;
        }
        if (v76) {
          goto LABEL_127;
        }
        unint64_t v84 = v21 - 2;
        uint64_t v90 = &v69[16 * v21 - 32];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v93 = __OFSUB__(v91, v92);
        uint64_t v94 = v91 - v92;
        char v95 = v93;
        if (v93) {
          goto LABEL_130;
        }
        uint64_t v96 = &v69[16 * v72];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v83 = __OFSUB__(v97, v98);
        uint64_t v99 = v97 - v98;
        if (v83) {
          goto LABEL_133;
        }
        if (__OFADD__(v94, v99)) {
          goto LABEL_134;
        }
        if (v94 + v99 >= v75)
        {
          BOOL v100 = v75 < v99;
LABEL_95:
          if (v100) {
            unint64_t v72 = v84;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v95) {
          goto LABEL_129;
        }
        uint64_t v103 = &v69[16 * v72];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v83 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v83) {
          goto LABEL_132;
        }
        if (v106 < v94) {
          goto LABEL_15;
        }
LABEL_97:
        unint64_t v111 = v72 - 1;
        if (v72 - 1 >= v21)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v112 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        uint64_t v113 = v20;
        uint64_t v114 = &v69[16 * v111];
        uint64_t v115 = *(void *)v114;
        uint64_t v116 = &v69[16 * v72];
        uint64_t v117 = *((void *)v116 + 1);
        sub_1DCF12260(v112 + *(void *)(v133 + 72) * *(void *)v114, v112 + *(void *)(v133 + 72) * *(void *)v116, v112 + *(void *)(v133 + 72) * v117, v132);
        if (v2) {
          goto LABEL_118;
        }
        if (v117 < v115) {
          goto LABEL_122;
        }
        if (v72 > *((void *)v113 + 2)) {
          goto LABEL_123;
        }
        *(void *)uint64_t v114 = v115;
        *(void *)&v69[16 * v111 + 8] = v117;
        unint64_t v118 = *((void *)v113 + 2);
        if (v72 >= v118) {
          goto LABEL_124;
        }
        unint64_t v20 = v113;
        unint64_t v21 = v118 - 1;
        memmove(&v69[16 * v72], v116 + 16, 16 * (v118 - 1 - v72));
        *((void *)v113 + 2) = v118 - 1;
        a1 = v139;
        if (v118 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v19 = v138;
    if (v138 >= v12)
    {
      uint64_t v18 = v127;
      goto LABEL_107;
    }
  }
  if (__OFADD__(v22, v128)) {
    goto LABEL_144;
  }
  if (v22 + v128 >= v12) {
    uint64_t v47 = v12;
  }
  else {
    uint64_t v47 = v22 + v128;
  }
  if (v47 >= v22)
  {
    if (v31 != v47)
    {
      uint64_t v131 = v22;
      uint64_t v125 = v20;
      uint64_t v126 = v2;
      uint64_t v48 = *(void *)(v133 + 72);
      uint64_t v49 = v48 * (v31 - 1);
      uint64_t v135 = v48;
      uint64_t v50 = v31 * v48;
      uint64_t v129 = v47;
      do
      {
        uint64_t v52 = 0;
        uint64_t v53 = v131;
        uint64_t v138 = v31;
        while (1)
        {
          uint64_t v141 = v53;
          uint64_t v54 = *a1;
          uint64_t v55 = v50;
          uint64_t v56 = v50 + v52 + *a1;
          uint64_t v57 = a1;
          uint64_t v58 = v136;
          sub_1DCD36E7C(v56, v136);
          uint64_t v59 = v49;
          uint64_t v60 = v49 + v52 + v54;
          uint64_t v61 = v137;
          sub_1DCD36E7C(v60, v137);
          float v62 = *(float *)(v58 + 76);
          float v63 = *(float *)(v61 + 76);
          sub_1DCD565B8(v61, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD565B8(v58, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v63 >= v62) {
            break;
          }
          uint64_t v64 = *v57;
          if (!*v57) {
            goto LABEL_146;
          }
          uint64_t v50 = v55;
          uint64_t v49 = v59;
          uint64_t v65 = v64 + v59 + v52;
          sub_1DCD36EE0(v64 + v55 + v52, v140);
          swift_arrayInitWithTakeFrontToBack();
          sub_1DCD36EE0(v140, v65);
          v52 -= v135;
          uint64_t v53 = v141 + 1;
          uint64_t v51 = v138;
          a1 = v139;
          if (v138 == v141 + 1) {
            goto LABEL_51;
          }
        }
        uint64_t v51 = v138;
        a1 = v57;
        uint64_t v49 = v59;
        uint64_t v50 = v55;
LABEL_51:
        uint64_t v31 = v51 + 1;
        v49 += v135;
        v50 += v135;
      }
      while (v31 != v129);
      uint64_t v31 = v129;
      unint64_t v20 = v125;
      uint64_t v2 = v126;
      uint64_t v22 = v131;
    }
    goto LABEL_58;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  sub_1DD048C98();
  __break(1u);
}

void sub_1DCF11FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (float *)((char *)&v23 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (float *)((char *)&v23 - v13);
  uint64_t v28 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v31 = v15 * (v28 - 1);
    uint64_t v27 = v15;
    uint64_t v30 = v15 * v28;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v25;
    while (1)
    {
      uint64_t v18 = *a4;
      sub_1DCD36E7C(v30 + v16 + *a4, (uint64_t)v14);
      sub_1DCD36E7C(v31 + v16 + v18, (uint64_t)v10);
      float v19 = v14[19];
      float v20 = v10[19];
      sub_1DCD565B8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCD565B8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v20 >= v19)
      {
LABEL_4:
        v31 += v27;
        v30 += v27;
        if (++v28 == v24) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v21 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v22 = v21 + v31 + v16;
      sub_1DCD36EE0(v21 + v30 + v16, v29);
      swift_arrayInitWithTakeFrontToBack();
      sub_1DCD36EE0(v29, v22);
      v16 -= v27;
      if (v28 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DCF12260(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v40);
  uint64_t v9 = (float *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (float *)((char *)&v38 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      unint64_t v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v31 = a3 - v14;
          sub_1DCD36E7C(v29 - v14, (uint64_t)v12);
          unint64_t v32 = a2 - v14;
          sub_1DCD36E7C(a2 - v14, (uint64_t)v9);
          float v33 = v12[19];
          float v34 = v9[19];
          sub_1DCD565B8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCD565B8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v34 >= v33)
          {
            unint64_t v35 = v41;
            v41 -= v14;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 -= v14;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v32;
          a3 -= v14;
        }
        while (v32 > v39);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1DCD36E7C(a2, (uint64_t)v12);
        sub_1DCD36E7C(a4, (uint64_t)v9);
        float v22 = v12[19];
        float v23 = v9[19];
        sub_1DCD565B8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCD565B8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v24 = v43;
        if (v23 >= v22)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_67:
    sub_1DCD720D8(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

unint64_t sub_1DCF126FC(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v103 = a4;
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v107 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v99 = (uint64_t)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v97 = (char *)&v93 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v96 = (uint64_t)&v93 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v98 = (uint64_t)&v93 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v104 = (uint64_t)&v93 - v20;
  MEMORY[0x1F4188790](v21);
  float v23 = (char *)&v93 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v93 - v25;
  uint64_t v130 = a2;
  BOOL v100 = a2;
  swift_bridgeObjectRetain();
  unint64_t v27 = 0;
  sub_1DCF112F4(&v130);
  if (*(void *)(a1 + 16)
    && (v108 = v130, unint64_t v28 = sub_1DCEAD1A4(0x74757074756FLL, 0xE600000000000000), (v29 & 1) != 0))
  {
    uint64_t v30 = *(void **)(*(void *)(a1 + 56) + 8 * v28);
    uint64_t v101 = v108[2];
    id v94 = v30;
    if (v101)
    {
      unint64_t v95 = (*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
      uint64_t v102 = (char *)v108 + v95;
      id v128 = v30;
      uint64_t v129 = 0;
      unint64_t v31 = 0;
      uint64_t v113 = (uint64_t *)(a3 + 40);
      long long v127 = xmmword_1DD04EF70;
      unint64_t v106 = MEMORY[0x1E4FBC860];
      uint64_t v112 = a3;
      unint64_t v111 = v23;
      uint64_t v110 = v26;
      while (1)
      {
        if (v31 >= v108[2]) {
          goto LABEL_69;
        }
        uint64_t v34 = *(void *)(v107 + 72);
        unint64_t v109 = v31;
        uint64_t v105 = v34;
        sub_1DCD36E7C((uint64_t)&v102[v34 * v31], (uint64_t)v26);
        if (v26[104] != 1) {
          break;
        }
        uint64_t v32 = (uint64_t)v26;
LABEL_6:
        unint64_t v33 = v109 + 1;
        sub_1DCD565B8(v32, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v31 = v33;
        if (v33 == v101) {
          goto LABEL_55;
        }
      }
      uint64_t v118 = v103 - v129;
      if (v103 != v129)
      {
        sub_1DCD36E7C((uint64_t)v26, (uint64_t)v23);
        swift_bridgeObjectRelease();
        *((void *)v23 + 7) = MEMORY[0x1E4FBC860];
        uint64_t v35 = *((void *)v26 + 7);
        uint64_t v117 = *(void *)(v35 + 16);
        if (!v117) {
          goto LABEL_43;
        }
        uint64_t v116 = v35 + 32;
        uint64_t v115 = v129 ^ 0x7FFFFFFFFFFFFFFFLL;
        swift_bridgeObjectRetain();
        unint64_t v36 = 0;
        uint64_t v114 = v35;
        while (v36 < *(void *)(v35 + 16))
        {
          if (v36 == v118)
          {
            swift_bridgeObjectRelease();
            uint64_t v129 = v103;
LABEL_43:
            sub_1DCD36E7C((uint64_t)v23, v104);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v106 = sub_1DCE9D7A0(0, *(void *)(v106 + 16) + 1, 1, v106);
            }
            a1 = *(void *)(v106 + 16);
            unint64_t v77 = *(void *)(v106 + 24);
            if (a1 >= v77 >> 1) {
              unint64_t v106 = sub_1DCE9D7A0(v77 > 1, a1 + 1, 1, v106);
            }
            unint64_t v78 = v106;
            *(void *)(v106 + 16) = a1 + 1;
            sub_1DCD36EE0(v104, v78 + v95 + a1 * v105);
            sub_1DCD565B8((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            uint64_t v32 = (uint64_t)v23;
            goto LABEL_6;
          }
          uint64_t v37 = (uint64_t *)(v116 + 80 * v36);
          uint64_t v38 = *v37;
          unint64_t v125 = v36;
          uint64_t v126 = v38;
          long long v39 = *(_OWORD *)(v37 + 1);
          long long v123 = *(_OWORD *)(v37 + 3);
          long long v124 = v39;
          uint64_t v40 = v37[5];
          uint64_t v121 = v37[6];
          uint64_t v122 = v40;
          uint64_t v41 = v37[8];
          uint64_t v120 = v37[7];
          int v42 = *((_DWORD *)v37 + 18);
          unint64_t v43 = *(char **)(a3 + 16);
          swift_bridgeObjectRetain();
          uint64_t v119 = v41;
          swift_bridgeObjectRetain();
          if (v43)
          {
            swift_bridgeObjectRetain();
            uint64_t v26 = 0;
            uint64_t v44 = v113;
            uint64_t v45 = (void *)MEMORY[0x1E4FBC868];
            while (1)
            {
              uint64_t v47 = *(v44 - 1);
              uint64_t v46 = *v44;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
              uint64_t v48 = swift_allocObject();
              *(_OWORD *)(v48 + 16) = v127;
              swift_bridgeObjectRetain();
              *(void *)(v48 + 32) = sub_1DD048808();
              *(void *)(v48 + 40) = sub_1DD048808();
              *(void *)(v48 + 48) = sub_1DD048808();
              uint64_t v130 = (void *)v48;
              sub_1DD0486D8();
              sub_1DCD56524();
              uint64_t v49 = (void *)sub_1DD0486A8();
              swift_bridgeObjectRelease();
              id v50 = objc_msgSend(v128, sel_objectForKeyedSubscript_, v49);

              objc_msgSend(v50, sel_floatValue);
              float v52 = v51;

              float v53 = expf(v52);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v130 = v45;
              unint64_t v56 = sub_1DCEAD1A4(v47, v46);
              uint64_t v57 = v45[2];
              BOOL v58 = (v55 & 1) == 0;
              uint64_t v59 = v57 + v58;
              if (__OFADD__(v57, v58))
              {
                __break(1u);
LABEL_53:
                __break(1u);
                goto LABEL_54;
              }
              char v60 = v55;
              if (v45[3] >= v59)
              {
                if (isUniquelyReferenced_nonNull_native)
                {
                  uint64_t v45 = v130;
                  if (v55) {
                    goto LABEL_16;
                  }
                }
                else
                {
                  sub_1DCE88D74();
                  uint64_t v45 = v130;
                  if (v60) {
                    goto LABEL_16;
                  }
                }
              }
              else
              {
                sub_1DCE7E984(v59, isUniquelyReferenced_nonNull_native);
                unint64_t v61 = sub_1DCEAD1A4(v47, v46);
                if ((v60 & 1) != (v62 & 1))
                {
                  sub_1DD049028();
                  __break(1u);
                  unint64_t result = swift_release();
                  __break(1u);
                  return result;
                }
                unint64_t v56 = v61;
                uint64_t v45 = v130;
                if (v60)
                {
LABEL_16:
                  *(float *)(v45[7] + 4 * v56) = v53;
                  goto LABEL_17;
                }
              }
              v45[(v56 >> 6) + 8] |= 1 << v56;
              float v63 = (uint64_t *)(v45[6] + 16 * v56);
              uint64_t *v63 = v47;
              v63[1] = v46;
              *(float *)(v45[7] + 4 * v56) = v53;
              uint64_t v64 = v45[2];
              BOOL v65 = __OFADD__(v64, 1);
              uint64_t v66 = v64 + 1;
              if (v65) {
                goto LABEL_53;
              }
              void v45[2] = v66;
              swift_bridgeObjectRetain();
LABEL_17:
              ++v26;
              v44 += 2;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v43 == v26)
              {
                a3 = v112;
                swift_bridgeObjectRelease();
                float v23 = v111;
                uint64_t v26 = v110;
                uint64_t v35 = v114;
                goto LABEL_31;
              }
            }
          }
          uint64_t v45 = (void *)MEMORY[0x1E4FBC868];
LABEL_31:
          unint64_t v67 = (void *)*((void *)v23 + 8);
          char v68 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v69 = v125;
          if ((v68 & 1) == 0) {
            unint64_t v67 = sub_1DCE9DC18(0, v67[2] + 1, 1, v67);
          }
          unint64_t v71 = v67[2];
          unint64_t v70 = v67[3];
          if (v71 >= v70 >> 1) {
            unint64_t v67 = sub_1DCE9DC18((void *)(v70 > 1), v71 + 1, 1, v67);
          }
          void v67[2] = v71 + 1;
          unint64_t v72 = &v67[2 * v71];
          v72[4] = v126;
          v72[5] = v45;
          *((void *)v23 + 8) = v67;
          a1 = *((void *)v23 + 7);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            a1 = (unint64_t)sub_1DCE9DE38(0, *(void *)(a1 + 16) + 1, 1, (void *)a1);
          }
          unint64_t v27 = *(void *)(a1 + 16);
          unint64_t v73 = *(void *)(a1 + 24);
          if (v27 >= v73 >> 1) {
            a1 = (unint64_t)sub_1DCE9DE38((void *)(v73 > 1), v27 + 1, 1, (void *)a1);
          }
          *(void *)(a1 + 16) = v27 + 1;
          unint64_t v74 = a1 + 80 * v27;
          *(void *)(v74 + 32) = v126;
          *(_OWORD *)(v74 + 40) = v124;
          *(_OWORD *)(v74 + 56) = v123;
          uint64_t v75 = v121;
          *(void *)(v74 + 72) = v122;
          *(void *)(v74 + 80) = v75;
          uint64_t v76 = v119;
          *(void *)(v74 + 88) = v120;
          *(void *)(v74 + 96) = v76;
          *(_DWORD *)(v74 + 104) = v42;
          *((void *)v23 + 7) = a1;
          if (v69 == v115) {
            goto LABEL_68;
          }
          unint64_t v36 = v69 + 1;
          ++v129;
          if (v36 == v117)
          {
            swift_bridgeObjectRelease();
            goto LABEL_43;
          }
        }
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        unint64_t v106 = sub_1DCE9D7A0(0, *(void *)(v106 + 16) + 1, 1, v106);
LABEL_64:
        unint64_t v91 = *(void *)(v106 + 16);
        unint64_t v90 = *(void *)(v106 + 24);
        if (v91 >= v90 >> 1) {
          unint64_t v106 = sub_1DCE9D7A0(v90 > 1, v91 + 1, 1, v106);
        }
        unint64_t v92 = v106;
        *(void *)(v106 + 16) = v91 + 1;
        sub_1DCD36EE0(v99, v92 + a1 + v91 * v27);

        sub_1DCD565B8(v98, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        return v92;
      }
LABEL_54:
      sub_1DCD565B8((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_55:
      swift_release();
    }
    else
    {
      id v83 = v30;
      swift_release();
      unint64_t v106 = MEMORY[0x1E4FBC860];
    }
    uint64_t v84 = v100[2];
    if (v84)
    {
      a1 = (*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
      uint64_t v85 = (uint64_t)v100 + a1;
      unint64_t v27 = *(void *)(v107 + 72);
      swift_bridgeObjectRetain();
      uint64_t v86 = (uint64_t)v97;
      while (1)
      {
        sub_1DCD36E7C(v85, v86);
        if (*(unsigned char *)(v86 + 104)) {
          break;
        }
        sub_1DCD565B8(v86, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        v85 += v27;
        if (!--v84)
        {

          swift_bridgeObjectRelease();
          return v106;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v87 = v96;
      sub_1DCD36EE0(v86, v96);
      uint64_t v88 = v87;
      uint64_t v89 = v98;
      sub_1DCD36EE0(v88, v98);
      sub_1DCD36E7C(v89, v99);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_64;
      }
      goto LABEL_70;
    }

    return v106;
  }
  else
  {
    swift_release();
    sub_1DCDB40EC((uint64_t)v10);
    uint64_t v79 = sub_1DD048048();
    os_log_type_t v80 = sub_1DD048858();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl(&dword_1DCCF9000, v79, v80, "failed to get model output", v81, 2u);
      MEMORY[0x1E01B07E0](v81, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return swift_bridgeObjectRetain();
  }
}

BOOL sub_1DCF132E4()
{
  if (*v0 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return v1 == 0;
}

uint64_t sub_1DCF13348()
{
  return sub_1DCF3DA6C(*v0);
}

uint64_t sub_1DCF13350()
{
  uint64_t result = 0x676F6C6F626D7973;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65756C6176;
      break;
    case 2:
      uint64_t result = 0x6E656469666E6F63;
      break;
    case 3:
      uint64_t result = 0x676E69646E756F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCF133EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCF1444C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCF13414(uint64_t a1)
{
  unint64_t v2 = sub_1DCF136C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCF13450(uint64_t a1)
{
  unint64_t v2 = sub_1DCF136C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DetectedBarcode.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB040B0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v15[1] = v1[2];
  v15[2] = v8;
  uint64_t v10 = v1[4];
  uint64_t v11 = v1[5];
  uint64_t v12 = v1[6];
  uint64_t v13 = v1[7];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCF136C0();
  sub_1DD049138();
  uint64_t v16 = v9;
  char v20 = 0;
  type metadata accessor for VNBarcodeSymbology(0);
  sub_1DCF15158(&qword_1EAB040C0);
  sub_1DD048F18();
  if (!v2)
  {
    LOBYTE(v16) = 1;
    sub_1DD048EB8();
    LOBYTE(v16) = 2;
    sub_1DD048EE8();
    uint64_t v16 = v10;
    uint64_t v17 = v11;
    uint64_t v18 = v12;
    uint64_t v19 = v13;
    char v20 = 3;
    sub_1DCEE6438();
    sub_1DD048F18();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1DCF136C0()
{
  unint64_t result = qword_1EAB040B8;
  if (!qword_1EAB040B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB040B8);
  }
  return result;
}

void DetectedBarcode.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB040C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCF136C0();
  sub_1DD049128();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for VNBarcodeSymbology(0);
    char v23 = 0;
    sub_1DCF15158(&qword_1EAB040D0);
    sub_1DD048E28();
    uint64_t v9 = (void *)v21;
    LOBYTE(v21) = 1;
    id v10 = v9;
    uint64_t v11 = sub_1DD048DC8();
    uint64_t v13 = v12;
    uint64_t v20 = v11;
    LOBYTE(v21) = 2;
    swift_bridgeObjectRetain();
    sub_1DD048DF8();
    int v15 = v14;
    char v23 = 3;
    sub_1DCEE64E0();
    sub_1DD048E28();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v16 = v21;
    long long v17 = v22;
    uint64_t v18 = v20;
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v18;
    *(void *)(a2 + 16) = v13;
    *(_DWORD *)(a2 + 24) = v15;
    *(_OWORD *)(a2 + 32) = v16;
    *(_OWORD *)(a2 + 48) = v17;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
}

void sub_1DCF139EC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1DCF13A04(void *a1)
{
  return DetectedBarcode.encode(to:)(a1);
}

uint64_t sub_1DCF13A1C()
{
  return sub_1DD048688();
}

uint64_t sub_1DCF13A98()
{
  return sub_1DD048678();
}

uint64_t destroy for DetectedBarcode(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DetectedBarcode(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DetectedBarcode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  long long v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for DetectedBarcode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for DetectedBarcode(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetectedBarcode(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectedBarcode()
{
  return &type metadata for DetectedBarcode;
}

uint64_t sub_1DCF13D1C@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v34 = *v4;
  uint64_t v35 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v33 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = sub_1DD0480A8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v32 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[0] = 0xD00000000000001DLL;
  v37[1] = 0x80000001DD068570;
  v37[2] = "VI: Barcode";
  v37[3] = 11;
  char v38 = 2;
  long long v16 = (int *)type metadata accessor for BarcodeDetectionRequestFactory.Input();
  uint64_t v17 = *(void *)((char *)a1 + v16[7]);
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  uint64_t v18 = sub_1DCEA469C((uint64_t)v37, v17);
  swift_release();
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a2;
  v19[3] = a3;
  uint64_t v20 = v34;
  v19[4] = v18;
  v19[5] = v20;
  id v21 = objc_allocWithZone(MEMORY[0x1E4F45768]);
  aBlock[4] = sub_1DCF146BC;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCFE5678;
  aBlock[3] = &block_descriptor_8;
  long long v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v23 = objc_msgSend(v21, sel_initWithCompletionHandler_, v22);
  _Block_release(v22);
  sub_1DCDDC65C((uint64_t)a1 + v16[5], (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1DCDDC6C4((uint64_t)v12);
  }
  else
  {
    uint64_t v24 = v32;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v32, v12, v13);
    uint64_t v25 = (uint64_t)v33;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v33, v24, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v25, 0, 1, v13);
    sub_1DD0489F8();
    sub_1DCDDC6C4(v25);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v24, v13);
  }
  if (*(void *)((char *)a1 + v16[6]))
  {
    type metadata accessor for VNBarcodeSymbology(0);
    uint64_t v26 = (void *)sub_1DD0486A8();
    objc_msgSend(v23, sel_setSymbologies_, v26);
  }
  objc_msgSend(v23, sel_setRegionOfInterest_, *a1, a1[1], a1[2], a1[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1DD050EE0;
  *(void *)(v27 + 32) = v23;
  aBlock[0] = v27;
  sub_1DD0486D8();
  char v29 = v35;
  uint64_t v28 = aBlock[0];
  v35[3] = &type metadata for BarcodeDetectionModelRequest;
  v29[4] = &off_1F383C180;
  uint64_t result = swift_release();
  *char v29 = v28;
  return result;
}

uint64_t sub_1DCF14160(void *a1, id a2, void (*a3)(void))
{
  if (a2)
  {
    id v5 = a2;
    ((void (*)(id, void, uint64_t))a3)(a2, 0, 257);
  }
  else
  {
    long long v6 = sub_1DCF146E0(a1);
    uint64_t v8 = v7;
    char v10 = v9;
    int v11 = (v9 >> 8) & 1;
    a3();
    sub_1DCD431CC(v6, v8, v10, v11);
  }
  return sub_1DCEA3DA4();
}

uint64_t type metadata accessor for BarcodeDetectionRequestFactory()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DetectedBarcode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCF1430CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetectedBarcode.CodingKeys()
{
  return &type metadata for DetectedBarcode.CodingKeys;
}

unint64_t sub_1DCF14348()
{
  unint64_t result = qword_1EAB040D8;
  if (!qword_1EAB040D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB040D8);
  }
  return result;
}

unint64_t sub_1DCF143A0()
{
  unint64_t result = qword_1EAB040E0;
  if (!qword_1EAB040E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB040E0);
  }
  return result;
}

unint64_t sub_1DCF143F8()
{
  unint64_t result = qword_1EAB040E8;
  if (!qword_1EAB040E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB040E8);
  }
  return result;
}

uint64_t sub_1DCF1444C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676F6C6F626D7973 && a2 == 0xE900000000000079;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E69646E756F62 && a2 == 0xEB00000000786F42)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t type metadata accessor for BarcodeDetectionRequestFactory.Input()
{
  uint64_t result = qword_1EAB040F0;
  if (!qword_1EAB040F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCF1467C()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1DCF146BC(void *a1, void *a2)
{
  return sub_1DCF14160(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

void *sub_1DCF146E0(void *a1)
{
  unint64_t v2 = 0xD00000000000001CLL;
  uint64_t v81 = sub_1DD048068();
  int v3 = *(char **)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  unint64_t v78 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v6 = MEMORY[0x1F4188790](v5);
  uint64_t v75 = (char *)&v67 - v7;
  id v8 = objc_msgSend(a1, sel_results, v6);
  if (v8)
  {
    unsigned int v9 = v8;
    sub_1DCDDC564();
    unint64_t v10 = sub_1DD0486B8();

    unint64_t v11 = sub_1DCF3DD98(v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
      unint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      if (v11 >> 62) {
        goto LABEL_69;
      }
      uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (v14)
      {
        unint64_t v15 = 0;
        unint64_t v80 = v11 & 0xC000000000000001;
        unint64_t v72 = v11 + 32;
        unint64_t v73 = v13;
        unint64_t v77 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
        unint64_t v70 = &v83;
        long long v16 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v76 = (void (**)(char *, uint64_t))(v3 + 8);
        unint64_t v69 = "coarseCategoryDistribution";
        unint64_t v68 = 0x80000001DD067880;
        *(void *)&long long v12 = 138412290;
        long long v71 = v12;
        uint64_t v79 = v14;
        unint64_t v74 = v11;
        while (1)
        {
          if (v80)
          {
            id v18 = (id)MEMORY[0x1E01AE890](v15, v11);
          }
          else
          {
            if (v15 >= *(void *)(v73 + 16)) {
              goto LABEL_68;
            }
            id v18 = *(id *)(v72 + 8 * v15);
          }
          uint64_t v19 = v18;
          if (__OFADD__(v15++, 1)) {
            break;
          }
          id v21 = objc_msgSend(v18, sel_payloadStringValue);
          if (v21)
          {
            long long v22 = v21;
            int v3 = (char *)sub_1DD048408();
            uint64_t v24 = v23;

            uint64_t v25 = v16[2];
            if (v25)
            {
              uint64_t v26 = v16 + 6;
              while (1)
              {
                BOOL v27 = (char *)*(v26 - 1) == v3 && *v26 == v24;
                if (v27 || (sub_1DD048FA8() & 1) != 0) {
                  break;
                }
                v26 += 8;
                if (!--v25) {
                  goto LABEL_23;
                }
              }
              swift_bridgeObjectRelease();
              if (qword_1EBE87190 != -1) {
                swift_once();
              }
              if (byte_1EBE87188 != 1) {
                goto LABEL_47;
              }
              if (sub_1DCDE82EC())
              {
                uint64_t v46 = (uint64_t *)&off_1EAB02A48;
                if (qword_1EAB01C28 != -1)
                {
                  swift_once();
                  uint64_t v46 = (uint64_t *)&off_1EAB02A48;
                }
              }
              else
              {
                uint64_t v46 = &qword_1EBE871E8;
                if (qword_1EBE871A0 != -1)
                {
                  swift_once();
                  uint64_t v46 = &qword_1EBE871E8;
                }
              }
              uint64_t v47 = *(void **)(*v46 + 32);
              swift_retain();
              uint64_t v48 = (void *)sub_1DD0483D8();
              LODWORD(v47) = objc_msgSend(v47, sel_BOOLForKey_, v48);
              swift_release();

              if (v47)
              {
                uint64_t v49 = qword_1EAB02B70;
                if (qword_1EAB01C80 != -1)
                {
                  swift_once();
                  uint64_t v49 = qword_1EAB02B70;
                }
              }
              else
              {
LABEL_47:
                uint64_t v49 = qword_1EBE871A8;
                if (qword_1EBE871C8 != -1)
                {
                  swift_once();
                  uint64_t v49 = qword_1EBE871A8;
                }
              }
              uint64_t v50 = v81;
              uint64_t v51 = __swift_project_value_buffer(v81, (uint64_t)v49);
              unint64_t v13 = (unint64_t)v75;
              (*v77)(v75, v51, v50);
              int v3 = v19;
              float v52 = sub_1DD048048();
              os_log_type_t v53 = sub_1DD048848();
              if (os_log_type_enabled(v52, v53))
              {
                uint64_t v54 = (uint8_t *)swift_slowAlloc();
                char v55 = (void *)swift_slowAlloc();
                *(_DWORD *)uint64_t v54 = v71;
                uint64_t v82 = v3;
                unint64_t v13 = v3;
                sub_1DD048A28();
                *char v55 = v3;

                _os_log_impl(&dword_1DCCF9000, v52, v53, "Skip duplicate observation %@", v54, 0xCu);
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
                swift_arrayDestroy();
                MEMORY[0x1E01B07E0](v55, -1, -1);
                MEMORY[0x1E01B07E0](v54, -1, -1);
              }
              else
              {

                float v52 = v3;
              }
              unint64_t v11 = v74;
              uint64_t v14 = v79;

              (*v76)(v75, v81);
              goto LABEL_8;
            }
LABEL_23:
            id v28 = objc_msgSend(v19, sel_symbology);
            objc_msgSend(v19, sel_confidence);
            int v30 = v29;
            objc_msgSend(v19, sel_boundingBox);
            uint64_t v32 = v31;
            uint64_t v34 = v33;
            uint64_t v36 = v35;
            uint64_t v38 = v37;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              long long v16 = sub_1DCE9F2E8(0, v16[2] + 1, 1, v16);
            }
            uint64_t v14 = v79;
            unint64_t v13 = v16[2];
            unint64_t v39 = v16[3];
            if (v13 >= v39 >> 1) {
              long long v16 = sub_1DCE9F2E8((void *)(v39 > 1), v13 + 1, 1, v16);
            }
            v16[2] = v13 + 1;
            uint64_t v40 = &v16[8 * v13];
            v40[4] = v28;
            v40[5] = v3;
            v40[6] = v24;
            *((_DWORD *)v40 + 14) = v30;
            v40[8] = v32;
            v40[9] = v34;
            v40[10] = v36;
            v40[11] = v38;

            unint64_t v11 = v74;
            if (v15 == v14)
            {
LABEL_66:
              swift_bridgeObjectRelease();
              return v16;
            }
          }
          else
          {
            if (qword_1EBE87190 != -1) {
              swift_once();
            }
            if (byte_1EBE87188 != 1)
            {
LABEL_61:
              char v60 = qword_1EBE871A8;
              if (qword_1EBE871C8 != -1)
              {
                swift_once();
                char v60 = qword_1EBE871A8;
              }
              goto LABEL_63;
            }
            id v41 = objc_msgSend(self, sel_mainBundle);
            id v42 = objc_msgSend(v41, sel_bundleIdentifier);

            if (v42)
            {
              uint64_t v43 = sub_1DD048408();
              uint64_t v45 = v44;

              if (v43 == 0xD00000000000002BLL && v45 == v68)
              {
                swift_bridgeObjectRelease();
LABEL_54:
                uint64_t v57 = (uint64_t *)&off_1EAB02A48;
                if (qword_1EAB01C28 != -1)
                {
                  swift_once();
                  uint64_t v57 = (uint64_t *)&off_1EAB02A48;
                }
                goto LABEL_58;
              }
              char v56 = sub_1DD048FA8();
              swift_bridgeObjectRelease();
              if (v56) {
                goto LABEL_54;
              }
            }
            uint64_t v57 = &qword_1EBE871E8;
            if (qword_1EBE871A0 != -1)
            {
              swift_once();
              uint64_t v57 = &qword_1EBE871E8;
            }
LABEL_58:
            BOOL v58 = *(void **)(*v57 + 32);
            swift_retain();
            uint64_t v59 = (void *)sub_1DD0483D8();
            LODWORD(v58) = objc_msgSend(v58, sel_BOOLForKey_, v59);
            swift_release();

            uint64_t v14 = v79;
            if (!v58) {
              goto LABEL_61;
            }
            char v60 = qword_1EAB02B70;
            if (qword_1EAB01C80 != -1)
            {
              swift_once();
              char v60 = qword_1EAB02B70;
            }
LABEL_63:
            uint64_t v61 = v81;
            uint64_t v62 = __swift_project_value_buffer(v81, (uint64_t)v60);
            unint64_t v13 = (unint64_t)v78;
            (*v77)(v78, v62, v61);
            int v3 = v19;
            uint64_t v17 = sub_1DD048048();
            os_log_type_t v63 = sub_1DD048848();
            if (os_log_type_enabled(v17, v63))
            {
              unint64_t v13 = swift_slowAlloc();
              uint64_t v64 = (void *)swift_slowAlloc();
              *(_DWORD *)unint64_t v13 = v71;
              *(void *)(v13 + 4) = v3;
              *uint64_t v64 = v3;
              _os_log_impl(&dword_1DCCF9000, v17, v63, "Skip observation without payload %@", (uint8_t *)v13, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
              swift_arrayDestroy();
              BOOL v65 = v64;
              uint64_t v14 = v79;
              MEMORY[0x1E01B07E0](v65, -1, -1);
              MEMORY[0x1E01B07E0](v13, -1, -1);
            }
            else
            {

              uint64_t v17 = v3;
            }

            (*v76)(v78, v81);
LABEL_8:
            if (v15 == v14) {
              goto LABEL_66;
            }
          }
        }
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_1DD048CC8();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return (void *)v2;
}

uint64_t sub_1DCF15158(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for VNBarcodeSymbology(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for BarcodeDetectionModelRequest()
{
  return &type metadata for BarcodeDetectionModelRequest;
}

ValueMetadata *type metadata accessor for BarcodeDetectionRequestFactory.Response()
{
  return &type metadata for BarcodeDetectionRequestFactory.Response;
}

uint64_t sub_1DCF151BC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v14 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    uint64_t v8 = a3[5];
    unsigned int v9 = (void *)(a1 + v8);
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DD0480A8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = a3[7];
    *(void *)(v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(void *)(v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DCF1534C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1DD0480A8();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

_OWORD *sub_1DCF15434(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  unsigned int v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DD0480A8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_1DCF15578(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD0480A8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1DCF15750(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DD0480A8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  return a1;
}

_OWORD *sub_1DCF15888(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DD0480A8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_1DCF15A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF15A4C);
}

uint64_t sub_1DCF15A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_1DCF15B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF15B34);
}

uint64_t sub_1DCF15B34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

void sub_1DCF15BF8()
{
  sub_1DCDDD194();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t VITextAnnotation.description.getter()
{
  uint64_t v1 = v0;
  sub_1DD048B98();
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  v13.receiver = v0;
  v13.super_class = (Class)VITextAnnotation;
  id v2 = objc_msgSendSuper2(&v13, sel_description);
  sub_1DD048408();

  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  id v3 = objc_msgSend(v1, sel_text);
  sub_1DD048408();

  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  objc_msgSend(v1, sel_normalizedBoundingBox);
  uint64_t v9 = v4;
  uint64_t v10 = v5;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  type metadata accessor for CGRect(0);
  sub_1DD048C88();
  sub_1DD048548();
  objc_msgSend(v1, sel_confidence, v9, v10, v11, v12);
  sub_1DD0487A8();
  sub_1DD048548();
  return v14;
}

uint64_t VITextBlockAnnotation.description.getter()
{
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_1DD048B98();
  v9.receiver = v0;
  v9.super_class = (Class)VITextBlockAnnotation;
  id v1 = objc_msgSendSuper2(&v9, sel_description);
  uint64_t v2 = sub_1DD048408();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();

  uint64_t v10 = v2;
  unint64_t v11 = v4;
  sub_1DD048548();
  id v5 = objc_msgSend(v0, sel_textAnnotations);
  unint64_t v6 = sub_1DCF15FC0();
  uint64_t v7 = sub_1DD0486B8();

  MEMORY[0x1E01AE380](v7, v6);
  sub_1DD048548();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  return v10;
}

unint64_t sub_1DCF15FC0()
{
  unint64_t result = qword_1EBE82C30;
  if (!qword_1EBE82C30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE82C30);
  }
  return result;
}

id sub_1DCF16018(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  id v5 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t VIQueryContext.description.getter()
{
  id v1 = v0;
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_1DD048B98();
  v10.receiver = v0;
  v10.super_class = (Class)VIQueryContext;
  id v2 = objc_msgSendSuper2(&v10, sel_description);
  sub_1DD048408();

  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  id v9 = objc_msgSend(v1, sel_queryID);
  sub_1DD048F78();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  id v3 = objc_msgSend(v1, sel_applicationIdentifier, v9);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1DD048408();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
  sub_1DD048478();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  objc_msgSend(v1, sel_uiScale, v5, v7);
  sub_1DD048798();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD048548();
  return v11;
}

uint64_t sub_1DCF16280@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_1DD048068();
  uint64_t v42 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v41 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  objc_super v10 = (char *)&v37 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v40 = (uint64_t)&v37 - v12;
  uint64_t v13 = sub_1DD048468();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v43 = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig(0);
  MEMORY[0x1F4188790](v43);
  unint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_msgSend(self, sel_defaultManager);
  uint64_t v17 = (void *)sub_1DD0483D8();
  id v18 = objc_msgSend(v16, sel_contentsAtPath_, v17);

  uint64_t v44 = v6;
  if (v18)
  {
    uint64_t v19 = sub_1DD0464E8();
    unint64_t v21 = v20;

    uint64_t v22 = sub_1DCF47ED8(v19, v21);
    uint64_t v37 = a1;
    uint64_t v29 = v22;
    unint64_t v31 = v30;
    sub_1DCD21954(v19, v21);

    sub_1DD048448();
    uint64_t v38 = v29;
    unint64_t v39 = v31;
    sub_1DD048428();
    sub_1DCF16AD8();
    memset(v45, 0, sizeof(v45));
    uint64_t v46 = 0;
    sub_1DD047E58();
    uint64_t v32 = v40;
    sub_1DCDB40EC(v40);
    uint64_t v33 = sub_1DD048048();
    uint64_t v34 = sub_1DD048848();
    if (os_log_type_enabled(v33, (os_log_type_t)v34))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_1DCCF9000, v33, (os_log_type_t)v34, "Loaded DomainModelConfig.", v36, 2u);
      MEMORY[0x1E01B07E0](v36, -1, -1);
    }
    sub_1DCD21954(v38, v39);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v32, v44);
    return sub_1DCF16B30((uint64_t)v15, (uint64_t)a3);
  }
  else
  {

    sub_1DCDB40EC((uint64_t)v10);
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1DD048048();
    os_log_type_t v24 = sub_1DD048858();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(void *)&v45[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1DCED7FA0(a1, a2, (uint64_t *)v45);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v23, v24, "Failed to load data at path %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v26, -1, -1);
      MEMORY[0x1E01B07E0](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v44);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v6);
    }
    *a3 = 0;
    a3[1] = 0xE000000000000000;
    uint64_t v27 = MEMORY[0x1E4FBC860];
    a3[2] = sub_1DCDB8490(MEMORY[0x1E4FBC860]);
    a3[3] = sub_1DCDB8490(v27);
    a3[4] = sub_1DCDB8490(v27);
    return sub_1DD047BE8();
  }
}

uint64_t sub_1DCF169E4@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X3>, unsigned char *a3@<X8>)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void *)(*(void *)a1 + 16);
  if (!v5) {
    goto LABEL_9;
  }
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  BOOL v8 = v4[4] == *a2 && v4[5] == v7;
  if (v8 || (uint64_t result = sub_1DD048FA8(), (result & 1) != 0))
  {
LABEL_7:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1DCD9CB54();
LABEL_10:
    *a3 = result;
    return result;
  }
  if (v5 == 1)
  {
LABEL_9:
    uint64_t result = 26;
    goto LABEL_10;
  }
  objc_super v10 = v4 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    uint64_t v12 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    BOOL v13 = *(v10 - 1) == v6 && *v10 == v7;
    if (v13 || (sub_1DD048FA8() & 1) != 0) {
      goto LABEL_7;
    }
    v10 += 2;
    ++v11;
    uint64_t result = 26;
    if (v12 == v5) {
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1DCF16AD8()
{
  unint64_t result = qword_1EBE854D0;
  if (!qword_1EBE854D0)
  {
    type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE854D0);
  }
  return result;
}

uint64_t sub_1DCF16B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_DomainModelMappingConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF16B94@<X0>(uint64_t *a1@<X8>, float a2@<S0>)
{
  uint64_t v4 = sub_1DD046818();
  uint64_t v68 = *(void *)(v4 - 8);
  uint64_t v69 = v4;
  MEMORY[0x1F4188790](v4);
  *(void *)&long long v66 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v67 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v79 = (uint64_t)&v66 - v9;
  uint64_t v10 = sub_1DD046868();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v72 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v66 - v14;
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v66 - v17;
  MEMORY[0x1F4188790](v19);
  unint64_t v21 = (char *)&v66 - v20;
  MEMORY[0x1F4188790](v22);
  os_log_type_t v24 = (char *)&v66 - v23;
  sub_1DD0468B8();
  uint64_t v25 = sub_1DD046838();
  uint64_t v77 = v26;
  uint64_t v78 = v25;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v11 + 8);
  v27(v24, v10);
  sub_1DD0468B8();
  uint64_t v28 = sub_1DD046848();
  uint64_t v75 = v29;
  uint64_t v76 = v28;
  v27(v21, v10);
  sub_1DCF171E8();
  sub_1DD046458();
  swift_bridgeObjectRelease();
  sub_1DD0468B8();
  uint64_t v30 = sub_1DD046828();
  uint64_t v73 = v31;
  uint64_t v74 = v30;
  v27(v18, v10);
  uint64_t v32 = v66;
  sub_1DD0468C8();
  uint64_t v33 = sub_1DD046808();
  uint64_t v70 = v34;
  uint64_t v71 = v33;
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v32, v69);
  uint64_t v35 = sub_1DD046478();
  uint64_t v36 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v67, 1, 1, v35);
  sub_1DD0468B8();
  uint64_t v37 = sub_1DD046848();
  uint64_t v68 = v38;
  uint64_t v69 = v37;
  v27(v15, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F38);
  unint64_t v39 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C20) - 8);
  unint64_t v40 = (*(unsigned __int8 *)(*(void *)v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v39 + 80);
  uint64_t v41 = swift_allocObject();
  long long v66 = xmmword_1DD04E910;
  *(_OWORD *)(v41 + 16) = xmmword_1DD04E910;
  uint64_t v42 = (uint64_t *)(v41 + v40 + v39[14]);
  sub_1DD0465C8();
  uint64_t v43 = v72;
  sub_1DD0468B8();
  uint64_t v44 = v43;
  uint64_t v45 = sub_1DD046848();
  uint64_t v47 = v46;
  v27(v44, v10);
  *uint64_t v42 = v45;
  v42[1] = v47;
  unint64_t v48 = sub_1DCDB8BB4(v41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F40);
  uint64_t v49 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C10) - 8);
  unint64_t v50 = (*(unsigned __int8 *)(*(void *)v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v49 + 80);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = v66;
  uint64_t v52 = v49[14];
  sub_1DD0465C8();
  *(void *)(v51 + v50 + v52) = MEMORY[0x1E4FBC870];
  unint64_t v53 = sub_1DCDB8DB0(v51);
  uint64_t v54 = v77;
  *a1 = v78;
  a1[1] = v54;
  uint64_t v55 = v75;
  a1[2] = v76;
  a1[3] = v55;
  char v56 = (int *)type metadata accessor for ObjectKnowledge();
  sub_1DCDBF910(v79, (uint64_t)a1 + v56[6]);
  *(_DWORD *)((char *)a1 + v56[7]) = 0;
  uint64_t v57 = (uint64_t *)((char *)a1 + v56[8]);
  uint64_t v58 = v73;
  *uint64_t v57 = v74;
  v57[1] = v58;
  uint64_t v59 = (uint64_t *)((char *)a1 + v56[9]);
  uint64_t v60 = v70;
  *uint64_t v59 = v71;
  v59[1] = v60;
  sub_1DCDBF910(v36, (uint64_t)a1 + v56[10]);
  *(uint64_t *)((char *)a1 + v56[11]) = MEMORY[0x1E4FBC860];
  uint64_t v61 = (_OWORD *)((char *)a1 + v56[12]);
  v61[2] = 0u;
  v61[3] = 0u;
  *uint64_t v61 = 0u;
  v61[1] = 0u;
  uint64_t v62 = (char *)a1 + v56[13];
  *(void *)uint64_t v62 = 0;
  v62[8] = 1;
  *(_OWORD *)((char *)a1 + v56[14]) = xmmword_1DD0535A0;
  os_log_type_t v63 = (char *)a1 + v56[15];
  *(void *)os_log_type_t v63 = 0;
  *((_WORD *)v63 + 4) = 0;
  uint64_t v64 = v68;
  *((void *)v63 + 2) = v69;
  *((void *)v63 + 3) = v64;
  *((void *)v63 + 4) = v48;
  *((void *)v63 + 5) = 0x3FF0000000000000;
  v63[48] = 0;
  *((void *)v63 + 7) = 0;
  *((void *)v63 + 8) = 0xE000000000000000;
  *((void *)v63 + 9) = 0;
  *((void *)v63 + 10) = 0xE000000000000000;
  *((void *)v63 + 12) = 0;
  *((void *)v63 + 13) = 0;
  *((void *)v63 + 11) = v53;
  *((_DWORD *)v63 + 28) = 0;
  *(float *)((char *)a1 + v56[16]) = a2;
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, int *))(*((void *)v56 - 1) + 56))(a1, 0, 1, v56);
}

uint64_t sub_1DCF171E8()
{
  uint64_t v59 = sub_1DD0467E8();
  uint64_t v62 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v61 = (char *)&v57 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v1);
  id v3 = (char *)&v57 - v2;
  unint64_t v60 = sub_1DD046868();
  uint64_t v58 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DD046818();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v57 - v11;
  sub_1DD0468C8();
  uint64_t v13 = sub_1DD0467F8();
  unint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v12, v6);
  swift_bridgeObjectRelease();
  uint64_t v17 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    uint64_t v17 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (v17)
  {
    sub_1DD0468C8();
    uint64_t v18 = sub_1DD0467F8();
    v16(v9, v6);
    return v18;
  }
  uint64_t v20 = v62;
  uint64_t v21 = v59;
  sub_1DD0468B8();
  uint64_t v22 = sub_1DD046858();
  (*(void (**)(char *, unint64_t))(v58 + 8))(v5, v60);
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v57 = v22;
  uint64_t v58 = 0;
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  uint64_t v24 = v20 + 16;
  uint64_t v25 = v26;
  unint64_t v27 = v22 + ((*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64));
  uint64_t v28 = (void (**)(char *, uint64_t))(v24 - 8);
  uint64_t v62 = *(void *)(v24 + 56);
  unint64_t v60 = 0xE000000000000000;
  v26(v3, (char *)v27, v21);
  while (1)
  {
    if (sub_1DD0467D8() == 3682640 && v34 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    char v35 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
      uint64_t v29 = v61;
      uint64_t v30 = v24;
      if ((v60 & 0x2000000000000000) != 0) {
        uint64_t v31 = HIBYTE(v60) & 0xF;
      }
      else {
        uint64_t v31 = v58 & 0xFFFFFFFFFFFFLL;
      }
      uint64_t v32 = v30;
      v25(v61, v3, v21);
      if (v31)
      {
        uint64_t v33 = *v28;
        (*v28)(v29, v21);
LABEL_13:
        uint64_t v24 = v32;
        goto LABEL_14;
      }
      if (sub_1DD0467D8() == 959787595 && v44 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        uint64_t v33 = *v28;
        (*v28)(v61, v21);
      }
      else
      {
        char v45 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        uint64_t v33 = *v28;
        (*v28)(v61, v21);
        if ((v45 & 1) == 0) {
          goto LABEL_13;
        }
      }
      uint64_t v24 = v32;
      uint64_t v46 = sub_1DD0467B8();
      unint64_t v48 = v47;
      swift_bridgeObjectRelease();
      uint64_t v49 = HIBYTE(v48) & 0xF;
      if ((v48 & 0x2000000000000000) == 0) {
        uint64_t v49 = v46 & 0xFFFFFFFFFFFFLL;
      }
      if (v49)
      {
        swift_bridgeObjectRelease();
        uint64_t v50 = sub_1DD0467B8();
      }
      else
      {
        uint64_t v52 = sub_1DD0467C8();
        unint64_t v54 = v53;
        swift_bridgeObjectRelease();
        uint64_t v55 = HIBYTE(v54) & 0xF;
        if ((v54 & 0x2000000000000000) == 0) {
          uint64_t v55 = v52 & 0xFFFFFFFFFFFFLL;
        }
        if (!v55) {
          goto LABEL_14;
        }
        swift_bridgeObjectRelease();
        uint64_t v50 = sub_1DD0467C8();
      }
      uint64_t v58 = v50;
      unint64_t v60 = v51;
LABEL_14:
      v33(v3, v21);
      goto LABEL_15;
    }
LABEL_21:
    uint64_t v36 = sub_1DD0467B8();
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v39 = HIBYTE(v38) & 0xF;
    if ((v38 & 0x2000000000000000) == 0) {
      uint64_t v39 = v36 & 0xFFFFFFFFFFFFLL;
    }
    if (v39)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = sub_1DD0467B8();
      goto LABEL_45;
    }
    uint64_t v40 = sub_1DD0467C8();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v43 = HIBYTE(v42) & 0xF;
    if ((v42 & 0x2000000000000000) == 0) {
      uint64_t v43 = v40 & 0xFFFFFFFFFFFFLL;
    }
    if (v43) {
      break;
    }
    (*v28)(v3, v21);
LABEL_15:
    v27 += v62;
    if (!--v23)
    {
      swift_bridgeObjectRelease();
      return v58;
    }
    v25(v3, (char *)v27, v21);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v56 = sub_1DD0467C8();
LABEL_45:
  uint64_t v18 = v56;
  (*v28)(v3, v21);
  return v18;
}

uint64_t sub_1DCF177B8()
{
  id v0 = objc_msgSend(self, sel_weakToStrongObjectsMapTable);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04108);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v0;
  off_1EAB04100 = (_UNKNOWN *)result;
  return result;
}

uint64_t sub_1DCF17820(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DCD74470(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1DCF19C6C(v5);
  *a1 = v2;
  return result;
}

double VisualUnderstanding.debugData(ontologyGraph:)@<D0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v133 = a2;
  uint64_t v148 = sub_1DD048068();
  uint64_t v4 = *(void *)(v148 - 8);
  MEMORY[0x1F4188790](v148);
  uint64_t v147 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v151 = (unint64_t)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v136 = (unint64_t)&v121 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v121 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17);
  uint64_t v135 = (uint64_t)&v121 - v18;
  uint64_t v146 = *a1;
  uint64_t v19 = *v2;
  long long v126 = *(_OWORD *)(v2 + 1);
  long long v125 = *(_OWORD *)(v2 + 3);
  long long v124 = *(_OWORD *)(v2 + 5);
  long long v123 = *(_OWORD *)(v2 + 7);
  long long v132 = *(_OWORD *)(v2 + 9);
  long long v131 = *(_OWORD *)(v2 + 11);
  long long v130 = *(_OWORD *)(v2 + 13);
  int v129 = *((unsigned __int8 *)v2 + 120);
  uint64_t v128 = v2[16];
  uint64_t v127 = v2[17];
  uint64_t v134 = v2[22];
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v141 = v20;
  if (v20)
  {
    uint64_t v21 = v19 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v22 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1DCD36E7C(v21, (uint64_t)v13);
      if (v13[104] == 1) {
        break;
      }
      sub_1DCD96118((uint64_t)v13);
      v21 += v22;
      if (!--v20) {
        goto LABEL_7;
      }
    }
    sub_1DCD36EE0((uint64_t)v13, v135);
    uint64_t v23 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_7:
    uint64_t v23 = 1;
  }
  uint64_t v24 = v135;
  (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v7 + 56))(v135, v23, 1, v6);
  swift_bridgeObjectRelease();
  sub_1DCF18964(v24, (uint64_t)v16);
  int v25 = (*(uint64_t (**)(void *, uint64_t, unint64_t))(v7 + 48))(v16, 1, v6);
  uint64_t v140 = v19;
  uint64_t v122 = v4;
  uint64_t v137 = v7;
  if (v25 == 1)
  {
    sub_1DCD36FAC((uint64_t)v16);
  }
  else
  {
    uint64_t v26 = v16[10];
    unint64_t v6 = v16[11];
    uint64_t v27 = v16[12];
    sub_1DCD55D64(v26, v6);
    sub_1DCD96118((uint64_t)v16);
    if (v6)
    {
      uint64_t v159 = v26;
      uint64_t v28 = *(void *)(v27 + 16);
      if (v28)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v29 = (_DWORD *)(v27 + 48);
        uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v31 = *((void *)v29 - 2);
          uint64_t v30 = *((void *)v29 - 1);
          int v32 = *v29;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v16 = sub_1DCEA08FC(0, v16[2] + 1, 1, v16);
          }
          unint64_t v34 = v16[2];
          unint64_t v33 = v16[3];
          if (v34 >= v33 >> 1) {
            uint64_t v16 = sub_1DCEA08FC((void *)(v33 > 1), v34 + 1, 1, v16);
          }
          v29 += 6;
          v16[2] = v34 + 1;
          char v35 = &v16[3 * v34];
          v35[4] = v31;
          v35[5] = v30;
          *((_DWORD *)v35 + 12) = v32;
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
      }
      if (qword_1EBE84A80 == -1) {
        goto LABEL_23;
      }
      goto LABEL_104;
    }
  }
  uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
  while (v141)
  {
    uint64_t v142 = v19 + ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80));
    swift_bridgeObjectRetain();
    unint64_t v42 = 0;
    while (1)
    {
      if (v42 >= *(void *)(v140 + 16)) {
        goto LABEL_102;
      }
      uint64_t v138 = *(void *)(v137 + 72);
      unint64_t v139 = v42;
      unint64_t v6 = v136;
      sub_1DCD36E7C(v142 + v138 * v42, v136);
      unint64_t v43 = *(void *)(v6 + 112);
      swift_bridgeObjectRetain();
      sub_1DCD96118(v6);
      uint64_t v145 = *(const char **)(v43 + 16);
      if (v145) {
        break;
      }
LABEL_28:
      swift_bridgeObjectRelease();
      unint64_t v42 = v139 + 1;
      if (v139 + 1 == v141)
      {
        uint64_t v80 = v140;
        swift_bridgeObjectRelease();
        uint64_t v150 = (void (**)(char *, uint64_t, uint64_t))(v122 + 16);
        uint64_t v149 = (void (**)(char *, uint64_t))(v122 + 8);
        swift_bridgeObjectRetain();
        unint64_t v81 = 0;
        uint64_t v157 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v145 = "coarseCategoryDistribution";
        unint64_t v144 = 0x80000001DD067880;
        uint64_t v82 = v141;
        uint64_t v158 = v36;
        while (1)
        {
          if (v81 >= *(void *)(v80 + 16)) {
            goto LABEL_103;
          }
          unint64_t v6 = v151;
          sub_1DCD36E7C(v142 + v81 * v138, v151);
          uint64_t v153 = *(void **)(*(void *)(v6 + 56) + 16);
          if (!v153) {
            goto LABEL_68;
          }
          unint64_t v143 = v81;
          uint64_t v83 = swift_bridgeObjectRetain();
          uint64_t v84 = 0;
          uint64_t v85 = 0;
          unint64_t v6 = 40;
          uint64_t v86 = v157;
          unint64_t v152 = (void *)v83;
          do
          {
            uint64_t v87 = v86;
            uint64_t v88 = *(void *)(v83 + v84 + 32);
            long long v155 = *(_OWORD *)(v83 + v84 + 40);
            long long v154 = *(_OWORD *)(v83 + v84 + 56);
            unint64_t v90 = *(void **)(v83 + v84 + 72);
            uint64_t v89 = *(void *)(v83 + v84 + 80);
            uint64_t v92 = *(void *)(v83 + v84 + 88);
            uint64_t v91 = *(void *)(v83 + v84 + 96);
            int v93 = *(_DWORD *)(v83 + v84 + 104);
            uint64_t v94 = *(void *)(v151 + 64);
            unint64_t v95 = *(void *)(v94 + 16);
            uint64_t v159 = v91;
            uint64_t v156 = v88;
            if ((unint64_t)v85 < v95)
            {
              uint64_t v96 = *(void *)(v94 + v6);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_94;
            }
            uint64_t v97 = qword_1EBE87190;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v97 != -1) {
              swift_once();
            }
            if (byte_1EBE87188 != 1)
            {
LABEL_89:
              uint64_t v107 = qword_1EBE871A8;
              if (qword_1EBE871C8 != -1)
              {
                swift_once();
                uint64_t v107 = qword_1EBE871A8;
              }
              goto LABEL_91;
            }
            id v98 = objc_msgSend(self, sel_mainBundle);
            id v99 = objc_msgSend(v98, sel_bundleIdentifier);

            if (v99)
            {
              uint64_t v100 = sub_1DD048408();
              uint64_t v102 = v101;

              if (v100 == 0xD00000000000002BLL && v102 == v144)
              {
                swift_bridgeObjectRelease();
LABEL_82:
                uint64_t v104 = (uint64_t *)&off_1EAB02A48;
                if (qword_1EAB01C28 != -1)
                {
                  swift_once();
                  uint64_t v104 = (uint64_t *)&off_1EAB02A48;
                }
                goto LABEL_86;
              }
              char v103 = sub_1DD048FA8();
              swift_bridgeObjectRelease();
              if (v103) {
                goto LABEL_82;
              }
            }
            uint64_t v104 = &qword_1EBE871E8;
            if (qword_1EBE871A0 != -1)
            {
              swift_once();
              uint64_t v104 = &qword_1EBE871E8;
            }
LABEL_86:
            uint64_t v105 = *(void **)(*v104 + 32);
            swift_retain();
            unint64_t v106 = (void *)sub_1DD0483D8();
            LODWORD(v105) = objc_msgSend(v105, sel_BOOLForKey_, v106);
            swift_release();

            if (!v105) {
              goto LABEL_89;
            }
            uint64_t v107 = qword_1EAB02B70;
            if (qword_1EAB01C80 != -1)
            {
              swift_once();
              uint64_t v107 = qword_1EAB02B70;
            }
LABEL_91:
            uint64_t v108 = v148;
            uint64_t v109 = __swift_project_value_buffer(v148, (uint64_t)v107);
            (*v150)(v147, v109, v108);
            uint64_t v110 = sub_1DD048048();
            os_log_type_t v111 = sub_1DD048858();
            if (os_log_type_enabled(v110, v111))
            {
              uint64_t v112 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v112 = 0;
              _os_log_impl(&dword_1DCCF9000, v110, v111, "Index exceeds the range of imageRegion.domainPredictionNetResults.count", v112, 2u);
              MEMORY[0x1E01B07E0](v112, -1, -1);
            }

            (*v149)(v147, v148);
            uint64_t v96 = MEMORY[0x1E4FBC868];
            uint64_t v91 = v159;
LABEL_94:
            int v113 = *(_DWORD *)(v151 + 76);
            *(void *)&long long v160 = v90;
            *((void *)&v160 + 1) = v89;
            *(void *)&long long v161 = v92;
            *((void *)&v161 + 1) = v91;
            uint64_t v164 = v146;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1DCE6F860((uint64_t *)&v160, &v164, &v165);
            char v114 = v165;
            uint64_t v115 = v87;
            uint64_t v16 = v90;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v115 = sub_1DCEA06A8(0, v115[2] + 1, 1, v115);
            }
            unint64_t v117 = v115[2];
            unint64_t v116 = v115[3];
            uint64_t v157 = v115;
            if (v117 >= v116 >> 1) {
              uint64_t v157 = sub_1DCEA06A8((void *)(v116 > 1), v117 + 1, 1, v157);
            }
            uint64_t v85 = (void *)((char *)v85 + 1);
            uint64_t v86 = v157;
            v157[2] = v117 + 1;
            uint64_t v118 = &v86[12 * v117];
            long long v119 = v154;
            *((_OWORD *)v118 + 2) = v155;
            *((_OWORD *)v118 + 3) = v119;
            v118[8] = v16;
            v118[9] = v89;
            uint64_t v36 = v158;
            uint64_t v120 = v159;
            v118[10] = v92;
            v118[11] = v120;
            *((_DWORD *)v118 + 24) = v93;
            *((_DWORD *)v118 + 25) = v113;
            v118[13] = v156;
            *((unsigned char *)v118 + 112) = v114;
            v118[15] = v96;
            v6 += 16;
            v84 += 80;
            uint64_t v83 = (uint64_t)v152;
          }
          while (v153 != v85);
          swift_bridgeObjectRelease();
          uint64_t v80 = v140;
          uint64_t v82 = v141;
          unint64_t v81 = v143;
LABEL_68:
          ++v81;
          sub_1DCD96118(v151);
          if (v81 == v82)
          {
            swift_bridgeObjectRelease();
            uint64_t v62 = v157;
            goto LABEL_54;
          }
        }
      }
    }
    uint64_t v44 = 0;
    unint64_t v144 = v43 + 32;
    unint64_t v143 = v43;
    while ((unint64_t)v44 < *(void *)(v43 + 16))
    {
      unint64_t v45 = v144 + 48 * (void)v44;
      uint64_t v16 = *(void **)(v45 + 40);
      uint64_t v156 = v16[2];
      if (!v156) {
        goto LABEL_32;
      }
      uint64_t v150 = v44;
      long long v155 = *(_OWORD *)v45;
      long long v154 = *(_OWORD *)(v45 + 16);
      uint64_t v153 = v16 + 4;
      uint64_t v149 = *(void (***)(char *, uint64_t))(v45 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      unint64_t v46 = 0;
      unint64_t v152 = v16;
      do
      {
        if (v46 >= v16[2])
        {
          __break(1u);
          goto LABEL_53;
        }
        unint64_t v47 = &v153[3 * v46];
        unint64_t v48 = (void *)*v47;
        uint64_t v49 = v47[2];
        uint64_t v50 = *(void *)(v49 + 16);
        uint64_t v159 = v47[1];
        if (v50)
        {
          uint64_t v157 = v48;
          uint64_t v158 = v36;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          unint64_t v51 = (_DWORD *)(v49 + 48);
          uint64_t v52 = (void *)MEMORY[0x1E4FBC860];
          do
          {
            uint64_t v54 = *((void *)v51 - 2);
            uint64_t v53 = *((void *)v51 - 1);
            int v55 = *v51;
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v52 = sub_1DCEA08FC(0, v52[2] + 1, 1, v52);
            }
            unint64_t v57 = v52[2];
            unint64_t v56 = v52[3];
            if (v57 >= v56 >> 1) {
              uint64_t v52 = sub_1DCEA08FC((void *)(v56 > 1), v57 + 1, 1, v52);
            }
            v51 += 6;
            v52[2] = v57 + 1;
            uint64_t v58 = &v52[3 * v57];
            v58[4] = v54;
            v58[5] = v53;
            *((_DWORD *)v58 + 12) = v55;
            --v50;
          }
          while (v50);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          unint64_t v48 = v157;
          uint64_t v36 = v158;
          uint64_t v16 = v152;
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t v52 = (void *)MEMORY[0x1E4FBC860];
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v36 = sub_1DCEA07D0(0, v36[2] + 1, 1, v36);
        }
        unint64_t v6 = v36[2];
        unint64_t v59 = v36[3];
        if (v6 >= v59 >> 1) {
          uint64_t v36 = sub_1DCEA07D0((void *)(v59 > 1), v6 + 1, 1, v36);
        }
        ++v46;
        v36[2] = v6 + 1;
        unint64_t v60 = &v36[7 * v6];
        uint64_t v61 = v159;
        v60[4] = v48;
        v60[5] = v61;
        v60[6] = v52;
        *(_OWORD *)(v60 + 7) = v155;
        *(_OWORD *)(v60 + 9) = v154;
      }
      while (v46 != v156);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      unint64_t v43 = v143;
      uint64_t v44 = v150;
LABEL_32:
      uint64_t v44 = (void (**)(char *, uint64_t, uint64_t))((char *)v44 + 1);
      if (v44 == (void (**)(char *, uint64_t, uint64_t))v145) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    swift_once();
LABEL_23:
    long long v37 = xmmword_1EBE84A60;
    long long v38 = xmmword_1EBE84A70;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_1DCEA07D0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v40 = v36[2];
    unint64_t v39 = v36[3];
    uint64_t v19 = v140;
    if (v40 >= v39 >> 1) {
      uint64_t v36 = sub_1DCEA07D0((void *)(v39 > 1), v40 + 1, 1, v36);
    }
    v36[2] = v40 + 1;
    unint64_t v41 = &v36[7 * v40];
    uint64_t v41[4] = v159;
    v41[5] = v6;
    v41[6] = v16;
    *(_OWORD *)(v41 + 7) = v37;
    *(_OWORD *)(v41 + 9) = v38;
  }
LABEL_53:
  uint64_t v62 = (void *)MEMORY[0x1E4FBC860];
LABEL_54:
  *(void *)&long long v160 = v62;
  swift_bridgeObjectRetain_n();
  sub_1DCF17820((uint64_t *)&v160);
  swift_bridgeObjectRelease_n();
  uint64_t v63 = v160;
  uint64_t v64 = *(void *)(v134 + 16);
  if (v64)
  {
    uint64_t v65 = v134;
    swift_bridgeObjectRetain_n();
    long long v66 = (double *)(v65 + 56);
    uint64_t v67 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v69 = *((void *)v66 - 3);
      uint64_t v68 = *((void *)v66 - 2);
      double v70 = *(v66 - 1);
      double v71 = *v66;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v67 = sub_1DCEA0598(0, v67[2] + 1, 1, v67);
      }
      unint64_t v73 = v67[2];
      unint64_t v72 = v67[3];
      if (v73 >= v72 >> 1) {
        uint64_t v67 = sub_1DCEA0598((void *)(v72 > 1), v73 + 1, 1, v67);
      }
      v66 += 4;
      float v74 = v70;
      void v67[2] = v73 + 1;
      uint64_t v75 = (float *)&v67[4 * v73];
      *((void *)v75 + 4) = v69;
      *((void *)v75 + 5) = v68;
      v75[12] = v74;
      *((double *)v75 + 7) = v71;
      --v64;
    }
    while (v64);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v67 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v76 = v127;
  if ((void)v126 == 1)
  {
    swift_bridgeObjectRetain();
    sub_1DCD36FAC(v135);
    id v77 = 0;
  }
  else
  {
    long long v160 = v126;
    long long v161 = v125;
    long long v162 = v124;
    long long v163 = v123;
    swift_bridgeObjectRetain();
    id v77 = sub_1DCF189CC();
    sub_1DCD36FAC(v135);
  }
  uint64_t v78 = v133;
  *uint64_t v133 = v36;
  v78[1] = v63;
  v78[2] = v128;
  _OWORD v78[3] = v76;
  v78[4] = v77;
  *(_OWORD *)(v78 + 5) = v132;
  *(_OWORD *)(v78 + 7) = v131;
  double result = *(double *)&v130;
  *(_OWORD *)(v78 + 9) = v130;
  *((unsigned char *)v78 + 88) = v129;
  v78[12] = v67;
  return result;
}

uint64_t sub_1DCF18964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1DCF189CC()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v59 = v0[3];
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v63 = MEMORY[0x1E4FBC860];
  uint64_t v64 = MEMORY[0x1E4FBC860];
  uint64_t v61 = MEMORY[0x1E4FBC860];
  uint64_t v62 = MEMORY[0x1E4FBC860];
  if (v0[7]) {
    id v60 = sub_1DCF19120();
  }
  else {
    id v60 = 0;
  }
  if (v2) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v4;
  }
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)(v5 + 80);
    do
    {
      int v8 = *((_DWORD *)v7 - 8);
      double v9 = *((double *)v7 - 3);
      double v10 = *((double *)v7 - 2);
      double v11 = *((double *)v7 - 1);
      double v12 = *(double *)v7;
      id v13 = objc_allocWithZone((Class)VIRegionalAnnotation);
      swift_bridgeObjectRetain();
      uint64_t v14 = (void *)sub_1DD0483D8();
      LODWORD(v15) = v8;
      objc_msgSend(v13, sel_initWithLabel_normalizedBoundingBox_confidence_, v14, v9, v10, v11, v12, v15);
      swift_bridgeObjectRelease();

      MEMORY[0x1E01AE350]();
      if (*(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1DD0486E8();
      }
      sub_1DD048708();
      sub_1DD0486D8();
      v7 += 7;
      --v6;
    }
    while (v6);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v1) {
    uint64_t v17 = v1;
  }
  else {
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = (void *)(v17 + 80);
    do
    {
      int v20 = *((_DWORD *)v19 - 8);
      double v21 = *((double *)v19 - 3);
      double v22 = *((double *)v19 - 2);
      double v23 = *((double *)v19 - 1);
      double v24 = *(double *)v19;
      id v25 = objc_allocWithZone((Class)VIRegionalAnnotation);
      swift_bridgeObjectRetain();
      uint64_t v26 = (void *)sub_1DD0483D8();
      LODWORD(v27) = v20;
      objc_msgSend(v25, sel_initWithLabel_normalizedBoundingBox_confidence_, v26, v21, v22, v23, v24, v27);
      swift_bridgeObjectRelease();

      MEMORY[0x1E01AE350]();
      if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1DD0486E8();
      }
      sub_1DD048708();
      sub_1DD0486D8();
      v19 += 7;
      --v18;
    }
    while (v18);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  if (v3) {
    uint64_t v28 = v3;
  }
  else {
    uint64_t v28 = v16;
  }
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = (void *)(v28 + 80);
    do
    {
      int v31 = *((_DWORD *)v30 - 8);
      double v32 = *((double *)v30 - 3);
      double v33 = *((double *)v30 - 2);
      double v34 = *((double *)v30 - 1);
      double v35 = *(double *)v30;
      id v36 = objc_allocWithZone((Class)VIRegionalAnnotation);
      swift_bridgeObjectRetain();
      long long v37 = (void *)sub_1DD0483D8();
      LODWORD(v38) = v31;
      objc_msgSend(v36, sel_initWithLabel_normalizedBoundingBox_confidence_, v37, v32, v33, v34, v35, v38);
      swift_bridgeObjectRelease();

      MEMORY[0x1E01AE350]();
      if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1DD0486E8();
      }
      sub_1DD048708();
      sub_1DD0486D8();
      v30 += 7;
      --v29;
    }
    while (v29);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  if (v59) {
    uint64_t v39 = v59;
  }
  else {
    uint64_t v39 = v16;
  }
  uint64_t v40 = *(void *)(v39 + 16);
  if (v40)
  {
    swift_bridgeObjectRetain();
    unint64_t v41 = (void *)(v39 + 80);
    do
    {
      int v42 = *((_DWORD *)v41 - 8);
      double v43 = *((double *)v41 - 3);
      double v44 = *((double *)v41 - 2);
      double v45 = *((double *)v41 - 1);
      double v46 = *(double *)v41;
      id v47 = objc_allocWithZone((Class)VITextAnnotation);
      swift_bridgeObjectRetain();
      unint64_t v48 = (void *)sub_1DD0483D8();
      LODWORD(v49) = v42;
      objc_msgSend(v47, sel_initWithText_normalizedBoundingBox_confidence_, v48, v43, v44, v45, v46, v49);
      swift_bridgeObjectRelease();

      MEMORY[0x1E01AE350]();
      if (*(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1DD0486E8();
      }
      sub_1DD048708();
      sub_1DD0486D8();
      v41 += 7;
      --v40;
    }
    while (v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v50 = self;
  sub_1DCD95648(0, (unint64_t *)&qword_1EBE82C30);
  unint64_t v51 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  id v52 = objc_msgSend(v50, sel_textBlockWithAnnotations_, v51);

  id v53 = objc_allocWithZone((Class)VIAnnotation);
  sub_1DCD95648(0, &qword_1EBE85068);
  uint64_t v54 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  int v55 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  unint64_t v56 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  id v57 = objc_msgSend(v53, sel_initWithReducePersonOverTriggerAnnotation_faceAnnotations_humanAnnotations_nsfwAnnotations_textBlockAnnotation_scenenetAnnotation_barcodeAnnotation_, v60, v54, v55, v56, v52, 0, 0);

  return v57;
}

uint64_t VisualUnderstanding.DebugData.ClassificationItem.label.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

float VisualUnderstanding.DebugData.ClassificationItem.score.getter()
{
  return *(float *)(v0 + 16);
}

uint64_t VisualUnderstanding.DebugData.ClassificationInfo.modelURN.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VisualUnderstanding.DebugData.ClassificationInfo.classes.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 VisualUnderstanding.DebugData.ClassificationInfo.boundingBox.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 24);
  long long v3 = *(_OWORD *)(v1 + 40);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 VisualUnderstanding.DebugData.DetectorResult.boundingBox.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

uint64_t VisualUnderstanding.DebugData.DetectorResult.ontology.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1DCD32D4C(v2, v3);
}

float VisualUnderstanding.DebugData.DetectorResult.detectorScore.getter()
{
  return *(float *)(v0 + 64);
}

float VisualUnderstanding.DebugData.DetectorResult.boxScore.getter()
{
  return *(float *)(v0 + 68);
}

uint64_t VisualUnderstanding.DebugData.DetectorResult.position.getter()
{
  return *(void *)(v0 + 72);
}

void VisualUnderstanding.DebugData.DetectorResult.domain.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 80);
}

uint64_t VisualUnderstanding.DebugData.DetectorResult.domainPredictionNetResult.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VisualUnderstanding.DebugData.DurationMeasurement.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

float VisualUnderstanding.DebugData.DurationMeasurement.durationInMilliseconds.getter()
{
  return *(float *)(v0 + 16);
}

uint64_t VisualUnderstanding.DebugData.DurationMeasurement.startTimeStamp.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t VisualUnderstanding.DebugData.classificationInfos.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VisualUnderstanding.DebugData.detectorResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VisualUnderstanding.DebugData.curlCommand.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void *VisualUnderstanding.DebugData.annotation.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

__n128 VisualUnderstanding.DebugData.refinedRegion.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 40);
  long long v3 = *(_OWORD *)(v1 + 56);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t VisualUnderstanding.DebugData.imageSize.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t VisualUnderstanding.DebugData.durationMetrics.getter()
{
  return swift_bridgeObjectRetain();
}

id sub_1DCF19120()
{
  uint64_t v1 = *v0;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = v1 + 40;
    do
    {
      int v4 = *(_DWORD *)(v3 + 8);
      uint64_t v5 = *(unsigned int *)(v3 + 12);
      double v6 = *(double *)(v3 + 16);
      double v7 = *(double *)(v3 + 24);
      double v8 = *(double *)(v3 + 32);
      double v9 = *(double *)(v3 + 40);
      id v10 = objc_allocWithZone((Class)VIReducePersonOverTriggerRegionalAnnotation);
      swift_bridgeObjectRetain();
      double v11 = (void *)sub_1DD0483D8();
      swift_bridgeObjectRelease();
      LODWORD(v12) = v4;
      objc_msgSend(v10, sel_initWithLabel_boundingBox_confidence_faceCount_, v11, v5, v6, v7, v8, v9, v12);

      MEMORY[0x1E01AE350]();
      if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1DD0486E8();
      }
      sub_1DD048708();
      sub_1DD0486D8();
      v3 += 56;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  id v13 = objc_allocWithZone((Class)VIReducePersonOverTriggerAnnotation);
  sub_1DCD95648(0, &qword_1EBE82CC0);
  uint64_t v14 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithRegionsItems_, v14);

  return v15;
}

uint64_t _s9DebugDataVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s9DebugDataVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s9DebugDataVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  id v6 = v5;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9DebugDataVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9DebugDataVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9DebugDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.DebugData()
{
  return &type metadata for VisualUnderstanding.DebugData;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.DebugData.ClassificationItem()
{
  return &type metadata for VisualUnderstanding.DebugData.ClassificationItem;
}

uint64_t _s9DebugDataV18ClassificationInfoVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s9DebugDataV18ClassificationInfoVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

uint64_t _s9DebugDataV18ClassificationInfoVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t _s9DebugDataV18ClassificationInfoVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9DebugDataV18ClassificationInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.DebugData.ClassificationInfo()
{
  return &type metadata for VisualUnderstanding.DebugData.ClassificationInfo;
}

uint64_t _s9DebugDataV14DetectorResultVwxx(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s9DebugDataV14DetectorResultVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  if (v5)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v5;
    uint64_t v6 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s9DebugDataV14DetectorResultVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1DCD86FB0(a1 + 32);
      long long v7 = v5[1];
      *long long v4 = *v5;
      v4[1] = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 48);
    *long long v4 = *v5;
    *(_OWORD *)(a1 + 48) = v8;
  }
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t _s9DebugDataV14DetectorResultVwta(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = (_OWORD *)(a1 + 32);
  uint64_t v6 = (_OWORD *)(a2 + 32);
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(a2 + 40);
  if (!v7)
  {
    sub_1DCD86FB0((uint64_t)v5);
LABEL_5:
    long long v9 = v6[1];
    *long long v5 = *v6;
    v5[1] = v9;
    goto LABEL_6;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9DebugDataV14DetectorResultVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9DebugDataV14DetectorResultVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 88) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.DebugData.DetectorResult()
{
  return &type metadata for VisualUnderstanding.DebugData.DetectorResult;
}

uint64_t _s9DebugDataV19DurationMeasurementVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s9DebugDataV19DurationMeasurementVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t _s9DebugDataV19DurationMeasurementVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for VisualUnderstanding.DebugData.DurationMeasurement()
{
  return &type metadata for VisualUnderstanding.DebugData.DurationMeasurement;
}

uint64_t sub_1DCF19C6C(void *a1)
{
  unint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DD048F68();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_139;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v92 = *v2;
      uint64_t v93 = *v2 + 184;
      uint64_t v94 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        float v96 = *(float *)(v92 + 96 * i + 64);
        uint64_t v97 = v94;
        id v98 = (float *)v93;
        do
        {
          if (*(v98 - 30) >= v96) {
            break;
          }
          if (!v92) {
            goto LABEL_143;
          }
          id v99 = v98 - 22;
          int v100 = *((_DWORD *)v98 - 5);
          uint64_t v101 = *((void *)v98 - 2);
          char v102 = *((unsigned char *)v98 - 8);
          uint64_t result = *(void *)v98;
          long long v103 = *(_OWORD *)(v98 - 14);
          long long v104 = *(_OWORD *)(v98 - 10);
          long long v105 = *(_OWORD *)(v98 - 22);
          long long v106 = *(_OWORD *)(v98 - 18);
          long long v107 = *(_OWORD *)(v98 - 34);
          *((_OWORD *)v99 + 2) = *(_OWORD *)(v98 - 38);
          *((_OWORD *)v99 + 3) = v107;
          long long v108 = *(_OWORD *)(v98 - 26);
          *((_OWORD *)v99 + 4) = *(_OWORD *)(v98 - 30);
          *((_OWORD *)v99 + 5) = v108;
          long long v109 = *(_OWORD *)(v98 - 42);
          *(_OWORD *)id v99 = *(_OWORD *)(v98 - 46);
          *((_OWORD *)v99 + 1) = v109;
          *((void *)v98 - 12) = result;
          v98 -= 24;
          *(_OWORD *)(v98 - 22) = v105;
          *(_OWORD *)(v98 - 18) = v106;
          *(_OWORD *)(v98 - 14) = v103;
          *(_OWORD *)(v98 - 10) = v104;
          *(v98 - 6) = v96;
          *((_DWORD *)v98 - 5) = v100;
          *((void *)v98 - 2) = v101;
          *((unsigned char *)v98 - 8) = v102;
        }
        while (!__CFADD__(v97++, 1));
        v93 += 96;
        --v94;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_148;
  }
  uint64_t v122 = result;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    int v129 = (float *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      os_log_type_t v111 = (char *)MEMORY[0x1E4FBC860];
LABEL_105:
      uint64_t v121 = v8;
      if (v11 >= 2)
      {
        uint64_t v112 = *v2;
        do
        {
          unint64_t v113 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_134;
          }
          if (!v112) {
            goto LABEL_147;
          }
          char v114 = v111;
          uint64_t v115 = *(void *)&v111[16 * v113 + 32];
          uint64_t v116 = *(void *)&v111[16 * v11 + 24];
          sub_1DCF1A468((float *)(v112 + 96 * v115), (float *)(v112 + 96 * *(void *)&v111[16 * v11 + 16]), v112 + 96 * v116, v129);
          if (v1) {
            break;
          }
          if (v116 < v115) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v114 = sub_1DCD729EC((uint64_t)v114);
          }
          if (v113 >= *((void *)v114 + 2)) {
            goto LABEL_136;
          }
          unint64_t v117 = &v114[16 * v113 + 32];
          *(void *)unint64_t v117 = v115;
          *((void *)v117 + 1) = v116;
          unint64_t v118 = *((void *)v114 + 2);
          if (v11 > v118) {
            goto LABEL_137;
          }
          memmove(&v114[16 * v11 + 16], &v114[16 * v11 + 32], 16 * (v118 - v11));
          os_log_type_t v111 = v114;
          *((void *)v114 + 2) = v118 - 1;
          unint64_t v11 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      *(void *)(v121 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v121 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1DD0486F8();
    *(void *)(v7 + 16) = v6;
    uint64_t v121 = v7;
    int v129 = (float *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v120 = v2;
  uint64_t v10 = *v2;
  long long v130 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v123 = v3;
  while (1)
  {
    uint64_t v12 = v9++;
    if (v9 < v3)
    {
      float v13 = *(float *)(v10 + 96 * v9 + 64);
      float v14 = *(float *)(v10 + 96 * v12 + 64);
      uint64_t v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        id v15 = (float *)(v10 + 256 + 96 * v12);
        float v16 = v13;
        while (1)
        {
          float v17 = v16;
          float v16 = *v15;
          if (v14 < v13 == v17 >= *v15) {
            break;
          }
          ++v9;
          v15 += 24;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v13)
      {
        if (v9 < v12) {
          goto LABEL_140;
        }
        if (v12 < v9)
        {
          uint64_t v18 = 96 * v9;
          uint64_t v19 = 96 * v12;
          uint64_t v20 = v9;
          uint64_t v119 = v12;
          do
          {
            if (v12 != --v20)
            {
              if (!v10) {
                goto LABEL_146;
              }
              uint64_t v21 = v10 + v18;
              uint64_t v22 = *(void *)(v10 + v19 + 72);
              char v23 = *(unsigned char *)(v10 + v19 + 80);
              uint64_t v128 = *(void *)(v10 + v19 + 88);
              uint64_t v24 = *(void *)(v10 + v19 + 64);
              long long v126 = *(_OWORD *)(v10 + v19 + 48);
              long long v127 = *(_OWORD *)(v10 + v19 + 32);
              long long v124 = *(_OWORD *)(v10 + v19 + 16);
              long long v125 = *(_OWORD *)(v10 + v19);
              memmove((void *)(v10 + v19), (const void *)(v10 + v18 - 96), 0x60uLL);
              *(_OWORD *)(v21 - 96) = v125;
              *(_OWORD *)(v21 - 80) = v124;
              *(_OWORD *)(v21 - 64) = v127;
              *(_OWORD *)(v21 - 48) = v126;
              *(void *)(v21 - 32) = v24;
              *(void *)(v21 - 24) = v22;
              *(unsigned char *)(v21 - 16) = v23;
              *(void *)(v21 - 8) = v128;
            }
            ++v12;
            v18 -= 96;
            v19 += 96;
          }
          while (v12 < v20);
          uint64_t v3 = v123;
          uint64_t v12 = v119;
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_39;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_138;
    }
    if (v9 - v12 >= v122) {
      goto LABEL_39;
    }
    uint64_t v25 = v12 + v122;
    if (__OFADD__(v12, v122)) {
      goto LABEL_141;
    }
    if (v25 >= v3) {
      uint64_t v25 = v3;
    }
    if (v25 < v12) {
      break;
    }
    if (v9 != v25)
    {
      uint64_t v76 = v10 + 88 + 96 * v9;
      uint64_t v26 = v130;
      do
      {
        float v77 = *(float *)(v10 + 96 * v9 + 64);
        uint64_t v78 = v12;
        uint64_t v79 = (float *)v76;
        do
        {
          if (*(v79 - 30) >= v77) {
            break;
          }
          if (!v10) {
            goto LABEL_144;
          }
          uint64_t v80 = v79 - 22;
          int v81 = *((_DWORD *)v79 - 5);
          uint64_t v82 = *((void *)v79 - 2);
          char v83 = *((unsigned char *)v79 - 8);
          uint64_t v84 = *(void *)v79;
          long long v85 = *(_OWORD *)(v79 - 14);
          long long v86 = *(_OWORD *)(v79 - 10);
          long long v87 = *(_OWORD *)(v79 - 22);
          long long v88 = *(_OWORD *)(v79 - 18);
          long long v89 = *(_OWORD *)(v79 - 34);
          *((_OWORD *)v80 + 2) = *(_OWORD *)(v79 - 38);
          *((_OWORD *)v80 + 3) = v89;
          long long v90 = *(_OWORD *)(v79 - 26);
          *((_OWORD *)v80 + 4) = *(_OWORD *)(v79 - 30);
          *((_OWORD *)v80 + 5) = v90;
          long long v91 = *(_OWORD *)(v79 - 42);
          *(_OWORD *)uint64_t v80 = *(_OWORD *)(v79 - 46);
          *((_OWORD *)v80 + 1) = v91;
          *((void *)v79 - 12) = v84;
          v79 -= 24;
          *(_OWORD *)(v79 - 22) = v87;
          *(_OWORD *)(v79 - 18) = v88;
          *(_OWORD *)(v79 - 14) = v85;
          *(_OWORD *)(v79 - 10) = v86;
          *(v79 - 6) = v77;
          *((_DWORD *)v79 - 5) = v81;
          *((void *)v79 - 2) = v82;
          ++v78;
          *((unsigned char *)v79 - 8) = v83;
        }
        while (v9 != v78);
        ++v9;
        v76 += 96;
      }
      while (v9 != v25);
      uint64_t v9 = v25;
      if (v25 < v12) {
        goto LABEL_133;
      }
      goto LABEL_40;
    }
LABEL_39:
    uint64_t v26 = v130;
    if (v9 < v12) {
      goto LABEL_133;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = sub_1DCD71FDC(0, *((void *)v26 + 2) + 1, 1, v26);
    }
    unint64_t v28 = *((void *)v26 + 2);
    unint64_t v27 = *((void *)v26 + 3);
    unint64_t v11 = v28 + 1;
    if (v28 >= v27 >> 1) {
      uint64_t v26 = sub_1DCD71FDC((char *)(v27 > 1), v28 + 1, 1, v26);
    }
    *((void *)v26 + 2) = v11;
    uint64_t v29 = v26 + 32;
    uint64_t v30 = &v26[16 * v28 + 32];
    *(void *)uint64_t v30 = v12;
    *((void *)v30 + 1) = v9;
    long long v130 = v26;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v11 - 1;
        if (v11 >= 4)
        {
          id v36 = &v29[16 * v11];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_122;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_123;
          }
          unint64_t v43 = v11 - 2;
          double v44 = &v29[16 * v11 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_125;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_128;
          }
          if (v48 >= v39)
          {
            long long v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_132;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_76;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v60 = *((void *)v26 + 4);
            uint64_t v61 = *((void *)v26 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_70;
          }
          uint64_t v33 = *((void *)v26 + 4);
          uint64_t v32 = *((void *)v26 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_124;
        }
        unint64_t v43 = v11 - 2;
        double v49 = &v29[16 * v11 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_127;
        }
        int v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_130;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_131;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_76:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_78;
        }
LABEL_70:
        if (v54) {
          goto LABEL_126;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_129;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_78:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v11)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v10) {
          goto LABEL_145;
        }
        double v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        unint64_t v73 = &v29[16 * v31];
        uint64_t v74 = *((void *)v73 + 1);
        sub_1DCF1A468((float *)(v10 + 96 * *(void *)v71), (float *)(v10 + 96 * *(void *)v73), v10 + 96 * v74, v129);
        if (v1) {
          goto LABEL_95;
        }
        if (v74 < v72) {
          goto LABEL_119;
        }
        if (v31 > *((void *)v130 + 2)) {
          goto LABEL_120;
        }
        *(void *)double v71 = v72;
        *(void *)&v29[16 * v70 + 8] = v74;
        unint64_t v75 = *((void *)v130 + 2);
        if (v31 >= v75) {
          goto LABEL_121;
        }
        uint64_t v26 = v130;
        unint64_t v11 = v75 - 1;
        memmove(&v29[16 * v31], v73 + 16, 16 * (v75 - 1 - v31));
        *((void *)v130 + 2) = v75 - 1;
        if (v75 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    uint64_t v3 = v123;
    if (v9 >= v123)
    {
      uint64_t v8 = v121;
      os_log_type_t v111 = v130;
      unint64_t v2 = v120;
      goto LABEL_105;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCF1A468(float *__dst, float *__src, unint64_t a3, float *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 96;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 96;
  char v23 = __dst;
  uint64_t v22 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -95)
    {
      if (a4 != __src || &__src[24 * v11] <= a4) {
        memmove(a4, __src, 96 * v11);
      }
      float v16 = &v4[24 * v11];
      uint64_t v21 = (char *)v16;
      char v23 = v6;
      if (v7 < v6 && v10 >= 96)
      {
        float v17 = (float *)(a3 - 96);
        do
        {
          uint64_t v18 = v17 + 24;
          if (*(v6 - 8) >= *(v16 - 8))
          {
            uint64_t v21 = (char *)(v16 - 24);
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              memmove(v17, v16 - 24, 0x60uLL);
            }
            uint64_t v19 = v6;
            v16 -= 24;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v19 = v6 - 24;
            if (v18 != v6 || v17 >= v6) {
              memmove(v17, v6 - 24, 0x60uLL);
            }
            char v23 = v6 - 24;
            if (v19 <= v7) {
              break;
            }
          }
          v17 -= 24;
          uint64_t v6 = v19;
        }
        while (v16 > v4);
      }
LABEL_40:
      sub_1DCD7291C((void **)&v23, (const void **)&v22, &v21);
      return 1;
    }
  }
  else if (v8 >= -95)
  {
    if (a4 != __dst || &__dst[24 * v9] <= a4) {
      memmove(a4, __dst, 96 * v9);
    }
    uint64_t v12 = &v4[24 * v9];
    uint64_t v21 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 96)
    {
      float v13 = v4;
      while (1)
      {
        if (v13[16] >= v6[16])
        {
          uint64_t v4 = v13 + 24;
          id v15 = v13;
          float v14 = v6;
          if (v7 == v13)
          {
            v13 += 24;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 24;
          }
        }
        else
        {
          float v14 = v6 + 24;
          id v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        memmove(v7, v15, 0x60uLL);
LABEL_18:
        v7 += 24;
        if (v13 < v12)
        {
          uint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        uint64_t v22 = v4;
        char v23 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

double SearchHistoryEntry.timestamp.getter()
{
  return *(double *)v0;
}

void SearchHistoryEntry.renderingRecommendation.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t SearchHistoryEntry.RenderingRecommendation.isRecommended.getter()
{
  return *v0;
}

uint64_t sub_1DCF1A748(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchHistoryEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SearchHistoryEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SearchHistoryEntry()
{
  return &type metadata for SearchHistoryEntry;
}

uint64_t getEnumTagSinglePayload for SearchHistoryEntry.RenderingRecommendation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SearchHistoryEntry.RenderingRecommendation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCF1A994);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchHistoryEntry.RenderingRecommendation()
{
  return &type metadata for SearchHistoryEntry.RenderingRecommendation;
}

uint64_t sub_1DCF1A9CC(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = result;
  int64_t v6 = 0;
  uint64_t v7 = result + 64;
  uint64_t v8 = 1 << *(unsigned char *)(result + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(result + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v29 = result + 64;
  uint64_t v30 = MEMORY[0x1E4FBC860];
  if (v10) {
    goto LABEL_8;
  }
LABEL_9:
  int64_t v13 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v13 < v31)
    {
      unint64_t v14 = *(void *)(v7 + 8 * v13);
      ++v6;
      if (v14) {
        goto LABEL_24;
      }
      int64_t v6 = v13 + 1;
      if (v13 + 1 >= v31) {
        goto LABEL_35;
      }
      unint64_t v14 = *(void *)(v7 + 8 * v6);
      if (v14) {
        goto LABEL_24;
      }
      int64_t v6 = v13 + 2;
      if (v13 + 2 >= v31) {
        goto LABEL_35;
      }
      unint64_t v14 = *(void *)(v7 + 8 * v6);
      if (v14) {
        goto LABEL_24;
      }
      int64_t v6 = v13 + 3;
      if (v13 + 3 >= v31) {
        goto LABEL_35;
      }
      unint64_t v14 = *(void *)(v7 + 8 * v6);
      if (v14)
      {
LABEL_24:
        unint64_t v10 = (v14 - 1) & v14;
        for (unint64_t i = __clz(__rbit64(v14)) + (v6 << 6); ; unint64_t i = v11 | (v6 << 6))
        {
          float v16 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
          uint64_t v18 = *v16;
          uint64_t v17 = v16[1];
          uint64_t v19 = *a2;
          uint64_t v20 = *(void *)(*a2 + 16);
          swift_bridgeObjectRetain();
          if (!v20) {
            goto LABEL_6;
          }
          swift_bridgeObjectRetain();
          unint64_t v21 = sub_1DCEAD1A4(v18, v17);
          if ((v22 & 1) == 0) {
            break;
          }
          float v23 = *(float *)(*(void *)(v19 + 56) + 4 * v21);
          swift_bridgeObjectRelease();
          if ((a3 & 0x100000000) != 0 || v23 != *(float *)&a3)
          {
LABEL_7:
            uint64_t result = swift_bridgeObjectRelease();
            if (!v10) {
              goto LABEL_9;
            }
            goto LABEL_8;
          }
LABEL_29:
          uint64_t v24 = v30;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1DCFC4948(0, *(void *)(v30 + 16) + 1, 1);
            uint64_t v24 = v30;
          }
          unint64_t v26 = *(void *)(v24 + 16);
          unint64_t v25 = *(void *)(v24 + 24);
          unint64_t v27 = v26 + 1;
          if (v26 >= v25 >> 1)
          {
            uint64_t result = sub_1DCFC4948(v25 > 1, v26 + 1, 1);
            unint64_t v27 = v26 + 1;
            uint64_t v24 = v30;
          }
          *(void *)(v24 + 16) = v27;
          uint64_t v30 = v24;
          uint64_t v28 = v24 + 16 * v26;
          *(void *)(v28 + 32) = v18;
          *(void *)(v28 + 40) = v17;
          uint64_t v7 = v29;
          if (!v10) {
            goto LABEL_9;
          }
LABEL_8:
          unint64_t v11 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
        }
        swift_bridgeObjectRelease();
LABEL_6:
        if ((a3 & 0x100000000) == 0) {
          goto LABEL_7;
        }
        goto LABEL_29;
      }
      int64_t v15 = v13 + 4;
      if (v15 < v31)
      {
        unint64_t v14 = *(void *)(v7 + 8 * v15);
        if (v14)
        {
          int64_t v6 = v15;
          goto LABEL_24;
        }
        while (1)
        {
          int64_t v6 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            goto LABEL_37;
          }
          if (v6 >= v31) {
            break;
          }
          unint64_t v14 = *(void *)(v7 + 8 * v6);
          ++v15;
          if (v14) {
            goto LABEL_24;
          }
        }
      }
    }
LABEL_35:
    swift_release();
    return v30;
  }
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1DCF1AC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RegionSearchResult.ResultItem(0);
  uint64_t v90 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v78 - v11);
  if (!*(void *)(a1 + 16)) {
    goto LABEL_5;
  }
  uint64_t v13 = *(void *)(a1 + 64);
  if (!*(void *)(v13 + 16)) {
    goto LABEL_5;
  }
  uint64_t v94 = a2;
  long long v14 = *(_OWORD *)(a1 + 32);
  long long v88 = *(_OWORD *)(a1 + 48);
  long long v89 = v14;
  uint64_t v15 = *(void *)(a1 + 72);
  long long v91 = *(uint64_t **)(a1 + 80);
  float v16 = *(void **)(a1 + 88);
  int v17 = *(unsigned __int8 *)(a1 + 96);
  uint64_t v18 = v13 + *(int *)(v4 + 28);
  unint64_t v84 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  sub_1DCF1B408(v18 + v84, (uint64_t)&v78 - v11);
  uint64_t v19 = type metadata accessor for ObjectKnowledge();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = *(void *)(v20 + 48);
  uint64_t v95 = v20 + 48;
  if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v21)(v12, 1, v19) == 1)
  {
    sub_1DCD9BA74((uint64_t)v12);
LABEL_5:
    LOBYTE(v22) = 0;
    return v22 & 1;
  }
  LODWORD(v86) = v17;
  uint64_t v83 = *v12;
  uint64_t v24 = v15;
  unint64_t v22 = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCF1B4D4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_53:
    swift_bridgeObjectRelease();
    return v22 & 1;
  }
  long long v85 = v16;
  uint64_t v81 = v24;
  uint64_t v82 = v13;
  unint64_t v80 = v22;
  uint64_t v25 = *(void *)(v94 + 16);
  unint64_t v92 = v21;
  uint64_t v93 = v19;
  if (v25)
  {
    uint64_t v79 = isUniquelyReferenced_nonNull_native;
    long long v87 = (void *)v4;
    uint64_t v26 = swift_bridgeObjectRetain();
    unint64_t v27 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v28 = 48;
    do
    {
      uint64_t v30 = *(void *)(v26 + v28);
      if (*(void *)(v30 + 16))
      {
        uint64_t v31 = *(void *)(v30 + 32);
        uint64_t v32 = *(void *)(v30 + 40);
        uint64_t v33 = *(void *)(v30 + 48);
        uint64_t v34 = *(void *)(v30 + 56);
        uint64_t v35 = *(void *)(v30 + 64);
        uint64_t v36 = *(void *)(v30 + 72);
        uint64_t v37 = *(void *)(v30 + 80);
        uint64_t v38 = *(void *)(v30 + 88);
        char v39 = *(unsigned char *)(v30 + 96);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v27 = sub_1DCEA0224(0, v27[2] + 1, 1, v27);
        }
        unint64_t v41 = v27[2];
        unint64_t v40 = v27[3];
        BOOL v42 = v27;
        if (v41 >= v40 >> 1) {
          BOOL v42 = sub_1DCEA0224((void *)(v40 > 1), v41 + 1, 1, v27);
        }
        v42[2] = v41 + 1;
        unint64_t v27 = v42;
        uint64_t v29 = &v42[9 * v41];
        v29[4] = v31;
        v29[5] = v32;
        v29[6] = v33;
        v29[7] = v34;
        v29[8] = v35;
        v29[9] = v36;
        v29[10] = v37;
        long long v29[11] = v38;
        *((unsigned char *)v29 + 96) = v39;
        uint64_t v26 = v94;
      }
      v28 += 24;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    uint64_t v4 = (uint64_t)v87;
    unint64_t v43 = v27;
    uint64_t isUniquelyReferenced_nonNull_native = v79;
    unint64_t v21 = v92;
    uint64_t v19 = v93;
  }
  else
  {
    unint64_t v43 = (void *)MEMORY[0x1E4FBC860];
  }
  long long v87 = v43;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_57;
  }
LABEL_21:
  double v44 = v85;
  unint64_t v46 = v87[2];
  unint64_t v45 = v87[3];
  if (v46 >= v45 >> 1)
  {
    float v77 = sub_1DCEA0224((void *)(v45 > 1), v46 + 1, 1, v87);
    double v44 = v85;
    long long v87 = v77;
  }
  uint64_t v47 = v87;
  v87[2] = v46 + 1;
  uint64_t v48 = &v47[9 * v46];
  long long v49 = v88;
  *((_OWORD *)v48 + 2) = v89;
  *((_OWORD *)v48 + 3) = v49;
  uint64_t v50 = v81;
  v48[8] = v82;
  v48[9] = v50;
  v48[10] = v91;
  v48[11] = v44;
  *((unsigned char *)v48 + 96) = v86;
  uint64_t v51 = (void *)sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
  uint64_t v97 = v51;
  uint64_t v86 = v47[2];
  if (!v86) {
    goto LABEL_52;
  }
  long long v85 = v47 + 8;
  swift_bridgeObjectRetain();
  unint64_t v52 = 0;
  long long v91 = v9;
  while (1)
  {
    if (v52 >= v87[2])
    {
LABEL_56:
      __break(1u);
LABEL_57:
      long long v87 = sub_1DCEA0224(0, v87[2] + 1, 1, v87);
      goto LABEL_21;
    }
    uint64_t v53 = v85[9 * v52];
    uint64_t v54 = *(void *)(v53 + 16);
    if (v54) {
      break;
    }
LABEL_26:
    if (++v52 == v86)
    {
      swift_bridgeObjectRelease();
LABEL_52:
      uint64_t v74 = swift_bridgeObjectRetain();
      unint64_t v22 = sub_1DCF9A5F4(v74);
      swift_bridgeObjectRelease();
      uint64_t v75 = swift_bridgeObjectRetain();
      uint64_t v76 = (void *)sub_1DCF1A9CC(v75, (uint64_t *)&v97, v22 | ((HIDWORD(v22) & 1) << 32));
      swift_bridgeObjectRelease();
      LOBYTE(v22) = sub_1DCF8C928(v83, v80, v76);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_53;
    }
  }
  *(void *)&long long v89 = v52;
  uint64_t v55 = v53 + v84;
  *(void *)&long long v88 = v53;
  swift_bridgeObjectRetain();
  uint64_t v56 = *(void *)(v90 + 72);
  uint64_t v94 = v56;
  while (1)
  {
    sub_1DCF1B470(v55, isUniquelyReferenced_nonNull_native);
    sub_1DCF1B408(isUniquelyReferenced_nonNull_native + *(int *)(v4 + 28), (uint64_t)v9);
    if (((unsigned int (*)(uint64_t *, uint64_t, uint64_t))v21)(v9, 1, v19) != 1) {
      break;
    }
    sub_1DCD9BA74((uint64_t)v9);
LABEL_31:
    sub_1DCF1B4D4(isUniquelyReferenced_nonNull_native, type metadata accessor for RegionSearchResult.ResultItem);
    v55 += v56;
    if (!--v54)
    {
      swift_bridgeObjectRelease();
      unint64_t v52 = v89;
      goto LABEL_26;
    }
  }
  uint64_t v57 = *v9;
  uint64_t v58 = v9[1];
  swift_bridgeObjectRetain();
  sub_1DCF1B4D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ObjectKnowledge);
  if (!v58) {
    goto LABEL_50;
  }
  if (v51[2])
  {
    swift_bridgeObjectRetain();
    unint64_t v59 = sub_1DCEAD1A4(v57, v58);
    float v60 = 0.0;
    if (v61) {
      float v60 = *(float *)(v51[7] + 4 * v59);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    float v60 = 0.0;
  }
  uint64_t v19 = v4;
  uint64_t v9 = (uint64_t *)isUniquelyReferenced_nonNull_native;
  float v62 = *(float *)(isUniquelyReferenced_nonNull_native + *(int *)(v4 + 32));
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  float v96 = v51;
  uint64_t v97 = (void *)0x8000000000000000;
  unint64_t v21 = sub_1DCEAD1A4(v57, v58);
  uint64_t v64 = v51[2];
  BOOL v65 = (v63 & 1) == 0;
  uint64_t v66 = v64 + v65;
  if (__OFADD__(v64, v65))
  {
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v4 = v63;
  if (v51[3] >= v66)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1DCE88D74();
    }
LABEL_45:
    float v69 = v60 + v62;
    uint64_t v51 = v96;
    if (v4)
    {
      *(float *)(v96[7] + 4 * v21) = v69;
    }
    else
    {
      v96[(v21 >> 6) + 8] |= 1 << v21;
      unint64_t v70 = (uint64_t *)(v51[6] + 16 * v21);
      uint64_t *v70 = v57;
      v70[1] = v58;
      *(float *)(v51[7] + 4 * v21) = v69;
      uint64_t v71 = v51[2];
      BOOL v72 = __OFADD__(v71, 1);
      uint64_t v73 = v71 + 1;
      if (v72) {
        goto LABEL_55;
      }
      v51[2] = v73;
      swift_bridgeObjectRetain();
    }
    uint64_t v97 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v19;
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v9;
    uint64_t v9 = v91;
    unint64_t v21 = v92;
    uint64_t v19 = v93;
LABEL_50:
    uint64_t v56 = v94;
    goto LABEL_31;
  }
  sub_1DCE7E984(v66, isUniquelyReferenced_nonNull_native);
  unint64_t v67 = sub_1DCEAD1A4(v57, v58);
  if ((v4 & 1) == (v68 & 1))
  {
    unint64_t v21 = v67;
    goto LABEL_45;
  }
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCF1B408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF1B470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RegionSearchResult.ResultItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF1B4D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1DCF1B534(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int64_t v6 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    int64_t v6 = a1;
    a1[1] = a2[1];
    uint64_t v7 = (int *)type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
    uint64_t v8 = v7[7];
    uint64_t v9 = (char *)v6 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    char v39 = v12;
    v12(v9, v10, v11);
    uint64_t v13 = v7[8];
    long long v14 = (void *)((char *)v6 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
      uint64_t v20 = v39;
    }
    else
    {
      uint64_t v21 = v15[1];
      *long long v14 = *v15;
      v14[1] = v21;
      *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
      *((_WORD *)v14 + 10) = *((_WORD *)v15 + 10);
      uint64_t v22 = *(int *)(v16 + 32);
      uint64_t v38 = (char *)v14 + v22;
      float v23 = (char *)v15 + v22;
      swift_bridgeObjectRetain();
      uint64_t v24 = v23;
      uint64_t v20 = v39;
      v39(v38, v24, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v25 = v7[9];
    uint64_t v26 = (void *)((char *)v6 + v25);
    unint64_t v27 = (void *)((char *)a2 + v25);
    if (v18((void *)((char *)a2 + v25), 1, v16))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      uint64_t v29 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v29;
      *((_DWORD *)v26 + 4) = *((_DWORD *)v27 + 4);
      *((_WORD *)v26 + 10) = *((_WORD *)v27 + 10);
      uint64_t v30 = *(int *)(v16 + 32);
      uint64_t v31 = v20;
      uint64_t v32 = (char *)v26 + v30;
      uint64_t v33 = (char *)v27 + v30;
      swift_bridgeObjectRetain();
      v31(v32, v33, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
    }
    uint64_t v34 = a3[6];
    *((unsigned char *)v6 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v35 = (char *)v6 + v34;
    uint64_t v36 = (char *)a2 + v34;
    *(void *)uint64_t v35 = *(void *)v36;
    v35[8] = v36[8];
    *(void *)((char *)v6 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t sub_1DCF1B854(uint64_t a1)
{
  swift_bridgeObjectRelease();
  int v2 = (int *)type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  uint64_t v3 = a1 + v2[7];
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = a1 + v2[8];
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v5(v6 + *(int *)(v7 + 32), v4);
  }
  uint64_t v9 = a1 + v2[9];
  if (!v8(v9, 1, v7))
  {
    swift_bridgeObjectRelease();
    v5(v9 + *(int *)(v7 + 32), v4);
  }
  return swift_bridgeObjectRelease();
}

void *sub_1DCF1B9B8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  uint64_t v6 = *(int *)(v5 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v34 = v5;
  uint64_t v11 = *(int *)(v5 + 32);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v18;
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    *((_WORD *)v12 + 10) = *((_WORD *)v13 + 10);
    uint64_t v19 = *(int *)(v14 + 32);
    uint64_t v33 = (char *)v12 + v19;
    uint64_t v20 = (char *)v13 + v19;
    swift_bridgeObjectRetain();
    v10(v33, v20, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v21 = *(int *)(v34 + 36);
  uint64_t v22 = (void *)((char *)a1 + v21);
  float v23 = (void *)((char *)a2 + v21);
  if (v16((void *)((char *)a2 + v21), 1, v14))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v25;
    *((_DWORD *)v22 + 4) = *((_DWORD *)v23 + 4);
    *((_WORD *)v22 + 10) = *((_WORD *)v23 + 10);
    uint64_t v26 = *(int *)(v14 + 32);
    unint64_t v27 = (char *)v22 + v26;
    uint64_t v28 = (char *)v23 + v26;
    swift_bridgeObjectRetain();
    v10(v27, v28, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v22, 0, 1, v14);
  }
  uint64_t v29 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCF1BC9C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v5 = (int *)type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  uint64_t v6 = v5[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v39 + 24);
  v37(v7, v8);
  uint64_t v10 = v5[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v38 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      *(void *)(v11 + 8) = *(void *)(v12 + 8);
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      *(unsigned char *)(v11 + 20) = *(unsigned char *)(v12 + 20);
      *(unsigned char *)(v11 + 21) = *(unsigned char *)(v12 + 21);
      uint64_t v17 = *(int *)(v13 + 32);
      uint64_t v18 = v11 + v17;
      uint64_t v36 = v12 + v17;
      uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
      swift_bridgeObjectRetain();
      v35(v18, v36, v40);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_1DCF1DF60(v11, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  *(unsigned char *)(v11 + 20) = *(unsigned char *)(v12 + 20);
  *(unsigned char *)(v11 + 21) = *(unsigned char *)(v12 + 21);
  ((void (*)(uint64_t, uint64_t, uint64_t))v37)(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v40);
LABEL_7:
  uint64_t v20 = v5[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  int v23 = v14(a1 + v20, 1, v13);
  int v24 = v14(v22, 1, v13);
  if (!v23)
  {
    if (!v24)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      *(void *)(v21 + 8) = *(void *)(v22 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v21 + 16) = *(_DWORD *)(v22 + 16);
      *(unsigned char *)(v21 + 20) = *(unsigned char *)(v22 + 20);
      *(unsigned char *)(v21 + 21) = *(unsigned char *)(v22 + 21);
      ((void (*)(uint64_t, uint64_t, uint64_t))v37)(v21 + *(int *)(v13 + 32), v22 + *(int *)(v13 + 32), v40);
      goto LABEL_13;
    }
    sub_1DCF1DF60(v21, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v21, (const void *)v22, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(_DWORD *)(v21 + 16) = *(_DWORD *)(v22 + 16);
  *(unsigned char *)(v21 + 20) = *(unsigned char *)(v22 + 20);
  *(unsigned char *)(v21 + 21) = *(unsigned char *)(v22 + 21);
  uint64_t v25 = *(int *)(v13 + 32);
  uint64_t v26 = v21 + v25;
  uint64_t v27 = v22 + v25;
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
  swift_bridgeObjectRetain();
  v28(v26, v27, v40);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v21, 0, 1, v13);
LABEL_13:
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v30 = a3[6];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v33 = *v32;
  *(unsigned char *)(v31 + 8) = *((unsigned char *)v32 + 8);
  *(void *)uint64_t v31 = v33;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1DCF1C0F8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v5 = (int *)type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  uint64_t v6 = v5[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v25 = (void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  uint64_t v27 = *v25;
  (*v25)(v7, v8, v9);
  uint64_t v10 = v5[8];
  uint64_t v11 = (_OWORD *)((char *)a1 + v10);
  uint64_t v12 = (_OWORD *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v11 = *v12;
    *((_DWORD *)v11 + 4) = *((_DWORD *)v12 + 4);
    *((_WORD *)v11 + 10) = *((_WORD *)v12 + 10);
    v27((char *)v11 + *(int *)(v13 + 32), (char *)v12 + *(int *)(v13 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = v5[9];
  uint64_t v18 = (_OWORD *)((char *)a1 + v17);
  uint64_t v19 = (_OWORD *)((char *)a2 + v17);
  if (v15((void *)((char *)a2 + v17), 1, v13))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    *((_DWORD *)v18 + 4) = *((_DWORD *)v19 + 4);
    *((_WORD *)v18 + 10) = *((_WORD *)v19 + 10);
    v27((char *)v18 + *(int *)(v13 + 32), (char *)v19 + *(int *)(v13 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  uint64_t v21 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v22 = (char *)a1 + v21;
  int v23 = (char *)a2 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_1DCF1C3AC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v5 = (int *)type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  uint64_t v6 = v5[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v32 + 40);
  v30(v7, v8);
  uint64_t v10 = v5[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      *(_WORD *)(v11 + 20) = *(_WORD *)(v12 + 20);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_1DCF1DF60(v11, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v28 = *(void *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = v28;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  *(unsigned char *)(v11 + 20) = *(unsigned char *)(v12 + 20);
  *(unsigned char *)(v11 + 21) = *(unsigned char *)(v12 + 21);
  ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v33);
LABEL_7:
  uint64_t v18 = v5[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  int v21 = v14(a1 + v18, 1, v13);
  int v22 = v14(v20, 1, v13);
  if (!v21)
  {
    if (!v22)
    {
      uint64_t v29 = *(void *)(v20 + 8);
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = v29;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v19 + 16) = *(_DWORD *)(v20 + 16);
      *(unsigned char *)(v19 + 20) = *(unsigned char *)(v20 + 20);
      *(unsigned char *)(v19 + 21) = *(unsigned char *)(v20 + 21);
      ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v19 + *(int *)(v13 + 32), v20 + *(int *)(v13 + 32), v33);
      goto LABEL_13;
    }
    sub_1DCF1DF60(v19, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v19, (const void *)v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_DWORD *)(v19 + 16) = *(_DWORD *)(v20 + 16);
  *(_WORD *)(v19 + 20) = *(_WORD *)(v20 + 20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v19 + *(int *)(v13 + 32), v20 + *(int *)(v13 + 32), v33);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v19, 0, 1, v13);
LABEL_13:
  uint64_t v24 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCF1C78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF1C7A0);
}

uint64_t sub_1DCF1C7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DCF1C860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF1C874);
}

uint64_t sub_1DCF1C874(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for NestedNatureDomainAssignmentRule()
{
  uint64_t result = qword_1EBE85B70;
  if (!qword_1EBE85B70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCF1C97C()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCF1CA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v153 = a4;
  uint64_t v146 = a3;
  long long v154 = (char *)a1;
  uint64_t v155 = a2;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v142 = (long long *)((char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1DD048068();
  uint64_t v150 = *(void *)(v6 - 8);
  uint64_t v151 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v147 = (uint64_t)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v148 = (char *)&v133 - v9;
  MEMORY[0x1F4188790](v10);
  *(void *)&long long v145 = (char *)&v133 - v11;
  MEMORY[0x1F4188790](v12);
  *((void *)&v145 + 1) = (char *)&v133 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v144 = (uint64_t)&v133 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v143 = (uint64_t)&v133 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v141 = (uint64_t)&v133 - v19;
  MEMORY[0x1F4188790](v20);
  int v22 = (char *)&v133 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v133 - v24;
  uint64_t v26 = type metadata accessor for NestedNatureDomainAssignmentRule();
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v133 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v133 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v133 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v149 = (uint64_t)&v133 - v36;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  MEMORY[0x1F4188790](v37 - 8);
  uint64_t v39 = (char *)&v133 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  BOOL v42 = (char *)&v133 - v41;
  MEMORY[0x1F4188790](v43);
  unint64_t v45 = (char *)&v133 - v44;
  sub_1DCD32C3C((uint64_t)v154, (uint64_t)v185);
  if (*(unsigned char *)(v155 + 104))
  {
LABEL_9:
    sub_1DCD32C3C((uint64_t)v185, v153);
    return sub_1DCD5D8A8((uint64_t)v185, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  }
  long long v154 = v34;
  uint64_t v134 = v25;
  uint64_t v135 = v22;
  uint64_t v138 = v26;
  unint64_t v139 = v39;
  unint64_t v136 = v31;
  uint64_t v137 = v28;
  uint64_t v46 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  uint64_t v47 = (uint64_t)v152;
  uint64_t v48 = (uint64_t)v152 + *(int *)(v46 + 32);
  sub_1DCF1DE30(v48, (uint64_t)v45);
  uint64_t v49 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = v50 + 48;
  uint64_t v140 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  unsigned int v52 = v140(v45, 1, v49);
  sub_1DCF1DE98((uint64_t)v45);
  uint64_t v53 = v149;
  sub_1DCF1DEF8(v47, v149, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
  if (v52 == 1)
  {
    sub_1DCF1DF60(v53, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
    uint64_t v54 = v47;
    uint64_t v55 = (uint64_t)v154;
    sub_1DCF1DEF8(v54, (uint64_t)v154, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
    uint64_t v56 = v151;
LABEL_5:
    sub_1DCF1DF60(v55, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
    uint64_t v61 = (uint64_t)v148;
LABEL_6:
    sub_1DCDB40EC(v61);
    uint64_t v62 = v147;
    sub_1DCDB4300(v147);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
    v63(v61, v56);
    uint64_t v64 = sub_1DD048048();
    os_log_type_t v65 = sub_1DD048848();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v66 = 0;
      _os_log_impl(&dword_1DCCF9000, v64, v65, "Must have both detector and inner detector threshold config.", v66, 2u);
      MEMORY[0x1E01B07E0](v66, -1, -1);
    }

    v63(v62, v56);
    goto LABEL_9;
  }
  uint64_t v57 = v50;
  sub_1DCF1DE30(v53 + *(int *)(v46 + 36), (uint64_t)v42);
  uint64_t v58 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v140;
  unsigned int v59 = v140(v42, 1, v49);
  sub_1DCF1DE98((uint64_t)v42);
  sub_1DCF1DF60(v53, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
  uint64_t v60 = v47;
  uint64_t v55 = (uint64_t)v154;
  sub_1DCF1DEF8(v60, (uint64_t)v154, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
  uint64_t v56 = v151;
  if (v59 == 1) {
    goto LABEL_5;
  }
  int v68 = *(_DWORD *)(v55 + 12);
  sub_1DCF1DF60(v55, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
  uint64_t v61 = (uint64_t)v148;
  if (v68 <= 0) {
    goto LABEL_6;
  }
  if (*(void *)(*v152 + 16))
  {
    sub_1DCD370D0(*v152);
    uint64_t v71 = (uint64_t)v139;
    if (!v69)
    {
      uint64_t v117 = (uint64_t)v134;
      sub_1DCDB40EC((uint64_t)v134);
      uint64_t v118 = (uint64_t)v135;
      sub_1DCDB4300((uint64_t)v135);
      uint64_t v119 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
      v119(v117, v56);
      uint64_t v120 = sub_1DD048048();
      os_log_type_t v121 = sub_1DD048848();
      if (os_log_type_enabled(v120, v121))
      {
        uint64_t v122 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v122 = 0;
        _os_log_impl(&dword_1DCCF9000, v120, v121, "No satisified coarse label.", v122, 2u);
        MEMORY[0x1E01B07E0](v122, -1, -1);
      }

      v119(v118, v56);
      sub_1DCD32C3C((uint64_t)v185, v153);
      sub_1DCD5D8A8((uint64_t)v185, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
      return swift_bridgeObjectRelease();
    }
    long long v154 = (char *)v51;
    LODWORD(v147) = v70;
    uint64_t v148 = v69;
  }
  else
  {
    long long v154 = (char *)v51;
    uint64_t v148 = 0;
    LODWORD(v147) = 0;
    uint64_t v71 = (uint64_t)v139;
  }
  uint64_t v149 = *(void *)(v155 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851D8);
  unint64_t v72 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_1DD04E910;
  uint64_t v74 = v73 + v72;
  sub_1DCF1DE30(v48, v71);
  if (v58(v71, 1, v49) == 1)
  {
    *(void *)uint64_t v74 = 0;
    *(void *)(v74 + 8) = 0xE000000000000000;
    *(_DWORD *)(v74 + 16) = 0;
    *(_WORD *)(v74 + 20) = 0;
    sub_1DD047BE8();
    sub_1DCF1DE98(v71);
  }
  else
  {
    sub_1DCD68D40(v71, v74);
  }
  uint64_t v75 = *((void *)&v145 + 1);
  uint64_t v76 = (uint64_t)v152;
  *(void *)&v169[0] = *(uint64_t *)((char *)v152 + *(int *)(v138 + 28));
  swift_bridgeObjectRetain();
  sub_1DCDD51EC(v73, (uint64_t *)v169, (uint64_t)&v176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(void)v179)
  {
    sub_1DCDB40EC(v75);
    uint64_t v95 = v145;
    sub_1DCDB4300(v145);
    float v96 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
    v96(v75, v56);
    uint64_t v97 = sub_1DD048048();
    os_log_type_t v98 = sub_1DD048848();
    if (os_log_type_enabled(v97, v98))
    {
      id v99 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v99 = 0;
      _os_log_impl(&dword_1DCCF9000, v97, v98, "No satisfied detection results.", v99, 2u);
      int v100 = v99;
      uint64_t v95 = v145;
      MEMORY[0x1E01B07E0](v100, -1, -1);
    }

    v96(v95, v56);
    uint64_t v101 = v153;
    goto LABEL_32;
  }
  long long v154 = (char *)v179;
  long long v145 = v176;
  long long v77 = v177;
  uint64_t v78 = *((void *)&v178 + 1);
  uint64_t v149 = v178;
  uint64_t v79 = *((void *)&v179 + 1);
  uint64_t v80 = v180;
  int v81 = DWORD2(v180);
  uint64_t v82 = v155;
  uint64_t v83 = sub_1DCF1DA48(v155);
  if (v83 >= *(int *)(v76 + 12))
  {
    LODWORD(v145) = v81;
    *((void *)&v145 + 1) = v80;
    uint64_t v146 = v78;
    uint64_t v149 = v79;
    sub_1DCD5D8A8((uint64_t)v185, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
    uint64_t v102 = v144;
    sub_1DCDB40EC(v144);
    uint64_t v103 = (uint64_t)v137;
    sub_1DCF1DEF8(v76, (uint64_t)v137, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
    long long v104 = v142;
    sub_1DCF1DEF8(v82, (uint64_t)v142, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    long long v105 = sub_1DD048048();
    os_log_type_t v106 = sub_1DD048848();
    if (os_log_type_enabled(v105, v106))
    {
      uint64_t v107 = v103;
      uint64_t v108 = swift_slowAlloc();
      uint64_t v109 = swift_slowAlloc();
      *(void *)&v169[0] = v109;
      *(_DWORD *)uint64_t v108 = 136315394;
      uint64_t v110 = v138;
      uint64_t v111 = sub_1DCD9C35C(*(unsigned char *)(v107 + *(int *)(v138 + 20)));
      *(void *)&long long v176 = sub_1DCED7FA0(v111, v112, (uint64_t *)v169);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCF1DF60(v107, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
      *(_WORD *)(v108 + 12) = 2080;
      long long v113 = v104[1];
      long long v176 = *v104;
      long long v177 = v113;
      uint64_t v114 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v176 = sub_1DCED7FA0(v114, v115, (uint64_t *)v169);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCF1DF60((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1DCCF9000, v105, v106, "Assign %s to region %s", (uint8_t *)v108, 0x16u);
      swift_arrayDestroy();
      uint64_t v76 = (uint64_t)v152;
      MEMORY[0x1E01B07E0](v109, -1, -1);
      MEMORY[0x1E01B07E0](v108, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v144, v151);
      uint64_t v116 = v148;
    }
    else
    {
      sub_1DCF1DF60(v103, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
      sub_1DCF1DF60((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

      (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v102, v151);
      uint64_t v116 = v148;
      uint64_t v110 = v138;
    }
    char v124 = *(unsigned char *)(v76 + *(int *)(v110 + 20));
    LODWORD(v125) = v147;
    LOBYTE(v169[0]) = v124;
    if (!v116) {
      float v125 = 0.0;
    }
    *(_OWORD *)((char *)v169 + 8) = 0u;
    *(_OWORD *)((char *)&v169[1] + 8) = 0u;
    BYTE8(v169[2]) = 0;
    long long v170 = 0u;
    long long v171 = 0u;
    *(void *)&long long v172 = v146;
    *((void *)&v172 + 1) = v154;
    *(void *)&long long v173 = v149;
    *((void *)&v173 + 1) = *((void *)&v145 + 1);
    LODWORD(v174) = 0;
    *(void *)((char *)&v174 + 4) = __PAIR64__(LODWORD(v125), v145);
    HIDWORD(v174) = 0;
    LOWORD(v175[0]) = 0;
    *(void *)&v175[1] = 0;
    *((void *)&v175[0] + 1) = 0;
    *(void *)((char *)&v175[1] + 5) = 0;
    sub_1DCD32C3C((uint64_t)v185, (uint64_t)&v176);
    if (sub_1DCD32CA4((uint64_t)&v176) != 1)
    {
      uint64_t v126 = sub_1DCD9C35C(v176);
      uint64_t v128 = v127;
      if (v126 == sub_1DCD9C35C(v124) && v128 == v129)
      {
        swift_bridgeObjectRelease_n();
LABEL_41:
        v167[6] = v182;
        v167[7] = v183;
        v168[0] = v184[0];
        *(_OWORD *)((char *)v168 + 13) = *(_OWORD *)((char *)v184 + 13);
        v167[2] = v178;
        v167[3] = v179;
        v167[4] = v180;
        v167[5] = v181;
        v167[0] = v176;
        v167[1] = v177;
        long long v164 = v173;
        long long v165 = v174;
        v166[0] = v175[0];
        *(_OWORD *)((char *)v166 + 13) = *(_OWORD *)((char *)v175 + 13);
        long long v160 = v169[2];
        long long v161 = v170;
        long long v162 = v171;
        long long v163 = v172;
        long long v158 = v169[0];
        long long v159 = v169[1];
        sub_1DCF22BB0((uint64_t)v167, &v158, (uint64_t)v156);
        sub_1DCD5D8A8((uint64_t)v185, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
        sub_1DCD32DD4((uint64_t)v169);
        long long v164 = v156[6];
        long long v165 = v156[7];
        v166[0] = v157[0];
        *(_OWORD *)((char *)v166 + 13) = *(_OWORD *)((char *)v157 + 13);
        long long v160 = v156[2];
        long long v161 = v156[3];
        long long v162 = v156[4];
        long long v163 = v156[5];
        long long v131 = v156[0];
        long long v132 = v156[1];
LABEL_44:
        long long v158 = v131;
        long long v159 = v132;
        faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v158);
        sub_1DCD32C3C((uint64_t)&v158, (uint64_t)v167);
        sub_1DCD32C3C((uint64_t)v167, v153);
        return swift_bridgeObjectRelease();
      }
      char v130 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v130) {
        goto LABEL_41;
      }
      sub_1DCD5D8A8((uint64_t)v185, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
    }
    long long v164 = v173;
    long long v165 = v174;
    v166[0] = v175[0];
    *(_OWORD *)((char *)v166 + 13) = *(_OWORD *)((char *)v175 + 13);
    long long v160 = v169[2];
    long long v161 = v170;
    long long v162 = v171;
    long long v163 = v172;
    long long v131 = v169[0];
    long long v132 = v169[1];
    goto LABEL_44;
  }
  uint64_t v155 = v83;
  sub_1DCD32F20(v145, *((uint64_t *)&v145 + 1), v77, *((uint64_t *)&v77 + 1), v149, v78, (uint64_t)v154);
  uint64_t v84 = v141;
  sub_1DCDB40EC(v141);
  uint64_t v85 = v143;
  sub_1DCDB4300(v143);
  uint64_t v86 = v151;
  long long v87 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
  v150 += 8;
  v87(v84, v151);
  uint64_t v88 = v76;
  uint64_t v89 = (uint64_t)v136;
  sub_1DCF1DEF8(v88, (uint64_t)v136, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
  uint64_t v90 = sub_1DD048048();
  os_log_type_t v91 = sub_1DD048848();
  if (os_log_type_enabled(v90, v91))
  {
    uint64_t v92 = swift_slowAlloc();
    *(_DWORD *)uint64_t v92 = 134218240;
    *(void *)&long long v176 = v155;
    sub_1DD048A28();
    *(_WORD *)(v92 + 12) = 1024;
    int v93 = *(_DWORD *)(v89 + 12);
    sub_1DCF1DF60(v89, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
    LODWORD(v176) = v93;
    sub_1DD048A28();
    _os_log_impl(&dword_1DCCF9000, v90, v91, "Not enough satisfied inner detection results %ld requires %d.", (uint8_t *)v92, 0x12u);
    uint64_t v94 = v92;
    uint64_t v85 = v143;
    MEMORY[0x1E01B07E0](v94, -1, -1);
  }
  else
  {
    sub_1DCF1DF60(v89, (uint64_t (*)(void))type metadata accessor for NestedNatureDomainAssignmentRule);
  }
  uint64_t v123 = v153;

  v87(v85, v86);
  uint64_t v101 = v123;
LABEL_32:
  sub_1DCD32C3C((uint64_t)v185, v101);
  sub_1DCD5D8A8((uint64_t)v185, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCF1DA48(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851D8);
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1DD04E910;
  uint64_t v10 = v9 + v8;
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_NestedNatureRegionDomainAssignmentRule(0);
  sub_1DCF1DE30(v1 + *(int *)(v11 + 36), (uint64_t)v5);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *(void *)uint64_t v10 = 0;
    *(void *)(v10 + 8) = 0xE000000000000000;
    *(_DWORD *)(v10 + 16) = 0;
    *(_WORD *)(v10 + 20) = 0;
    sub_1DD047BE8();
    sub_1DCF1DE98((uint64_t)v5);
  }
  else
  {
    sub_1DCD68D40((uint64_t)v5, v10);
  }
  uint64_t v12 = *(void *)(v1 + *(int *)(type metadata accessor for NestedNatureDomainAssignmentRule() + 28));
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_1DCD973D8(v13, v9, v12);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v15 = swift_deallocClassInstance();
  MEMORY[0x1F4188790](v15);
  *(void *)&v18[-16] = a1;
  *(void *)&v18[-8] = v1;
  uint64_t v16 = *(void *)(sub_1DCD9EE00((uint64_t)sub_1DCF1DFC0, (uint64_t)&v18[-32], v14) + 16);
  swift_bridgeObjectRelease();
  return v16;
}

BOOL sub_1DCF1DC90(double *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (double *)((char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  CGFloat v9 = a1[1];
  CGFloat v10 = a1[2];
  CGFloat v11 = a1[3];
  CGFloat v12 = a1[4];
  CGFloat v25 = v9;
  CGFloat v26 = v10;
  CGFloat v27 = v11;
  CGFloat v28 = v12;
  long long v13 = a2[1];
  v24[0] = *a2;
  v24[1] = v13;
  float v14 = sub_1DCDBCB60((CGFloat *)v24);
  float v15 = *(float *)(a3 + 8);
  sub_1DCF1DEF8((uint64_t)a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  if (v15 >= v14)
  {
    BOOL v22 = 0;
  }
  else
  {
    CGFloat v16 = *v8;
    CGFloat v17 = v8[1];
    CGFloat v18 = v8[2];
    CGFloat v19 = v8[3];
    v30.origin.double x = *v8;
    v30.origin.double y = v17;
    v30.size.double width = v18;
    v30.size.double height = v19;
    double Width = CGRectGetWidth(v30);
    v31.origin.double x = v16;
    v31.origin.double y = v17;
    v31.size.double width = v18;
    v31.size.double height = v19;
    double v20 = Width * CGRectGetHeight(v31);
    v32.origin.double x = v9;
    v32.origin.double y = v10;
    v32.size.double width = v11;
    v32.size.double height = v12;
    double v21 = CGRectGetWidth(v32);
    v33.origin.double x = v9;
    v33.origin.double y = v10;
    v33.size.double width = v11;
    v33.size.double height = v12;
    BOOL v22 = v21 * CGRectGetHeight(v33) < v20;
  }
  sub_1DCF1DF60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  return v22;
}

uint64_t sub_1DCF1DE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF1DE98(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCF1DEF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCF1DF60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_1DCF1DFC0(double *a1)
{
  return sub_1DCF1DC90(a1, *(_OWORD **)(v1 + 16), *(void *)(v1 + 24));
}

void *sub_1DCF1DFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v10 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v10 - 8);
  CGFloat v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v4 + OBJC_IVAR____TtC18VisualIntelligence16FoodModelFactory_modelInfo;
  uint64_t result = sub_1DCFE5704(*(void *)(a1 + 128), v4 + OBJC_IVAR____TtC18VisualIntelligence16FoodModelFactory_modelInfo, 0x6972656767697274, 0xEA0000000000676ELL, 0x74696E676F636572, 0xEB000000006E6F69);
  if (!v5)
  {
    float v15 = result;
    CGFloat v27 = a4;
    int v26 = *(unsigned __int8 *)(v4 + 16);
    sub_1DCD56CC8(v13, (uint64_t)v12);
    uint64_t v28 = a2;
    if (v15)
    {
      uint64_t v16 = swift_bridgeObjectRetain();
      uint64_t v32 = sub_1DCFA34B0(v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = 0;
    }
    v25[1] = type metadata accessor for DomainModelRequestFactory();
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    sub_1DCD8190C(a1, (uint64_t)v30);
    uint64_t v18 = swift_allocObject();
    long long v19 = v30[7];
    *(_OWORD *)(v18 + 136) = v30[6];
    *(_OWORD *)(v18 + 152) = v19;
    *(_OWORD *)(v18 + 168) = v30[8];
    long long v20 = v30[3];
    *(_OWORD *)(v18 + 72) = v30[2];
    *(_OWORD *)(v18 + 88) = v20;
    long long v21 = v30[5];
    *(_OWORD *)(v18 + 104) = v30[4];
    *(_OWORD *)(v18 + 120) = v21;
    long long v22 = v30[1];
    *(_OWORD *)(v18 + 40) = v30[0];
    *(void *)(v18 + 16) = v28;
    *(void *)(v18 + 24) = a3;
    *(void *)(v18 + 32) = v17;
    uint64_t v23 = v31;
    *(_OWORD *)(v18 + 56) = v22;
    *(void *)(v18 + 184) = v23;
    *(void *)(v18 + 192) = v15;
    uint64_t v24 = *(void *)(a1 + 120);
    swift_retain();
    swift_retain();
    sub_1DCF3B26C(v24);
    sub_1DCFE2DE4((uint64_t)v29);
    if (v26)
    {
      if (v26 == 1) {
        sub_1DCFE4EA0(a1, (uint64_t)v29, 0, v32, (uint64_t)sub_1DCF1ED8C, v18, v27);
      }
      else {
        sub_1DCFE531C(a1, (uint64_t)v29, 0, (uint64_t)sub_1DCF1ED8C, v18, v27);
      }
    }
    else
    {
      sub_1DCFE4BD4((double *)a1, (uint64_t)v29, (uint64_t)v12, 0, (uint64_t)sub_1DCF1ED8C, v18, v27);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    sub_1DCD59AB4((uint64_t)v12);
    swift_release();
    swift_release();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1DCF1E320(uint64_t a1, void (*a2)(void **), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1DCE95BF4(a1, (uint64_t)v16);
  if (v17 == 1)
  {
    id v9 = v16[0];
    id v11 = v16[0];
    long long v12 = 0u;
    long long v13 = 0u;
    uint64_t v14 = 0;
    char v15 = v17;
    id v10 = v16[0];
    a2(&v11);
  }
  else
  {
    sub_1DCD3A4DC((long long *)v16, (uint64_t)&v11);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1DCF1E420(&v11, a5, a6, a2);
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
}

uint64_t sub_1DCF1E420(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void **))
{
  uint64_t v8 = v4 + OBJC_IVAR____TtC18VisualIntelligence16FoodModelFactory_modelInfo;
  uint64_t v9 = type metadata accessor for MLModelInfo(0);
  sub_1DCD25CD8(*(unsigned __int8 *)(v8 + *(int *)(v9 + 32)), v26);
  uint64_t v10 = *(void *)(a2 + 144);
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  sub_1DCEA469C((uint64_t)v26, v10);
  swift_release();
  sub_1DCF1E5CC(a1, a2, a3, (uint64_t)&v19);
  long long v12 = v19;
  uint64_t v11 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  char v25 = 0;
  sub_1DCD43350(v19, v20, v21, v22, v23, v24, 0);
  a4(&v19);
  sub_1DCD433A0(v12, v11, v13, v14, v15, v16, 0);
  sub_1DCEA3DA4();
  sub_1DCD433A0(v12, v11, v13, v14, v15, v16, 0);
  return swift_release();
}

uint64_t sub_1DCF1E5CC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)&long long v55 = a3;
  uint64_t v53 = a4;
  *(void *)&long long v54 = a2;
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v10 - 8);
  long long v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  if (!v4)
  {
    uint64_t v51 = v12;
    uint64_t v52 = result;
    if (*(void *)(*(void *)(result + 24) + 16) == 2)
    {
      uint64_t v19 = v56;
      uint64_t v20 = v56 + OBJC_IVAR____TtC18VisualIntelligence16FoodModelFactory_modelInfo;
      sub_1DCD56CC8(v56 + OBJC_IVAR____TtC18VisualIntelligence16FoodModelFactory_modelInfo, (uint64_t)v15);
      uint64_t v21 = *(void *)(v19 + OBJC_IVAR____TtC18VisualIntelligence16FoodModelFactory_postProcessor);
      if ((void)v55)
      {
        uint64_t v22 = *(void *)(v55 + 16);
        swift_retain();
        if (v22)
        {
          sub_1DCEAD1A4(0x797469746E656469, 0xE800000000000000);
          if (v23) {
            swift_bridgeObjectRetain();
          }
        }
      }
      else
      {
        swift_retain();
      }
      uint64_t v29 = sub_1DCD7F1CC(v52, 0x797469746E656469, 0xE800000000000000, (uint64_t)v15, 2, 0, (uint64_t (*)(uint64_t, id, uint64_t))sub_1DCEC3BFC, v21);
      uint64_t v31 = v30;
      uint64_t v33 = v32;
      sub_1DCD59AB4((uint64_t)v15);
      swift_release();
      uint64_t v49 = v29;
      uint64_t v50 = v33;
      uint64_t v56 = v31;
      swift_bridgeObjectRelease();
      uint64_t v34 = (uint64_t)v51;
      sub_1DCD56CC8(v20, (uint64_t)v51);
      if ((void)v55)
      {
        uint64_t v35 = v53;
        uint64_t v36 = v54;
        if (*(void *)(v55 + 16))
        {
          sub_1DCEAD1A4(0x6E69646465626D65, 0xE900000000000067);
          if (v37) {
            swift_bridgeObjectRetain();
          }
        }
      }
      else
      {
        uint64_t v35 = v53;
        uint64_t v36 = v54;
      }
      uint64_t v38 = sub_1DCFE2268(v52, 0x6E69646465626D65, 0xE900000000000067);
      uint64_t v40 = v39;
      uint64_t v42 = v41;
      sub_1DCD59AB4(v34);
      swift_bridgeObjectRelease();
      long long v55 = *(_OWORD *)(v36 + 72);
      uint64_t v43 = *(void *)(v36 + 88);
      uint64_t v44 = *(void *)(v36 + 96);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A68);
      uint64_t v45 = swift_allocObject();
      long long v54 = xmmword_1DD04E910;
      *(_OWORD *)(v45 + 16) = xmmword_1DD04E910;
      *(void *)(v45 + 32) = v38;
      *(void *)(v45 + 40) = v40;
      *(void *)(v45 + 48) = v42;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A80);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v54;
      uint64_t v47 = v56;
      *(void *)(v46 + 32) = v49;
      *(void *)(v46 + 40) = v47;
      *(void *)(v46 + 48) = v50;
      uint64_t result = swift_release();
      *(_OWORD *)uint64_t v35 = v55;
      *(void *)(v35 + 16) = v43;
      *(void *)(v35 + 24) = v44;
      *(void *)(v35 + 32) = v45;
      *(void *)(v35 + 40) = v46;
    }
    else
    {
      uint64_t v24 = v6;
      sub_1DCDB40EC((uint64_t)v9);
      char v25 = sub_1DD048048();
      os_log_type_t v26 = sub_1DD048858();
      if (os_log_type_enabled(v25, v26))
      {
        CGFloat v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)CGFloat v27 = 0;
        _os_log_impl(&dword_1DCCF9000, v25, v26, "Food model expected 2 outputs", v27, 2u);
        MEMORY[0x1E01B07E0](v27, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
      sub_1DCD3A548();
      swift_allocError();
      *(void *)uint64_t v28 = 0xD000000000000013;
      *(void *)(v28 + 8) = 0x80000001DD06E450;
      *(unsigned char *)(v28 + 16) = 4;
      swift_willThrow();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1DCF1EAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCFE5978(a2, a3, v3 + OBJC_IVAR____TtC18VisualIntelligence16FoodModelFactory_modelInfo) & 1;
}

uint64_t sub_1DCF1EB20()
{
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence16FoodModelFactory_modelInfo);
  swift_release();
  return swift_release();
}

uint64_t sub_1DCF1EB70()
{
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence16FoodModelFactory_modelInfo);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCF1EBF4()
{
  return type metadata accessor for FoodModelFactory();
}

uint64_t type metadata accessor for FoodModelFactory()
{
  uint64_t result = qword_1EBE86E60;
  if (!qword_1EBE86E60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCF1EC48()
{
  uint64_t result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCF1ECF4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCF1ED2C()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 200, 7);
}

void sub_1DCF1ED8C(uint64_t a1)
{
  sub_1DCF1E320(a1, *(void (**)(void **))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40, *(void *)(v1 + 192));
}

uint64_t sub_1DCF1EDA0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *a1;
  *(unsigned char *)(a3 + 16) = *a1;
  sub_1DCD56CC8(a2, a3 + OBJC_IVAR____TtC18VisualIntelligence16FoodModelFactory_modelInfo);
  sub_1DCD56CC8(a2, (uint64_t)v8);
  type metadata accessor for FoodClassificationPostProcessor();
  swift_allocObject();
  swift_retain();
  *(void *)(a3 + OBJC_IVAR____TtC18VisualIntelligence16FoodModelFactory_postProcessor) = sub_1DCD598C4((uint64_t)v8);
  char v13 = v9;
  sub_1DCD56CC8(a2, (uint64_t)v8);
  type metadata accessor for CachedCoreMLModelProvider();
  swift_allocObject();
  uint64_t v10 = sub_1DCF3D39C(&v13, (uint64_t)v8, 16, 0, 0, 0);
  sub_1DCD59AB4(a2);
  *(void *)(a3 + OBJC_IVAR____TtC18VisualIntelligence16FoodModelFactory_coreMLModelProvider) = v10;
  return a3;
}

uint64_t sub_1DCF1EEE0@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  long long v113 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for JsonFileMapper();
  sub_1DD0463C8();
  uint64_t v6 = sub_1DD046478();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  unint64_t v7 = sub_1DCEC598C((uint64_t)v5);
  sub_1DCD2479C((uint64_t)v5, &qword_1EBE848E0);
  unint64_t v133 = sub_1DCDB913C(MEMORY[0x1E4FBC860]);
  int64_t v8 = 0;
  unint64_t v9 = v7 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v7 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v107 = (char *)&v140 + 2;
  unint64_t v112 = (char *)&v140 + 3;
  unint64_t v117 = v7;
  unint64_t v116 = v7 + 64;
  int64_t v115 = v13;
  if (!v12) {
    goto LABEL_7;
  }
  while (2)
  {
    while (1)
    {
      uint64_t v142 = (v12 - 1) & v12;
      unint64_t v14 = __clz(__rbit64(v12)) | (v8 << 6);
LABEL_5:
      uint64_t v15 = 16 * v14;
      uint64_t v16 = (unint64_t *)(*(void *)(v7 + 48) + v15);
      unint64_t v17 = *v16;
      unint64_t v18 = v16[1];
      uint64_t v19 = (void *)(*(void *)(v7 + 56) + v15);
      uint64_t v21 = (void *)*v19;
      uint64_t v20 = v19[1];
      uint64_t v140 = v21;
      uint64_t v141 = v20;
      uint64_t v138 = 44;
      unint64_t v139 = 0xE100000000000000;
      sub_1DCD21A84();
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1DD048A48();
      uint64_t v23 = *(void *)(v22 + 16);
      if (v23) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v12 = v142;
      if (!v142) {
        goto LABEL_7;
      }
    }
    int64_t v118 = v8;
    unint64_t v27 = 0;
    unint64_t v28 = HIBYTE(v18) & 0xF;
    unint64_t v29 = v17 >> 8;
    int v30 = (v17 >> 8) - 48;
    unsigned int v31 = (BYTE1(v17) - 48);
    int v32 = v17 - 48;
    unsigned int v33 = (v17 - 48);
    BOOL v34 = v33 > 9;
    BOOL v35 = v33 > 9 || v28 < 2;
    BOOL v36 = v34 || (v18 & 0xF00000000000000) == 0;
    BOOL v37 = v31 > 9;
    int v38 = v30 + 10 * v32;
    int v39 = v31 > 9 || v35;
    int v111 = v30 + 10 * v32;
    if (v31 > 9) {
      int v38 = 0;
    }
    if (v28 == 2) {
      int v40 = 1;
    }
    else {
      int v40 = v39;
    }
    int v127 = v40;
    int v41 = 48 - v29;
    if (v28 == 2)
    {
      BOOL v37 = 1;
      int v42 = (v17 >> 8) - 48;
    }
    else
    {
      int v42 = 0;
    }
    if (v28 == 2) {
      int v43 = 48 - v29;
    }
    else {
      int v43 = 0;
    }
    unsigned int v44 = (BYTE1(v17) - 58);
    BOOL v45 = v44 < 0xF6;
    if (v44 < 0xF6) {
      int v43 = 0;
    }
    BOOL v46 = v31 > 9;
    if (v31 <= 9) {
      int v47 = v42;
    }
    else {
      int v47 = 0;
    }
    int v48 = !v37;
    if (v46) {
      int v48 = 1;
    }
    unint64_t v110 = v28 - 2;
    if (v28 == 2) {
      BOOL v45 = 1;
    }
    BOOL v49 = v44 >= 0xF6;
    uint64_t v137 = v22 + 32;
    uint64_t v50 = v17 & 0xFFFFFFFFFFFFLL;
    int v51 = !v45;
    if (!v49) {
      int v51 = 1;
    }
    uint64_t v132 = v17 & 0xFFFFFFFFFFFFLL;
    if ((v18 & 0x2000000000000000) != 0) {
      uint64_t v50 = HIBYTE(v18) & 0xF;
    }
    uint64_t v136 = v50;
    uint64_t v131 = v18 & 0xFFFFFFFFFFFFFFLL;
    int v52 = 48 - (v17 >> 16) + 10 * v41;
    int v53 = (v17 >> 16) - 48 + 10 * v30;
    int v54 = (BYTE2(v17) - 48) > 9u || v37;
    int v55 = (BYTE2(v17) - 48) > 9u || v45;
    int v108 = v53;
    if (!v54) {
      int v47 = v53;
    }
    int v124 = v47;
    uint64_t v128 = HIBYTE(v18) & 0xF;
    unint64_t v114 = v28 - 3;
    if (v28 == 3) {
      int v56 = 1;
    }
    else {
      int v56 = v54;
    }
    int v122 = v54 & v48;
    int v123 = v56;
    if (v28 == 3) {
      int v57 = 1;
    }
    else {
      int v57 = v55;
    }
    int v121 = v57;
    int v109 = v52;
    if (v55) {
      int v58 = v43;
    }
    else {
      int v58 = v52;
    }
    int v119 = v55 & v51;
    int v120 = v58;
    BOOL v59 = !v36;
    int v60 = v36 || !v35;
    unint64_t v129 = v18;
    uint64_t v130 = (v18 & 0xFFFFFFFFFFFFFFFLL) + 32;
    if (!v59) {
      int v32 = 0;
    }
    if (v35) {
      int v61 = v32;
    }
    else {
      int v61 = v38;
    }
    int v125 = v39 & v60;
    int v126 = v61;
    uint64_t v62 = (void *)v133;
    uint64_t v63 = v17;
    uint64_t v134 = v17;
    uint64_t v135 = v23;
    do
    {
      if (v27 >= *(void *)(v22 + 16))
      {
        __break(1u);
LABEL_138:
        __break(1u);
        goto LABEL_139;
      }
      uint64_t v64 = (uint64_t *)(v137 + 16 * v27);
      uint64_t v65 = *v64;
      uint64_t v66 = v64[1];
      if (!v136)
      {
        swift_bridgeObjectRetain();
LABEL_130:
        swift_bridgeObjectRetain();
        unint64_t v101 = sub_1DCEAD1A4(v65, v66);
        char v103 = v102;
        swift_bridgeObjectRelease();
        if (v103)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v140 = v62;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1DCE8B974();
            uint64_t v62 = v140;
          }
          swift_bridgeObjectRelease();
          sub_1DCFDD934(v101, (uint64_t)v62);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v63 = v134;
        goto LABEL_80;
      }
      if ((v18 & 0x1000000000000000) == 0)
      {
        if ((v18 & 0x2000000000000000) != 0)
        {
          uint64_t v140 = (void *)v63;
          uint64_t v141 = v131;
          if (v63 == 43)
          {
            if (!v128) {
              goto LABEL_142;
            }
            if (v128 != 1)
            {
              LOBYTE(v70) = v124;
              int v71 = v122;
              if (v123) {
                goto LABEL_109;
              }
              unint64_t v76 = v114;
              long long v77 = (unsigned __int8 *)v112;
              LOBYTE(v70) = v108;
              while (1)
              {
                unsigned int v78 = *v77 - 48;
                if (v78 > 9) {
                  break;
                }
                int v79 = (char)(10 * v70);
                if (v79 != 10 * (char)v70) {
                  break;
                }
                int v70 = v79 + (char)v78;
                if ((char)(v79 + v78) != v70) {
                  break;
                }
                int v71 = 0;
                ++v77;
                if (!--v76) {
                  goto LABEL_109;
                }
              }
            }
          }
          else if (v63 == 45)
          {
            if (!v128) {
              goto LABEL_141;
            }
            if (v128 != 1)
            {
              int v71 = v119;
              LOBYTE(v70) = v120;
              if (v121) {
                goto LABEL_109;
              }
              unint64_t v72 = v114;
              uint64_t v73 = (unsigned __int8 *)v112;
              LOBYTE(v70) = v109;
              while (1)
              {
                unsigned int v74 = *v73 - 48;
                if (v74 > 9) {
                  break;
                }
                int v75 = (char)(10 * v70);
                if (v75 != 10 * (char)v70) {
                  break;
                }
                int v70 = v75 - (char)v74;
                if ((char)(v75 - v74) != v70) {
                  break;
                }
                int v71 = 0;
                ++v73;
                if (!--v72) {
                  goto LABEL_109;
                }
              }
            }
          }
          else
          {
            int v71 = v125;
            LOBYTE(v70) = v126;
            if (v127) {
              goto LABEL_109;
            }
            unint64_t v97 = v110;
            os_log_type_t v98 = (unsigned __int8 *)v107;
            LOBYTE(v70) = v111;
            while (1)
            {
              unsigned int v99 = *v98 - 48;
              if (v99 > 9) {
                break;
              }
              int v100 = (char)(10 * v70);
              if (v100 != 10 * (char)v70) {
                break;
              }
              int v70 = v100 + (char)v99;
              if ((char)(v100 + v99) != v70) {
                break;
              }
              int v71 = 0;
              ++v98;
              if (!--v97) {
                goto LABEL_109;
              }
            }
          }
          LOBYTE(v70) = 0;
          int v71 = 1;
        }
        else
        {
          unint64_t v67 = (unsigned __int8 *)v130;
          uint64_t v68 = v132;
          if ((v63 & 0x1000000000000000) == 0) {
            unint64_t v67 = (unsigned __int8 *)sub_1DD048C18();
          }
          unsigned int v69 = sub_1DCD9E0D4(v67, v68, 10);
          LOBYTE(v70) = v69;
          int v71 = (v69 >> 8) & 1;
        }
LABEL_109:
        swift_bridgeObjectRetain();
        if (v71) {
          goto LABEL_130;
        }
        goto LABEL_110;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LOWORD(v70) = sub_1DCD9E1D4(v63, v18, 10);
      swift_bridgeObjectRelease();
      if ((v70 & 0x100) != 0) {
        goto LABEL_130;
      }
LABEL_110:
      unint64_t v133 = v27;
      uint64_t v80 = v22;
      int v81 = v62;
      uint64_t v82 = v2;
      char v83 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v140 = v81;
      uint64_t v84 = v65;
      uint64_t v85 = v66;
      unint64_t v87 = sub_1DCEAD1A4(v65, v66);
      uint64_t v88 = v81[2];
      BOOL v89 = (v86 & 1) == 0;
      uint64_t v90 = v88 + v89;
      if (__OFADD__(v88, v89)) {
        goto LABEL_138;
      }
      char v91 = v86;
      if (v81[3] >= v90)
      {
        if ((v83 & 1) == 0) {
          sub_1DCE8B974();
        }
      }
      else
      {
        sub_1DCE83B00(v90, v83);
        unint64_t v92 = sub_1DCEAD1A4(v84, v85);
        if ((v91 & 1) != (v93 & 1)) {
          goto LABEL_144;
        }
        unint64_t v87 = v92;
      }
      uint64_t v2 = v82;
      uint64_t v62 = v140;
      if (v91)
      {
        *(unsigned char *)(v140[7] + v87) = v70;
      }
      else
      {
        v140[(v87 >> 6) + 8] |= 1 << v87;
        uint64_t v94 = (uint64_t *)(v62[6] + 16 * v87);
        *uint64_t v94 = v84;
        v94[1] = v85;
        *(unsigned char *)(v62[7] + v87) = v70;
        uint64_t v95 = v62[2];
        BOOL v24 = __OFADD__(v95, 1);
        uint64_t v96 = v95 + 1;
        if (v24) {
          goto LABEL_140;
        }
        v62[2] = v96;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v27 = v133;
      uint64_t v63 = v134;
      uint64_t v22 = v80;
      unint64_t v18 = v129;
LABEL_80:
      ++v27;
    }
    while (v27 != v135);
    unint64_t v133 = (unint64_t)v62;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v7 = v117;
    int64_t v8 = v118;
    unint64_t v9 = v116;
    int64_t v13 = v115;
    unint64_t v12 = v142;
    if (v142) {
      continue;
    }
    break;
  }
LABEL_7:
  BOOL v24 = __OFADD__(v8++, 1);
  if (v24)
  {
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
    goto LABEL_143;
  }
  if (v8 >= v13) {
    goto LABEL_136;
  }
  unint64_t v25 = *(void *)(v9 + 8 * v8);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v26 = v8 + 1;
  if (v8 + 1 >= v13) {
    goto LABEL_136;
  }
  unint64_t v25 = *(void *)(v9 + 8 * v26);
  if (v25)
  {
LABEL_16:
    int64_t v8 = v26;
LABEL_17:
    uint64_t v142 = (v25 - 1) & v25;
    unint64_t v14 = __clz(__rbit64(v25)) + (v8 << 6);
    goto LABEL_5;
  }
  int64_t v26 = v8 + 2;
  if (v8 + 2 >= v13) {
    goto LABEL_136;
  }
  unint64_t v25 = *(void *)(v9 + 8 * v26);
  if (v25) {
    goto LABEL_16;
  }
  int64_t v26 = v8 + 3;
  if (v8 + 3 >= v13)
  {
LABEL_136:
    uint64_t result = swift_release();
    unint64_t *v113 = v133;
  }
  else
  {
    unint64_t v25 = *(void *)(v9 + 8 * v26);
    if (v25) {
      goto LABEL_16;
    }
    while (1)
    {
      int64_t v8 = v26 + 1;
      if (__OFADD__(v26, 1)) {
        break;
      }
      if (v8 >= v13) {
        goto LABEL_136;
      }
      unint64_t v25 = *(void *)(v9 + 8 * v8);
      ++v26;
      if (v25) {
        goto LABEL_17;
      }
    }
LABEL_143:
    __break(1u);
LABEL_144:
    uint64_t result = sub_1DD049028();
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCF1F7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v5 = sub_1DD048068();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  _OWORD v24[2] = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE82C50);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1DD0473D8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1DCFE3050();
  int64_t v26 = a3;
  uint64_t v16 = v15;
  if (!v15[2]) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v17 = sub_1DCEAD1A4(v25, a2);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v24[0] = v5;
  v24[1] = v6;
  uint64_t v19 = *(char *)(v16[7] + v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4F89610], v11);
  uint64_t v20 = sub_1DD0473C8();
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  uint64_t result = v21(v14, v11);
  if (v20 != v19)
  {
    sub_1DD0473B8();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      sub_1DCE4B5B8(&v27);
      uint64_t result = v21(v10, v11);
      char v23 = v27;
      goto LABEL_9;
    }
    uint64_t result = sub_1DCD2479C((uint64_t)v10, (uint64_t *)&unk_1EBE82C50);
  }
LABEL_8:
  char v23 = 26;
LABEL_9:
  *int64_t v26 = v23;
  return result;
}

uint64_t type metadata accessor for DomainModelOutputMapper()
{
  return self;
}

ValueMetadata *type metadata accessor for TextLookupResult()
{
  return &type metadata for TextLookupResult;
}

uint64_t type metadata accessor for ImageSizeChecker()
{
  return self;
}

uint64_t sub_1DCF1FC48(void *a1, uint64_t a2)
{
  return sub_1DCF1FC60(a1, a2);
}

uint64_t sub_1DCF1FC60(void *a1, uint64_t a2)
{
  BOOL v45 = a1;
  uint64_t v3 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v44 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v43 = (uint64_t)&v42 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (float *)((char *)&v42 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v20 = a2 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig(0) + 20);
  sub_1DCD57854(v20, (uint64_t)v19);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  int v22 = v21(v19, 1, v3);
  uint64_t result = sub_1DCD578BC((uint64_t)v19);
  if (v22 != 1)
  {
    sub_1DCD57854(v20, (uint64_t)v16);
    if (v21(v16, 1, v3) == 1)
    {
      *(void *)uint64_t v13 = 0;
      *((_DWORD *)v13 + 2) = 0;
      sub_1DD047BE8();
      sub_1DCD578BC((uint64_t)v16);
    }
    else
    {
      sub_1DCF200C4((uint64_t)v16, (uint64_t)v13);
    }
    uint64_t v24 = v45[3];
    uint64_t v25 = v45[4];
    __swift_project_boxed_opaque_existential_1(v45, v24);
    double v26 = (*(double (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
    double v28 = v27;
    float v29 = v27;
    float v30 = *(float *)v13;
    sub_1DCF20004((uint64_t)v13, (uint64_t)v10);
    if (v30 <= v29)
    {
      float v31 = v26;
      float v32 = *v10;
      sub_1DCF20068((uint64_t)v10);
      if (v32 <= v31)
      {
        if (v28 <= 0.0) {
          return sub_1DCF20068((uint64_t)v13);
        }
        float v35 = v26 / v28;
        float v36 = *((float *)v13 + 1);
        uint64_t v37 = v43;
        sub_1DCF20004((uint64_t)v13, v43);
        if (v36 <= 0.0)
        {
          sub_1DCF20068(v37);
          uint64_t v39 = (uint64_t)v44;
        }
        else
        {
          float v38 = *(float *)(v37 + 4);
          sub_1DCF20068(v37);
          uint64_t v39 = (uint64_t)v44;
          if (v38 > v35)
          {
            char v33 = 2;
            goto LABEL_9;
          }
        }
        float v40 = *((float *)v13 + 2);
        sub_1DCF20004((uint64_t)v13, v39);
        if (v40 <= 0.0)
        {
          sub_1DCF20068(v39);
          return sub_1DCF20068((uint64_t)v13);
        }
        float v41 = *(float *)(v39 + 8);
        sub_1DCF20068(v39);
        if (v41 >= v35) {
          return sub_1DCF20068((uint64_t)v13);
        }
        char v33 = 3;
LABEL_9:
        sub_1DCDE4508();
        swift_allocError();
        *BOOL v34 = v33;
        swift_willThrow();
        return sub_1DCF20068((uint64_t)v13);
      }
    }
    else
    {
      sub_1DCF20068((uint64_t)v10);
    }
    char v33 = 1;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1DCF20004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF20068(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCF200C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF20128@<X0>(void *a1@<X8>, float a2@<S0>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v10 = sub_1DD046918();
  uint64_t v46 = v11;
  uint64_t v47 = v10;
  sub_1DD046928();
  sub_1DD046458();
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1DD0468E8();
  uint64_t v42 = v13;
  uint64_t v43 = v12;
  uint64_t v14 = sub_1DD0468E8();
  uint64_t v16 = v15;
  sub_1DD046908();
  sub_1DD046458();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_1DCF204CC();
  uint64_t v18 = sub_1DD046918();
  uint64_t v44 = v19;
  uint64_t v45 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F38);
  uint64_t v20 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C20) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(*(void *)v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v20 + 80);
  uint64_t v22 = swift_allocObject();
  long long v41 = xmmword_1DD04E910;
  *(_OWORD *)(v22 + 16) = xmmword_1DD04E910;
  char v23 = (uint64_t *)(v22 + v21 + v20[14]);
  sub_1DD0465C8();
  *char v23 = sub_1DD046918();
  v23[1] = v24;
  unint64_t v25 = sub_1DCDB8BB4(v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F40);
  double v26 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C10) - 8);
  unint64_t v27 = (*(unsigned __int8 *)(*(void *)v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v26 + 80);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = v41;
  uint64_t v29 = v26[14];
  sub_1DD0465C8();
  *(void *)(v28 + v27 + v29) = MEMORY[0x1E4FBC870];
  unint64_t v30 = sub_1DCDB8DB0(v28);
  *a1 = 0;
  a1[1] = 0;
  uint64_t v31 = v46;
  a1[2] = v47;
  a1[3] = v31;
  float v32 = (int *)type metadata accessor for ObjectKnowledge();
  sub_1DCDBF910((uint64_t)v9, (uint64_t)a1 + v32[6]);
  *(_DWORD *)((char *)a1 + v32[7]) = 1065353216;
  char v33 = (void *)((char *)a1 + v32[8]);
  uint64_t v34 = v42;
  *char v33 = v43;
  v33[1] = v34;
  float v35 = (void *)((char *)a1 + v32[9]);
  *float v35 = v14;
  v35[1] = v16;
  sub_1DCDBF910((uint64_t)v6, (uint64_t)a1 + v32[10]);
  *(void *)((char *)a1 + v32[11]) = v17;
  float v36 = (_OWORD *)((char *)a1 + v32[12]);
  v36[2] = 0u;
  v36[3] = 0u;
  *float v36 = 0u;
  v36[1] = 0u;
  uint64_t v37 = (char *)a1 + v32[13];
  *(void *)uint64_t v37 = 0;
  v37[8] = 1;
  *(_OWORD *)((char *)a1 + v32[14]) = xmmword_1DD0535A0;
  float v38 = (char *)a1 + v32[15];
  *(void *)float v38 = 0;
  *((_WORD *)v38 + 4) = 0;
  uint64_t v39 = v44;
  *((void *)v38 + 2) = v45;
  *((void *)v38 + 3) = v39;
  *((void *)v38 + 4) = v25;
  *((void *)v38 + 5) = 0x3FF0000000000000;
  v38[48] = 0;
  *((void *)v38 + 7) = 0;
  *((void *)v38 + 8) = 0xE000000000000000;
  *((void *)v38 + 9) = 0;
  *((void *)v38 + 10) = 0xE000000000000000;
  *((void *)v38 + 12) = 0;
  *((void *)v38 + 13) = 0;
  *((void *)v38 + 11) = v30;
  *((_DWORD *)v38 + 28) = 0;
  *(float *)((char *)a1 + v32[16]) = a2;
  return (*(uint64_t (**)(void *, void, uint64_t, int *))(*((void *)v32 - 1) + 56))(a1, 0, 1, v32);
}

void *sub_1DCF204CC()
{
  sub_1DD046938();
  uint64_t v0 = sub_1DD048F78();
  uint64_t v2 = v1;
  uint64_t v3 = sub_1DCE9EC84(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v5 = v3[2];
  unint64_t v4 = v3[3];
  if (v5 >= v4 >> 1) {
    uint64_t v3 = sub_1DCE9EC84((void *)(v4 > 1), v5 + 1, 1, v3);
  }
  v3[2] = v5 + 1;
  uint64_t v6 = &v3[8 * v5];
  v6[4] = 0x73676E6976726573;
  v6[5] = 0xE800000000000000;
  v6[6] = v0;
  v6[7] = v2;
  v6[8] = 0x676E69727473;
  v6[9] = 0xE600000000000000;
  v6[10] = 0x3233746E69;
  v6[11] = 0xE500000000000000;
  sub_1DD0468F8();
  uint64_t v7 = sub_1DD048F78();
  uint64_t v9 = v8;
  unint64_t v11 = v3[2];
  unint64_t v10 = v3[3];
  if (v11 >= v10 >> 1) {
    uint64_t v3 = sub_1DCE9EC84((void *)(v10 > 1), v11 + 1, 1, v3);
  }
  v3[2] = v11 + 1;
  uint64_t v12 = &v3[8 * v11];
  v12[4] = 0xD000000000000012;
  v12[5] = 0x80000001DD06E500;
  v12[6] = v7;
  v12[7] = v9;
  v12[8] = 0x676E69727473;
  v12[9] = 0xE600000000000000;
  v12[10] = 0x3233746E69;
  v12[11] = 0xE500000000000000;
  return v3;
}

void *sub_1DCF20664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v10 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v28[0]) = *(unsigned char *)(a1 + 104);
  uint64_t result = sub_1DCF20A64((char *)v28, *(void *)(a1 + 128));
  if (!v5)
  {
    uint64_t v14 = result;
    int v25 = *(unsigned __int8 *)(v4 + 16);
    sub_1DCD56CC8(v4 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_modelInfo, (uint64_t)v12);
    double v26 = a4;
    if (v14)
    {
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v30 = sub_1DCFA34B0(v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = 0;
    }
    uint64_t v24 = type metadata accessor for DomainModelRequestFactory();
    uint64_t v16 = swift_allocObject();
    swift_weakInit();
    sub_1DCD8190C(a1, (uint64_t)v28);
    uint64_t v17 = swift_allocObject();
    long long v18 = v28[7];
    *(_OWORD *)(v17 + 136) = v28[6];
    *(_OWORD *)(v17 + 152) = v18;
    *(_OWORD *)(v17 + 168) = v28[8];
    long long v19 = v28[3];
    *(_OWORD *)(v17 + 72) = v28[2];
    *(_OWORD *)(v17 + 88) = v19;
    long long v20 = v28[5];
    *(_OWORD *)(v17 + 104) = v28[4];
    *(_OWORD *)(v17 + 120) = v20;
    long long v21 = v28[1];
    *(_OWORD *)(v17 + 40) = v28[0];
    *(void *)(v17 + 16) = a2;
    *(void *)(v17 + 24) = a3;
    *(void *)(v17 + 32) = v16;
    uint64_t v22 = v29;
    *(_OWORD *)(v17 + 56) = v21;
    *(void *)(v17 + 184) = v22;
    *(void *)(v17 + 192) = v14;
    uint64_t v23 = *(void *)(a1 + 120);
    swift_retain();
    swift_retain();
    sub_1DCF3B26C(v23);
    sub_1DCFE2DE4((uint64_t)v27);
    if (v25)
    {
      if (v25 == 1) {
        sub_1DCFE4EA0(a1, (uint64_t)v27, 2, v30, (uint64_t)sub_1DCF21544, v17, v26);
      }
      else {
        sub_1DCFE531C(a1, (uint64_t)v27, 2, (uint64_t)sub_1DCF21544, v17, v26);
      }
    }
    else
    {
      sub_1DCFE4BD4((double *)a1, (uint64_t)v27, (uint64_t)v12, 2, (uint64_t)sub_1DCF21544, v17, v26);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    sub_1DCD59AB4((uint64_t)v12);
    swift_release();
    swift_release();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1DCF20964(uint64_t a1, void (*a2)(void **), uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  sub_1DCE95BF4(a1, (uint64_t)v16);
  if (v17 == 1)
  {
    id v9 = v16[0];
    id v11 = v16[0];
    long long v12 = 0u;
    long long v13 = 0u;
    uint64_t v14 = 0;
    char v15 = v17;
    id v10 = v16[0];
    a2(&v11);
  }
  else
  {
    sub_1DCD3A4DC((long long *)v16, (uint64_t)&v11);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1DCF20E7C(&v11, a5, a6, a2);
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  }
}

void *sub_1DCF20A64(char *a1, char a2)
{
  char v4 = *a1;
  if (sub_1DCD9C35C(*a1) == 0x65727574616ELL && v5 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  char v7 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_16:
    uint64_t v12 = v2 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_modelInfo;
    uint64_t v17 = 0xD000000000000010;
    uint64_t v14 = 0x80000001DD06E5B0;
    uint64_t v15 = 0x80000001DD06E5D0;
    char v16 = a2;
    unint64_t v13 = 0xD000000000000011;
    return sub_1DCFE5704(v16, v12, v17, v14, v13, v15);
  }
  if (sub_1DCD9C35C(v4) == 0x73656C6974706572 && v8 == 0xE800000000000000) {
    goto LABEL_13;
  }
  char v10 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_14:
    uint64_t v12 = v2 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_modelInfo;
    unint64_t v13 = 0xD000000000000012;
    uint64_t v14 = 0x80000001DD06E570;
    uint64_t v15 = 0x80000001DD06E590;
    char v16 = a2;
    uint64_t v17 = 0xD000000000000011;
    return sub_1DCFE5704(v16, v12, v17, v14, v13, v15);
  }
  if (sub_1DCD9C35C(v4) == 0x736C616D6D616DLL && v11 == 0xE700000000000000) {
    goto LABEL_13;
  }
  char v19 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_14;
  }
  if (sub_1DCD9C35C(v4) == 0x7364726962 && v20 == 0xE500000000000000) {
    goto LABEL_13;
  }
  char v21 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_14;
  }
  if (sub_1DCD9C35C(v4) == 0x73746365736E69 && v22 == 0xE700000000000000)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v23 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v23) {
    goto LABEL_14;
  }
  if (sub_1DCD9C35C(v4) == 1936158564 && v24 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_29:
    uint64_t v12 = v2 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_modelInfo;
    char v16 = a2;
    uint64_t v17 = 0x676972745F676F64;
    uint64_t v14 = 0xEE00676E69726567;
    unsigned int v26 = 1600614244;
LABEL_30:
    unint64_t v13 = v26 | 0x6F63657200000000;
    uint64_t v15 = 0xEF6E6F6974696E67;
    return sub_1DCFE5704(v16, v12, v17, v14, v13, v15);
  }
  char v25 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_29;
  }
  if (sub_1DCD9C35C(v4) == 1937006947 && v27 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_35:
    uint64_t v12 = v2 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_modelInfo;
    char v16 = a2;
    uint64_t v17 = 0x676972745F746163;
    uint64_t v14 = 0xEE00676E69726567;
    unsigned int v26 = 1601462627;
    goto LABEL_30;
  }
  char v28 = sub_1DD048FA8();
  swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_35;
  }
  return 0;
}

uint64_t sub_1DCF20E7C(void *a1, uint64_t a2, unint64_t a3, void (*a4)(void **))
{
  uint64_t v8 = v4 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_modelInfo;
  uint64_t v9 = type metadata accessor for MLModelInfo(0);
  sub_1DCD25CD8(*(unsigned __int8 *)(v8 + *(int *)(v9 + 32)), v26);
  uint64_t v10 = *(void *)(a2 + 144);
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  sub_1DCEA469C((uint64_t)v26, v10);
  swift_release();
  sub_1DCF21028(a1, a2, a3, (uint64_t)&v19);
  uint64_t v12 = v19;
  uint64_t v11 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  char v25 = 0;
  sub_1DCD43350(v19, v20, v21, v22, v23, v24, 0);
  a4(&v19);
  sub_1DCD433A0(v12, v11, v13, v14, v15, v16, 0);
  sub_1DCEA3DA4();
  sub_1DCD433A0(v12, v11, v13, v14, v15, v16, 0);
  return swift_release();
}

uint64_t sub_1DCF21028@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v10 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1DCD7FFC4(a1, *(void *)(a2 + 112), (unsigned char *)a2, a3);
  if (!v5)
  {
    *(void *)&long long v28 = result;
    uint64_t v29 = a4;
    uint64_t v14 = a1[3];
    uint64_t v15 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v14);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
    sub_1DCD56CC8(v4 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_modelInfo, (uint64_t)v12);
    if (a3)
    {
      uint64_t v17 = v29;
      if (*(void *)(a3 + 16))
      {
        sub_1DCEAD1A4(0x6E69646465626D65, 0xE900000000000067);
        if (v18) {
          swift_bridgeObjectRetain();
        }
      }
    }
    else
    {
      uint64_t v17 = v29;
    }
    uint64_t v19 = v28;
    uint64_t v20 = sub_1DCFE2268(v16, 0x6E69646465626D65, 0xE900000000000067);
    uint64_t v22 = v21;
    uint64_t v23 = (uint64_t)v12;
    uint64_t v25 = v24;
    sub_1DCD59AB4(v23);
    swift_release();
    swift_bridgeObjectRelease();
    long long v28 = *(_OWORD *)(a2 + 72);
    uint64_t v26 = *(void *)(a2 + 88);
    uint64_t v27 = *(void *)(a2 + 96);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A68);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1DD04E910;
    *(void *)(result + 32) = v20;
    *(void *)(result + 40) = v22;
    *(void *)(result + 48) = v25;
    *(_OWORD *)uint64_t v17 = v28;
    *(void *)(v17 + 16) = v26;
    *(void *)(v17 + 24) = v27;
    *(void *)(v17 + 32) = result;
    *(void *)(v17 + 40) = v19;
  }
  return result;
}

uint64_t sub_1DCF21294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCFE6458(a2, a3, v3 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_modelInfo) & 1;
}

uint64_t sub_1DCF212D8()
{
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_modelInfo);
  swift_release();
  return swift_release();
}

uint64_t sub_1DCF21328()
{
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_modelInfo);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCF213AC()
{
  return type metadata accessor for NatureworldModelFactory();
}

uint64_t type metadata accessor for NatureworldModelFactory()
{
  uint64_t result = qword_1EBE85A50;
  if (!qword_1EBE85A50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCF21400()
{
  uint64_t result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCF214AC()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCF214E4()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 200, 7);
}

void sub_1DCF21544(uint64_t a1)
{
  sub_1DCF20964(a1, *(void (**)(void **))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40, *(void *)(v1 + 192));
}

uint64_t sub_1DCF21558(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *a1;
  *(unsigned char *)(a3 + 16) = *a1;
  sub_1DCD56CC8(a2, a3 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_modelInfo);
  sub_1DCD56CC8(a2, (uint64_t)v8);
  type metadata accessor for ClassificationNatureworldPostProcessor();
  swift_allocObject();
  swift_retain();
  *(void *)(a3 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_postProcessor) = sub_1DCD7F898((uint64_t)v8);
  char v13 = v9;
  sub_1DCD56CC8(a2, (uint64_t)v8);
  type metadata accessor for CachedCoreMLModelProvider();
  swift_allocObject();
  uint64_t v10 = sub_1DCF3D39C(&v13, (uint64_t)v8, 16, 0, 0, 0);
  sub_1DCD59AB4(a2);
  *(void *)(a3 + OBJC_IVAR____TtC18VisualIntelligence23NatureworldModelFactory_coreMLModelProvider) = v10;
  return a3;
}

uint64_t sub_1DCF21698@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  uint64_t v53 = v7;
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v46 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v49 = (uint64_t)&v46 - v14;
  uint64_t v15 = sub_1DD048468();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v54 = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0);
  MEMORY[0x1F4188790](v54);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v46 - v19;
  id v21 = objc_msgSend(self, sel_defaultManager);
  int v51 = (uint8_t *)a1;
  uint64_t v22 = (void *)sub_1DD0483D8();
  id v23 = objc_msgSend(v21, sel_contentsAtPath_, v22);

  if (v23)
  {
    uint64_t v50 = a3;
    uint64_t v24 = sub_1DD0464E8();
    unint64_t v26 = v25;

    uint64_t v27 = sub_1DCF47ED8(v24, v26);
    uint64_t v46 = v9;
    uint64_t v34 = v27;
    unint64_t v36 = v35;
    sub_1DCD21954(v24, v26);

    sub_1DD048448();
    uint64_t v47 = v34;
    unint64_t v48 = v36;
    sub_1DD048428();
    sub_1DCF21F20();
    memset(v56, 0, sizeof(v56));
    uint64_t v57 = 0;
    sub_1DD047E58();
    uint64_t v37 = v49;
    sub_1DCDB40EC(v49);
    sub_1DCF21F78((uint64_t)v20, (uint64_t)v17);
    float v38 = sub_1DD048048();
    os_log_type_t v39 = sub_1DD048848();
    if (os_log_type_enabled(v38, v39))
    {
      long long v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)long long v41 = 136315138;
      uint64_t v58 = v42;
      int v51 = v41 + 4;
      swift_beginAccess();
      type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1DD0482F8();
      unint64_t v45 = v44;
      swift_bridgeObjectRelease();
      uint64_t v55 = sub_1DCED7FA0(v43, v45, &v58);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCEA57CC((uint64_t)v17);
      _os_log_impl(&dword_1DCCF9000, v38, v39, "Loaded ParseConfig with configs for the following domains: %s", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v42, -1, -1);
      MEMORY[0x1E01B07E0](v41, -1, -1);
      sub_1DCD21954(v47, v48);

      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v49, v52);
    }
    else
    {
      sub_1DCEA57CC((uint64_t)v17);
      sub_1DCD21954(v47, v48);

      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v37, v52);
    }
    return sub_1DCF21FDC((uint64_t)v20, v50);
  }
  else
  {

    sub_1DCDB40EC((uint64_t)v12);
    swift_bridgeObjectRetain_n();
    long long v28 = sub_1DD048048();
    os_log_type_t v29 = sub_1DD048858();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(void *)&v56[0] = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_1DCED7FA0((uint64_t)v51, a2, (uint64_t *)v56);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v28, v29, "Failed to load data at path %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v31, -1, -1);
      MEMORY[0x1E01B07E0](v30, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v52);
    sub_1DD047BE8();
    uint64_t v32 = *(int *)(v54 + 20);
    if (qword_1EBE84BC8 != -1) {
      swift_once();
    }
    *(void *)(a3 + v32) = qword_1EBE84BC0;
    return swift_retain();
  }
}

unint64_t sub_1DCF21F20()
{
  unint64_t result = qword_1EBE84BD8;
  if (!qword_1EBE84BD8)
  {
    type metadata accessor for Argos_Protos_Queryflow_ParseConfig(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84BD8);
  }
  return result;
}

uint64_t sub_1DCF21F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF21FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF22040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v215 = a1;
  uint64_t v5 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v211 = (uint64_t)&v209 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v210 = (uint64_t *)((char *)&v209 - v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v209 - v10);
  uint64_t v212 = a2;
  sub_1DCD36E7C(a2, (uint64_t)&v209 - v10);
  uint64_t v12 = *(void *)(v11[6] + 16);
  uint64_t v13 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v213 = a3;
  uint64_t v214 = v11;
  if (v12)
  {
    uint64_t v14 = (_OWORD *)swift_bridgeObjectRetain();
    long long v15 = v14[9];
    long long v252 = v14[8];
    long long v253 = v15;
    *(_OWORD *)unint64_t v254 = v14[10];
    *(_OWORD *)&v254[13] = *(_OWORD *)((char *)v14 + 173);
    long long v16 = v14[5];
    long long v248 = v14[4];
    long long v249 = v16;
    long long v17 = v14[7];
    long long v250 = v14[6];
    long long v251 = v17;
    long long v18 = v14[2];
    long long v19 = v14[3];
    long long v233 = v14;
    long long v246 = v18;
    long long v247 = v19;
    uint64_t v20 = v18;
    sub_1DCD32CC8((uint64_t)&v246);
    sub_1DCD32CC8((uint64_t)&v246);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v234[0] = v13;
    unint64_t v23 = sub_1DCEAD454(v20);
    uint64_t v24 = v13[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (!__OFADD__(v24, v25))
    {
      char v27 = v22;
      uint64_t v28 = 12;
      do
      {
        if (v13[3] >= v26)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if ((v27 & 1) == 0) {
              goto LABEL_12;
            }
          }
          else
          {
            sub_1DCE88568();
            if ((v27 & 1) == 0) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          sub_1DCE7DBB0(v26, isUniquelyReferenced_nonNull_native & 1);
          uint64_t v29 = sub_1DCEAD454(v20);
          if ((v27 & 1) != (v30 & 1)) {
            goto LABEL_69;
          }
          unint64_t v23 = v29;
          if ((v27 & 1) == 0)
          {
LABEL_12:
            uint64_t v13 = *(void **)&v234[0];
            *(void *)(*(void *)&v234[0] + 8 * (v23 >> 6) + 64) |= 1 << v23;
            *(unsigned char *)(v13[6] + v23) = v20;
            uint64_t v46 = (_OWORD *)(v13[7] + 160 * v23);
            long long v47 = *(_OWORD *)&v254[13];
            long long v49 = v253;
            long long v48 = *(_OWORD *)v254;
            v46[6] = v252;
            v46[7] = v49;
            v46[8] = v48;
            *(_OWORD *)((char *)v46 + 141) = v47;
            long long v51 = v250;
            long long v50 = v251;
            long long v52 = v249;
            v46[2] = v248;
            v46[3] = v52;
            v46[4] = v51;
            v46[5] = v50;
            long long v53 = v247;
            *uint64_t v46 = v246;
            v46[1] = v53;
            uint64_t v54 = v13[2];
            BOOL v55 = __OFADD__(v54, 1);
            uint64_t v56 = v54 + 1;
            if (v55) {
              goto LABEL_65;
            }
            v13[2] = v56;
            goto LABEL_14;
          }
        }
        uint64_t v13 = *(void **)&v234[0];
        uint64_t v31 = (long long *)(*(void *)(*(void *)&v234[0] + 56) + 160 * v23);
        long long v32 = v31[1];
        long long v237 = *v31;
        long long v238 = v32;
        long long v33 = v31[5];
        long long v35 = v31[2];
        long long v34 = v31[3];
        long long v241 = v31[4];
        long long v242 = v33;
        long long v239 = v35;
        long long v240 = v34;
        long long v37 = v31[7];
        long long v36 = v31[8];
        long long v38 = v31[6];
        *(_OWORD *)((char *)v245 + 13) = *(long long *)((char *)v31 + 141);
        long long v244 = v37;
        v245[0] = v36;
        long long v243 = v38;
        sub_1DCD32DD4((uint64_t)&v237);
        long long v39 = v247;
        *uint64_t v31 = v246;
        v31[1] = v39;
        long long v40 = v251;
        long long v42 = v248;
        long long v41 = v249;
        v31[4] = v250;
        v31[5] = v40;
        v31[2] = v42;
        v31[3] = v41;
        long long v44 = v253;
        long long v43 = *(_OWORD *)v254;
        long long v45 = v252;
        *(long long *)((char *)v31 + 141) = *(_OWORD *)&v254[13];
        v31[7] = v44;
        v31[8] = v43;
        v31[6] = v45;
LABEL_14:
        swift_bridgeObjectRelease();
        sub_1DCD32DD4((uint64_t)&v246);
        if (!--v12) {
          goto LABEL_18;
        }
        long long v57 = v233[v28 + 1];
        long long v246 = v233[v28];
        long long v247 = v57;
        long long v58 = v233[v28 + 2];
        long long v59 = v233[v28 + 3];
        long long v60 = v233[v28 + 5];
        long long v250 = v233[v28 + 4];
        long long v251 = v60;
        long long v248 = v58;
        long long v249 = v59;
        long long v61 = v233[v28 + 6];
        long long v62 = v233[v28 + 7];
        long long v63 = v233[v28 + 8];
        *(_OWORD *)&v254[13] = *(_OWORD *)((char *)&v233[v28 + 8] + 13);
        long long v253 = v62;
        *(_OWORD *)unint64_t v254 = v63;
        long long v252 = v61;
        uint64_t v20 = v246;
        sub_1DCD32CC8((uint64_t)&v246);
        sub_1DCD32CC8((uint64_t)&v246);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v234[0] = v13;
        unint64_t v23 = sub_1DCEAD454(v20);
        char v27 = v64;
        uint64_t v65 = v13[2];
        BOOL v66 = (v64 & 1) == 0;
        v28 += 10;
        uint64_t v26 = v65 + v66;
      }
      while (!__OFADD__(v65, v66));
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v11 = v214;
  }
  uint64_t v67 = v215;
  uint64_t v68 = *(void *)(v215 + 48);
  uint64_t v69 = *(void *)(v68 + 16);
  if (!v69)
  {
LABEL_56:
    uint64_t v190 = (float *)v11;
    uint64_t v191 = swift_bridgeObjectRetain();
    sub_1DCFDE654(v191);
    uint64_t v192 = swift_bridgeObjectRetain();
    sub_1DCFDE4FC(v192);
    uint64_t v193 = swift_bridgeObjectRetain();
    sub_1DCFDE3A4(v193);
    uint64_t v194 = v11[10];
    uint64_t v195 = v11[11];
    uint64_t v196 = v11[12];
    uint64_t v197 = v210;
    sub_1DCD36E7C(v67, (uint64_t)v210);
    long long v233 = (_OWORD *)v194;
    uint64_t v198 = v195;
    uint64_t v199 = v196;
    if (!v195)
    {
      uint64_t v198 = v197[11];
      uint64_t v199 = v197[12];
      long long v233 = (_OWORD *)v197[10];
      sub_1DCD55D64((uint64_t)v233, v198);
    }
    sub_1DCD55D64(v194, v195);
    sub_1DCD96118((uint64_t)v197);
    sub_1DCD781D0(*((void *)v190 + 10), *((void *)v190 + 11));
    *((void *)v190 + 10) = v233;
    *((void *)v190 + 11) = v198;
    *((void *)v190 + 12) = v199;
    uint64_t v200 = swift_bridgeObjectRetain();
    uint64_t v201 = sub_1DCF4D17C(v200);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *((void *)v190 + 6) = v201;
    float v202 = v190[18];
    if (v202 <= *(float *)(v67 + 72)) {
      float v202 = *(float *)(v67 + 72);
    }
    v190[18] = v202;
    char v203 = *(unsigned char *)(v67 + 104);
    uint64_t v204 = v211;
    sub_1DCD36E7C(v212, v211);
    if (v203) {
      char v205 = 1;
    }
    else {
      char v205 = *(unsigned char *)(v204 + 104);
    }
    sub_1DCD96118(v204);
    uint64_t v206 = (uint64_t)v214;
    *((unsigned char *)v214 + 104) = v205;
    uint64_t v207 = swift_bridgeObjectRetain();
    sub_1DCFDE244(v207);
    sub_1DCD36E7C(v206, v213);
    swift_bridgeObjectRelease();
    return sub_1DCD96118(v206);
  }
  swift_bridgeObjectRetain();
  long long v70 = *(_OWORD *)(v68 + 144);
  long long v252 = *(_OWORD *)(v68 + 128);
  long long v253 = v70;
  *(_OWORD *)unint64_t v254 = *(_OWORD *)(v68 + 160);
  *(_OWORD *)&v254[13] = *(_OWORD *)(v68 + 173);
  long long v71 = *(_OWORD *)(v68 + 80);
  long long v248 = *(_OWORD *)(v68 + 64);
  long long v249 = v71;
  long long v72 = *(_OWORD *)(v68 + 112);
  long long v250 = *(_OWORD *)(v68 + 96);
  long long v251 = v72;
  long long v73 = *(_OWORD *)(v68 + 48);
  long long v246 = *(_OWORD *)(v68 + 32);
  long long v247 = v73;
  uint64_t v74 = v69 - 1;
  uint64_t v75 = 192;
  uint64_t v216 = v68;
  while (1)
  {
    uint64_t v76 = v246;
    uint64_t v77 = v13[2];
    sub_1DCD32CC8((uint64_t)&v246);
    if (!v77) {
      break;
    }
    uint64_t v78 = sub_1DCEAD454(v76);
    if ((v79 & 1) == 0) {
      break;
    }
    LODWORD(v233) = v76;
    uint64_t v217 = v75;
    uint64_t v218 = v74;
    uint64_t v80 = (long long *)(v13[7] + 160 * v78);
    long long v81 = v80[1];
    long long v237 = *v80;
    long long v238 = v81;
    long long v82 = v80[5];
    long long v84 = v80[2];
    long long v83 = v80[3];
    long long v241 = v80[4];
    long long v242 = v82;
    long long v239 = v84;
    long long v240 = v83;
    long long v85 = v80[6];
    long long v86 = v80[7];
    long long v87 = v80[8];
    *(_OWORD *)((char *)v245 + 13) = *(long long *)((char *)v80 + 141);
    long long v244 = v86;
    v245[0] = v87;
    long long v243 = v85;
    float v88 = *((float *)&v253 + 1);
    long long v89 = v242;
    float v90 = *((float *)&v86 + 1);
    uint64_t v92 = *((void *)&v242 + 1);
    uint64_t v91 = v242;
    uint64_t v94 = *((void *)&v85 + 1);
    uint64_t v93 = v85;
    if (*((float *)&v86 + 1) < *((float *)&v253 + 1))
    {
      uint64_t v92 = *((void *)&v251 + 1);
      uint64_t v91 = v251;
      uint64_t v94 = *((void *)&v252 + 1);
      uint64_t v93 = v252;
    }
    sub_1DCD32CC8((uint64_t)&v237);
    uint64_t v231 = v92;
    uint64_t v232 = v91;
    uint64_t v229 = v94;
    uint64_t v230 = v93;
    sub_1DCD32D4C(v91, v92);
    sub_1DCD32D90(v89, *((uint64_t *)&v89 + 1));
    if (v88 <= v90) {
      float v88 = v90;
    }
    if (*((float *)&v253 + 2) > *((float *)&v244 + 2)) {
      int v95 = DWORD2(v253);
    }
    else {
      int v95 = DWORD2(v244);
    }
    unsigned __int8 v96 = BYTE13(v253);
    char v97 = HIBYTE(v244);
    char v98 = HIBYTE(v253);
    LODWORD(v228) = BYTE14(v253);
    LODWORD(v227) = BYTE14(v244);
    int v226 = v254[0];
    int v225 = LOBYTE(v245[0]);
    int v223 = BYTE12(v244);
    int v224 = v254[1];
    int v221 = BYTE12(v253);
    int v222 = BYTE1(v245[0]);
    int v219 = BYTE8(v248);
    LODWORD(v220) = BYTE13(v244);
    char v99 = BYTE8(v239);
    char v100 = swift_isUniquelyReferenced_nonNull_native();
    long long v236 = v13;
    unint64_t v102 = sub_1DCEAD454(v233);
    uint64_t v103 = v13[2];
    BOOL v104 = (v101 & 1) == 0;
    uint64_t v105 = v103 + v104;
    if (__OFADD__(v103, v104)) {
      goto LABEL_67;
    }
    char v106 = v101;
    if (v13[3] >= v105)
    {
      if ((v100 & 1) == 0) {
        sub_1DCE88568();
      }
    }
    else
    {
      sub_1DCE7DBB0(v105, v100);
      uint64_t v107 = sub_1DCEAD454(v233);
      if ((v106 & 1) != (v108 & 1)) {
        goto LABEL_69;
      }
      unint64_t v102 = v107;
    }
    char v135 = v97 | v98;
    uint64_t v137 = *((void *)&v237 + 1);
    uint64_t v136 = v238;
    char v138 = BYTE12(v245[1]);
    int v139 = DWORD2(v245[1]);
    uint64_t v141 = *((void *)&v245[0] + 1);
    uint64_t v140 = *(void *)&v245[1];
    int v142 = v244;
    long long v143 = v241;
    long long v144 = v240;
    char v145 = (v219 | v99) & 1;
    char v146 = (v223 | v221) & 1;
    char v147 = (v220 | v96) & 1;
    int v148 = (v228 | v227) & 1;
    uint64_t v150 = *((void *)&v238 + 1);
    uint64_t v149 = v239;
    char v151 = (v226 | v225) & 1;
    int v152 = (v224 | v222) & 1;
    char v153 = v237;
    if (v106)
    {
      uint64_t v13 = v236;
      uint64_t v154 = v236[7] + 160 * v102;
      long long v155 = *(_OWORD *)(v154 + 16);
      v234[0] = *(_OWORD *)v154;
      v234[1] = v155;
      long long v156 = *(_OWORD *)(v154 + 80);
      long long v158 = *(_OWORD *)(v154 + 32);
      long long v157 = *(_OWORD *)(v154 + 48);
      v234[4] = *(_OWORD *)(v154 + 64);
      v234[5] = v156;
      v234[2] = v158;
      v234[3] = v157;
      long long v160 = *(_OWORD *)(v154 + 112);
      long long v159 = *(_OWORD *)(v154 + 128);
      long long v161 = *(_OWORD *)(v154 + 96);
      *(_OWORD *)((char *)v235 + 13) = *(_OWORD *)(v154 + 141);
      v234[7] = v160;
      v235[0] = v159;
      v234[6] = v161;
      int v224 = (v226 | v225) & 1;
      int v225 = (v220 | v96) & 1;
      LODWORD(v233) = BYTE12(v245[1]);
      uint64_t v227 = *((void *)&v245[0] + 1);
      uint64_t v228 = *(void *)&v245[1];
      int v221 = (v223 | v221) & 1;
      int v222 = v148;
      int v223 = v135 & 1;
      int v226 = v152;
      uint64_t v220 = *((void *)&v241 + 1);
      uint64_t v162 = *((void *)&v240 + 1);
      uint64_t v163 = v239;
      sub_1DCD32DD4((uint64_t)v234);
      *(unsigned char *)uint64_t v154 = v153;
      *(void *)(v154 + 8) = v137;
      *(void *)(v154 + 16) = v136;
      *(void *)(v154 + 24) = v150;
      *(void *)(v154 + 32) = v163;
      *(unsigned char *)(v154 + 40) = v145;
      *(void *)(v154 + 48) = v144;
      *(void *)(v154 + 56) = v162;
      uint64_t v164 = v220;
      *(void *)(v154 + 64) = v143;
      *(void *)(v154 + 72) = v164;
      uint64_t v165 = v231;
      *(void *)(v154 + 80) = v232;
      *(void *)(v154 + 88) = v165;
      uint64_t v166 = v229;
      *(void *)(v154 + 96) = v230;
      *(void *)(v154 + 104) = v166;
      *(_DWORD *)(v154 + 112) = v142;
      *(float *)(v154 + 116) = v88;
      *(_DWORD *)(v154 + 120) = v95;
      *(unsigned char *)(v154 + 124) = v221;
      *(unsigned char *)(v154 + 125) = v225;
      *(unsigned char *)(v154 + 126) = v222;
      *(unsigned char *)(v154 + 127) = v223;
      *(unsigned char *)(v154 + 128) = v224;
      *(unsigned char *)(v154 + 129) = v226;
      uint64_t v167 = v228;
      *(void *)(v154 + 136) = v227;
      *(void *)(v154 + 144) = v167;
      *(_DWORD *)(v154 + 152) = v139;
      *(unsigned char *)(v154 + 156) = (_BYTE)v233;
    }
    else
    {
      uint64_t v13 = v236;
      v236[(v102 >> 6) + 8] |= 1 << v102;
      *(unsigned char *)(v13[6] + v102) = (_BYTE)v233;
      uint64_t v168 = v13[7] + 160 * v102;
      *(unsigned char *)uint64_t v168 = v153;
      *(void *)(v168 + 8) = v137;
      *(void *)(v168 + 16) = v136;
      *(void *)(v168 + 24) = v150;
      *(void *)(v168 + 32) = v149;
      *(unsigned char *)(v168 + 40) = v145;
      *(_OWORD *)(v168 + 48) = v144;
      *(_OWORD *)(v168 + 64) = v143;
      uint64_t v169 = v231;
      *(void *)(v168 + 80) = v232;
      *(void *)(v168 + 88) = v169;
      uint64_t v170 = v229;
      *(void *)(v168 + 96) = v230;
      *(void *)(v168 + 104) = v170;
      *(_DWORD *)(v168 + 112) = v142;
      *(float *)(v168 + 116) = v88;
      *(_DWORD *)(v168 + 120) = v95;
      *(unsigned char *)(v168 + 124) = v146;
      *(unsigned char *)(v168 + 125) = v147;
      *(unsigned char *)(v168 + 126) = v148;
      *(unsigned char *)(v168 + 127) = v135 & 1;
      *(unsigned char *)(v168 + 128) = v151;
      *(unsigned char *)(v168 + 129) = v152;
      *(void *)(v168 + 136) = v141;
      *(void *)(v168 + 144) = v140;
      *(_DWORD *)(v168 + 152) = v139;
      *(unsigned char *)(v168 + 156) = v138;
      uint64_t v171 = v13[2];
      BOOL v55 = __OFADD__(v171, 1);
      uint64_t v172 = v171 + 1;
      if (v55) {
        goto LABEL_68;
      }
      v13[2] = v172;
    }
    swift_bridgeObjectRelease();
    sub_1DCD32DD4((uint64_t)&v246);
    uint64_t v68 = v216;
    uint64_t v75 = v217;
    uint64_t v74 = v218;
    if (!v218)
    {
LABEL_55:
      swift_bridgeObjectRelease();
      uint64_t v11 = v214;
      uint64_t v67 = v215;
      goto LABEL_56;
    }
LABEL_54:
    long long v183 = *(_OWORD *)(v68 + v75 + 16);
    long long v246 = *(_OWORD *)(v68 + v75);
    long long v247 = v183;
    long long v184 = *(_OWORD *)(v68 + v75 + 32);
    long long v185 = *(_OWORD *)(v68 + v75 + 48);
    long long v186 = *(_OWORD *)(v68 + v75 + 80);
    long long v250 = *(_OWORD *)(v68 + v75 + 64);
    long long v251 = v186;
    long long v248 = v184;
    long long v249 = v185;
    long long v187 = *(_OWORD *)(v68 + v75 + 96);
    long long v188 = *(_OWORD *)(v68 + v75 + 112);
    long long v189 = *(_OWORD *)(v68 + v75 + 128);
    *(_OWORD *)&v254[13] = *(_OWORD *)(v68 + v75 + 141);
    long long v253 = v188;
    *(_OWORD *)unint64_t v254 = v189;
    long long v252 = v187;
    v75 += 160;
    --v74;
  }
  uint64_t v109 = v68;
  sub_1DCD32CC8((uint64_t)&v246);
  char v110 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v234[0] = v13;
  uint64_t v111 = v76;
  unint64_t v113 = sub_1DCEAD454(v76);
  uint64_t v114 = v13[2];
  BOOL v115 = (v112 & 1) == 0;
  uint64_t v116 = v114 + v115;
  if (!__OFADD__(v114, v115))
  {
    char v117 = v112;
    if (v13[3] < v116)
    {
      sub_1DCE7DBB0(v116, v110);
      uint64_t v118 = sub_1DCEAD454(v111);
      if ((v117 & 1) != (v119 & 1)) {
        goto LABEL_69;
      }
      unint64_t v113 = v118;
      if ((v117 & 1) == 0) {
        goto LABEL_51;
      }
LABEL_41:
      uint64_t v13 = *(void **)&v234[0];
      int v120 = (long long *)(*(void *)(*(void *)&v234[0] + 56) + 160 * v113);
      long long v121 = v120[1];
      long long v237 = *v120;
      long long v238 = v121;
      long long v122 = v120[5];
      long long v124 = v120[2];
      long long v123 = v120[3];
      long long v241 = v120[4];
      long long v242 = v122;
      long long v239 = v124;
      long long v240 = v123;
      long long v126 = v120[7];
      long long v125 = v120[8];
      long long v127 = v120[6];
      *(_OWORD *)((char *)v245 + 13) = *(long long *)((char *)v120 + 141);
      long long v244 = v126;
      v245[0] = v125;
      long long v243 = v127;
      sub_1DCD32DD4((uint64_t)&v237);
      long long v128 = v247;
      *int v120 = v246;
      v120[1] = v128;
      long long v129 = v251;
      long long v131 = v248;
      long long v130 = v249;
      v120[4] = v250;
      v120[5] = v129;
      v120[2] = v131;
      v120[3] = v130;
      long long v133 = v253;
      long long v132 = *(_OWORD *)v254;
      long long v134 = v252;
      *(long long *)((char *)v120 + 141) = *(_OWORD *)&v254[13];
      v120[7] = v133;
      v120[8] = v132;
      v120[6] = v134;
      goto LABEL_53;
    }
    if (v110)
    {
      if (v112) {
        goto LABEL_41;
      }
    }
    else
    {
      sub_1DCE88568();
      if (v117) {
        goto LABEL_41;
      }
    }
LABEL_51:
    uint64_t v13 = *(void **)&v234[0];
    *(void *)(*(void *)&v234[0] + 8 * (v113 >> 6) + 64) |= 1 << v113;
    *(unsigned char *)(v13[6] + v113) = v111;
    long long v173 = (_OWORD *)(v13[7] + 160 * v113);
    long long v174 = *(_OWORD *)&v254[13];
    long long v176 = v253;
    long long v175 = *(_OWORD *)v254;
    v173[6] = v252;
    v173[7] = v176;
    v173[8] = v175;
    *(_OWORD *)((char *)v173 + 141) = v174;
    long long v178 = v250;
    long long v177 = v251;
    long long v179 = v249;
    v173[2] = v248;
    v173[3] = v179;
    v173[4] = v178;
    v173[5] = v177;
    long long v180 = v247;
    *long long v173 = v246;
    v173[1] = v180;
    uint64_t v181 = v13[2];
    BOOL v55 = __OFADD__(v181, 1);
    uint64_t v182 = v181 + 1;
    if (v55) {
      goto LABEL_66;
    }
    v13[2] = v182;
LABEL_53:
    swift_bridgeObjectRelease();
    sub_1DCD32DD4((uint64_t)&v246);
    uint64_t v68 = v109;
    if (!v74) {
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

double sub_1DCF22BB0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  char v40 = *(unsigned char *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 104);
  float v9 = *(float *)(a1 + 116);
  float v8 = *(float *)(a1 + 120);
  char v37 = *(unsigned char *)(a1 + 125);
  char v38 = *(unsigned char *)(a1 + 124);
  char v39 = *(unsigned char *)(a1 + 126);
  char v35 = *(unsigned char *)(a1 + 127);
  char v36 = *(unsigned char *)(a1 + 128);
  long long v10 = a2[7];
  long long v45 = a2[6];
  long long v46 = v10;
  *(_OWORD *)long long v47 = a2[8];
  *(_OWORD *)&v47[13] = *(_OWORD *)((char *)a2 + 141);
  long long v11 = a2[3];
  *(_OWORD *)&v41[32] = a2[2];
  long long v42 = v11;
  long long v12 = a2[5];
  long long v43 = a2[4];
  long long v44 = v12;
  long long v13 = a2[1];
  *(_OWORD *)long long v41 = *a2;
  *(_OWORD *)&v41[16] = v13;
  long long v14 = v44;
  float v15 = *((float *)&v46 + 1);
  if (*((float *)&v46 + 1) >= v9) {
    uint64_t v16 = v44;
  }
  else {
    uint64_t v16 = v4;
  }
  if (*((float *)&v46 + 1) >= v9) {
    uint64_t v17 = *((void *)&v44 + 1);
  }
  else {
    uint64_t v17 = v5;
  }
  if (*((float *)&v46 + 1) >= v9) {
    uint64_t v18 = v45;
  }
  else {
    uint64_t v18 = v6;
  }
  if (*((float *)&v46 + 1) >= v9) {
    uint64_t v19 = *((void *)&v45 + 1);
  }
  else {
    uint64_t v19 = v7;
  }
  char v20 = *(unsigned char *)(a1 + 129);
  sub_1DCD32CC8((uint64_t)v41);
  sub_1DCD32D4C(v16, v17);
  sub_1DCD32D90(v14, *((uint64_t *)&v14 + 1));
  char v21 = BYTE12(v46);
  if (v9 > v15) {
    float v22 = v9;
  }
  else {
    float v22 = v15;
  }
  float v23 = *((float *)&v46 + 2);
  int v24 = v46;
  if (v8 > *((float *)&v46 + 2)) {
    float v23 = v8;
  }
  char v25 = v47[28];
  int v26 = *(_DWORD *)&v47[24];
  char v27 = (v40 | v41[40]) & 1;
  char v28 = (BYTE13(v46) | v37) & 1;
  char v29 = (v39 | BYTE14(v46)) & 1;
  char v30 = (HIBYTE(v46) | v35) & 1;
  char v31 = (v36 | v47[0]) & 1;
  char v32 = (v20 | v47[1]) & 1;
  *(unsigned char *)a3 = v41[0];
  *(_OWORD *)(a3 + 8) = *(_OWORD *)&v41[8];
  *(_OWORD *)(a3 + 24) = *(_OWORD *)&v41[24];
  *(unsigned char *)(a3 + 40) = v27;
  long long v33 = v43;
  *(_OWORD *)(a3 + 48) = v42;
  *(_OWORD *)(a3 + 64) = v33;
  *(void *)(a3 + 80) = v16;
  *(void *)(a3 + 88) = v17;
  *(void *)(a3 + 96) = v18;
  *(void *)(a3 + 104) = v19;
  *(_DWORD *)(a3 + 112) = v24;
  *(float *)(a3 + 116) = v22;
  *(float *)(a3 + 120) = v23;
  *(unsigned char *)(a3 + 124) = (v21 | v38) & 1;
  *(unsigned char *)(a3 + 125) = v28;
  *(unsigned char *)(a3 + 126) = v29;
  *(unsigned char *)(a3 + 127) = v30;
  *(unsigned char *)(a3 + 128) = v31;
  *(unsigned char *)(a3 + 129) = v32;
  double result = *(double *)&v47[8];
  *(_OWORD *)(a3 + 136) = *(_OWORD *)&v47[8];
  *(_DWORD *)(a3 + 152) = v26;
  *(unsigned char *)(a3 + 156) = v25;
  return result;
}

uint64_t sub_1DCF22DA4()
{
  uint64_t v1 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v43 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v46 = (uint64_t)&v40 - v5;
  uint64_t v6 = *v0;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  uint64_t v57 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
  uint64_t v42 = v8;
  if (v8)
  {
    unint64_t v9 = 0;
    uint64_t v41 = v6;
    char v40 = v3;
    while (v9 < *(void *)(v6 + 16))
    {
      uint64_t v10 = *(void *)(v43 + 72);
      unint64_t v45 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      uint64_t v44 = v10;
      uint64_t v11 = v46;
      sub_1DCD36E7C(v6 + v45 + v10 * v9, v46);
      uint64_t v12 = *(void *)(v11 + 48);
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = v13 - 1;
        uint64_t v15 = 32;
        uint64_t v16 = MEMORY[0x1E4FBC860];
        while (1)
        {
          long long v17 = *(_OWORD *)(v12 + v15);
          long long v48 = *(_OWORD *)(v12 + v15 + 16);
          long long v47 = v17;
          long long v18 = *(_OWORD *)(v12 + v15 + 32);
          long long v19 = *(_OWORD *)(v12 + v15 + 48);
          long long v20 = *(_OWORD *)(v12 + v15 + 80);
          long long v51 = *(_OWORD *)(v12 + v15 + 64);
          long long v52 = v20;
          long long v49 = v18;
          long long v50 = v19;
          long long v21 = *(_OWORD *)(v12 + v15 + 96);
          long long v22 = *(_OWORD *)(v12 + v15 + 112);
          long long v23 = *(_OWORD *)(v12 + v15 + 128);
          *(_OWORD *)((char *)v55 + 13) = *(_OWORD *)(v12 + v15 + 141);
          v55[0] = v23;
          long long v53 = v21;
          long long v54 = v22;
          if (HIBYTE(v22) == 1)
          {
            sub_1DCD32CC8((uint64_t)&v47);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v56 = v16;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1DCFC4A08(0, *(void *)(v16 + 16) + 1, 1);
              uint64_t v16 = v56;
            }
            unint64_t v26 = *(void *)(v16 + 16);
            unint64_t v25 = *(void *)(v16 + 24);
            if (v26 >= v25 >> 1)
            {
              sub_1DCFC4A08(v25 > 1, v26 + 1, 1);
              uint64_t v16 = v56;
            }
            *(void *)(v16 + 16) = v26 + 1;
            char v27 = (_OWORD *)(v16 + 160 * v26);
            long long v28 = v48;
            id v27[2] = v47;
            void v27[3] = v28;
            long long v29 = v49;
            long long v30 = v50;
            long long v31 = v52;
            v27[6] = v51;
            v27[7] = v31;
            v27[4] = v29;
            v27[5] = v30;
            long long v32 = v53;
            long long v33 = v54;
            long long v34 = v55[0];
            *(_OWORD *)((char *)v27 + 173) = *(_OWORD *)((char *)v55 + 13);
            v27[9] = v33;
            v27[10] = v34;
            v27[8] = v32;
          }
          if (!v14) {
            break;
          }
          --v14;
          v15 += 160;
        }
        swift_bridgeObjectRelease();
        uint64_t v6 = v41;
        uint64_t v3 = v40;
      }
      else
      {
        uint64_t v16 = MEMORY[0x1E4FBC860];
      }
      *(void *)&long long v47 = v16;
      swift_retain();
      sub_1DCF23B0C((uint64_t *)&v47);
      swift_release();
      uint64_t v35 = *(void *)(v47 + 16);
      swift_release();
      if (v35)
      {
        sub_1DCD36EE0(v46, (uint64_t)v3);
        uint64_t v36 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1DCFC49E8(0, *(void *)(v36 + 16) + 1, 1);
          uint64_t v36 = v57;
        }
        unint64_t v38 = *(void *)(v36 + 16);
        unint64_t v37 = *(void *)(v36 + 24);
        if (v38 >= v37 >> 1)
        {
          sub_1DCFC49E8(v37 > 1, v38 + 1, 1);
          uint64_t v36 = v57;
        }
        *(void *)(v36 + 16) = v38 + 1;
        sub_1DCD36EE0((uint64_t)v3, v36 + v45 + v38 * v44);
      }
      else
      {
        sub_1DCD96118(v46);
      }
      if (++v9 == v42)
      {
        uint64_t v7 = v57;
        goto LABEL_25;
      }
    }
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1DCF2316C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v2 - 1;
    uint64_t v4 = MEMORY[0x1E4FBC860];
    for (uint64_t i = 32; ; i += 160)
    {
      long long v6 = *(_OWORD *)(v1 + i + 16);
      long long v25 = *(_OWORD *)(v1 + i);
      long long v26 = v6;
      long long v7 = *(_OWORD *)(v1 + i + 32);
      long long v8 = *(_OWORD *)(v1 + i + 48);
      long long v9 = *(_OWORD *)(v1 + i + 80);
      long long v29 = *(_OWORD *)(v1 + i + 64);
      long long v30 = v9;
      long long v27 = v7;
      long long v28 = v8;
      long long v10 = *(_OWORD *)(v1 + i + 96);
      long long v11 = *(_OWORD *)(v1 + i + 112);
      long long v12 = *(_OWORD *)(v1 + i + 128);
      *(_OWORD *)((char *)v33 + 13) = *(_OWORD *)(v1 + i + 141);
      v33[0] = v12;
      long long v31 = v10;
      long long v32 = v11;
      if (HIBYTE(v11) == 1)
      {
        sub_1DCD32CC8((uint64_t)&v25);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = v4;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1DCFC4A08(0, *(void *)(v4 + 16) + 1, 1);
          uint64_t v4 = v34;
        }
        unint64_t v15 = *(void *)(v4 + 16);
        unint64_t v14 = *(void *)(v4 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_1DCFC4A08(v14 > 1, v15 + 1, 1);
          uint64_t v4 = v34;
        }
        *(void *)(v4 + 16) = v15 + 1;
        uint64_t v16 = (_OWORD *)(v4 + 160 * v15);
        long long v17 = v26;
        v16[2] = v25;
        v16[3] = v17;
        long long v18 = v27;
        long long v19 = v28;
        long long v20 = v30;
        v16[6] = v29;
        v16[7] = v20;
        v16[4] = v18;
        id v16[5] = v19;
        long long v21 = v31;
        long long v22 = v32;
        long long v23 = v33[0];
        *(_OWORD *)((char *)v16 + 173) = *(_OWORD *)((char *)v33 + 13);
        v16[9] = v22;
        v16[10] = v23;
        v16[8] = v21;
      }
      if (!v3) {
        break;
      }
      --v3;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  *(void *)&long long v25 = v4;
  swift_retain();
  sub_1DCF23B0C((uint64_t *)&v25);
  swift_release();
  return v25;
}

uint64_t sub_1DCF23310(uint64_t a1)
{
  CGFloat v2 = *(double *)a1;
  CGFloat v3 = *(double *)(a1 + 8);
  CGFloat v4 = *(double *)(a1 + 16);
  CGFloat v5 = *(double *)(a1 + 24);
  long long v7 = *(void **)(a1 + 32);
  long long v6 = *(void **)(a1 + 40);
  uint64_t v8 = *(void *)v1;
  uint64_t v9 = *(void *)(*(void *)v1 + 16);
  if (v9)
  {
    char v39 = 0;
    unint64_t v10 = 0;
    long long v11 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v1 = 48;
    while (1)
    {
      if (v10 >= *(void *)(v8 + 16))
      {
        __break(1u);
        goto LABEL_57;
      }
      uint64_t v12 = v8 + 32 + 48 * v10;
      CGFloat v13 = *(double *)v12;
      CGFloat v14 = *(double *)(v12 + 8);
      CGFloat v15 = *(double *)(v12 + 16);
      CGFloat v16 = *(double *)(v12 + 24);
      long long v40 = *(_OWORD *)(v12 + 32);
      ++v10;
      long long v17 = *(void **)(v12 + 32);
      swift_bridgeObjectRetain();
      long long v7 = (void *)*((void *)&v40 + 1);
      swift_bridgeObjectRetain();
      v41.origin.double x = v13;
      v41.origin.double y = v14;
      v41.size.double width = v15;
      v41.size.double height = v16;
      v43.origin.double x = v2;
      v43.origin.double y = v3;
      v43.size.double width = v4;
      v43.size.double height = v5;
      if (!CGRectEqualToRect(v41, v43)) {
        goto LABEL_29;
      }
      uint64_t v18 = *(void *)(*((void *)&v40 + 1) + 16);
      if (!v18 || v18 != v6[2]) {
        goto LABEL_29;
      }
      BOOL v20 = *(void *)(*((void *)&v40 + 1) + 32) == v6[4] && *(void *)(*((void *)&v40 + 1) + 40) == v6[5];
      if (!v20 && (sub_1DD048FA8() & 1) == 0) {
        goto LABEL_29;
      }
      if (v18 == 1) {
        goto LABEL_35;
      }
      BOOL v21 = *(void *)(*((void *)&v40 + 1) + 56) == v6[7] && *(void *)(*((void *)&v40 + 1) + 64) == v6[8];
      if (v21 || (sub_1DD048FA8() & 1) != 0)
      {
        uint64_t v22 = v18 - 2;
        if (v22)
        {
          long long v23 = (void *)(*((void *)&v40 + 1) + 88);
          int v24 = v6 + 11;
          do
          {
            BOOL v25 = *(v23 - 1) == *(v24 - 1) && *v23 == *v24;
            if (!v25 && (sub_1DD048FA8() & 1) == 0) {
              goto LABEL_29;
            }
            v24 += 3;
            v23 += 3;
          }
          while (--v22);
        }
LABEL_35:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42.origin.double x = v13;
        v42.origin.double y = v14;
        v42.size.double width = v15;
        v42.size.double height = v16;
        v44.origin.double x = v2;
        v44.origin.double y = v3;
        v44.size.double width = v4;
        v44.size.double height = v5;
        if (CGRectEqualToRect(v42, v44))
        {
          long long v29 = v17;
          if (v38[2])
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            long long v29 = v38;
          }
          uint64_t v1 = 48;
          if (v6[2])
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            long long v17 = v29;
            long long v7 = v6;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            long long v17 = v29;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v1 = 48;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v11 = sub_1DCE9DAF0(0, v11[2] + 1, 1, v11);
        }
        unint64_t v31 = v11[2];
        unint64_t v30 = v11[3];
        if (v31 >= v30 >> 1) {
          long long v11 = sub_1DCE9DAF0((void *)(v30 > 1), v31 + 1, 1, v11);
        }
        void v11[2] = v31 + 1;
        long long v32 = (CGFloat *)&v11[6 * v31];
        v32[4] = v13;
        v32[5] = v14;
        v32[6] = v15;
        v32[7] = v16;
        *((void *)v32 + 8) = v17;
        *((void *)v32 + 9) = v7;
        char v39 = 1;
        if (v10 == v9)
        {
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v1 = v37;
          goto LABEL_55;
        }
      }
      else
      {
LABEL_29:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v11 = sub_1DCE9DAF0(0, v11[2] + 1, 1, v11);
        }
        unint64_t v27 = v11[2];
        unint64_t v26 = v11[3];
        long long v7 = (void *)(v27 + 1);
        uint64_t v1 = 48;
        if (v27 >= v26 >> 1) {
          long long v11 = sub_1DCE9DAF0((void *)(v26 > 1), v27 + 1, 1, v11);
        }
        void v11[2] = v7;
        long long v28 = (CGFloat *)&v11[6 * v27];
        v28[4] = v13;
        v28[5] = v14;
        v28[6] = v15;
        v28[7] = v16;
        *((_OWORD *)v28 + 4) = v40;
        if (v10 == v9)
        {
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v1 = v37;
          long long v7 = v38;
          if (v39) {
            goto LABEL_55;
          }
          goto LABEL_51;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  long long v11 = (void *)MEMORY[0x1E4FBC860];
LABEL_51:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
LABEL_57:
    uint64_t result = (uint64_t)sub_1DCE9DAF0(0, v11[2] + 1, 1, v11);
    long long v11 = (void *)result;
  }
  unint64_t v35 = v11[2];
  unint64_t v34 = v11[3];
  if (v35 >= v34 >> 1)
  {
    uint64_t result = (uint64_t)sub_1DCE9DAF0((void *)(v34 > 1), v35 + 1, 1, v11);
    long long v11 = (void *)result;
  }
  void v11[2] = v35 + 1;
  uint64_t v36 = (CGFloat *)&v11[6 * v35];
  v36[4] = v2;
  void v36[5] = v3;
  v36[6] = v4;
  v36[7] = v5;
  *((void *)v36 + 8) = v7;
  *((void *)v36 + 9) = v6;
LABEL_55:
  *(void *)uint64_t v1 = v11;
  return result;
}

uint64_t sub_1DCF2374C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, float a5)
{
  uint64_t v10 = sub_1DD048068();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  CGFloat v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a4 + 16);
  if (a1)
  {
    if (!v14)
    {
LABEL_18:
      sub_1DCDB40EC((uint64_t)v13);
      long long v33 = sub_1DD048048();
      os_log_type_t v34 = sub_1DD048848();
      if (os_log_type_enabled(v33, v34))
      {
        unint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v35 = 0;
        _os_log_impl(&dword_1DCCF9000, v33, v34, "invalid input to softmax: all input sums to 0", v35, 2u);
        MEMORY[0x1E01B07E0](v35, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a2;
    }
    if (v14 == 1)
    {
      uint64_t v23 = 0;
      float v24 = 0.0;
    }
    else
    {
      uint64_t v23 = v14 & 0x7FFFFFFFFFFFFFFELL;
      BOOL v25 = (float *)(a4 + 72);
      float v24 = 0.0;
      uint64_t v26 = v14 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        float v27 = *(v25 - 6);
        float v28 = *v25;
        v25 += 12;
        float v29 = expf(v27 / a5);
        float v24 = (float)(v24 + v29) + expf(v28 / a5);
        v26 -= 2;
      }
      while (v26);
      if (v14 == v23)
      {
LABEL_17:
        if (v24 != 0.0)
        {
          uint64_t v46 = a2;
          uint64_t v48 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          uint64_t v47 = a3;
          swift_bridgeObjectRetain();
          sub_1DCFC49A8(0, v14, 0);
          uint64_t v36 = v48;
          uint64_t v37 = (float *)(a4 + 48);
          do
          {
            uint64_t v39 = *((void *)v37 - 2);
            uint64_t v38 = *((void *)v37 - 1);
            float v40 = expf(*v37 / a5);
            uint64_t v48 = v36;
            unint64_t v42 = *(void *)(v36 + 16);
            unint64_t v41 = *(void *)(v36 + 24);
            swift_bridgeObjectRetain();
            if (v42 >= v41 >> 1)
            {
              sub_1DCFC49A8(v41 > 1, v42 + 1, 1);
              uint64_t v36 = v48;
            }
            v37 += 6;
            *(void *)(v36 + 16) = v42 + 1;
            uint64_t v43 = v36 + 24 * v42;
            *(void *)(v43 + 32) = v39;
            *(void *)(v43 + 40) = v38;
            *(float *)(v43 + 48) = v40 / v24;
            --v14;
          }
          while (v14);
          goto LABEL_25;
        }
        goto LABEL_18;
      }
    }
    int64_t v30 = v14 - v23;
    unint64_t v31 = (float *)(a4 + 24 * v23 + 48);
    do
    {
      float v32 = *v31;
      v31 += 6;
      float v24 = v24 + expf(v32 / a5);
      --v30;
    }
    while (v30);
    goto LABEL_17;
  }
  if (v14)
  {
    uint64_t v46 = a2;
    uint64_t v47 = a3;
    uint64_t v48 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1DCFC49A8(0, v14, 0);
    uint64_t v15 = v48;
    CGFloat v16 = (float *)(a4 + 48);
    do
    {
      uint64_t v18 = *((void *)v16 - 2);
      uint64_t v17 = *((void *)v16 - 1);
      float v19 = expf(-*v16);
      uint64_t v48 = v15;
      unint64_t v21 = *(void *)(v15 + 16);
      unint64_t v20 = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
      if (v21 >= v20 >> 1)
      {
        sub_1DCFC49A8(v20 > 1, v21 + 1, 1);
        uint64_t v15 = v48;
      }
      v16 += 6;
      *(void *)(v15 + 16) = v21 + 1;
      uint64_t v22 = v15 + 24 * v21;
      *(void *)(v22 + 32) = v18;
      *(void *)(v22 + 40) = v17;
      *(float *)(v22 + 48) = 1.0 / (float)(v19 + 1.0);
      --v14;
    }
    while (v14);
LABEL_25:
    swift_bridgeObjectRelease();
    return v46;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1DCF23B0C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1DCD74344(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1DCF250EC(v5);
  *a1 = v2;
  return result;
}

uint64_t VisualUnderstanding.init(_:annotation:payload:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v105 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v109 = (uint64_t)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v110 = (uint64_t)&v89 - v13;
  uint64_t v15 = *a2;
  uint64_t v14 = a2[1];
  uint64_t v16 = a2[2];
  uint64_t v98 = a2[3];
  uint64_t v99 = v16;
  uint64_t v17 = a2[4];
  uint64_t v96 = a2[5];
  uint64_t v97 = v17;
  uint64_t v18 = a2[6];
  uint64_t v94 = a2[7];
  uint64_t v95 = v18;
  if (qword_1EBE84A80 != -1) {
    goto LABEL_29;
  }
  while (1)
  {
    uint64_t v20 = *((void *)&xmmword_1EBE84A60 + 1);
    uint64_t v19 = xmmword_1EBE84A60;
    uint64_t v22 = *((void *)&xmmword_1EBE84A70 + 1);
    uint64_t v21 = xmmword_1EBE84A70;
    if (a4 >> 60 != 15) {
      break;
    }
    uint64_t v93 = v14;
    uint64_t v104 = *(void *)(a1 + 16);
    if (!v104)
    {
      sub_1DCD392D4(a3, a4);
      swift_bridgeObjectRelease();
      unint64_t v68 = 0;
      uint64_t v69 = 0;
      uint64_t v70 = 0;
      char v71 = 1;
      uint64_t v72 = MEMORY[0x1E4FBC860];
      unint64_t v74 = MEMORY[0x1E4FBC860];
      goto LABEL_27;
    }
    uint64_t v89 = 0;
    unint64_t v90 = a4;
    uint64_t v91 = v15;
    uint64_t v92 = a5;
    unint64_t v23 = 0;
    a5 = v123;
    unint64_t v103 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
    unint64_t v102 = a1 + v103;
    unint64_t v74 = MEMORY[0x1E4FBC860];
    uint64_t v14 = 1;
    uint64_t v15 = 160;
    uint64_t v100 = a1;
    uint64_t v101 = a3;
    while (v23 < *(void *)(a1 + 16))
    {
      unint64_t v107 = v23;
      unint64_t v108 = v74;
      uint64_t v106 = *(void *)(v105 + 72);
      uint64_t v24 = v102 + v106 * v23;
      uint64_t v25 = v110;
      sub_1DCD36E7C(v24, v110);
      uint64_t v26 = *(void *)(v25 + 48);
      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v28 = v27 - 1;
        uint64_t v29 = 32;
        int64_t v30 = (void *)MEMORY[0x1E4FBC860];
        while (1)
        {
          long long v31 = *(_OWORD *)(v26 + v29 + 16);
          v123[0] = *(_OWORD *)(v26 + v29);
          v123[1] = v31;
          long long v32 = *(_OWORD *)(v26 + v29 + 32);
          long long v33 = *(_OWORD *)(v26 + v29 + 48);
          long long v34 = *(_OWORD *)(v26 + v29 + 80);
          long long v125 = *(_OWORD *)(v26 + v29 + 64);
          long long v126 = v34;
          v123[2] = v32;
          long long v124 = v33;
          long long v35 = *(_OWORD *)(v26 + v29 + 96);
          long long v36 = *(_OWORD *)(v26 + v29 + 112);
          long long v37 = *(_OWORD *)(v26 + v29 + 128);
          *(_OWORD *)((char *)v129 + 13) = *(_OWORD *)(v26 + v29 + 141);
          long long v128 = v36;
          v129[0] = v37;
          long long v127 = v35;
          sub_1DCD32CC8((uint64_t)v123);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v30 = sub_1DCE9D680(0, v30[2] + 1, 1, v30);
          }
          a4 = v30[2];
          unint64_t v38 = v30[3];
          if (a4 >= v38 >> 1) {
            int64_t v30 = sub_1DCE9D680((void *)(v38 > 1), a4 + 1, 1, v30);
          }
          char v39 = BYTE12(v129[1]);
          int v40 = DWORD2(v129[1]);
          char v41 = BYTE1(v129[0]);
          char v42 = v129[0];
          char v43 = BYTE14(v128);
          char v44 = BYTE13(v128);
          char v45 = BYTE12(v128);
          int v46 = DWORD2(v128);
          char v47 = BYTE8(v123[2]);
          char v48 = v123[0];
          long long v49 = &v30[20 * a4];
          uint64_t v50 = v128;
          long long v51 = *(_OWORD *)((char *)&v123[1] + 8);
          long long v52 = v124;
          long long v53 = v125;
          long long v54 = v126;
          long long v55 = v127;
          long long v56 = *(_OWORD *)((char *)v129 + 8);
          long long v57 = *(_OWORD *)((char *)v123 + 8);
          v30[2] = a4 + 1;
          *((unsigned char *)v49 + 32) = v48;
          int v58 = *(_DWORD *)((char *)&v111 + 3);
          *(_DWORD *)((char *)v49 + 33) = v111;
          *((_DWORD *)v49 + 9) = v58;
          *(_OWORD *)(v49 + 5) = v57;
          *(_OWORD *)(v49 + 7) = v51;
          *((unsigned char *)v49 + 72) = v47;
          int v59 = *(_DWORD *)((char *)v134 + 3);
          *(_DWORD *)((char *)v49 + 73) = v134[0];
          *((_DWORD *)v49 + 19) = v59;
          *((_OWORD *)v49 + 5) = v52;
          *((_OWORD *)v49 + 6) = v53;
          *((_OWORD *)v49 + 7) = v54;
          *((_OWORD *)v49 + 8) = v55;
          v49[18] = v50;
          *((_DWORD *)v49 + 38) = v46;
          *((unsigned char *)v49 + 156) = v45;
          *((unsigned char *)v49 + 157) = v44;
          *((unsigned char *)v49 + 158) = v43;
          *((unsigned char *)v49 + 159) = 1;
          *((unsigned char *)v49 + 160) = v42;
          *((unsigned char *)v49 + 161) = v41;
          int v60 = v132;
          *((_WORD *)v49 + 83) = v133;
          *(_DWORD *)((char *)v49 + 162) = v60;
          *(_OWORD *)(v49 + 21) = v56;
          *((_DWORD *)v49 + 46) = v40;
          *((unsigned char *)v49 + 188) = v39;
          if (!v28) {
            break;
          }
          --v28;
          v29 += 160;
        }
        swift_bridgeObjectRelease_n();
        a1 = v100;
      }
      else
      {
        swift_bridgeObjectRelease();
        int64_t v30 = (void *)MEMORY[0x1E4FBC860];
      }
      uint64_t v62 = v109;
      uint64_t v61 = v110;
      *(void *)(v110 + 48) = v30;
      sub_1DCD36E7C(v61, v62);
      unint64_t v74 = v108;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v74 = sub_1DCE9D7A0(0, *(void *)(v74 + 16) + 1, 1, v74);
      }
      a3 = v101;
      unint64_t v64 = *(void *)(v74 + 16);
      unint64_t v63 = *(void *)(v74 + 24);
      if (v64 >= v63 >> 1) {
        unint64_t v74 = sub_1DCE9D7A0(v63 > 1, v64 + 1, 1, v74);
      }
      uint64_t v65 = v106;
      unint64_t v66 = v107 + 1;
      *(void *)(v74 + 16) = v64 + 1;
      uint64_t v67 = v74 + v103 + v64 * v65;
      unint64_t v23 = v66;
      sub_1DCD36EE0(v109, v67);
      sub_1DCD96118(v110);
      if (v23 == v104)
      {
        sub_1DCD392D4(a3, v90);
        swift_bridgeObjectRelease();
        unint64_t v68 = 0;
        uint64_t v69 = 0;
        uint64_t v70 = 0;
        char v71 = 1;
        uint64_t v72 = MEMORY[0x1E4FBC860];
        uint64_t v15 = v91;
        a5 = v92;
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_29:
    swift_once();
  }
  sub_1DD0461B8();
  swift_allocObject();
  sub_1DCD33F64(a3, a4);
  sub_1DD0461A8();
  sub_1DCF25098();
  sub_1DD046198();
  swift_release();
  long long v119 = v129[0];
  long long v120 = v129[1];
  long long v121 = v130;
  uint64_t v122 = v131;
  long long v115 = v125;
  long long v116 = v126;
  long long v117 = v127;
  long long v118 = v128;
  long long v111 = v123[0];
  long long v112 = v123[1];
  long long v113 = v123[2];
  long long v114 = v124;
  swift_bridgeObjectRetain();
  uint64_t v73 = swift_bridgeObjectRetain();
  unint64_t v74 = sub_1DCF25BFC(v73, a1);
  swift_bridgeObjectRelease();
  sub_1DCD392D4(a3, a4);
  sub_1DCD392D4(a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15 == 1)
  {
    uint64_t v15 = *((void *)&v111 + 1);
    uint64_t v14 = v112;
    uint64_t v98 = v113;
    uint64_t v99 = *((void *)&v112 + 1);
    uint64_t v96 = v114;
    uint64_t v97 = *((void *)&v113 + 1);
    uint64_t v94 = v115;
    uint64_t v95 = *((void *)&v114 + 1);
    sub_1DCD434B4(*((uint64_t *)&v111 + 1));
  }
  uint64_t v93 = v14;
  uint64_t v19 = *((void *)&v115 + 1);
  uint64_t v21 = *((void *)&v116 + 1);
  uint64_t v20 = v116;
  uint64_t v69 = *((void *)&v117 + 1);
  uint64_t v22 = v117;
  uint64_t v70 = v118;
  char v71 = BYTE8(v118);
  uint64_t v72 = v122;
  swift_bridgeObjectRetain();
  sub_1DCD43B94((uint64_t)&v111);
  unint64_t v68 = v120;
LABEL_27:
  *(void *)&long long v111 = v74;
  *((void *)&v111 + 1) = v15;
  uint64_t v75 = v93;
  uint64_t v76 = v94;
  uint64_t v78 = v98;
  uint64_t v77 = v99;
  *(void *)&long long v112 = v93;
  *((void *)&v112 + 1) = v99;
  uint64_t v80 = v96;
  uint64_t v79 = v97;
  *(void *)&long long v113 = v98;
  *((void *)&v113 + 1) = v97;
  uint64_t v81 = v95;
  *(void *)&long long v114 = v96;
  *((void *)&v114 + 1) = v95;
  *(void *)&long long v115 = v94;
  *((void *)&v115 + 1) = v19;
  *(void *)&long long v116 = v20;
  *((void *)&v116 + 1) = v21;
  *(void *)&long long v117 = v22;
  *((void *)&v117 + 1) = v69;
  *(void *)&long long v118 = v70;
  BYTE8(v118) = v71;
  *(void *)&long long v119 = 0;
  *((void *)&v119 + 1) = 0xE000000000000000;
  long long v120 = v68;
  long long v121 = 0uLL;
  uint64_t v122 = v72;
  *((void *)a5 + 22) = v72;
  long long v82 = v114;
  a5[2] = v113;
  a5[3] = v82;
  long long v83 = v112;
  *a5 = v111;
  a5[1] = v83;
  long long v84 = v115;
  long long v85 = v116;
  long long v86 = v118;
  a5[6] = v117;
  a5[7] = v86;
  a5[4] = v84;
  a5[5] = v85;
  long long v87 = v121;
  a5[9] = v120;
  a5[10] = v87;
  a5[8] = v119;
  *(void *)&v123[0] = v74;
  *((void *)&v123[0] + 1) = v15;
  *(void *)&v123[1] = v75;
  *((void *)&v123[1] + 1) = v77;
  *(void *)&v123[2] = v78;
  *((void *)&v123[2] + 1) = v79;
  *(void *)&long long v124 = v80;
  *((void *)&v124 + 1) = v81;
  *(void *)&long long v125 = v76;
  *((void *)&v125 + 1) = v19;
  *(void *)&long long v126 = v20;
  *((void *)&v126 + 1) = v21;
  *(void *)&long long v127 = v22;
  *((void *)&v127 + 1) = v69;
  *(void *)&long long v128 = v70;
  BYTE8(v128) = v71;
  *(void *)&v129[0] = 0;
  *((void *)&v129[0] + 1) = 0xE000000000000000;
  v129[1] = v68;
  long long v130 = 0uLL;
  uint64_t v131 = v72;
  sub_1DCD433F0((uint64_t)&v111);
  return sub_1DCD43B94((uint64_t)v123);
}

uint64_t sub_1DCF24270@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v5 = a1[5];
  long long v45 = a1[4];
  long long v46 = v5;
  long long v6 = a1[3];
  *(_OWORD *)&v43[32] = a1[2];
  long long v44 = v6;
  *(_OWORD *)&v49[13] = *(_OWORD *)((char *)a1 + 141);
  long long v7 = a1[8];
  long long v8 = a1[6];
  long long v48 = a1[7];
  *(_OWORD *)long long v49 = v7;
  long long v47 = v8;
  long long v9 = a1[1];
  *(_OWORD *)char v43 = *a1;
  *(_OWORD *)&v43[16] = v9;
  uint64_t v10 = v43[0];
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
    sub_1DCD32CC8((uint64_t)v43);
    char v24 = 0;
    goto LABEL_90;
  }
  uint64_t v50 = v3;
  sub_1DCD32CC8((uint64_t)v43);
  swift_bridgeObjectRetain();
  uint64_t v13 = 32;
  while (2)
  {
    unint64_t v14 = 0xE300000000000000;
    uint64_t v15 = 7631457;
    switch(*(unsigned char *)(v11 + v13))
    {
      case 1:
        unint64_t v14 = 0xE600000000000000;
        uint64_t v15 = 0x65727574616ELL;
        break;
      case 2:
        unint64_t v14 = 0xE800000000000000;
        uint64_t v15 = 0x6B72616D646E616CLL;
        break;
      case 3:
        uint64_t v15 = 0x4C6C61727574616ELL;
        unint64_t v14 = 0xEF6B72616D646E61;
        break;
      case 4:
        unint64_t v14 = 0xE500000000000000;
        uint64_t v15 = 0x616964656DLL;
        break;
      case 5:
        unint64_t v14 = 0xE400000000000000;
        uint64_t v15 = 1802465122;
        break;
      case 6:
        unint64_t v14 = 0xE500000000000000;
        uint64_t v15 = 0x6D75626C61;
        break;
      case 7:
        unint64_t v14 = 0xE400000000000000;
        uint64_t v15 = 1937006947;
        break;
      case 8:
        unint64_t v14 = 0xE400000000000000;
        uint64_t v15 = 1936158564;
        break;
      case 9:
        unint64_t v14 = 0xE700000000000000;
        unsigned int v16 = 1835626081;
        goto LABEL_17;
      case 0xA:
        unint64_t v14 = 0xE500000000000000;
        uint64_t v15 = 0x7364726962;
        break;
      case 0xB:
        unint64_t v14 = 0xE700000000000000;
        uint64_t v15 = 0x73746365736E69;
        break;
      case 0xC:
        unint64_t v14 = 0xE800000000000000;
        uint64_t v15 = 0x73656C6974706572;
        break;
      case 0xD:
        unint64_t v14 = 0xE700000000000000;
        unsigned int v16 = 1835884909;
LABEL_17:
        uint64_t v15 = v16 | 0x736C6100000000;
        break;
      case 0xE:
        unint64_t v14 = 0xE700000000000000;
        uint64_t v15 = 0x6C657261707061;
        break;
      case 0xF:
        uint64_t v15 = 0x726F737365636361;
        unint64_t v14 = 0xEB00000000736569;
        break;
      case 0x10:
        unint64_t v14 = 0xE400000000000000;
        uint64_t v15 = 1685024614;
        break;
      case 0x11:
        uint64_t v15 = 0x6F726665726F7473;
        unint64_t v14 = 0xEA0000000000746ELL;
        break;
      case 0x12:
        unsigned int v17 = 1852270963;
        goto LABEL_25;
      case 0x13:
        unint64_t v14 = 0x80000001DD066AB0;
        uint64_t v15 = 0xD000000000000011;
        break;
      case 0x14:
        unsigned int v17 = 1869903201;
LABEL_25:
        uint64_t v15 = v17 | 0x626D795300000000;
        unint64_t v14 = 0xEA00000000006C6FLL;
        break;
      case 0x15:
        uint64_t v15 = 0x676F4C646E617262;
        unint64_t v14 = 0xEF6C6F626D79536FLL;
        break;
      case 0x16:
        unint64_t v14 = 0xE700000000000000;
        uint64_t v15 = 0x65646F63726162;
        break;
      case 0x17:
        uint64_t v15 = 0x727574706C756373;
        unint64_t v14 = 0xE900000000000065;
        break;
      case 0x18:
        unint64_t v14 = 0xE700000000000000;
        uint64_t v15 = 0x656E696C796B73;
        break;
      case 0x19:
        unint64_t v14 = 0xE800000000000000;
        uint64_t v15 = 0x44327463656A626FLL;
        break;
      default:
        break;
    }
    unint64_t v18 = 0xE300000000000000;
    uint64_t v19 = 7631457;
    switch(v10)
    {
      case 1:
        unint64_t v18 = 0xE600000000000000;
        if (v15 == 0x65727574616ELL) {
          goto LABEL_80;
        }
        goto LABEL_81;
      case 2:
        unint64_t v18 = 0xE800000000000000;
        if (v15 != 0x6B72616D646E616CLL) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 3:
        unint64_t v18 = 0xEF6B72616D646E61;
        if (v15 != 0x4C6C61727574616ELL) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 4:
        unint64_t v18 = 0xE500000000000000;
        if (v15 != 0x616964656DLL) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 5:
        unint64_t v18 = 0xE400000000000000;
        if (v15 != 1802465122) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 6:
        unint64_t v18 = 0xE500000000000000;
        if (v15 != 0x6D75626C61) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 7:
        unint64_t v18 = 0xE400000000000000;
        if (v15 != 1937006947) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 8:
        unint64_t v18 = 0xE400000000000000;
        if (v15 != 1936158564) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 9:
        unint64_t v18 = 0xE700000000000000;
        uint64_t v20 = 1835626081;
        goto LABEL_55;
      case 10:
        unint64_t v18 = 0xE500000000000000;
        if (v15 != 0x7364726962) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 11:
        unint64_t v18 = 0xE700000000000000;
        unint64_t v21 = 0x746365736E69;
        goto LABEL_56;
      case 12:
        unint64_t v18 = 0xE800000000000000;
        if (v15 != 0x73656C6974706572) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 13:
        unint64_t v18 = 0xE700000000000000;
        uint64_t v20 = 1835884909;
LABEL_55:
        unint64_t v21 = v20 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_56:
        if (v15 != (v21 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 14:
        unint64_t v18 = 0xE700000000000000;
        if (v15 != 0x6C657261707061) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 15:
        unint64_t v18 = 0xEB00000000736569;
        if (v15 != 0x726F737365636361) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 16:
        unint64_t v18 = 0xE400000000000000;
        if (v15 != 1685024614) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 17:
        unint64_t v18 = 0xEA0000000000746ELL;
        if (v15 != 0x6F726665726F7473) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 18:
        unsigned int v22 = 1852270963;
        goto LABEL_70;
      case 19:
        unint64_t v18 = 0x80000001DD066AB0;
        if (v15 != 0xD000000000000011) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 20:
        unsigned int v22 = 1869903201;
LABEL_70:
        unint64_t v18 = 0xEA00000000006C6FLL;
        if (v15 != (v22 | 0x626D795300000000)) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 21:
        unint64_t v18 = 0xEF6C6F626D79536FLL;
        if (v15 != 0x676F4C646E617262) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 22:
        unint64_t v18 = 0xE700000000000000;
        if (v15 != 0x65646F63726162) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 23:
        unint64_t v18 = 0xE900000000000065;
        if (v15 != 0x727574706C756373) {
          goto LABEL_81;
        }
        goto LABEL_80;
      case 24:
        unint64_t v18 = 0xE700000000000000;
        uint64_t v19 = 0x656E696C796B73;
        goto LABEL_79;
      case 25:
        unint64_t v18 = 0xE800000000000000;
        if (v15 != 0x44327463656A626FLL) {
          goto LABEL_81;
        }
        goto LABEL_80;
      default:
LABEL_79:
        if (v15 != v19) {
          goto LABEL_81;
        }
LABEL_80:
        if (v14 == v18)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_89;
        }
LABEL_81:
        char v23 = sub_1DD048FA8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
        {
          v13 += 160;
          if (!--v12)
          {
            swift_bridgeObjectRelease();
            char v24 = 0;
            goto LABEL_90;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_89:
        char v24 = 1;
LABEL_90:
        v26[0] = v10;
        long long v27 = *(_OWORD *)&v43[8];
        long long v28 = *(_OWORD *)&v43[24];
        char v29 = v43[40];
        long long v30 = v44;
        long long v31 = v45;
        long long v32 = v46;
        long long v33 = v47;
        uint64_t v34 = v48;
        int v35 = DWORD2(v48);
        __int16 v36 = WORD6(v48);
        char v37 = BYTE14(v48);
        char v38 = v24;
        __int16 v39 = *(_WORD *)v49;
        long long v40 = *(_OWORD *)&v49[8];
        int v41 = *(_DWORD *)&v49[24];
        char v42 = v49[28];
        faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v26);
        return sub_1DCD32C3C((uint64_t)v26, a3);
    }
  }
}

uint64_t sub_1DCF24A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v102 = a1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  long long v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v74 - v9;
  uint64_t v12 = *v2;
  uint64_t v11 = v2[1];
  uint64_t v13 = v2[2];
  uint64_t v14 = v2[3];
  uint64_t v15 = v2[4];
  uint64_t v16 = v2[5];
  uint64_t v17 = v2[6];
  uint64_t v18 = v2[7];
  uint64_t v19 = v2[8];
  long long v20 = *(_OWORD *)(v2 + 9);
  long long v21 = *(_OWORD *)(v2 + 11);
  long long v22 = *(_OWORD *)(v2 + 13);
  int v23 = *((unsigned __int8 *)v2 + 120);
  uint64_t v24 = v2[16];
  uint64_t v25 = v2[17];
  uint64_t v26 = v2[18];
  uint64_t v27 = v2[22];
  uint64_t v98 = *(void *)(v12 + 16);
  if (v98)
  {
    uint64_t v75 = v26;
    uint64_t v76 = v24;
    int v77 = v23;
    long long v78 = v22;
    long long v79 = v21;
    long long v80 = v20;
    uint64_t v81 = v25;
    uint64_t v82 = v27;
    uint64_t v83 = v19;
    uint64_t v84 = v18;
    uint64_t v85 = v17;
    uint64_t v86 = v16;
    uint64_t v87 = v15;
    uint64_t v88 = v14;
    uint64_t v89 = v13;
    uint64_t v90 = v11;
    uint64_t v91 = a2;
    unint64_t v97 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v96 = v12 + v97;
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v29 = 0;
    unint64_t v30 = MEMORY[0x1E4FBC860];
    uint64_t v95 = v5;
    uint64_t v94 = v7;
    uint64_t v93 = v10;
    uint64_t v92 = v12;
    while (v29 < *(void *)(v12 + 16))
    {
      unint64_t v100 = v30;
      uint64_t v31 = *(void *)(v5 + 72);
      unint64_t v101 = v29;
      uint64_t v99 = v31;
      sub_1DCD36E7C(v96 + v31 * v29, (uint64_t)v10);
      uint64_t v32 = *((void *)v10 + 6);
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v34 = v33 - 1;
        uint64_t v35 = 32;
        __int16 v36 = (void *)MEMORY[0x1E4FBC860];
        while (1)
        {
          long long v37 = *(_OWORD *)(v32 + v35 + 16);
          *(_OWORD *)unint64_t v107 = *(_OWORD *)(v32 + v35);
          *(_OWORD *)&v107[16] = v37;
          long long v38 = *(_OWORD *)(v32 + v35 + 32);
          long long v39 = *(_OWORD *)(v32 + v35 + 48);
          long long v40 = *(_OWORD *)(v32 + v35 + 80);
          long long v109 = *(_OWORD *)(v32 + v35 + 64);
          long long v110 = v40;
          *(_OWORD *)&v107[32] = v38;
          long long v108 = v39;
          long long v41 = *(_OWORD *)(v32 + v35 + 96);
          long long v42 = *(_OWORD *)(v32 + v35 + 112);
          long long v43 = *(_OWORD *)(v32 + v35 + 128);
          *(_OWORD *)&v113[13] = *(_OWORD *)(v32 + v35 + 141);
          long long v112 = v42;
          *(_OWORD *)long long v113 = v43;
          long long v111 = v41;
          char v44 = v107[0];
          sub_1DCD32CC8((uint64_t)v107);
          sub_1DCD32CC8((uint64_t)v107);
          char v45 = sub_1DCD7C698(v44, v102);
          sub_1DCD32DD4((uint64_t)v107);
          char v46 = HIBYTE(v112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            __int16 v36 = sub_1DCE9D680(0, v36[2] + 1, 1, v36);
          }
          unint64_t v48 = v36[2];
          unint64_t v47 = v36[3];
          if (v48 >= v47 >> 1) {
            __int16 v36 = sub_1DCE9D680((void *)(v47 > 1), v48 + 1, 1, v36);
          }
          char v49 = v113[28];
          int v50 = *(_DWORD *)&v113[24];
          char v51 = v113[1];
          char v52 = v113[0];
          char v53 = BYTE14(v112);
          char v54 = BYTE13(v112);
          char v55 = BYTE12(v112);
          int v56 = DWORD2(v112);
          char v57 = v107[40];
          int v58 = &v36[20 * v48];
          uint64_t v59 = v112;
          long long v60 = *(_OWORD *)&v107[24];
          long long v61 = v108;
          long long v62 = v109;
          long long v63 = v110;
          long long v64 = v111;
          long long v65 = *(_OWORD *)&v113[8];
          long long v66 = *(_OWORD *)&v107[8];
          v36[2] = v48 + 1;
          *((unsigned char *)v58 + 32) = v44;
          int v67 = *(_DWORD *)&v106[3];
          *(_DWORD *)((char *)v58 + 33) = *(_DWORD *)v106;
          *((_DWORD *)v58 + 9) = v67;
          *(_OWORD *)(v58 + 5) = v66;
          *(_OWORD *)(v58 + 7) = v60;
          *((unsigned char *)v58 + 72) = v57;
          int v68 = *(_DWORD *)&v105[3];
          *(_DWORD *)((char *)v58 + 73) = *(_DWORD *)v105;
          *((_DWORD *)v58 + 19) = v68;
          *((_OWORD *)v58 + 5) = v61;
          *((_OWORD *)v58 + 6) = v62;
          *((_OWORD *)v58 + 7) = v63;
          *((_OWORD *)v58 + 8) = v64;
          v58[18] = v59;
          *((_DWORD *)v58 + 38) = v56;
          *((unsigned char *)v58 + 156) = v55;
          *((unsigned char *)v58 + 157) = v54;
          *((unsigned char *)v58 + 158) = v53;
          *((unsigned char *)v58 + 159) = v45 & v46 & 1;
          *((unsigned char *)v58 + 160) = v52;
          *((unsigned char *)v58 + 161) = v51;
          int v69 = v103;
          *((_WORD *)v58 + 83) = v104;
          *(_DWORD *)((char *)v58 + 162) = v69;
          *(_OWORD *)(v58 + 21) = v65;
          *((_DWORD *)v58 + 46) = v50;
          *((unsigned char *)v58 + 188) = v49;
          if (!v34) {
            break;
          }
          --v34;
          v35 += 160;
        }
        swift_bridgeObjectRelease_n();
        uint64_t v5 = v95;
        long long v7 = v94;
        uint64_t v10 = v93;
        uint64_t v12 = v92;
      }
      else
      {
        swift_bridgeObjectRelease();
        __int16 v36 = (void *)MEMORY[0x1E4FBC860];
      }
      *((void *)v10 + 6) = v36;
      sub_1DCD36E7C((uint64_t)v10, (uint64_t)v7);
      unint64_t v30 = v100;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v71 = v101;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v30 = sub_1DCE9D7A0(0, *(void *)(v30 + 16) + 1, 1, v30);
      }
      unint64_t v73 = *(void *)(v30 + 16);
      unint64_t v72 = *(void *)(v30 + 24);
      if (v73 >= v72 >> 1) {
        unint64_t v30 = sub_1DCE9D7A0(v72 > 1, v73 + 1, 1, v30);
      }
      unint64_t v29 = v71 + 1;
      *(void *)(v30 + 16) = v73 + 1;
      sub_1DCD36EE0((uint64_t)v7, v30 + v97 + v73 * v99);
      uint64_t result = sub_1DCD96118((uint64_t)v10);
      if (v29 == v98)
      {
        swift_bridgeObjectRelease();
        a2 = v91;
        uint64_t v11 = v90;
        uint64_t v13 = v89;
        uint64_t v14 = v88;
        uint64_t v15 = v87;
        uint64_t v16 = v86;
        uint64_t v17 = v85;
        uint64_t v18 = v84;
        uint64_t v19 = v83;
        uint64_t v27 = v82;
        uint64_t v25 = v81;
        long long v20 = v80;
        long long v21 = v79;
        long long v22 = v78;
        LOBYTE(v23) = v77;
        uint64_t v24 = v76;
        uint64_t v26 = v75;
        goto LABEL_21;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v30 = MEMORY[0x1E4FBC860];
LABEL_21:
    *(void *)a2 = v30;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v13;
    *(void *)(a2 + 24) = v14;
    *(void *)(a2 + 32) = v15;
    *(void *)(a2 + 40) = v16;
    *(void *)(a2 + 48) = v17;
    *(void *)(a2 + 56) = v18;
    *(void *)(a2 + 64) = v19;
    *(_OWORD *)(a2 + 72) = v20;
    *(_OWORD *)(a2 + 88) = v21;
    *(_OWORD *)(a2 + 104) = v22;
    *(unsigned char *)(a2 + 120) = v23;
    *(void *)(a2 + 128) = v24;
    *(void *)(a2 + 136) = v25;
    *(void *)(a2 + 144) = v26;
    *(void *)(a2 + 152) = 0;
    *(void *)(a2 + 160) = 0;
    *(void *)(a2 + 168) = 0;
    *(void *)(a2 + 176) = v27;
    sub_1DCD434B4(v11);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1DCF25098()
{
  unint64_t result = qword_1EAB04110;
  if (!qword_1EAB04110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04110);
  }
  return result;
}

uint64_t sub_1DCF250EC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1DD048F68();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_139;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v81 = *a1;
      uint64_t v82 = *a1 + 160;
      uint64_t v83 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v85 = v83;
        uint64_t v86 = v82;
        do
        {
          if (*(float *)(v86 - 48) >= *(float *)(v86 + 112)) {
            break;
          }
          if (!v81) {
            goto LABEL_143;
          }
          uint64_t v87 = (_OWORD *)(v86 - 160);
          long long v132 = *(_OWORD *)(v86 + 96);
          long long v135 = *(_OWORD *)(v86 + 112);
          *(_OWORD *)char v138 = *(_OWORD *)(v86 + 128);
          *(_OWORD *)&v138[13] = *(_OWORD *)(v86 + 141);
          long long v120 = *(_OWORD *)(v86 + 32);
          long long v123 = *(_OWORD *)(v86 + 48);
          long long v126 = *(_OWORD *)(v86 + 64);
          long long v129 = *(_OWORD *)(v86 + 80);
          long long v114 = *(_OWORD *)v86;
          long long v117 = *(_OWORD *)(v86 + 16);
          long long v88 = *(_OWORD *)(v86 - 48);
          *(_OWORD *)(v86 + 96) = *(_OWORD *)(v86 - 64);
          *(_OWORD *)(v86 + 112) = v88;
          long long v89 = *(_OWORD *)(v86 - 16);
          *(_OWORD *)(v86 + 128) = *(_OWORD *)(v86 - 32);
          *(_OWORD *)(v86 + 144) = v89;
          long long v90 = *(_OWORD *)(v86 - 112);
          *(_OWORD *)(v86 + 32) = *(_OWORD *)(v86 - 128);
          *(_OWORD *)(v86 + 48) = v90;
          long long v91 = *(_OWORD *)(v86 - 80);
          *(_OWORD *)(v86 + 64) = *(_OWORD *)(v86 - 96);
          *(_OWORD *)(v86 + 80) = v91;
          long long v92 = *(_OWORD *)(v86 - 144);
          *(_OWORD *)uint64_t v86 = *(_OWORD *)(v86 - 160);
          *(_OWORD *)(v86 + 16) = v92;
          v87[6] = v132;
          v87[7] = v135;
          v87[8] = *(_OWORD *)v138;
          *(_OWORD *)((char *)v87 + 141) = *(_OWORD *)&v138[13];
          v87[2] = v120;
          v87[3] = v123;
          v87[4] = v126;
          v87[5] = v129;
          v86 -= 160;
          *uint64_t v87 = v114;
          v87[1] = v117;
        }
        while (!__CFADD__(v85++, 1));
        v82 += 160;
        --v83;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_148;
  }
  uint64_t v107 = result;
  int v103 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    long long v109 = (float *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v94 = (char *)MEMORY[0x1E4FBC860];
LABEL_105:
      uint64_t v106 = v8;
      if (v11 >= 2)
      {
        uint64_t v95 = *v103;
        do
        {
          unint64_t v96 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_134;
          }
          if (!v95) {
            goto LABEL_147;
          }
          unint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v11 + 24];
          sub_1DCF2594C((float *)(v95 + 160 * v98), (float *)(v95 + 160 * *(void *)&v94[16 * v11 + 16]), v95 + 160 * v99, v109);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v97 = sub_1DCD729EC((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_136;
          }
          unint64_t v100 = &v97[16 * v96 + 32];
          *(void *)unint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v11 > v101) {
            goto LABEL_137;
          }
          memmove(&v97[16 * v11 + 16], &v97[16 * v11 + 32], 16 * (v101 - v11));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v11 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      *(void *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v106 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1DD0486F8();
    *(void *)(v7 + 16) = v6;
    uint64_t v106 = v7;
    long long v109 = (float *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v104 = *a1 + 272;
  uint64_t v105 = *a1 + 112;
  uint64_t v102 = *a1 - 160;
  long long v110 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v111 = *a1;
  uint64_t v108 = v3;
  while (1)
  {
    uint64_t v12 = v9++;
    if (v9 < v3)
    {
      float v13 = *(float *)(v105 + 160 * v9);
      float v14 = *(float *)(v105 + 160 * v12);
      uint64_t v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        uint64_t v15 = (float *)(v104 + 160 * v12);
        while (v14 < v13 != *v15 >= v15[40])
        {
          ++v9;
          v15 += 40;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v13)
      {
        if (v9 < v12) {
          goto LABEL_140;
        }
        if (v12 < v9)
        {
          uint64_t v16 = (_OWORD *)(v102 + 160 * v9);
          uint64_t v17 = v9;
          uint64_t v18 = v12;
          uint64_t v19 = (long long *)(v10 + 160 * v12);
          do
          {
            if (v18 != --v17)
            {
              if (!v10) {
                goto LABEL_146;
              }
              long long v130 = v19[6];
              long long v133 = v19[7];
              *(_OWORD *)uint64_t v136 = v19[8];
              *(_OWORD *)&v136[13] = *(long long *)((char *)v19 + 141);
              long long v118 = v19[2];
              long long v121 = v19[3];
              long long v124 = v19[4];
              long long v127 = v19[5];
              long long v112 = *v19;
              long long v115 = v19[1];
              memmove(v19, v16, 0xA0uLL);
              v16[6] = v130;
              v16[7] = v133;
              v16[8] = *(_OWORD *)v136;
              *(_OWORD *)((char *)v16 + 141) = *(_OWORD *)&v136[13];
              v16[2] = v118;
              v16[3] = v121;
              v16[4] = v124;
              id v16[5] = v127;
              *uint64_t v16 = v112;
              v16[1] = v115;
              uint64_t v10 = v111;
            }
            ++v18;
            v16 -= 10;
            v19 += 10;
          }
          while (v18 < v17);
          uint64_t v3 = v108;
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_39;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_138;
    }
    if (v9 - v12 >= v107) {
      goto LABEL_39;
    }
    uint64_t v20 = v12 + v107;
    if (__OFADD__(v12, v107)) {
      goto LABEL_141;
    }
    if (v20 >= v3) {
      uint64_t v20 = v3;
    }
    if (v20 < v12) {
      break;
    }
    if (v9 != v20)
    {
      unint64_t v71 = (long long *)(v10 + 160 * v9);
      long long v21 = v110;
      do
      {
        uint64_t v72 = v12;
        unint64_t v73 = v71;
        do
        {
          if (*((float *)v73 - 12) >= *((float *)v73 + 28)) {
            break;
          }
          if (!v10) {
            goto LABEL_144;
          }
          uint64_t v74 = v73 - 10;
          long long v131 = v73[6];
          long long v134 = v73[7];
          *(_OWORD *)uint64_t v137 = v73[8];
          *(_OWORD *)&v137[13] = *(long long *)((char *)v73 + 141);
          long long v119 = v73[2];
          long long v122 = v73[3];
          long long v125 = v73[4];
          long long v128 = v73[5];
          long long v113 = *v73;
          long long v116 = v73[1];
          long long v75 = *(v73 - 3);
          v73[6] = *(v73 - 4);
          v73[7] = v75;
          long long v76 = *(v73 - 1);
          v73[8] = *(v73 - 2);
          v73[9] = v76;
          long long v77 = *(v73 - 7);
          v73[2] = *(v73 - 8);
          v73[3] = v77;
          long long v78 = *(v73 - 5);
          v73[4] = *(v73 - 6);
          v73[5] = v78;
          long long v79 = *(v73 - 9);
          long long *v73 = *(v73 - 10);
          v73[1] = v79;
          v74[6] = v131;
          v74[7] = v134;
          v74[8] = *(_OWORD *)v137;
          *(long long *)((char *)v74 + 141) = *(_OWORD *)&v137[13];
          v74[2] = v119;
          v74[3] = v122;
          v74[4] = v125;
          v74[5] = v128;
          ++v72;
          v73 -= 10;
          long long *v74 = v113;
          v74[1] = v116;
        }
        while (v9 != v72);
        ++v9;
        v71 += 10;
      }
      while (v9 != v20);
      uint64_t v9 = v20;
      if (v20 < v12) {
        goto LABEL_133;
      }
      goto LABEL_40;
    }
LABEL_39:
    long long v21 = v110;
    if (v9 < v12) {
      goto LABEL_133;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v21 = sub_1DCD71FDC(0, *((void *)v21 + 2) + 1, 1, v21);
    }
    unint64_t v23 = *((void *)v21 + 2);
    unint64_t v22 = *((void *)v21 + 3);
    unint64_t v11 = v23 + 1;
    uint64_t v10 = v111;
    if (v23 >= v22 >> 1)
    {
      long long v80 = sub_1DCD71FDC((char *)(v22 > 1), v23 + 1, 1, v21);
      uint64_t v10 = v111;
      long long v21 = v80;
    }
    *((void *)v21 + 2) = v11;
    uint64_t v24 = v21 + 32;
    uint64_t v25 = &v21[16 * v23 + 32];
    *(void *)uint64_t v25 = v12;
    *((void *)v25 + 1) = v9;
    long long v110 = v21;
    if (v23)
    {
      while (1)
      {
        unint64_t v26 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v31 = &v24[16 * v11];
          uint64_t v32 = *((void *)v31 - 8);
          uint64_t v33 = *((void *)v31 - 7);
          BOOL v37 = __OFSUB__(v33, v32);
          uint64_t v34 = v33 - v32;
          if (v37) {
            goto LABEL_122;
          }
          uint64_t v36 = *((void *)v31 - 6);
          uint64_t v35 = *((void *)v31 - 5);
          BOOL v37 = __OFSUB__(v35, v36);
          uint64_t v29 = v35 - v36;
          char v30 = v37;
          if (v37) {
            goto LABEL_123;
          }
          unint64_t v38 = v11 - 2;
          long long v39 = &v24[16 * v11 - 32];
          uint64_t v41 = *(void *)v39;
          uint64_t v40 = *((void *)v39 + 1);
          BOOL v37 = __OFSUB__(v40, v41);
          uint64_t v42 = v40 - v41;
          if (v37) {
            goto LABEL_125;
          }
          BOOL v37 = __OFADD__(v29, v42);
          uint64_t v43 = v29 + v42;
          if (v37) {
            goto LABEL_128;
          }
          if (v43 >= v34)
          {
            long long v61 = &v24[16 * v26];
            uint64_t v63 = *(void *)v61;
            uint64_t v62 = *((void *)v61 + 1);
            BOOL v37 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v37) {
              goto LABEL_132;
            }
            BOOL v54 = v29 < v64;
            goto LABEL_76;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v55 = *((void *)v21 + 4);
            uint64_t v56 = *((void *)v21 + 5);
            BOOL v37 = __OFSUB__(v56, v55);
            uint64_t v48 = v56 - v55;
            char v49 = v37;
            goto LABEL_70;
          }
          uint64_t v28 = *((void *)v21 + 4);
          uint64_t v27 = *((void *)v21 + 5);
          BOOL v37 = __OFSUB__(v27, v28);
          uint64_t v29 = v27 - v28;
          char v30 = v37;
        }
        if (v30) {
          goto LABEL_124;
        }
        unint64_t v38 = v11 - 2;
        char v44 = &v24[16 * v11 - 32];
        uint64_t v46 = *(void *)v44;
        uint64_t v45 = *((void *)v44 + 1);
        BOOL v47 = __OFSUB__(v45, v46);
        uint64_t v48 = v45 - v46;
        char v49 = v47;
        if (v47) {
          goto LABEL_127;
        }
        int v50 = &v24[16 * v26];
        uint64_t v52 = *(void *)v50;
        uint64_t v51 = *((void *)v50 + 1);
        BOOL v37 = __OFSUB__(v51, v52);
        uint64_t v53 = v51 - v52;
        if (v37) {
          goto LABEL_130;
        }
        if (__OFADD__(v48, v53)) {
          goto LABEL_131;
        }
        if (v48 + v53 >= v29)
        {
          BOOL v54 = v29 < v53;
LABEL_76:
          if (v54) {
            unint64_t v26 = v38;
          }
          goto LABEL_78;
        }
LABEL_70:
        if (v49) {
          goto LABEL_126;
        }
        char v57 = &v24[16 * v26];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v37 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v37) {
          goto LABEL_129;
        }
        if (v60 < v48) {
          goto LABEL_15;
        }
LABEL_78:
        unint64_t v65 = v26 - 1;
        if (v26 - 1 >= v11)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v10) {
          goto LABEL_145;
        }
        long long v66 = &v24[16 * v65];
        uint64_t v67 = *(void *)v66;
        int v68 = &v24[16 * v26];
        uint64_t v69 = *((void *)v68 + 1);
        sub_1DCF2594C((float *)(v10 + 160 * *(void *)v66), (float *)(v10 + 160 * *(void *)v68), v10 + 160 * v69, v109);
        if (v1) {
          goto LABEL_95;
        }
        if (v69 < v67) {
          goto LABEL_119;
        }
        if (v26 > *((void *)v110 + 2)) {
          goto LABEL_120;
        }
        *(void *)long long v66 = v67;
        *(void *)&v24[16 * v65 + 8] = v69;
        unint64_t v70 = *((void *)v110 + 2);
        if (v26 >= v70) {
          goto LABEL_121;
        }
        long long v21 = v110;
        unint64_t v11 = v70 - 1;
        memmove(&v24[16 * v26], v68 + 16, 16 * (v70 - 1 - v26));
        *((void *)v110 + 2) = v70 - 1;
        uint64_t v10 = v111;
        if (v70 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    uint64_t v3 = v108;
    if (v9 >= v108)
    {
      uint64_t v8 = v106;
      uint64_t v94 = v110;
      goto LABEL_105;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCF2594C(float *__dst, float *__src, unint64_t a3, float *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 160;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 160;
  uint64_t v25 = __dst;
  uint64_t v24 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -159)
    {
      uint64_t v17 = 40 * v11;
      if (a4 != __src || &__src[v17] <= a4) {
        memmove(a4, __src, 160 * v11);
      }
      uint64_t v18 = &v4[v17];
      unint64_t v23 = (char *)&v4[v17];
      uint64_t v25 = v6;
      if (v7 < v6 && v10 >= 160)
      {
        uint64_t v19 = (float *)(a3 - 160);
        do
        {
          uint64_t v20 = v19 + 40;
          if (*(v6 - 12) >= *(v18 - 12))
          {
            unint64_t v23 = (char *)(v18 - 40);
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              memmove(v19, v18 - 40, 0xA0uLL);
            }
            long long v21 = v6;
            v18 -= 40;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            long long v21 = v6 - 40;
            if (v20 != v6 || v19 >= v6) {
              memmove(v19, v6 - 40, 0xA0uLL);
            }
            uint64_t v25 = v6 - 40;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 40;
          uint64_t v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_1DCD722E4((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -159)
  {
    size_t v12 = 40 * v9;
    if (a4 != __dst || &__dst[v12] <= a4) {
      memmove(a4, __dst, v12 * 4);
    }
    float v13 = &v4[v12];
    unint64_t v23 = (char *)v13;
    if ((unint64_t)v6 < a3 && v8 >= 160)
    {
      float v14 = v4;
      while (1)
      {
        if (v14[28] >= v6[28])
        {
          uint64_t v4 = v14 + 40;
          uint64_t v16 = v14;
          uint64_t v15 = v6;
          if (v7 == v14)
          {
            v14 += 40;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v14 += 40;
          }
        }
        else
        {
          uint64_t v15 = v6 + 40;
          uint64_t v16 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_18;
          }
        }
        memmove(v7, v16, 0xA0uLL);
LABEL_18:
        v7 += 40;
        if (v14 < v13)
        {
          uint64_t v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        uint64_t v24 = v4;
        uint64_t v25 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCF25BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  int64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (CGRect *)((char *)&v36 - v10);
  MEMORY[0x1F4188790](v12);
  float v14 = (char *)&v36 - v13;
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v37 = v2;
    uint64_t v42 = MEMORY[0x1E4FBC860];
    int64_t v40 = v15;
    sub_1DCFC49E8(0, v15, 0);
    uint64_t v17 = 0;
    unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v38 = a1 + v18;
    unint64_t v39 = v18;
    uint64_t v19 = a2;
    uint64_t v20 = *(void *)(a2 + 16);
    uint64_t v21 = *(void *)(v6 + 72);
    uint64_t v41 = v19;
    uint64_t v36 = v19 + v18;
    do
    {
      unint64_t v22 = (double *)(v38 + v21 * v17);
      if (v20)
      {
        CGFloat v23 = *v22;
        CGFloat v24 = v22[1];
        CGFloat v25 = v22[2];
        CGFloat v26 = v22[3];
        swift_bridgeObjectRetain();
        uint64_t v27 = v36;
        uint64_t v28 = v20;
        while (1)
        {
          sub_1DCD36E7C(v27, (uint64_t)v11);
          v43.origin.double x = v23;
          v43.origin.double y = v24;
          v43.size.double width = v25;
          v43.size.double height = v26;
          if (CGRectEqualToRect(*v11, v43)) {
            break;
          }
          sub_1DCD96118((uint64_t)v11);
          v27 += v21;
          if (!--v28)
          {
            swift_bridgeObjectRelease();
            goto LABEL_8;
          }
        }
        uint64_t v29 = sub_1DCD36E7C((uint64_t)v22, (uint64_t)v8);
        uint64_t v30 = *((void *)v8 + 6);
        MEMORY[0x1F4188790](v29);
        *(&v36 - 2) = (uint64_t)v11;
        swift_bridgeObjectRetain();
        uint64_t v31 = v37;
        uint64_t v32 = sub_1DCFB2CA0((void (*)(void *__return_ptr, long long *))sub_1DCF25F18, (uint64_t)(&v36 - 4), v30);
        uint64_t v37 = v31;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1DCD96118((uint64_t)v11);
        swift_bridgeObjectRelease();
        *((void *)v8 + 6) = v32;
        sub_1DCD36EE0((uint64_t)v8, (uint64_t)v14);
      }
      else
      {
LABEL_8:
        sub_1DCD36E7C((uint64_t)v22, (uint64_t)v14);
      }
      uint64_t v16 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCFC49E8(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v42;
      }
      unint64_t v34 = *(void *)(v16 + 16);
      unint64_t v33 = *(void *)(v16 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1DCFC49E8(v33 > 1, v34 + 1, 1);
        uint64_t v16 = v42;
      }
      ++v17;
      *(void *)(v16 + 16) = v34 + 1;
      sub_1DCD36EE0((uint64_t)v14, v16 + v39 + v34 * v21);
    }
    while (v17 != v40);
  }
  return v16;
}

uint64_t sub_1DCF25F18@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCF24270(a1, *(void *)(v2 + 16), a2);
}

id sub_1DCF26190()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnyVIAEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AnyVIAEvent()
{
  return self;
}

uint64_t sub_1DCF261F8()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SignalsExtractor()
{
  return self;
}

uint64_t sub_1DCF2625C(void **a1, uint64_t (*a2)(void *))
{
  uint64_t v4 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
  uint64_t v5 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = (void *)sub_1DCD742D8(v5);
  }
  uint64_t v6 = v5[2];
  v8[0] = (char *)v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v8[1] = v6;
  uint64_t result = a2(v8);
  *a1 = v5;
  return result;
}

uint64_t sub_1DCF26314@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, uint64_t a11@<D3>, double a12@<D4>, double a13@<D5>)
{
  long long v115 = a6;
  unint64_t v100 = a5;
  uint64_t v155 = a3;
  uint64_t v113 = a7;
  uint64_t v114 = a2;
  double v98 = a12;
  double v99 = a13;
  uint64_t v97 = a11;
  uint64_t v18 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v18 - 8);
  long long v89 = (long long *)((char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_1DD048068();
  uint64_t v92 = *(void *)(v20 - 8);
  uint64_t v93 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v94 = (uint64_t)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85BF8);
  MEMORY[0x1F4188790](v22 - 8);
  long long v88 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.CornerGlyphConfig(0);
  uint64_t v90 = *(void *)(v24 - 8);
  uint64_t v91 = v24;
  MEMORY[0x1F4188790](v24);
  uint64_t v87 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C38);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v101 = (uint64_t)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig(0);
  uint64_t v84 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v85 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v29 = a1[3];
  long long v148 = a1[2];
  long long v30 = a1[7];
  long long v152 = a1[6];
  long long v153 = v30;
  v154[0] = a1[8];
  *(_OWORD *)((char *)v154 + 13) = *(_OWORD *)((char *)a1 + 141);
  long long v31 = a1[4];
  long long v32 = a1[5];
  long long v149 = v29;
  long long v150 = v31;
  long long v151 = v32;
  long long v33 = a1[1];
  v147[0] = *a1;
  v147[1] = v33;
  int v112 = BYTE12(v154[1]);
  int v95 = DWORD2(v154[1]);
  uint64_t v110 = *((void *)&v154[0] + 1);
  uint64_t v111 = *(void *)&v154[1];
  int v108 = LOBYTE(v154[0]);
  int v109 = BYTE1(v154[0]);
  int v96 = BYTE14(v153);
  int v106 = BYTE13(v153);
  int v107 = HIBYTE(v153);
  int v34 = DWORD2(v153);
  int v35 = DWORD1(v153);
  int v36 = v153;
  long long v104 = v32;
  long long v105 = v152;
  long long v103 = v31;
  uint64_t v102 = *((void *)&v149 + 1);
  uint64_t v37 = (uint64_t *)v149;
  int v38 = BYTE8(v148);
  unint64_t v39 = *((void *)&v33 + 1);
  double v40 = *(double *)&v148;
  uint64_t v41 = *((void *)&v147[0] + 1);
  unint64_t v42 = v33;
  int v43 = LOBYTE(v147[0]);
  *(double *)&long long v142 = a8;
  *((double *)&v142 + 1) = a9;
  *(double *)&long long v143 = a10;
  *((void *)&v143 + 1) = v97;
  uint64_t v97 = a4;
  sub_1DCD43B04(a4, (uint64_t)&v117, &qword_1EBE855D8);
  v116[0] = v43;
  uint64_t v44 = *v115;
  sub_1DCD32CC8((uint64_t)v147);
  swift_bridgeObjectRetain();
  uint64_t v45 = v114;
  char v46 = sub_1DCF2F828(v114, (uint64_t *)&v142, v155, (uint64_t *)&v117, v116, v100, v44, v98, v99);
  swift_bridgeObjectRelease();
  if (v46)
  {
    unint64_t v83 = v39;
    double v98 = v40;
    LODWORD(v99) = v38;
    unint64_t v100 = v37;
    float v47 = *(float *)(v45 + 76);
    uint64_t v48 = v115;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v142 = *v48;
    *uint64_t v48 = 0x8000000000000000;
    sub_1DCDA1468(v43, isUniquelyReferenced_nonNull_native, (uint64_t)&v117, v47);
    *uint64_t v48 = v142;
    swift_bridgeObjectRelease();
    v146[0] = v43;
    long long v50 = *(_OWORD *)(v45 + 16);
    long long v142 = *(_OWORD *)v45;
    long long v143 = v50;
    sub_1DCD43B04(v97, (uint64_t)&v117, &qword_1EBE855D8);
    uint64_t v51 = *(void *)(v155 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20))
        + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__safetyConfig;
    swift_beginAccess();
    uint64_t v52 = v51;
    uint64_t v53 = v101;
    sub_1DCD2889C(v52, v101, &qword_1EBE84C38);
    uint64_t v54 = v86;
    int v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v53, 1, v86);
    uint64_t v56 = MEMORY[0x1E4FBC860];
    int v57 = v95;
    LODWORD(v155) = v43;
    uint64_t v58 = (uint64_t)v87;
    uint64_t v59 = (uint64_t)v88;
    uint64_t v60 = v85;
    if (v55 == 1)
    {
      *(_WORD *)uint64_t v85 = 0;
      *((void *)v60 + 1) = sub_1DCDB86BC(v56);
      *((void *)v60 + 2) = sub_1DCDB8914(v56);
      *((void *)v60 + 3) = v56;
      *((void *)v60 + 4) = v56;
      *((void *)v60 + 5) = v56;
      sub_1DD047BE8();
      uint64_t v61 = v90;
      uint64_t v62 = v91;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(&v60[*(int *)(v54 + 48)], 1, 1, v91);
      sub_1DCD2479C(v101, &qword_1EBE84C38);
    }
    else
    {
      sub_1DCF30E98(v101, (uint64_t)v85, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
      uint64_t v61 = v90;
      uint64_t v62 = v91;
    }
    sub_1DCD2889C((uint64_t)&v60[*(int *)(v54 + 48)], v59, &qword_1EBE85BF8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v59, 1, v62) == 1)
    {
      *(unsigned char *)uint64_t v58 = 0;
      *(void *)(v58 + 8) = v56;
      *(_DWORD *)(v58 + 16) = 0;
      sub_1DD047BE8();
      sub_1DCD2479C(v59, &qword_1EBE85BF8);
    }
    else
    {
      sub_1DCF30E98(v59, v58, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.CornerGlyphConfig);
    }
    sub_1DCF30F68((uint64_t)v60, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
    char v64 = sub_1DCDD81C0(v146, (CGFloat *)&v142, (unint64_t *)&v117, v58);
    sub_1DCF30F68(v58, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.CornerGlyphConfig);
    if (v64) {
      LODWORD(v65) = 1;
    }
    else {
      LODWORD(v65) = v96;
    }
    uint64_t v66 = v94;
    sub_1DCDB40EC(v94);
    uint64_t v67 = v89;
    sub_1DCF30F00(v114, (uint64_t)v89, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD32CC8((uint64_t)v147);
    sub_1DCD32CC8((uint64_t)v147);
    int v68 = sub_1DD048048();
    os_log_type_t v69 = sub_1DD048848();
    BOOL v70 = os_log_type_enabled(v68, v69);
    char v71 = v155;
    if (v70)
    {
      uint64_t v72 = swift_slowAlloc();
      LODWORD(v115) = v65;
      uint64_t v65 = v72;
      uint64_t v114 = swift_slowAlloc();
      *(void *)&long long v142 = v114;
      *(_DWORD *)uint64_t v65 = 136315394;
      unsigned long long v73 = v67[1];
      long long v117 = *v67;
      unsigned long long v118 = v73;
      uint64_t v74 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v117 = sub_1DCED7FA0(v74, v75, (uint64_t *)&v142);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCF30F68((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      *(_WORD *)(v65 + 12) = 2080;
      uint64_t v76 = sub_1DCD9C35C(v71);
      *(void *)&long long v117 = sub_1DCED7FA0(v76, v77, (uint64_t *)&v142);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD32DD4((uint64_t)v147);
      sub_1DCD32DD4((uint64_t)v147);
      _os_log_impl(&dword_1DCCF9000, v68, v69, "%s selects %s.", (uint8_t *)v65, 0x16u);
      uint64_t v78 = v114;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v78, -1, -1);
      uint64_t v79 = v65;
      LOBYTE(v65) = (_BYTE)v115;
      MEMORY[0x1E01B07E0](v79, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v94, v93);
    }
    else
    {
      sub_1DCF30F68((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCD32DD4((uint64_t)v147);
      sub_1DCD32DD4((uint64_t)v147);

      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v66, v93);
    }
    uint64_t v80 = v113;
    *(_DWORD *)((char *)&v117 + 1) = v142;
    DWORD1(v117) = *(_DWORD *)((char *)&v142 + 3);
    *(_DWORD *)long long v121 = *(_DWORD *)v146;
    *(_DWORD *)&v121[3] = *(_DWORD *)&v146[3];
    int v136 = v144;
    __int16 v137 = v145;
    LOBYTE(v117) = v71;
    *((void *)&v117 + 1) = v41;
    *(void *)&unsigned long long v118 = v42;
    *((void *)&v118 + 1) = v83;
    double v119 = v98;
    char v120 = LOBYTE(v99);
    long long v122 = v100;
    uint64_t v123 = v102;
    long long v124 = v103;
    long long v125 = v104;
    long long v126 = v105;
    int v127 = v36;
    int v128 = v35;
    int v129 = v34;
    char v130 = 1;
    char v131 = v106;
    char v132 = v65;
    char v133 = v107;
    char v134 = v108;
    char v135 = v109;
    uint64_t v138 = v110;
    uint64_t v139 = v111;
    int v140 = v57;
    char v141 = v112;
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v117);
    uint64_t v63 = v80;
  }
  else
  {
    LOBYTE(v117) = v43;
    *((void *)&v117 + 1) = v41;
    unsigned long long v118 = __PAIR128__(v39, v42);
    double v119 = v40;
    char v120 = v38;
    long long v122 = v37;
    uint64_t v123 = v102;
    long long v124 = v103;
    long long v125 = v104;
    long long v126 = v105;
    int v127 = v36;
    int v128 = v35;
    int v129 = v34;
    char v130 = 0;
    char v131 = v106;
    char v132 = v96;
    char v133 = v107;
    char v134 = v108;
    char v135 = v109;
    uint64_t v138 = v110;
    uint64_t v139 = v111;
    int v140 = v95;
    char v141 = v112;
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v117);
    uint64_t v63 = v113;
  }
  return sub_1DCD43B04((uint64_t)&v117, v63, &qword_1EBE85400);
}

uint64_t sub_1DCF26D64@<X0>(_OWORD *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, double a12@<D5>)
{
  uint64_t v162 = a6;
  long long v158 = a5;
  uint64_t v165 = a3;
  uint64_t v166 = a4;
  uint64_t v164 = a2;
  uint64_t v19 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v163 = (char *)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  long long v156 = (long long *)((char *)&v146 - v22);
  MEMORY[0x1F4188790](v23);
  uint64_t v154 = (long long *)((char *)&v146 - v24);
  MEMORY[0x1F4188790](v25);
  uint64_t v147 = (uint64_t)&v146 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v146 = (uint64_t)&v146 - v28;
  uint64_t v168 = sub_1DD048068();
  uint64_t v198 = *(void *)(v168 - 8);
  MEMORY[0x1F4188790](v168);
  uint64_t v167 = (char *)&v146 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v159 = (uint64_t)&v146 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v157 = (uint64_t)&v146 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v155 = (uint64_t)&v146 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v149 = (uint64_t)&v146 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v148 = (uint64_t)&v146 - v39;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D38);
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v153 = (uint64_t)&v146 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains(0);
  uint64_t v151 = *(void *)(v42 - 8);
  uint64_t v152 = v42;
  MEMORY[0x1F4188790](v42);
  long long v150 = (uint64_t *)((char *)&v146 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C38);
  MEMORY[0x1F4188790](v44 - 8);
  char v46 = (char *)&v146 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig(0);
  uint64_t v48 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  long long v50 = (char *)&v146 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v51 = a1[7];
  long long v52 = a1[8];
  long long v53 = a1[5];
  long long v196 = a1[6];
  v197[0] = v51;
  v197[1] = v52;
  *(_OWORD *)((char *)&v197[1] + 13) = *(_OWORD *)((char *)a1 + 141);
  long long v54 = a1[1];
  long long v55 = a1[3];
  long long v192 = a1[2];
  long long v193 = v55;
  long long v56 = a1[5];
  long long v57 = a1[3];
  long long v194 = a1[4];
  long long v195 = v56;
  long long v58 = a1[1];
  v191[0] = *a1;
  v191[1] = v58;
  long long v188 = v194;
  long long v189 = v53;
  v190[0] = a1[6];
  *(_OWORD *)((char *)v190 + 12) = *(_OWORD *)((char *)a1 + 108);
  long long v184 = v191[0];
  long long v185 = v54;
  long long v186 = v192;
  long long v187 = v57;
  long long v182 = *(_OWORD *)((char *)v197 + 13);
  long long v183 = *(_OWORD *)((char *)&v197[1] + 13);
  int v160 = LOBYTE(v191[0]);
  int v161 = BYTE12(v197[0]);
  LOBYTE(v169) = v191[0];
  long long v59 = v164[1];
  uint64_t v60 = v164;
  long long v180 = *v164;
  long long v181 = v59;
  sub_1DCD43B04(v165, (uint64_t)&v170, &qword_1EBE855D8);
  uint64_t v61 = *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20);
  uint64_t v62 = v166;
  uint64_t v63 = *(void *)&v166[v61]
      + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__safetyConfig;
  swift_beginAccess();
  sub_1DCD2889C(v63, (uint64_t)v46, &qword_1EBE84C38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
  {
    *(_WORD *)long long v50 = 0;
    sub_1DCD32CC8((uint64_t)v191);
    uint64_t v64 = MEMORY[0x1E4FBC860];
    *((void *)v50 + 1) = sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
    *((void *)v50 + 2) = sub_1DCDB8914(v64);
    *((void *)v50 + 3) = v64;
    *((void *)v50 + 4) = v64;
    *((void *)v50 + 5) = v64;
    sub_1DD047BE8();
    uint64_t v65 = &v50[*(int *)(v47 + 48)];
    uint64_t v66 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.CornerGlyphConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 1, 1, v66);
    sub_1DCD2479C((uint64_t)v46, &qword_1EBE84C38);
  }
  else
  {
    sub_1DCF30E98((uint64_t)v46, (uint64_t)v50, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
    sub_1DCD32CC8((uint64_t)v191);
  }
  uint64_t v67 = (uint64_t)v60;
  uint64_t v68 = (uint64_t)v167;
  os_log_type_t v69 = (long long *)v163;
  char v70 = sub_1DCDD7B24((unsigned __int8 *)&v169, (uint64_t *)&v180, (uint64_t *)&v170, (uint64_t)v50);
  sub_1DCF30F68((uint64_t)v50, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  if ((v70 & 1) == 0)
  {
    uint64_t v86 = v159;
    sub_1DCDB40EC(v159);
    sub_1DCDB4300(v68);
    uint64_t v87 = v198 + 8;
    long long v88 = *(void (**)(uint64_t, uint64_t))(v198 + 8);
    uint64_t v89 = v168;
    v88(v86, v168);
    sub_1DCF30F00(v67, (uint64_t)v69, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD32CC8((uint64_t)v191);
    sub_1DCD32CC8((uint64_t)v191);
    uint64_t v90 = sub_1DD048048();
    os_log_type_t v91 = sub_1DD048848();
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v92 = swift_slowAlloc();
      uint64_t v198 = v87;
      uint64_t v93 = v92;
      uint64_t v94 = swift_slowAlloc();
      *(void *)&long long v180 = v94;
      *(_DWORD *)uint64_t v93 = 136315394;
      uint64_t v166 = (char *)v88;
      long long v95 = v69[1];
      long long v170 = *v69;
      long long v171 = v95;
      uint64_t v96 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v170 = sub_1DCED7FA0(v96, v97, (uint64_t *)&v180);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCF30F68((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      *(_WORD *)(v93 + 12) = 2080;
      uint64_t v98 = sub_1DCD9C35C(v160);
      *(void *)&long long v170 = sub_1DCED7FA0(v98, v99, (uint64_t *)&v180);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD32DD4((uint64_t)v191);
      sub_1DCD32DD4((uint64_t)v191);
      _os_log_impl(&dword_1DCCF9000, v90, v91, "%s drops %s due to safety", (uint8_t *)v93, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v94, -1, -1);
      MEMORY[0x1E01B07E0](v93, -1, -1);

      ((void (*)(char *, uint64_t))v166)(v167, v168);
    }
    else
    {
      sub_1DCF30F68((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCD32DD4((uint64_t)v191);
      sub_1DCD32DD4((uint64_t)v191);

      v88(v68, v89);
    }
    goto LABEL_19;
  }
  char v71 = v160;
  LOBYTE(v169) = v160;
  long long v72 = v60[1];
  long long v170 = *v60;
  long long v171 = v72;
  *(double *)&long long v180 = a9;
  *((double *)&v180 + 1) = a10;
  *(double *)&long long v181 = a11;
  *((double *)&v181 + 1) = a12;
  if (!sub_1DCFE894C((char *)&v169, (double *)&v170, (double *)&v180, a7, a8))
  {
    uint64_t v75 = v157;
    sub_1DCDB40EC(v157);
    unint64_t v100 = v156;
    sub_1DCF30F00((uint64_t)v60, (uint64_t)v156, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD32CC8((uint64_t)v191);
    sub_1DCD32CC8((uint64_t)v191);
    unint64_t v77 = sub_1DD048048();
    os_log_type_t v101 = sub_1DD048848();
    if (os_log_type_enabled(v77, v101))
    {
      uint64_t v102 = swift_slowAlloc();
      uint64_t v103 = swift_slowAlloc();
      *(void *)&long long v180 = v103;
      *(_DWORD *)uint64_t v102 = 136315394;
      long long v104 = v100[1];
      long long v170 = *v100;
      long long v171 = v104;
      uint64_t v105 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v170 = sub_1DCED7FA0(v105, v106, (uint64_t *)&v180);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCF30F68((uint64_t)v100, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      *(_WORD *)(v102 + 12) = 2080;
      uint64_t v107 = sub_1DCD9C35C(v160);
      *(void *)&long long v170 = sub_1DCED7FA0(v107, v108, (uint64_t *)&v180);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD32DD4((uint64_t)v191);
      sub_1DCD32DD4((uint64_t)v191);
      _os_log_impl(&dword_1DCCF9000, v77, v101, "%s drops %s due to small object size.", (uint8_t *)v102, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v103, -1, -1);
      MEMORY[0x1E01B07E0](v102, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v157, v168);
      goto LABEL_19;
    }
    uint64_t v113 = (uint64_t)v100;
LABEL_18:
    sub_1DCF30F68(v113, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD32DD4((uint64_t)v191);
    sub_1DCD32DD4((uint64_t)v191);

    (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v75, v168);
    goto LABEL_19;
  }
  uint64_t v73 = *v158;
  LOBYTE(v170) = v71;
  swift_bridgeObjectRetain();
  char v74 = sub_1DCF10AC8((unsigned __int8 *)&v170, v73);
  swift_bridgeObjectRelease();
  if (v74)
  {
    uint64_t v75 = v155;
    sub_1DCDB40EC(v155);
    uint64_t v76 = v154;
    sub_1DCF30F00((uint64_t)v60, (uint64_t)v154, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD32CC8((uint64_t)v191);
    sub_1DCD32CC8((uint64_t)v191);
    unint64_t v77 = sub_1DD048048();
    os_log_type_t v78 = sub_1DD048848();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = swift_slowAlloc();
      uint64_t v167 = (char *)swift_slowAlloc();
      *(void *)&long long v180 = v167;
      *(_DWORD *)uint64_t v79 = 136315394;
      long long v80 = v76[1];
      long long v170 = *v76;
      long long v171 = v80;
      uint64_t v81 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v170 = sub_1DCED7FA0(v81, v82, (uint64_t *)&v180);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCF30F68((uint64_t)v76, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      *(_WORD *)(v79 + 12) = 2080;
      uint64_t v83 = sub_1DCD9C35C(v71);
      *(void *)&long long v170 = sub_1DCED7FA0(v83, v84, (uint64_t *)&v180);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD32DD4((uint64_t)v191);
      sub_1DCD32DD4((uint64_t)v191);
      _os_log_impl(&dword_1DCCF9000, v77, v78, "%s drops %s due to it is already triggered on the regions", (uint8_t *)v79, 0x16u);
      uint64_t v85 = v167;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v85, -1, -1);
      MEMORY[0x1E01B07E0](v79, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v155, v168);
LABEL_19:
      uint64_t v114 = v162;
      long long v174 = v188;
      long long v175 = v189;
      *(_OWORD *)long long v176 = v190[0];
      *(_OWORD *)&v176[12] = *(_OWORD *)((char *)v190 + 12);
      long long v170 = v184;
      long long v171 = v185;
      long long v172 = v186;
      long long v173 = v187;
      long long v179 = v183;
      char v177 = v161;
      long long v178 = v182;
      faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v170);
      return sub_1DCD43B04((uint64_t)&v170, v114, &qword_1EBE85400);
    }
    uint64_t v113 = (uint64_t)v76;
    goto LABEL_18;
  }
  uint64_t v109 = *(void *)&v62[v61]
       + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__incompatibleDomains;
  swift_beginAccess();
  uint64_t v110 = v109;
  uint64_t v111 = v153;
  sub_1DCD2889C(v110, v153, &qword_1EBE84D38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48))(v111, 1, v152) == 1)
  {
    int v112 = v150;
    *long long v150 = MEMORY[0x1E4FBC860];
    sub_1DD047BE8();
    sub_1DCD2479C(v111, &qword_1EBE84D38);
  }
  else
  {
    int v112 = v150;
    sub_1DCF30E98(v111, (uint64_t)v150, type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains);
  }
  uint64_t v116 = v168;
  LOBYTE(v170) = v71;
  uint64_t v117 = *v158;
  swift_bridgeObjectRetain();
  uint64_t v118 = sub_1DCFEC144((uint64_t)&unk_1F3836208);
  char v119 = sub_1DCF10308((unsigned __int8 *)&v170, v117, v118);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1DCF30F68((uint64_t)v112, type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains);
  if (v119)
  {
    uint64_t v120 = v149;
    sub_1DCDB40EC(v149);
    uint64_t v121 = v147;
    sub_1DCF30F00(v67, v147, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD32CC8((uint64_t)v191);
    sub_1DCD32CC8((uint64_t)v191);
    long long v122 = sub_1DD048048();
    os_log_type_t v123 = sub_1DD048848();
    if (os_log_type_enabled(v122, v123))
    {
      long long v124 = (long long *)v121;
      uint64_t v125 = swift_slowAlloc();
      uint64_t v167 = (char *)swift_slowAlloc();
      uint64_t v169 = v167;
      *(_DWORD *)uint64_t v125 = 136315394;
      long long v126 = v124[1];
      long long v170 = *v124;
      long long v171 = v126;
      uint64_t v127 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v170 = sub_1DCED7FA0(v127, v128, (uint64_t *)&v169);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCF30F68((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      *(_WORD *)(v125 + 12) = 2080;
      uint64_t v129 = sub_1DCD9C35C(v71);
      *(void *)&long long v170 = sub_1DCED7FA0(v129, v130, (uint64_t *)&v169);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD32DD4((uint64_t)v191);
      sub_1DCD32DD4((uint64_t)v191);
      _os_log_impl(&dword_1DCCF9000, v122, v123, "%s drops %s due to incompatible domains.", (uint8_t *)v125, 0x16u);
      char v131 = v167;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v131, -1, -1);
      MEMORY[0x1E01B07E0](v125, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v149, v168);
    }
    else
    {
      sub_1DCF30F68(v121, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCD32DD4((uint64_t)v191);
      sub_1DCD32DD4((uint64_t)v191);

      (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v120, v116);
    }
    long long v174 = v188;
    long long v175 = v189;
    *(_OWORD *)long long v176 = v190[0];
    *(_OWORD *)&v176[12] = *(_OWORD *)((char *)v190 + 12);
    long long v170 = v184;
    long long v171 = v185;
    long long v172 = v186;
    long long v173 = v187;
    long long v179 = v183;
    char v177 = v161;
    long long v178 = v182;
  }
  else
  {
    uint64_t v132 = v148;
    sub_1DCDB40EC(v148);
    uint64_t v133 = v146;
    sub_1DCF30F00(v67, v146, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCD32CC8((uint64_t)v191);
    sub_1DCD32CC8((uint64_t)v191);
    char v134 = sub_1DD048048();
    os_log_type_t v135 = sub_1DD048848();
    if (os_log_type_enabled(v134, v135))
    {
      int v136 = (long long *)v133;
      uint64_t v137 = swift_slowAlloc();
      uint64_t v167 = (char *)swift_slowAlloc();
      uint64_t v169 = v167;
      *(_DWORD *)uint64_t v137 = 136315394;
      long long v138 = v136[1];
      long long v170 = *v136;
      long long v171 = v138;
      uint64_t v139 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v170 = sub_1DCED7FA0(v139, v140, (uint64_t *)&v169);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCF30F68((uint64_t)v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      *(_WORD *)(v137 + 12) = 2080;
      uint64_t v141 = sub_1DCD9C35C(v71);
      *(void *)&long long v170 = sub_1DCED7FA0(v141, v142, (uint64_t *)&v169);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD32DD4((uint64_t)v191);
      sub_1DCD32DD4((uint64_t)v191);
      _os_log_impl(&dword_1DCCF9000, v134, v135, "%s selects %s.", (uint8_t *)v137, 0x16u);
      long long v143 = v167;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v143, -1, -1);
      MEMORY[0x1E01B07E0](v137, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v148, v168);
    }
    else
    {
      sub_1DCF30F68(v133, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCD32DD4((uint64_t)v191);
      sub_1DCD32DD4((uint64_t)v191);

      (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v132, v116);
    }
    int v144 = v158;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v169 = (char *)*v144;
    *int v144 = 0x8000000000000000;
    sub_1DCDA1468(v71, isUniquelyReferenced_nonNull_native, (uint64_t)&v170, 1.0);
    *int v144 = (uint64_t)v169;
    swift_bridgeObjectRelease();
    long long v174 = v188;
    long long v175 = v189;
    *(_OWORD *)long long v176 = v190[0];
    *(_OWORD *)&v176[12] = *(_OWORD *)((char *)v190 + 12);
    long long v170 = v184;
    long long v171 = v185;
    long long v172 = v186;
    long long v173 = v187;
    long long v178 = v182;
    char v177 = 1;
    long long v179 = v183;
  }
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v170);
  return sub_1DCD43B04((uint64_t)&v170, v162, &qword_1EBE85400);
}

uint64_t sub_1DCF280B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v7 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCF30F00(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  uint64_t v10 = *((void *)v9 + 6);
  uint64_t v25 = a2;
  uint64_t v26 = v9;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1DCFB2CA0((void (*)(void *__return_ptr, long long *))sub_1DCF30FC8, (uint64_t)v24, v10);
  swift_bridgeObjectRelease();
  uint64_t v27 = v11;
  swift_bridgeObjectRetain();
  sub_1DCF23B0C((uint64_t *)&v27);
  if (v3)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = (uint64_t)v27;
    swift_bridgeObjectRelease();
    *((void *)v9 + 6) = v12;
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      uint64_t v22 = a3;
      swift_retain();
      float v14 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v15 = 144;
      do
      {
        int v16 = *(_DWORD *)(v12 + v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          float v14 = sub_1DCE9D9E0(0, *((void *)v14 + 2) + 1, 1, v14);
        }
        unint64_t v18 = *((void *)v14 + 2);
        unint64_t v17 = *((void *)v14 + 3);
        if (v18 >= v17 >> 1) {
          float v14 = sub_1DCE9D9E0((char *)(v17 > 1), v18 + 1, 1, v14);
        }
        *((void *)v14 + 2) = v18 + 1;
        *(_DWORD *)&v14[4 * v18 + 32] = v16;
        v15 += 160;
        --v13;
      }
      while (v13);
      swift_release();
      a3 = v22;
    }
    else
    {
      float v14 = (char *)MEMORY[0x1E4FBC860];
    }
    unint64_t v19 = sub_1DCF9A4E8((uint64_t)v14);
    swift_bridgeObjectRelease();
    float v20 = *(float *)&v19;
    if ((v19 & 0x100000000) != 0) {
      float v20 = 0.0;
    }
    *((float *)v9 + 18) = v20;
    sub_1DCF30F00((uint64_t)v9, a3, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v23);
    return sub_1DCF30F68((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  }
  return result;
}

uint64_t sub_1DCF2836C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v5 = a1[7];
  long long v42 = a1[6];
  long long v43 = v5;
  *(_OWORD *)uint64_t v44 = a1[8];
  *(_OWORD *)&v44[13] = *(long long *)((char *)a1 + 141);
  long long v6 = a1[3];
  long long v38 = a1[2];
  long long v39 = v6;
  long long v7 = a1[5];
  long long v40 = a1[4];
  long long v41 = v7;
  long long v8 = a1[1];
  long long v36 = *a1;
  long long v37 = v8;
  float v9 = 0.0;
  if (v36 <= 0x17u && ((1 << v36) & 0xFBFDEF) != 0)
  {
    uint64_t v10 = *(void *)(a2 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20));
    swift_beginAccess();
    float v9 = *(float *)(v10 + 52);
  }
  uint64_t v11 = *(float **)(a2 + *(int *)(type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0) + 20));
  swift_beginAccess();
  float v12 = *((float *)&v43 + 1) * v11[11];
  swift_beginAccess();
  float v13 = v12 + (float)(*((float *)&v43 + 2) * v11[10]);
  float v14 = *(float *)(a3 + 76);
  swift_beginAccess();
  float v15 = v9 + (float)(v13 + (float)(v14 * v11[12]));
  v19[0] = v36;
  uint64_t v20 = *((void *)&v36 + 1);
  long long v21 = v37;
  uint64_t v22 = v38;
  char v23 = BYTE8(v38);
  long long v24 = v39;
  long long v25 = v40;
  long long v26 = v41;
  long long v27 = v42;
  float v28 = v15;
  uint64_t v29 = *(void *)((char *)&v43 + 4);
  int v30 = HIDWORD(v43);
  __int16 v31 = *(_WORD *)v44;
  uint64_t v32 = *(void *)&v44[8];
  uint64_t v33 = *(void *)&v44[16];
  int v34 = *(_DWORD *)&v44[24];
  char v35 = v44[28];
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v19);
  sub_1DCD43B04((uint64_t)v19, a4, &qword_1EBE85400);
  return sub_1DCD32CC8((uint64_t)&v36);
}

uint64_t sub_1DCF285D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v8 = swift_allocBox();
  uint64_t v10 = v9;
  sub_1DCF30F00(a1, v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  float v12 = sub_1DCF2D140(v11, a2, a3, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v10 + 48) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = v12[2];
  if (v13)
  {
    swift_bridgeObjectRetain();
    float v14 = (float *)v12 + 39;
    float v15 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      if (*(unsigned char *)v14) {
        float v16 = *(v14 - 3);
      }
      else {
        float v16 = 0.0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        float v15 = sub_1DCE9D9E0(0, *((void *)v15 + 2) + 1, 1, v15);
      }
      unint64_t v18 = *((void *)v15 + 2);
      unint64_t v17 = *((void *)v15 + 3);
      if (v18 >= v17 >> 1) {
        float v15 = sub_1DCE9D9E0((char *)(v17 > 1), v18 + 1, 1, v15);
      }
      *((void *)v15 + 2) = v18 + 1;
      *(float *)&v15[4 * v18 + 32] = v16;
      v14 += 40;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    float v15 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v19 = sub_1DCF9A4E8((uint64_t)v15);
  swift_bridgeObjectRelease();
  float v20 = *(float *)&v19;
  if ((v19 & 0x100000000) != 0) {
    float v20 = 0.0;
  }
  *(float *)(v10 + 72) = v20;
  sub_1DCF30F00(v10, a4, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a4, 0, 1, v7);
  return swift_release();
}

uint64_t sub_1DCF2881C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v61 = a4;
  uint64_t v92 = a3;
  uint64_t v9 = sub_1DD048068();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v64 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C88);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = a1[7];
  long long v15 = a1[5];
  long long v89 = a1[6];
  long long v90 = v14;
  long long v16 = a1[7];
  v91[0] = a1[8];
  *(_OWORD *)((char *)v91 + 13) = *(_OWORD *)((char *)a1 + 141);
  long long v17 = a1[3];
  long long v18 = a1[1];
  long long v85 = a1[2];
  long long v86 = v17;
  long long v19 = a1[3];
  long long v20 = a1[5];
  long long v87 = a1[4];
  long long v88 = v20;
  long long v21 = a1[1];
  v84[0] = *a1;
  v84[1] = v21;
  long long v81 = v89;
  long long v82 = v16;
  v83[0] = a1[8];
  *(_OWORD *)((char *)v83 + 13) = *(_OWORD *)((char *)a1 + 141);
  long long v77 = v85;
  long long v78 = v19;
  long long v79 = v87;
  long long v80 = v15;
  long long v75 = v84[0];
  long long v76 = v18;
  uint64_t v22 = sub_1DCD9C35C(v84[0]);
  uint64_t v24 = v23;
  if (*(void *)(a2 + 16))
  {
    uint64_t v25 = v22;
    sub_1DCD32CC8((uint64_t)v84);
    unint64_t v26 = sub_1DCEAD1A4(v25, v24);
    if (v27)
    {
      unint64_t v28 = v26;
      uint64_t v60 = a5;
      uint64_t v29 = *(void *)(a2 + 56);
      uint64_t v30 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v59 = v5;
      uint64_t v32 = v31;
      uint64_t v33 = v29 + *(void *)(v31 + 72) * v28;
      a5 = v60;
      sub_1DCF30F00(v33, (uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v13, 0, 1, v30);
    }
    else
    {
      uint64_t v30 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v13, 1, 1, v30);
    }
  }
  else
  {
    uint64_t v30 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v13, 1, 1, v30);
    sub_1DCD32CC8((uint64_t)v84);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v13, 1, v30) == 1)
  {
    sub_1DCD2479C((uint64_t)v13, &qword_1EBE84C88);
LABEL_20:
    long long v73 = v82;
    v74[0] = v83[0];
    *(_OWORD *)((char *)v74 + 13) = *(_OWORD *)((char *)v83 + 13);
    long long v69 = v78;
    long long v70 = v79;
    long long v71 = v80;
    long long v72 = v81;
    long long v66 = v75;
    long long v67 = v76;
    long long v68 = v77;
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v66);
    return sub_1DCD43B04((uint64_t)&v66, a5, &qword_1EBE85400);
  }
  int v34 = (int *)(*(void *)&v13[*(int *)(v30 + 20)]
              + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__maxNumOfRegions);
  swift_beginAccess();
  int v35 = *v34;
  uint64_t result = sub_1DCF30F68((uint64_t)v13, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
  if (v35 < 1) {
    goto LABEL_20;
  }
  uint64_t v37 = v75;
  long long v38 = v92;
  uint64_t v39 = *v92;
  uint64_t v40 = *(void *)(*v92 + 16);
  if (v40)
  {
    uint64_t result = sub_1DCEAD454(v75);
    if (v41) {
      LODWORD(v40) = *(_DWORD *)(*(void *)(v39 + 56) + 4 * result);
    }
    else {
      LODWORD(v40) = 0;
    }
  }
  int v42 = v40 + 1;
  if (!__OFADD__(v40, 1))
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v66 = *v38;
    *long long v38 = 0x8000000000000000;
    sub_1DCE869D0(v42, v37, isUniquelyReferenced_nonNull_native);
    *long long v38 = v66;
    swift_bridgeObjectRelease();
    if (v35 < v42)
    {
      uint64_t v44 = v64;
      sub_1DCDB40EC(v64);
      swift_retain_n();
      uint64_t v45 = sub_1DD048048();
      os_log_type_t v46 = sub_1DD048848();
      int v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v48 = swift_slowAlloc();
        LODWORD(v92) = v47;
        uint64_t v49 = v48;
        uint64_t v59 = swift_slowAlloc();
        v65[0] = v59;
        *(_DWORD *)uint64_t v49 = 136315650;
        os_log_t v58 = v45;
        type metadata accessor for VisualUnderstanding.ImageRegion();
        long long v50 = (long long *)swift_projectBox();
        swift_beginAccess();
        long long v51 = v50[1];
        long long v66 = *v50;
        long long v67 = v51;
        uint64_t v52 = NormalizedRect.loggingDescription.getter();
        *(void *)&long long v66 = sub_1DCED7FA0(v52, v53, v65);
        uint64_t v60 = a5;
        sub_1DD048A28();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 12) = 2080;
        swift_beginAccess();
        uint64_t v54 = sub_1DCD9C35C(v75);
        *(void *)&long long v66 = sub_1DCED7FA0(v54, v55, v65);
        a5 = v60;
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 22) = 1024;
        LODWORD(v66) = v35;
        sub_1DD048A28();
        os_log_t v56 = v58;
        _os_log_impl(&dword_1DCCF9000, v58, (os_log_type_t)v92, "%s unselects %s because reach max region number %d", (uint8_t *)v49, 0x1Cu);
        uint64_t v57 = v59;
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v57, -1, -1);
        MEMORY[0x1E01B07E0](v49, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v64, v63);
      }
      else
      {

        swift_release_n();
        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v44, v63);
      }
      swift_beginAccess();
      BYTE12(v82) = 0;
    }
    swift_beginAccess();
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF28EE0@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v112 = a4;
  long long v70 = a3;
  uint64_t v10 = sub_1DD048068();
  uint64_t v74 = *(void *)(v10 - 8);
  uint64_t v75 = v10;
  MEMORY[0x1F4188790](v10);
  long long v71 = &v67[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  long long v72 = &v67[-v13];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C88);
  MEMORY[0x1F4188790](v14 - 8);
  long long v16 = &v67[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v17 = a1[7];
  long long v18 = a1[5];
  long long v109 = a1[6];
  long long v110 = v17;
  long long v19 = a1[7];
  v111[0] = a1[8];
  *(_OWORD *)((char *)v111 + 13) = *(_OWORD *)((char *)a1 + 141);
  long long v20 = a1[3];
  long long v21 = a1[1];
  long long v105 = a1[2];
  long long v106 = v20;
  long long v22 = a1[3];
  long long v23 = a1[5];
  long long v107 = a1[4];
  long long v108 = v23;
  long long v24 = a1[1];
  v104[0] = *a1;
  v104[1] = v24;
  long long v101 = v109;
  long long v102 = v19;
  v103[0] = a1[8];
  *(_OWORD *)((char *)v103 + 13) = *(_OWORD *)((char *)a1 + 141);
  long long v97 = v105;
  long long v98 = v22;
  long long v99 = v107;
  long long v100 = v18;
  long long v95 = v104[0];
  long long v96 = v21;
  uint64_t v25 = sub_1DCD9C35C(v104[0]);
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(a2 + 16);
  uint64_t v73 = a5;
  if (v28)
  {
    uint64_t v29 = v25;
    sub_1DCD32CC8((uint64_t)v104);
    unint64_t v30 = sub_1DCEAD1A4(v29, v27);
    if (v31)
    {
      unint64_t v32 = v30;
      uint64_t v69 = a6;
      uint64_t v33 = *(void *)(a2 + 56);
      uint64_t v34 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
      uint64_t v35 = *(void *)(v34 - 8);
      a6 = v69;
      sub_1DCF30F00(v33 + *(void *)(v35 + 72) * v32, (uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v35 + 56))(v16, 0, 1, v34);
    }
    else
    {
      uint64_t v34 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v16, 1, 1, v34);
    }
  }
  else
  {
    uint64_t v34 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v16, 1, 1, v34);
    sub_1DCD32CC8((uint64_t)v104);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v16, 1, v34) == 1)
  {
    sub_1DCD2479C((uint64_t)v16, &qword_1EBE84C88);
LABEL_18:
    swift_beginAccess();
    long long v92 = v101;
    long long v93 = v102;
    v94[0] = v103[0];
    *(_OWORD *)((char *)v94 + 13) = *(_OWORD *)((char *)v103 + 13);
    long long v88 = v97;
    long long v89 = v98;
    long long v90 = v99;
    long long v91 = v100;
    long long v86 = v95;
    long long v87 = v96;
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v86);
    uint64_t v65 = &v86;
    return sub_1DCD43B04((uint64_t)v65, a6, &qword_1EBE85400);
  }
  long long v36 = (void **)(*(void *)&v16[*(int *)(v34 + 20)]
                  + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__applicationIdentifiers);
  swift_beginAccess();
  uint64_t v37 = *v36;
  swift_bridgeObjectRetain();
  sub_1DCF30F68((uint64_t)v16, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
  if (v37[2])
  {
    unint64_t v38 = v73;
    char v39 = sub_1DCF8C928(v112, v73, v37);
    swift_bridgeObjectRelease();
    if ((v39 & 1) == 0)
    {
      uint64_t v40 = v71;
      sub_1DCDB40EC((uint64_t)v71);
      swift_bridgeObjectRetain_n();
      char v41 = sub_1DD048048();
      os_log_type_t v42 = sub_1DD048848();
      int v43 = v42;
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v69 = a6;
        uint64_t v45 = v44;
        long long v72 = (unsigned char *)swift_slowAlloc();
        *(void *)&long long v76 = v72;
        *(_DWORD *)uint64_t v45 = 136315650;
        int v68 = v43;
        os_log_type_t v46 = v70;
        swift_beginAccess();
        long long v47 = v46[1];
        long long v86 = *v46;
        long long v87 = v47;
        uint64_t v48 = NormalizedRect.loggingDescription.getter();
        *(void *)&long long v86 = sub_1DCED7FA0(v48, v49, (uint64_t *)&v76);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 12) = 2080;
        swift_beginAccess();
        uint64_t v50 = sub_1DCD9C35C(v95);
        *(void *)&long long v86 = sub_1DCED7FA0(v50, v51, (uint64_t *)&v76);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 22) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&long long v86 = sub_1DCED7FA0(v112, v38, (uint64_t *)&v76);
        sub_1DD048A28();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1DCCF9000, v41, (os_log_type_t)v68, "%s unselects %s because applicationIdentifiers is not supported for domain, applicationIdentifier:  %s", (uint8_t *)v45, 0x20u);
        uint64_t v52 = v72;
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v52, -1, -1);
        uint64_t v53 = v45;
        a6 = v69;
        MEMORY[0x1E01B07E0](v53, -1, -1);

        (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v71, v75);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v40, v75);
      }
      swift_beginAccess();
      BYTE12(v102) = 0;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  uint64_t v54 = v72;
  sub_1DCDB40EC((uint64_t)v72);
  long long v92 = v101;
  long long v93 = v102;
  v94[0] = v103[0];
  *(_OWORD *)((char *)v94 + 13) = *(_OWORD *)((char *)v103 + 13);
  long long v88 = v97;
  long long v89 = v98;
  long long v90 = v99;
  long long v91 = v100;
  long long v86 = v95;
  long long v87 = v96;
  sub_1DCD32CC8((uint64_t)&v86);
  sub_1DCD32CC8((uint64_t)&v86);
  unint64_t v55 = sub_1DD048048();
  os_log_type_t v56 = sub_1DD048848();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = swift_slowAlloc();
    uint64_t v112 = swift_slowAlloc();
    v85[0] = v112;
    *(_DWORD *)uint64_t v57 = 136315394;
    os_log_t v58 = v70;
    swift_beginAccess();
    long long v59 = v58[1];
    long long v76 = *v58;
    long long v77 = v59;
    uint64_t v60 = NormalizedRect.loggingDescription.getter();
    *(void *)&long long v76 = sub_1DCED7FA0(v60, v61, v85);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2080;
    uint64_t v62 = sub_1DCD9C35C(v86);
    *(void *)&long long v76 = sub_1DCED7FA0(v62, v63, v85);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD32DD4((uint64_t)&v86);
    sub_1DCD32DD4((uint64_t)&v86);
    _os_log_impl(&dword_1DCCF9000, v55, v56, "%s selects %s because applicationIdentifiers is empty", (uint8_t *)v57, 0x16u);
    uint64_t v64 = v112;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v64, -1, -1);
    MEMORY[0x1E01B07E0](v57, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v72, v75);
  }
  else
  {
    sub_1DCD32DD4((uint64_t)&v86);
    sub_1DCD32DD4((uint64_t)&v86);

    (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v54, v75);
  }
  swift_beginAccess();
  long long v82 = v101;
  long long v83 = v102;
  v84[0] = v103[0];
  *(_OWORD *)((char *)v84 + 13) = *(_OWORD *)((char *)v103 + 13);
  long long v78 = v97;
  long long v79 = v98;
  long long v80 = v99;
  long long v81 = v100;
  long long v76 = v95;
  long long v77 = v96;
  faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v76);
  uint64_t v65 = &v76;
  return sub_1DCD43B04((uint64_t)v65, a6, &qword_1EBE85400);
}

uint64_t sub_1DCF297D8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v69 = (float *)a4;
  uint64_t v9 = sub_1DD048068();
  uint64_t v67 = *(void *)(v9 - 8);
  uint64_t v68 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C88);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = a1[7];
  long long v16 = a1[5];
  long long v94 = a1[6];
  long long v95 = v15;
  long long v17 = a1[7];
  v96[0] = a1[8];
  *(_OWORD *)((char *)v96 + 13) = *(_OWORD *)((char *)a1 + 141);
  long long v18 = a1[3];
  long long v19 = a1[1];
  long long v90 = a1[2];
  long long v91 = v18;
  long long v20 = a1[3];
  long long v21 = a1[5];
  long long v92 = a1[4];
  long long v93 = v21;
  long long v22 = a1[1];
  v89[0] = *a1;
  v89[1] = v22;
  long long v86 = v94;
  long long v87 = v17;
  v88[0] = a1[8];
  *(_OWORD *)((char *)v88 + 13) = *(_OWORD *)((char *)a1 + 141);
  long long v82 = v90;
  long long v83 = v20;
  long long v84 = v92;
  long long v85 = v16;
  long long v80 = v89[0];
  long long v81 = v19;
  if (BYTE12(v95) == 1)
  {
    uint64_t v23 = *(void *)a2;
    if (*(void *)(*(void *)a2 + 16))
    {
      uint64_t v24 = LOBYTE(v89[0]);
      sub_1DCD32CC8((uint64_t)v89);
      uint64_t v25 = sub_1DCEAD454(v24);
      uint64_t v26 = a5;
      if (v27)
      {
        uint64_t v28 = *(void *)(*(void *)(v23 + 56) + 8 * v25);
        if (v28 >= 2)
        {
          uint64_t v29 = sub_1DCD9C35C(v24);
          uint64_t v31 = v30;
          if (*(void *)(a3 + 16) && (unint64_t v32 = sub_1DCEAD1A4(v29, v30), (v33 & 1) != 0))
          {
            uint64_t v64 = *(void *)(a3 + 56);
            uint64_t v65 = a2;
            unint64_t v34 = v32;
            uint64_t v35 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
            uint64_t v36 = *(void *)(v35 - 8);
            uint64_t v66 = v31;
            uint64_t v37 = v36;
            uint64_t v38 = v64 + *(void *)(v36 + 72) * v34;
            a2 = v65;
            sub_1DCF30F00(v38, (uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v14, 0, 1, v35);
          }
          else
          {
            uint64_t v35 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v14, 1, 1, v35);
          }
          swift_bridgeObjectRelease();
          type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v14, 1, v35) == 1)
          {
            sub_1DCD2479C((uint64_t)v14, &qword_1EBE84C88);
          }
          else
          {
            uint64_t v44 = (float *)(*(void *)&v14[*(int *)(v35 + 20)]
                          + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__largeRegionThreshold);
            swift_beginAccess();
            float v45 = *v44;
            sub_1DCF30F68((uint64_t)v14, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
            if (v45 > 0.0)
            {
              os_log_type_t v46 = v69;
              swift_beginAccess();
              if (v45 < v46[19])
              {
                uint64_t v66 = v28;
                sub_1DCDB40EC((uint64_t)v11);
                long long v47 = sub_1DD048048();
                os_log_type_t v48 = sub_1DD048848();
                int v49 = v48;
                BOOL v50 = os_log_type_enabled(v47, v48);
                uint64_t v51 = v68;
                if (v50)
                {
                  uint64_t v52 = swift_slowAlloc();
                  LODWORD(v64) = v49;
                  uint64_t v53 = v52;
                  uint64_t v65 = swift_slowAlloc();
                  v70[0] = v65;
                  *(_DWORD *)uint64_t v53 = 136315394;
                  swift_beginAccess();
                  long long v54 = *((_OWORD *)v46 + 1);
                  long long v71 = *(_OWORD *)v46;
                  long long v72 = v54;
                  uint64_t v55 = NormalizedRect.loggingDescription.getter();
                  *(void *)&long long v71 = sub_1DCED7FA0(v55, v56, v70);
                  sub_1DD048A28();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v53 + 12) = 2080;
                  swift_beginAccess();
                  uint64_t v57 = sub_1DCD9C35C(v80);
                  *(void *)&long long v71 = sub_1DCED7FA0(v57, v58, v70);
                  sub_1DD048A28();
                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_1DCCF9000, v47, (os_log_type_t)v64, "%s unselects %s because this region is too large and this domain exists on multi regions.", (uint8_t *)v53, 0x16u);
                  uint64_t v59 = v65;
                  swift_arrayDestroy();
                  MEMORY[0x1E01B07E0](v59, -1, -1);
                  MEMORY[0x1E01B07E0](v53, -1, -1);

                  (*(void (**)(char *, uint64_t))(v67 + 8))(v11, v68);
                }
                else
                {

                  (*(void (**)(char *, uint64_t))(v67 + 8))(v11, v51);
                }
                swift_beginAccess();
                BYTE12(v87) = 0;
                uint64_t v60 = v66 - 1;
                uint64_t v61 = v80;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *(void *)&long long v71 = *(void *)a2;
                *(void *)a2 = 0x8000000000000000;
                sub_1DCE86AFC(v60, v61, isUniquelyReferenced_nonNull_native);
                *(void *)a2 = v71;
                swift_bridgeObjectRelease();
              }
              swift_beginAccess();
            }
          }
        }
      }
    }
    else
    {
      sub_1DCD32CC8((uint64_t)v89);
      uint64_t v26 = a5;
    }
    long long v77 = v86;
    long long v78 = v87;
    v79[0] = v88[0];
    *(_OWORD *)((char *)v79 + 13) = *(_OWORD *)((char *)v88 + 13);
    long long v73 = v82;
    long long v74 = v83;
    long long v75 = v84;
    long long v76 = v85;
    long long v71 = v80;
    long long v72 = v81;
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v71);
    return sub_1DCD43B04((uint64_t)&v71, v26, &qword_1EBE85400);
  }
  else
  {
    long long v39 = a1[7];
    long long v77 = a1[6];
    long long v78 = v39;
    v79[0] = a1[8];
    *(_OWORD *)((char *)v79 + 13) = *(_OWORD *)((char *)a1 + 141);
    long long v40 = a1[3];
    long long v73 = a1[2];
    long long v74 = v40;
    long long v41 = a1[5];
    long long v75 = a1[4];
    long long v76 = v41;
    long long v42 = a1[1];
    long long v71 = *a1;
    long long v72 = v42;
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v71);
    sub_1DCD43B04((uint64_t)&v71, a5, &qword_1EBE85400);
    return sub_1DCD32CC8((uint64_t)v89);
  }
}

uint64_t sub_1DCF29E6C@<X0>(long long *a1@<X0>, char a2@<W1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v45 = a5;
  uint64_t v72 = a6;
  uint64_t v10 = sub_1DD048068();
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = a1[7];
  long long v14 = a1[5];
  long long v69 = a1[6];
  long long v70 = v13;
  long long v15 = a1[7];
  v71[0] = a1[8];
  *(_OWORD *)((char *)v71 + 13) = *(long long *)((char *)a1 + 141);
  long long v16 = a1[3];
  long long v17 = a1[1];
  long long v65 = a1[2];
  long long v66 = v16;
  long long v18 = a1[3];
  long long v19 = a1[5];
  long long v67 = a1[4];
  long long v68 = v19;
  long long v20 = a1[1];
  long long v63 = *a1;
  long long v64 = v20;
  long long v60 = v69;
  long long v61 = v15;
  v62[0] = a1[8];
  *(_OWORD *)((char *)v62 + 13) = *(long long *)((char *)a1 + 141);
  _OWORD v56[2] = v65;
  long long v57 = v18;
  long long v58 = v67;
  long long v59 = v14;
  v56[0] = v63;
  v56[1] = v17;
  uint64_t v21 = sub_1DCD9C35C(v63);
  uint64_t v23 = v22;
  if (v21 == sub_1DCD9C35C(a2) && v23 == v24)
  {
    sub_1DCD32CC8((uint64_t)&v63);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v25 = sub_1DD048FA8();
    sub_1DCD32CC8((uint64_t)&v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      long long v53 = v69;
      long long v54 = v70;
      v55[0] = v71[0];
      *(_OWORD *)((char *)v55 + 13) = *(_OWORD *)((char *)v71 + 13);
      void v49[2] = v65;
      long long v50 = v66;
      long long v51 = v67;
      long long v52 = v68;
      v49[0] = v63;
      v49[1] = v64;
      goto LABEL_12;
    }
  }
  sub_1DCDB40EC((uint64_t)v12);
  swift_bridgeObjectRetain_n();
  uint64_t v26 = sub_1DD048048();
  int v27 = sub_1DD048848();
  if (!os_log_type_enabled(v26, (os_log_type_t)v27))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  int v44 = v27;
  uint64_t v28 = swift_slowAlloc();
  uint64_t v43 = swift_slowAlloc();
  v48[0] = v43;
  *(_DWORD *)uint64_t v28 = 136315650;
  swift_beginAccess();
  long long v29 = a3[1];
  v49[0] = *a3;
  v49[1] = v29;
  uint64_t v30 = NormalizedRect.loggingDescription.getter();
  *(void *)&v49[0] = sub_1DCED7FA0(v30, v31, v48);
  sub_1DD048A28();
  swift_bridgeObjectRelease();
  *(_WORD *)(v28 + 12) = 2080;
  swift_beginAccess();
  uint64_t v32 = sub_1DCD9C35C(v56[0]);
  *(void *)&v49[0] = sub_1DCED7FA0(v32, v33, v48);
  sub_1DD048A28();
  uint64_t result = swift_bridgeObjectRelease();
  *(_WORD *)(v28 + 22) = 2080;
  unint64_t v35 = v45;
  if ((v45 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a4 + 16) > v45)
  {
    uint64_t v36 = *(void *)(type metadata accessor for VisualUnderstanding.ImageRegion() - 8);
    uint64_t v37 = (_OWORD *)(a4
                   + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))
                   + *(void *)(v36 + 72) * v35);
    long long v38 = v37[1];
    v49[0] = *v37;
    v49[1] = v38;
    uint64_t v39 = NormalizedRect.loggingDescription.getter();
    *(void *)&v49[0] = sub_1DCED7FA0(v39, v40, v48);
    sub_1DD048A28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1DCCF9000, v26, (os_log_type_t)v44, "%s unselects %s because this region overlaps with %s which has same domain.", (uint8_t *)v28, 0x20u);
    uint64_t v41 = v43;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v41, -1, -1);
    MEMORY[0x1E01B07E0](v28, -1, -1);

LABEL_10:
    (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v47);
    swift_beginAccess();
    BYTE12(v61) = 0;
    *(_OWORD *)((char *)v49 + 8) = *(_OWORD *)((char *)v56 + 8);
    *(_OWORD *)((char *)&v49[1] + 8) = *(_OWORD *)((char *)&v56[1] + 8);
    long long v50 = v57;
    long long v51 = v58;
    long long v52 = v59;
    LOBYTE(v49[0]) = v56[0];
    BYTE8(v49[2]) = BYTE8(v56[2]);
    long long v53 = v60;
    *(void *)&long long v54 = v61;
    DWORD2(v54) = DWORD2(v61);
    WORD6(v54) = __PAIR16__(BYTE13(v61), 0);
    HIWORD(v54) = HIWORD(v61);
    LOWORD(v55[0]) = v62[0];
    *(_OWORD *)((char *)v55 + 8) = *(_OWORD *)((char *)v62 + 8);
    DWORD2(v55[1]) = DWORD2(v62[1]);
    BYTE12(v55[1]) = BYTE12(v62[1]);
LABEL_12:
    faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)v49);
    return sub_1DCD43B04((uint64_t)v49, v72, &qword_1EBE85400);
  }
  __break(1u);
  return result;
}

void sub_1DCF2A3A8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v132 = *(void *)(v4 - 8);
  uint64_t v133 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v129 = (uint64_t)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v139 = (uint64_t)&v124 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v136 = (uint64_t)&v124 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v135 = (uint64_t)&v124 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_1DD048F68();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      sub_1DCF2B908(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v126 = v13;
  if (v12 < 2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    unint64_t v131 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      long long v20 = (char *)MEMORY[0x1E4FBC860];
LABEL_105:
      uint64_t v117 = v20;
      uint64_t v125 = v18;
      if (v21 >= 2)
      {
        uint64_t v118 = *a1;
        do
        {
          unint64_t v119 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v118) {
            goto LABEL_147;
          }
          uint64_t v120 = *(void *)&v117[16 * v119 + 32];
          uint64_t v121 = *(void *)&v117[16 * v21 + 24];
          sub_1DCF2BE88(v118 + *(void *)(v132 + 72) * v120, v118 + *(void *)(v132 + 72) * *(void *)&v117[16 * v21 + 16], v118 + *(void *)(v132 + 72) * v121, v131);
          if (v2) {
            break;
          }
          if (v121 < v120) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v117 = sub_1DCD729EC((uint64_t)v117);
          }
          if (v119 >= *((void *)v117 + 2)) {
            goto LABEL_137;
          }
          long long v122 = &v117[16 * v119 + 32];
          *(void *)long long v122 = v120;
          *((void *)v122 + 1) = v121;
          unint64_t v123 = *((void *)v117 + 2);
          if (v21 > v123) {
            goto LABEL_138;
          }
          memmove(&v117[16 * v21 + 16], &v117[16 * v21 + 32], 16 * (v123 - v21));
          *((void *)v117 + 2) = v123 - 1;
          unint64_t v21 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v125 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v125 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1DD0486F8();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v132 + 80);
    uint64_t v125 = v16;
    unint64_t v131 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  long long v20 = (char *)MEMORY[0x1E4FBC860];
  long long v138 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    uint64_t v130 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v33 = v19 + 1;
      goto LABEL_25;
    }
    uint64_t v128 = *a1;
    uint64_t v140 = *(void *)(v132 + 72);
    uint64_t v24 = v140;
    uint64_t v25 = v135;
    sub_1DCF30F00(v128 + v140 * v23, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v26 = v128 + v24 * v22;
    uint64_t v27 = v136;
    sub_1DCF30F00(v26, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    float v28 = *(float *)(v25 + 76);
    float v29 = *(float *)(v27 + 76);
    sub_1DCF30F68(v27, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v30 = v25;
    uint64_t v31 = v128;
    sub_1DCF30F68(v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v32 = v140;
    uint64_t v33 = v22 + 2;
    if (v22 + 2 >= v12)
    {
LABEL_22:
      if (v29 >= v28) {
        goto LABEL_25;
      }
LABEL_43:
      if (v33 < v22) {
        goto LABEL_141;
      }
      if (v22 < v33)
      {
        uint64_t v134 = v12;
        uint64_t v127 = v20;
        uint64_t v55 = 0;
        uint64_t v56 = v32 * (v33 - 1);
        uint64_t v57 = v22;
        uint64_t v58 = v33 * v32;
        uint64_t v59 = v57;
        uint64_t v60 = v57 * v32;
        do
        {
          if (v59 != v33 + v55 - 1)
          {
            uint64_t v62 = v128;
            if (!v128) {
              goto LABEL_146;
            }
            unint64_t v63 = v128 + v60;
            uint64_t v137 = v128 + v56;
            sub_1DCF30E98(v128 + v60, v129, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            if (v60 < v56 || v63 >= v62 + v58)
            {
              uint64_t v61 = v137;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v61 = v137;
              if (v60 != v56) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1DCF30E98(v129, v61, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            uint64_t v32 = v140;
          }
          ++v59;
          --v55;
          v56 -= v32;
          v58 -= v32;
          v60 += v32;
        }
        while (v59 < v33 + v55);
        a1 = v138;
        long long v20 = v127;
        uint64_t v22 = v130;
        uint64_t v12 = v134;
      }
      goto LABEL_25;
    }
    uint64_t v124 = v2;
    uint64_t v127 = v20;
    uint64_t v137 = v140 * v23;
    uint64_t v134 = v140 * v33;
    while (1)
    {
      uint64_t v34 = v33;
      uint64_t v35 = v135;
      sub_1DCF30F00(v31 + v134, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v36 = v136;
      sub_1DCF30F00(v31 + v137, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      BOOL v37 = *(float *)(v36 + 76) >= *(float *)(v35 + 76);
      sub_1DCF30F68(v36, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCF30F68(v35, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v29 < v28 == v37) {
        break;
      }
      ++v33;
      uint64_t v32 = v140;
      v31 += v140;
      if (v12 == v34 + 1)
      {
        uint64_t v33 = v12;
        long long v20 = v127;
        uint64_t v2 = v124;
        uint64_t v22 = v130;
        goto LABEL_22;
      }
    }
    long long v20 = v127;
    uint64_t v2 = v124;
    uint64_t v22 = v130;
    uint64_t v32 = v140;
    if (v29 < v28) {
      goto LABEL_43;
    }
LABEL_25:
    if (v33 < v12)
    {
      if (__OFSUB__(v33, v22)) {
        goto LABEL_139;
      }
      if (v33 - v22 < v126) {
        break;
      }
    }
LABEL_57:
    if (v33 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      long long v20 = sub_1DCD71FDC(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v66 = *((void *)v20 + 2);
    unint64_t v65 = *((void *)v20 + 3);
    unint64_t v21 = v66 + 1;
    if (v66 >= v65 >> 1) {
      long long v20 = sub_1DCD71FDC((char *)(v65 > 1), v66 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    long long v67 = v20 + 32;
    long long v68 = &v20[16 * v66 + 32];
    uint64_t v69 = v137;
    *(void *)long long v68 = v22;
    *((void *)v68 + 1) = v69;
    if (v66)
    {
      while (1)
      {
        unint64_t v70 = v21 - 1;
        if (v21 >= 4)
        {
          long long v75 = &v67[16 * v21];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_123;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_124;
          }
          unint64_t v82 = v21 - 2;
          long long v83 = &v67[16 * v21 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_126;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_129;
          }
          if (v87 >= v78)
          {
            long long v105 = &v67[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_133;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v99 = *((void *)v20 + 4);
            uint64_t v100 = *((void *)v20 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_88;
          }
          uint64_t v72 = *((void *)v20 + 4);
          uint64_t v71 = *((void *)v20 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_125;
        }
        unint64_t v82 = v21 - 2;
        long long v88 = &v67[16 * v21 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_128;
        }
        long long v94 = &v67[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_131;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_132;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_94:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v93) {
          goto LABEL_127;
        }
        long long v101 = &v67[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_130;
        }
        if (v104 < v92) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v110 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v111 = v20;
        uint64_t v112 = &v67[16 * v109];
        uint64_t v113 = *(void *)v112;
        uint64_t v114 = &v67[16 * v70];
        uint64_t v115 = *((void *)v114 + 1);
        sub_1DCF2BE88(v110 + *(void *)(v132 + 72) * *(void *)v112, v110 + *(void *)(v132 + 72) * *(void *)v114, v110 + *(void *)(v132 + 72) * v115, v131);
        if (v2) {
          goto LABEL_116;
        }
        if (v115 < v113) {
          goto LABEL_120;
        }
        if (v70 > *((void *)v111 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v112 = v113;
        *(void *)&v67[16 * v109 + 8] = v115;
        unint64_t v116 = *((void *)v111 + 2);
        if (v70 >= v116) {
          goto LABEL_122;
        }
        long long v20 = v111;
        unint64_t v21 = v116 - 1;
        memmove(&v67[16 * v70], v114 + 16, 16 * (v116 - 1 - v70));
        *((void *)v111 + 2) = v116 - 1;
        a1 = v138;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v19 = v137;
    if (v137 >= v12)
    {
      uint64_t v18 = v125;
      goto LABEL_105;
    }
  }
  if (__OFADD__(v22, v126)) {
    goto LABEL_142;
  }
  if (v22 + v126 >= v12) {
    uint64_t v38 = v12;
  }
  else {
    uint64_t v38 = v22 + v126;
  }
  if (v38 >= v22)
  {
    if (v33 != v38)
    {
      uint64_t v127 = v20;
      uint64_t v128 = v38;
      uint64_t v124 = v2;
      uint64_t v39 = *(void *)(v132 + 72);
      uint64_t v140 = v39 * (v33 - 1);
      uint64_t v134 = v39;
      uint64_t v40 = v33 * v39;
      do
      {
        uint64_t v42 = 0;
        uint64_t v43 = v22;
        uint64_t v137 = v33;
        while (1)
        {
          int v44 = v138;
          uint64_t v45 = *v138;
          uint64_t v46 = v40;
          uint64_t v47 = v40 + v42 + *v138;
          uint64_t v48 = v135;
          sub_1DCF30F00(v47, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v49 = v140 + v42 + v45;
          uint64_t v50 = v136;
          sub_1DCF30F00(v49, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          float v51 = *(float *)(v48 + 76);
          float v52 = *(float *)(v50 + 76);
          sub_1DCF30F68(v50, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCF30F68(v48, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v52 >= v51) {
            break;
          }
          uint64_t v53 = *v44;
          if (!*v44) {
            goto LABEL_144;
          }
          uint64_t v40 = v46;
          uint64_t v54 = v53 + v140 + v42;
          sub_1DCF30E98(v53 + v46 + v42, v139, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          swift_arrayInitWithTakeFrontToBack();
          sub_1DCF30E98(v139, v54, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          v42 -= v134;
          ++v43;
          uint64_t v41 = v137;
          if (v137 == v43) {
            goto LABEL_36;
          }
        }
        uint64_t v41 = v137;
        uint64_t v40 = v46;
LABEL_36:
        uint64_t v33 = v41 + 1;
        v140 += v134;
        v40 += v134;
        uint64_t v22 = v130;
      }
      while (v33 != v128);
      uint64_t v33 = v128;
      uint64_t v2 = v124;
      a1 = v138;
      long long v20 = v127;
    }
    goto LABEL_57;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_1DD048C98();
  __break(1u);
}

void sub_1DCF2AE58(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v132 = *(void *)(v4 - 8);
  uint64_t v133 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v129 = (uint64_t)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v139 = (uint64_t)&v124 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v136 = (uint64_t)&v124 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v135 = (uint64_t)&v124 - v11;
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_1DD048F68();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_140;
    }
    if (v12) {
      sub_1DCF2BBC8(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_148;
  }
  uint64_t v126 = v13;
  if (v12 < 2)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    unint64_t v131 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    if (v12 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      long long v20 = (char *)MEMORY[0x1E4FBC860];
LABEL_105:
      uint64_t v117 = v20;
      uint64_t v125 = v18;
      if (v21 >= 2)
      {
        uint64_t v118 = *a1;
        do
        {
          unint64_t v119 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v118) {
            goto LABEL_147;
          }
          uint64_t v120 = *(void *)&v117[16 * v119 + 32];
          uint64_t v121 = *(void *)&v117[16 * v21 + 24];
          sub_1DCF2C35C(v118 + *(void *)(v132 + 72) * v120, v118 + *(void *)(v132 + 72) * *(void *)&v117[16 * v21 + 16], v118 + *(void *)(v132 + 72) * v121, v131);
          if (v2) {
            break;
          }
          if (v121 < v120) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v117 = sub_1DCD729EC((uint64_t)v117);
          }
          if (v119 >= *((void *)v117 + 2)) {
            goto LABEL_137;
          }
          long long v122 = &v117[16 * v119 + 32];
          *(void *)long long v122 = v120;
          *((void *)v122 + 1) = v121;
          unint64_t v123 = *((void *)v117 + 2);
          if (v21 > v123) {
            goto LABEL_138;
          }
          memmove(&v117[16 * v21 + 16], &v117[16 * v21 + 32], 16 * (v123 - v21));
          *((void *)v117 + 2) = v123 - 1;
          unint64_t v21 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v125 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v125 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1DD0486F8();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v132 + 80);
    uint64_t v125 = v16;
    unint64_t v131 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  long long v20 = (char *)MEMORY[0x1E4FBC860];
  long long v138 = a1;
  while (1)
  {
    uint64_t v22 = v19;
    uint64_t v23 = v19 + 1;
    uint64_t v130 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v33 = v19 + 1;
      goto LABEL_25;
    }
    uint64_t v128 = *a1;
    uint64_t v140 = *(void *)(v132 + 72);
    uint64_t v24 = v140;
    uint64_t v25 = v135;
    sub_1DCF30F00(v128 + v140 * v23, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v26 = v128 + v24 * v22;
    uint64_t v27 = v136;
    sub_1DCF30F00(v26, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    float v28 = *(float *)(v25 + 76);
    float v29 = *(float *)(v27 + 76);
    sub_1DCF30F68(v27, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v30 = v25;
    uint64_t v31 = v128;
    sub_1DCF30F68(v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v32 = v140;
    uint64_t v33 = v22 + 2;
    if (v22 + 2 >= v12)
    {
LABEL_22:
      if (v28 >= v29) {
        goto LABEL_25;
      }
LABEL_43:
      if (v33 < v22) {
        goto LABEL_141;
      }
      if (v22 < v33)
      {
        uint64_t v134 = v12;
        uint64_t v127 = v20;
        uint64_t v55 = 0;
        uint64_t v56 = v32 * (v33 - 1);
        uint64_t v57 = v22;
        uint64_t v58 = v33 * v32;
        uint64_t v59 = v57;
        uint64_t v60 = v57 * v32;
        do
        {
          if (v59 != v33 + v55 - 1)
          {
            uint64_t v62 = v128;
            if (!v128) {
              goto LABEL_146;
            }
            unint64_t v63 = v128 + v60;
            uint64_t v137 = v128 + v56;
            sub_1DCF30E98(v128 + v60, v129, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            if (v60 < v56 || v63 >= v62 + v58)
            {
              uint64_t v61 = v137;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v61 = v137;
              if (v60 != v56) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1DCF30E98(v129, v61, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
            uint64_t v32 = v140;
          }
          ++v59;
          --v55;
          v56 -= v32;
          v58 -= v32;
          v60 += v32;
        }
        while (v59 < v33 + v55);
        a1 = v138;
        long long v20 = v127;
        uint64_t v22 = v130;
        uint64_t v12 = v134;
      }
      goto LABEL_25;
    }
    uint64_t v124 = v2;
    uint64_t v127 = v20;
    uint64_t v137 = v140 * v23;
    uint64_t v134 = v140 * v33;
    while (1)
    {
      uint64_t v34 = v33;
      uint64_t v35 = v135;
      sub_1DCF30F00(v31 + v134, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v36 = v136;
      sub_1DCF30F00(v31 + v137, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      BOOL v37 = *(float *)(v35 + 76) >= *(float *)(v36 + 76);
      sub_1DCF30F68(v36, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCF30F68(v35, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v28 < v29 == v37) {
        break;
      }
      ++v33;
      uint64_t v32 = v140;
      v31 += v140;
      if (v12 == v34 + 1)
      {
        uint64_t v33 = v12;
        long long v20 = v127;
        uint64_t v2 = v124;
        uint64_t v22 = v130;
        goto LABEL_22;
      }
    }
    long long v20 = v127;
    uint64_t v2 = v124;
    uint64_t v22 = v130;
    uint64_t v32 = v140;
    if (v28 < v29) {
      goto LABEL_43;
    }
LABEL_25:
    if (v33 < v12)
    {
      if (__OFSUB__(v33, v22)) {
        goto LABEL_139;
      }
      if (v33 - v22 < v126) {
        break;
      }
    }
LABEL_57:
    if (v33 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v33;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      long long v20 = sub_1DCD71FDC(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v66 = *((void *)v20 + 2);
    unint64_t v65 = *((void *)v20 + 3);
    unint64_t v21 = v66 + 1;
    if (v66 >= v65 >> 1) {
      long long v20 = sub_1DCD71FDC((char *)(v65 > 1), v66 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v21;
    long long v67 = v20 + 32;
    long long v68 = &v20[16 * v66 + 32];
    uint64_t v69 = v137;
    *(void *)long long v68 = v22;
    *((void *)v68 + 1) = v69;
    if (v66)
    {
      while (1)
      {
        unint64_t v70 = v21 - 1;
        if (v21 >= 4)
        {
          long long v75 = &v67[16 * v21];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_123;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_124;
          }
          unint64_t v82 = v21 - 2;
          long long v83 = &v67[16 * v21 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_126;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_129;
          }
          if (v87 >= v78)
          {
            long long v105 = &v67[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_133;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v99 = *((void *)v20 + 4);
            uint64_t v100 = *((void *)v20 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_88;
          }
          uint64_t v72 = *((void *)v20 + 4);
          uint64_t v71 = *((void *)v20 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_125;
        }
        unint64_t v82 = v21 - 2;
        long long v88 = &v67[16 * v21 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_128;
        }
        long long v94 = &v67[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_131;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_132;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_94:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v93) {
          goto LABEL_127;
        }
        long long v101 = &v67[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_130;
        }
        if (v104 < v92) {
          goto LABEL_15;
        }
LABEL_96:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v110 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v111 = v20;
        uint64_t v112 = &v67[16 * v109];
        uint64_t v113 = *(void *)v112;
        uint64_t v114 = &v67[16 * v70];
        uint64_t v115 = *((void *)v114 + 1);
        sub_1DCF2C35C(v110 + *(void *)(v132 + 72) * *(void *)v112, v110 + *(void *)(v132 + 72) * *(void *)v114, v110 + *(void *)(v132 + 72) * v115, v131);
        if (v2) {
          goto LABEL_116;
        }
        if (v115 < v113) {
          goto LABEL_120;
        }
        if (v70 > *((void *)v111 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v112 = v113;
        *(void *)&v67[16 * v109 + 8] = v115;
        unint64_t v116 = *((void *)v111 + 2);
        if (v70 >= v116) {
          goto LABEL_122;
        }
        long long v20 = v111;
        unint64_t v21 = v116 - 1;
        memmove(&v67[16 * v70], v114 + 16, 16 * (v116 - 1 - v70));
        *((void *)v111 + 2) = v116 - 1;
        a1 = v138;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_15:
    uint64_t v12 = a1[1];
    uint64_t v19 = v137;
    if (v137 >= v12)
    {
      uint64_t v18 = v125;
      goto LABEL_105;
    }
  }
  if (__OFADD__(v22, v126)) {
    goto LABEL_142;
  }
  if (v22 + v126 >= v12) {
    uint64_t v38 = v12;
  }
  else {
    uint64_t v38 = v22 + v126;
  }
  if (v38 >= v22)
  {
    if (v33 != v38)
    {
      uint64_t v127 = v20;
      uint64_t v128 = v38;
      uint64_t v124 = v2;
      uint64_t v39 = *(void *)(v132 + 72);
      uint64_t v140 = v39 * (v33 - 1);
      uint64_t v134 = v39;
      uint64_t v40 = v33 * v39;
      do
      {
        uint64_t v42 = 0;
        uint64_t v43 = v22;
        uint64_t v137 = v33;
        while (1)
        {
          int v44 = v138;
          uint64_t v45 = *v138;
          uint64_t v46 = v40;
          uint64_t v47 = v40 + v42 + *v138;
          uint64_t v48 = v135;
          sub_1DCF30F00(v47, v135, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v49 = v140 + v42 + v45;
          uint64_t v50 = v136;
          sub_1DCF30F00(v49, v136, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          float v51 = *(float *)(v48 + 76);
          float v52 = *(float *)(v50 + 76);
          sub_1DCF30F68(v50, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCF30F68(v48, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v51 >= v52) {
            break;
          }
          uint64_t v53 = *v44;
          if (!*v44) {
            goto LABEL_144;
          }
          uint64_t v40 = v46;
          uint64_t v54 = v53 + v140 + v42;
          sub_1DCF30E98(v53 + v46 + v42, v139, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          swift_arrayInitWithTakeFrontToBack();
          sub_1DCF30E98(v139, v54, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          v42 -= v134;
          ++v43;
          uint64_t v41 = v137;
          if (v137 == v43) {
            goto LABEL_36;
          }
        }
        uint64_t v41 = v137;
        uint64_t v40 = v46;
LABEL_36:
        uint64_t v33 = v41 + 1;
        v140 += v134;
        v40 += v134;
        uint64_t v22 = v130;
      }
      while (v33 != v128);
      uint64_t v33 = v128;
      uint64_t v2 = v124;
      a1 = v138;
      long long v20 = v127;
    }
    goto LABEL_57;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_1DD048C98();
  __break(1u);
}

void sub_1DCF2B908(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (float *)((char *)&v24 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (float *)((char *)&v24 - v13);
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v32 = v15 * (v29 - 1);
    uint64_t v28 = v15;
    uint64_t v31 = v15 * v29;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v26;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = a4;
      sub_1DCF30F00(v31 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCF30F00(v32 + v16 + v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      float v20 = v14[19];
      float v21 = v10[19];
      sub_1DCF30F68((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCF30F68((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v21 >= v20)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v25) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v23 = v22 + v32 + v16;
      sub_1DCF30E98(v22 + v31 + v16, v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_arrayInitWithTakeFrontToBack();
      sub_1DCF30E98(v30, v23, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      v16 -= v28;
      ++v17;
      a4 = v19;
      if (v29 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

void sub_1DCF2BBC8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (float *)((char *)&v24 - v9);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (float *)((char *)&v24 - v13);
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v32 = v15 * (v29 - 1);
    uint64_t v28 = v15;
    uint64_t v31 = v15 * v29;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v26;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = a4;
      sub_1DCF30F00(v31 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCF30F00(v32 + v16 + v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      float v20 = v14[19];
      float v21 = v10[19];
      sub_1DCF30F68((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCF30F68((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v20 >= v21)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v25) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v22 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v23 = v22 + v32 + v16;
      sub_1DCF30E98(v22 + v31 + v16, v30, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_arrayInitWithTakeFrontToBack();
      sub_1DCF30E98(v30, v23, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      v16 -= v28;
      ++v17;
      a4 = v19;
      if (v29 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1DCF2BE88(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v40);
  uint64_t v9 = (float *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (float *)((char *)&v38 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      unint64_t v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v31 = a3 - v14;
          sub_1DCF30F00(v29 - v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          unint64_t v32 = a2 - v14;
          sub_1DCF30F00(a2 - v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          float v33 = v12[19];
          float v34 = v9[19];
          sub_1DCF30F68((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCF30F68((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v34 >= v33)
          {
            unint64_t v35 = v41;
            v41 -= v14;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 -= v14;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v32;
          a3 -= v14;
        }
        while (v32 > v39);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1DCF30F00(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCF30F00(a4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        float v22 = v12[19];
        float v23 = v9[19];
        sub_1DCF30F68((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCF30F68((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v24 = v43;
        if (v23 >= v22)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_67:
    sub_1DCD720D8(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCF2C35C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v40 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v40);
  uint64_t v9 = (float *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (float *)((char *)&v38 - v11);
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v43 = a1;
  unint64_t v42 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v19;
      unint64_t v41 = a4 + v19;
      unint64_t v43 = a2;
      unint64_t v39 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v31 = a3 - v14;
          sub_1DCF30F00(v29 - v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          unint64_t v32 = a2 - v14;
          sub_1DCF30F00(a2 - v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          float v33 = v12[19];
          float v34 = v9[19];
          sub_1DCF30F68((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          sub_1DCF30F68((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          if (v33 >= v34)
          {
            unint64_t v35 = v41;
            v41 -= v14;
            if (a3 < v35 || v31 >= v35)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v35)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v32 = a2;
          }
          else
          {
            if (a3 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v43 -= v14;
          }
          unint64_t v29 = v41;
          if (v41 <= a4) {
            break;
          }
          a2 = v32;
          a3 -= v14;
        }
        while (v32 > v39);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v41 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_1DCF30F00(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCF30F00(a4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        float v22 = v12[19];
        float v23 = v9[19];
        sub_1DCF30F68((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        sub_1DCF30F68((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v24 = v43;
        if (v22 >= v23)
        {
          unint64_t v27 = v42 + v14;
          if (v43 < v42 || v43 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 != v42)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v42 = v27;
          unint64_t v25 = a2;
        }
        else
        {
          unint64_t v25 = a2 + v14;
          if (v43 < a2 || v43 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v43 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v43 = v24 + v14;
        a4 = v42;
        if (v42 >= v20) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_67:
    sub_1DCD720D8(&v43, &v42, (uint64_t *)&v41);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

char *sub_1DCF2C830(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v5 = 0;
  uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v44 = v3;
LABEL_3:
  uint64_t v7 = (_OWORD *)(v4 + 160 * v5);
  long long v8 = v7[1];
  v56[0] = *v7;
  v56[1] = v8;
  long long v9 = v7[2];
  long long v10 = v7[3];
  long long v11 = v7[5];
  v56[4] = v7[4];
  v56[5] = v11;
  _OWORD v56[2] = v9;
  _OWORD v56[3] = v10;
  long long v12 = v7[6];
  long long v13 = v7[7];
  long long v14 = v7[8];
  *(_OWORD *)((char *)v57 + 13) = *(_OWORD *)((char *)v7 + 141);
  v56[7] = v13;
  v57[0] = v14;
  v56[6] = v12;
  if ((BYTE12(v13) & 1) == 0) {
    goto LABEL_97;
  }
  uint64_t v15 = *(void *)(a2 + 48);
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16) {
    goto LABEL_97;
  }
  uint64_t v46 = v6;
  uint64_t v17 = LOBYTE(v56[0]);
  swift_bridgeObjectRetain_n();
  sub_1DCD32CC8((uint64_t)v56);
  long long v18 = *(_OWORD *)(v15 + 144);
  long long v53 = *(_OWORD *)(v15 + 128);
  long long v54 = v18;
  v55[0] = *(_OWORD *)(v15 + 160);
  *(_OWORD *)((char *)v55 + 13) = *(_OWORD *)(v15 + 173);
  long long v19 = *(_OWORD *)(v15 + 80);
  long long v49 = *(_OWORD *)(v15 + 64);
  long long v50 = v19;
  long long v20 = *(_OWORD *)(v15 + 112);
  long long v51 = *(_OWORD *)(v15 + 96);
  long long v52 = v20;
  long long v21 = *(_OWORD *)(v15 + 48);
  long long v47 = *(_OWORD *)(v15 + 32);
  long long v48 = v21;
  uint64_t v22 = v16 - 1;
  uint64_t v23 = 192;
  while (2)
  {
    if (BYTE12(v54) != 1) {
      goto LABEL_86;
    }
    unint64_t v24 = 0xE300000000000000;
    uint64_t v25 = 7631457;
    switch((char)v47)
    {
      case 1:
        unint64_t v24 = 0xE600000000000000;
        uint64_t v25 = 0x65727574616ELL;
        break;
      case 2:
        unint64_t v24 = 0xE800000000000000;
        uint64_t v25 = 0x6B72616D646E616CLL;
        break;
      case 3:
        uint64_t v25 = 0x4C6C61727574616ELL;
        unint64_t v24 = 0xEF6B72616D646E61;
        break;
      case 4:
        unint64_t v24 = 0xE500000000000000;
        uint64_t v25 = 0x616964656DLL;
        break;
      case 5:
        unint64_t v24 = 0xE400000000000000;
        uint64_t v25 = 1802465122;
        break;
      case 6:
        unint64_t v24 = 0xE500000000000000;
        uint64_t v25 = 0x6D75626C61;
        break;
      case 7:
        unint64_t v24 = 0xE400000000000000;
        uint64_t v25 = 1937006947;
        break;
      case 8:
        unint64_t v24 = 0xE400000000000000;
        uint64_t v25 = 1936158564;
        break;
      case 9:
        unint64_t v24 = 0xE700000000000000;
        unsigned int v26 = 1835626081;
        goto LABEL_21;
      case 10:
        unint64_t v24 = 0xE500000000000000;
        uint64_t v25 = 0x7364726962;
        break;
      case 11:
        unint64_t v24 = 0xE700000000000000;
        uint64_t v25 = 0x73746365736E69;
        break;
      case 12:
        unint64_t v24 = 0xE800000000000000;
        uint64_t v25 = 0x73656C6974706572;
        break;
      case 13:
        unint64_t v24 = 0xE700000000000000;
        unsigned int v26 = 1835884909;
LABEL_21:
        uint64_t v25 = v26 | 0x736C6100000000;
        break;
      case 14:
        unint64_t v24 = 0xE700000000000000;
        uint64_t v25 = 0x6C657261707061;
        break;
      case 15:
        uint64_t v25 = 0x726F737365636361;
        unint64_t v24 = 0xEB00000000736569;
        break;
      case 16:
        unint64_t v24 = 0xE400000000000000;
        uint64_t v25 = 1685024614;
        break;
      case 17:
        unint64_t v24 = 0xEA0000000000746ELL;
        uint64_t v25 = 0x6F726665726F7473;
        break;
      case 18:
        unsigned int v27 = 1852270963;
        goto LABEL_29;
      case 19:
        unint64_t v24 = 0x80000001DD066AB0;
        uint64_t v25 = 0xD000000000000011;
        break;
      case 20:
        unsigned int v27 = 1869903201;
LABEL_29:
        uint64_t v25 = v27 | 0x626D795300000000;
        unint64_t v24 = 0xEA00000000006C6FLL;
        break;
      case 21:
        uint64_t v25 = 0x676F4C646E617262;
        unint64_t v24 = 0xEF6C6F626D79536FLL;
        break;
      case 22:
        unint64_t v24 = 0xE700000000000000;
        uint64_t v25 = 0x65646F63726162;
        break;
      case 23:
        uint64_t v25 = 0x727574706C756373;
        unint64_t v24 = 0xE900000000000065;
        break;
      case 24:
        unint64_t v24 = 0xE700000000000000;
        uint64_t v25 = 0x656E696C796B73;
        break;
      case 25:
        unint64_t v24 = 0xE800000000000000;
        uint64_t v25 = 0x44327463656A626FLL;
        break;
      default:
        break;
    }
    unint64_t v28 = 0xE300000000000000;
    uint64_t v29 = 7631457;
    switch(v17)
    {
      case 1:
        unint64_t v28 = 0xE600000000000000;
        if (v25 == 0x65727574616ELL) {
          goto LABEL_84;
        }
        goto LABEL_85;
      case 2:
        unint64_t v28 = 0xE800000000000000;
        if (v25 != 0x6B72616D646E616CLL) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 3:
        unint64_t v28 = 0xEF6B72616D646E61;
        if (v25 != 0x4C6C61727574616ELL) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 4:
        unint64_t v28 = 0xE500000000000000;
        if (v25 != 0x616964656DLL) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 5:
        unint64_t v28 = 0xE400000000000000;
        if (v25 != 1802465122) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 6:
        unint64_t v28 = 0xE500000000000000;
        if (v25 != 0x6D75626C61) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 7:
        unint64_t v28 = 0xE400000000000000;
        if (v25 != 1937006947) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 8:
        unint64_t v28 = 0xE400000000000000;
        if (v25 != 1936158564) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 9:
        unint64_t v28 = 0xE700000000000000;
        uint64_t v30 = 1835626081;
        goto LABEL_59;
      case 10:
        unint64_t v28 = 0xE500000000000000;
        if (v25 != 0x7364726962) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 11:
        unint64_t v28 = 0xE700000000000000;
        unint64_t v31 = 0x746365736E69;
        goto LABEL_60;
      case 12:
        unint64_t v28 = 0xE800000000000000;
        if (v25 != 0x73656C6974706572) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 13:
        unint64_t v28 = 0xE700000000000000;
        uint64_t v30 = 1835884909;
LABEL_59:
        unint64_t v31 = v30 & 0xFFFF0000FFFFFFFFLL | 0x6C6100000000;
LABEL_60:
        if (v25 != (v31 & 0xFFFFFFFFFFFFLL | 0x73000000000000)) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 14:
        unint64_t v28 = 0xE700000000000000;
        if (v25 != 0x6C657261707061) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 15:
        unint64_t v28 = 0xEB00000000736569;
        if (v25 != 0x726F737365636361) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 16:
        unint64_t v28 = 0xE400000000000000;
        if (v25 != 1685024614) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 17:
        unint64_t v28 = 0xEA0000000000746ELL;
        if (v25 != 0x6F726665726F7473) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 18:
        unsigned int v32 = 1852270963;
        goto LABEL_74;
      case 19:
        unint64_t v28 = 0x80000001DD066AB0;
        if (v25 != 0xD000000000000011) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 20:
        unsigned int v32 = 1869903201;
LABEL_74:
        unint64_t v28 = 0xEA00000000006C6FLL;
        if (v25 != (v32 | 0x626D795300000000)) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 21:
        unint64_t v28 = 0xEF6C6F626D79536FLL;
        if (v25 != 0x676F4C646E617262) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 22:
        unint64_t v28 = 0xE700000000000000;
        if (v25 != 0x65646F63726162) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 23:
        unint64_t v28 = 0xE900000000000065;
        if (v25 != 0x727574706C756373) {
          goto LABEL_85;
        }
        goto LABEL_84;
      case 24:
        unint64_t v28 = 0xE700000000000000;
        uint64_t v29 = 0x656E696C796B73;
        goto LABEL_83;
      case 25:
        unint64_t v28 = 0xE800000000000000;
        if (v25 != 0x44327463656A626FLL) {
          goto LABEL_85;
        }
        goto LABEL_84;
      default:
LABEL_83:
        if (v25 != v29) {
          goto LABEL_85;
        }
LABEL_84:
        if (v24 != v28)
        {
LABEL_85:
          char v33 = sub_1DD048FA8();
          sub_1DCD32CC8((uint64_t)&v47);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1DCD32DD4((uint64_t)&v47);
          if (v33) {
            goto LABEL_92;
          }
LABEL_86:
          if (!v22)
          {
            swift_bridgeObjectRelease_n();
            sub_1DCD32DD4((uint64_t)v56);
            uint64_t v4 = v2 + 32;
            uint64_t v3 = v44;
            uint64_t v6 = v46;
            goto LABEL_97;
          }
          long long v34 = *(_OWORD *)(v15 + v23 + 16);
          long long v47 = *(_OWORD *)(v15 + v23);
          long long v48 = v34;
          long long v35 = *(_OWORD *)(v15 + v23 + 32);
          long long v36 = *(_OWORD *)(v15 + v23 + 48);
          long long v37 = *(_OWORD *)(v15 + v23 + 80);
          long long v51 = *(_OWORD *)(v15 + v23 + 64);
          long long v52 = v37;
          long long v49 = v35;
          long long v50 = v36;
          long long v38 = *(_OWORD *)(v15 + v23 + 96);
          long long v39 = *(_OWORD *)(v15 + v23 + 112);
          long long v40 = *(_OWORD *)(v15 + v23 + 128);
          *(_OWORD *)((char *)v55 + 13) = *(_OWORD *)(v15 + v23 + 141);
          long long v54 = v39;
          v55[0] = v40;
          long long v53 = v38;
          v23 += 160;
          --v22;
          continue;
        }
        sub_1DCD32CC8((uint64_t)&v47);
        swift_bridgeObjectRelease_n();
        sub_1DCD32DD4((uint64_t)&v47);
LABEL_92:
        swift_bridgeObjectRelease_n();
        uint64_t v6 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_1DCE9D7D4(0, *((void *)v46 + 2) + 1, 1, v46);
        }
        uint64_t v4 = v2 + 32;
        uint64_t v3 = v44;
        unint64_t v42 = *((void *)v6 + 2);
        unint64_t v41 = *((void *)v6 + 3);
        if (v42 >= v41 >> 1) {
          uint64_t v6 = sub_1DCE9D7D4((char *)(v41 > 1), v42 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v42 + 1;
        v6[v42 + 32] = v17;
        sub_1DCD32DD4((uint64_t)v56);
LABEL_97:
        if (++v5 != v3)
        {
          if (v5 >= *(void *)(v2 + 16))
          {
            __break(1u);
            JUMPOUT(0x1DCF2D070);
          }
          goto LABEL_3;
        }
        swift_bridgeObjectRelease();
        return v6;
    }
  }
}

void *sub_1DCF2D140(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  long long v11 = (_OWORD *)swift_bridgeObjectRetain();
  long long v12 = v11[9];
  long long v49 = v11[8];
  long long v50 = v12;
  v51[0] = v11[10];
  *(_OWORD *)((char *)v51 + 13) = *(_OWORD *)((char *)v11 + 173);
  long long v13 = v11[5];
  long long v45 = v11[4];
  long long v46 = v13;
  long long v14 = v11[7];
  long long v47 = v11[6];
  long long v48 = v14;
  long long v15 = v11[3];
  uint64_t v16 = v6 - 1;
  uint64_t v17 = 192;
  long long v43 = v11[2];
  long long v44 = v15;
  long long v18 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v52 = a4;
  long long v35 = a3;
  while (1)
  {
    v41[6] = v49;
    v41[7] = v50;
    v42[0] = v51[0];
    *(_OWORD *)((char *)v42 + 13) = *(_OWORD *)((char *)v51 + 13);
    v41[2] = v45;
    v41[3] = v46;
    uint64_t v41[4] = v47;
    v41[5] = v48;
    v41[0] = v43;
    v41[1] = v44;
    sub_1DCD32CC8((uint64_t)&v43);
    sub_1DCF2881C(v41, a2, a3, a4, (uint64_t)v40);
    if (v5)
    {
      sub_1DCD32DD4((uint64_t)&v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    sub_1DCD32DD4((uint64_t)&v43);
    sub_1DCD43B04((uint64_t)v40, (uint64_t)v38, &qword_1EBE85400);
    sub_1DCD43B04((uint64_t)v38, (uint64_t)v39, &qword_1EBE85400);
    if (sub_1DCD32CA4((uint64_t)v39) != 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v18 = sub_1DCE9D680(0, v18[2] + 1, 1, v18);
      }
      unint64_t v20 = v18[2];
      unint64_t v19 = v18[3];
      if (v20 >= v19 >> 1) {
        long long v18 = sub_1DCE9D680((void *)(v19 > 1), v20 + 1, 1, v18);
      }
      sub_1DCD43B04((uint64_t)v38, (uint64_t)v36, &qword_1EBE85400);
      v18[2] = v20 + 1;
      long long v21 = &v18[20 * v20];
      long long v22 = v36[1];
      v21[2] = v36[0];
      v21[3] = v22;
      long long v23 = v36[5];
      long long v25 = v36[2];
      long long v24 = v36[3];
      v21[6] = v36[4];
      v21[7] = v23;
      char v21[4] = v25;
      _OWORD v21[5] = v24;
      long long v27 = v36[7];
      long long v26 = v37[0];
      long long v28 = v36[6];
      *(_OWORD *)((char *)v21 + 173) = *(_OWORD *)((char *)v37 + 13);
      v21[9] = v27;
      v21[10] = v26;
      v21[8] = v28;
      a4 = v52;
      a3 = v35;
    }
    if (!v16) {
      break;
    }
    long long v29 = *(_OWORD *)(a1 + v17 + 112);
    long long v49 = *(_OWORD *)(a1 + v17 + 96);
    long long v50 = v29;
    v51[0] = *(_OWORD *)(a1 + v17 + 128);
    *(_OWORD *)((char *)v51 + 13) = *(_OWORD *)(a1 + v17 + 141);
    long long v30 = *(_OWORD *)(a1 + v17 + 48);
    long long v45 = *(_OWORD *)(a1 + v17 + 32);
    long long v46 = v30;
    long long v31 = *(_OWORD *)(a1 + v17 + 80);
    long long v47 = *(_OWORD *)(a1 + v17 + 64);
    long long v48 = v31;
    long long v32 = *(_OWORD *)(a1 + v17);
    long long v33 = *(_OWORD *)(a1 + v17 + 16);
    v17 += 160;
    --v16;
    long long v43 = v32;
    long long v44 = v33;
  }
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_1DCF2D3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v70 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE855F0);
  MEMORY[0x1F4188790](v8 - 8);
  long long v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v64);
  uint64_t v63 = (uint64_t)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v72 = (long long *)((char *)v55 - v13);
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)v55 - v16;
  uint64_t v62 = *(void *)(a1 + 16);
  if (!v62) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v88 = v4;
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v55[1] = a1;
  unint64_t v56 = v17;
  uint64_t v61 = a1 + v17;
  uint64_t v65 = *(void *)(v15 + 72);
  uint64_t v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v60 = (void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
  swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  unint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v68 = a4;
  uint64_t v69 = a2;
  uint64_t v58 = v10;
  do
  {
    unint64_t v66 = v19;
    uint64_t v67 = v18;
    unint64_t v20 = v72;
    sub_1DCF30F00(v61 + v65 * v18, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v21 = *((void *)v20 + 6);
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      long long v23 = *(_OWORD *)(v21 + 144);
      long long v83 = *(_OWORD *)(v21 + 128);
      long long v84 = v23;
      v85[0] = *(_OWORD *)(v21 + 160);
      *(_OWORD *)((char *)v85 + 13) = *(_OWORD *)(v21 + 173);
      long long v24 = *(_OWORD *)(v21 + 80);
      long long v79 = *(_OWORD *)(v21 + 64);
      long long v80 = v24;
      long long v25 = *(_OWORD *)(v21 + 112);
      long long v81 = *(_OWORD *)(v21 + 96);
      long long v82 = v25;
      long long v26 = *(_OWORD *)(v21 + 32);
      long long v27 = *(_OWORD *)(v21 + 48);
      uint64_t v71 = v21;
      long long v77 = v26;
      long long v78 = v27;
      uint64_t v28 = v22 - 1;
      uint64_t v29 = 192;
      long long v30 = (void *)MEMORY[0x1E4FBC860];
      while (1)
      {
        v75[6] = v83;
        v75[7] = v84;
        v76[0] = v85[0];
        *(_OWORD *)((char *)v76 + 13) = *(_OWORD *)((char *)v85 + 13);
        _OWORD v75[2] = v79;
        v75[3] = v80;
        v75[4] = v81;
        v75[5] = v82;
        v75[0] = v77;
        v75[1] = v78;
        sub_1DCD32CC8((uint64_t)&v77);
        uint64_t v31 = v88;
        sub_1DCF28EE0(v75, a2, v72, v70, a4, (uint64_t)v73);
        uint64_t v88 = v31;
        sub_1DCD32DD4((uint64_t)&v77);
        sub_1DCD43B04((uint64_t)v73, (uint64_t)v86, &qword_1EBE85400);
        sub_1DCD43B04((uint64_t)v86, (uint64_t)v87, &qword_1EBE85400);
        if (sub_1DCD32CA4((uint64_t)v87) == 1)
        {
          if (!v28) {
            goto LABEL_16;
          }
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v30 = sub_1DCE9D680(0, v30[2] + 1, 1, v30);
          }
          unint64_t v33 = v30[2];
          unint64_t v32 = v30[3];
          if (v33 >= v32 >> 1) {
            long long v30 = sub_1DCE9D680((void *)(v32 > 1), v33 + 1, 1, v30);
          }
          sub_1DCD43B04((uint64_t)v86, (uint64_t)v73, &qword_1EBE85400);
          v30[2] = v33 + 1;
          long long v34 = &v30[20 * v33];
          long long v35 = v73[1];
          long long v34[2] = v73[0];
          v34[3] = v35;
          long long v36 = v73[5];
          long long v38 = v73[2];
          long long v37 = v73[3];
          v34[6] = v73[4];
          v34[7] = v36;
          v34[4] = v38;
          v34[5] = v37;
          long long v39 = v73[7];
          long long v40 = v74[0];
          long long v41 = v73[6];
          *(_OWORD *)((char *)v34 + 173) = *(_OWORD *)((char *)v74 + 13);
          v34[9] = v39;
          v34[10] = v40;
          v34[8] = v41;
          a4 = v68;
          a2 = v69;
          if (!v28)
          {
LABEL_16:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            long long v10 = v58;
            goto LABEL_18;
          }
        }
        long long v42 = *(_OWORD *)(v71 + v29 + 16);
        long long v77 = *(_OWORD *)(v71 + v29);
        long long v78 = v42;
        long long v43 = *(_OWORD *)(v71 + v29 + 32);
        long long v44 = *(_OWORD *)(v71 + v29 + 48);
        long long v45 = *(_OWORD *)(v71 + v29 + 80);
        long long v81 = *(_OWORD *)(v71 + v29 + 64);
        long long v82 = v45;
        long long v79 = v43;
        long long v80 = v44;
        long long v46 = *(_OWORD *)(v71 + v29 + 96);
        long long v47 = *(_OWORD *)(v71 + v29 + 112);
        long long v48 = *(_OWORD *)(v71 + v29 + 128);
        *(_OWORD *)((char *)v85 + 13) = *(_OWORD *)(v71 + v29 + 141);
        long long v84 = v47;
        v85[0] = v48;
        long long v83 = v46;
        v29 += 160;
        --v28;
      }
    }
    long long v30 = (void *)MEMORY[0x1E4FBC860];
LABEL_18:
    long long v49 = v72;
    swift_beginAccess();
    *((void *)v49 + 6) = v30;
    swift_bridgeObjectRelease();
    sub_1DCF30F00((uint64_t)v49, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v50 = v64;
    (*v60)(v10, 0, 1, v64);
    sub_1DCF30F68((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((*v59)(v10, 1, v50) == 1)
    {
      sub_1DCD2479C((uint64_t)v10, &qword_1EBE855F0);
      unint64_t v19 = v66;
    }
    else
    {
      uint64_t v51 = v57;
      sub_1DCF30E98((uint64_t)v10, v57, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCF30E98(v51, v63, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      unint64_t v19 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_1DCE9D7A0(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v53 = *(void *)(v19 + 16);
      unint64_t v52 = *(void *)(v19 + 24);
      if (v53 >= v52 >> 1) {
        unint64_t v19 = sub_1DCE9D7A0(v52 > 1, v53 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v53 + 1;
      sub_1DCF30E98(v63, v19 + v56 + v53 * v65, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      a2 = v69;
    }
    uint64_t v18 = v67 + 1;
  }
  while (v67 + 1 != v62);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1DCF2D9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v110 = a2;
  uint64_t v3 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v106 = (uint64_t)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (long long *)((char *)&v100 - v7);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v100 - v10;
  uint64_t v12 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v135 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v104 = v4;
  uint64_t v111 = v8;
  if (v13)
  {
    unint64_t v108 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v107 = *(void *)(v4 + 72);
    uint64_t v102 = a1;
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    unint64_t v15 = 0;
    uint64_t v103 = v11;
    uint64_t v105 = v13;
    while (1)
    {
      unint64_t v109 = v15;
      sub_1DCF30F00(v108 + v107 * v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v11[104] != 1)
      {
        uint64_t v17 = *((void *)v11 + 6);
        uint64_t v18 = *(void *)(v17 + 16);
        if (v18)
        {
          swift_bridgeObjectRetain();
          long long v19 = *(_OWORD *)(v17 + 144);
          long long v132 = *(_OWORD *)(v17 + 128);
          long long v133 = v19;
          v134[0] = *(_OWORD *)(v17 + 160);
          *(_OWORD *)((char *)v134 + 13) = *(_OWORD *)(v17 + 173);
          long long v20 = *(_OWORD *)(v17 + 80);
          long long v128 = *(_OWORD *)(v17 + 64);
          long long v129 = v20;
          long long v21 = *(_OWORD *)(v17 + 112);
          long long v130 = *(_OWORD *)(v17 + 96);
          long long v131 = v21;
          long long v22 = *(_OWORD *)(v17 + 48);
          long long v126 = *(_OWORD *)(v17 + 32);
          long long v127 = v22;
          uint64_t v23 = v18 - 1;
          uint64_t v24 = 192;
          if ((BYTE12(v133) & 1) == 0) {
            goto LABEL_25;
          }
LABEL_10:
          uint64_t v32 = v126;
          sub_1DCD32CC8((uint64_t)&v126);
          sub_1DCD33E90((uint64_t)v14);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v125[0] = v12;
          unint64_t v35 = sub_1DCEAD454(v32);
          uint64_t v36 = v12[2];
          BOOL v37 = (v34 & 1) == 0;
          uint64_t v38 = v36 + v37;
          if (__OFADD__(v36, v37))
          {
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            sub_1DD049028();
            __break(1u);
            uint64_t result = swift_release();
            __break(1u);
            return result;
          }
          char v39 = v34;
          if (v12[3] >= v38)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1DCE8A08C();
            }
          }
          else
          {
            sub_1DCE80C5C(v38, isUniquelyReferenced_nonNull_native);
            uint64_t v40 = sub_1DCEAD454(v32);
            if ((v39 & 1) != (v41 & 1)) {
              goto LABEL_78;
            }
            unint64_t v35 = v40;
          }
          uint64_t v12 = (void *)v125[0];
          swift_bridgeObjectRelease();
          if (v39)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            v12[(v35 >> 6) + 8] |= 1 << v35;
            *(unsigned char *)(v12[6] + v35) = v32;
            *(void *)(v12[7] + 8 * v35) = 0;
            uint64_t v42 = v12[2];
            uint64_t v43 = v42 + 1;
            BOOL v44 = __OFADD__(v42, 1);
            swift_bridgeObjectRetain();
            if (v44) {
              goto LABEL_76;
            }
            void v12[2] = v43;
          }
          uint64_t v45 = v12[7];
          swift_bridgeObjectRelease();
          uint64_t v46 = *(void *)(v45 + 8 * v35);
          BOOL v47 = __OFADD__(v46, 1);
          uint64_t v48 = v46 + 1;
          if (v47) {
            goto LABEL_75;
          }
          *(void *)(v45 + 8 * v35) = v48;
          sub_1DCD32DD4((uint64_t)&v126);
          uint64_t v14 = sub_1DCE8D3F4;
LABEL_25:
          while (v23)
          {
            long long v25 = *(_OWORD *)(v17 + v24 + 16);
            long long v126 = *(_OWORD *)(v17 + v24);
            long long v127 = v25;
            long long v26 = *(_OWORD *)(v17 + v24 + 32);
            long long v27 = *(_OWORD *)(v17 + v24 + 48);
            long long v28 = *(_OWORD *)(v17 + v24 + 80);
            long long v130 = *(_OWORD *)(v17 + v24 + 64);
            long long v131 = v28;
            long long v128 = v26;
            long long v129 = v27;
            long long v29 = *(_OWORD *)(v17 + v24 + 96);
            long long v30 = *(_OWORD *)(v17 + v24 + 112);
            long long v31 = *(_OWORD *)(v17 + v24 + 128);
            *(_OWORD *)((char *)v134 + 13) = *(_OWORD *)(v17 + v24 + 141);
            long long v133 = v30;
            v134[0] = v31;
            long long v132 = v29;
            v24 += 160;
            --v23;
            if (BYTE12(v30)) {
              goto LABEL_10;
            }
          }
          uint64_t v135 = v12;
          swift_bridgeObjectRelease();
          uint64_t v11 = v103;
          uint64_t v4 = v104;
        }
        uint64_t v8 = v111;
        uint64_t v13 = v105;
      }
      unint64_t v16 = v109 + 1;
      sub_1DCF30F68((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      unint64_t v15 = v16;
      if (v16 == v13)
      {
        uint64_t v100 = v14;
        a1 = v102;
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
  }
  uint64_t v100 = 0;
LABEL_29:
  *(void *)&long long v126 = a1;
  swift_bridgeObjectRetain();
  sub_1DCF2625C((void **)&v126, (uint64_t (*)(void *))sub_1DCF2A3A8);
  long long v49 = (char *)v126;
  uint64_t v50 = *(void *)(v126 + 16);
  if (v50)
  {
    unint64_t v51 = 0;
    unint64_t v101 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v102 = v50;
    uint64_t v105 = v126 + v101;
    unint64_t v108 = MEMORY[0x1E4FBC860];
    uint64_t v103 = (char *)v126;
    while (v51 < *((void *)v49 + 2))
    {
      uint64_t v54 = *(void *)(v4 + 72);
      unint64_t v109 = v51;
      uint64_t v107 = v54;
      sub_1DCF30F00(v105 + v54 * v51, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      swift_beginAccess();
      if (*((unsigned char *)v8 + 104) != 1)
      {
        uint64_t v55 = *((void *)v8 + 6);
        uint64_t v56 = *(void *)(v55 + 16);
        if (v56)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          long long v57 = *(_OWORD *)(v55 + 144);
          long long v122 = *(_OWORD *)(v55 + 128);
          long long v123 = v57;
          v124[0] = *(_OWORD *)(v55 + 160);
          *(_OWORD *)((char *)v124 + 13) = *(_OWORD *)(v55 + 173);
          long long v58 = *(_OWORD *)(v55 + 80);
          long long v118 = *(_OWORD *)(v55 + 64);
          long long v119 = v58;
          long long v59 = *(_OWORD *)(v55 + 112);
          long long v120 = *(_OWORD *)(v55 + 96);
          long long v121 = v59;
          long long v60 = *(_OWORD *)(v55 + 48);
          long long v116 = *(_OWORD *)(v55 + 32);
          long long v117 = v60;
          uint64_t v61 = v56 - 1;
          uint64_t v62 = 192;
          uint64_t v63 = (void *)MEMORY[0x1E4FBC860];
          while (1)
          {
            v114[6] = v122;
            v114[7] = v123;
            v115[0] = v124[0];
            *(_OWORD *)((char *)v115 + 13) = *(_OWORD *)((char *)v124 + 13);
            v114[2] = v118;
            v114[3] = v119;
            v114[4] = v120;
            v114[5] = v121;
            v114[0] = v116;
            v114[1] = v117;
            sub_1DCD32CC8((uint64_t)&v116);
            sub_1DCF297D8(v114, (uint64_t)&v135, v110, v111, (uint64_t)v112);
            sub_1DCD32DD4((uint64_t)&v116);
            sub_1DCD43B04((uint64_t)v112, (uint64_t)v125, &qword_1EBE85400);
            sub_1DCD43B04((uint64_t)v125, (uint64_t)&v126, &qword_1EBE85400);
            if (sub_1DCD32CA4((uint64_t)&v126) != 1)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v63 = sub_1DCE9D680(0, v63[2] + 1, 1, v63);
              }
              unint64_t v65 = v63[2];
              unint64_t v64 = v63[3];
              if (v65 >= v64 >> 1) {
                uint64_t v63 = sub_1DCE9D680((void *)(v64 > 1), v65 + 1, 1, v63);
              }
              sub_1DCD43B04((uint64_t)v125, (uint64_t)v112, &qword_1EBE85400);
              v63[2] = v65 + 1;
              unint64_t v66 = &v63[20 * v65];
              long long v67 = v112[1];
              _OWORD v66[2] = v112[0];
              uint64_t v66[3] = v67;
              long long v68 = v112[5];
              long long v70 = v112[2];
              long long v69 = v112[3];
              v66[6] = v112[4];
              v66[7] = v68;
              v66[4] = v70;
              v66[5] = v69;
              long long v72 = v112[7];
              long long v71 = v113[0];
              long long v73 = v112[6];
              *(_OWORD *)((char *)v66 + 173) = *(_OWORD *)((char *)v113 + 13);
              v66[9] = v72;
              v66[10] = v71;
              v66[8] = v73;
            }
            if (!v61) {
              break;
            }
            long long v74 = *(_OWORD *)(v55 + v62 + 16);
            long long v116 = *(_OWORD *)(v55 + v62);
            long long v117 = v74;
            long long v75 = *(_OWORD *)(v55 + v62 + 32);
            long long v76 = *(_OWORD *)(v55 + v62 + 48);
            long long v77 = *(_OWORD *)(v55 + v62 + 80);
            long long v120 = *(_OWORD *)(v55 + v62 + 64);
            long long v121 = v77;
            long long v118 = v75;
            long long v119 = v76;
            long long v78 = *(_OWORD *)(v55 + v62 + 96);
            long long v79 = *(_OWORD *)(v55 + v62 + 112);
            long long v80 = *(_OWORD *)(v55 + v62 + 128);
            *(_OWORD *)((char *)v124 + 13) = *(_OWORD *)(v55 + v62 + 141);
            long long v123 = v79;
            v124[0] = v80;
            long long v122 = v78;
            v62 += 160;
            --v61;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v81 = v111;
          uint64_t v4 = v104;
        }
        else
        {
          uint64_t v63 = (void *)MEMORY[0x1E4FBC860];
          long long v81 = v111;
        }
        *((void *)v81 + 6) = v63;
        swift_bridgeObjectRelease();
        uint64_t v82 = v63[2];
        if (v82)
        {
          swift_bridgeObjectRetain();
          long long v83 = (float *)v63 + 39;
          long long v84 = (char *)MEMORY[0x1E4FBC860];
          do
          {
            if (*(unsigned char *)v83) {
              float v85 = *(v83 - 3);
            }
            else {
              float v85 = 0.0;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              long long v84 = sub_1DCE9D9E0(0, *((void *)v84 + 2) + 1, 1, v84);
            }
            unint64_t v87 = *((void *)v84 + 2);
            unint64_t v86 = *((void *)v84 + 3);
            if (v87 >= v86 >> 1) {
              long long v84 = sub_1DCE9D9E0((char *)(v86 > 1), v87 + 1, 1, v84);
            }
            *((void *)v84 + 2) = v87 + 1;
            *(float *)&v84[4 * v87 + 32] = v85;
            v83 += 40;
            --v82;
          }
          while (v82);
          swift_bridgeObjectRelease();
          uint64_t v4 = v104;
        }
        else
        {
          long long v84 = (char *)MEMORY[0x1E4FBC860];
        }
        uint64_t v88 = *((void *)v84 + 2);
        uint64_t v50 = v102;
        if (v88)
        {
          float v89 = *((float *)v84 + 8);
          uint64_t v90 = v88 - 1;
          if (v90)
          {
            BOOL v91 = (float *)(v84 + 36);
            do
            {
              float v92 = *v91++;
              float v93 = v92;
              if (v89 < v92) {
                float v89 = v93;
              }
              --v90;
            }
            while (v90);
          }
        }
        else
        {
          float v89 = 0.0;
        }
        swift_bridgeObjectRelease();
        long long v94 = v111;
        *((float *)v111 + 18) = v89;
        sub_1DCF30F00((uint64_t)v94, v106, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        unint64_t v95 = v108;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v95 = sub_1DCE9D7A0(0, *(void *)(v95 + 16) + 1, 1, v95);
        }
        unint64_t v97 = *(void *)(v95 + 16);
        unint64_t v96 = *(void *)(v95 + 24);
        unint64_t v108 = v95;
        if (v97 >= v96 >> 1) {
          unint64_t v108 = sub_1DCE9D7A0(v96 > 1, v97 + 1, 1, v108);
        }
        unint64_t v52 = v108;
        *(void *)(v108 + 16) = v97 + 1;
        sub_1DCF30E98(v106, v52 + v101 + v97 * v107, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v8 = v111;
        long long v49 = v103;
      }
      unint64_t v53 = v109 + 1;
      sub_1DCF30F68((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      unint64_t v51 = v53;
      if (v53 == v50)
      {
        swift_release();
        unint64_t v98 = v108;
        goto LABEL_73;
      }
    }
    goto LABEL_77;
  }
  swift_release();
  unint64_t v98 = MEMORY[0x1E4FBC860];
LABEL_73:
  swift_bridgeObjectRelease();
  sub_1DCD33E90((uint64_t)v100);
  return v98;
}

unint64_t sub_1DCF2E2D8(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C88);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v130 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v123 = (uint64_t)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v128 = (uint64_t)&v123 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (double *)((char *)&v123 - v12);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868B8);
  uint64_t v14 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  long long v129 = (char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868C0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  long long v133 = (uint64_t *)((char *)&v123 - v20);
  v158[0] = a1;
  swift_bridgeObjectRetain();
  sub_1DCF2625C(v158, (uint64_t (*)(void *))sub_1DCF2AE58);
  unint64_t v134 = v158[0][2];
  long long v131 = (unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48);
  long long v132 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  long long v150 = v158[0];
  swift_retain();
  unint64_t v21 = 0;
  unint64_t v124 = MEMORY[0x1E4FBC860];
  unint64_t v142 = v18;
  long long v143 = v6;
  uint64_t v147 = v13;
  while (1)
  {
    if (v21 == v134)
    {
      uint64_t v24 = 1;
      unint64_t v139 = v134;
      uint64_t v25 = v135;
    }
    else
    {
      uint64_t v25 = v135;
      if ((v21 & 0x8000000000000000) != 0) {
        goto LABEL_109;
      }
      if (v21 >= v150[2])
      {
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
        swift_release();
        __break(1u);
        JUMPOUT(0x1DCF2F1A4);
      }
      unint64_t v26 = v21 + 1;
      unint64_t v27 = v21;
      uint64_t v28 = (uint64_t)&v129[*(int *)(v135 + 48)];
      sub_1DCF30F00((uint64_t)v150+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(void *)(v130 + 72) * v21, v28, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v29 = (uint64_t)&v142[*(int *)(v25 + 48)];
      *(void *)unint64_t v142 = v27;
      sub_1DCF30E98(v28, v29, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      uint64_t v24 = 0;
      unint64_t v139 = v26;
      uint64_t v18 = v142;
    }
    (*v132)(v18, v24, 1, v25);
    uint64_t v30 = (uint64_t)v18;
    long long v31 = v133;
    sub_1DCD43B04(v30, (uint64_t)v133, &qword_1EBE868C0);
    if ((*v131)(v31, 1, v25) == 1) {
      break;
    }
    uint64_t v32 = v31;
    uint64_t v33 = *v31;
    sub_1DCF30E98((uint64_t)v32 + *(int *)(v25 + 48), (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    swift_beginAccess();
    if (*((unsigned char *)v13 + 104) == 1) {
      goto LABEL_3;
    }
    int64_t v34 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      goto LABEL_114;
    }
    unint64_t v35 = v150;
    int64_t v36 = v150[2];
    if (v36 < v34) {
      goto LABEL_115;
    }
    if (v34 != v36)
    {
      BOOL v44 = (char *)v150
          + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
      unint64_t v45 = v33 + 1;
      int64_t v126 = v150[2];
      int64_t v127 = v33 + 1;
      uint64_t v125 = v44;
      do
      {
        if ((uint64_t)v45 >= v36) {
          goto LABEL_111;
        }
        if (v34 < 0) {
          goto LABEL_112;
        }
        if (v45 >= v35[2]) {
          goto LABEL_113;
        }
        uint64_t v46 = (uint64_t)&v44[*(void *)(v130 + 72) * v45];
        if ((*(unsigned char *)(v46 + 104) & 1) == 0)
        {
          unint64_t v149 = v45;
          uint64_t v136 = (double *)v46;
          uint64_t v47 = v128;
          sub_1DCF30F00(v46, v128, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v48 = sub_1DCF2C830((uint64_t)v13, v47);
          uint64_t v49 = v47;
          uint64_t v50 = v48;
          sub_1DCF30F68(v49, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          uint64_t v145 = *((void *)v50 + 2);
          if (v145)
          {
            unint64_t v51 = 0;
            uint64_t v146 = v50;
            int v144 = v50 + 32;
            do
            {
              if (v51 >= *((void *)v146 + 2))
              {
                __break(1u);
LABEL_109:
                __break(1u);
                goto LABEL_110;
              }
              uint64_t v52 = v144[v51];
              unint64_t v53 = v51 + 1;
              uint64_t v54 = 0xE300000000000000;
              unint64_t v55 = 7631457;
              switch(v52)
              {
                case 1:
                  uint64_t v54 = 0xE600000000000000;
                  unint64_t v55 = 0x65727574616ELL;
                  break;
                case 2:
                  uint64_t v54 = 0xE800000000000000;
                  unint64_t v55 = 0x6B72616D646E616CLL;
                  break;
                case 3:
                  uint64_t v54 = 0xEF6B72616D646E61;
                  unint64_t v55 = 0x4C6C61727574616ELL;
                  break;
                case 4:
                  uint64_t v54 = 0xE500000000000000;
                  unint64_t v55 = 0x616964656DLL;
                  break;
                case 5:
                  uint64_t v54 = 0xE400000000000000;
                  unint64_t v55 = 1802465122;
                  break;
                case 6:
                  uint64_t v54 = 0xE500000000000000;
                  unint64_t v55 = 0x6D75626C61;
                  break;
                case 7:
                  uint64_t v54 = 0xE400000000000000;
                  unint64_t v55 = 1937006947;
                  break;
                case 8:
                  uint64_t v54 = 0xE400000000000000;
                  unint64_t v55 = 1936158564;
                  break;
                case 9:
                  uint64_t v54 = 0xE700000000000000;
                  unsigned int v56 = 1835626081;
                  goto LABEL_57;
                case 10:
                  uint64_t v54 = 0xE500000000000000;
                  unint64_t v55 = 0x7364726962;
                  break;
                case 11:
                  uint64_t v54 = 0xE700000000000000;
                  unint64_t v55 = 0x73746365736E69;
                  break;
                case 12:
                  uint64_t v54 = 0xE800000000000000;
                  unint64_t v55 = 0x73656C6974706572;
                  break;
                case 13:
                  uint64_t v54 = 0xE700000000000000;
                  unsigned int v56 = 1835884909;
LABEL_57:
                  unint64_t v55 = v56 | 0x736C6100000000;
                  break;
                case 14:
                  uint64_t v54 = 0xE700000000000000;
                  unint64_t v55 = 0x6C657261707061;
                  break;
                case 15:
                  uint64_t v54 = 0xEB00000000736569;
                  unint64_t v55 = 0x726F737365636361;
                  break;
                case 16:
                  uint64_t v54 = 0xE400000000000000;
                  unint64_t v55 = 1685024614;
                  break;
                case 17:
                  uint64_t v54 = 0xEA0000000000746ELL;
                  unint64_t v55 = 0x6F726665726F7473;
                  break;
                case 18:
                  unsigned int v57 = 1852270963;
                  goto LABEL_60;
                case 19:
                  uint64_t v54 = 0x80000001DD066AB0;
                  unint64_t v55 = 0xD000000000000011;
                  break;
                case 20:
                  unsigned int v57 = 1869903201;
LABEL_60:
                  unint64_t v55 = v57 | 0x626D795300000000;
                  uint64_t v54 = 0xEA00000000006C6FLL;
                  break;
                case 21:
                  uint64_t v54 = 0xEF6C6F626D79536FLL;
                  unint64_t v55 = 0x676F4C646E617262;
                  break;
                case 22:
                  uint64_t v54 = 0xE700000000000000;
                  unint64_t v55 = 0x65646F63726162;
                  break;
                case 23:
                  uint64_t v54 = 0xE900000000000065;
                  unint64_t v55 = 0x727574706C756373;
                  break;
                case 24:
                  uint64_t v54 = 0xE700000000000000;
                  unint64_t v55 = 0x656E696C796B73;
                  break;
                case 25:
                  uint64_t v54 = 0xE800000000000000;
                  unint64_t v55 = 0x44327463656A626FLL;
                  break;
                default:
                  break;
              }
              unint64_t v148 = v53;
              if (*(void *)(a2 + 16) && (unint64_t v58 = sub_1DCEAD1A4(v55, v54), (v59 & 1) != 0))
              {
                unint64_t v60 = v58;
                uint64_t v61 = *(void *)(a2 + 56);
                uint64_t v62 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
                uint64_t v63 = *(void *)(v62 - 8);
                uint64_t v64 = v61 + *(void *)(v63 + 72) * v60;
                uint64_t v13 = v147;
                sub_1DCF30F00(v64, (uint64_t)v143, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v143, 0, 1, v62);
                uint64_t v6 = v143;
              }
              else
              {
                uint64_t v62 = type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v6, 1, 1, v62);
              }
              swift_bridgeObjectRelease();
              type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig(0);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v6, 1, v62) == 1)
              {
                sub_1DCD2479C((uint64_t)v6, &qword_1EBE84C88);
              }
              else
              {
                unint64_t v65 = (float *)(*(void *)&v6[*(int *)(v62 + 20)]
                              + OBJC_IVAR____TtCV18VisualIntelligence40Argos_Protos_Queryflow_DomainParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__overlapRatioThreshold);
                swift_beginAccess();
                float v66 = *v65;
                sub_1DCF30F68((uint64_t)v6, type metadata accessor for Argos_Protos_Queryflow_DomainParseConfig);
                if (v66 > 0.0)
                {
                  float v141 = v66;
                  CGFloat v67 = *v13;
                  CGFloat v68 = v13[1];
                  CGFloat v69 = v13[2];
                  CGFloat v70 = v13[3];
                  CGFloat v71 = v136[1];
                  double v140 = *v136;
                  CGFloat v72 = v136[2];
                  CGFloat v73 = v136[3];
                  v159.origin.CGFloat x = v67;
                  v159.origin.CGFloat y = v68;
                  v159.size.double width = v69;
                  v159.size.double height = v70;
                  double Width = CGRectGetWidth(v159);
                  CGFloat v137 = v67;
                  v160.origin.CGFloat x = v67;
                  CGFloat v75 = v68;
                  CGFloat v76 = v140;
                  v160.origin.CGFloat y = v75;
                  v160.size.double width = v69;
                  v160.size.double height = v70;
                  double v77 = Width * CGRectGetHeight(v160);
                  v161.origin.CGFloat x = v76;
                  v161.origin.CGFloat y = v71;
                  v161.size.double width = v72;
                  v161.size.double height = v73;
                  CGFloat v138 = CGRectGetWidth(v161);
                  v162.origin.CGFloat x = v76;
                  v162.origin.CGFloat y = v71;
                  v162.size.double width = v72;
                  v162.size.double height = v73;
                  double Height = CGRectGetHeight(v162);
                  if (v77 <= 0.0) {
                    goto LABEL_75;
                  }
                  double v79 = v138 * Height;
                  if (v79 <= 0.0) {
                    goto LABEL_75;
                  }
                  CGFloat v138 = v79;
                  v163.origin.CGFloat x = v137;
                  v163.origin.CGFloat y = v75;
                  v163.size.double width = v69;
                  v163.size.double height = v70;
                  v167.origin.CGFloat x = v76;
                  v167.origin.CGFloat y = v71;
                  v167.size.double width = v72;
                  v167.size.double height = v73;
                  CGRect v164 = CGRectIntersection(v163, v167);
                  CGFloat x = v164.origin.x;
                  CGFloat y = v164.origin.y;
                  CGFloat v82 = v164.size.width;
                  CGFloat v83 = v164.size.height;
                  if (CGRectIsNull(v164))
                  {
LABEL_75:
                    unint64_t v51 = v148;
                    if (v141 >= 0.0) {
                      continue;
                    }
                  }
                  else
                  {
                    v165.origin.CGFloat x = x;
                    v165.origin.CGFloat y = y;
                    v165.size.double width = v82;
                    v165.size.double height = v83;
                    double v110 = CGRectGetWidth(v165);
                    v166.origin.CGFloat x = x;
                    v166.origin.CGFloat y = y;
                    v166.size.double width = v82;
                    v166.size.double height = v83;
                    double v111 = v110 * CGRectGetHeight(v166);
                    double v112 = v138;
                    if (v138 >= v77) {
                      double v112 = v77;
                    }
                    float v113 = v111 / v112;
                    unint64_t v51 = v148;
                    if (v141 >= v113) {
                      continue;
                    }
                  }
                  uint64_t v84 = *((void *)v13 + 6);
                  uint64_t v85 = *(void *)(v84 + 16);
                  if (v85)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v86 = v85 - 1;
                    unint64_t v87 = (void *)MEMORY[0x1E4FBC860];
                    for (uint64_t i = 32; ; i += 160)
                    {
                      long long v89 = *(_OWORD *)(v84 + i + 16);
                      v155[0] = *(_OWORD *)(v84 + i);
                      v155[1] = v89;
                      long long v90 = *(_OWORD *)(v84 + i + 32);
                      long long v91 = *(_OWORD *)(v84 + i + 48);
                      long long v92 = *(_OWORD *)(v84 + i + 80);
                      v155[4] = *(_OWORD *)(v84 + i + 64);
                      v155[5] = v92;
                      v155[2] = v90;
                      v155[3] = v91;
                      long long v93 = *(_OWORD *)(v84 + i + 96);
                      long long v94 = *(_OWORD *)(v84 + i + 112);
                      long long v95 = *(_OWORD *)(v84 + i + 128);
                      *(_OWORD *)((char *)v156 + 13) = *(_OWORD *)(v84 + i + 141);
                      v155[7] = v94;
                      v156[0] = v95;
                      v155[6] = v93;
                      long long v96 = *(_OWORD *)(v84 + i + 112);
                      v153[6] = *(_OWORD *)(v84 + i + 96);
                      v153[7] = v96;
                      v154[0] = *(_OWORD *)(v84 + i + 128);
                      *(_OWORD *)((char *)v154 + 13) = *(_OWORD *)(v84 + i + 141);
                      long long v97 = *(_OWORD *)(v84 + i + 48);
                      v153[2] = *(_OWORD *)(v84 + i + 32);
                      void v153[3] = v97;
                      long long v98 = *(_OWORD *)(v84 + i + 80);
                      v153[4] = *(_OWORD *)(v84 + i + 64);
                      v153[5] = v98;
                      long long v99 = *(_OWORD *)(v84 + i + 16);
                      v153[0] = *(_OWORD *)(v84 + i);
                      v153[1] = v99;
                      sub_1DCD32CC8((uint64_t)v155);
                      sub_1DCF29E6C(v153, v52, v13, (uint64_t)v150, v149, (uint64_t)v151);
                      sub_1DCD32DD4((uint64_t)v155);
                      sub_1DCD43B04((uint64_t)v151, (uint64_t)v157, &qword_1EBE85400);
                      sub_1DCD43B04((uint64_t)v157, (uint64_t)v158, &qword_1EBE85400);
                      if (sub_1DCD32CA4((uint64_t)v158) != 1)
                      {
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                          unint64_t v87 = sub_1DCE9D680(0, v87[2] + 1, 1, v87);
                        }
                        unint64_t v101 = v87[2];
                        unint64_t v100 = v87[3];
                        if (v101 >= v100 >> 1) {
                          unint64_t v87 = sub_1DCE9D680((void *)(v100 > 1), v101 + 1, 1, v87);
                        }
                        sub_1DCD43B04((uint64_t)v157, (uint64_t)v151, &qword_1EBE85400);
                        v87[2] = v101 + 1;
                        uint64_t v102 = &v87[20 * v101];
                        long long v103 = v151[1];
                        v102[2] = v151[0];
                        v102[3] = v103;
                        long long v104 = v151[5];
                        long long v106 = v151[2];
                        long long v105 = v151[3];
                        v102[6] = v151[4];
                        v102[7] = v104;
                        v102[4] = v106;
                        v102[5] = v105;
                        long long v108 = v151[7];
                        long long v107 = v152[0];
                        long long v109 = v151[6];
                        *(_OWORD *)((char *)v102 + 173) = *(_OWORD *)((char *)v152 + 13);
                        v102[9] = v108;
                        v102[10] = v107;
                        v102[8] = v109;
                        uint64_t v13 = v147;
                      }
                      if (!v86) {
                        break;
                      }
                      --v86;
                    }
                    swift_bridgeObjectRelease();
                    uint64_t v6 = v143;
                  }
                  else
                  {
                    unint64_t v87 = (void *)MEMORY[0x1E4FBC860];
                  }
                  *((void *)v13 + 6) = v87;
                  swift_bridgeObjectRelease();
                }
              }
              unint64_t v51 = v148;
            }
            while (v51 != v145);
          }
          swift_bridgeObjectRelease();
          unint64_t v45 = v149;
          unint64_t v35 = v150;
          int64_t v36 = v126;
          int64_t v34 = v127;
          BOOL v44 = v125;
        }
        ++v45;
      }
      while (v45 != v36);
    }
    uint64_t v37 = *((void *)v13 + 6);
    uint64_t v38 = *(void *)(v37 + 16);
    if (v38)
    {
      swift_bridgeObjectRetain();
      char v39 = (float *)(v37 + 156);
      uint64_t v40 = (char *)MEMORY[0x1E4FBC860];
      do
      {
        if (*(unsigned char *)v39) {
          float v41 = *(v39 - 3);
        }
        else {
          float v41 = 0.0;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v40 = sub_1DCE9D9E0(0, *((void *)v40 + 2) + 1, 1, v40);
        }
        unint64_t v43 = *((void *)v40 + 2);
        unint64_t v42 = *((void *)v40 + 3);
        if (v43 >= v42 >> 1) {
          uint64_t v40 = sub_1DCE9D9E0((char *)(v42 > 1), v43 + 1, 1, v40);
        }
        *((void *)v40 + 2) = v43 + 1;
        *(float *)&v40[4 * v43 + 32] = v41;
        v39 += 40;
        --v38;
      }
      while (v38);
      swift_bridgeObjectRelease();
      uint64_t v6 = v143;
    }
    else
    {
      uint64_t v40 = (char *)MEMORY[0x1E4FBC860];
    }
    uint64_t v114 = *((void *)v40 + 2);
    uint64_t v13 = v147;
    if (v114)
    {
      float v115 = *((float *)v40 + 8);
      uint64_t v116 = v114 - 1;
      if (v116)
      {
        long long v117 = (float *)(v40 + 36);
        do
        {
          float v118 = *v117++;
          float v119 = v118;
          if (v115 < v118) {
            float v115 = v119;
          }
          --v116;
        }
        while (v116);
      }
    }
    else
    {
      float v115 = 0.0;
    }
    swift_bridgeObjectRelease();
    *((float *)v13 + 18) = v115;
    sub_1DCF30F00((uint64_t)v13, v123, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v124 = sub_1DCE9D7A0(0, *(void *)(v124 + 16) + 1, 1, v124);
    }
    unint64_t v121 = *(void *)(v124 + 16);
    unint64_t v120 = *(void *)(v124 + 24);
    if (v121 >= v120 >> 1) {
      unint64_t v124 = sub_1DCE9D7A0(v120 > 1, v121 + 1, 1, v124);
    }
    uint64_t v22 = v123;
    unint64_t v23 = v124;
    *(void *)(v124 + 16) = v121 + 1;
    sub_1DCF30E98(v22, v23+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(void *)(v130 + 72) * v121, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_3:
    sub_1DCF30F68((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v18 = v142;
    unint64_t v21 = v139;
  }
  swift_release_n();
  return v124;
}

unint64_t sub_1DCF2F20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v26 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v26 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = (void *)sub_1DCF2D9C4(a1, a2);
  unint64_t v18 = sub_1DCF2E2D8(v17, a2);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    unint64_t v20 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v21 = a1 + v20;
    uint64_t v22 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1DCF30F00(v21, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      if (v10[104]) {
        break;
      }
      sub_1DCF30F68((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      v21 += v22;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        return v18;
      }
    }
    swift_bridgeObjectRelease();
    sub_1DCF30E98((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCF30E98((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCF30F00((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v18 = sub_1DCE9D7A0(0, *(void *)(v18 + 16) + 1, 1, v18);
    }
    unint64_t v24 = *(void *)(v18 + 16);
    unint64_t v23 = *(void *)(v18 + 24);
    if (v24 >= v23 >> 1) {
      unint64_t v18 = sub_1DCE9D7A0(v23 > 1, v24 + 1, 1, v18);
    }
    *(void *)(v18 + 16) = v24 + 1;
    sub_1DCF30E98((uint64_t)v7, v18 + v20 + v24 * v22, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    sub_1DCF30F68((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
  }
  return v18;
}

unint64_t sub_1DCF2F4C8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1DD048068();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1DCDE82EC() & 1) == 0)
  {
    if (qword_1EBE871A0 == -1) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
  if (qword_1EAB01C28 != -1) {
LABEL_14:
  }
    swift_once();
LABEL_5:
  swift_retain();
  uint64_t v10 = sub_1DCD9D5B8();
  unint64_t v12 = v11;
  swift_release();
  if (v12)
  {
    sub_1DCDB40EC((uint64_t)v9);
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_1DD048048();
    os_log_type_t v14 = sub_1DD048848();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v26 = v6;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v28 = a1;
      uint64_t v16 = (uint8_t *)v15;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v27 = a2;
      uint64_t v18 = v7;
      uint64_t v19 = v17;
      uint64_t v30 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1DCED7FA0(v10, v12, &v30);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v13, v14, "Overriding query context's application identifier to %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v19, -1, -1);
      unint64_t v20 = v16;
      a1 = v28;
      MEMORY[0x1E01B07E0](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v26);
      a2 = v27;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  else if (a3 && (id v21 = objc_msgSend(a3, sel_applicationIdentifier)) != 0)
  {
    uint64_t v22 = v21;
    uint64_t v10 = sub_1DD048408();
    unint64_t v12 = v23;
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v12 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v24 = sub_1DCF2D3BC(a1, a2, v10, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v24;
}

uint64_t sub_1DCF2F828(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, unsigned char *a5, uint64_t *a6, uint64_t a7, double a8, double a9)
{
  uint64_t v204 = a7;
  long long v186 = a6;
  char v205 = a5;
  uint64_t v198 = a3;
  uint64_t v206 = (float *)a1;
  uint64_t v13 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v199 = (long long *)((char *)&v171 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  long long v187 = (long long *)((char *)&v171 - v16);
  MEMORY[0x1F4188790](v17);
  long long v189 = (long long *)((char *)&v171 - v18);
  MEMORY[0x1F4188790](v19);
  uint64_t v185 = (uint64_t)&v171 - v20;
  MEMORY[0x1F4188790](v21);
  long long v183 = (long long *)((char *)&v171 - v22);
  MEMORY[0x1F4188790](v23);
  long long v179 = (long long *)((char *)&v171 - v24);
  MEMORY[0x1F4188790](v25);
  char v177 = (long long *)((char *)&v171 - v26);
  uint64_t v202 = sub_1DD048068();
  uint64_t v203 = *(void *)(v202 - 8);
  MEMORY[0x1F4188790](v202);
  uint64_t v200 = (uint64_t)&v171 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v188 = (uint64_t)&v171 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v190 = (uint64_t)&v171 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v184 = (uint64_t)&v171 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v180 = (uint64_t)&v171 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v178 = (uint64_t)&v171 - v37;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84D38);
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v182 = (uint64_t)&v171 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains(0);
  uint64_t v191 = *(void *)(v197 - 8);
  MEMORY[0x1F4188790](v197);
  long long v181 = (uint64_t *)((char *)&v171 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84C38);
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v194 = (uint64_t)&v171 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig(0);
  uint64_t v192 = *(void *)(v193 - 8);
  MEMORY[0x1F4188790](v193);
  BOOL v44 = (char *)&v171 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = type metadata accessor for Argos_Protos_Queryflow_ParseConfig(0);
  MEMORY[0x1F4188790](v195);
  uint64_t v196 = (uint64_t)&v171 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = *a2;
  uint64_t v47 = a2[1];
  uint64_t v48 = a2[2];
  uint64_t v49 = a2[3];
  uint64_t v50 = a4[1];
  uint64_t v201 = *a4;
  uint64_t v52 = a4[2];
  uint64_t v51 = a4[3];
  uint64_t v53 = a4[4];
  uint64_t v54 = a4[5];
  uint64_t v55 = a4[6];
  uint64_t v56 = a4[7];
  int v57 = *v205;
  LOBYTE(v209) = *v205;
  uint64_t v58 = v204;
  if (sub_1DCF10AC8((unsigned __int8 *)&v209, v204))
  {
    uint64_t v59 = v200;
    sub_1DCDB40EC(v200);
    unint64_t v60 = v199;
    sub_1DCF30F00((uint64_t)v206, (uint64_t)v199, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v61 = sub_1DD048048();
    os_log_type_t v62 = sub_1DD048848();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      *(void *)&long long v215 = v64;
      *(_DWORD *)uint64_t v63 = 136315394;
      long long v65 = v60[1];
      long long v209 = *v60;
      long long v210 = v65;
      uint64_t v66 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v209 = sub_1DCED7FA0(v66, v67, (uint64_t *)&v215);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCF30F68((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      *(_WORD *)(v63 + 12) = 2080;
      uint64_t v68 = sub_1DCD9C35C(v57);
      *(void *)&long long v209 = sub_1DCED7FA0(v68, v69, (uint64_t *)&v215);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      CGFloat v70 = "%s drops %s due to duplicated domains in the same region.";
LABEL_30:
      _os_log_impl(&dword_1DCCF9000, v61, v62, v70, (uint8_t *)v63, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v64, -1, -1);
      MEMORY[0x1E01B07E0](v63, -1, -1);
      goto LABEL_31;
    }
    uint64_t v100 = (uint64_t)v60;
    goto LABEL_22;
  }
  uint64_t v172 = v51;
  uint64_t v173 = v52;
  uint64_t v174 = v50;
  uint64_t v175 = v54;
  uint64_t v176 = v53;
  uint64_t v199 = (long long *)v56;
  uint64_t v200 = v55;
  uint64_t v71 = v197;
  LODWORD(v205) = v57;
  uint64_t v72 = v195;
  uint64_t v73 = *(int *)(v195 + 20);
  uint64_t v74 = v198;
  uint64_t v75 = *(void *)(v198 + v73);
  swift_beginAccess();
  LODWORD(v75) = *(_DWORD *)(v75 + 60);
  uint64_t v76 = v196;
  sub_1DCF30F00(v74, v196, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
  if ((int)v75 <= 0)
  {
    sub_1DCF30F68(v76, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
    uint64_t v80 = (uint64_t)v44;
    uint64_t v81 = v200;
    uint64_t v82 = (uint64_t)v199;
    uint64_t v83 = v176;
    uint64_t v84 = v175;
    uint64_t v85 = v201;
    uint64_t v86 = v174;
    uint64_t v87 = v173;
    uint64_t v88 = v172;
  }
  else
  {
    uint64_t v77 = *(void *)(v58 + 16);
    uint64_t v78 = *(void *)(v76 + *(int *)(v72 + 20));
    swift_beginAccess();
    uint64_t v79 = *(int *)(v78 + 60);
    sub_1DCF30F68(v76, type metadata accessor for Argos_Protos_Queryflow_ParseConfig);
    uint64_t v80 = (uint64_t)v44;
    uint64_t v81 = v200;
    uint64_t v82 = (uint64_t)v199;
    uint64_t v83 = v176;
    uint64_t v84 = v175;
    uint64_t v85 = v201;
    uint64_t v86 = v174;
    uint64_t v87 = v173;
    uint64_t v88 = v172;
    if (v77 >= v79)
    {
      uint64_t v89 = v188;
      sub_1DCDB40EC(v188);
      long long v90 = v187;
      sub_1DCF30F00((uint64_t)v206, (uint64_t)v187, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      long long v91 = sub_1DD048048();
      os_log_type_t v92 = sub_1DD048848();
      if (os_log_type_enabled(v91, v92))
      {
        uint64_t v93 = swift_slowAlloc();
        uint64_t v94 = swift_slowAlloc();
        *(void *)&long long v215 = v94;
        *(_DWORD *)uint64_t v93 = 136315394;
        long long v95 = v90[1];
        long long v209 = *v90;
        long long v210 = v95;
        uint64_t v96 = NormalizedRect.loggingDescription.getter();
        *(void *)&long long v209 = sub_1DCED7FA0(v96, v97, (uint64_t *)&v215);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        sub_1DCF30F68((uint64_t)v90, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        *(_WORD *)(v93 + 12) = 2080;
        uint64_t v98 = sub_1DCD9C35C((char)v205);
        *(void *)&long long v209 = sub_1DCED7FA0(v98, v99, (uint64_t *)&v215);
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1DCCF9000, v91, v92, "%s drops %s due to exceeding max number of selected domains per region.", (uint8_t *)v93, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0](v94, -1, -1);
        MEMORY[0x1E01B07E0](v93, -1, -1);
      }
      else
      {
        sub_1DCF30F68((uint64_t)v90, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      }

      (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v89, v202);
      return 0;
    }
  }
  v208[0] = v205;
  uint64_t v101 = (uint64_t)v206;
  long long v102 = *((_OWORD *)v206 + 1);
  long long v215 = *(_OWORD *)v206;
  long long v216 = v102;
  *(void *)&long long v209 = v85;
  *((void *)&v209 + 1) = v86;
  *(void *)&long long v210 = v87;
  *((void *)&v210 + 1) = v88;
  uint64_t v103 = *(void *)(v74 + v73);
  uint64_t v211 = v83;
  uint64_t v212 = v84;
  uint64_t v104 = v103
       + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__safetyConfig;
  uint64_t v213 = v81;
  uint64_t v214 = v82;
  swift_beginAccess();
  uint64_t v105 = v194;
  sub_1DCD2889C(v104, v194, &qword_1EBE84C38);
  uint64_t v106 = v193;
  uint64_t v107 = v73;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v192 + 48))(v105, 1, v193) == 1)
  {
    *(_WORD *)uint64_t v80 = 0;
    uint64_t v108 = v106;
    uint64_t v109 = MEMORY[0x1E4FBC860];
    *(void *)(v80 + 8) = sub_1DCDB86BC(MEMORY[0x1E4FBC860]);
    *(void *)(v80 + 16) = sub_1DCDB8914(v109);
    *(void *)(v80 + 24) = v109;
    *(void *)(v80 + 32) = v109;
    *(void *)(v80 + 40) = v109;
    sub_1DD047BE8();
    uint64_t v110 = v80 + *(int *)(v108 + 48);
    uint64_t v111 = type metadata accessor for Argos_Protos_Queryflow_SafetyConfig.CornerGlyphConfig(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v110, 1, 1, v111);
    sub_1DCD2479C(v105, &qword_1EBE84C38);
  }
  else
  {
    sub_1DCF30E98(v105, v80, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  }
  uint64_t v112 = v191;
  char v113 = sub_1DCDD7B24(v208, (uint64_t *)&v215, (uint64_t *)&v209, v80);
  sub_1DCF30F68(v80, type metadata accessor for Argos_Protos_Queryflow_SafetyConfig);
  if ((v113 & 1) == 0)
  {
    uint64_t v59 = v190;
    sub_1DCDB40EC(v190);
    long long v122 = v189;
    sub_1DCF30F00(v101, (uint64_t)v189, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v61 = sub_1DD048048();
    os_log_type_t v62 = sub_1DD048848();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      *(void *)&long long v215 = v64;
      *(_DWORD *)uint64_t v63 = 136315394;
      long long v123 = v122[1];
      long long v209 = *v122;
      long long v210 = v123;
      uint64_t v124 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v209 = sub_1DCED7FA0(v124, v125, (uint64_t *)&v215);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCF30F68((uint64_t)v122, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      *(_WORD *)(v63 + 12) = 2080;
      uint64_t v126 = sub_1DCD9C35C((char)v205);
      *(void *)&long long v209 = sub_1DCED7FA0(v126, v127, (uint64_t *)&v215);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      CGFloat v70 = "%s drops %s due to safety";
      goto LABEL_30;
    }
    uint64_t v100 = (uint64_t)v122;
LABEL_22:
    sub_1DCF30F68(v100, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
LABEL_31:

    (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v59, v202);
    return 0;
  }
  float v114 = *(float *)(v101 + 76);
  LOBYTE(v209) = (_BYTE)v205;
  if (sub_1DCFE8EDC((char *)&v209, *(void *)(v101 + 40)) >= v114)
  {
    uint64_t v128 = v184;
    sub_1DCDB40EC(v184);
    long long v129 = v183;
    sub_1DCF30F00(v101, (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v130 = v185;
    sub_1DCF30F00(v101, v185, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    long long v131 = sub_1DD048048();
    os_log_type_t v132 = sub_1DD048848();
    if (os_log_type_enabled(v131, v132))
    {
      uint64_t v133 = swift_slowAlloc();
      uint64_t v134 = swift_slowAlloc();
      *(void *)&long long v215 = v134;
      *(_DWORD *)uint64_t v133 = 136315650;
      long long v135 = v129[1];
      long long v209 = *v129;
      long long v210 = v135;
      uint64_t v136 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v209 = sub_1DCED7FA0(v136, v137, (uint64_t *)&v215);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCF30F68((uint64_t)v129, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      *(_WORD *)(v133 + 12) = 2080;
      uint64_t v138 = sub_1DCD9C35C((char)v205);
      *(void *)&long long v209 = sub_1DCED7FA0(v138, v139, (uint64_t *)&v215);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      *(_WORD *)(v133 + 22) = 2048;
      *(double *)&long long v209 = *(float *)(v130 + 76);
      sub_1DD048A28();
      sub_1DCF30F68(v130, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      _os_log_impl(&dword_1DCCF9000, v131, v132, "%s drops %s due to low box score %f", (uint8_t *)v133, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v134, -1, -1);
      MEMORY[0x1E01B07E0](v133, -1, -1);
    }
    else
    {
      sub_1DCF30F68((uint64_t)v129, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      sub_1DCF30F68(v130, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    }

    (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v128, v202);
    return 0;
  }
  float v115 = v186;
  uint64_t v116 = *v186;
  uint64_t v117 = *(void *)(v74 + v107)
       + OBJC_IVAR____TtCV18VisualIntelligence34Argos_Protos_Queryflow_ParseConfigP33_7DF24988070CDFF9E5CDF6DD63AA88A313_StorageClass__incompatibleDomains;
  swift_beginAccess();
  uint64_t v118 = v117;
  uint64_t v119 = v182;
  sub_1DCD2889C(v118, v182, &qword_1EBE84D38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v119, 1, v71) == 1)
  {
    uint64_t v120 = v119;
    unint64_t v121 = v181;
    void *v181 = MEMORY[0x1E4FBC860];
    sub_1DD047BE8();
    sub_1DCD2479C(v120, &qword_1EBE84D38);
  }
  else
  {
    uint64_t v140 = v119;
    unint64_t v121 = v181;
    sub_1DCF30E98(v140, (uint64_t)v181, type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains);
  }
  char v141 = (char)v205;
  LOBYTE(v209) = (_BYTE)v205;
  uint64_t v142 = sub_1DCFEC144((uint64_t)&unk_1F38361D8);
  char v143 = sub_1DCF10308((unsigned __int8 *)&v209, v116, v142);
  swift_bridgeObjectRelease();
  if ((v143 & 1) != 0
    || (LOBYTE(v209) = v141,
        uint64_t v144 = sub_1DCFEC144((uint64_t)&unk_1F3836198),
        char v145 = sub_1DCF10308((unsigned __int8 *)&v209, v58, v144),
        swift_bridgeObjectRelease(),
        (v145 & 1) != 0))
  {
    sub_1DCF30F68((uint64_t)v121, type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains);
    uint64_t v146 = v180;
    sub_1DCDB40EC(v180);
    uint64_t v147 = v179;
    sub_1DCF30F00(v101, (uint64_t)v179, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    uint64_t v61 = sub_1DD048048();
    os_log_type_t v62 = sub_1DD048848();
    if (!os_log_type_enabled(v61, v62))
    {
      sub_1DCF30F68((uint64_t)v147, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

      (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v146, v202);
      return 0;
    }
    uint64_t v59 = v146;
    uint64_t v63 = swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    *(void *)&long long v215 = v64;
    *(_DWORD *)uint64_t v63 = 136315394;
    long long v148 = v147[1];
    long long v209 = *v147;
    long long v210 = v148;
    uint64_t v149 = NormalizedRect.loggingDescription.getter();
    *(void *)&long long v209 = sub_1DCED7FA0(v149, v150, (uint64_t *)&v215);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCF30F68((uint64_t)v147, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    *(_WORD *)(v63 + 12) = 2080;
    uint64_t v151 = sub_1DCD9C35C(v141);
    *(void *)&long long v209 = sub_1DCED7FA0(v151, v152, (uint64_t *)&v215);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    CGFloat v70 = "%s drops %s due to incompatible domains.";
    goto LABEL_30;
  }
  sub_1DCF30F68((uint64_t)v121, type metadata accessor for Argos_Protos_Queryflow_IncompatibleDomains);
  char v207 = v141;
  long long v154 = *(_OWORD *)(v101 + 16);
  long long v209 = *(_OWORD *)v101;
  long long v210 = v154;
  *(void *)&long long v215 = v46;
  *((void *)&v215 + 1) = v47;
  *(void *)&long long v216 = v48;
  *((void *)&v216 + 1) = v49;
  if (!sub_1DCFE894C(&v207, (double *)&v209, (double *)&v215, a8, a9))
  {
    uint64_t v157 = v178;
    sub_1DCDB40EC(v178);
    long long v158 = v177;
    sub_1DCF30F00(v101, (uint64_t)v177, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
    CGRect v159 = sub_1DD048048();
    os_log_type_t v160 = sub_1DD048848();
    if (os_log_type_enabled(v159, v160))
    {
      uint64_t v161 = swift_slowAlloc();
      uint64_t v162 = swift_slowAlloc();
      *(void *)&long long v215 = v162;
      *(_DWORD *)uint64_t v161 = 136315394;
      long long v163 = v158[1];
      long long v209 = *v158;
      long long v210 = v163;
      uint64_t v164 = NormalizedRect.loggingDescription.getter();
      *(void *)&long long v209 = sub_1DCED7FA0(v164, v165, (uint64_t *)&v215);
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCF30F68((uint64_t)v158, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
      *(_WORD *)(v161 + 12) = 2080;
      char v166 = (char)v205;
      uint64_t v167 = sub_1DCD9C35C((char)v205);
      *(void *)&long long v209 = sub_1DCED7FA0(v167, v168, (uint64_t *)&v215);
      sub_1DD048A28();
      float v115 = v186;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1DCCF9000, v159, v160, "%s drops %s due to small object size.", (uint8_t *)v161, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v162, -1, -1);
      MEMORY[0x1E01B07E0](v161, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v157, v202);
    }
    else
    {
      sub_1DCF30F68((uint64_t)v158, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

      (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v157, v202);
      char v166 = (char)v205;
    }
    float v169 = v206[19];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v215 = *v115;
    *float v115 = 0x8000000000000000;
    sub_1DCDA1468(v166, isUniquelyReferenced_nonNull_native, (uint64_t)&v209, v169);
    *float v115 = v215;
    swift_bridgeObjectRelease();
    return 0;
  }
  float v155 = *(float *)(v101 + 76);
  char v156 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v215 = *v115;
  *float v115 = 0x8000000000000000;
  sub_1DCDA1468(v141, v156, (uint64_t)&v209, v155);
  *float v115 = v215;
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1DCF30E98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCF30F00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCF30F68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1DCF30FC8@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DCF2836C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

VisualIntelligence::S2Cap __swiftcall S2Cap.init(axis:angle:)(VisualIntelligence::S2Point axis, VisualIntelligence::S1Angle angle)
{
  uint64_t v5 = v4;
  long long v12 = *v2;
  uint64_t v6 = *((void *)v2 + 2);
  long double v7 = sin(*v3 * 0.5);
  double v9 = v7 + v7;
  double v10 = *(double *)&v12;
  *(_OWORD *)uint64_t v5 = v12;
  double v11 = v7 * (v7 + v7);
  *(void *)(v5 + 16) = v6;
  *(double *)(v5 + 24) = v11;
  result.double height = v8;
  result.axis.z = v10;
  result.axis.CGFloat y = v9;
  result.axis.CGFloat x = v11;
  return result;
}

VisualIntelligence::S2Cap __swiftcall S2Cap.add(point:)(VisualIntelligence::S2Point point)
{
  double v4 = *v1;
  double v5 = v1[1];
  double v6 = v1[2];
  double v7 = v3[3];
  double v8 = 0.0;
  if (v7 >= 0.0)
  {
    double v9 = ((v3[2] - v6) * (v3[2] - v6) + (v3[1] - v5) * (v3[1] - v5) + (*v3 - v4) * (*v3 - v4)) * 2.22044605e-16;
    if (v7 > v9) {
      double v8 = v3[3];
    }
    else {
      double v8 = v9;
    }
    double v4 = *v3;
    double v5 = v3[1];
    double v6 = v3[2];
  }
  *uint64_t v2 = v4;
  v2[1] = v5;
  v2[2] = v6;
  v2[3] = v8;
  result.double height = v8;
  result.axis.z = v6;
  result.axis.CGFloat y = v5;
  result.axis.CGFloat x = v4;
  return result;
}

VisualIntelligence::S2Cap __swiftcall S2Cap.init(axis:height:)(VisualIntelligence::S2Point axis, Swift::Double height)
{
  double v4 = v2[2];
  long long v5 = *(_OWORD *)v2;
  *(_OWORD *)uint64_t v3 = *(_OWORD *)v2;
  *(double *)(v3 + 16) = v4;
  *(Swift::Double *)(v3 + 24) = axis.x;
  result.axis.CGFloat x = axis.x;
  result.axis.z = *(double *)&v5;
  result.double height = height;
  result.axis.CGFloat y = v4;
  return result;
}

VisualIntelligence::S2Cap __swiftcall S2Cap.add(cap:)(VisualIntelligence::S2Cap cap)
{
  uint64_t v4 = v2;
  double v6 = *v1;
  double v5 = v1[1];
  Swift::Double v7 = v1[2];
  double v8 = v1[3];
  double v9 = *(double *)(v3 + 24);
  if (v9 >= 0.0)
  {
    double v10 = *(double *)v3;
    uint64_t v11 = *(void *)(v3 + 8);
    uint64_t v12 = *(void *)(v3 + 16);
    double v13 = S2Point.angle(to:)(*(VisualIntelligence::S2Point *)&v7);
    if (v8 >= 0.0)
    {
      long double v15 = asin(sqrt(v8 * 0.5));
      double v14 = v15 + v15;
    }
    else
    {
      double v14 = -1.0;
    }
    Swift::Double v7 = v13 + v14;
    double v8 = 2.0;
    double v5 = 3.14159265;
    if (v7 < 3.14159265)
    {
      long double v16 = sin(v7 * 0.5);
      double v5 = v16 * 8.8817842e-16;
      Swift::Double v7 = v16 * (v16 * 8.8817842e-16);
      if (v9 > v7) {
        double v8 = v9;
      }
      else {
        double v8 = v7;
      }
    }
  }
  else
  {
    double v10 = *v1;
    uint64_t v11 = *((void *)v1 + 1);
    uint64_t v12 = *((void *)v1 + 2);
  }
  *(double *)uint64_t v4 = v10;
  *(void *)(v4 + 8) = v11;
  *(void *)(v4 + 16) = v12;
  *(double *)(v4 + 24) = v8;
  cap.axis.z = v6;
  cap.axis.CGFloat y = v5;
  cap.axis.CGFloat x = v7;
  return cap;
}

void S2Cap.angle.getter(double *a1@<X8>)
{
  double v3 = *(double *)(v1 + 24);
  double v4 = -1.0;
  if (v3 >= 0.0)
  {
    long double v5 = asin(sqrt(v3 * 0.5));
    double v4 = v5 + v5;
  }
  *a1 = v4;
}

double S2Cap.axis.getter@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(double *)(a1 + 16) = result;
  return result;
}

double S2Cap.height.getter()
{
  return *(double *)(v0 + 24);
}

VisualIntelligence::S2Cap __swiftcall S2Cap.init(axis:area:)(VisualIntelligence::S2Point axis, Swift::Double area)
{
  double v4 = v2[2];
  double v5 = 6.28318531;
  long long v6 = *(_OWORD *)v2;
  *(_OWORD *)uint64_t v3 = *(_OWORD *)v2;
  double v7 = axis.x / 6.28318531;
  *(double *)(v3 + 16) = v4;
  *(double *)(v3 + 24) = v7;
  result.double height = *(double *)&v6;
  result.axis.z = v5;
  result.axis.CGFloat y = v4;
  result.axis.CGFloat x = v7;
  return result;
}

void static S2Cap.empty.getter(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0xBFF0000000000000;
}

void static S2Cap.full.getter(void *a1@<X8>)
{
  *a1 = 0x3FF0000000000000;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0x4000000000000000;
}

double S2Cap.area.getter()
{
  double v1 = *(double *)(v0 + 24);
  double v2 = v1 * 6.28318531;
  BOOL v3 = v1 < 0.0;
  double result = 0.0;
  if (!v3) {
    return v2;
  }
  return result;
}

BOOL S2Cap.isEmpty.getter()
{
  return *(double *)(v0 + 24) < 0.0;
}

BOOL S2Cap.isValid.getter()
{
  BOOL v1 = fabs(*v0 * *v0 + v0[1] * v0[1] + v0[2] * v0[2] + -1.0) <= 1.0e-15;
  return v0[3] <= 2.0 && v1;
}

BOOL S2Cap.isFull.getter()
{
  return *(double *)(v0 + 24) >= 2.0;
}

double S2Cap.complement.getter@<D0>(float64x2_t *a1@<X8>)
{
  double v2 = v1[1].f64[0];
  double v3 = v1[1].f64[1];
  double v4 = 2.0 - v3;
  if (v3 <= 0.0) {
    double v4 = 2.0;
  }
  BOOL v5 = v3 < 2.0;
  double v6 = -1.0;
  if (v5) {
    double v6 = v4;
  }
  *a1 = vnegq_f64(*v1);
  double result = -v2;
  a1[1].f64[0] = result;
  a1[1].f64[1] = v6;
  return result;
}

Swift::Bool __swiftcall S2Cap.contains(other:)(VisualIntelligence::S2Cap other)
{
  double v3 = v1;
  long double v4 = *((double *)v2 + 3);
  Swift::Bool result = 1;
  if (v4 < 2.0)
  {
    double v6 = v3[3];
    if (v6 >= 0.0)
    {
      long long v7 = *(_OWORD *)v3;
      double v8 = -1.0;
      long long v9 = *v2;
      if (v4 >= 0.0)
      {
        long long v12 = *v2;
        long long v13 = *(_OWORD *)v3;
        long double v4 = asin(sqrt(v4 * 0.5));
        *(void *)&long long v9 = v12;
        *(void *)&long long v7 = v13;
        double v8 = v4 + v4;
      }
      double v10 = S2Point.angle(to:)(*(VisualIntelligence::S2Point *)&v4);
      long double v11 = asin(sqrt(v6 * 0.5));
      return v10 + v11 + v11 <= v8;
    }
  }
  return result;
}

Swift::Bool __swiftcall S2Cap.interiorIntersects(with:)(VisualIntelligence::S2Cap with)
{
  double v3 = v2[1].f64[1];
  double v4 = 2.0 - v3;
  if (v3 <= 0.0) {
    double v4 = 2.0;
  }
  uint64_t v5 = *(_OWORD *)&vnegq_f64(*v2);
  long long v7 = *((_OWORD *)v1 + 1);
  uint64_t v6 = *v1;
  return !S2Cap.contains(other:)(*(VisualIntelligence::S2Cap *)(&v4 - 3));
}

Swift::Bool __swiftcall S2Cap.interiorContains(point:)(VisualIntelligence::S2Point point)
{
  double v3 = *(double *)(v2 + 24);
  if (v3 >= 2.0) {
    return 1;
  }
  float64x2_t v4 = vsubq_f64(*(float64x2_t *)(v2 + 8), *(float64x2_t *)(v1 + 8));
  float64x2_t v5 = vmulq_f64(v4, v4);
  return v5.f64[1] + v5.f64[0] + (*(double *)v2 - *(double *)v1) * (*(double *)v2 - *(double *)v1) < v3 + v3;
}

void S2Cap.intersects(with:vertices:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  double v6 = v5[3];
  double v7 = 1.0;
  if (v6 >= 1.0) {
    return;
  }
  if (v6 < 0.0) {
    return;
  }
  double v9 = *v5;
  double v10 = v5[1];
  double v11 = v5[2];
  double v21 = *(double *)a1;
  LOWORD(v22) = *(_WORD *)(a1 + 8);
  BYTE2(v22) = *(unsigned char *)(a1 + 10);
  double v23 = *(double *)(a1 + 16);
  if (S2Cell.contains(point:)(*(VisualIntelligence::S2Point *)(&a4 - 1))) {
    return;
  }
  unint64_t v12 = 0;
  double v13 = v6 * (2.0 - v6);
  for (uint64_t i = (double *)(a2 + 48); ; i += 3)
  {
    unint64_t v15 = v12 + 1;
    S2Cell.getRawEdge(_:)(v12);
    double v16 = v9 * v21 + v10 * v22 + v11 * v23;
    if (v16 > 0.0) {
      goto LABEL_5;
    }
    if (v13 * (v21 * v21 + v22 * v22 + v23 * v23) < v16 * v16) {
      return;
    }
    unint64_t v17 = *(void *)(a2 + 16);
    if (v12 >= v17) {
      break;
    }
    double v18 = v11 * v22 - v10 * v23;
    double v19 = v9 * v23 - v11 * v21;
    double v20 = v10 * v21 - v9 * v22;
    if (v18 * *(i - 2) + v19 * *(i - 1) + v20 * *i < 0.0)
    {
      if ((v15 & 3) >= v17) {
        goto LABEL_15;
      }
      if (v18 * *(double *)(a2 + 32 + 24 * (v15 & 3))
         + v19 * *(double *)(a2 + 32 + 24 * (v15 & 3) + 8)
         + v20 * *(double *)(a2 + 32 + 24 * (v15 & 3) + 16) > 0.0)
        return;
    }
LABEL_5:
    ++v12;
    if (v15 == 4) {
      return;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
}

Swift::Bool __swiftcall S2Cap.contains(point:)(VisualIntelligence::S2Point point)
{
  float64_t v3 = v2[1].f64[0] - v1[1].f64[0];
  float64x2_t v4 = vsubq_f64(*v2, *v1);
  return vaddvq_f64(vmulq_f64(v4, v4)) + v3 * v3 <= v2[1].f64[1] + v2[1].f64[1];
}

__n128 S2Cap.capBound.getter@<Q0>(_OWORD *a1@<X8>)
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

void S2Cap.rectBound.getter(double *a1@<X8>)
{
  double v3 = *(double *)(v1 + 24);
  if (v3 < 0.0)
  {
    if (qword_1EAB01DA8 != -1) {
      swift_once();
    }
    double v4 = *((double *)&xmmword_1EAB032D0 + 1);
    double v5 = *(double *)&xmmword_1EAB032D0;
    double v6 = 0.0;
    double v7 = 1.0;
    goto LABEL_23;
  }
  long double v8 = *(double *)(v1 + 8);
  long double v9 = *(double *)v1;
  long double v10 = atan2(*(long double *)(v1 + 16), sqrt(v8 * v8 + v9 * v9));
  double v11 = atan2(v8, v9);
  long double v12 = asin(sqrt(v3 * 0.5));
  long double v13 = v12 + v12;
  double v7 = v10 - v13;
  double v6 = v10 + v13;
  unint64_t v14 = 0xBFF921FB54442D18;
  if (v10 - v13 <= -1.57079633)
  {
    if (v6 >= 1.57079633)
    {
      double v4 = 3.14159265;
      double v6 = 1.57079633;
      goto LABEL_15;
    }
    goto LABEL_10;
  }
  if (v6 >= 1.57079633)
  {
    double v4 = 3.14159265;
    unint64_t v14 = *(void *)&v7;
    double v6 = 1.57079633;
    goto LABEL_15;
  }
  double v15 = sqrt(v3 * (2.0 - v3));
  double v16 = cos(v10);
  if (v15 > v16)
  {
    unint64_t v14 = *(void *)&v7;
LABEL_10:
    double v4 = 3.14159265;
LABEL_15:
    double v18 = -3.14159265;
    if (v4 == 3.14159265) {
      double v5 = -3.14159265;
    }
    else {
      double v5 = 3.14159265;
    }
    double v7 = *(double *)&v14;
    goto LABEL_19;
  }
  double v17 = asin(v15 / v16);
  double v5 = remainder(v11 - v17, 6.28318531);
  double v4 = remainder(v11 + v17, 6.28318531);
  if (v5 == -3.14159265)
  {
    unint64_t v14 = *(void *)&v7;
    goto LABEL_15;
  }
  double v18 = v5;
LABEL_19:
  double v19 = 3.14159265;
  if (v18 == 3.14159265) {
    double v19 = v4;
  }
  if (v4 == -3.14159265) {
    double v4 = v19;
  }
LABEL_23:
  *a1 = v7;
  a1[1] = v6;
  a1[2] = v5;
  a1[3] = v4;
}

uint64_t S2Cap.contains(cell:)(uint64_t *a1)
{
  Swift::Int v2 = 0;
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  char v5 = *((unsigned char *)a1 + 9);
  char v6 = *((unsigned char *)a1 + 10);
  uint64_t v7 = a1[2];
  double v8 = *v1;
  double v9 = v1[1];
  double v10 = v1[2];
  double v11 = v1[3];
  long double v12 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v25 = v3;
    char v26 = v4;
    char v27 = v5;
    char v28 = v6;
    uint64_t v29 = v7;
    S2Cell.getVertex(_:)(v2);
    if ((v8 - v22) * (v8 - v22) + (v9 - v23) * (v9 - v23) + (v10 - v24) * (v10 - v24) > v11 + v11)
    {
      swift_bridgeObjectRelease();
      char v16 = 0;
      return v16 & 1;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long double v12 = sub_1DCE9F9B4(0, v12[2] + 1, 1, v12);
    }
    unint64_t v14 = v12[2];
    unint64_t v13 = v12[3];
    if (v14 >= v13 >> 1) {
      long double v12 = sub_1DCE9F9B4((void *)(v13 > 1), v14 + 1, 1, v12);
    }
    ++v2;
    void v12[2] = v14 + 1;
    double v15 = (double *)&v12[3 * v14];
    v15[4] = v22;
    v15[5] = v23;
    v15[6] = v24;
  }
  while (v2 != 4);
  double v17 = 2.0 - v11;
  if (v11 <= 0.0) {
    double v17 = 2.0;
  }
  double v18 = -1.0;
  if (v11 < 2.0) {
    double v18 = v17;
  }
  uint64_t v25 = v3;
  char v26 = v4;
  char v27 = v5;
  char v28 = v6;
  uint64_t v29 = v7;
  S2Cap.intersects(with:vertices:)((uint64_t)&v25, (uint64_t)v12, v18, -v10, -v9);
  char v20 = v19;
  swift_bridgeObjectRelease();
  char v16 = v20 ^ 1;
  return v16 & 1;
}

uint64_t S2Cap.mayIntersect(cell:)(uint64_t *a1)
{
  Swift::Int v2 = 0;
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  char v5 = *((unsigned char *)a1 + 9);
  char v6 = *((unsigned char *)a1 + 10);
  uint64_t v7 = a1[2];
  double v8 = *v1;
  double v9 = v1[1];
  double v10 = v1[2];
  double v11 = v1[3];
  long double v12 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v25 = v3;
    char v26 = v4;
    char v27 = v5;
    char v28 = v6;
    uint64_t v29 = v7;
    S2Cell.getVertex(_:)(v2);
    if ((v8 - v22) * (v8 - v22) + (v9 - v23) * (v9 - v23) + (v10 - v24) * (v10 - v24) <= v11 + v11) {
      break;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long double v12 = sub_1DCE9F9B4(0, v12[2] + 1, 1, v12);
    }
    unint64_t v17 = v12[2];
    unint64_t v16 = v12[3];
    if (v17 >= v16 >> 1) {
      long double v12 = sub_1DCE9F9B4((void *)(v16 > 1), v17 + 1, 1, v12);
    }
    ++v2;
    void v12[2] = v17 + 1;
    double v18 = (double *)&v12[3 * v17];
    v18[4] = v22;
    v18[5] = v23;
    v18[6] = v24;
    if (v2 == 4)
    {
      uint64_t v25 = v3;
      char v26 = v4;
      char v27 = v5;
      char v28 = v6;
      uint64_t v29 = v7;
      S2Cap.intersects(with:vertices:)((uint64_t)&v25, (uint64_t)v12, v13, v14, v15);
      char v20 = v19;
      swift_bridgeObjectRelease();
      return v20 & 1;
    }
  }
  swift_bridgeObjectRelease();
  char v20 = 1;
  return v20 & 1;
}

ValueMetadata *type metadata accessor for S2Cap()
{
  return &type metadata for S2Cap;
}

uint64_t sub_1DCF31C90()
{
  uint64_t result = sub_1DD0483D8();
  qword_1EBE9C7E8 = result;
  return result;
}

uint64_t sub_1DCF31CC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1DCF32BA0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1DCF31D08()
{
  *(void *)(v0 + 16) = 0;
  id v1 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EBE85038 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EBE9C7E8;
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  v7[4] = sub_1DCF32C10;
  v7[5] = v3;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  v7[2] = sub_1DCF32298;
  v7[3] = &block_descriptor_17;
  char v4 = _Block_copy(v7);
  swift_release();
  id v5 = objc_msgSend(v1, sel_addObserverForName_object_queue_usingBlock_, v2, 0, 0, v4);
  _Block_release(v4);

  *(void *)(v0 + 16) = v5;
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1DCF31E6C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v3, sel_removeObserver_, v1);
    swift_unknownObjectRelease();
  }
  *(void *)(v0 + 16) = 0;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MemoryEventResponder()
{
  return self;
}

void sub_1DCF31F44()
{
  if (!*(void *)(v0 + 16))
  {
    id v1 = objc_msgSend(self, sel_defaultCenter);
    if (qword_1EBE85038 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_1EBE9C7E8;
    uint64_t v3 = swift_allocObject();
    swift_weakInit();
    v6[4] = sub_1DCF32C10;
    v6[5] = v3;
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 1107296256;
    v6[2] = sub_1DCF32298;
    v6[3] = &block_descriptor_9;
    char v4 = _Block_copy(v6);
    swift_release();
    id v5 = objc_msgSend(v1, sel_addObserverForName_object_queue_usingBlock_, v2, 0, 0, v4);
    _Block_release(v4);

    *(void *)(v0 + 16) = v5;
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1DCF320A8()
{
  uint64_t v0 = sub_1DD046278();
  if (!v0)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    return sub_1DCDB0EE0((uint64_t)&v11);
  }
  uint64_t v1 = v0;
  sub_1DD048B38();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_1DCEAD73C((uint64_t)v10), (v3 & 1) != 0))
  {
    sub_1DCD21A28(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1DCEAFCB0((uint64_t)v10);
  if (!*((void *)&v12 + 1)) {
    return sub_1DCDB0EE0((uint64_t)&v11);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v5 = v10[0];
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      (*(void (**)(uint64_t))(*(void *)result + 136))(v5);
      uint64_t result = swift_release();
    }
    if ((v5 & 0x20) != 0)
    {
      swift_beginAccess();
      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
        uint64_t v6 = result;
        uint64_t v7 = *(void *)(result + 16);
        if (v7)
        {
          double v8 = self;
          swift_unknownObjectRetain();
          id v9 = objc_msgSend(v8, sel_defaultCenter);
          objc_msgSend(v9, sel_removeObserver_, v7);
          swift_unknownObjectRelease();
        }
        *(void *)(v6 + 16) = 0;
        swift_release();
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1DCF32298(uint64_t a1)
{
  uint64_t v2 = sub_1DD046288();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_1DD046268();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1DCF3238C()
{
}

uint64_t sub_1DCF323E8()
{
  uint64_t v0 = sub_1DD0481B8();
  uint64_t v18 = *(void *)(v0 - 8);
  uint64_t v19 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1DD0481D8();
  uint64_t v3 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DD048928();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCF32C30();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85210);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DD04E910;
  sub_1DD0488F8();
  aBlock[0] = v10;
  sub_1DCF33014((unint64_t *)&unk_1EBE85048);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85010);
  sub_1DCF32C70();
  sub_1DD048AE8();
  uint64_t v11 = sub_1DD048938();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v12 = v16;
  *(void *)(v16 + 16) = v11;
  swift_getObjectType();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1DCF32CCC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCEC8CA4;
  aBlock[3] = &block_descriptor_23;
  double v14 = _Block_copy(aBlock);
  swift_retain();
  sub_1DCEC8CE8();
  sub_1DCEC8CEC();
  sub_1DD048948();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v2, v19);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  swift_release();
  swift_release();
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1DD048968();
  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_1DCF327C0()
{
  uint64_t v0 = sub_1DD048928();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getObjectType();
    sub_1DD0489A8();
    uint64_t v4 = sub_1DCF32E28(v2);
    if ((v5 & 1) == 0)
    {
      uint64_t v6 = v4;
      id v7 = objc_msgSend(self, sel_defaultCenter);
      if (qword_1EBE85038 != -1) {
        swift_once();
      }
      uint64_t v8 = qword_1EBE9C7E8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85220);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1DD04E910;
      v11[0] = 0xD000000000000016;
      v11[1] = 0x80000001DD06E7F0;
      sub_1DD048B38();
      *(void *)(inited + 96) = &type metadata for MemoryEvent;
      *(void *)(inited + 72) = v6;
      sub_1DCDB96B4(inited);
      uint64_t v10 = (void *)sub_1DD0482C8();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_postNotificationName_object_userInfo_, v8, 0, v10);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCF329B4()
{
  swift_getObjectType();
  sub_1DD048958();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MemoryPressureObserver()
{
  return self;
}

ValueMetadata *type metadata accessor for MemoryEvent()
{
  return &type metadata for MemoryEvent;
}

unint64_t sub_1DCF32A40()
{
  unint64_t result = qword_1EAB04190;
  if (!qword_1EAB04190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04190);
  }
  return result;
}

unint64_t sub_1DCF32A98()
{
  unint64_t result = qword_1EAB04198;
  if (!qword_1EAB04198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04198);
  }
  return result;
}

unint64_t sub_1DCF32AF0()
{
  unint64_t result = qword_1EAB041A0;
  if (!qword_1EAB041A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB041A0);
  }
  return result;
}

unint64_t sub_1DCF32B48()
{
  unint64_t result = qword_1EAB041A8;
  if (!qword_1EAB041A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB041A8);
  }
  return result;
}

uint64_t sub_1DCF32BA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1DCF32BD8()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1DCF32C10()
{
  return sub_1DCF320A8();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

unint64_t sub_1DCF32C30()
{
  unint64_t result = qword_1EBE85058;
  if (!qword_1EBE85058)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE85058);
  }
  return result;
}

unint64_t sub_1DCF32C70()
{
  unint64_t result = qword_1EBE85018;
  if (!qword_1EBE85018)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE85010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85018);
  }
  return result;
}

uint64_t sub_1DCF32CCC()
{
  return sub_1DCF327C0();
}

void sub_1DCF32CD4(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EBE85038 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EBE9C7E8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85220);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1DD04E910;
  sub_1DD048B38();
  *(void *)(inited + 96) = &type metadata for MemoryEvent;
  *(void *)(inited + 72) = a1;
  sub_1DCDB96B4(inited);
  uint64_t v5 = (void *)sub_1DD0482C8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_postNotificationName_object_userInfo_, v3, 0, v5);
}

uint64_t sub_1DCF32E28(char *a1)
{
  uint64_t v2 = sub_1DD048928();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v15 - v8;
  (*(void (**)(char *, char *, uint64_t, double))(v3 + 16))((char *)&v15 - v8, a1, v2, v7);
  sub_1DD048908();
  sub_1DCF33014(&qword_1EBE848F8);
  char v10 = sub_1DD0483B8();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  if (v10)
  {
    v11(v9, v2);
    uint64_t v12 = 1;
  }
  else
  {
    sub_1DD048918();
    char v13 = sub_1DD0483B8();
    v11(v5, v2);
    v11(v9, v2);
    if (v13) {
      uint64_t v12 = 2;
    }
    else {
      uint64_t v12 = 0;
    }
  }
  v11(a1, v2);
  return v12;
}

uint64_t sub_1DCF33014(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1DD048928();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for ObjectDetectionModelInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ObjectDetectionModelInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v3 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v3;
  uint64_t v4 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ObjectDetectionModelInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v4 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v4;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for ObjectDetectionModelInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v4;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ObjectDetectionModelInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ObjectDetectionModelInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectDetectionModelInfo()
{
  return &type metadata for ObjectDetectionModelInfo;
}

uint64_t sub_1DCF333A0(void *a1)
{
  uint64_t v3 = sub_1DD048068();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v35 = (char *)&v34 - v7;
  double v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v34 - v10;
  unint64_t v12 = *v1;
  unint64_t v13 = v1[3];
  if (v13 <= *v1) {
    unint64_t v14 = *v1;
  }
  else {
    unint64_t v14 = v1[3];
  }
  id v15 = objc_msgSend(a1, sel_outputFeatureNames, v9);
  uint64_t v16 = (uint64_t)objc_msgSend(v15, sel_count);

  if (v16 >= 1 && v14 < v16)
  {
    uint64_t result = (uint64_t)objc_msgSend(a1, sel_outputFeatureNames);
    if ((v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v25 = (void *)result;
      id v26 = objc_msgSend((id)result, sel_objectAtIndexedSubscript_, v12);

      sub_1DD048AC8();
      swift_unknownObjectRelease();
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_18:
        sub_1DCDB40EC((uint64_t)v5);
        uint64_t v18 = sub_1DD048048();
        os_log_type_t v28 = sub_1DD048858();
        if (!os_log_type_enabled(v18, v28))
        {
          uint64_t v11 = v5;
          goto LABEL_22;
        }
        char v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v20 = 0;
        _os_log_impl(&dword_1DCCF9000, v18, v28, "ModelMetadata and MLModelDescription missmatch: box output name / index missmatch", v20, 2u);
        uint64_t v11 = v5;
        goto LABEL_20;
      }
      if (v38 == v1[1] && v39 == v1[2])
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      char v27 = sub_1DD048FA8();
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_18;
      }
      uint64_t result = (uint64_t)objc_msgSend(a1, sel_outputFeatureNames);
      if ((v13 & 0x8000000000000000) == 0)
      {
        uint64_t v29 = (void *)result;
        id v30 = objc_msgSend((id)result, sel_objectAtIndexedSubscript_, v13);

        sub_1DD048AC8();
        swift_unknownObjectRelease();
        char v31 = swift_dynamicCast();
        uint64_t v11 = v35;
        if (v31)
        {
          if (v38 == v1[4] && v39 == v1[5])
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v32 = sub_1DD048FA8();
            swift_bridgeObjectRelease();
            if ((v32 & 1) == 0) {
              return 1;
            }
          }
        }
        sub_1DCDB40EC((uint64_t)v11);
        uint64_t v18 = sub_1DD048048();
        os_log_type_t v33 = sub_1DD048858();
        if (!os_log_type_enabled(v18, v33)) {
          goto LABEL_22;
        }
        char v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v20 = 0;
        double v21 = "ModelMetadata and MLModelDescription missmatch: confidence output name / index missmatch";
        double v22 = v18;
        os_log_type_t v23 = v33;
        goto LABEL_11;
      }
    }
    __break(1u);
    return result;
  }
  sub_1DCDB40EC((uint64_t)v11);
  uint64_t v18 = sub_1DD048048();
  os_log_type_t v19 = sub_1DD048858();
  if (os_log_type_enabled(v18, v19))
  {
    char v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v20 = 0;
    double v21 = "ModelMetadata and MLModelDescription missmatch: box / confidence output index out of range";
    double v22 = v18;
    os_log_type_t v23 = v19;
LABEL_11:
    _os_log_impl(&dword_1DCCF9000, v22, v23, v21, v20, 2u);
LABEL_20:
    MEMORY[0x1E01B07E0](v20, -1, -1);
  }
LABEL_22:

  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
  return 0;
}

unint64_t sub_1DCF337C8(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7074756F5F786F62;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
    case 5:
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x6C6F687365726874;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1DCF33904(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7074756F5F786F62;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
    case 5:
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x6C6F687365726874;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCF33A40(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1DCF337C8(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1DCF337C8(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1DD048FA8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DCF33ACC()
{
  char v1 = *v0;
  sub_1DD0490B8();
  sub_1DCF337C8(v1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  return sub_1DD049108();
}

uint64_t sub_1DCF33B30()
{
  sub_1DCF337C8(*v0);
  sub_1DD0484F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCF33B84()
{
  char v1 = *v0;
  sub_1DD0490B8();
  sub_1DCF337C8(v1);
  sub_1DD0484F8();
  swift_bridgeObjectRelease();
  return sub_1DD049108();
}

uint64_t sub_1DCF33BE4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCF3412C();
  *a1 = result;
  return result;
}

unint64_t sub_1DCF33C14@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1DCF337C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1DCF33C40()
{
  return sub_1DCF33904(*v0);
}

uint64_t sub_1DCF33C48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1DCF3412C();
  *a1 = result;
  return result;
}

void sub_1DCF33C70(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1DCF33C7C(uint64_t a1)
{
  unint64_t v2 = sub_1DCF3480C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCF33CB8(uint64_t a1)
{
  unint64_t v2 = sub_1DCF3480C();
  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1DCF33CF4@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DCF34178(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v7[6];
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1DCF33D48(void *a1)
{
  return sub_1DCF33D94(a1);
}

uint64_t sub_1DCF33D94(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB041B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v11[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCF3480C();
  sub_1DD049138();
  LOBYTE(v11[0]) = 0;
  sub_1DD048F08();
  if (!v2)
  {
    LOBYTE(v11[0]) = 1;
    sub_1DD048EB8();
    LOBYTE(v11[0]) = 2;
    sub_1DD048F08();
    LOBYTE(v11[0]) = 3;
    sub_1DD048EB8();
    sub_1DCD43B04(v3 + 80, (uint64_t)v14, &qword_1EAB041C0);
    sub_1DCD43B04((uint64_t)v14, (uint64_t)v11, &qword_1EAB041C0);
    char v12 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB041C0);
    sub_1DCF34860(&qword_1EAB041C8, &qword_1EAB041C0);
    sub_1DD048F18();
    sub_1DCD43B04(v3 + 96, (uint64_t)v13, (uint64_t *)&unk_1EBE84F30);
    sub_1DCD43B04((uint64_t)v13, (uint64_t)v11, (uint64_t *)&unk_1EBE84F30);
    char v12 = 10;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE84F30);
    sub_1DCF34860(&qword_1EAB041D0, (uint64_t *)&unk_1EBE84F30);
    sub_1DD048F18();
    LOBYTE(v11[0]) = 5;
    sub_1DD048EE8();
    v11[0] = *(void *)(v3 + 56);
    char v12 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F10);
    sub_1DCF348C4(&qword_1EAB041D8);
    sub_1DD048F18();
    LOBYTE(v11[0]) = 7;
    sub_1DD048EC8();
    LOBYTE(v11[0]) = 8;
    sub_1DD048F08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1DCF3412C()
{
  unint64_t v0 = sub_1DD048D38();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t sub_1DCF34178@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v4 = sub_1DD048068();
  uint64_t v49 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85140);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1DCF3480C();
  sub_1DD049128();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = (uint64_t)v6;
    uint64_t v47 = v4;
    uint64_t v48 = v8;
    uint64_t v13 = v50;
    LOBYTE(v53) = 5;
    uint64_t v14 = sub_1DD048D88();
    if ((v14 & 0x100000000) != 0) {
      float v15 = 0.35;
    }
    else {
      float v15 = *(float *)&v14;
    }
    uint64_t v16 = v12;
    sub_1DCDB40EC(v12);
    uint64_t v17 = sub_1DD048048();
    os_log_type_t v18 = sub_1DD048848();
    if (os_log_type_enabled(v17, v18))
    {
      os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v19 = 134217984;
      double v53 = v15;
      sub_1DD048A28();
      _os_log_impl(&dword_1DCCF9000, v17, v18, "ObjectDectionModelInfo init: default threshold loaded %f", v19, 0xCu);
      MEMORY[0x1E01B07E0](v19, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v16, v47);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84F10);
    char v52 = 6;
    sub_1DCF348C4(&qword_1EBE84F18);
    sub_1DD048E28();
    double v20 = v53;
    LOBYTE(v53) = 7;
    swift_bridgeObjectRetain();
    int v21 = sub_1DD048DD8();
    LOBYTE(v53) = 8;
    uint64_t v22 = sub_1DD048E18();
    LOBYTE(v53) = 0;
    uint64_t v23 = sub_1DD048E18();
    LODWORD(v47) = v21;
    uint64_t v49 = v23;
    LOBYTE(v53) = 1;
    uint64_t v24 = sub_1DD048DC8();
    uint64_t v26 = v25;
    uint64_t v46 = v24;
    LOBYTE(v53) = 2;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1DD048E18();
    uint64_t v45 = v22;
    LOBYTE(v53) = 3;
    uint64_t v27 = sub_1DD048DC8();
    uint64_t v29 = v28;
    uint64_t v43 = v27;
    LOBYTE(v53) = 9;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1DD048DA8();
    int v41 = v30;
    LOBYTE(v53) = 10;
    uint64_t v31 = v7;
    char v32 = v10;
    uint64_t v40 = sub_1DD048D78();
    uint64_t v34 = v33;
    char v35 = v47 & 1;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v31);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v37 = v46;
    *(void *)uint64_t v13 = v49;
    *(void *)(v13 + 8) = v37;
    uint64_t v38 = v44;
    *(void *)(v13 + 16) = v26;
    *(void *)(v13 + 24) = v38;
    *(void *)(v13 + 32) = v43;
    *(void *)(v13 + 40) = v29;
    *(float *)(v13 + 48) = v15;
    *(double *)(v13 + 56) = v20;
    *(unsigned char *)(v13 + 64) = v35;
    uint64_t v39 = v42;
    *(void *)(v13 + 72) = v45;
    *(void *)(v13 + 80) = v39;
    *(unsigned char *)(v13 + 88) = v41 & 1;
    *(void *)(v13 + 96) = v40;
    *(void *)(v13 + 104) = v34;
  }
  return result;
}

unint64_t sub_1DCF3480C()
{
  unint64_t result = qword_1EBE84B90;
  if (!qword_1EBE84B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84B90);
  }
  return result;
}

uint64_t sub_1DCF34860(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCF348C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE84F10);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ObjectDetectionModelInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCF349F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ObjectDetectionModelInfo.CodingKeys()
{
  return &type metadata for ObjectDetectionModelInfo.CodingKeys;
}

unint64_t sub_1DCF34A34()
{
  unint64_t result = qword_1EAB041E0;
  if (!qword_1EAB041E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB041E0);
  }
  return result;
}

unint64_t sub_1DCF34A8C()
{
  unint64_t result = qword_1EBE84BA0;
  if (!qword_1EBE84BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84BA0);
  }
  return result;
}

unint64_t sub_1DCF34AE4()
{
  unint64_t result = qword_1EBE84B98;
  if (!qword_1EBE84B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE84B98);
  }
  return result;
}

ValueMetadata *type metadata accessor for S2Polyline()
{
  return &type metadata for S2Polyline;
}

uint64_t sub_1DCF34B4C(void *a1, void *a2)
{
  v23[4] = *(void *)(v2 + OBJC_IVAR____TtC18VisualIntelligence23OntologyGraphCompatible_ontologyGraph);
  swift_bridgeObjectRetain();
  id v5 = objc_msgSend(a1, sel_knowledgeGraphID);
  uint64_t v6 = sub_1DD048408();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(a1, sel_debugDescription);
  uint64_t v10 = sub_1DD048408();
  uint64_t v12 = v11;

  v23[0] = v10;
  v23[1] = v12;
  uint64_t v23[2] = v6;
  uint64_t v23[3] = v8;
  id v13 = objc_msgSend(a2, sel_knowledgeGraphID);
  uint64_t v14 = sub_1DD048408();
  uint64_t v16 = v15;

  id v17 = objc_msgSend(a2, sel_debugDescription);
  uint64_t v18 = sub_1DD048408();
  uint64_t v20 = v19;

  v22[0] = v18;
  v22[1] = v20;
  v22[2] = v14;
  v22[3] = v16;
  LOBYTE(v17) = sub_1DCDACA6C(v23, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17 & 1;
}

id sub_1DCF34D0C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(*(void *)(v2 + OBJC_IVAR____TtC18VisualIntelligence23OntologyGraphCompatible_ontologyGraph) + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1DCEAD1A4(a1, a2);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  id v6 = objc_allocWithZone((Class)VIOntologyNode);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v6, sel_initWithKnowledgeGraphID_labelDebugDescription_, v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t sub_1DCF34EE0()
{
  return *(void *)(*(void *)(v0 + OBJC_IVAR____TtC18VisualIntelligence23OntologyGraphCompatible_ontologyGraph) + 16);
}

id sub_1DCF34EF4(void *a1, void *a2)
{
  v29[4] = *(void *)(v2 + OBJC_IVAR____TtC18VisualIntelligence23OntologyGraphCompatible_ontologyGraph);
  swift_bridgeObjectRetain();
  id v5 = objc_msgSend(a1, sel_knowledgeGraphID);
  uint64_t v6 = sub_1DD048408();
  uint64_t v8 = v7;

  id v9 = objc_msgSend(a1, sel_debugDescription);
  uint64_t v10 = sub_1DD048408();
  uint64_t v12 = v11;

  v29[0] = v10;
  v29[1] = v12;
  void v29[2] = v6;
  v29[3] = v8;
  id v13 = objc_msgSend(a2, sel_knowledgeGraphID);
  uint64_t v14 = sub_1DD048408();
  uint64_t v16 = v15;

  id v17 = objc_msgSend(a2, sel_debugDescription);
  uint64_t v18 = sub_1DD048408();
  uint64_t v20 = v19;

  v28[0] = v18;
  v28[1] = v20;
  v28[2] = v14;
  v28[3] = v16;
  sub_1DCDAD090((uint64_t)v29, (uint64_t)v28, &v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)&v30 + 1);
  if (!*((void *)&v30 + 1)) {
    return 0;
  }
  uint64_t v22 = v30;
  id v23 = objc_allocWithZone((Class)VIOntologyNode);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  uint64_t v25 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v23, sel_initWithKnowledgeGraphID_labelDebugDescription_, v24, v25);

  sub_1DCD32D90(v22, v21);
  return v26;
}

id OntologyGraphCompatible.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void OntologyGraphCompatible.init()()
{
}

id OntologyGraphCompatible.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OntologyGraphCompatible();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for OntologyGraphCompatible()
{
  return self;
}

uint64_t method lookup function for OntologyGraphCompatible(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OntologyGraphCompatible);
}

uint64_t dispatch thunk of OntologyGraphCompatible.isDescendent(descendent:ancestor:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of OntologyGraphCompatible.ontologyNode(knowledgeGraphID:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of OntologyGraphCompatible.count.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of OntologyGraphCompatible.findLeastCommonAncestor(node1:node2:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t sub_1DCF35348(uint64_t a1)
{
  uint64_t v2 = sub_1DD047628();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = sub_1DD047548();
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1DD047598();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *(_OWORD *)(a1 + 144);
  long long v38 = *(_OWORD *)(a1 + 128);
  long long v39 = v9;
  long long v40 = *(_OWORD *)(a1 + 160);
  uint64_t v41 = *(void *)(a1 + 176);
  long long v10 = *(_OWORD *)(a1 + 80);
  long long v34 = *(_OWORD *)(a1 + 64);
  long long v35 = v10;
  long long v11 = *(_OWORD *)(a1 + 112);
  long long v36 = *(_OWORD *)(a1 + 96);
  long long v37 = v11;
  long long v12 = *(_OWORD *)(a1 + 16);
  v33[0] = *(_OWORD *)a1;
  v33[1] = v12;
  long long v13 = *(_OWORD *)(a1 + 48);
  _OWORD v33[2] = *(_OWORD *)(a1 + 32);
  v33[3] = v13;
  sub_1DD0477C8();
  long long v14 = *(_OWORD *)(a1 + 144);
  v31[8] = *(_OWORD *)(a1 + 128);
  v31[9] = v14;
  v31[10] = *(_OWORD *)(a1 + 160);
  uint64_t v32 = *(void *)(a1 + 176);
  long long v15 = *(_OWORD *)(a1 + 80);
  v31[4] = *(_OWORD *)(a1 + 64);
  v31[5] = v15;
  long long v16 = *(_OWORD *)(a1 + 112);
  v31[6] = *(_OWORD *)(a1 + 96);
  v31[7] = v16;
  long long v17 = *(_OWORD *)(a1 + 16);
  v31[0] = *(_OWORD *)a1;
  v31[1] = v17;
  long long v18 = *(_OWORD *)(a1 + 48);
  v31[2] = *(_OWORD *)(a1 + 32);
  v31[3] = v18;
  uint64_t v19 = sub_1DCFB3E18();
  if (v20)
  {
    sub_1DCF355BC(v19, v20, v21, (uint64_t)v8);
    sub_1DD0475A8();
  }
  uint64_t v22 = swift_bridgeObjectRetain();
  sub_1DCF357C4(v22, (uint64_t)v5);
  sub_1DD047558();
  CGFloat v23 = *((double *)&v34 + 1);
  long long v25 = v35;
  CGFloat v24 = *(double *)&v36;
  sub_1DD047618();
  v42.origin.CGFloat x = VIFlipOriginNormalizedRect(v23, *(CGFloat *)&v25, *((CGFloat *)&v25 + 1), v24);
  CGFloat x = v42.origin.x;
  CGFloat y = v42.origin.y;
  CGFloat width = v42.size.width;
  CGFloat height = v42.size.height;
  CGRectGetMinX(v42);
  sub_1DD0475D8();
  v43.origin.CGFloat x = x;
  v43.origin.CGFloat y = y;
  v43.size.CGFloat width = width;
  v43.size.CGFloat height = height;
  CGRectGetMinY(v43);
  sub_1DD0475E8();
  v44.origin.CGFloat x = x;
  v44.origin.CGFloat y = y;
  v44.size.CGFloat width = width;
  v44.size.CGFloat height = height;
  CGRectGetWidth(v44);
  sub_1DD0475F8();
  v45.origin.CGFloat x = x;
  v45.origin.CGFloat y = y;
  v45.size.CGFloat width = width;
  v45.size.CGFloat height = height;
  CGRectGetHeight(v45);
  sub_1DD047608();
  sub_1DCD43B94((uint64_t)v33);
  return sub_1DD047638();
}

uint64_t sub_1DCF355BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1DD0477B8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  long long v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD047588();
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    v21[1] = a1;
    v21[2] = a4;
    v21[3] = a2;
    swift_bridgeObjectRetain();
    long long v13 = (_DWORD *)(a3 + 48);
    unint64_t v14 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v15 = *((void *)v13 - 2);
      uint64_t v16 = *((void *)v13 - 1);
      float v17 = *(float *)v13;
      swift_bridgeObjectRetain();
      sub_1DCF35B50(v15, v16, v17);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v14 = sub_1DCEA0A40(0, *(void *)(v14 + 16) + 1, 1, v14);
      }
      unint64_t v19 = *(void *)(v14 + 16);
      unint64_t v18 = *(void *)(v14 + 24);
      if (v19 >= v18 >> 1) {
        unint64_t v14 = sub_1DCEA0A40(v18 > 1, v19 + 1, 1, v14);
      }
      v13 += 6;
      *(void *)(v14 + 16) = v19 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v19, v11, v8);
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  sub_1DD047528();
  sub_1DD047578();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCF357C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = sub_1DD047778();
  uint64_t v4 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for VisualUnderstanding.ImageRegion();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (long long *)((char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1DD047548();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD047538();
  uint64_t v15 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  uint64_t v36 = v11;
  v15(a2, v14, v11);
  uint64_t v38 = a2;
  sub_1DD047528();
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v17 = v8;
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v19 = *(void *)(v17 + 72);
    uint64_t v33 = (void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v34 = v19;
    uint64_t v32 = (void (**)(char *, uint64_t))(v12 + 8);
    v31[1] = a1;
    v31[2] = v4 + 32;
    long long v35 = v6;
    do
    {
      uint64_t v20 = v4;
      sub_1DCD36E7C(v18, (uint64_t)v10);
      uint64_t v21 = v36;
      (*v33)(v14, v38, v36);
      sub_1DCF36484(v10, (uint64_t)v6);
      (*v32)(v14, v21);
      uint64_t v22 = (void (*)(char *, void))sub_1DD047518();
      CGFloat v24 = v23;
      unint64_t v25 = *v23;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *CGFloat v24 = v25;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v25 = sub_1DCEA0AA8(0, *(void *)(v25 + 16) + 1, 1, v25);
        *CGFloat v24 = v25;
      }
      unint64_t v28 = *(void *)(v25 + 16);
      unint64_t v27 = *(void *)(v25 + 24);
      if (v28 >= v27 >> 1)
      {
        unint64_t v25 = sub_1DCEA0AA8(v27 > 1, v28 + 1, 1, v25);
        *CGFloat v24 = v25;
      }
      *(void *)(v25 + 16) = v28 + 1;
      uint64_t v4 = v20;
      unint64_t v29 = v25
          + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))
          + *(void *)(v20 + 72) * v28;
      uint64_t v6 = v35;
      (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v29, v35, v37);
      v22(v39, 0);
      sub_1DCD96118((uint64_t)v10);
      v18 += v34;
      --v16;
    }
    while (v16);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCF35B50(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v6 = sub_1DD047788();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1 == 0x6D75626C61 && a2 == 0xE500000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F899D8];
  }
  else if (a1 == 0x6C616D696E61 && a2 == 0xE600000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F899F0];
  }
  else if (a1 == 7631457 && a2 == 0xE300000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F899C0];
  }
  else if (a1 == 1937006947 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F899C8];
  }
  else if (a1 == 1936158564 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F899D0];
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DD067630 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F899B8];
  }
  else if (a1 == 0x6E616D7568 && a2 == 0xE500000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F899E0];
  }
  else if (a1 == 0x6B72616D646E616CLL && a2 == 0xE800000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F89A10];
  }
  else if (a1 == 0x616964656DLL && a2 == 0xE500000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F899E8];
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DD067650 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F899B0];
  }
  else if (a1 == 0x65727574616ELL && a2 == 0xE600000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F899F8];
  }
  else if (a1 == 0x6465767265736572 && a2 == 0xE900000000000033 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F89A28];
  }
  else if (a1 == 0x6465767265736572 && a2 == 0xE900000000000032 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F89A20];
  }
  else if (a1 == 0x6465767265736572 && a2 == 0xE900000000000031 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F89A18];
  }
  else if (a1 == 0x68736E6565726373 && a2 == 0xEA0000000000746FLL || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F899A8];
  }
  else if (a1 == 0x727574706C756373 && a2 == 0xE900000000000065 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F89A48];
  }
  else if (a1 == 0x656E696C796B73 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F89A00];
  }
  else if (a1 == 0x6465767265736572 && a2 == 0xE900000000000034 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F89A30];
  }
  else if (a1 == 0x6465767265736572 && a2 == 0xE900000000000035 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F89A38];
  }
  else
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x1E4F89A40];
    if ((a1 != 0x6465767265736572 || a2 != 0xE900000000000037) && (sub_1DD048FA8() & 1) == 0) {
      uint64_t v10 = (unsigned int *)MEMORY[0x1E4F89A08];
    }
  }
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, *v10, v6);
  uint64_t v11 = sub_1DD0477B8();
  MEMORY[0x1F4188790](v11);
  *(void *)&v13[-32] = a1;
  *(void *)&v13[-24] = a2;
  *(float *)&v13[-16] = a3;
  *(void *)&v13[-8] = v9;
  sub_1DCF383A8(&qword_1EAB041F0, MEMORY[0x1E4F89A58]);
  sub_1DD047E78();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1DCF36334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1DD047788();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD047668();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  return sub_1DD047678();
}

uint64_t sub_1DCF36424()
{
  return sub_1DD047608();
}

uint64_t sub_1DCF36484@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DD0476B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB041F8);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v60 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1DD0475C8();
  uint64_t v63 = *(void (***)(char *, uint64_t))(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v58 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v67 = (char *)&v49 - v12;
  uint64_t v13 = sub_1DD047748();
  uint64_t v61 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v66 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v49 - v16;
  uint64_t v18 = sub_1DD047628();
  MEMORY[0x1F4188790](v18);
  sub_1DD047768();
  long long v19 = a1[1];
  long long v68 = *a1;
  long long v69 = v19;
  sub_1DCF383A8(&qword_1EAB04200, MEMORY[0x1E4F89890]);
  sub_1DD047E78();
  sub_1DD0476F8();
  sub_1DD047758();
  uint64_t v62 = a2;
  sub_1DD0475B8();
  uint64_t v20 = *(void *)(*((void *)a1 + 7) + 16);
  if (v20)
  {
    uint64_t v49 = a1;
    uint64_t v50 = v7;
    uint64_t v51 = v5;
    uint64_t v52 = v4;
    uint64_t v64 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 6);
    int v57 = (void (**)(char *, uint64_t, uint64_t))(v63 + 4);
    uint64_t v56 = (void (**)(char *, char *, uint64_t))(v63 + 2);
    uint64_t v55 = (void (**)(char *, char *, uint64_t))(v61 + 16);
    uint64_t v54 = v61 + 32;
    double v53 = v63 + 1;
    uint64_t v63 = (void (**)(char *, uint64_t))(v61 + 8);
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = 32;
    uint64_t v23 = (uint64_t)v60;
    uint64_t v24 = v59;
    uint64_t v65 = v21;
    do
    {
      v71[0] = *(_OWORD *)(v21 + v22);
      long long v25 = *(_OWORD *)(v21 + v22 + 16);
      long long v26 = *(_OWORD *)(v21 + v22 + 32);
      long long v27 = *(_OWORD *)(v21 + v22 + 48);
      *(_OWORD *)&v72[12] = *(_OWORD *)(v21 + v22 + 60);
      v71[2] = v26;
      *(_OWORD *)uint64_t v72 = v27;
      v71[1] = v25;
      MEMORY[0x1F4188790](v21);
      *(&v49 - 2) = v71;
      sub_1DCD4E7EC((uint64_t)v71);
      sub_1DCF383A8(&qword_1EAB04208, MEMORY[0x1E4F89998]);
      sub_1DD047E78();
      uint64_t v28 = *(void *)&v72[8];
      uint64_t v29 = *(void *)&v72[16];
      swift_bridgeObjectRetain();
      sub_1DCF36CD8(v28, v29, v23);
      swift_bridgeObjectRelease();
      if ((*v64)(v23, 1, v24) == 1)
      {
        (*v63)(v17, v13);
        sub_1DCD4E824((uint64_t)v71);
        sub_1DCF38274(v23);
      }
      else
      {
        long long v30 = v67;
        (*v57)(v67, v23, v24);
        (*v56)(v58, v30, v24);
        sub_1DD047718();
        sub_1DD047728();
        sub_1DCD4E824((uint64_t)v71);
        (*v55)(v66, v17, v13);
        uint64_t v31 = (void (*)(uint64_t *, void))sub_1DD0476D8();
        uint64_t v33 = v32;
        unint64_t v34 = *v32;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v33 = v34;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v34 = sub_1DCEA0A74(0, *(void *)(v34 + 16) + 1, 1, v34);
          *uint64_t v33 = v34;
        }
        unint64_t v37 = *(void *)(v34 + 16);
        unint64_t v36 = *(void *)(v34 + 24);
        uint64_t v38 = v61;
        if (v37 >= v36 >> 1)
        {
          uint64_t v40 = sub_1DCEA0A74(v36 > 1, v37 + 1, 1, v34);
          uint64_t v38 = v61;
          unint64_t v34 = v40;
          *uint64_t v33 = v40;
        }
        *(void *)(v34 + 16) = v37 + 1;
        uint64_t v39 = v38;
        (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v34+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v37, v66, v13);
        v31(v70, 0);
        uint64_t v24 = v59;
        (*v53)(v67, v59);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v13);
        uint64_t v23 = (uint64_t)v60;
      }
      v22 += 80;
      --v20;
      uint64_t v21 = v65;
    }
    while (v20);
    swift_bridgeObjectRelease();
    uint64_t v4 = v52;
    uint64_t v5 = v51;
    uint64_t v7 = v50;
    a1 = v49;
  }
  uint64_t v41 = *((void *)a1 + 8);
  int64_t v42 = *(void *)(v41 + 16);
  if (v42)
  {
    v70[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1DCFC5A60(0, v42, 0);
    uint64_t v43 = v70[0];
    uint64_t v44 = v41 + 40;
    do
    {
      unint64_t v45 = *(void *)(v44 - 8);
      swift_bridgeObjectRetain();
      sub_1DCF3743C(v45, (uint64_t)v7);
      v70[0] = v43;
      unint64_t v47 = *(void *)(v43 + 16);
      unint64_t v46 = *(void *)(v43 + 24);
      if (v47 >= v46 >> 1)
      {
        sub_1DCFC5A60(v46 > 1, v47 + 1, 1);
        uint64_t v43 = v70[0];
      }
      *(void *)(v43 + 16) = v47 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v43+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v47, v7, v4);
      v44 += 16;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
  }
  return sub_1DD047528();
}

uint64_t sub_1DCF36CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v5 = sub_1DD048068();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v36 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85580);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE853E0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD047AC8();
  uint64_t v40 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE868F8);
  sub_1DCF382F4();
  sub_1DD047B48();
  v42[0] = a1;
  v42[1] = a2;
  unint64_t v35 = a2;
  sub_1DCD505FC();
  uint64_t v15 = sub_1DD048388();
  uint64_t v39 = v14;
  uint64_t v16 = sub_1DCD4402C((void (*)(uint64_t *__return_ptr, uint64_t))sub_1DCF38350, (uint64_t)v38, v15);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (*(void *)(v16 + 16))
  {
    uint64_t v17 = sub_1DD0475C8();
    MEMORY[0x1F4188790](v17);
    *(&v32 - 2) = v16;
    sub_1DCF383A8(&qword_1EAB04218, MEMORY[0x1E4F89880]);
    uint64_t v18 = v37;
    sub_1DD047E78();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v18, 0, 1, v17);
  }
  else
  {
    uint64_t v20 = a1;
    swift_bridgeObjectRelease();
    sub_1DCDB40EC(v36);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = sub_1DD048048();
    os_log_type_t v22 = sub_1DD048848();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v24 = v37;
    uint64_t v26 = v33;
    uint64_t v25 = v34;
    if (v23)
    {
      long long v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v42[0] = v28;
      *(_DWORD *)long long v27 = 136315138;
      unint64_t v29 = v35;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_1DCED7FA0(v20, v29, v42);
      sub_1DD048A28();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1DCCF9000, v21, v22, "Failed to parse OntologyNode %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v28, -1, -1);
      long long v30 = v27;
      uint64_t v24 = v37;
      MEMORY[0x1E01B07E0](v30, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v36, v25);
    uint64_t v31 = sub_1DD0475C8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v24, 1, 1, v31);
  }
}

uint64_t sub_1DCF37204(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1DD047628();
  MEMORY[0x1F4188790](v3);
  if ((*a2 & 0x8000000000000000) != 0 || HIDWORD(*a2))
  {
    uint64_t result = sub_1DD048C98();
    __break(1u);
  }
  else
  {
    uint64_t v4 = sub_1DD047738();
    MEMORY[0x1F4188790](v4);
    sub_1DCF383A8(&qword_1EAB04200, MEMORY[0x1E4F89890]);
    sub_1DD047E78();
    return sub_1DD047708();
  }
  return result;
}

uint64_t sub_1DCF373E0()
{
  return sub_1DD047608();
}

uint64_t sub_1DCF3743C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1DD047688();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD0476B8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DD0476A8();
  uint64_t v11 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v30 = a2;
  v11(a2, v10, v7);
  if ((a1 & 0x8000000000000000) != 0 || HIDWORD(a1))
  {
    sub_1DD048C98();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    sub_1DD047648();
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = sub_1DCF4D350(v12);
    swift_bridgeObjectRelease();
    v31[0] = v13;
    sub_1DCD4E654(v31);
    swift_bridgeObjectRelease();
    v28[0] = v31[0];
    uint64_t v14 = v31[0][2];
    if (v14)
    {
      v28[2] = v29 + 32;
      uint64_t v15 = sub_1DCF383A8(&qword_1EAB04210, MEMORY[0x1E4F898A8]);
      v28[1] = v15;
      uint64_t v16 = v28[0] + 48;
      do
      {
        MEMORY[0x1F4188790](v15);
        swift_bridgeObjectRetain();
        uint64_t v17 = v6;
        uint64_t v18 = v4;
        sub_1DD047E78();
        swift_bridgeObjectRelease();
        long long v19 = (uint64_t (*)(void **, void))sub_1DD047658();
        uint64_t v21 = v20;
        unint64_t v22 = *v20;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v21 = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v22 = sub_1DCEA0ADC(0, *(void *)(v22 + 16) + 1, 1, v22);
          *uint64_t v21 = v22;
        }
        unint64_t v25 = *(void *)(v22 + 16);
        unint64_t v24 = *(void *)(v22 + 24);
        if (v25 >= v24 >> 1)
        {
          unint64_t v22 = sub_1DCEA0ADC(v24 > 1, v25 + 1, 1, v22);
          *uint64_t v21 = v22;
        }
        v16 += 24;
        *(void *)(v22 + 16) = v25 + 1;
        unint64_t v26 = v22
            + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))
            + *(void *)(v29 + 72) * v25;
        uint64_t v6 = v17;
        uint64_t v4 = v18;
        (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v26, v17, v18);
        uint64_t v15 = v19(v31, 0);
        --v14;
      }
      while (v14);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1DCF37858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DD047698();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1DD047668();
  sub_1DCF3790C(a2, a3, v7);
  return sub_1DD047678();
}

uint64_t sub_1DCF3790C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  BOOL v4 = a1 == 0x4E574F4E4B4E55 && a2 == 0xE700000000000000;
  if (v4 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F898F8];
  }
  else if (a1 == 5526081 && a2 == 0xE300000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89948];
  }
  else if (a1 == 0x45525554414ELL && a2 == 0xE600000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F898C8];
  }
  else if (a1 == 0x4B52414D444E414CLL && a2 == 0xE800000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89900];
  }
  else if (a1 == 0x414944454DLL && a2 == 0xE500000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F898B8];
  }
  else if (a1 == 1398031696 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89978];
  }
  else if (a1 == 0x4445565245534552 && a2 == 0xE900000000000031 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89908];
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001DD068210 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89938];
  }
  else if (a1 == 0x534C414D494E41 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F898D0];
  }
  else if (a1 == 0x525554504C554353 && a2 == 0xE900000000000045 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89910];
  }
  else if (a1 == 0x454E494C594B53 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F898F0];
  }
  else if (a1 == 1398030659 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89960];
  }
  else if (a1 == 1397182276 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89968];
  }
  else if (a1 == 1263488834 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89958];
  }
  else if (a1 == 0x4D55424C41 && a2 == 0xE500000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F898B0];
  }
  else if (a1 == 1146243394 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89950];
  }
  else if (a1 == 0x53544345534E49 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F898E0];
  }
  else if (a1 == 0x4C414D4D414DLL && a2 == 0xE600000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F898C0];
  }
  else if (a1 == 0x454C4954504552 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F898E8];
  }
  else if (a1 == 0x4C455241505041 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F898D8];
  }
  else if (a1 == 1146048326 && a2 == 0xE400000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89970];
  }
  else if (a1 == 0x4F524645524F5453 && a2 == 0xEA0000000000544ELL || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89920];
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001DD068230 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89940];
  }
  else if (a1 == 0x4D59535F4F545541 && a2 == 0xEB000000004C4F42 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89918];
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001DD068250 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89930];
  }
  else if (a1 == 0x524F535345434341 && a2 == 0xEB00000000534549 || (sub_1DD048FA8() & 1) != 0)
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89928];
  }
  else
  {
    *a3 = 100;
    uint64_t v7 = (unsigned int *)MEMORY[0x1E4F89980];
  }
  uint64_t v8 = *v7;
  uint64_t v9 = sub_1DD047698();
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);
  return v10(a3, v8, v9);
}

uint64_t sub_1DCF38214(uint64_t a1)
{
  return sub_1DCF36334(a1, v1[2], v1[3], v1[5]);
}

uint64_t sub_1DCF38238()
{
  return sub_1DCF36424();
}

uint64_t sub_1DCF38258(uint64_t a1)
{
  return sub_1DCF37204(a1, *(void **)(v1 + 16));
}

uint64_t sub_1DCF38274(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB041F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1DCF382D4(uint64_t a1)
{
  return sub_1DCF37858(a1, *(void *)(v1 + 24), *(void *)(v1 + 32));
}

unint64_t sub_1DCF382F4()
{
  unint64_t result = qword_1EBE85578;
  if (!qword_1EBE85578)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE85580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE85578);
  }
  return result;
}

uint64_t sub_1DCF38350()
{
  return sub_1DCD4548C();
}

uint64_t sub_1DCF38370()
{
  return sub_1DD0475B8();
}

uint64_t sub_1DCF383A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCF383F0()
{
  return sub_1DCF373E0();
}

uint64_t Data.inflate()(uint64_t a1, unint64_t a2)
{
  return sub_1DCF38518(a1, a2, (SEL *)&selRef_decompressedDataUsingAlgorithm_error_, "CompressionUtils.inflate() failed %@");
}

unint64_t sub_1DCF38468()
{
  unint64_t result = qword_1EAB04220;
  if (!qword_1EAB04220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04220);
  }
  return result;
}

uint64_t Data.deflate()(uint64_t a1, unint64_t a2)
{
  return sub_1DCF38518(a1, a2, (SEL *)&selRef_compressedDataUsingAlgorithm_error_, "CompressionUtils.deflate() failed %@");
}

uint64_t sub_1DCF38518(uint64_t a1, unint64_t a2, SEL *a3, const char *a4)
{
  v32[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_1DD048068();
  uint64_t v31 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_allocWithZone(MEMORY[0x1E4F1C9B8]);
  sub_1DCD33F64(a1, a2);
  uint64_t v12 = (void *)sub_1DD0464D8();
  id v13 = objc_msgSend(v11, sel_initWithData_, v12);
  sub_1DCD21954(a1, a2);

  v32[0] = 0;
  id v14 = objc_msgSend(v13, *a3, 3, v32);

  if (v14)
  {
    id v15 = v32[0];
    uint64_t v16 = MEMORY[0x1E01AC160](v14);
  }
  else
  {
    uint64_t v29 = a4;
    uint64_t v30 = v8;
    id v17 = v32[0];
    uint64_t v18 = (void *)sub_1DD046378();

    swift_willThrow();
    sub_1DCDB40EC((uint64_t)v10);
    id v19 = v18;
    id v20 = v18;
    uint64_t v21 = sub_1DD048048();
    os_log_type_t v22 = sub_1DD048858();
    if (os_log_type_enabled(v21, v22))
    {
      BOOL v23 = (uint8_t *)swift_slowAlloc();
      unint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)BOOL v23 = 138412290;
      id v25 = v18;
      unint64_t v26 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v32[0] = v26;
      sub_1DD048A28();
      *unint64_t v24 = v26;

      _os_log_impl(&dword_1DCCF9000, v21, v22, v29, v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EAB03DA0);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v24, -1, -1);
      MEMORY[0x1E01B07E0](v23, -1, -1);
    }
    else
    {
    }
    uint64_t v16 = v30;

    (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v16);
    sub_1DCF38468();
    swift_allocError();
    swift_willThrow();
  }
  return v16;
}

unsigned char *storeEnumTagSinglePayload for CompressionUtilsError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCF388F8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CompressionUtilsError()
{
  return &type metadata for CompressionUtilsError;
}

unint64_t sub_1DCF38934()
{
  unint64_t result = qword_1EAB04228;
  if (!qword_1EAB04228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04228);
  }
  return result;
}

uint64_t *sub_1DCF38988(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1DD047BF8();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (_DWORD *)((char *)a1 + v9);
    id v11 = (_DWORD *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      void v10[2] = v11[2];
      v8((uint64_t *)((char *)v10 + *(int *)(v12 + 28)), (uint64_t *)((char *)v11 + *(int *)(v12 + 28)), v7);
      (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86CD8);
}

uint64_t sub_1DCF38B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v9(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = v5 + *(int *)(v6 + 28);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v4);
  }
  return result;
}

char *sub_1DCF38C5C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
    v7(&v9[*(int *)(v11 + 28)], &v10[*(int *)(v11 + 28)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_1DCF38DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v19 = a1;
  uint64_t v9 = (_DWORD *)(a1 + v8);
  uint64_t v10 = (_DWORD *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      v9[2] = v10[2];
      v7((uint64_t)v9 + *(int *)(v11 + 28), (uint64_t)v10 + *(int *)(v11 + 28), v6);
      return v19;
    }
    sub_1DCF20068((uint64_t)v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return v19;
  }
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))((char *)v9 + *(int *)(v11 + 28), (char *)v10 + *(int *)(v11 + 28), v6);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return v19;
}

char *sub_1DCF38FE0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    *((_DWORD *)v9 + 2) = *((_DWORD *)v10 + 2);
    v7(&v9[*(int *)(v11 + 28)], &v10[*(int *)(v11 + 28)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_1DCF39148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v19 = a1;
  uint64_t v9 = (_DWORD *)(a1 + v8);
  uint64_t v10 = (_DWORD *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      *(void *)uint64_t v9 = *(void *)v10;
      v9[2] = v10[2];
      v7((uint64_t)v9 + *(int *)(v11 + 28), (uint64_t)v10 + *(int *)(v11 + 28), v6);
      return v19;
    }
    sub_1DCF20068((uint64_t)v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return v19;
  }
  *(void *)uint64_t v9 = *(void *)v10;
  v9[2] = v10[2];
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))((char *)v9 + *(int *)(v11 + 28), (char *)v10 + *(int *)(v11 + 28), v6);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return v19;
}

uint64_t sub_1DCF39354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF39368);
}

uint64_t sub_1DCF39368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1DCF39464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF39478);
}

uint64_t sub_1DCF39478(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1DD047BF8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86CF0);
}

void sub_1DCF395A0()
{
  sub_1DD047BF8();
  if (v0 <= 0x3F)
  {
    sub_1DCF39668();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1DCF39668()
{
  if (!qword_1EBE86CE8)
  {
    type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(255);
    unint64_t v0 = sub_1DD048A08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBE86CE8);
    }
  }
}

_DWORD *sub_1DCF396C0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF3974C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1DD047BF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1DCF397D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF397E4);
}

uint64_t sub_1DCF397E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 28);
  uint64_t v5 = sub_1DD047BF8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1DCF39854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF39868);
}

uint64_t sub_1DCF39868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 28);
  uint64_t v6 = sub_1DD047BF8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_1DCF398DC()
{
  uint64_t result = sub_1DD047BF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCF3997C()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C6F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C6F8);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  unint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1DD04E910;
  unint64_t v4 = v3 + v2 + v1[14];
  *(void *)(v3 + v2) = 1;
  *(void *)unint64_t v4 = "image_size_config";
  *(void *)(v4 + 8) = 17;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = *MEMORY[0x1E4F70FD0];
  uint64_t v6 = sub_1DD047FD8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v4, v5, v6);
  return sub_1DD047FE8();
}

uint64_t sub_1DCF39AD8()
{
  while (1)
  {
    uint64_t result = sub_1DD047CB8();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_1DCF39B4C();
    }
  }
  return result;
}

uint64_t sub_1DCF39B4C()
{
  return sub_1DD047DF8();
}

uint64_t sub_1DCF39BFC()
{
  uint64_t result = sub_1DCF39C54(v0);
  if (!v1) {
    return sub_1DD047BD8();
  }
  return result;
}

uint64_t sub_1DCF39C54(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig(0);
  sub_1DCD57854(a1 + *(int *)(v9 + 20), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_1DCD2479C((uint64_t)v4, &qword_1EBE84CA8);
  }
  sub_1DCF200C4((uint64_t)v4, (uint64_t)v8);
  sub_1DCF3A744(&qword_1EBE84C98, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig);
  sub_1DD047FC8();
  return sub_1DCF20068((uint64_t)v8);
}

uint64_t sub_1DCF39E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1DD047BE8();
  uint64_t v4 = a2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(v4, 1, 1, v5);
}

unint64_t sub_1DCF39EA4()
{
  return 0xD000000000000028;
}

uint64_t sub_1DCF39EC0()
{
  return sub_1DCF39AD8();
}

uint64_t sub_1DCF39ED8()
{
  return sub_1DCF39BFC();
}

uint64_t sub_1DCF39EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF3A744(&qword_1EAB04250, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF39F6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE84CB0, (uint64_t)qword_1EBE9C6F8, a1);
}

uint64_t sub_1DCF39F90(uint64_t a1)
{
  uint64_t v2 = sub_1DCF3A744((unint64_t *)&qword_1EBE84CB8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF39FFC()
{
  sub_1DCF3A744((unint64_t *)&qword_1EBE84CB8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
  return sub_1DD047E68();
}

uint64_t sub_1DCF3A07C()
{
  uint64_t result = sub_1DD048548();
  qword_1EAB1D270 = 0xD000000000000028;
  *(void *)algn_1EAB1D278 = 0x80000001DD06E8E0;
  return result;
}

uint64_t sub_1DCF3A0F0()
{
  uint64_t v0 = sub_1DD048008();
  __swift_allocate_value_buffer(v0, qword_1EBE9C6E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBE9C6E0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85200);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85020) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1DD04E760;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "min_image_size";
  *(void *)(v6 + 8) = 14;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FD0];
  uint64_t v8 = sub_1DD047FD8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "min_aspect_ratio";
  *((void *)v10 + 1) = 16;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "max_aspect_ratio";
  *(void *)(v11 + 8) = 16;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1DD047FE8();
}

uint64_t sub_1DCF3A2F0()
{
  uint64_t result = sub_1DD047CB8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 2 || result == 1) {
        sub_1DD047D38();
      }
      uint64_t result = sub_1DD047CB8();
    }
  }
  return result;
}

uint64_t sub_1DCF3A398()
{
  if (*v0 == 0.0 || (uint64_t result = sub_1DD047F38(), !v1))
  {
    if (v0[1] == 0.0 || (uint64_t result = sub_1DD047F38(), !v1))
    {
      if (v0[2] == 0.0 || (uint64_t result = sub_1DD047F38(), !v1))
      {
        type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
        return sub_1DD047BD8();
      }
    }
  }
  return result;
}

uint64_t sub_1DCF3A490()
{
  if (qword_1EAB01FE8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EAB1D270;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1DCF3A4F8()
{
  return sub_1DCF3A2F0();
}

uint64_t sub_1DCF3A510()
{
  return sub_1DCF3A398();
}

uint64_t sub_1DCF3A528(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DCF3A744(&qword_1EAB04260, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1DCF3A5A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1DCD919B0(&qword_1EBE84C90, (uint64_t)qword_1EBE9C6E0, a1);
}

uint64_t sub_1DCF3A5C8(uint64_t a1)
{
  uint64_t v2 = sub_1DCF3A744(&qword_1EBE84C98, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1DCF3A634()
{
  sub_1DCF3A744(&qword_1EBE84C98, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig);
  return sub_1DD047E68();
}

uint64_t sub_1DCF3A6B4()
{
  return sub_1DCF3A744(&qword_1EAB04230, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig);
}

uint64_t sub_1DCF3A6FC()
{
  return sub_1DCF3A744(&qword_1EBE84C98, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig);
}

uint64_t sub_1DCF3A744(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCF3A78C()
{
  return sub_1DCF3A744(&qword_1EAB04238, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig);
}

uint64_t sub_1DCF3A7D4()
{
  return sub_1DCF3A744(&qword_1EBE84CA0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig);
}

uint64_t sub_1DCF3A81C()
{
  return sub_1DCF3A744(&qword_1EAB04240, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
}

uint64_t sub_1DCF3A864()
{
  return sub_1DCF3A744((unint64_t *)&qword_1EBE84CB8, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
}

uint64_t sub_1DCF3A8AC()
{
  return sub_1DCF3A744(&qword_1EAB04248, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
}

uint64_t sub_1DCF3A8F4()
{
  return sub_1DCF3A744(&qword_1EBE84CC0, (void (*)(uint64_t))type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig);
}

uint64_t sub_1DCF3A93C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v43 = (char *)&v39 - v7;
  uint64_t v8 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v40 = (float *)((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04258);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84CA8);
  MEMORY[0x1F4188790](v15 - 8);
  id v17 = (float *)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v18);
  id v20 = (char *)&v39 - v19;
  MEMORY[0x1F4188790](v21);
  BOOL v23 = (char *)&v39 - v22;
  uint64_t v24 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig(0);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v41 = a1;
  sub_1DCD57854(a1 + v25, (uint64_t)v23);
  uint64_t v26 = *(int *)(v24 + 20);
  uint64_t v42 = a2;
  sub_1DCD57854(a2 + v26, (uint64_t)v20);
  uint64_t v27 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1DCD57854((uint64_t)v23, (uint64_t)v14);
  sub_1DCD57854((uint64_t)v20, v27);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v28((uint64_t)v14, 1, v8) != 1)
  {
    sub_1DCD57854((uint64_t)v14, (uint64_t)v17);
    if (v28(v27, 1, v8) != 1)
    {
      uint64_t v29 = v40;
      sub_1DCF200C4(v27, (uint64_t)v40);
      char v30 = sub_1DCF3ADD4(v17, v29);
      sub_1DCF20068((uint64_t)v29);
      sub_1DCD2479C((uint64_t)v20, &qword_1EBE84CA8);
      sub_1DCD2479C((uint64_t)v23, &qword_1EBE84CA8);
      sub_1DCF20068((uint64_t)v17);
      sub_1DCD2479C((uint64_t)v14, &qword_1EBE84CA8);
      if (v30) {
        goto LABEL_8;
      }
LABEL_9:
      char v36 = 0;
      return v36 & 1;
    }
    sub_1DCD2479C((uint64_t)v20, &qword_1EBE84CA8);
    sub_1DCD2479C((uint64_t)v23, &qword_1EBE84CA8);
    sub_1DCF20068((uint64_t)v17);
LABEL_6:
    sub_1DCD2479C((uint64_t)v14, &qword_1EAB04258);
    goto LABEL_9;
  }
  sub_1DCD2479C((uint64_t)v20, &qword_1EBE84CA8);
  sub_1DCD2479C((uint64_t)v23, &qword_1EBE84CA8);
  if (v28(v27, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_1DCD2479C((uint64_t)v14, &qword_1EBE84CA8);
LABEL_8:
  uint64_t v32 = v45;
  uint64_t v31 = v46;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
  uint64_t v34 = v43;
  v33(v43, v41, v46);
  unint64_t v35 = v44;
  v33(v44, v42, v31);
  sub_1DCF3A744(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
  char v36 = sub_1DD0483B8();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v32 + 8);
  v37(v35, v31);
  v37(v34, v31);
  return v36 & 1;
}

uint64_t sub_1DCF3ADD4(float *a1, float *a2)
{
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2])
  {
    uint64_t v11 = type metadata accessor for Argos_Protos_Queryflow_EligibilityConfig.ImageSizeConfig(0);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, (char *)a1 + *(int *)(v11 + 28), v4);
    v12(v7, (char *)a2 + *(int *)(v11 + 28), v4);
    sub_1DCF3A744(&qword_1EAB02410, MEMORY[0x1E4F70E60]);
    char v13 = sub_1DD0483B8();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v7, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1DCF3AFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
  a3[3] = (uint64_t *)&type metadata for ImageHandler;
  a3[4] = (uint64_t *)&off_1F3838A58;
  uint64_t v7 = (uint64_t *)swift_allocObject();
  *a3 = v7;
  v7[5] = a1;
  void v7[6] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7 + 2);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
}

void sub_1DCF3B050(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_1DCF3B068(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = *(unsigned int (**)(void))(a2 + 8);
  if (v8() == 1)
  {
    *(void *)(a3 + 24) = a1;
    *(void *)(a3 + 32) = a2;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  }
  else
  {
    uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    if (!v4)
    {
      id v11 = v10;
      int v12 = ((uint64_t (*)(uint64_t, uint64_t))v8)(a1, a2);
      char v13 = sub_1DCDC9FC8(v12);

      *(void *)(a3 + 24) = &type metadata for PixelImage;
      *(void *)(a3 + 32) = &off_1F3838208;
      *(void *)a3 = v13;
      *(_DWORD *)(a3 + 8) = 1;
    }
  }
}

void sub_1DCF3B190(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = *(void **)v3;
  int v9 = *(_DWORD *)(v3 + 8);
  if (v9 == 1)
  {
    *(void *)(a3 + 24) = a1;
    *(void *)(a3 + 32) = a2;
    *(void *)a3 = v8;
    *(_DWORD *)(a3 + 8) = 1;
    id v10 = v8;
  }
  else
  {
    id v11 = v8;
    int v12 = sub_1DCDC9FC8(v9);

    if (!v4)
    {
      *(void *)(a3 + 24) = a1;
      *(void *)(a3 + 32) = a2;
      *(void *)a3 = v12;
      *(_DWORD *)(a3 + 8) = 1;
    }
  }
}

uint64_t sub_1DCF3B234()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1DCF3B26C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for MLModelInfo(0);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v35 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v11 = (os_unfair_lock_s *)(*(void *)((char *)v2
                                       + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_lock)
                           + 16);
  os_unfair_lock_lock(v11);
  uint64_t v12 = OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_metalDevice;
  uint64_t v13 = *(void *)((char *)v2 + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_metalDevice);
  if (a1)
  {
    if (v13) {
      BOOL v14 = a1 == v13;
    }
    else {
      BOOL v14 = 0;
    }
    if (!v14) {
      goto LABEL_9;
    }
LABEL_7:
    os_unfair_lock_unlock(v11);
    return 0;
  }
  if (!v13) {
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v32 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = v4;
  os_unfair_lock_t v34 = v11;
  sub_1DCDB40EC((uint64_t)v10);
  uint64_t v16 = sub_1DD048048();
  os_log_type_t v17 = sub_1DD048848();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl(&dword_1DCCF9000, v16, v17, "Updating model creation due to MetalDevice switch", v18, 2u);
    MEMORY[0x1E01B07E0](v18, -1, -1);
  }

  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  *(void *)((char *)v2 + v12) = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  int v31 = *((unsigned __int8 *)v2 + 16);
  uint64_t v19 = *(void *)((char *)v2 + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_modelValidator);
  uint64_t v20 = *(void *)((char *)v2 + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_modelValidator + 8);
  uint64_t v21 = *(void **)((char *)v2 + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_engineModel);
  uint64_t v22 = v32;
  sub_1DCD56CC8((uint64_t)v2 + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_modelInfo, (uint64_t)v32);
  unint64_t v23 = (*(unsigned __int8 *)(v35 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v24 = (v6 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  *(unsigned char *)(v26 + 16) = v31;
  sub_1DCF3D334((uint64_t)v22, v26 + v23, type metadata accessor for MLModelInfo);
  uint64_t v27 = (uint64_t *)(v26 + v24);
  *uint64_t v27 = v19;
  v27[1] = v20;
  *(void *)(v26 + v25) = a1;
  *(void *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8)) = v33;
  uint64_t v28 = (os_unfair_lock_s *)(v21[14] + 16);
  swift_unknownObjectRetain();
  sub_1DCDD46F8(v19);
  os_unfair_lock_lock(v28);
  uint64_t v29 = v21[9];
  v21[9] = sub_1DCF3D074;
  v21[10] = v26;
  sub_1DCD33E90(v29);
  uint64_t v37 = 0;
  memset(v36, 0, sizeof(v36));
  char v38 = -1;
  swift_beginAccess();
  swift_retain();
  sub_1DCF3D12C((uint64_t)v36, (uint64_t)(v21 + 3));
  swift_endAccess();
  os_unfair_lock_unlock(v28);
  swift_release();
  os_unfair_lock_unlock(v34);
  return 1;
}

void sub_1DCF3B61C(int a1@<W0>, uint64_t a2@<X1>, uint64_t (*a3)(char *)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  os_log_type_t v17 = a3;
  uint64_t v18 = a4;
  int v19 = a1;
  uint64_t v20 = a6;
  uint64_t v8 = sub_1DD048068();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCDB40EC((uint64_t)v11);
  uint64_t v12 = sub_1DD048048();
  os_log_type_t v13 = sub_1DD048848();
  if (os_log_type_enabled(v12, v13))
  {
    BOOL v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = a2;
    uint64_t v15 = v14;
    *(_WORD *)BOOL v14 = 0;
    _os_log_impl(&dword_1DCCF9000, v12, v13, "Creating model", v14, 2u);
    a2 = v16;
    MEMORY[0x1E01B07E0](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((_BYTE)v19)
  {
    if (v19 == 1) {
      sub_1DCF3C558(a2, a5, v20);
    }
    else {
      sub_1DCF3C884(a2, a5, v20);
    }
  }
  else
  {
    sub_1DCF3B9F0(a2, v17, v18, a5, v20);
  }
}

void sub_1DCF3B808(int a1@<W0>, uint64_t a2@<X1>, uint64_t (*a3)(char *)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  os_log_type_t v17 = a3;
  uint64_t v18 = a4;
  int v19 = a1;
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCDB40EC((uint64_t)v10);
  id v11 = sub_1DD048048();
  os_log_type_t v12 = sub_1DD048848();
  if (os_log_type_enabled(v11, v12))
  {
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = a5;
    BOOL v14 = v13;
    *(_WORD *)os_log_type_t v13 = 0;
    _os_log_impl(&dword_1DCCF9000, v11, v12, "Creating model", v13, 2u);
    a5 = v16;
    MEMORY[0x1E01B07E0](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((_BYTE)v19)
  {
    if (v19 == 1) {
      sub_1DCF3C558(a2, 0, a5);
    }
    else {
      sub_1DCF3C884(a2, 0, a5);
    }
  }
  else
  {
    sub_1DCF3B9F0(a2, v17, v18, 0, a5);
  }
}

void sub_1DCF3B9F0(uint64_t a1@<X0>, uint64_t (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, NSObject *a5@<X8>)
{
  uint64_t v104 = a3;
  uint64_t v105 = a2;
  os_log_t v102 = a5;
  uint64_t v113 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v99 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v98 = (uint64_t)&v89 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v96 = (uint64_t)&v89 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v97 = (uint64_t)&v89 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v95 = (uint64_t)&v89 - v17;
  uint64_t v107 = sub_1DD048068();
  uint64_t v103 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v106 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  os_log_t v100 = (os_log_t)((char *)&v89 - v20);
  MEMORY[0x1F4188790](v21);
  uint64_t v101 = (uint64_t)&v89 - v22;
  uint64_t v23 = sub_1DD046478();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD259B0(*(unsigned __int8 *)(a1 + *(int *)(v8 + 32)), v110);
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  uint64_t v108 = sub_1DCEA469C((uint64_t)v110, 0);
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E990]), sel_init);
  objc_msgSend(v27, sel_setPreferredMetalDevice_, a4);
  sub_1DCF3D194();
  uint64_t v28 = v8;
  uint64_t v29 = *(int *)(v8 + 20);
  uint64_t v30 = a1;
  uint64_t v31 = a1 + v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v26, v31, v23);
  uint64_t v32 = (char *)v27;
  id v33 = sub_1DCF3D1D4((uint64_t)v26, (uint64_t)v32);
  if (v5)
  {
    swift_release();
    os_unfair_lock_t v34 = v32;
    uint64_t v35 = v32;
LABEL_3:

    return;
  }
  char v36 = v33;
  uint64_t v91 = v31;
  uint64_t v37 = v30;
  uint64_t v38 = (uint64_t)v106;
  uint64_t v94 = v28;
  uint64_t v93 = v23;
  uint64_t v39 = v107;

  uint64_t v40 = self;
  uint64_t v111 = 0;
  os_unfair_lock_t v34 = v36;
  uint64_t v41 = (char *)objc_msgSend(v40, sel_modelForMLModel_error_, v34, &v111);
  if (!v41)
  {
    unint64_t v60 = v111;
    sub_1DD046378();

    swift_willThrow();
    swift_release();

    uint64_t v35 = v34;
    goto LABEL_3;
  }
  uint64_t v35 = v41;
  os_log_type_t v92 = v32;
  uint64_t v42 = v111;

  sub_1DCEA3DA4();
  uint64_t v43 = v105;
  if (v105)
  {
    uint64_t v90 = 0;
    swift_retain();
    uint64_t v44 = v37;
    if ((v43(v34) & 1) == 0)
    {
      os_log_t v76 = v100;
      sub_1DCDB40EC((uint64_t)v100);
      uint64_t v77 = v96;
      sub_1DCD56CC8(v44, v96);
      uint64_t v78 = sub_1DD048048();
      os_log_type_t v79 = sub_1DD048858();
      if (os_log_type_enabled(v78, v79))
      {
        os_log_t v102 = v78;
        uint64_t v80 = (uint8_t *)swift_slowAlloc();
        uint64_t v81 = (void *)swift_slowAlloc();
        uint64_t v111 = (uint64_t (*)(char *))v81;
        uint64_t v106 = v34;
        *(_DWORD *)uint64_t v80 = 136315138;
        uint64_t v89 = v35;
        sub_1DCD28968();
        uint64_t v82 = sub_1DD048F78();
        uint64_t v109 = sub_1DCED7FA0(v82, v83, (uint64_t *)&v111);
        uint64_t v35 = v89;
        os_unfair_lock_t v34 = v106;
        sub_1DD048A28();
        swift_bridgeObjectRelease();
        sub_1DCD59AB4(v77);
        os_log_t v84 = v102;
        _os_log_impl(&dword_1DCCF9000, v102, v79, "MLModel validation failed for %s", v80, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1E01B07E0]((uint64_t (*)(char *))v81, -1, -1);
        MEMORY[0x1E01B07E0](v80, -1, -1);

        (*(void (**)(os_log_t, uint64_t))(v103 + 8))(v100, v107);
      }
      else
      {
        sub_1DCD59AB4(v77);

        (*(void (**)(os_log_t, uint64_t))(v103 + 8))(v76, v39);
      }
      uint64_t v111 = 0;
      unint64_t v112 = 0xE000000000000000;
      sub_1DD048B98();
      swift_bridgeObjectRelease();
      uint64_t v111 = (uint64_t (*)(char *))0xD00000000000001ELL;
      unint64_t v112 = 0x80000001DD06EA10;
      sub_1DCD28968();
      sub_1DD048F78();
      sub_1DD048548();
      swift_bridgeObjectRelease();
      uint64_t v86 = v111;
      unint64_t v87 = v112;
      sub_1DCD3A548();
      swift_allocError();
      *(void *)uint64_t v88 = v86;
      *(void *)(v88 + 8) = v87;
      *(unsigned char *)(v88 + 16) = 2;
      swift_willThrow();
      sub_1DCD33E90((uint64_t)v105);
      swift_release();

      goto LABEL_3;
    }
    uint64_t v45 = v101;
    sub_1DCDB40EC(v101);
    uint64_t v46 = v95;
    sub_1DCD56CC8(v37, v95);
    uint64_t v47 = v97;
    sub_1DCD56CC8(v37, v97);
    uint64_t v48 = sub_1DD048048();
    os_log_type_t v49 = sub_1DD048848();
    LODWORD(v106) = v49;
    BOOL v50 = os_log_type_enabled(v48, v49);
    uint64_t v51 = v94;
    if (v50)
    {
      uint64_t v52 = swift_slowAlloc();
      double v53 = (void *)swift_slowAlloc();
      uint64_t v111 = (uint64_t (*)(char *))v53;
      *(_DWORD *)uint64_t v52 = 136315394;
      os_log_t v100 = v48;
      uint64_t v54 = (uint64_t *)(v46 + *(int *)(v51 + 24));
      uint64_t v55 = *v54;
      unint64_t v56 = v54[1];
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_1DCED7FA0(v55, v56, (uint64_t *)&v111);
      uint64_t v89 = v35;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD59AB4(v46);
      *(_WORD *)(v52 + 12) = 2080;
      sub_1DCD28968();
      uint64_t v57 = sub_1DD048F78();
      uint64_t v109 = sub_1DCED7FA0(v57, v58, (uint64_t *)&v111);
      uint64_t v35 = v89;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD59AB4(v47);
      os_log_t v59 = v100;
      _os_log_impl(&dword_1DCCF9000, v100, (os_log_type_t)v106, "Loaded CoreML Model with model urn %s from %s", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0]((uint64_t (*)(char *))v53, -1, -1);
      MEMORY[0x1E01B07E0](v52, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v107);
    }
    else
    {
      sub_1DCD59AB4(v46);
      sub_1DCD59AB4(v47);

      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v45, v107);
    }
    os_log_t v85 = v102;
    v102[3].isa = (Class)&type metadata for VisionModel;
    v85[4].isa = (Class)&off_1F3838A28;
    sub_1DCD33E90((uint64_t)v105);
  }
  else
  {
    sub_1DCDB40EC(v38);
    uint64_t v61 = v98;
    sub_1DCD56CC8(v37, v98);
    uint64_t v62 = v37;
    uint64_t v63 = v99;
    sub_1DCD56CC8(v62, v99);
    uint64_t v64 = sub_1DD048048();
    os_log_type_t v65 = sub_1DD048848();
    int v66 = v65;
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v67 = swift_slowAlloc();
      uint64_t v90 = 0;
      uint64_t v68 = v67;
      uint64_t v105 = (uint64_t (*)(char *))swift_slowAlloc();
      uint64_t v111 = v105;
      *(_DWORD *)uint64_t v68 = 136315394;
      LODWORD(v104) = v66;
      long long v69 = (uint64_t *)(v61 + *(int *)(v94 + 24));
      CGFloat v70 = v34;
      uint64_t v71 = *v69;
      unint64_t v72 = v69[1];
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_1DCED7FA0(v71, v72, (uint64_t *)&v111);
      uint64_t v89 = v35;
      sub_1DD048A28();
      os_unfair_lock_t v34 = v70;
      swift_bridgeObjectRelease();
      sub_1DCD59AB4(v61);
      *(_WORD *)(v68 + 12) = 2080;
      sub_1DCD28968();
      uint64_t v73 = sub_1DD048F78();
      uint64_t v109 = sub_1DCED7FA0(v73, v74, (uint64_t *)&v111);
      uint64_t v35 = v89;
      sub_1DD048A28();
      swift_bridgeObjectRelease();
      sub_1DCD59AB4(v63);
      _os_log_impl(&dword_1DCCF9000, v64, (os_log_type_t)v104, "Loaded CoreML Model with model urn %s from %s", (uint8_t *)v68, 0x16u);
      uint64_t v75 = v105;
      swift_arrayDestroy();
      MEMORY[0x1E01B07E0](v75, -1, -1);
      MEMORY[0x1E01B07E0](v68, -1, -1);

      (*(void (**)(char *, uint64_t))(v103 + 8))(v106, v107);
    }
    else
    {
      sub_1DCD59AB4(v61);
      sub_1DCD59AB4(v63);

      (*(void (**)(char *, uint64_t))(v103 + 8))(v106, v39);
    }
    os_log_t v85 = v102;
    v102[3].isa = (Class)&type metadata for VisionModel;
    v85[4].isa = (Class)&off_1F3838A28;
  }
  swift_release();

  v85->isa = (Class)v35;
}

uint64_t sub_1DCF3C558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v29 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v29);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1DD048068();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for EspressoModel(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD56CC8(a1, (uint64_t)v14);
  uint64_t v30 = v12;
  *(void *)&v14[*(int *)(v12 + 20)] = a2;
  swift_unknownObjectRetain();
  sub_1DCDB40EC((uint64_t)v11);
  sub_1DCD56CC8(a1, (uint64_t)v8);
  uint64_t v15 = sub_1DD048048();
  os_log_type_t v16 = sub_1DD048848();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    id v27 = a3;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v34 = v26;
    uint64_t v28 = v3;
    *(_DWORD *)uint64_t v18 = 136315138;
    v25[1] = v18 + 4;
    sub_1DD046478();
    sub_1DCD28968();
    uint64_t v19 = sub_1DD048F78();
    uint64_t v33 = sub_1DCED7FA0(v19, v20, &v34);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD59AB4((uint64_t)v8);
    _os_log_impl(&dword_1DCCF9000, v15, v16, "Loaded Espresso model from %s", v18, 0xCu);
    uint64_t v21 = v26;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v21, -1, -1);
    uint64_t v22 = v18;
    a3 = v27;
    MEMORY[0x1E01B07E0](v22, -1, -1);
  }
  else
  {
    sub_1DCD59AB4((uint64_t)v8);
  }

  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
  a3[3] = v30;
  a3[4] = (uint64_t)&off_1F3839098;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1DCF3D334((uint64_t)v14, (uint64_t)boxed_opaque_existential_1, type metadata accessor for EspressoModel);
}

uint64_t sub_1DCF3C884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v5 = sub_1DD048068();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1DD046478();
  uint64_t v8 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for MLModelInfo(0);
  MEMORY[0x1F4188790](v43);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v34 - v14);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v37 = (char *)a1;
  sub_1DCD56CC8(a1, (uint64_t)&v34 - v17);
  uint64_t v19 = qword_1EBE852A0;
  uint64_t v35 = a2;
  swift_unknownObjectRetain();
  if (v19 != -1) {
    swift_once();
  }
  int v20 = dword_1EBE9C868;
  uint64_t v39 = type metadata accessor for E5Model();
  uint64_t v21 = swift_allocObject();
  sub_1DCD56CC8((uint64_t)v18, v21 + OBJC_IVAR____TtC18VisualIntelligence7E5Model_modelInfo);
  sub_1DD046418();
  sub_1DCD59AB4((uint64_t)v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v21 + OBJC_IVAR____TtC18VisualIntelligence7E5Model_bundleURL, v10, v36);
  *(_DWORD *)(v21 + OBJC_IVAR____TtC18VisualIntelligence7E5Model_borderFillBGRA) = v20;
  uint64_t v38 = v21;
  *(void *)(v21 + OBJC_IVAR____TtC18VisualIntelligence7E5Model_preferredMetalDevice) = v35;
  sub_1DCDB40EC((uint64_t)v7);
  uint64_t v22 = (uint64_t)v37;
  sub_1DCD56CC8((uint64_t)v37, (uint64_t)v15);
  sub_1DCD56CC8(v22, (uint64_t)v12);
  uint64_t v23 = sub_1DD048048();
  os_log_type_t v24 = sub_1DD048848();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v45 = v35;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v37 = v7;
    os_log_type_t v26 = v24;
    uint64_t v28 = *v15;
    unint64_t v27 = v15[1];
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1DCED7FA0(v28, v27, &v45);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD59AB4((uint64_t)v15);
    *(_WORD *)(v25 + 12) = 2080;
    sub_1DCD28968();
    uint64_t v29 = sub_1DD048F78();
    uint64_t v44 = sub_1DCED7FA0(v29, v30, &v45);
    sub_1DD048A28();
    swift_bridgeObjectRelease();
    sub_1DCD59AB4((uint64_t)v12);
    _os_log_impl(&dword_1DCCF9000, v23, v26, "Loaded E5 model with name %s from %s", (uint8_t *)v25, 0x16u);
    uint64_t v31 = v35;
    swift_arrayDestroy();
    MEMORY[0x1E01B07E0](v31, -1, -1);
    MEMORY[0x1E01B07E0](v25, -1, -1);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v37, v41);
  }
  else
  {
    sub_1DCD59AB4((uint64_t)v15);
    sub_1DCD59AB4((uint64_t)v12);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v7, v41);
  }
  uint64_t v33 = v42;
  uint64_t v42[3] = v39;
  _OWORD v33[4] = (uint64_t)&off_1F383CE80;
  *uint64_t v33 = v38;
  return result;
}

uint64_t sub_1DCF3CD48()
{
  sub_1DCD59AB4(v0 + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_modelInfo);
  sub_1DCD33E90(*(void *)(v0 + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_modelValidator));
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCF3CDF0()
{
  return type metadata accessor for CachedCoreMLModelProvider();
}

uint64_t type metadata accessor for CachedCoreMLModelProvider()
{
  uint64_t result = qword_1EBE86F18;
  if (!qword_1EBE86F18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCF3CE44()
{
  uint64_t result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1DCF3CF04()
{
  unint64_t v1 = (int *)(type metadata accessor for MLModelInfo(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 17) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + v1[7];
  uint64_t v7 = sub_1DD046478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + v4)) {
    swift_release();
  }
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, ((((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_1DCF3D074(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for MLModelInfo(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1DCF3B61C(*(unsigned __int8 *)(v1 + 16), v1 + v4, *(uint64_t (**)(char *))(v1 + v5), *(void *)(v1 + v5 + 8), *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_1DCF3D12C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE853D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1DCF3D194()
{
  unint64_t result = qword_1EBE82C38;
  if (!qword_1EBE82C38)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBE82C38);
  }
  return result;
}

id sub_1DCF3D1D4(uint64_t a1, uint64_t a2)
{
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = (void *)sub_1DD0463E8();
  v13[0] = 0;
  id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_configuration_error_, v4, a2, v13);

  id v6 = v13[0];
  if (v5)
  {
    uint64_t v7 = sub_1DD046478();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    id v9 = v6;
    v8(a1, v7);
  }
  else
  {
    id v10 = v13[0];
    sub_1DD046378();

    swift_willThrow();
    uint64_t v11 = sub_1DD046478();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

uint64_t sub_1DCF3D334(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1DCF3D39C(char *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  int v31 = a4;
  uint64_t v12 = *v7;
  uint64_t v32 = a3;
  uint64_t v33 = v12;
  uint64_t v13 = type metadata accessor for MLModelInfo(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = &v30[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v17 = *a1;
  uint64_t v18 = OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(uint64_t *)((char *)v7 + v18) = v19;
  *(uint64_t *)((char *)v7 + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_metalDevice) = 0;
  *((unsigned char *)v7 + 16) = v17;
  uint64_t v34 = a2;
  sub_1DCD56CC8(a2, (uint64_t)v7 + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_modelInfo);
  int v20 = (uint64_t *)((char *)v7 + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_modelValidator);
  *int v20 = a5;
  v20[1] = a6;
  uint64_t v21 = 4;
  if ((v31 & 1) == 0) {
    uint64_t v21 = v32;
  }
  uint64_t v32 = v21;
  sub_1DCD56CC8(a2, (uint64_t)&v30[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v22 = (*(unsigned __int8 *)(v14 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v23 = (v15 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + 16) = v17;
  sub_1DCF3D334((uint64_t)v16, v24 + v22, type metadata accessor for MLModelInfo);
  uint64_t v25 = (uint64_t *)(v24 + v23);
  *uint64_t v25 = a5;
  v25[1] = a6;
  *(void *)(v24 + ((v23 + 23) & 0xFFFFFFFFFFFFFFF8)) = v33;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86268);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 24) = 0u;
  *(_OWORD *)(v26 + 40) = 0u;
  *(void *)(v26 + 56) = 0;
  *(unsigned char *)(v26 + 64) = -1;
  *(void *)(v26 + 88) = 0;
  *(void *)(v26 + 96) = 0;
  uint64_t v27 = swift_allocObject();
  *(_DWORD *)(v27 + 16) = 0;
  *(void *)(v26 + 112) = v27;
  *(void *)(v26 + 72) = sub_1DCF3D7B4;
  *(void *)(v26 + 80) = v24;
  sub_1DCDD46F8(a5);
  sub_1DCDD46F8(a5);
  swift_retain();
  swift_retain();
  sub_1DCD33E90(0);
  *(void *)(v26 + 104) = v32;
  swift_release();
  uint64_t v28 = sub_1DCF31D08();
  swift_release();
  sub_1DCD59AB4(v34);
  *(uint64_t *)((char *)v7 + OBJC_IVAR____TtC18VisualIntelligence25CachedCoreMLModelProvider_engineModel) = v28;
  return v7;
}

uint64_t sub_1DCF3D65C()
{
  uint64_t v1 = (int *)(type metadata accessor for MLModelInfo(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 17) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + v1[7];
  uint64_t v7 = sub_1DD046478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + v4)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, ((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_1DCF3D7B4(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for MLModelInfo(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1DCF3B808(*(unsigned __int8 *)(v1 + 16), v1 + v4, *(uint64_t (**)(char *))(v1 + v5), *(void *)(v1 + v5 + 8), a1);
}

uint64_t sub_1DCF3D860(unint64_t a1)
{
  return sub_1DCF3D8A0(a1, type metadata accessor for EspressoRequest, (uint64_t)&off_1F3839ED0);
}

uint64_t sub_1DCF3D880(unint64_t a1)
{
  return sub_1DCF3D8A0(a1, (uint64_t (*)(void))type metadata accessor for E5Request, (uint64_t)&off_1F383D170);
}

uint64_t sub_1DCF3D8A0(unint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6) {
    return v7;
  }
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DCFC49C8(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = v20;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = 0;
      do
      {
        uint64_t v10 = MEMORY[0x1E01AE890](v9, a1);
        uint64_t v20 = v7;
        unint64_t v12 = *(void *)(v7 + 16);
        unint64_t v11 = *(void *)(v7 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1DCFC49C8(v11 > 1, v12 + 1, 1);
          uint64_t v7 = v20;
        }
        ++v9;
        uint64_t v18 = a2(0);
        uint64_t v19 = a3;
        *(void *)&long long v17 = v10;
        *(void *)(v7 + 16) = v12 + 1;
        sub_1DCD3A4DC(&v17, v7 + 40 * v12 + 32);
      }
      while (v6 != v9);
    }
    else
    {
      uint64_t v13 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v14 = *v13;
        uint64_t v20 = v7;
        unint64_t v15 = *(void *)(v7 + 16);
        unint64_t v16 = *(void *)(v7 + 24);
        swift_retain();
        if (v15 >= v16 >> 1)
        {
          sub_1DCFC49C8(v16 > 1, v15 + 1, 1);
          uint64_t v7 = v20;
        }
        uint64_t v18 = a2(0);
        uint64_t v19 = a3;
        *(void *)&long long v17 = v14;
        *(void *)(v7 + 16) = v15 + 1;
        sub_1DCD3A4DC(&v17, v7 + 40 * v15 + 32);
        ++v13;
        --v6;
      }
      while (v6);
    }
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF3DA6C(unint64_t a1)
{
  return sub_1DCF3DA80(a1, &qword_1EAB04288);
}

uint64_t sub_1DCF3DA80(unint64_t a1, unint64_t *a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  uint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1DCFC49C8(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = v19;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = 0;
      do
      {
        uint64_t v8 = MEMORY[0x1E01AE890](v7, a1);
        uint64_t v19 = v5;
        unint64_t v10 = *(void *)(v5 + 16);
        unint64_t v9 = *(void *)(v5 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_1DCFC49C8(v9 > 1, v10 + 1, 1);
          uint64_t v5 = v19;
        }
        ++v7;
        uint64_t v17 = sub_1DCD95648(0, a2);
        uint64_t v18 = &off_1F383D738;
        *(void *)&long long v16 = v8;
        *(void *)(v5 + 16) = v10 + 1;
        sub_1DCD3A4DC(&v16, v5 + 40 * v10 + 32);
      }
      while (v4 != v7);
    }
    else
    {
      unint64_t v11 = (void **)(a1 + 32);
      do
      {
        unint64_t v12 = *v11;
        uint64_t v19 = v5;
        unint64_t v14 = *(void *)(v5 + 16);
        unint64_t v13 = *(void *)(v5 + 24);
        id v15 = v12;
        if (v14 >= v13 >> 1)
        {
          sub_1DCFC49C8(v13 > 1, v14 + 1, 1);
          uint64_t v5 = v19;
        }
        uint64_t v17 = sub_1DCD95648(0, a2);
        uint64_t v18 = &off_1F383D738;
        *(void *)&long long v16 = v15;
        *(void *)(v5 + 16) = v14 + 1;
        sub_1DCD3A4DC(&v16, v5 + 40 * v14 + 32);
        ++v11;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF3DC64(unint64_t a1)
{
  return sub_1DCF3DDA4(a1);
}

uint64_t sub_1DCF3DC70(uint64_t a1)
{
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1DD048C58();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_1DCD21A28(i, (uint64_t)v5);
    sub_1DCD95648(0, &qword_1EBE82D70);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_1DD048C38();
    sub_1DD048C68();
    sub_1DD048C78();
    sub_1DD048C48();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_1DCF3DD8C(unint64_t a1)
{
  return sub_1DCF3DDA4(a1);
}

uint64_t sub_1DCF3DD98(unint64_t a1)
{
  return sub_1DCF3DDA4(a1);
}

uint64_t sub_1DCF3DDA4(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1DD048C58();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1E01AE890](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1DD048C38();
        sub_1DD048C68();
        sub_1DD048C78();
        sub_1DD048C48();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        uint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_1DD048C38();
        sub_1DD048C68();
        sub_1DD048C78();
        sub_1DD048C48();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1DD048CC8();
    swift_bridgeObjectRelease();
    sub_1DD048C58();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1DCF3DF88()
{
  return sub_1DCF3DA80(*v0, &qword_1EAB04280);
}

uint64_t sub_1DCF3DFB4@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v33 = a4;
  uint64_t v34 = a2;
  uint64_t v7 = *v4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v32 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = sub_1DD0480A8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  int v31 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[0] = 0xD00000000000001DLL;
  v36[1] = 0x80000001DD068570;
  _OWORD v36[2] = "VI: OCR";
  v36[3] = 7;
  char v37 = 2;
  uint64_t v16 = type metadata accessor for TextDetectionRequestFactory.Input();
  uint64_t v17 = *(void *)((char *)a1 + *(int *)(v16 + 24));
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  swift_retain();
  uint64_t v18 = sub_1DCEA469C((uint64_t)v36, v17);
  swift_release();
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = v34;
  v19[3] = a3;
  v19[4] = v18;
  v19[5] = v7;
  id v20 = objc_allocWithZone(MEMORY[0x1E4F45908]);
  aBlock[4] = sub_1DCF3E570;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DCFE5678;
  aBlock[3] = &block_descriptor_10;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v22 = objc_msgSend(v20, sel_initWithCompletionHandler_, v21);
  _Block_release(v21);
  objc_msgSend(v22, sel_setRegionOfInterest_, *a1, a1[1], a1[2], a1[3]);
  sub_1DCDDC65C((uint64_t)a1 + *(int *)(v16 + 20), (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1DCDDC6C4((uint64_t)v12);
  }
  else
  {
    unint64_t v23 = v31;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v31, v12, v13);
    uint64_t v24 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v32, v23, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v24, 0, 1, v13);
    sub_1DD0489F8();
    sub_1DCDDC6C4(v24);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
  }
  uint64_t v25 = v33;
  objc_msgSend(v22, sel_setMaximumCandidateCount_, 3);
  id v26 = objc_msgSend(self, sel_preferredLanguages);
  if (!v26)
  {
    sub_1DD0486B8();
    id v26 = (id)sub_1DD0486A8();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v22, sel_setRecognitionLanguages_, v26);

  objc_msgSend(v22, sel_setUsesLanguageDetection_, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1DD050EE0;
  *(void *)(v27 + 32) = v22;
  aBlock[0] = v27;
  sub_1DD0486D8();
  uint64_t v28 = aBlock[0];
  _OWORD v25[3] = &type metadata for TextDetectionModelRequest;
  v25[4] = &off_1F383C020;
  uint64_t result = swift_release();
  *uint64_t v25 = v28;
  return result;
}

uint64_t sub_1DCF3E450(void *a1, id a2, void (*a3)(uint64_t, uint64_t))
{
  if (a2)
  {
    id v5 = a2;
    a3((uint64_t)a2, 1);
  }
  else
  {
    sub_1DCF3E594(a1, a3);
  }
  return sub_1DCEA3DA4();
}

uint64_t type metadata accessor for TextDetectionRequestFactory()
{
  return self;
}

uint64_t type metadata accessor for TextDetectionRequestFactory.Input()
{
  uint64_t result = qword_1EAB04270;
  if (!qword_1EAB04270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCF3E530()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1DCF3E570(void *a1, void *a2)
{
  return sub_1DCF3E450(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

void sub_1DCF3E594(void *a1, void (*a2)(uint64_t, uint64_t))
{
  id v2 = objc_msgSend(a1, sel_results);
  if (v2
    && (uint64_t v3 = v2,
        sub_1DCD95648(0, (unint64_t *)&qword_1EBE82C28),
        unint64_t v4 = sub_1DD0486B8(),
        v3,
        unint64_t v5 = sub_1DCF3DDA4(v4),
        swift_bridgeObjectRelease(),
        v5))
  {
    uint64_t v48 = MEMORY[0x1E4FBC860];
    if (v5 >> 62) {
      goto LABEL_30;
    }
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v6; uint64_t v6 = sub_1DD048CC8())
    {
      uint64_t v7 = 0;
      id v42 = self;
      unint64_t v43 = v5 & 0xC000000000000001;
      unint64_t v39 = v5 + 32;
      uint64_t v40 = v6;
      unint64_t v41 = v5;
      while (1)
      {
        id v8 = v43 ? (id)MEMORY[0x1E01AE890](v7, v5) : *(id *)(v39 + 8 * v7);
        uint64_t v9 = v8;
        if (__OFADD__(v7++, 1)) {
          break;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_1DD050EE0;
        *(void *)(v11 + 32) = v9;
        sub_1DD0486D8();
        sub_1DCD95648(0, &qword_1EAB04268);
        id v12 = v9;
        uint64_t v13 = (void *)sub_1DD0486A8();
        swift_bridgeObjectRelease();
        id v14 = objc_msgSend(v42, sel_textBlockWithDocumentObservations_, v13);

        id v15 = objc_msgSend(v14, sel_textAnnotations);
        sub_1DCD95648(0, (unint64_t *)&qword_1EBE82C30);
        unint64_t v16 = sub_1DD0486B8();

        if (v16 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v17 = sub_1DD048CC8();
          swift_bridgeObjectRelease();
          if (!v17)
          {
LABEL_23:

            swift_bridgeObjectRelease();
            uint64_t v19 = MEMORY[0x1E4FBC860];
            goto LABEL_6;
          }
        }
        else
        {
          uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v17) {
            goto LABEL_23;
          }
        }
        uint64_t v47 = MEMORY[0x1E4FBC860];
        sub_1DCFC5A80(0, v17 & ~(v17 >> 63), 0);
        if (v17 < 0) {
          goto LABEL_29;
        }
        uint64_t v44 = v14;
        uint64_t v45 = v12;
        uint64_t v46 = v7;
        uint64_t v18 = 0;
        uint64_t v19 = v47;
        do
        {
          if ((v16 & 0xC000000000000001) != 0) {
            id v20 = (id)MEMORY[0x1E01AE890](v18, v16);
          }
          else {
            id v20 = *(id *)(v16 + 8 * v18 + 32);
          }
          uint64_t v21 = v20;
          id v22 = objc_msgSend(v20, sel_text);
          uint64_t v23 = sub_1DD048408();
          uint64_t v25 = v24;

          objc_msgSend(v21, sel_confidence);
          int v27 = v26;
          objc_msgSend(v21, sel_normalizedBoundingBox);
          v52.origin.CGFloat x = 0.0;
          v52.origin.CGFloat y = 0.0;
          v52.size.CGFloat width = 1.0;
          v52.size.CGFloat height = 1.0;
          CGRect v51 = CGRectIntersection(v50, v52);
          CGFloat x = v51.origin.x;
          CGFloat y = v51.origin.y;
          CGFloat width = v51.size.width;
          CGFloat height = v51.size.height;

          unint64_t v33 = *(void *)(v47 + 16);
          unint64_t v32 = *(void *)(v47 + 24);
          if (v33 >= v32 >> 1) {
            sub_1DCFC5A80(v32 > 1, v33 + 1, 1);
          }
          ++v18;
          *(void *)(v47 + 16) = v33 + 1;
          unint64_t v34 = v47 + 56 * v33;
          *(void *)(v34 + 32) = v23;
          *(void *)(v34 + 40) = v25;
          *(_DWORD *)(v34 + 48) = v27;
          *(CGFloat *)(v34 + 56) = x;
          *(CGFloat *)(v34 + 64) = y;
          *(CGFloat *)(v34 + 72) = width;
          *(CGFloat *)(v34 + 80) = height;
        }
        while (v17 != v18);

        swift_bridgeObjectRelease();
        uint64_t v6 = v40;
        unint64_t v5 = v41;
        uint64_t v7 = v46;
LABEL_6:
        sub_1DCFDF7F0(v19);
        if (v7 == v6)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v37 = v48;
          goto LABEL_32;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
    uint64_t v37 = MEMORY[0x1E4FBC860];
LABEL_32:
    a2(v37, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1DCD3A548();
    uint64_t v35 = (void *)swift_allocError();
    *(void *)uint64_t v36 = 0xD00000000000001BLL;
    *(void *)(v36 + 8) = 0x80000001DD06EA80;
    *(unsigned char *)(v36 + 16) = 4;
    a2((uint64_t)v35, 1);
  }
}

ValueMetadata *type metadata accessor for TextDetectionModelRequest()
{
  return &type metadata for TextDetectionModelRequest;
}

void *sub_1DCF3EAA0(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DD0480A8();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(void *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return v4;
}

uint64_t sub_1DCF3EC20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1DD0480A8();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  return swift_release();
}

_OWORD *sub_1DCF3ECFC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DD0480A8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

void *sub_1DCF3EE30(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1DD0480A8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1DCF3EFEC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DD0480A8();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_1DCF3F11C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DD0480A8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1DCF3F2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF3F2CC);
}

uint64_t sub_1DCF3F2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_1DCF3F3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF3F3B4);
}

uint64_t sub_1DCF3F3B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02480);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

void sub_1DCF3F478()
{
  sub_1DCDDD194();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

_UNKNOWN **sub_1DCF3F518()
{
  return &off_1F3837118;
}

_UNKNOWN **sub_1DCF3F524()
{
  return &off_1EBE87240;
}

_UNKNOWN **sub_1DCF3F530()
{
  return &off_1F3839EE0;
}

_UNKNOWN **sub_1DCF3F53C()
{
  return &off_1EBE8F668;
}

uint64_t sub_1DCF3F548(uint64_t a1)
{
  v25[0] = 0x656E69676E454C4DLL;
  v25[1] = 0xE800000000000000;
  void v25[2] = "EspressoRequestHandler.perform";
  _OWORD v25[3] = 30;
  char v26 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  sub_1DCEA469C((uint64_t)v25, 0);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1DCD3A3BC(v4, (uint64_t)v22);
      sub_1DCD3A3BC((uint64_t)v22, (uint64_t)aBlock);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85780);
      type metadata accessor for EspressoRequest(0);
      if ((swift_dynamicCast() & 1) == 0) {
        uint64_t v23 = 0;
      }
      uint64_t v5 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      if (v23)
      {
        MEMORY[0x1E01AE350](v5);
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1DD0486E8();
        }
        sub_1DD048708();
        sub_1DD0486D8();
      }
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v2 = v24;
  }
  if (v2 < 0 || (v2 & 0x4000000000000000) != 0) {
    goto LABEL_28;
  }
  uint64_t v6 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  while (1)
  {
    *(void *)&v22[0] = v6;
    sub_1DCF3F960((uint64_t *)v22);
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)&v22[0];
    if ((*(void *)&v22[0] & 0x8000000000000000) != 0 || (*(void *)&v22[0] & 0x4000000000000000) != 0)
    {
      swift_retain();
      uint64_t v20 = sub_1DD048CC8();
      if (!v20)
      {
LABEL_30:
        swift_release_n();
        sub_1DCEA3DA4();
        return swift_release();
      }
    }
    else
    {
      uint64_t v8 = *(void *)(*(void *)&v22[0] + 16);
      swift_retain();
      uint64_t v20 = v8;
      if (!v8) {
        goto LABEL_30;
      }
    }
    if (v20 < 1) {
      break;
    }
    uint64_t v9 = 0;
    while (1)
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = MEMORY[0x1E01AE890](v9, v7);
      }
      else
      {
        uint64_t v10 = *(void *)(v7 + 8 * v9 + 32);
        swift_retain();
      }
      if (qword_1EBE85A38 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_1EBE85A30;
      sub_1DCF44148(v19, (uint64_t)v22);
      uint64_t v12 = swift_allocObject();
      long long v13 = v22[3];
      *(_OWORD *)(v12 + 48) = v22[2];
      *(_OWORD *)(v12 + 64) = v13;
      *(_OWORD *)(v12 + 80) = v22[4];
      long long v14 = v22[1];
      *(_OWORD *)(v12 + 16) = v22[0];
      *(_OWORD *)(v12 + 32) = v14;
      *(void *)(v12 + 96) = v10;
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = sub_1DCF441D8;
      *(void *)(v15 + 24) = v12;
      aBlock[4] = sub_1DCF441F4;
      aBlock[5] = v15;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1DCDD1544;
      aBlock[3] = &block_descriptor_11;
      unint64_t v16 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v11, v16);
      _Block_release(v16);
      LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      if (v11) {
        break;
      }
      if (v20 == ++v9) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_28:
    unint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t)sub_1DCF4D338(v17);
    swift_bridgeObjectRelease();
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1DCF3F960(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1DCD74330();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1DCF42F1C(v6);
  return sub_1DD048C48();
}

uint64_t sub_1DCF3F9DC()
{
  sub_1DCF43D38(v0 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_model, type metadata accessor for EspressoModel);
  swift_bridgeObjectRelease();
  sub_1DCD33E90(*(void *)(v0 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_completionHandler));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCF3FAA8()
{
  return type metadata accessor for EspressoRequest(0);
}

uint64_t type metadata accessor for EspressoRequest(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86E50);
}

uint64_t sub_1DCF3FAD0()
{
  uint64_t result = type metadata accessor for EspressoModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for EspressoModel(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86E18);
}

uint64_t sub_1DCF3FBC8()
{
  return swift_retain();
}

uint64_t sub_1DCF3FBF0()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86A70);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1DD04E910;
  *(void *)(v2 + 56) = type metadata accessor for EspressoRequest(0);
  *(void *)(v2 + 64) = &off_1F3839ED0;
  *(void *)(v2 + 32) = v1;
  swift_retain();
  return v2;
}

uint64_t sub_1DCF3FC5C()
{
  uint64_t v0 = sub_1DD048878();
  MEMORY[0x1F4188790](v0);
  uint64_t v1 = sub_1DD0481D8();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = sub_1DD048898();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCD95648(0, (unint64_t *)&qword_1EBE87140);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC68], v2);
  sub_1DD0481C8();
  v7[1] = MEMORY[0x1E4FBC860];
  sub_1DCDD4C64(&qword_1EBE87138, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE87120);
  sub_1DCDD4CAC();
  sub_1DD048AE8();
  uint64_t result = sub_1DD0488C8();
  qword_1EBE85A30 = result;
  return result;
}

uint64_t sub_1DCF3FE94()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE85710);
  uint64_t v0 = swift_allocObject();
  swift_retain();
  unint64_t v1 = sub_1DCDBA77C(MEMORY[0x1E4FBC860]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBE86928);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 24) = 0;
  *(void *)(v2 + 16) = v1;
  *(void *)(v0 + 24) = v2;
  swift_release();
  uint64_t result = sub_1DCF31D08();
  qword_1EBE85A18 = result;
  return result;
}

uint64_t sub_1DCF3FF18()
{
  type metadata accessor for EspressoRequestHandler.ScaledBufferCache(0);
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = v0 + OBJC_IVAR____TtCV18VisualIntelligence22EspressoRequestHandler17ScaledBufferCache_cache;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t result = sub_1DCF31D08();
  qword_1EBE85A40 = result;
  return result;
}

uint64_t sub_1DCF3FFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1DD048068();
  MEMORY[0x1F4188790](v3);
  uint64_t result = sub_1DCF40380(a2);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void))(a2
                                                 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_completionHandler);
  if (v5) {
    return v5(a2, 0);
  }
  return result;
}

uint64_t sub_1DCF40380(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  v65[5] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1DD048068();
  uint64_t v55 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58[0] = 0x656E69676E454C4DLL;
  v58[1] = 0xE800000000000000;
  v58[2] = "EspressoRequestHandler.performOne";
  v58[3] = 33;
  char v59 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  uint64_t v9 = sub_1DCEA469C((uint64_t)v58, 0);
  if (*(void *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_outputs)) {
    uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_outputs);
  }
  else {
    uint64_t v10 = sub_1DCD280D4();
  }
  uint64_t v11 = qword_1EBE85A20;
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1DCDD22F0(a1, v10);
  uint64_t v13 = v10;
  if (!v3)
  {
    uint64_t v15 = (void *)v12;
    v54[0] = v13;
    uint64_t v16 = *(void *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_features);
    v54[1] = v9;
    if (v16)
    {
      sub_1DCD95648(0, &qword_1EBE853A0);
      unint64_t v17 = (void *)sub_1DD0482C8();
      v65[0] = 0;
      unsigned int v18 = objc_msgSend(v15, sel_setFeatures_error_, v17, v65, v54[0]);

      if (!v18)
      {
        id v34 = v65[0];
        swift_bridgeObjectRelease();
        sub_1DD046378();

        swift_willThrow();
        goto LABEL_28;
      }
      id v19 = v65[0];
    }
    if (objc_msgSend(v15, sel_isImageRequired, v54[0]))
    {
      sub_1DCD2889C(v4, (uint64_t)&v62, &qword_1EBE85740);
      if (!v63)
      {
        swift_bridgeObjectRelease();
        sub_1DCD2479C((uint64_t)&v62, &qword_1EBE85740);
        sub_1DCD3A548();
        swift_allocError();
        *(void *)uint64_t v35 = 0xD00000000000001ELL;
        *(void *)(v35 + 8) = 0x80000001DD06EC80;
        *(unsigned char *)(v35 + 16) = 7;
        swift_willThrow();

        goto LABEL_8;
      }
      sub_1DCD3A4DC(&v62, (uint64_t)v65);
      sub_1DCD2889C(v4 + 40, (uint64_t)&v60, &qword_1EBE85810);
      if (!*((void *)&v61 + 1))
      {
        swift_bridgeObjectRelease();
        sub_1DCD2479C((uint64_t)&v60, &qword_1EBE85810);
        sub_1DCD3A548();
        swift_allocError();
        *(void *)uint64_t v37 = 0xD000000000000020;
        *(void *)(v37 + 8) = 0x80000001DD06ECA0;
        *(unsigned char *)(v37 + 16) = 6;
        swift_willThrow();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
        goto LABEL_8;
      }
      sub_1DCD3A4DC(&v60, (uint64_t)&v62);
      if (qword_1EBE85A48 != -1) {
        swift_once();
      }
      uint64_t v20 = a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_model;
      uint64_t v38 = (__CVBuffer *)sub_1DCF40DEC(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_model);
      uint64_t v39 = *(unsigned __int8 *)(v20 + *(int *)(type metadata accessor for MLModelInfo(0) + 32));
      switch(v39)
      {
        case 1:
          swift_bridgeObjectRelease();
          break;
        default:
          char v40 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          if ((v40 & 1) == 0)
          {
            uint64_t v42 = v63;
            uint64_t v41 = v64;
            __swift_project_boxed_opaque_existential_1(&v62, v63);
            if (qword_1EBE852A0 != -1) {
              swift_once();
            }
            uint64_t v43 = *(void *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_vnScalingMode);
            long long v44 = *(_OWORD *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_regionOfInterest + 16);
            long long v60 = *(_OWORD *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_regionOfInterest);
            long long v61 = v44;
            (*(void (**)(uint64_t, id *, __CVBuffer *, void, uint64_t, long long *, void, uint64_t, uint64_t))(v41 + 8))(v39, v65, v38, dword_1EBE9C868, v43, &v60, *(void *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_metricsBucket), v42, v41);
          }
          break;
      }
      sub_1DCD2581C(v39, v56);
      uint64_t v45 = *(void *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_metricsBucket);
      swift_allocObject();
      swift_retain();
      sub_1DCEA469C((uint64_t)v56, v45);
      swift_release();
      CVPixelBufferLockBaseAddress(v38, 0);
      *(void *)&long long v60 = 0;
      unsigned int v46 = objc_msgSend(v15, sel_setFrame_error_, v38, &v60);
      uint64_t v47 = (void *)v60;
      if (!v46
        || (*(void *)&long long v60 = 0,
            id v48 = v47,
            id v49 = objc_msgSend(v15, sel_processWithError_, &v60),
            CGRect v50 = (void *)v60,
            !v49))
      {
        id v53 = (id)v60;
        swift_bridgeObjectRelease();
        sub_1DD046378();

        swift_willThrow();
        swift_release();

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v62);
        goto LABEL_8;
      }
      CGRect v51 = v49;
      sub_1DCD95648(0, &qword_1EBE853A0);
      uint64_t v31 = sub_1DD0482D8();
      id v52 = v50;

      CVPixelBufferUnlockBaseAddress(v38, 0);
      sub_1DCEA3DA4();
      swift_release();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v62);
      goto LABEL_24;
    }
    sub_1DCD2889C(v4, (uint64_t)v65, &qword_1EBE85740);
    id v21 = v65[3];
    sub_1DCD2479C((uint64_t)v65, &qword_1EBE85740);
    if (v21)
    {
      sub_1DCDB40EC((uint64_t)v8);
      id v22 = sub_1DD048048();
      os_log_type_t v23 = sub_1DD048858();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_1DCCF9000, v22, v23, "WARNING: no image required for model input, and is ignored, yet one was supplied.", v24, 2u);
        MEMORY[0x1E01B07E0](v24, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v6);
    }
    uint64_t v25 = a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_model;
    uint64_t v26 = type metadata accessor for MLModelInfo(0);
    sub_1DCD2581C(*(unsigned __int8 *)(v25 + *(int *)(v26 + 32)), v57);
    uint64_t v27 = *(void *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_metricsBucket);
    swift_allocObject();
    swift_retain();
    sub_1DCEA469C((uint64_t)v57, v27);
    swift_release();
    v65[0] = 0;
    id v28 = objc_msgSend(v15, sel_processWithError_, v65);
    id v29 = v65[0];
    if (v28)
    {
      uint64_t v30 = v28;
      sub_1DCD95648(0, &qword_1EBE853A0);
      uint64_t v31 = sub_1DD0482D8();
      id v32 = v29;

      sub_1DCEA3DA4();
      swift_release();
LABEL_24:
      type metadata accessor for EngineResult();
      swift_allocObject();
      uint64_t v33 = sub_1DCFA761C(v54[0], v31);

      *(void *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_engineResult) = v33;
      swift_release();
      goto LABEL_8;
    }
    id v36 = v65[0];
    swift_bridgeObjectRelease();
    sub_1DD046378();

    swift_willThrow();
    swift_release();
LABEL_28:

    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
LABEL_8:
  sub_1DCEA3DA4();
  return swift_release();
}

uint64_t sub_1DCF40DEC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v132 = sub_1DD048068();
  uint64_t v131 = *(void *)(v132 - 8);
  MEMORY[0x1F4188790](v132);
  unint64_t v139 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85670);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v128 = (uint64_t)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v127 = (uint64_t)&v118 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v135 = (uint64_t)&v118 - v10;
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86DE8);
  uint64_t v138 = *(void *)(v140 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v140);
  uint64_t v122 = (uint64_t)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v125 = (uint64_t)&v118 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v136 = (uint64_t)&v118 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v137 = (uint64_t)&v118 - v17;
  uint64_t v18 = type metadata accessor for MLModelInfo(0);
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v133 = (uint64_t)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v134 = (char *)&v118 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v118 - v23;
  uint64_t v25 = type metadata accessor for Argos_Protos_MLModel_ImageFeatureType(0);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (uint64_t *)((char *)&v118 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85808);
  uint64_t v29 = MEMORY[0x1F4188790](v28 - 8);
  uint64_t v130 = (__CVBuffer *)((char *)&v118 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  long long v129 = (char *)&v118 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v124 = (uint64_t)&v118 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v123 = (uint64_t)&v118 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v126 = (uint64_t)&v118 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v41 = (__CVBuffer *)((char *)&v118 - v40);
  uint64_t v42 = MEMORY[0x1F4188790](v39);
  long long v44 = (__CVBuffer *)((char *)&v118 - v43);
  MEMORY[0x1F4188790](v42);
  unsigned int v46 = (__CVBuffer *)((char *)&v118 - v45);
  v147[0] = 0x656E69676E454C4DLL;
  v147[1] = 0xE800000000000000;
  _OWORD v147[2] = "ScaledBufferCache.getBuffer";
  v147[3] = 27;
  char v148 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  uint64_t v149 = sub_1DCEA469C((uint64_t)v147, 0);
  sub_1DCF31F44();
  os_unfair_lock_t v143 = (os_unfair_lock_t)(*(void *)(v1 + 24) + 16);
  os_unfair_lock_lock(v143);
  sub_1DCD27368((uint64_t)v46);
  uint64_t v47 = type metadata accessor for MLModelImageInput(0);
  uint64_t v48 = *(void *)(v47 - 8);
  id v49 = *(unsigned int (**)(__CVBuffer *, uint64_t, uint64_t))(v48 + 48);
  uint64_t v141 = v48 + 48;
  uint64_t v142 = v49;
  if (v49(v46, 1, v47) == 1)
  {
    sub_1DCD2479C((uint64_t)v46, &qword_1EBE85808);
    sub_1DCF44698(a1, (uint64_t)v24, type metadata accessor for MLModelInfo);
LABEL_6:
    sub_1DCF43D38((uint64_t)v24, type metadata accessor for MLModelInfo);
LABEL_7:
    sub_1DCD3A548();
    swift_allocError();
    *(void *)uint64_t v53 = 0xD000000000000035;
    *(void *)(v53 + 8) = 0x80000001DD06EBA0;
    *(unsigned char *)(v53 + 16) = 6;
    swift_willThrow();
LABEL_8:
    os_unfair_lock_unlock(v143);
    sub_1DCEA3DA4();
    swift_release();
    return (uint64_t)v44;
  }
  sub_1DCF44698((uint64_t)v46 + *(int *)(v47 + 20), (uint64_t)v27, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  sub_1DCF43D38((uint64_t)v46, type metadata accessor for MLModelImageInput);
  uint64_t v50 = v47;
  uint64_t v51 = *v27;
  unint64_t v121 = v27;
  sub_1DCF43D38((uint64_t)v27, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  sub_1DCF44698(a1, (uint64_t)v24, type metadata accessor for MLModelInfo);
  if (v51 < 1) {
    goto LABEL_6;
  }
  uint64_t v52 = a1;
  sub_1DCD27368((uint64_t)v44);
  if (v142(v44, 1, v50) == 1)
  {
    sub_1DCD2479C((uint64_t)v44, &qword_1EBE85808);
    goto LABEL_6;
  }
  uint64_t v120 = v50;
  uint64_t v55 = (uint64_t)v121;
  sub_1DCF44698((uint64_t)v44 + *(int *)(v50 + 20), (uint64_t)v121, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  sub_1DCF43D38((uint64_t)v44, type metadata accessor for MLModelImageInput);
  uint64_t v56 = *(void *)(v55 + 8);
  sub_1DCF43D38(v55, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  sub_1DCF43D38((uint64_t)v24, type metadata accessor for MLModelInfo);
  if (v56 < 1) {
    goto LABEL_7;
  }
  uint64_t v57 = v52;
  uint64_t v58 = v2 + OBJC_IVAR____TtCV18VisualIntelligence22EspressoRequestHandler17ScaledBufferCache_cache;
  swift_beginAccess();
  uint64_t v59 = v135;
  sub_1DCD2889C(v58, v135, &qword_1EBE85670);
  uint64_t v60 = v140;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48))(v59, 1, v140) == 1)
  {
    sub_1DCD2479C(v59, &qword_1EBE85670);
    long long v61 = v121;
    uint64_t v62 = (uint64_t)v139;
    uint64_t v63 = (uint64_t)v134;
  }
  else
  {
    uint64_t v64 = v57;
    uint64_t v65 = *(int *)(v60 + 48);
    uint64_t v66 = v137;
    sub_1DCECD5C8(v59, v137);
    uint64_t v67 = *(void **)(v59 + v65);
    uint64_t v135 = v65;
    *(void *)(v66 + v65) = v67;
    uint64_t v68 = *(int *)(v60 + 48);
    uint64_t v69 = v136;
    sub_1DCF44698(v66, v136, type metadata accessor for MLModelInfo);
    *(void *)(v69 + v68) = v67;
    id v70 = v67;
    sub_1DCD27368((uint64_t)v41);
    uint64_t v71 = v120;
    if (v142(v41, 1, v120) == 1)
    {
      sub_1DCD2479C((uint64_t)v41, &qword_1EBE85808);
      uint64_t v72 = 0;
      long long v61 = v121;
    }
    else
    {
      uint64_t v73 = v121;
      sub_1DCF44698((uint64_t)v41 + *(int *)(v71 + 20), (uint64_t)v121, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
      uint64_t v74 = (uint64_t)v41;
      long long v61 = v73;
      sub_1DCF43D38(v74, type metadata accessor for MLModelImageInput);
      uint64_t v72 = *v73;
      sub_1DCF43D38((uint64_t)v73, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    }
    sub_1DCF43D38(v136, type metadata accessor for MLModelInfo);
    uint64_t v75 = v126;
    sub_1DCD27368(v126);
    if (v142((__CVBuffer *)v75, 1, v71) == 1)
    {
      sub_1DCD2479C(v75, &qword_1EBE85808);
      uint64_t v76 = 0;
    }
    else
    {
      sub_1DCF44698(v75 + *(int *)(v71 + 20), (uint64_t)v61, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
      sub_1DCF43D38(v75, type metadata accessor for MLModelImageInput);
      uint64_t v76 = *v61;
      sub_1DCF43D38((uint64_t)v61, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
    }
    if ((double)v72 == (double)v76)
    {
      uint64_t v77 = *(int *)(v140 + 48);
      uint64_t v78 = v125;
      sub_1DCF44698(v137, v125, type metadata accessor for MLModelInfo);

      *(void *)(v78 + v77) = v70;
      uint64_t v79 = v123;
      sub_1DCD27368(v123);
      uint64_t v80 = v120;
      uint64_t v57 = v64;
      if (v142((__CVBuffer *)v79, 1, v120) == 1)
      {
        sub_1DCD2479C(v79, &qword_1EBE85808);
        double v81 = 0.0;
      }
      else
      {
        sub_1DCF44698(v79 + *(int *)(v80 + 20), (uint64_t)v61, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
        sub_1DCF43D38(v79, type metadata accessor for MLModelImageInput);
        uint64_t v82 = v61[1];
        sub_1DCF43D38((uint64_t)v61, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
        double v81 = (double)v82;
      }
      uint64_t v83 = v80;
      uint64_t v63 = (uint64_t)v134;
      sub_1DCF43D38(v78, type metadata accessor for MLModelInfo);
      uint64_t v84 = v124;
      sub_1DCD27368(v124);
      unsigned int v85 = v142((__CVBuffer *)v84, 1, v80);
      uint64_t v86 = v140;
      if (v85 == 1)
      {
        sub_1DCD2479C(v84, &qword_1EBE85808);
        double v87 = 0.0;
      }
      else
      {
        sub_1DCF44698(v84 + *(int *)(v83 + 20), (uint64_t)v61, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
        sub_1DCF43D38(v84, type metadata accessor for MLModelImageInput);
        uint64_t v88 = v61[1];
        sub_1DCF43D38((uint64_t)v61, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
        double v87 = (double)v88;
      }
      uint64_t v62 = (uint64_t)v139;
      if (v87 == v81)
      {
        uint64_t v89 = *(int *)(v86 + 48);
        uint64_t v90 = v137;
        uint64_t v91 = v122;
        sub_1DCECD5C8(v137, v122);
        long long v44 = *(__CVBuffer **)(v90 + v135);
        *(void *)(v91 + v89) = v44;
        sub_1DCF43D38(v91, type metadata accessor for MLModelInfo);
        goto LABEL_8;
      }
      sub_1DCD2479C(v137, &qword_1EBE86DE8);
    }
    else
    {
      sub_1DCD2479C(v137, &qword_1EBE86DE8);

      uint64_t v57 = v64;
      uint64_t v63 = (uint64_t)v134;
      uint64_t v62 = (uint64_t)v139;
    }
  }
  sub_1DCDB40EC(v62);
  uint64_t v92 = v57;
  sub_1DCF44698(v57, v63, type metadata accessor for MLModelInfo);
  uint64_t v93 = v133;
  sub_1DCF44698(v57, v133, type metadata accessor for MLModelInfo);
  uint64_t v94 = sub_1DD048048();
  os_log_type_t v95 = sub_1DD048848();
  BOOL v96 = os_log_type_enabled(v94, v95);
  uint64_t v119 = v58;
  if (v96)
  {
    uint64_t v97 = v93;
    uint64_t v98 = swift_slowAlloc();
    *(_DWORD *)uint64_t v98 = 134218240;
    uint64_t v137 = v57;
    sub_1DCD27D54();
    double v144 = v99;
    sub_1DD048A28();
    sub_1DCF43D38(v63, type metadata accessor for MLModelInfo);
    *(_WORD *)(v98 + 12) = 2048;
    double v144 = sub_1DCD27D54();
    long long v61 = v121;
    sub_1DD048A28();
    uint64_t v92 = v137;
    sub_1DCF43D38(v97, type metadata accessor for MLModelInfo);
    _os_log_impl(&dword_1DCCF9000, v94, v95, "ScaledBufferCache.getBuffer.new {h, w} = {%f, %f}", (uint8_t *)v98, 0x16u);
    MEMORY[0x1E01B07E0](v98, -1, -1);
  }
  else
  {
    sub_1DCF43D38(v63, type metadata accessor for MLModelInfo);
    sub_1DCF43D38(v93, type metadata accessor for MLModelInfo);
  }
  uint64_t v100 = v132;
  uint64_t v101 = v131;
  uint64_t v102 = (uint64_t)v129;

  (*(void (**)(char *, uint64_t))(v101 + 8))(v139, v100);
  v145[0] = 0x656E69676E454C4DLL;
  v145[1] = 0xE800000000000000;
  v145[2] = "ScaledBufferCache.getBuffer.new";
  v145[3] = 31;
  char v146 = 2;
  swift_allocObject();
  sub_1DCEA469C((uint64_t)v145, 0);
  sub_1DCD27368(v102);
  uint64_t v103 = v120;
  if (v142((__CVBuffer *)v102, 1, v120) == 1)
  {
    sub_1DCD2479C(v102, &qword_1EBE85808);
    double v104 = 0.0;
    long long v44 = v130;
    goto LABEL_37;
  }
  sub_1DCF44698(v102 + *(int *)(v103 + 20), (uint64_t)v61, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  sub_1DCF43D38(v102, type metadata accessor for MLModelImageInput);
  uint64_t v105 = *v61;
  uint64_t result = sub_1DCF43D38((uint64_t)v61, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  double v104 = (double)v105;
  long long v44 = v130;
  if ((~*(void *)&v104 & 0x7FF0000000000000) == 0)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v104 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v104 >= 9.22337204e18)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
LABEL_37:
  sub_1DCD27368((uint64_t)v44);
  uint64_t v106 = v120;
  if (v142(v44, 1, v120) == 1)
  {
    sub_1DCD2479C((uint64_t)v44, &qword_1EBE85808);
    double v107 = 0.0;
LABEL_42:
    CVPixelBufferRef v109 = VICreateCVPixelBufferWithFormat((uint64_t)v104, (uint64_t)v107, 0x42475241u);
    if (v109)
    {
      CVPixelBufferRef v110 = v109;
      uint64_t v111 = v140;
      uint64_t v112 = *(int *)(v140 + 48);
      uint64_t v113 = v127;
      sub_1DCF44698(v92, v127, type metadata accessor for MLModelInfo);
      *(void *)(v113 + v112) = v110;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v138 + 56))(v113, 0, 1, v111);
      uint64_t v114 = v113;
      uint64_t v115 = v128;
      sub_1DCF43CD0(v114, v128);
      uint64_t v116 = v119;
      swift_beginAccess();
      long long v44 = v110;
      sub_1DCF43C68(v115, v116);
      swift_endAccess();
    }
    else
    {
      sub_1DCE4A778();
      swift_allocError();
      *uint64_t v117 = 0xD000000000000024;
      v117[1] = 0x80000001DD06EC00;
      swift_willThrow();
    }
    sub_1DCEA3DA4();
    swift_release();
    goto LABEL_8;
  }
  sub_1DCF44698((uint64_t)v44 + *(int *)(v106 + 20), (uint64_t)v61, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  sub_1DCF43D38((uint64_t)v44, type metadata accessor for MLModelImageInput);
  uint64_t v108 = v61[1];
  uint64_t result = sub_1DCF43D38((uint64_t)v61, type metadata accessor for Argos_Protos_MLModel_ImageFeatureType);
  double v107 = (double)v108;
  if ((~COERCE__INT64((double)v108) & 0x7FF0000000000000) != 0)
  {
    if (v107 > -9.22337204e18)
    {
      if (v107 < 9.22337204e18) {
        goto LABEL_42;
      }
      goto LABEL_49;
    }
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1DCF42044(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85670);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD048068();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = 0x656E69676E454C4DLL;
  v19[1] = 0xE800000000000000;
  void v19[2] = "ScaledBufferCache.handle";
  v19[3] = 24;
  char v20 = 2;
  type metadata accessor for DurationMeasurement();
  swift_allocObject();
  sub_1DCEA469C((uint64_t)v19, 0);
  if ((a1 & 0x3E) != 0)
  {
    sub_1DCDB40EC((uint64_t)v10);
    uint64_t v11 = sub_1DD048048();
    os_log_type_t v12 = sub_1DD048848();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 134217984;
      v18[0] = a1;
      sub_1DD048A28();
      _os_log_impl(&dword_1DCCF9000, v11, v12, "ScaledBufferCache.handle %ld", v13, 0xCu);
      MEMORY[0x1E01B07E0](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v14 = (os_unfair_lock_s *)(*(void *)(v2 + 24) + 16);
    os_unfair_lock_lock(v14);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86DE8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
    uint64_t v16 = v2 + OBJC_IVAR____TtCV18VisualIntelligence22EspressoRequestHandler17ScaledBufferCache_cache;
    swift_beginAccess();
    sub_1DCF43C68((uint64_t)v6, v16);
    swift_endAccess();
    os_unfair_lock_unlock(v14);
  }
  sub_1DCEA3DA4();
  return swift_release();
}

uint64_t sub_1DCF42308()
{
  swift_release();
  return sub_1DCD2479C(v0 + OBJC_IVAR____TtCV18VisualIntelligence22EspressoRequestHandler17ScaledBufferCache_cache, &qword_1EBE85670);
}

uint64_t sub_1DCF4233C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v3, sel_removeObserver_, v1);
    swift_unknownObjectRelease();
  }
  *(void *)(v0 + 16) = 0;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  sub_1DCD2479C(v0 + OBJC_IVAR____TtCV18VisualIntelligence22EspressoRequestHandler17ScaledBufferCache_cache, &qword_1EBE85670);
  return swift_deallocClassInstance();
}

uint64_t sub_1DCF42434()
{
  return type metadata accessor for EspressoRequestHandler.ScaledBufferCache(0);
}

uint64_t type metadata accessor for EspressoRequestHandler.ScaledBufferCache(uint64_t a1)
{
  return sub_1DCD27FD4(a1, (uint64_t *)&unk_1EBE86EB0);
}

void sub_1DCF4245C()
{
  sub_1DCF424FC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1DCF424FC()
{
  if (!qword_1EBE86DF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBE86DE8);
    unint64_t v0 = sub_1DD048A08();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBE86DF0);
    }
  }
}

void *sub_1DCF42558(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (int *)type metadata accessor for MLModelInfo(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1DD046478();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = v8[6];
    uint64_t v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v8[7];
    uint64_t v19 = (void *)((char *)v4 + v18);
    char v20 = (void *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    *((unsigned char *)v4 + v8[8]) = *((unsigned char *)a2 + v8[8]);
    *(void *)((char *)v4 + v8[9]) = *(void *)((char *)a2 + v8[9]);
    *(void *)((char *)v4 + v8[10]) = *(void *)((char *)a2 + v8[10]);
    *(void *)((char *)v4 + v8[11]) = *(void *)((char *)a2 + v8[11]);
    *(void *)((char *)v4 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
  }
  return v4;
}

uint64_t sub_1DCF426EC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for MLModelInfo(0) + 20);
  uint64_t v3 = sub_1DD046478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_unknownObjectRelease();
}

void *sub_1DCF427C8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for MLModelInfo(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1DD046478();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v7[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
  *(void *)((char *)a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
  *(void *)((char *)a1 + v7[10]) = *(void *)((char *)a2 + v7[10]);
  *(void *)((char *)a1 + v7[11]) = *(void *)((char *)a2 + v7[11]);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  return a1;
}

void *sub_1DCF4290C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for MLModelInfo(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DD046478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = v6[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v6[7];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v6[11]) = *(void *)((char *)a2 + v6[11]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *sub_1DCF42A90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for MLModelInfo(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1DD046478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  *(void *)((char *)a1 + v6[11]) = *(void *)((char *)a2 + v6[11]);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1DCF42B7C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for MLModelInfo(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1DD046478();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[7];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
  *(void *)((char *)a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v7[10]) = *(void *)((char *)a2 + v7[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v7[11]) = *(void *)((char *)a2 + v7[11]);
  swift_release();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1DCF42CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF42CC4);
}

uint64_t sub_1DCF42CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MLModelInfo(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1DCF42D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF42DA4);
}

uint64_t sub_1DCF42DA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for MLModelInfo(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t sub_1DCF42E60()
{
  uint64_t result = type metadata accessor for MLModelInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCF42EF4(uint64_t a1)
{
  return sub_1DCF3F548(a1);
}

uint64_t sub_1DCF42F1C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1DD048F68();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_130;
    }
    if (v4) {
      return sub_1DCF4374C(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_138;
  }
  uint64_t v90 = result;
  unsigned int v85 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v100 = MEMORY[0x1E4FBC860];
    uint64_t v98 = (char *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_96:
      if (v11 >= 2)
      {
        uint64_t v79 = *v85;
        do
        {
          unint64_t v80 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_125;
          }
          if (!v79) {
            goto LABEL_137;
          }
          uint64_t v81 = *(void *)&v9[16 * v80 + 32];
          uint64_t v82 = *(void *)&v9[16 * v11 + 24];
          sub_1DCF43894((char *)(v79 + 8 * v81), (char *)(v79 + 8 * *(void *)&v9[16 * v11 + 16]), v79 + 8 * v82, v98);
          if (v2) {
            break;
          }
          if (v82 < v81) {
            goto LABEL_126;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v9 = sub_1DCD729EC((uint64_t)v9);
          }
          if (v80 >= *((void *)v9 + 2)) {
            goto LABEL_127;
          }
          uint64_t v83 = &v9[16 * v80 + 32];
          *(void *)uint64_t v83 = v81;
          *((void *)v83 + 1) = v82;
          unint64_t v84 = *((void *)v9 + 2);
          if (v11 > v84) {
            goto LABEL_128;
          }
          memmove(&v9[16 * v11 + 16], &v9[16 * v11 + 32], 16 * (v84 - v11));
          *((void *)v9 + 2) = v84 - 1;
          unint64_t v11 = v84 - 1;
        }
        while (v84 > 2);
      }
LABEL_107:
      swift_bridgeObjectRelease();
      *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1DD0486D8();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    type metadata accessor for EspressoRequest(0);
    uint64_t v8 = sub_1DD0486F8();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    uint64_t v98 = (char *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v100 = v8;
  }
  uint64_t v10 = 0;
  uint64_t v86 = *a1 - 8;
  uint64_t v87 = *a1 + 16;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v93 = v4;
  uint64_t v99 = *a1;
  while (1)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v10 + 1;
    if (v10 + 1 < v4)
    {
      uint64_t v94 = v10;
      type metadata accessor for MLModelInfo(0);
      swift_retain();
      swift_retain();
      sub_1DD0463B8();
      uint64_t v95 = sub_1DD0485E8();
      swift_bridgeObjectRelease();
      uint64_t v12 = v94;
      sub_1DD0463B8();
      uint64_t v91 = sub_1DD0485E8();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v13 = v94 + 2;
      if (v94 + 2 < v4)
      {
        uint64_t v88 = v2;
        uint64_t v14 = v87 + 8 * v94;
        while (1)
        {
          swift_retain();
          swift_retain();
          sub_1DD0463B8();
          uint64_t v15 = sub_1DD0485E8();
          swift_bridgeObjectRelease();
          sub_1DD0463B8();
          uint64_t v16 = sub_1DD0485E8();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          if (v95 < v91 == v15 >= v16) {
            break;
          }
          ++v13;
          v14 += 8;
          uint64_t v4 = v93;
          if (v93 == v13)
          {
            uint64_t v13 = v93;
            uint64_t v2 = v88;
            goto LABEL_22;
          }
        }
        uint64_t v2 = v88;
        uint64_t v4 = v93;
LABEL_22:
        uint64_t v12 = v94;
      }
      if (v95 < v91)
      {
        if (v13 < v12) {
          goto LABEL_131;
        }
        if (v12 < v13)
        {
          uint64_t v17 = (uint64_t *)(v86 + 8 * v13);
          uint64_t v18 = v13;
          uint64_t v19 = v12;
          uint64_t v20 = (uint64_t *)(v99 + 8 * v12);
          do
          {
            if (v19 != --v18)
            {
              if (!v99) {
                goto LABEL_136;
              }
              uint64_t v21 = *v20;
              *uint64_t v20 = *v17;
              *uint64_t v17 = v21;
            }
            ++v19;
            --v17;
            ++v20;
          }
          while (v19 < v18);
        }
      }
    }
    if (v13 < v4)
    {
      if (__OFSUB__(v13, v12)) {
        goto LABEL_129;
      }
      if (v13 - v12 < v90) {
        break;
      }
    }
LABEL_48:
    if (v13 < v12) {
      goto LABEL_124;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1DCD71FDC(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v29 = *((void *)v9 + 2);
    unint64_t v28 = *((void *)v9 + 3);
    unint64_t v11 = v29 + 1;
    uint64_t v30 = v99;
    if (v29 >= v28 >> 1)
    {
      uint64_t v78 = sub_1DCD71FDC((char *)(v28 > 1), v29 + 1, 1, v9);
      uint64_t v30 = v99;
      uint64_t v9 = v78;
    }
    *((void *)v9 + 2) = v11;
    uint64_t v31 = v9 + 32;
    uint64_t v32 = &v9[16 * v29 + 32];
    *(void *)uint64_t v32 = v12;
    *((void *)v32 + 1) = v13;
    uint64_t v97 = v13;
    if (v29)
    {
      while (1)
      {
        unint64_t v33 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v38 = &v31[16 * v11];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_113;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_114;
          }
          unint64_t v45 = v11 - 2;
          unsigned int v46 = &v31[16 * v11 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_116;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_119;
          }
          if (v50 >= v41)
          {
            uint64_t v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_123;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_85;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v62 = *((void *)v9 + 4);
            uint64_t v63 = *((void *)v9 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_79;
          }
          uint64_t v35 = *((void *)v9 + 4);
          uint64_t v34 = *((void *)v9 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_115;
        }
        unint64_t v45 = v11 - 2;
        uint64_t v51 = &v31[16 * v11 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_118;
        }
        uint64_t v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_121;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_122;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_85:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_87;
        }
LABEL_79:
        if (v56) {
          goto LABEL_117;
        }
        uint64_t v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_120;
        }
        if (v67 < v55) {
          goto LABEL_14;
        }
LABEL_87:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v11)
        {
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
          goto LABEL_133;
        }
        if (!v30) {
          goto LABEL_135;
        }
        uint64_t v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        uint64_t v75 = &v31[16 * v33];
        uint64_t v76 = *((void *)v75 + 1);
        sub_1DCF43894((char *)(v30 + 8 * *(void *)v73), (char *)(v30 + 8 * *(void *)v75), v30 + 8 * v76, v98);
        if (v2) {
          goto LABEL_107;
        }
        if (v76 < v74) {
          goto LABEL_110;
        }
        if (v33 > *((void *)v9 + 2)) {
          goto LABEL_111;
        }
        *(void *)uint64_t v73 = v74;
        *(void *)&v31[16 * v72 + 8] = v76;
        unint64_t v77 = *((void *)v9 + 2);
        if (v33 >= v77) {
          goto LABEL_112;
        }
        unint64_t v11 = v77 - 1;
        memmove(&v31[16 * v33], v75 + 16, 16 * (v77 - 1 - v33));
        *((void *)v9 + 2) = v77 - 1;
        uint64_t v30 = v99;
        if (v77 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    uint64_t v4 = v93;
    uint64_t v10 = v97;
    if (v97 >= v93) {
      goto LABEL_96;
    }
  }
  if (__OFADD__(v12, v90)) {
    goto LABEL_132;
  }
  if (v12 + v90 >= v4) {
    uint64_t v22 = v4;
  }
  else {
    uint64_t v22 = v12 + v90;
  }
  if (v22 >= v12)
  {
    if (v13 != v22)
    {
      uint64_t v89 = v2;
      type metadata accessor for MLModelInfo(0);
      uint64_t v23 = (void *)(v86 + 8 * v13);
      uint64_t v92 = v22;
      do
      {
        uint64_t v24 = v12;
        BOOL v96 = v23;
        do
        {
          swift_retain();
          swift_retain();
          sub_1DD0463B8();
          uint64_t v25 = sub_1DD0485E8();
          swift_bridgeObjectRelease();
          sub_1DD0463B8();
          uint64_t v26 = sub_1DD0485E8();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          if (v25 >= v26) {
            break;
          }
          if (!v99) {
            goto LABEL_134;
          }
          uint64_t v27 = *v23;
          *uint64_t v23 = v23[1];
          v23[1] = v27;
          --v23;
          ++v24;
        }
        while (v13 != v24);
        ++v13;
        uint64_t v23 = v96 + 1;
      }
      while (v13 != v92);
      uint64_t v13 = v92;
      uint64_t v2 = v89;
    }
    goto LABEL_48;
  }
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  uint64_t result = sub_1DD048C98();
  __break(1u);
  return result;
}

uint64_t sub_1DCF4374C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v12 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    type metadata accessor for MLModelInfo(0);
    uint64_t v14 = v5;
    uint64_t v6 = (void *)(v5 + 8 * v4 - 8);
LABEL_5:
    uint64_t v7 = v12;
    uint64_t v13 = v6;
    while (1)
    {
      swift_retain();
      swift_retain();
      sub_1DD0463B8();
      uint64_t v8 = sub_1DD0485E8();
      swift_bridgeObjectRelease();
      sub_1DD0463B8();
      uint64_t v9 = sub_1DD0485E8();
      swift_release();
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 >= v9)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v13 + 1;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v14) {
        break;
      }
      uint64_t v10 = *v6;
      *uint64_t v6 = v6[1];
      v6[1] = v10;
      --v6;
      if (v4 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCF43894(char *__src, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = a2 - __src;
  int64_t v7 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v7 = a2 - __src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v31 = __src;
  uint64_t v30 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 < -7) {
      goto LABEL_45;
    }
    if (a4 != a2 || &a2[8 * v11] <= a4) {
      memmove(a4, a2, 8 * v11);
    }
    uint64_t v18 = &a4[8 * v11];
    unint64_t v29 = v18;
    uint64_t v31 = v4;
    if (v5 >= v4 || v9 < 8) {
      goto LABEL_44;
    }
    type metadata accessor for MLModelInfo(0);
    uint64_t v19 = (char *)(a3 - 8);
    uint64_t v20 = v4;
    while (1)
    {
      uint64_t v25 = v18;
      uint64_t v27 = v19 + 8;
      v18 -= 8;
      v20 -= 8;
      swift_retain();
      swift_retain();
      sub_1DD0463B8();
      uint64_t v21 = sub_1DD0485E8();
      swift_bridgeObjectRelease();
      sub_1DD0463B8();
      uint64_t v22 = sub_1DD0485E8();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v21 < v22) {
        break;
      }
      unint64_t v29 = v18;
      if (v27 < v25 || v19 >= v25)
      {
        *(void *)uint64_t v19 = *(void *)v18;
        uint64_t v20 = v4;
        goto LABEL_32;
      }
      if (v27 != v25) {
        *(void *)uint64_t v19 = *(void *)v18;
      }
      uint64_t v20 = v4;
      if (v4 <= v5) {
        goto LABEL_44;
      }
LABEL_33:
      v19 -= 8;
      uint64_t v4 = v20;
      if (v18 <= a4) {
        goto LABEL_44;
      }
    }
    uint64_t v18 = v25;
    if (v27 != v4 || v19 >= v4) {
      *(void *)uint64_t v19 = *(void *)v20;
    }
    uint64_t v31 = v20;
LABEL_32:
    if (v20 <= v5) {
      goto LABEL_44;
    }
    goto LABEL_33;
  }
  if (v6 >= -7)
  {
    if (a4 != __src || &__src[8 * v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    uint64_t v26 = &a4[8 * v8];
    unint64_t v29 = v26;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      type metadata accessor for MLModelInfo(0);
      uint64_t v12 = a4;
      do
      {
        uint64_t v13 = v5;
        swift_retain();
        swift_retain();
        sub_1DD0463B8();
        uint64_t v14 = sub_1DD0485E8();
        swift_bridgeObjectRelease();
        sub_1DD0463B8();
        uint64_t v15 = sub_1DD0485E8();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        if (v14 >= v15)
        {
          uint64_t v17 = v13;
          if (v13 != v12) {
            *(void *)uint64_t v13 = *(void *)v12;
          }
          v12 += 8;
          uint64_t v30 = v12;
          uint64_t v16 = v4;
        }
        else
        {
          uint64_t v16 = v4 + 8;
          uint64_t v17 = v13;
          if (v13 < v4 || v13 >= v16 || v13 != v4) {
            *(void *)uint64_t v13 = *(void *)v4;
          }
        }
        uint64_t v5 = v17 + 8;
        if (v12 >= v26) {
          break;
        }
        uint64_t v4 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v31 = v5;
    }
LABEL_44:
    sub_1DCD722E0(&v31, &v30, &v29);
    return 1;
  }
LABEL_45:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCF43C68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF43CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1DCF43D38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for EspressoRequestHandler(uint64_t result)
{
  uint64_t v1 = result;
  if (*(void *)(result + 24)) {
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
  }
  if (*(void *)(v1 + 64))
  {
    return __swift_destroy_boxed_opaque_existential_1(v1 + 40);
  }
  return result;
}

uint64_t initializeWithCopy for EspressoRequestHandler(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  int64_t v7 = (_OWORD *)(a1 + 40);
  uint64_t v8 = (_OWORD *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 64);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 56);
    *int64_t v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  return a1;
}

uint64_t assignWithCopy for EspressoRequestHandler(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (v4)
  {
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v5 = *a2;
  long long v6 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  uint64_t v7 = *((void *)a2 + 8);
  if (!*(void *)(a1 + 64))
  {
    if (v7)
    {
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
      return a1;
    }
LABEL_14:
    long long v8 = *(long long *)((char *)a2 + 40);
    long long v9 = *(long long *)((char *)a2 + 56);
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = v9;
    return a1;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
  return a1;
}

uint64_t assignWithTake for EspressoRequestHandler(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for EspressoRequestHandler(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EspressoRequestHandler(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EspressoRequestHandler()
{
  return &type metadata for EspressoRequestHandler;
}

ValueMetadata *type metadata accessor for EspressoModelRequest()
{
  return &type metadata for EspressoModelRequest;
}

uint64_t sub_1DCF44148(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1DCF44180()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  if (*(void *)(v0 + 80)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, 104, 7);
}

uint64_t sub_1DCF441D8()
{
  return sub_1DCF3FFC8(v0 + 16, *(void *)(v0 + 96));
}

uint64_t sub_1DCF441E4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1DCF441F4()
{
  return sub_1DCDD151C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

id sub_1DCF44214(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v10 = v9;
  uint64_t v18 = (void *)sub_1DD0463E8();
  if (!a5)
  {
    uint64_t v19 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v20 = 0;
    goto LABEL_6;
  }
  uint64_t v19 = (void *)sub_1DD0483D8();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v20 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v21 = (void *)sub_1DD0486A8();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v10, sel_initWithMLNetURL_expectedInputSize_imageInputName_featureNames_outputNames_preferredMetalDevice_usesCPUOnly_, v18, v19, v20, v21, a8, a9 & 1, a2, a3);

  uint64_t v23 = sub_1DD046478();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(a1, v23);
  return v22;
}

id sub_1DCF44370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Argos_Protos_MLModel_FeatureDescription(0);
  MEMORY[0x1F4188790](v4 - 8);
  long long v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1DD046478();
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85808);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_model;
  sub_1DCD27368((uint64_t)&v29 - v14);
  if (*(void *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_features))
  {
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_1DCF4D91C(v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = 0;
  }
  type metadata accessor for MLModelInfo(0);
  sub_1DD046408();
  double v19 = sub_1DCD27D54();
  double v21 = v20;
  sub_1DCD2889C((uint64_t)v15, (uint64_t)v13, &qword_1EBE85808);
  uint64_t v22 = type metadata accessor for MLModelImageInput(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v13, 1, v22) == 1)
  {
    sub_1DCD2479C((uint64_t)v13, &qword_1EBE85808);
    uint64_t v23 = 0;
    uint64_t v24 = 0;
  }
  else
  {
    sub_1DCF44698((uint64_t)v13, (uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
    sub_1DCF43D38((uint64_t)v13, type metadata accessor for MLModelImageInput);
    uint64_t v23 = *v6;
    uint64_t v24 = v6[1];
    swift_bridgeObjectRetain();
    sub_1DCF43D38((uint64_t)v6, type metadata accessor for Argos_Protos_MLModel_FeatureDescription);
  }
  uint64_t v25 = *(void *)(v16 + *(int *)(type metadata accessor for EspressoModel(0) + 20));
  char v26 = *(unsigned char *)(a1 + OBJC_IVAR____TtC18VisualIntelligence15EspressoRequest_usesCPUOnly);
  objc_allocWithZone((Class)VIEspressoRunner);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v27 = sub_1DCF44214((uint64_t)v9, v19, v21, v23, v24, (uint64_t)v18, a2, v25, v26);
  swift_unknownObjectRelease();
  sub_1DCD2479C((uint64_t)v15, &qword_1EBE85808);
  return v27;
}

uint64_t sub_1DCF44698(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PlaceholderSimilarityClient()
{
  return self;
}

uint64_t sub_1DCF44724()
{
  return swift_willThrow();
}

unint64_t sub_1DCF4476C()
{
  unint64_t result = qword_1EAB04290;
  if (!qword_1EAB04290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04290);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlaceholderSimilarityClient.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1DCF4485CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderSimilarityClient.Error()
{
  return &type metadata for PlaceholderSimilarityClient.Error;
}

unint64_t sub_1DCF44898()
{
  unint64_t result = qword_1EAB04298;
  if (!qword_1EAB04298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04298);
  }
  return result;
}

id sub_1DCF448EC(id result, char a2, unint64_t a3)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v3 = (uint64_t)result;
    if (a3 >> 62)
    {
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1DD048CC8();
      if (v4) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_4:
        unint64_t v5 = 0;
        do
        {
          if ((a3 & 0xC000000000000001) != 0)
          {
            id v6 = (id)MEMORY[0x1E01AE890](v5, a3);
          }
          else
          {
            if (v5 >= *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_29;
            }
            id v6 = *(id *)(a3 + 32 + 8 * v5);
          }
          id v7 = v6;
          BOOL v8 = __OFADD__(v5, 1);
          unint64_t v9 = v5 + 1;
          if (v8)
          {
            __break(1u);
LABEL_28:
            __break(1u);
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          unint64_t result = objc_msgSend(v6, sel_results);
          if (!result)
          {
            __break(1u);
            return result;
          }
          uint64_t v10 = result;
          double v21 = v7;
          sub_1DCD95648(0, (unint64_t *)&qword_1EAB032F8);
          unint64_t v11 = sub_1DD0486B8();

          unint64_t v22 = v9;
          if (v11 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v12 = sub_1DD048CC8();
            swift_bridgeObjectRelease();
            if (!v12) {
              goto LABEL_5;
            }
          }
          else
          {
            uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (!v12) {
              goto LABEL_5;
            }
          }
          if (v12 < 1) {
            goto LABEL_28;
          }
          for (uint64_t i = 0; i != v12; ++i)
          {
            if ((v11 & 0xC000000000000001) != 0) {
              id v14 = (id)MEMORY[0x1E01AE890](i, v11);
            }
            else {
              id v14 = *(id *)(v11 + 8 * i + 32);
            }
            uint64_t v15 = v14;
            objc_msgSend(v14, sel_setQueryId_, v3);
            id v16 = objc_msgSend(v15, sel_inlineCard);
            if (v16)
            {
              uint64_t v17 = v16;
              sub_1DCF44B98(v3, v16);
            }
            id v18 = objc_msgSend(v15, sel_card);
            if (v18)
            {
              id v19 = v18;
              sub_1DCF44B98(v3, v18);

              uint64_t v15 = v19;
            }
          }
LABEL_5:

          swift_bridgeObjectRelease();
          unint64_t v5 = v22;
        }
        while (v22 != v4);
      }
    }
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1DCF44B98(uint64_t a1, void *a2)
{
  objc_msgSend(a2, sel_setQueryId_, a1);
  uint64_t v4 = &selRef_parseCameraFrameWithVisualQuery_completion_;
  id result = objc_msgSend(a2, sel_cardSections);
  if (result)
  {
    id v6 = result;
    sub_1DCD95648(0, &qword_1EAB02EC8);
    unint64_t v7 = sub_1DD0486B8();

    if (v7 >> 62) {
      goto LABEL_33;
    }
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v8)
    {
      unint64_t v9 = 0;
      unint64_t v29 = v7 & 0xC000000000000001;
      unint64_t v27 = v7 + 32;
      uint64_t v28 = v7 & 0xFFFFFFFFFFFFFF8;
      uint64_t v25 = v8;
      unint64_t v26 = v7;
      while (1)
      {
        if (v29)
        {
          id v10 = (id)MEMORY[0x1E01AE890](v9, v7);
        }
        else
        {
          if (v9 >= *(void *)(v28 + 16)) {
            goto LABEL_31;
          }
          id v10 = *(id *)(v27 + 8 * v9);
        }
        unint64_t v11 = v10;
        if (__OFADD__(v9++, 1)) {
          break;
        }
        id v13 = objc_msgSend(v10, sel_nextCard);
        if (v13)
        {
          id v14 = v13;
          sub_1DCF44B98(a1, v13);
        }
        self;
        uint64_t v15 = (void *)swift_dynamicCastObjCClass();
        if (v15 && (id v16 = [v15 v4[396]]) != 0)
        {
          uint64_t v17 = v16;
          unint64_t v18 = sub_1DD0486B8();

          if (v18 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v19 = sub_1DD048CC8();
            swift_bridgeObjectRelease();
            if (!v19)
            {
LABEL_28:

              swift_bridgeObjectRelease();
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (!v19) {
              goto LABEL_28;
            }
          }
          if (v19 < 1) {
            goto LABEL_32;
          }
          for (uint64_t i = 0; i != v19; ++i)
          {
            if ((v18 & 0xC000000000000001) != 0) {
              id v21 = (id)MEMORY[0x1E01AE890](i, v18);
            }
            else {
              id v21 = *(id *)(v18 + 8 * i + 32);
            }
            unint64_t v22 = v21;
            id v23 = objc_msgSend(v21, sel_nextCard, v25, v26);
            if (v23)
            {
              uint64_t v24 = v23;
              sub_1DCF44B98(a1, v23);
            }
          }

          swift_bridgeObjectRelease();
          uint64_t v4 = &selRef_parseCameraFrameWithVisualQuery_completion_;
          uint64_t v8 = v25;
          unint64_t v7 = v26;
        }
        else
        {
        }
LABEL_6:
        if (v9 == v8) {
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1DD048CC8();
      swift_bridgeObjectRelease();
    }
LABEL_34:
    return (id)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCF44E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a4;
  uint64_t v20 = a3;
  uint64_t v5 = sub_1DD046C58();
  MEMORY[0x1F4188790](v5);
  uint64_t v18 = sub_1DD046E18();
  MEMORY[0x1F4188790](v18);
  uint64_t v17 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD0466D8();
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = *(void **)(a2 + 160);
  if (v9)
  {
    v15[1] = v15;
    MEMORY[0x1F4188790](v8);
    uint64_t v16 = a2;
    v15[-2] = v9;
    sub_1DCF46B08(&qword_1EAB042B0, MEMORY[0x1E4F885E8]);
    id v10 = v9;
    a2 = v16;
    sub_1DD047E78();
  }
  else
  {
    sub_1DD0466C8();
  }
  uint64_t v11 = sub_1DD046718();
  MEMORY[0x1F4188790](v11);
  v15[-2] = a2;
  sub_1DCF46B08(&qword_1EAB042A0, MEMORY[0x1E4F89050]);
  sub_1DD047E78();
  uint64_t v12 = sub_1DD046738();
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = v19;
  v15[-2] = v20;
  v15[-1] = v13;
  sub_1DCF46B08(&qword_1EAB042A8, MEMORY[0x1E4F88F10]);
  sub_1DD047E78();
  return sub_1DD046728();
}

uint64_t sub_1DCF451FC(uint64_t a1, uint64_t a2)
{
  return sub_1DD046EC8();
}

uint64_t sub_1DCF45258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1DD046EE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1DCF4680C(a2);
  sub_1DD046ED8();
  int64_t v10 = *(void *)(a3 + 16);
  if (v10)
  {
    v18[1] = a1;
    uint64_t v22 = MEMORY[0x1E4FBC860];
    uint64_t v11 = sub_1DCFC5AA0(0, v10, 0);
    uint64_t v12 = a3 + 32;
    v18[2] = v7 + 32;
    uint64_t v19 = v7;
    do
    {
      long long v13 = *(_OWORD *)(v12 + 16);
      v20[0] = *(_OWORD *)v12;
      v20[1] = v13;
      v20[2] = *(_OWORD *)(v12 + 32);
      uint64_t v21 = *(void *)(v12 + 48);
      MEMORY[0x1F4188790](v11);
      v18[-2] = v20;
      sub_1DCD64B20((uint64_t)v20);
      sub_1DCF46B08(&qword_1EAB042D8, MEMORY[0x1E4F89210]);
      sub_1DD047E78();
      sub_1DCD64B4C((uint64_t)v20);
      uint64_t v14 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1DCFC5AA0(0, *(void *)(v14 + 16) + 1, 1);
        uint64_t v14 = v22;
      }
      unint64_t v16 = *(void *)(v14 + 16);
      unint64_t v15 = *(void *)(v14 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1DCFC5AA0(v15 > 1, v16 + 1, 1);
        uint64_t v14 = v22;
      }
      *(void *)(v14 + 16) = v16 + 1;
      uint64_t v11 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v19 + 32))(v14+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v16, v9, v6);
      uint64_t v22 = v14;
      v12 += 56;
      --v10;
    }
    while (v10);
  }
  return sub_1DD046EF8();
}

uint64_t sub_1DCF454F0(uint64_t *a1)
{
  uint64_t v71 = sub_1DD046B68();
  uint64_t v83 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v88 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v87 = (char *)&v70 - v4;
  uint64_t v86 = sub_1DD046F18();
  uint64_t v5 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  unsigned int v85 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1DD046BC8();
  MEMORY[0x1F4188790](v82);
  unint64_t v84 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v81 = a1[1];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v79 = v7;
    uint64_t v11 = 0;
    uint64_t v78 = swift_bridgeObjectRetain();
    uint64_t v12 = (void *)(v78 + 80);
    uint64_t v13 = MEMORY[0x1E4FBC868];
    uint64_t v72 = 0;
    do
    {
      uint64_t v14 = *(v12 - 5);
      uint64_t v80 = *(v12 - 6);
      int v15 = *((_DWORD *)v12 - 8);
      CGFloat v16 = *((double *)v12 - 3);
      CGFloat v17 = *((double *)v12 - 2);
      CGFloat v18 = *((double *)v12 - 1);
      CGFloat v19 = *(double *)v12;
      swift_bridgeObjectRetain_n();
      sub_1DCD33E90((uint64_t)v11);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v89 = v13;
      unint64_t v22 = sub_1DCEAD508(v16, v17, v18, v19);
      uint64_t v23 = *(void *)(v13 + 16);
      BOOL v24 = (v21 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24))
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      char v26 = v21;
      if (*(void *)(v13 + 24) >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1DCE8BE4C();
          uint64_t v13 = v89;
        }
      }
      else
      {
        sub_1DCE84440(v25, isUniquelyReferenced_nonNull_native);
        uint64_t v13 = v89;
        unint64_t v27 = sub_1DCEAD508(v16, v17, v18, v19);
        if ((v26 & 1) != (v28 & 1)) {
          goto LABEL_53;
        }
        unint64_t v22 = v27;
      }
      swift_bridgeObjectRelease();
      if (v26)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        *(void *)(v13 + 8 * (v22 >> 6) + 64) |= 1 << v22;
        unint64_t v29 = (CGFloat *)(*(void *)(v13 + 48) + 32 * v22);
        *unint64_t v29 = v16;
        v29[1] = v17;
        void v29[2] = v18;
        v29[3] = v19;
        *(void *)(*(void *)(v13 + 56) + 8 * v22) = MEMORY[0x1E4FBC860];
        uint64_t v30 = *(void *)(v13 + 16);
        uint64_t v31 = v30 + 1;
        BOOL v32 = __OFADD__(v30, 1);
        swift_bridgeObjectRetain();
        if (v32) {
          goto LABEL_51;
        }
        *(void *)(v13 + 16) = v31;
      }
      uint64_t v33 = *(void *)(v13 + 56);
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void **)(v33 + 8 * v22);
      char v35 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v33 + 8 * v22) = v34;
      if ((v35 & 1) == 0)
      {
        uint64_t v34 = sub_1DCE9EA78(0, v34[2] + 1, 1, v34);
        *(void *)(v33 + 8 * v22) = v34;
      }
      unint64_t v37 = v34[2];
      unint64_t v36 = v34[3];
      if (v37 >= v36 >> 1)
      {
        uint64_t v34 = sub_1DCE9EA78((void *)(v36 > 1), v37 + 1, 1, v34);
        *(void *)(v33 + 8 * v22) = v34;
      }
      long long v34[2] = v37 + 1;
      uint64_t v38 = &v34[7 * v37];
      v38[4] = v80;
      void v38[5] = v14;
      *((_DWORD *)v38 + 12) = v15;
      *((CGFloat *)v38 + 7) = v16;
      *((CGFloat *)v38 + 8) = v17;
      *((CGFloat *)v38 + 9) = v18;
      *((CGFloat *)v38 + 10) = v19;
      swift_bridgeObjectRelease();
      v12 += 7;
      uint64_t v11 = sub_1DCDC8E78;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v70 = sub_1DCDC8E78;
    uint64_t v7 = v79;
  }
  else
  {
    uint64_t v13 = MEMORY[0x1E4FBC868];
    uint64_t v70 = 0;
  }
  uint64_t v39 = *(void *)(v13 + 64);
  uint64_t v73 = v13 + 64;
  uint64_t v40 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v41 = -1;
  if (v40 < 64) {
    uint64_t v41 = ~(-1 << v40);
  }
  unint64_t v42 = v41 & v39;
  int64_t v74 = (unint64_t)(v40 + 63) >> 6;
  uint64_t v78 = v83 + 32;
  uint64_t v79 = (void (**)(char *, char *, uint64_t))(v83 + 16);
  uint64_t v76 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v77 = v83 + 8;
  uint64_t v75 = (void (**)(char *, uint64_t))(v7 + 1);
  swift_bridgeObjectRetain();
  int64_t v43 = 0;
  unint64_t v44 = MEMORY[0x1E4FBC860];
  uint64_t v45 = v71;
  uint64_t v80 = v13;
  uint64_t v46 = (uint64_t)v85;
  if (!v42) {
    goto LABEL_27;
  }
LABEL_26:
  unint64_t v47 = __clz(__rbit64(v42));
  v42 &= v42 - 1;
  for (unint64_t i = v47 | (v43 << 6); ; unint64_t i = __clz(__rbit64(v50)) + (v43 << 6))
  {
    uint64_t v52 = (double *)(*(void *)(v13 + 48) + 32 * i);
    CGFloat v53 = *v52;
    CGFloat v54 = v52[1];
    CGFloat v55 = v52[2];
    CGFloat v56 = v52[3];
    uint64_t v57 = *(void *)(*(void *)(v13 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    uint64_t v58 = (uint64_t)v84;
    sub_1DD046BB8();
    v90.origin.CGFloat x = VIFlipOriginNormalizedRect(v53, v54, v55, v56);
    CGFloat x = v90.origin.x;
    CGFloat y = v90.origin.y;
    CGFloat width = v90.size.width;
    CGFloat height = v90.size.height;
    CGRectGetMinX(v90);
    sub_1DD046B78();
    v91.origin.CGFloat x = x;
    v91.origin.CGFloat y = y;
    v91.size.CGFloat width = width;
    v91.size.CGFloat height = height;
    CGRectGetMinY(v91);
    sub_1DD046B88();
    v92.origin.CGFloat x = x;
    v92.origin.CGFloat y = y;
    v92.size.CGFloat width = width;
    v92.size.CGFloat height = height;
    CGRectGetWidth(v92);
    sub_1DD046B98();
    v93.origin.CGFloat x = x;
    v93.origin.CGFloat y = y;
    v93.size.CGFloat width = width;
    v93.size.CGFloat height = height;
    CGRectGetHeight(v93);
    uint64_t v63 = sub_1DD046BA8();
    MEMORY[0x1F4188790](v63);
    *(&v70 - 2) = (void (*)(void *@<X8>))v81;
    *(&v70 - 1) = (void (*)(void *@<X8>))v57;
    sub_1DCF46B08(&qword_1EAB042C0, MEMORY[0x1E4F89220]);
    sub_1DD047E78();
    uint64_t v64 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v64);
    *(&v70 - 2) = (void (*)(void *@<X8>))v58;
    *(&v70 - 1) = (void (*)(void *@<X8>))v46;
    sub_1DCF46B08(&qword_1EAB042C8, MEMORY[0x1E4F88D88]);
    uint64_t v65 = v87;
    sub_1DD047E78();
    (*v79)(v88, v65, v45);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v44 = sub_1DCEA0B10(0, *(void *)(v44 + 16) + 1, 1, v44);
    }
    unint64_t v67 = *(void *)(v44 + 16);
    unint64_t v66 = *(void *)(v44 + 24);
    uint64_t v13 = v80;
    if (v67 >= v66 >> 1) {
      unint64_t v44 = sub_1DCEA0B10(v66 > 1, v67 + 1, 1, v44);
    }
    *(void *)(v44 + 16) = v67 + 1;
    uint64_t v68 = v83;
    (*(void (**)(unint64_t, char *, uint64_t))(v83 + 32))(v44+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v67, v88, v45);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v87, v45);
    (*v76)(v85, v86);
    (*v75)(v84, v82);
    if (v42) {
      goto LABEL_26;
    }
LABEL_27:
    if (__OFADD__(v43++, 1)) {
      goto LABEL_50;
    }
    if (v43 >= v74)
    {
LABEL_48:
      swift_release();
      swift_bridgeObjectRelease();
      sub_1DCD33E90((uint64_t)v70);
      return v44;
    }
    unint64_t v50 = *(void *)(v73 + 8 * v43);
    if (!v50) {
      break;
    }
LABEL_37:
    unint64_t v42 = (v50 - 1) & v50;
  }
  int64_t v51 = v43 + 1;
  if (v43 + 1 >= v74) {
    goto LABEL_48;
  }
  unint64_t v50 = *(void *)(v73 + 8 * v51);
  if (v50) {
    goto LABEL_36;
  }
  int64_t v51 = v43 + 2;
  if (v43 + 2 >= v74) {
    goto LABEL_48;
  }
  unint64_t v50 = *(void *)(v73 + 8 * v51);
  if (v50) {
    goto LABEL_36;
  }
  int64_t v51 = v43 + 3;
  if (v43 + 3 >= v74) {
    goto LABEL_48;
  }
  unint64_t v50 = *(void *)(v73 + 8 * v51);
  if (v50)
  {
LABEL_36:
    int64_t v43 = v51;
    goto LABEL_37;
  }
  while (1)
  {
    int64_t v43 = v51 + 1;
    if (__OFADD__(v51, 1)) {
      break;
    }
    if (v43 >= v74) {
      goto LABEL_48;
    }
    unint64_t v50 = *(void *)(v73 + 8 * v43);
    ++v51;
    if (v50) {
      goto LABEL_37;
    }
  }
LABEL_52:
  __break(1u);
LABEL_53:
  uint64_t result = sub_1DD049028();
  __break(1u);
  return result;
}

uint64_t sub_1DCF45E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DD046BC8();
  double v6 = MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, double))(v8 + 16))((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  sub_1DD046B48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB042D0);
  uint64_t v9 = sub_1DD046F18();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1DD04E910;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 16))(v12 + v11, a3, v9);
  return sub_1DD046B58();
}

uint64_t sub_1DCF45FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1DD046C38();
  MEMORY[0x1F4188790](v5);
  if (a2)
  {
    MEMORY[0x1F4188790](v6);
    *(&v8 - 2) = a2;
    *(&v8 - 1) = a3;
    sub_1DCF46B08(&qword_1EAB042B8, MEMORY[0x1E4F88E68]);
    sub_1DD047E78();
  }
  else
  {
    sub_1DD046C28();
  }
  return sub_1DD046C48();
}

uint64_t sub_1DCF460FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1DD046BC8();
  uint64_t v9 = *(void *)(v8 - 8);
  v10.n128_f64[0] = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v30 = a1;
    uint64_t v31 = a2;
    int64_t v13 = *(void *)(a3 + 16);
    uint64_t v14 = MEMORY[0x1E4FBC860];
    if (v13)
    {
      v29[1] = a4;
      uint64_t v32 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1DCFC5AC0(0, v13, 0);
      uint64_t v14 = v32;
      v29[0] = a3;
      int v15 = (double *)(a3 + 56);
      do
      {
        CGFloat v16 = *(v15 - 3);
        CGFloat v17 = *(v15 - 2);
        CGFloat v18 = *(v15 - 1);
        CGFloat v19 = *v15;
        sub_1DD046BB8();
        v34.origin.CGFloat x = VIFlipOriginNormalizedRect(v16, v17, v18, v19);
        CGFloat x = v34.origin.x;
        CGFloat y = v34.origin.y;
        CGFloat width = v34.size.width;
        CGFloat height = v34.size.height;
        CGRectGetMinX(v34);
        sub_1DD046B78();
        v35.origin.CGFloat x = x;
        v35.origin.CGFloat y = y;
        v35.size.CGFloat width = width;
        v35.size.CGFloat height = height;
        CGRectGetMinY(v35);
        sub_1DD046B88();
        v36.origin.CGFloat x = x;
        v36.origin.CGFloat y = y;
        v36.size.CGFloat width = width;
        v36.size.CGFloat height = height;
        CGRectGetWidth(v36);
        sub_1DD046B98();
        v37.origin.CGFloat x = x;
        v37.origin.CGFloat y = y;
        v37.size.CGFloat width = width;
        v37.size.CGFloat height = height;
        CGRectGetHeight(v37);
        sub_1DD046BA8();
        uint64_t v32 = v14;
        unint64_t v25 = *(void *)(v14 + 16);
        unint64_t v24 = *(void *)(v14 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_1DCFC5AC0(v24 > 1, v25 + 1, 1);
          uint64_t v14 = v32;
        }
        *(void *)(v14 + 16) = v25 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v25, v12, v8);
        v15 += 4;
        --v13;
      }
      while (v13);
      a3 = v29[0];
      swift_bridgeObjectRelease();
    }
    uint64_t v26 = sub_1DD046C08();
    MEMORY[0x1F4188790](v26);
    uint64_t v27 = v31;
    v29[-4] = v30;
    v29[-3] = v27;
    v29[-2] = a3;
    v29[-1] = v14;
    sub_1DCF46B08(&qword_1EAB042E0, MEMORY[0x1E4F88E58]);
    sub_1DD047E78();
    return swift_bridgeObjectRelease();
  }
  else
  {
    return MEMORY[0x1F413DBF0](v10);
  }
}

uint64_t sub_1DCF4642C()
{
  return sub_1DD046BE8();
}

uint64_t sub_1DCF46488(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1DD046F28();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1DD046C08();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1DD046A68();
  double v11 = MEMORY[0x1F4188790](v10);
  (*(void (**)(char *, void, double))(v13 + 104))((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E4F88988], v11);
  sub_1DD046E08();
  swift_bridgeObjectRetain();
  sub_1DD046DF8();
  sub_1DCF460FC(a2[2], a2[3], a2[4], (uint64_t)v9);
  sub_1DD046DB8();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F89228], v3);
  sub_1DD046DE8();
  uint64_t v14 = (void *)a2[20];
  if (v14)
  {
    id v15 = objc_msgSend(v14, sel_applicationIdentifier);
    if (v15)
    {
      CGFloat v16 = v15;
      sub_1DD048408();
    }
  }
  sub_1DD046DD8();
  swift_bridgeObjectRetain();
  return sub_1DD046DC8();
}

uint64_t sub_1DCF46700(uint64_t a1)
{
  return sub_1DCF46488(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1DCF4671C(uint64_t a1)
{
  return sub_1DCF45FB8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DCF46738()
{
  objc_msgSend(*(id *)(v0 + 16), sel_uiScale);
  return sub_1DD046698();
}

uint64_t sub_1DCF46784()
{
  uint64_t v1 = *(void *)(v0 + 24);
  v3[0] = *(void *)(v0 + 16);
  v3[1] = v1;
  sub_1DCF454F0(v3);
  return sub_1DD046B58();
}

uint64_t sub_1DCF467D4(uint64_t a1)
{
  return sub_1DCF45258(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DCF467F0(uint64_t a1)
{
  return sub_1DCF45E24(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1DCF4680C(uint64_t a1)
{
  uint64_t v2 = sub_1DD046258();
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  uint64_t v5 = sub_1DD048F78();
  uint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85228);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1DD04E910;
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1DCD52754();
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 32) = v5;
  *(void *)(v8 + 40) = v7;
  uint64_t v10 = sub_1DD048438();
  uint64_t v12 = v11;
  id v13 = objc_msgSend(self, sel_latestTaxonomyIdentifier);
  uint64_t v14 = sub_1DD048408();
  uint64_t v16 = v15;

  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28F80]), sel_init);
  id v18 = objc_msgSend(v17, sel_operatingSystemVersionString);

  uint64_t v19 = sub_1DD048408();
  uint64_t v21 = v20;

  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1DD04EF60;
  uint64_t v23 = MEMORY[0x1E4FBB1A0];
  *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v22 + 64) = v9;
  *(void *)(v22 + 32) = v19;
  *(void *)(v22 + 40) = v21;
  *(void *)(v22 + 96) = v23;
  *(void *)(v22 + 104) = v9;
  *(void *)(v22 + 72) = v14;
  *(void *)(v22 + 80) = v16;
  sub_1DD048438();
  uint64_t v30 = v10;
  uint64_t v31 = v12;
  swift_bridgeObjectRetain();
  sub_1DD048548();
  swift_bridgeObjectRelease();
  sub_1DD046238();
  sub_1DCD21A84();
  uint64_t v24 = sub_1DD048A78();
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v29);
  swift_bridgeObjectRelease();
  if (v26)
  {
    swift_bridgeObjectRelease();
    return v24;
  }
  return v10;
}

uint64_t sub_1DCF46ACC(uint64_t a1)
{
  return sub_1DCF451FC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1DCF46AE8()
{
  return sub_1DCF4642C();
}

uint64_t sub_1DCF46B08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for S2Polygon()
{
  return &type metadata for S2Polygon;
}

uint64_t sub_1DCF46B60@<X0>(uint64_t *a1@<X8>, float a2@<S0>)
{
  uint64_t v4 = sub_1DD046798();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE848E0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v47 - v12;
  uint64_t v14 = sub_1DD046988();
  uint64_t v54 = v15;
  uint64_t v55 = v14;
  uint64_t v16 = sub_1DD0469A8();
  uint64_t v52 = v17;
  uint64_t v53 = v16;
  sub_1DD0469B8();
  sub_1DD046788();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1DD046458();
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1DD046978();
  uint64_t v48 = v19;
  uint64_t v49 = v18;
  uint64_t v20 = sub_1DD046978();
  uint64_t v22 = v21;
  sub_1DD046998();
  sub_1DD046458();
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_1DD0469A8();
  uint64_t v50 = v24;
  uint64_t v51 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F38);
  uint64_t v25 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C20) - 8);
  unint64_t v26 = (*(unsigned __int8 *)(*(void *)v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v25 + 80);
  uint64_t v27 = swift_allocObject();
  long long v47 = xmmword_1DD04E910;
  *(_OWORD *)(v27 + 16) = xmmword_1DD04E910;
  uint64_t v28 = (uint64_t *)(v27 + v26 + v25[14]);
  sub_1DD0465C8();
  *uint64_t v28 = sub_1DD0469A8();
  v28[1] = v29;
  unint64_t v30 = sub_1DCDB8BB4(v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02F40);
  uint64_t v31 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02C10) - 8);
  unint64_t v32 = (*(unsigned __int8 *)(*(void *)v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v31 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v47;
  uint64_t v34 = v31[14];
  sub_1DD0465C8();
  *(void *)(v33 + v32 + v34) = MEMORY[0x1E4FBC870];
  unint64_t v35 = sub_1DCDB8DB0(v33);
  uint64_t v36 = v54;
  *a1 = v55;
  a1[1] = v36;
  uint64_t v37 = v52;
  a1[2] = v53;
  a1[3] = v37;
  uint64_t v38 = (int *)type metadata accessor for ObjectKnowledge();
  sub_1DCDBF910((uint64_t)v13, (uint64_t)a1 + v38[6]);
  *(_DWORD *)((char *)a1 + v38[7]) = 1065353216;
  uint64_t v39 = (uint64_t *)((char *)a1 + v38[8]);
  uint64_t v40 = v48;
  *uint64_t v39 = v49;
  v39[1] = v40;
  uint64_t v41 = (uint64_t *)((char *)a1 + v38[9]);
  uint64_t *v41 = v20;
  v41[1] = v22;
  sub_1DCDBF910((uint64_t)v10, (uint64_t)a1 + v38[10]);
  *(uint64_t *)((char *)a1 + v38[11]) = MEMORY[0x1E4FBC860];
  unint64_t v42 = (_OWORD *)((char *)a1 + v38[12]);
  uint64_t v42[2] = 0u;
  uint64_t v42[3] = 0u;
  *unint64_t v42 = 0u;
  v42[1] = 0u;
  int64_t v43 = (char *)a1 + v38[13];
  *(void *)int64_t v43 = 0;
  v43[8] = 1;
  *(_OWORD *)((char *)a1 + v38[14]) = xmmword_1DD0535A0;
  unint64_t v44 = (char *)a1 + v38[15];
  *(void *)unint64_t v44 = 0;
  *((_WORD *)v44 + 4) = 0;
  uint64_t v45 = v50;
  *((void *)v44 + 2) = v51;
  *((void *)v44 + 3) = v45;
  *((void *)v44 + 4) = v30;
  *((void *)v44 + 5) = 0x3FF0000000000000;
  v44[48] = 0;
  *((void *)v44 + 7) = 0;
  *((void *)v44 + 8) = 0xE000000000000000;
  *((void *)v44 + 9) = 0;
  *((void *)v44 + 10) = 0xE000000000000000;
  *((void *)v44 + 12) = 0;
  *((void *)v44 + 13) = 0;
  *((void *)v44 + 11) = v35;
  *((_DWORD *)v44 + 28) = 0;
  *(float *)((char *)a1 + v38[16]) = a2;
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, int *))(*((void *)v38 - 1) + 56))(a1, 0, 1, v38);
}

id CancelSession.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

unint64_t sub_1DCF47000@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1DCF477D4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1DCF4702C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1DCF47780();
  unint64_t v5 = sub_1DCD678E0();
  return MEMORY[0x1F4185E20](a1, a2, v4, v5);
}

void sub_1DCF47084()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1DD048068();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock) + 16);
  os_unfair_lock_lock(v6);
  sub_1DCDB40EC((uint64_t)v5);
  uint64_t v7 = sub_1DD048048();
  os_log_type_t v8 = sub_1DD048848();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_1DCCF9000, v7, v8, "cancel()", v9, 2u);
    MEMORY[0x1E01B07E0](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled) = 1;
  uint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_onCancels);
  swift_beginAccess();
  uint64_t v11 = *v10;
  uint64_t v12 = *(void *)(*v10 + 16);
  if (v12)
  {
    uint64_t v13 = v1 + OBJC_IVAR____TtC18VisualIntelligence13CancelSession_identifier;
    swift_bridgeObjectRetain();
    uint64_t v14 = v11 + 40;
    do
    {
      uint64_t v15 = *(void (**)(uint64_t))(v14 - 8);
      swift_retain();
      v15(v13);
      swift_release();
      v14 += 16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  os_unfair_lock_unlock(v6);
}

id CancelSession.init()()
{
  uint64_t v1 = v0;
  sub_1DD046588();
  v1[OBJC_IVAR____TtC18VisualIntelligence13CancelSession__isCanceled] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18VisualIntelligence13CancelSession_onCancels] = MEMORY[0x1E4FBC860];
  uint64_t v2 = OBJC_IVAR____TtC18VisualIntelligence13CancelSession_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86960);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  *(void *)&v1[v2] = v3;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for CancelSession();
  return objc_msgSendSuper2(&v5, sel_init);
}

id CancelSession.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CancelSession();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CancelSession()
{
  uint64_t result = qword_1EBE86E08;
  if (!qword_1EBE86E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCF4751C()
{
  return type metadata accessor for CancelSession();
}

uint64_t sub_1DCF47524()
{
  uint64_t result = sub_1DD046598();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CancelSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CancelSession);
}

uint64_t dispatch thunk of CancelSession.cancel()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

unsigned char *storeEnumTagSinglePayload for FlowError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCF476F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowError()
{
  return &type metadata for FlowError;
}

unint64_t sub_1DCF4772C()
{
  unint64_t result = qword_1EAB042E8;
  if (!qword_1EAB042E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB042E8);
  }
  return result;
}

unint64_t sub_1DCF47780()
{
  unint64_t result = qword_1EBE82BF0;
  if (!qword_1EBE82BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBE82BF0);
  }
  return result;
}

unint64_t sub_1DCF477D4(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

uint64_t PixelImage.init(pixelBuffer:orientation:)@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(_DWORD *)(a3 + 8) = a2;
  return result;
}

uint64_t sub_1DCF477F0()
{
  return *(unsigned int *)(v0 + 8);
}

double sub_1DCF477F8()
{
  unint64_t v1 = *v0;
  int64_t Width = CVPixelBufferGetWidth(*v0);
  CVPixelBufferGetHeight(v1);
  return (double)Width;
}

id sub_1DCF47834()
{
  return *v0;
}

uint64_t initializeBufferWithCopyOfBuffer for PixelImage(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  id v4 = v3;
  return a1;
}

void destroy for PixelImage(id *a1)
{
}

uint64_t assignWithCopy for PixelImage(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for PixelImage(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PixelImage(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 12)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PixelImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 12) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 12) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PixelImage()
{
  return &type metadata for PixelImage;
}

id BoxScorerCompatible.__allocating_init(granularity:xMean:yMean:std:)(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  id v10 = objc_allocWithZone(v5);
  type metadata accessor for BoxScorer();
  swift_allocObject();
  uint64_t v11 = (char *)v10;
  *(void *)&v11[OBJC_IVAR____TtC18VisualIntelligence19BoxScorerCompatible_boxScorer] = sub_1DCEC6394(a1, a2, a3, a4);

  v13.receiver = v11;
  v13.super_class = v5;
  return objc_msgSendSuper2(&v13, sel_init);
}

id BoxScorerCompatible.init(granularity:xMean:yMean:std:)(uint64_t a1, double a2, double a3, double a4)
{
  type metadata accessor for BoxScorer();
  swift_allocObject();
  uint64_t v9 = v4;
  *(void *)&v9[OBJC_IVAR____TtC18VisualIntelligence19BoxScorerCompatible_boxScorer] = sub_1DCEC6394(a1, a2, a3, a4);

  v11.receiver = v9;
  v11.super_class = (Class)type metadata accessor for BoxScorerCompatible();
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t type metadata accessor for BoxScorerCompatible()
{
  return self;
}

void sub_1DCF47C14(double a1, double a2, double a3, double a4)
{
}

id BoxScorerCompatible.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BoxScorerCompatible.init()()
{
}

id BoxScorerCompatible.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BoxScorerCompatible();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for BoxScorerCompatible(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BoxScorerCompatible);
}

uint64_t dispatch thunk of BoxScorerCompatible.__allocating_init(granularity:xMean:yMean:std:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of BoxScorerCompatible.score(xTopLeft:yTopLeft:width:height:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

void sub_1DCF47DE8()
{
  off_1EBE85728 = &unk_1F38347C0;
}

uint64_t sub_1DCF47DFC()
{
  if (qword_1EBE85730 != -1) {
    uint64_t result = swift_once();
  }
  qword_1EBE9C838 = *((void *)off_1EBE85728 + 2);
  return result;
}

uint64_t sub_1DCF47E54()
{
  if (qword_1EBE85730 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1DCF99CB4(v0);
  uint64_t v3 = v2;
  uint64_t result = swift_bridgeObjectRelease();
  qword_1EBE9C8F8 = v1;
  unk_1EBE9C900 = v3;
  return result;
}

uint64_t sub_1DCF47ED8(uint64_t a1, unint64_t a2)
{
  v44[2] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1DD0482B8();
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1DD048288();
  MEMORY[0x1F4188790]();
  uint64_t v39 = *(void *)(sub_1DD0482A8() - 8);
  uint64_t v8 = MEMORY[0x1F4188790]();
  unint64_t v42 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_35;
      }
      uint64_t v10 = HIDWORD(a1) - (int)a1;
      goto LABEL_6;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v10 = v11 - v12;
      if (!__OFSUB__(v11, v12)) {
        goto LABEL_6;
      }
      goto LABEL_36;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v10 = BYTE6(a2);
LABEL_6:
      uint64_t v37 = v8;
      unint64_t v38 = a2 >> 62;
      if (qword_1EBE85768 != -1) {
        swift_once();
      }
      if (v10 < qword_1EBE9C838) {
        goto LABEL_15;
      }
      if (qword_1EBE85660 == -1)
      {
        if ((qword_1EBE9C838 & 0x8000000000000000) == 0) {
          goto LABEL_11;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        swift_once();
        goto LABEL_13;
      }
      swift_once();
      if (qword_1EBE9C838 < 0) {
        goto LABEL_34;
      }
LABEL_11:
      uint64_t v14 = qword_1EBE9C8F8;
      unint64_t v13 = unk_1EBE9C900;
      uint64_t v15 = sub_1DD0464C8();
      uint64_t v43 = v2;
      uint64_t v16 = v15;
      unint64_t v18 = v17;
      LOBYTE(v13) = sub_1DCD83388(v14, v13, v15, v17);
      sub_1DCD21954(v16, v18);
      if ((v13 & 1) == 0)
      {
LABEL_15:
        sub_1DCD33F64(a1, a2);
        return a1;
      }
      if (qword_1EBE853D8 != -1) {
        goto LABEL_37;
      }
LABEL_13:
      uint64_t v20 = qword_1EBE853E8;
      unint64_t v19 = *(void *)algn_1EBE853F0;
      uint64_t v21 = *(void *)algn_1EBE853F0 >> 62;
      sub_1DCD33F64(qword_1EBE853E8, *(unint64_t *)algn_1EBE853F0);
      v36[1] = sub_1DCF4883C(&qword_1EBE85398, MEMORY[0x1E4F25170]);
      sub_1DD048278();
      switch(v21)
      {
        case 1:
          if (v20 >> 32 < (int)v20) {
            goto LABEL_39;
          }
          v36[0] = v19 & 0x3FFFFFFFFFFFFFFFLL;
          sub_1DCD33F64(v20, v19);
          uint64_t v24 = v43;
          sub_1DCF4875C((int)v20, v20 >> 32);
          uint64_t v43 = v24;
LABEL_22:
          sub_1DCD21954(v20, v19);
          break;
        case 2:
          uint64_t v22 = *(void *)(v20 + 16);
          v36[0] = *(void *)(v20 + 24);
          sub_1DCD33F64(v20, v19);
          swift_retain();
          swift_retain();
          uint64_t v23 = v43;
          sub_1DCF4875C(v22, v36[0]);
          uint64_t v43 = v23;
          if (v23)
          {
            swift_release();
            swift_release();
            __break(1u);
            JUMPOUT(0x1DCF485ACLL);
          }
          swift_release();
          swift_release();
          goto LABEL_22;
        case 3:
          memset(v44, 0, 14);
          goto LABEL_19;
        default:
          v44[0] = v20;
          LOWORD(v44[1]) = v19;
          BYTE2(v44[1]) = BYTE2(v19);
          BYTE3(v44[1]) = BYTE3(v19);
          BYTE4(v44[1]) = BYTE4(v19);
          BYTE5(v44[1]) = BYTE5(v19);
LABEL_19:
          sub_1DD048258();
          sub_1DCD21954(v20, v19);
          break;
      }
      sub_1DD048268();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v5);
      sub_1DCD21954(v20, v19);
      sub_1DCF4883C(&qword_1EBE86800, MEMORY[0x1E4F24F80]);
      uint64_t v25 = v42;
      sub_1DD048298();
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      switch((int)v38)
      {
        case 1:
          uint64_t v27 = (int)a1;
          uint64_t v26 = a1 >> 32;
          break;
        case 2:
          uint64_t v27 = *(void *)(a1 + 16);
          uint64_t v26 = *(void *)(a1 + 24);
          break;
        case 3:
          break;
        default:
          uint64_t v27 = 0;
          uint64_t v26 = BYTE6(a2);
          break;
      }
      if (v26 < qword_1EBE9C838 || v26 < v27)
      {
        __break(1u);
LABEL_39:
        __break(1u);
      }
      uint64_t v28 = sub_1DD0464C8();
      uint64_t v29 = v43;
      uint64_t v31 = sub_1DCF485DC(v28, v30);
      if (v29)
      {
        (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v37);
      }
      else
      {
        uint64_t v33 = v31;
        unint64_t v34 = v32;
        a1 = sub_1DD048238();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v37);
        sub_1DCD21954(v33, v34);
      }
      return a1;
  }
}

uint64_t sub_1DCF485DC(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x1DCF48728);
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if (v4 > 27) {
        return sub_1DCF97B04(a1, a2);
      }
LABEL_7:
      uint64_t v8 = sub_1DD048248();
      sub_1DCF4883C(&qword_1EAB04358, MEMORY[0x1E4F24F10]);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, *MEMORY[0x1E4F24F08], v8);
      swift_willThrow();
      return sub_1DCD21954(a1, a2);
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1DCF48738()
{
  uint64_t result = sub_1DCF48884();
  qword_1EBE853E8 = result;
  *(void *)algn_1EBE853F0 = v1;
  return result;
}

uint64_t sub_1DCF4875C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1DD0462A8();
  if (!result || (uint64_t result = sub_1DD0462C8(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1DD0462B8();
      sub_1DD0482B8();
      sub_1DCF4883C(&qword_1EBE85398, MEMORY[0x1E4F25170]);
      return sub_1DD048258();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF4883C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1DCF48884()
{
  uint64_t v0 = sub_1DD0486F8();
  *(void *)(v0 + 16) = 24;
  qmemcpy((void *)(v0 + 32), "Q3J5c3RhbEdsb3dDQXJnb3MK", 24);
  uint64_t v1 = sub_1DCF99CB4(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1DCF488FC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBE86B10);
  sub_1DD049118();
  uint64_t result = sub_1DD048A08();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1DCF489E0(uint64_t a1)
{
  uint64_t v3 = *v1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBE86B10);
  uint64_t v4 = sub_1DD049118();
  uint64_t v5 = sub_1DD048A08();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - v7;
  if (os_unfair_lock_trylock((os_unfair_lock_t)(*(uint64_t *)((char *)v1 + *(void *)(v3 + 184)) + 16)))
  {
    uint64_t v9 = *v1;
    uint64_t v10 = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 176));
    if (v10) {
      BOOL v11 = (v10 & a1) == 0;
    }
    else {
      BOOL v11 = 1;
    }
    if (!v11)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v8, 1, 1, v4);
      uint64_t v12 = (uint64_t)v1 + *(void *)(*v1 + 152);
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v12, v8, v5);
      swift_endAccess();
      uint64_t v9 = *v1;
    }
    os_unfair_lock_unlock((os_unfair_lock_t)(*(uint64_t *)((char *)v1 + *(void *)(v9 + 184)) + 16));
  }
}

uint64_t sub_1DCF48BD4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 152);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBE86B10);
  sub_1DD049118();
  uint64_t v2 = sub_1DD048A08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1DCD33E90(*(void *)(v0 + *(void *)(*(void *)v0 + 160)));
  sub_1DCD33E90(*(void *)(v0 + *(void *)(*(void *)v0 + 168)));
  return swift_release();
}

void *sub_1DCF48CF0()
{
  uint64_t v1 = v0[2];
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v3, sel_removeObserver_, v1);
    swift_unknownObjectRelease();
  }
  v0[2] = 0;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v4 = (char *)v0 + *(void *)(*v0 + 152);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBE86B10);
  sub_1DD049118();
  uint64_t v5 = sub_1DD048A08();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_1DCD33E90(*(void *)((char *)v0 + *(void *)(*v0 + 160)));
  sub_1DCD33E90(*(void *)((char *)v0 + *(void *)(*v0 + 168)));
  swift_release();
  return v0;
}

uint64_t sub_1DCF48E8C()
{
  sub_1DCF48CF0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Lazy()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for LazyLoaderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCF48FC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyLoaderError()
{
  return &type metadata for LazyLoaderError;
}

unint64_t sub_1DCF49004()
{
  unint64_t result = qword_1EAB04360;
  if (!qword_1EAB04360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04360);
  }
  return result;
}

uint64_t sub_1DCF49058(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    uint64_t v7 = (int *)type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)(v6 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1DD047BF8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v39 = v12;
    v12(v9, v10, v11);
    uint64_t v13 = v7[7];
    uint64_t v14 = (void *)(v6 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
    uint64_t v17 = *(void *)(v16 - 8);
    unint64_t v18 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
      uint64_t v20 = v39;
    }
    else
    {
      uint64_t v21 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v21;
      *((_DWORD *)v14 + 4) = *((_DWORD *)v15 + 4);
      *((_WORD *)v14 + 10) = *((_WORD *)v15 + 10);
      uint64_t v22 = *(int *)(v16 + 32);
      unint64_t v38 = (char *)v14 + v22;
      uint64_t v23 = (char *)v15 + v22;
      swift_bridgeObjectRetain();
      uint64_t v24 = v23;
      uint64_t v20 = v39;
      v39(v38, v24, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v25 = v7[8];
    uint64_t v26 = (void *)(v6 + v25);
    uint64_t v27 = (uint64_t *)((char *)a2 + v25);
    if (v18((uint64_t *)((char *)a2 + v25), 1, v16))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      uint64_t v29 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v29;
      *((_DWORD *)v26 + 4) = *((_DWORD *)v27 + 4);
      *((_WORD *)v26 + 10) = *((_WORD *)v27 + 10);
      uint64_t v30 = *(int *)(v16 + 32);
      uint64_t v31 = v20;
      unint64_t v32 = (char *)v26 + v30;
      uint64_t v33 = (char *)v27 + v30;
      swift_bridgeObjectRetain();
      v31(v32, v33, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
    }
    uint64_t v34 = a3[6];
    *(unsigned char *)(v6 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v35 = v6 + v34;
    uint64_t v36 = (uint64_t)a2 + v34;
    *(void *)uint64_t v35 = *(void *)v36;
    *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
    *(void *)(v6 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v6;
}

uint64_t sub_1DCF49378(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  uint64_t v3 = a1 + v2[6];
  uint64_t v4 = sub_1DD047BF8();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = a1 + v2[7];
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v5(v6 + *(int *)(v7 + 32), v4);
  }
  uint64_t v9 = a1 + v2[8];
  if (!v8(v9, 1, v7))
  {
    swift_bridgeObjectRelease();
    v5(v9 + *(int *)(v7 + 32), v4);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCF494DC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v5 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  uint64_t v6 = *(int *)(v5 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v34 = v5;
  uint64_t v11 = *(int *)(v5 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v18;
    *((_DWORD *)v12 + 4) = *((_DWORD *)v13 + 4);
    *((_WORD *)v12 + 10) = *((_WORD *)v13 + 10);
    uint64_t v19 = *(int *)(v14 + 32);
    uint64_t v33 = (char *)v12 + v19;
    uint64_t v20 = (char *)v13 + v19;
    swift_bridgeObjectRetain();
    v10((uint64_t)v33, (uint64_t)v20, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v21 = *(int *)(v34 + 32);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  if (v16((void *)(a2 + v21), 1, v14))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v25;
    *((_DWORD *)v22 + 4) = *((_DWORD *)v23 + 4);
    *((_WORD *)v22 + 10) = *((_WORD *)v23 + 10);
    uint64_t v26 = *(int *)(v14 + 32);
    uint64_t v27 = (char *)v22 + v26;
    uint64_t v28 = (char *)v23 + v26;
    swift_bridgeObjectRetain();
    v10((uint64_t)v27, (uint64_t)v28, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v22, 0, 1, v14);
  }
  uint64_t v29 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1DCF497C0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v5 = (int *)type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v39 + 24);
  v37(v7, v8);
  uint64_t v10 = v5[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v38 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      *(void *)(v11 + 8) = *(void *)(v12 + 8);
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      *(unsigned char *)(v11 + 20) = *(unsigned char *)(v12 + 20);
      *(unsigned char *)(v11 + 21) = *(unsigned char *)(v12 + 21);
      uint64_t v17 = *(int *)(v13 + 32);
      uint64_t v18 = v11 + v17;
      uint64_t v36 = v12 + v17;
      uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
      swift_bridgeObjectRetain();
      v35(v18, v36, v40);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_1DCF4B8D0(v11, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  *(unsigned char *)(v11 + 20) = *(unsigned char *)(v12 + 20);
  *(unsigned char *)(v11 + 21) = *(unsigned char *)(v12 + 21);
  ((void (*)(uint64_t, uint64_t, uint64_t))v37)(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v40);
LABEL_7:
  uint64_t v20 = v5[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  int v23 = v14(a1 + v20, 1, v13);
  int v24 = v14(v22, 1, v13);
  if (!v23)
  {
    if (!v24)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      *(void *)(v21 + 8) = *(void *)(v22 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v21 + 16) = *(_DWORD *)(v22 + 16);
      *(unsigned char *)(v21 + 20) = *(unsigned char *)(v22 + 20);
      *(unsigned char *)(v21 + 21) = *(unsigned char *)(v22 + 21);
      ((void (*)(uint64_t, uint64_t, uint64_t))v37)(v21 + *(int *)(v13 + 32), v22 + *(int *)(v13 + 32), v40);
      goto LABEL_13;
    }
    sub_1DCF4B8D0(v21, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v21, (const void *)v22, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(_DWORD *)(v21 + 16) = *(_DWORD *)(v22 + 16);
  *(unsigned char *)(v21 + 20) = *(unsigned char *)(v22 + 20);
  *(unsigned char *)(v21 + 21) = *(unsigned char *)(v22 + 21);
  uint64_t v25 = *(int *)(v13 + 32);
  uint64_t v26 = v21 + v25;
  uint64_t v27 = v22 + v25;
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
  swift_bridgeObjectRetain();
  v28(v26, v27, v40);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v21, 0, 1, v13);
LABEL_13:
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v30 = a3[6];
  uint64_t v31 = a1 + v30;
  unint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v33 = *v32;
  *(unsigned char *)(v31 + 8) = *((unsigned char *)v32 + 8);
  *(void *)uint64_t v31 = v33;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCF49C14(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v5 = (int *)type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v25 = (void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  uint64_t v27 = *v25;
  (*v25)(v7, v8, v9);
  uint64_t v10 = v5[7];
  uint64_t v11 = (_OWORD *)(a1 + v10);
  uint64_t v12 = (_OWORD *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v11 = *v12;
    *((_DWORD *)v11 + 4) = *((_DWORD *)v12 + 4);
    *((_WORD *)v11 + 10) = *((_WORD *)v12 + 10);
    v27((char *)v11 + *(int *)(v13 + 32), (char *)v12 + *(int *)(v13 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = v5[8];
  uint64_t v18 = (_OWORD *)(a1 + v17);
  uint64_t v19 = (_OWORD *)(a2 + v17);
  if (v15((_OWORD *)(a2 + v17), 1, v13))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    *((_DWORD *)v18 + 4) = *((_DWORD *)v19 + 4);
    *((_WORD *)v18 + 10) = *((_WORD *)v19 + 10);
    v27((char *)v18 + *(int *)(v13 + 32), (char *)v19 + *(int *)(v13 + 32), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  uint64_t v21 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1DCF49EC8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v5 = (int *)type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  uint64_t v6 = v5[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1DD047BF8();
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v32 + 40);
  v30(v7, v8);
  uint64_t v10 = v5[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
      *(_WORD *)(v11 + 20) = *(_WORD *)(v12 + 20);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_1DCF4B8D0(v11, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v11, (const void *)v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v28 = *(void *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = v28;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v11 + 16) = *(_DWORD *)(v12 + 16);
  *(unsigned char *)(v11 + 20) = *(unsigned char *)(v12 + 20);
  *(unsigned char *)(v11 + 21) = *(unsigned char *)(v12 + 21);
  ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v11 + *(int *)(v13 + 32), v12 + *(int *)(v13 + 32), v33);
LABEL_7:
  uint64_t v18 = v5[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  int v21 = v14(a1 + v18, 1, v13);
  int v22 = v14(v20, 1, v13);
  if (!v21)
  {
    if (!v22)
    {
      uint64_t v29 = *(void *)(v20 + 8);
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = v29;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v19 + 16) = *(_DWORD *)(v20 + 16);
      *(unsigned char *)(v19 + 20) = *(unsigned char *)(v20 + 20);
      *(unsigned char *)(v19 + 21) = *(unsigned char *)(v20 + 21);
      ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v19 + *(int *)(v13 + 32), v20 + *(int *)(v13 + 32), v33);
      goto LABEL_13;
    }
    sub_1DCF4B8D0(v19, type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
    memcpy((void *)v19, (const void *)v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_DWORD *)(v19 + 16) = *(_DWORD *)(v20 + 16);
  *(_WORD *)(v19 + 20) = *(_WORD *)(v20 + 20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v19 + *(int *)(v13 + 32), v20 + *(int *)(v13 + 32), v33);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v19, 0, 1, v13);
LABEL_13:
  uint64_t v24 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1DCF4A2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1DCF4A2B4);
}

uint64_t sub_1DCF4A2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1DCF4A374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1DCF4A388);
}

uint64_t sub_1DCF4A388(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for PetsHeadTorsoDomainAssignmentRule()
{
  uint64_t result = qword_1EAB04368;
  if (!qword_1EAB04368) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1DCF4A490()
{
  uint64_t result = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1DCF4A53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v147 = (char *)a1;
  uint64_t v140 = a3;
  uint64_t v148 = a4;
  uint64_t v149 = a2;
  uint64_t v4 = type metadata accessor for VisualUnderstanding.ImageRegion();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v138 = (long long *)((char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v142 = sub_1DD048068();
  uint64_t v145 = *(void *)(v142 - 8);
  MEMORY[0x1F4188790](v142);
  uint64_t v141 = (uint64_t)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  os_unfair_lock_t v143 = (char *)&v130 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v137 = (uint64_t)&v130 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v139 = (uint64_t)&v130 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v136 = (uint64_t)&v130 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v130 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v130 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v130 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v130 - v25;
  uint64_t v27 = type metadata accessor for PetsHeadTorsoDomainAssignmentRule();
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v130 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v144 = (uint64_t)&v130 - v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v34 = (char *)&v130 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v130 - v36;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)&v130 - v39;
  sub_1DCD32C3C((uint64_t)v147, (uint64_t)v179);
  if (*(unsigned char *)(v149 + 104))
  {
LABEL_8:
    sub_1DCD32C3C((uint64_t)v179, v148);
    return sub_1DCD5D8A8((uint64_t)v179, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  }
  uint64_t v131 = v26;
  uint64_t v132 = v23;
  uint64_t v147 = v34;
  uint64_t v130 = v17;
  uint64_t v133 = v29;
  uint64_t v134 = v20;
  uint64_t v135 = v27;
  uint64_t v41 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  unint64_t v42 = v146;
  sub_1DCF1DE30((uint64_t)v146 + *(int *)(v41 + 32), (uint64_t)v40);
  uint64_t v43 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
  unsigned int v46 = v45(v40, 1, v43);
  sub_1DCF1DE98((uint64_t)v40);
  uint64_t v47 = (uint64_t)v42;
  uint64_t v48 = v144;
  sub_1DCF4B868(v47, v144, (uint64_t (*)(void))type metadata accessor for PetsHeadTorsoDomainAssignmentRule);
  if (v46 == 1)
  {
    sub_1DCF4B8D0(v48, (uint64_t (*)(void))type metadata accessor for PetsHeadTorsoDomainAssignmentRule);
    uint64_t v49 = (uint64_t)v143;
LABEL_5:
    sub_1DCDB40EC(v49);
    uint64_t v51 = v141;
    sub_1DCDB4300(v141);
    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
    uint64_t v53 = v142;
    v52(v49, v142);
    uint64_t v54 = sub_1DD048048();
    os_log_type_t v55 = sub_1DD048848();
    if (os_log_type_enabled(v54, v55))
    {
      CGFloat v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)CGFloat v56 = 0;
      _os_log_impl(&dword_1DCCF9000, v54, v55, "Must have both head and torso threshold config.", v56, 2u);
      MEMORY[0x1E01B07E0](v56, -1, -1);
    }

    v52(v51, v53);
    goto LABEL_8;
  }
  sub_1DCF1DE30(v48 + *(int *)(v41 + 28), (uint64_t)v37);
  unsigned int v50 = v45(v37, 1, v43);
  sub_1DCF1DE98((uint64_t)v37);
  sub_1DCF4B8D0(v48, (uint64_t (*)(void))type metadata accessor for PetsHeadTorsoDomainAssignmentRule);
  uint64_t v49 = (uint64_t)v143;
  if (v50 == 1) {
    goto LABEL_5;
  }
  uint64_t v58 = v44;
  uint64_t v59 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v45;
  if (!*(void *)(*v146 + 16))
  {
    uint64_t v144 = 0;
    LODWORD(v143) = 0;
    uint64_t v62 = (CGFloat *)v149;
    uint64_t v63 = (uint64_t)v147;
LABEL_13:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851D8);
    unint64_t v64 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_1DD04E910;
    uint64_t v66 = v65 + v64;
    uint64_t v67 = *(int *)(v41 + 28);
    uint64_t v68 = v146;
    sub_1DCF1DE30((uint64_t)v146 + v67, v63);
    if (v59(v63, 1, v43) == 1)
    {
      *(void *)uint64_t v66 = 0;
      *(void *)(v66 + 8) = 0xE000000000000000;
      *(_DWORD *)(v66 + 16) = 0;
      *(_WORD *)(v66 + 20) = 0;
      sub_1DD047BE8();
      sub_1DCF1DE98(v63);
    }
    else
    {
      sub_1DCD68D40(v63, v66);
    }
    uint64_t v69 = v148;
    uint64_t v70 = v145;
    uint64_t v71 = v139;
    *(void *)&v163[0] = *(uint64_t *)((char *)v68 + *(int *)(v135 + 28));
    swift_bridgeObjectRetain();
    sub_1DCDD51EC(v65, (uint64_t *)v163, (uint64_t)&v170);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((void)v173)
    {
      uint64_t v149 = v173;
      uint64_t v141 = *((void *)&v170 + 1);
      uint64_t v139 = v170;
      uint64_t v72 = *((void *)&v171 + 1);
      uint64_t v147 = (char *)v171;
      long long v73 = v172;
      uint64_t v74 = *((void *)&v173 + 1);
      uint64_t v75 = (uint64_t)v68;
      uint64_t v76 = v174;
      int v77 = DWORD2(v174);
      sub_1DCF4B43C(v62, &v170);
      uint64_t v78 = v173;
      sub_1DCD32F20(v170, *((uint64_t *)&v170 + 1), v171, *((uint64_t *)&v171 + 1), v172, *((uint64_t *)&v172 + 1), v173);
      if (v78)
      {
        uint64_t v139 = v76;
        LODWORD(v140) = v77;
        uint64_t v141 = *((void *)&v73 + 1);
        uint64_t v147 = (char *)v74;
        sub_1DCD5D8A8((uint64_t)v179, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
        uint64_t v79 = (uint64_t)v134;
        sub_1DCDB40EC((uint64_t)v134);
        uint64_t v80 = (uint64_t)v133;
        sub_1DCF4B868(v75, (uint64_t)v133, (uint64_t (*)(void))type metadata accessor for PetsHeadTorsoDomainAssignmentRule);
        uint64_t v81 = v138;
        sub_1DCF4B868((uint64_t)v62, (uint64_t)v138, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
        uint64_t v82 = sub_1DD048048();
        os_log_type_t v83 = sub_1DD048848();
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v84 = swift_slowAlloc();
          uint64_t v85 = swift_slowAlloc();
          *(void *)&v163[0] = v85;
          *(_DWORD *)uint64_t v84 = 136315394;
          uint64_t v86 = sub_1DCD9C35C(*(unsigned char *)(v80 + *(int *)(v135 + 20)));
          *(void *)&long long v170 = sub_1DCED7FA0(v86, v87, (uint64_t *)v163);
          sub_1DD048A28();
          swift_bridgeObjectRelease();
          sub_1DCF4B8D0(v80, (uint64_t (*)(void))type metadata accessor for PetsHeadTorsoDomainAssignmentRule);
          *(_WORD *)(v84 + 12) = 2080;
          long long v88 = v81[1];
          long long v170 = *v81;
          long long v171 = v88;
          uint64_t v89 = NormalizedRect.loggingDescription.getter();
          *(void *)&long long v170 = sub_1DCED7FA0(v89, v90, (uint64_t *)v163);
          uint64_t v91 = v135;
          sub_1DD048A28();
          swift_bridgeObjectRelease();
          sub_1DCF4B8D0((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);
          _os_log_impl(&dword_1DCCF9000, v82, v83, "Assign %s to region %s", (uint8_t *)v84, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1E01B07E0](v85, -1, -1);
          MEMORY[0x1E01B07E0](v84, -1, -1);

          (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v79, v142);
          uint64_t v93 = v148;
          uint64_t v92 = v149;
          uint64_t v94 = v144;
          float v95 = *(float *)&v143;
          uint64_t v96 = (uint64_t)v147;
          uint64_t v97 = v141;
          unsigned int v98 = v140;
          uint64_t v99 = v139;
        }
        else
        {
          sub_1DCF4B8D0(v80, (uint64_t (*)(void))type metadata accessor for PetsHeadTorsoDomainAssignmentRule);
          sub_1DCF4B8D0((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for VisualUnderstanding.ImageRegion);

          (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v79, v142);
          uint64_t v93 = v148;
          uint64_t v92 = v149;
          uint64_t v94 = v144;
          float v95 = *(float *)&v143;
          uint64_t v96 = (uint64_t)v147;
          uint64_t v97 = v141;
          unsigned int v98 = v140;
          uint64_t v99 = v139;
          uint64_t v91 = v135;
        }
        char v121 = *((unsigned char *)v146 + *(int *)(v91 + 20));
        float v122 = v95;
        LOBYTE(v163[0]) = v121;
        if (!v94) {
          float v122 = 0.0;
        }
        *(_OWORD *)((char *)v163 + 8) = 0u;
        *(_OWORD *)((char *)&v163[1] + 8) = 0u;
        BYTE8(v163[2]) = 0;
        long long v164 = 0u;
        long long v165 = 0u;
        *(void *)&long long v166 = v97;
        *((void *)&v166 + 1) = v92;
        *(void *)&long long v167 = v96;
        *((void *)&v167 + 1) = v99;
        LODWORD(v168) = 0;
        *(void *)((char *)&v168 + 4) = __PAIR64__(LODWORD(v122), v98);
        HIDWORD(v168) = 0;
        LOWORD(v169[0]) = 0;
        *(void *)&v169[1] = 0;
        *((void *)&v169[0] + 1) = 0;
        *(void *)((char *)&v169[1] + 5) = 0;
        sub_1DCD32C3C((uint64_t)v179, (uint64_t)&v170);
        if (sub_1DCD32CA4((uint64_t)&v170) != 1)
        {
          uint64_t v123 = sub_1DCD9C35C(v170);
          uint64_t v125 = v124;
          if (v123 == sub_1DCD9C35C(v121) && v125 == v126)
          {
            swift_bridgeObjectRelease_n();
LABEL_38:
            v161[6] = v176;
            v161[7] = v177;
            v162[0] = v178[0];
            *(_OWORD *)((char *)v162 + 13) = *(_OWORD *)((char *)v178 + 13);
            v161[2] = v172;
            v161[3] = v173;
            v161[4] = v174;
            v161[5] = v175;
            v161[0] = v170;
            v161[1] = v171;
            long long v158 = v167;
            long long v159 = v168;
            v160[0] = v169[0];
            *(_OWORD *)((char *)v160 + 13) = *(_OWORD *)((char *)v169 + 13);
            long long v154 = v163[2];
            long long v155 = v164;
            long long v156 = v165;
            long long v157 = v166;
            long long v152 = v163[0];
            long long v153 = v163[1];
            sub_1DCF22BB0((uint64_t)v161, &v152, (uint64_t)v150);
            sub_1DCD5D8A8((uint64_t)v179, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
            sub_1DCD32DD4((uint64_t)v163);
            long long v158 = v150[6];
            long long v159 = v150[7];
            v160[0] = v151[0];
            *(_OWORD *)((char *)v160 + 13) = *(_OWORD *)((char *)v151 + 13);
            long long v154 = v150[2];
            long long v155 = v150[3];
            long long v156 = v150[4];
            long long v157 = v150[5];
            long long v128 = v150[0];
            long long v129 = v150[1];
LABEL_41:
            long long v152 = v128;
            long long v153 = v129;
            faiss::NormalizationTransform::~NormalizationTransform((faiss::NormalizationTransform *)&v152);
            sub_1DCD32C3C((uint64_t)&v152, (uint64_t)v161);
            sub_1DCD32C3C((uint64_t)v161, v93);
            return swift_bridgeObjectRelease();
          }
          char v127 = sub_1DD048FA8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v127) {
            goto LABEL_38;
          }
          sub_1DCD5D8A8((uint64_t)v179, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D920);
        }
        long long v158 = v167;
        long long v159 = v168;
        v160[0] = v169[0];
        *(_OWORD *)((char *)v160 + 13) = *(_OWORD *)((char *)v169 + 13);
        long long v154 = v163[2];
        long long v155 = v164;
        long long v156 = v165;
        long long v157 = v166;
        long long v128 = v163[0];
        long long v129 = v163[1];
        goto LABEL_41;
      }
      sub_1DCD32F20(v139, v141, (uint64_t)v147, v72, v73, *((uint64_t *)&v73 + 1), v149);
      uint64_t v114 = (uint64_t)v130;
      sub_1DCDB40EC((uint64_t)v130);
      uint64_t v115 = v136;
      sub_1DCDB4300(v136);
      uint64_t v116 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
      uint64_t v117 = v142;
      v116(v114, v142);
      uint64_t v118 = sub_1DD048048();
      os_log_type_t v119 = sub_1DD048848();
      if (os_log_type_enabled(v118, v119))
      {
        uint64_t v120 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v120 = 0;
        _os_log_impl(&dword_1DCCF9000, v118, v119, "No satisfied head label.", v120, 2u);
        MEMORY[0x1E01B07E0](v120, -1, -1);
      }

      v116(v115, v117);
      uint64_t v106 = v148;
    }
    else
    {
      sub_1DCDB40EC(v71);
      uint64_t v100 = v137;
      sub_1DCDB4300(v137);
      uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
      uint64_t v102 = v142;
      v101(v71, v142);
      uint64_t v103 = sub_1DD048048();
      os_log_type_t v104 = sub_1DD048848();
      if (os_log_type_enabled(v103, v104))
      {
        uint64_t v105 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v105 = 0;
        _os_log_impl(&dword_1DCCF9000, v103, v104, "No satisfied torso label.", v105, 2u);
        MEMORY[0x1E01B07E0](v105, -1, -1);
      }

      v101(v100, v102);
      uint64_t v106 = v69;
    }
    sub_1DCD32C3C((uint64_t)v179, v106);
    sub_1DCD5D8A8((uint64_t)v179, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
    return swift_bridgeObjectRelease();
  }
  sub_1DCD370D0(*v146);
  uint64_t v62 = (CGFloat *)v149;
  uint64_t v63 = (uint64_t)v147;
  if (v60)
  {
    uint64_t v144 = v60;
    LODWORD(v143) = v61;
    goto LABEL_13;
  }
  uint64_t v107 = (uint64_t)v131;
  sub_1DCDB40EC((uint64_t)v131);
  uint64_t v108 = (uint64_t)v132;
  sub_1DCDB4300((uint64_t)v132);
  CVPixelBufferRef v109 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
  uint64_t v110 = v142;
  v109(v107, v142);
  uint64_t v111 = sub_1DD048048();
  os_log_type_t v112 = sub_1DD048848();
  if (os_log_type_enabled(v111, v112))
  {
    uint64_t v113 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v113 = 0;
    _os_log_impl(&dword_1DCCF9000, v111, v112, "No satisified coarse label.", v113, 2u);
    MEMORY[0x1E01B07E0](v113, -1, -1);
  }

  v109(v108, v110);
  sub_1DCD32C3C((uint64_t)v179, v148);
  sub_1DCD5D8A8((uint64_t)v179, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1DCD5D814);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCF4B43C@<X0>(CGFloat *a1@<X0>, _OWORD *a2@<X8>)
{
  unsigned int v50 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84E08);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851D8);
  uint64_t v7 = type metadata accessor for Argos_Protos_Queryflow_ObjectDetectionLabelThreshold(0);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1DD04E910;
  uint64_t v11 = v10 + v9;
  uint64_t v12 = type metadata accessor for Argos_Protos_Queryflow_PetsHeadTorsoDomainAssignmentRule(0);
  sub_1DCF1DE30(v2 + *(int *)(v12 + 32), (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    *(void *)uint64_t v11 = 0;
    *(void *)(v11 + 8) = 0xE000000000000000;
    *(_DWORD *)(v11 + 16) = 0;
    *(_WORD *)(v11 + 20) = 0;
    sub_1DD047BE8();
    sub_1DCF1DE98((uint64_t)v6);
  }
  else
  {
    sub_1DCD68D40((uint64_t)v6, v11);
  }
  uint64_t v13 = *(void *)(v2 + *(int *)(type metadata accessor for PetsHeadTorsoDomainAssignmentRule() + 28));
  swift_bridgeObjectRetain();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_1DCD973D8(v14, v10, v13);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v58 = v15;
  swift_bridgeObjectRetain();
  sub_1DCDC8E88(&v58);
  swift_bridgeObjectRelease();
  uint64_t v16 = v58;
  uint64_t v17 = *(void *)(v58 + 16);
  if (v17)
  {
    uint64_t v18 = 0;
    CGFloat v19 = *a1;
    CGFloat v20 = a1[1];
    double v21 = a1[2];
    CGFloat v56 = a1[3];
    CGFloat v57 = v21;
    double v52 = v20;
    double v53 = v19;
    do
    {
      uint64_t v22 = *(void *)(v16 + v18 + 32);
      CGFloat v23 = *(double *)(v16 + v18 + 40);
      CGFloat v24 = *(double *)(v16 + v18 + 48);
      CGFloat v25 = *(double *)(v16 + v18 + 56);
      CGFloat v26 = *(double *)(v16 + v18 + 64);
      uint64_t v28 = *(void *)(v16 + v18 + 72);
      uint64_t v27 = *(void *)(v16 + v18 + 80);
      uint64_t v30 = *(void *)(v16 + v18 + 88);
      uint64_t v29 = *(void *)(v16 + v18 + 96);
      int v31 = *(_DWORD *)(v16 + v18 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59.origin.CGFloat x = v23;
      v59.origin.CGFloat y = v24;
      v59.size.CGFloat width = v25;
      v59.size.CGFloat height = v26;
      double Width = CGRectGetWidth(v59);
      CGFloat v54 = v24;
      CGFloat v55 = v23;
      v60.origin.CGFloat x = v23;
      v60.origin.CGFloat y = v24;
      v60.size.CGFloat width = v25;
      v60.size.CGFloat height = v26;
      double v33 = Width * CGRectGetHeight(v60);
      v61.origin.CGFloat x = v19;
      v61.origin.CGFloat y = v20;
      CGFloat v35 = v56;
      CGFloat v34 = v57;
      v61.size.CGFloat width = v57;
      v61.size.CGFloat height = v56;
      double v36 = CGRectGetWidth(v61);
      v62.origin.CGFloat x = v19;
      v62.origin.CGFloat y = v20;
      v62.size.CGFloat width = v34;
      v62.size.CGFloat height = v35;
      double Height = CGRectGetHeight(v62);
      if (v33 <= 0.0 || (double v38 = v36 * Height, v38 <= 0.0))
      {
        if (*(float *)(v2 + 8) < 0.0) {
          goto LABEL_17;
        }
      }
      else
      {
        v63.origin.CGFloat y = v54;
        v63.origin.CGFloat x = v55;
        v63.size.CGFloat width = v25;
        v63.size.CGFloat height = v26;
        v67.origin.CGFloat x = v19;
        v67.origin.CGFloat y = v20;
        v67.size.CGFloat height = v56;
        v67.size.CGFloat width = v57;
        CGRect v64 = CGRectIntersection(v63, v67);
        CGFloat x = v64.origin.x;
        CGFloat y = v64.origin.y;
        CGFloat v41 = v64.size.width;
        CGFloat v42 = v64.size.height;
        if (CGRectIsNull(v64))
        {
          CGFloat v20 = v52;
          CGFloat v19 = v53;
          if (*(float *)(v2 + 8) < 0.0) {
            goto LABEL_17;
          }
        }
        else
        {
          v65.origin.CGFloat x = x;
          v65.origin.CGFloat y = y;
          v65.size.CGFloat width = v41;
          v65.size.CGFloat height = v42;
          double v51 = CGRectGetWidth(v65);
          v66.origin.CGFloat x = x;
          v66.origin.CGFloat y = y;
          v66.size.CGFloat width = v41;
          v66.size.CGFloat height = v42;
          double v43 = v51 * CGRectGetHeight(v66);
          if (v38 >= v33) {
            double v44 = v33;
          }
          else {
            double v44 = v38;
          }
          float v45 = v43 / v44;
          CGFloat v20 = v52;
          CGFloat v19 = v53;
          if (*(float *)(v2 + 8) < v45)
          {
LABEL_17:
            uint64_t result = swift_release();
            uint64_t v47 = (CGFloat *)v50;
            *(void *)unsigned int v50 = v22;
            CGFloat v48 = v54;
            v47[1] = v55;
            v47[2] = v48;
            void v47[3] = v25;
            v47[4] = v26;
            *((void *)v47 + 5) = v28;
            *((void *)v47 + 6) = v27;
            *((void *)v47 + 7) = v30;
            *((void *)v47 + 8) = v29;
            *((_DWORD *)v47 + 18) = v31;
            return result;
          }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 += 80;
      --v17;
    }
    while (v17);
  }
  uint64_t result = swift_release();
  uint64_t v49 = v50;
  *(_OWORD *)((char *)v50 + 60) = 0u;
  void v49[2] = 0u;
  _OWORD v49[3] = 0u;
  *uint64_t v49 = 0u;
  v49[1] = 0u;
  return result;
}

uint64_t sub_1DCF4B868(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1DCF4B8D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t S2EdgeIndex.init()()
{
  uint64_t result = v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = 30;
  *(unsigned char *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0;
  return result;
}

uint64_t S2EdgeIndex.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1DCF4B97C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_1DCF4B9B0()
{
  *(void *)(v0 + 32) = 30;
  swift_beginAccess();
  *(unsigned char *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  *(void *)(v0 + 24) = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCF4BA18()
{
  void (*v19)(long long *__return_ptr, uint64_t);
  void (*v20)(long long *__return_ptr, uint64_t);
  uint64_t v21;
  long long v22;
  long long v23;
  double v24;
  long long v25;
  double v26;

  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(v0 + 40) & 1) == 0)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 248))(result);
    if (result < 0)
    {
LABEL_25:
      __break(1u);
      return result;
    }
    if (result)
    {
      uint64_t v2 = 0;
      CGFloat v20 = *(void (**)(long long *__return_ptr, uint64_t))(*(void *)v0 + 256);
      CGFloat v19 = *(void (**)(long long *__return_ptr, uint64_t))(*(void *)v0 + 264);
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      double v21 = result;
      while (v2 != result)
      {
        v20(&v25, v2);
        uint64_t v22 = v25;
        double v5 = v26;
        v19(&v25, v2);
        double v6 = v26;
        long long v7 = v25;
        CGFloat v25 = v22;
        CGFloat v26 = v5;
        CGFloat v23 = v7;
        CGFloat v24 = v6;
        uint64_t v8 = sub_1DCF4ED28((double *)&v25, (double *)&v23, 1, v6, *(double *)&v7, *(double *)&v22);
        uint64_t v10 = *(void *)(v0 + 32);
        if (v8 < v10) {
          uint64_t v10 = v8;
        }
        *(void *)(v0 + 32) = v10;
        uint64_t v11 = *(void *)(v9 + 16);
        if (v11)
        {
          uint64_t v12 = (uint64_t *)(v9 + 32);
          do
          {
            uint64_t v14 = *v12++;
            uint64_t v13 = v14;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v3 = sub_1DCE9EA98(0, v3[2] + 1, 1, v3);
            }
            unint64_t v16 = v3[2];
            unint64_t v15 = v3[3];
            if (v16 >= v15 >> 1) {
              uint64_t v3 = sub_1DCE9EA98((void *)(v15 > 1), v16 + 1, 1, v3);
            }
            uint64_t v3[2] = v16 + 1;
            v3[v16 + 4] = v13;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v4 = sub_1DCE9E068(0, v4[2] + 1, 1, v4);
            }
            unint64_t v18 = v4[2];
            unint64_t v17 = v4[3];
            if (v18 >= v17 >> 1) {
              uint64_t v4 = sub_1DCE9E068((void *)(v17 > 1), v18 + 1, 1, v4);
            }
            void v4[2] = v18 + 1;
            v4[v18 + 4] = v2;
            --v11;
          }
          while (v11);
        }
        ++v2;
        swift_bridgeObjectRelease();
        uint64_t result = v21;
        if (v2 == v21) {
          goto LABEL_22;
        }
      }
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
    *(void *)(v0 + 16) = v3;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 24) = v4;
    swift_bridgeObjectRelease();
    uint64_t result = sub_1DCF4BCC8();
    *(unsigned char *)(v0 + 40) = 1;
  }
  return result;
}

uint64_t sub_1DCF4BCC8()
{
  double v21 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 16);
  if (v1)
  {
    uint64_t v2 = sub_1DCE9E068(0, 1, 1, MEMORY[0x1E4FBC860]);
    uint64_t v3 = 0;
    unint64_t v4 = v2[2];
    do
    {
      unint64_t v5 = v2[3];
      if (v4 >= v5 >> 1) {
        uint64_t v2 = sub_1DCE9E068((void *)(v5 > 1), v4 + 1, 1, v2);
      }
      v2[2] = v4 + 1;
      v2[v4++ + 4] = v3++;
    }
    while (v1 != v3);
    double v21 = v2;
  }
  swift_retain();
  sub_1DCF4EC80(&v21, v0);
  uint64_t result = swift_release();
  uint64_t v7 = v21[2];
  if (v7)
  {
    uint64_t v8 = v21 + 4;
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      unint64_t v11 = *v8;
      if ((*v8 & 0x8000000000000000) != 0) {
        break;
      }
      uint64_t v12 = *(void *)(v0 + 16);
      if (v11 >= *(void *)(v12 + 16)) {
        goto LABEL_28;
      }
      uint64_t v13 = *(void *)(v12 + 8 * v11 + 32);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DCE9EA98(0, v9[2] + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      unint64_t v15 = v9[2];
      unint64_t v14 = v9[3];
      if (v15 >= v14 >> 1)
      {
        uint64_t result = (uint64_t)sub_1DCE9EA98((void *)(v14 > 1), v15 + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      v9[2] = v15 + 1;
      v9[v15 + 4] = v13;
      unint64_t v16 = *v8;
      if ((*v8 & 0x8000000000000000) != 0) {
        goto LABEL_29;
      }
      uint64_t v17 = *(void *)(v0 + 24);
      if (v16 >= *(void *)(v17 + 16)) {
        goto LABEL_30;
      }
      uint64_t v18 = *(void *)(v17 + 8 * v16 + 32);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1DCE9E068(0, v10[2] + 1, 1, v10);
        uint64_t v10 = (void *)result;
      }
      unint64_t v20 = v10[2];
      unint64_t v19 = v10[3];
      if (v20 >= v19 >> 1)
      {
        uint64_t result = (uint64_t)sub_1DCE9E068((void *)(v19 > 1), v20 + 1, 1, v10);
        uint64_t v10 = (void *)result;
      }
      void v10[2] = v20 + 1;
      v10[v20 + 4] = v18;
      ++v8;
      if (!--v7) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  else
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
LABEL_24:
    *(void *)(v0 + 16) = v9;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 24) = v10;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1DCF4BF44(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(v1 + 40) & 1) == 0)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 248))(result);
    if (result >= 101)
    {
      uint64_t v4 = *(void *)(v1 + 48);
      BOOL v5 = __OFADD__(v4, a1);
      uint64_t v6 = v4 + a1;
      if (v5)
      {
        __break(1u);
      }
      else if (v6 >= 31)
      {
        return sub_1DCF4BA18();
      }
    }
  }
  return result;
}

uint64_t sub_1DCF4BFD0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t result = swift_beginAccess();
  if (*(unsigned char *)(v2 + 40) == 1)
  {
    uint64_t v20 = v3;
    uint64_t v21 = v4;
    uint64_t v22 = v5;
    uint64_t v17 = v6;
    uint64_t v18 = v7;
    uint64_t v19 = v8;
    sub_1DCF4ED28((double *)&v20, (double *)&v17, 0, v10, v11, v12);
    unint64_t v14 = (void *)v13;
    uint64_t v16 = sub_1DCF4C23C(v13);
    uint64_t v20 = v3;
    uint64_t v21 = v4;
    uint64_t v22 = v5;
    uint64_t v17 = v6;
    uint64_t v18 = v7;
    uint64_t v19 = v8;
    sub_1DCF4C5C0((uint64_t)&v20, (uint64_t)&v17, v14, &v16);
    swift_bridgeObjectRelease();
    unint64_t v15 = sub_1DCF4DDDC(v16);
    swift_bridgeObjectRelease();
    return (uint64_t)v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1DCF4C0B8(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  if (a2 < result) {
    return sub_1DCF4C0B8(a2, result);
  }
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = v5 - 1;
  uint64_t v7 = 0;
  if (v5)
  {
    uint64_t v8 = *(void *)(v2 + 24);
    uint64_t v9 = v8 + 32;
    uint64_t v10 = *(void *)(v8 + 16);
    uint64_t result = v5 - 1;
    while (1)
    {
      uint64_t v11 = v7 + result;
      if (__OFADD__(v7, result)) {
        break;
      }
      if (v11 < 0) {
        goto LABEL_35;
      }
      uint64_t v12 = v11 >> 1;
      if (v12 >= v5) {
        goto LABEL_35;
      }
      if (v12 >= v10) {
        goto LABEL_36;
      }
      uint64_t v13 = *(void *)(v4 + 32 + 8 * v12);
      BOOL v14 = *(void *)(v9 + 8 * v12) != 0x7FFFFFFFFFFFFFFFLL;
      if (v13 != v3) {
        BOOL v14 = v13 < v3;
      }
      if (v14)
      {
        uint64_t v7 = v12 + 1;
      }
      else
      {
        if (v13 <= v3) {
          goto LABEL_18;
        }
        uint64_t result = v12 - 1;
      }
      if (result < v7) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_16:
  if (__OFADD__(v7, 1))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v12 = -(v7 + 1);
LABEL_18:
  uint64_t v15 = 0;
  if (v5)
  {
    uint64_t v16 = v4 + 32;
    uint64_t v17 = *(void *)(v2 + 24);
    uint64_t v18 = v17 + 32;
    uint64_t v19 = *(void *)(v17 + 16);
    while (1)
    {
      uint64_t v20 = v15 + v6;
      if (__OFADD__(v15, v6)) {
        break;
      }
      if (v20 < 0) {
        goto LABEL_38;
      }
      uint64_t v21 = v20 >> 1;
      if (v21 >= v5) {
        goto LABEL_38;
      }
      if (v21 >= v19) {
        goto LABEL_39;
      }
      uint64_t v22 = *(void *)(v16 + 8 * v21);
      if (v22 == a2) {
        uint64_t result = *(void *)(v18 + 8 * v21) != 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        uint64_t result = v22 < a2;
      }
      if (result == 1)
      {
        uint64_t v15 = v21 + 1;
      }
      else
      {
        if (v22 <= a2) {
          return ~v12;
        }
        uint64_t v6 = v21 - 1;
      }
      if (v6 < v15) {
        goto LABEL_32;
      }
    }
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_32:
  if (!__OFADD__(v15, 1)) {
    return ~v12;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1DCF4C23C(uint64_t result)
{
  uint64_t v2 = MEMORY[0x1E4FBC870];
  uint64_t v40 = MEMORY[0x1E4FBC870];
  uint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    goto LABEL_23;
  }
  uint64_t v4 = result + 32;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
LABEL_4:
  unint64_t v6 = *(void *)(v4 + 8 * v5);
  unint64_t v39 = v6;
  uint64_t result = S2CellId.level.getter();
  uint64_t v7 = result - 1;
  if (__OFSUB__(result, 1))
  {
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
  }
  else
  {
    ++v5;
    do
    {
      if (v7 < *(void *)(v1 + 32))
      {
LABEL_3:
        if (v5 == v3) {
          goto LABEL_22;
        }
        goto LABEL_4;
      }
      if (__OFSUB__(30, v7))
      {
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      if (0x400000000000001ELL - v7 < 0) {
        goto LABEL_60;
      }
      unint64_t v8 = 2 * (30 - v7);
      unint64_t v9 = v8 - 65;
      uint64_t v10 = 1 << (v8 & 0x3E);
      if (v8 >= 0x40) {
        uint64_t v10 = 0;
      }
      unint64_t v11 = 1uLL >> ((-2 * (30 - v7)) & 0x3E);
      if (v8 <= 0xFFFFFFFFFFFFFFC0) {
        unint64_t v11 = 0;
      }
      if (((30 - v7) & 0x4000000000000000) != 0) {
        unint64_t v12 = v11;
      }
      else {
        unint64_t v12 = v10;
      }
      if (v9 <= 0xFFFFFFFFFFFFFF7ELL) {
        unint64_t v12 = 0;
      }
      uint64_t result = sub_1DCF52014(&v39, v6 & -(uint64_t)v12 | v12);
      if ((result & 1) == 0) {
        goto LABEL_3;
      }
    }
    while (!__OFSUB__(v7--, 1));
    __break(1u);
LABEL_22:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v2 = v40;
LABEL_23:
    int64_t v14 = 0;
    uint64_t v37 = v2 + 56;
    uint64_t v15 = 1 << *(unsigned char *)(v2 + 32);
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    else {
      uint64_t v16 = -1;
    }
    unint64_t v17 = v16 & *(void *)(v2 + 56);
    int64_t v38 = (unint64_t)(v15 + 63) >> 6;
    unint64_t v18 = MEMORY[0x1E4FBC870];
    uint64_t v36 = v2;
    while (2)
    {
      if (v17)
      {
        unint64_t v19 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        unint64_t v20 = v19 | (v14 << 6);
        goto LABEL_44;
      }
      int64_t v21 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_66;
      }
      if (v21 >= v38)
      {
LABEL_58:
        swift_release();
        return v18;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v21);
      ++v14;
      if (v22) {
        goto LABEL_43;
      }
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v38) {
        goto LABEL_58;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v14);
      if (v22) {
        goto LABEL_43;
      }
      int64_t v14 = v21 + 2;
      if (v21 + 2 >= v38) {
        goto LABEL_58;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v14);
      if (v22) {
        goto LABEL_43;
      }
      int64_t v23 = v21 + 3;
      if (v23 >= v38) {
        goto LABEL_58;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (v22)
      {
        int64_t v14 = v23;
LABEL_43:
        unint64_t v17 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v14 << 6);
LABEL_44:
        uint64_t v24 = *(void *)(*(void *)(v2 + 48) + 8 * v20);
        uint64_t result = sub_1DCF4C0B8(v24, v24);
        if (v25 < result) {
          goto LABEL_61;
        }
        uint64_t v26 = result;
        uint64_t v27 = v25;
        if (result == v25) {
          continue;
        }
        uint64_t v28 = result;
LABEL_49:
        if (v28 >= v27) {
          goto LABEL_62;
        }
        if (v26 < 0) {
          goto LABEL_63;
        }
        uint64_t v30 = *(void *)(v1 + 24);
        if ((unint64_t)v28 >= *(void *)(v30 + 16)) {
          goto LABEL_64;
        }
        uint64_t v31 = *(void *)(v30 + 8 * v28 + 32);
        uint64_t result = sub_1DD0490A8();
        uint64_t v32 = -1 << *(unsigned char *)(v18 + 32);
        unint64_t v33 = result & ~v32;
        if ((*(void *)(v18 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33))
        {
          uint64_t v34 = *(void *)(v18 + 48);
          if (*(void *)(v34 + 8 * v33) != v31)
          {
            uint64_t v35 = ~v32;
            do
            {
              unint64_t v33 = (v33 + 1) & v35;
              if (((*(void *)(v18 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) == 0) {
                goto LABEL_47;
              }
            }
            while (*(void *)(v34 + 8 * v33) != v31);
          }
        }
        else
        {
LABEL_47:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v39 = v18;
          sub_1DCF53554(v31, v33, isUniquelyReferenced_nonNull_native);
          unint64_t v18 = v39;
          uint64_t result = swift_bridgeObjectRelease();
        }
        if (++v28 == v27)
        {
          uint64_t v2 = v36;
          continue;
        }
        goto LABEL_49;
      }
      break;
    }
    while (1)
    {
      int64_t v14 = v23 + 1;
      if (__OFADD__(v23, 1)) {
        break;
      }
      if (v14 >= v38) {
        goto LABEL_58;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v14);
      ++v23;
      if (v22) {
        goto LABEL_43;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1DCF4C5C0(uint64_t result, uint64_t a2, void *a3, uint64_t *a4)
{
  if (!a3[2]) {
    return result;
  }
  uint64_t v5 = v4;
  uint64_t v7 = a3;
  uint64_t v8 = *(void *)(result + 16);
  long long v41 = *(_OWORD *)a2;
  long long v42 = *(_OWORD *)result;
  uint64_t v9 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result)
    {
      uint64_t v10 = v7[2];
      if (!v10) {
        goto LABEL_41;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_1DCEC1CA4(v7);
      uint64_t v7 = (void *)result;
      uint64_t v10 = *(void *)(result + 16);
      if (!v10)
      {
LABEL_41:
        __break(1u);
        return result;
      }
    }
    uint64_t v11 = v10 - 1;
    uint64_t v12 = v7[v11 + 4];
    void v7[2] = v11;
    if (__OFSUB__(0, v12)) {
      goto LABEL_51;
    }
    uint64_t v13 = -v12 & v12;
    BOOL v14 = __OFSUB__(v13, 1);
    uint64_t v15 = v13 - 1;
    if (v14) {
      goto LABEL_52;
    }
    uint64_t result = v12 - v15;
    if (__OFSUB__(v12, v15)) {
      goto LABEL_53;
    }
    if (__OFADD__(v12, v15)) {
      goto LABEL_54;
    }
    uint64_t result = sub_1DCF4C0B8(result, v12 + v15);
    if (__OFSUB__(v16, result)) {
      goto LABEL_55;
    }
    if (v16 - result <= 16)
    {
      uint64_t v30 = result;
      uint64_t v31 = v16;
      if (v16 < result) {
        goto LABEL_57;
      }
      if (result == v16) {
        goto LABEL_4;
      }
      uint64_t v32 = result;
      while (1)
      {
        if (v32 >= v31) {
          goto LABEL_48;
        }
        if (v30 < 0) {
          goto LABEL_49;
        }
        uint64_t v34 = *(void *)(v5 + 24);
        if ((unint64_t)v32 >= *(void *)(v34 + 16)) {
          goto LABEL_50;
        }
        uint64_t v35 = *(void *)(v34 + 8 * v32 + 32);
        uint64_t v36 = *a4;
        uint64_t result = sub_1DD0490A8();
        uint64_t v37 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v38 = result & ~v37;
        if ((*(void *)(v36 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38))
        {
          uint64_t v39 = *(void *)(v36 + 48);
          if (*(void *)(v39 + 8 * v38) == v35) {
            goto LABEL_30;
          }
          uint64_t v40 = ~v37;
          while (1)
          {
            unint64_t v38 = (v38 + 1) & v40;
            if (((*(void *)(v36 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
              break;
            }
            if (*(void *)(v39 + 8 * v38) == v35) {
              goto LABEL_30;
            }
          }
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v49 = *a4;
        *a4 = 0x8000000000000000;
        sub_1DCF53554(v35, v38, isUniquelyReferenced_nonNull_native);
        *a4 = v49;
        uint64_t result = swift_bridgeObjectRelease();
LABEL_30:
        if (++v32 == v31) {
          goto LABEL_4;
        }
      }
    }
    uint64_t result = sub_1DCF4C0B8(v12, v12);
    if (v17 < result) {
      goto LABEL_56;
    }
    uint64_t v18 = v17;
    if (result != v17) {
      break;
    }
LABEL_19:
    *(void *)&long long v47 = v12;
    S2Cell.init(cellId:)((unint64_t *)&v47, (uint64_t)&v49);
    *(void *)&long long v47 = v49;
    WORD4(v47) = WORD4(v49);
    BYTE10(v47) = BYTE10(v49);
    uint64_t v48 = v50;
    uint64_t v21 = S2Cell.subdivide()();
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      int64_t v23 = (void *)(v21 + 48);
      do
      {
        uint64_t v24 = *(v23 - 2);
        __int16 v25 = *((_WORD *)v23 - 4);
        char v26 = *((unsigned char *)v23 - 6);
        uint64_t v27 = *v23;
        long long v49 = v42;
        uint64_t v50 = v8;
        long long v47 = v41;
        uint64_t v48 = v9;
        uint64_t v43 = v24;
        __int16 v44 = v25;
        char v45 = v26;
        uint64_t v46 = v27;
        swift_bridgeObjectRetain();
        if (sub_1DCF4F7F4(&v49, &v47, &v43))
        {
          unint64_t v29 = v7[2];
          unint64_t v28 = v7[3];
          if (v29 >= v28 >> 1) {
            uint64_t v7 = sub_1DCE9FE74((void *)(v28 > 1), v29 + 1, 1, v7);
          }
          void v7[2] = v29 + 1;
          v7[v29 + 4] = v24;
        }
        swift_bridgeObjectRelease();
        v23 += 3;
        --v22;
      }
      while (v22);
    }
    swift_bridgeObjectRelease();
LABEL_4:
    if (!v7[2])
    {
      return swift_bridgeObjectRelease();
    }
  }
  if (result < v17)
  {
    while ((result & 0x8000000000000000) == 0)
    {
      uint64_t v19 = *(void *)(v5 + 24);
      if ((unint64_t)result >= *(void *)(v19 + 16)) {
        goto LABEL_47;
      }
      uint64_t v20 = result + 1;
      sub_1DCF5171C((uint64_t *)&v49, *(void *)(v19 + 8 * result + 32));
      uint64_t result = v20;
      if (v18 == v20) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall S2EdgeIndex.DataEdgeIterator.getCandidates(a:b:)(VisualIntelligence::S2Point a, VisualIntelligence::S2Point b)
{
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  uint64_t v7 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v9 = *v3;
  uint64_t v10 = v3[1];
  uint64_t v11 = v3[2];
  uint64_t v12 = *v4;
  uint64_t v13 = swift_beginAccess();
  if (*(unsigned char *)(v12 + 40) == 1)
  {
    *((unsigned char *)v5 + 8) = 0;
    goto LABEL_8;
  }
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 248))(v13);
  if (v17 > 100)
  {
    uint64_t v18 = *(void *)(v12 + 48);
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
      goto LABEL_14;
    }
    if (v20 >= 31) {
      uint64_t v17 = sub_1DCF4BA18();
    }
  }
  char v21 = *(unsigned char *)(v12 + 40);
  *((unsigned char *)v5 + 8) = v21 ^ 1;
  if ((v21 & 1) == 0)
  {
    uint64_t v25 = *(void *)(v12 + 48);
    BOOL v19 = __OFADD__(v25, 1);
    uint64_t v26 = v25 + 1;
    if (!v19)
    {
      *(void *)(v12 + 48) = v26;
      uint64_t v5[2] = 0;
      v5[3] = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 248))(v17);
      return;
    }
LABEL_14:
    __break(1u);
    return;
  }
LABEL_8:
  uint64_t v31 = v6;
  uint64_t v32 = v7;
  uint64_t v33 = v8;
  uint64_t v28 = v9;
  uint64_t v29 = v10;
  uint64_t v30 = v11;
  sub_1DCF4ED28((double *)&v31, (double *)&v28, 0, v14, v15, v16);
  int64_t v23 = (void *)v22;
  uint64_t v27 = sub_1DCF4C23C(v22);
  uint64_t v31 = v6;
  uint64_t v32 = v7;
  uint64_t v33 = v8;
  uint64_t v28 = v9;
  uint64_t v29 = v10;
  uint64_t v30 = v11;
  sub_1DCF4C5C0((uint64_t)&v31, (uint64_t)&v28, v23, &v27);
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1DCF4DDDC(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5[4] = v24;
  v5[5] = 0;
  if (v24[2]) {
    uint64_t v5[2] = v24[4];
  }
}

Swift::Int_optional __swiftcall S2EdgeIndex.DataEdgeIterator.next()()
{
  Swift::Int v1 = *(void *)(v0 + 16);
  if ((*(unsigned char *)(v0 + 8) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    if (v4 < *(void *)(v3 + 16))
    {
      *(void *)(v0 + 40) = v4 + 1;
      if (v4 + 1 >= *(void *)(v3 + 16))
      {
        Swift::Bool v5 = 0;
        goto LABEL_12;
      }
      if (v4 < -1)
      {
        __break(1u);
        goto LABEL_12;
      }
      Swift::Int v2 = *(void *)(v3 + 8 * (v4 + 1) + 32);
      goto LABEL_8;
    }
LABEL_9:
    Swift::Int v1 = 0;
    Swift::Bool v5 = 1;
    goto LABEL_12;
  }
  if (v1 >= *(void *)(v0 + 24)) {
    goto LABEL_9;
  }
  Swift::Int v2 = v1 + 1;
LABEL_8:
  Swift::Bool v5 = 0;
  *(void *)(v0 + 16) = v2;
LABEL_12:
  result.value = v1;
  result.is_nil = v5;
  return result;
}

uint64_t S2EdgeIndex.DataEdgeIterator.init(edgeIndex:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = MEMORY[0x1E4FBC860];
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t S2EdgeIndex.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)(result + 16) = MEMORY[0x1E4FBC860];
  *(void *)(result + 24) = v1;
  *(void *)(result + 32) = 30;
  *(unsigned char *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  return result;
}

void sub_1DCF4CC18()
{
}

void sub_1DCF4CC64()
{
}

void sub_1DCF4CCB0()
{
}

uint64_t sub_1DCF4CCFC@<X0>(long long *a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = *((void *)a1 + 2);
  uint64_t v7 = *((void *)a2 + 2);
  long long v16 = *a2;
  long long v17 = *a3;
  uint64_t v8 = *((void *)a3 + 2);
  long long v18 = *a4;
  uint64_t v9 = *((void *)a4 + 2);
  long long v22 = *a1;
  uint64_t v23 = v6;
  S2CellId.init(point:)((double *)&v22, &v24);
  long long v22 = v16;
  uint64_t v23 = v7;
  S2CellId.init(point:)((double *)&v22, &v21);
  long long v22 = v17;
  uint64_t v23 = v8;
  S2CellId.init(point:)((double *)&v22, &v20);
  long long v22 = v18;
  uint64_t v23 = v9;
  uint64_t result = (uint64_t)S2CellId.init(point:)((double *)&v22, &v19);
  uint64_t v11 = v24;
  unint64_t v12 = v24 >> 61;
  uint64_t v13 = v21;
  if (v24 >> 61 != v21 >> 61 || (uint64_t v14 = v20, v12 != v20 >> 61) || (v15 = v19, v12 != v19 >> 61))
  {
    uint64_t v11 = 0x7FFFFFFFFFFFFFFFLL;
LABEL_18:
    *a5 = v11;
    return result;
  }
  if (v24 != v21) {
    goto LABEL_7;
  }
LABEL_5:
  if (v11 == v14 && v11 == v15) {
    goto LABEL_18;
  }
LABEL_7:
  while (!__OFSUB__(0, v11))
  {
    if (__OFSUB__(0, 4 * (-v11 & v11))) {
      goto LABEL_20;
    }
    if (__OFSUB__(0, v13)) {
      goto LABEL_21;
    }
    if (__OFSUB__(0, 4 * (-v13 & v13))) {
      goto LABEL_22;
    }
    if (__OFSUB__(0, v14)) {
      goto LABEL_23;
    }
    if (__OFSUB__(0, 4 * (-v14 & v14))) {
      goto LABEL_24;
    }
    uint64_t result = -v15;
    if (__OFSUB__(0, v15)) {
      goto LABEL_25;
    }
    uint64_t result = 4 * (result & v15);
    if (__OFSUB__(0, result)) {
      goto LABEL_26;
    }
    uint64_t v11 = (-4 * (-v11 & v11)) & v11 | (4 * (-v11 & v11));
    uint64_t v13 = (-4 * (-v13 & v13)) & v13 | (4 * (-v13 & v13));
    uint64_t v14 = (-4 * (-v14 & v14)) & v14 | (4 * (-v14 & v14));
    uint64_t v15 = -result & v15 | result;
    if (v11 == v13) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_1DCF4CEB0@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *((void *)a1 + 2);
  long long v9 = *a2;
  uint64_t v5 = *((void *)a2 + 2);
  long long v11 = *a1;
  uint64_t v12 = v4;
  S2CellId.init(point:)((double *)&v11, &v13);
  long long v11 = v9;
  uint64_t v12 = v5;
  uint64_t result = S2CellId.init(point:)((double *)&v11, &v10);
  uint64_t v7 = v13;
  uint64_t v8 = v10;
  if ((v10 ^ (unint64_t)v13) >> 61)
  {
    uint64_t v7 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_10;
  }
  if (v13 == v10)
  {
LABEL_10:
    *a3 = v7;
    return result;
  }
  while (!__OFSUB__(0, v7))
  {
    if (__OFSUB__(0, 4 * (-v7 & v7))) {
      goto LABEL_12;
    }
    if (__OFSUB__(0, v8)) {
      goto LABEL_13;
    }
    if (__OFSUB__(0, 4 * (-v8 & v8))) {
      goto LABEL_14;
    }
    uint64_t v7 = (-4 * (-v7 & v7)) & v7 | (4 * (-v7 & v7));
    uint64_t v8 = (-4 * (-v8 & v8)) & v8 | (4 * (-v8 & v8));
    if (v7 == v8) {
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

__n128 sub_1DCF4CFA0@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1->n128_u8[8];
  unint64_t v3 = v1[2].n128_u64[0];
  unint64_t v4 = v1[2].n128_u64[1];
  a1->n128_u64[0] = v1->n128_u64[0];
  a1->n128_u8[8] = v2;
  __n128 result = v1[1];
  a1[1] = result;
  a1[2].n128_u64[0] = v3;
  a1[2].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1DCF4CFC4()
{
  return 0;
}

uint64_t sub_1DCF4CFCC()
{
  return 2;
}

uint64_t sub_1DCF4CFD4()
{
  long long v1 = v0[1];
  v4[0] = *v0;
  v4[1] = v1;
  void v4[2] = v0[2];
  uint64_t v2 = sub_1DCEED924((uint64_t)v4);
  sub_1DCF4F660((uint64_t)v4);
  return v2;
}

uint64_t sub_1DCF4D020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1DCD4FF38(a1, a2, a3);
}

uint64_t sub_1DCF4D05C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    BOOL v7 = 0;
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    BOOL v7 = 0;
LABEL_14:
    uint64_t v8 = a4;
LABEL_15:
    *(void *)__n128 result = a4;
    *(void *)(result + 8) = a5;
    *(void *)(result + 16) = v8;
    *(unsigned char *)(result + 24) = v7;
    return a3;
  }
  if (a3 < 0) {
    goto LABEL_17;
  }
  uint64_t v5 = 0;
  uint64_t v6 = a4;
  while (1)
  {
    BOOL v7 = v6 == a5;
    if (v6 != a5) {
      break;
    }
    uint64_t v8 = 0;
LABEL_8:
    *(void *)(a2 + 8 * v5) = v6;
    if (a3 - 1 == v5) {
      goto LABEL_15;
    }
    ++v5;
    BOOL v9 = v6 == a5;
    uint64_t v6 = v8;
    if (v9)
    {
      BOOL v7 = 1;
      a3 = v5;
      goto LABEL_15;
    }
  }
  uint64_t v8 = v6 + 1;
  if (!__OFADD__(v6, 1)) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1DCF4D0E8()
{
  return sub_1DD048648();
}

Swift::Int sub_1DCF4D10C@<X0>(uint64_t a1@<X8>)
{
  Swift::Int_optional v3 = S2EdgeIndex.DataEdgeIterator.next()();
  *(void *)a1 = v3.value;
  *(unsigned char *)(a1 + 8) = v3.is_nil;
  return v3.value;
}

uint64_t S2EdgeIndex.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1DCF4D17C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE85188);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 160);
  uint64_t v5 = sub_1DCD50028(&v7, (char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1DCD505A4();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

int64_t *sub_1DCF4D270(int64_t *result, int64_t a2)
{
  int64_t v2 = a2 - (void)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2) {
      return (int64_t *)MEMORY[0x1E4FBC860];
    }
    int64_t v4 = (int64_t)result;
    if (v2 <= 0)
    {
      uint64_t v5 = (int64_t *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851F8);
      uint64_t v5 = (int64_t *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      uint64_t v5[2] = v2;
      v5[3] = 2 * (v7 >> 3);
    }
    __n128 result = sub_1DCD5026C(v8, v5 + 4, v2, v4, a2);
    if (result == (int64_t *)v2) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

void *sub_1DCF4D338(unint64_t a1)
{
  return sub_1DCF4DEC4(a1, (void (*)(void *, uint64_t, unint64_t))sub_1DCFE0C50);
}

void *sub_1DCF4D350(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86AE0);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_1DCD5039C((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1DCD505A4();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1DCF4D448(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 16 * v5;
    if (v5 <= 0)
    {
      BOOL v9 = (char *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        uint64_t v12 = v9 + 32;
        uint64_t v13 = (char *)(a2 + 16 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 16 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB02738);
      BOOL v9 = (char *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

void *sub_1DCF4D5B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851E0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  uint64_t v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1DCD50750((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1DCD505A4();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1DCF4D69C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 56 * a3;
        if (v10 < (unint64_t)&v8[7 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 56 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE84908);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      void v8[2] = v5;
      int64_t v8[3] = 2 * ((uint64_t)(v9 - 32) / 56);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCF4D830(uint64_t result, uint64_t a2)
{
  uint64_t v2 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v2 == -1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = result;
  if (v3 <= 0)
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851F8);
    uint64_t v6 = (void *)swift_allocObject();
    int64_t v7 = _swift_stdlib_malloc_size(v6);
    uint64_t v8 = v7 - 32;
    if (v7 < 32) {
      uint64_t v8 = v7 - 25;
    }
    uint64_t v6[2] = v3;
    v6[3] = 2 * (v8 >> 3);
  }
  uint64_t result = sub_1DCF4D05C((uint64_t)&v9, (uint64_t)(v6 + 4), v3, v5, a2);
  if (result == v3) {
    return (uint64_t)v6;
  }
LABEL_14:
  __break(1u);
  return result;
}

void *sub_1DCF4D904(uint64_t a1)
{
  return sub_1DCF4D934(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1DCD50950);
}

void *sub_1DCF4D91C(uint64_t a1)
{
  return sub_1DCF4D934(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1DCD50B50);
}

void *sub_1DCF4D934(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851E0);
  uint64_t v5 = (void *)swift_allocObject();
  int64_t v6 = _swift_stdlib_malloc_size(v5);
  uint64_t v7 = v6 - 32;
  if (v6 < 32) {
    uint64_t v7 = v6 - 17;
  }
  uint64_t v5[2] = v2;
  v5[3] = 2 * (v7 >> 4);
  uint64_t v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1DCD505A4();
  if (v8 != v2)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v5;
}

uint64_t sub_1DCF4DA24(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_1DCF4F620();
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

void *sub_1DCF4DBA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851B0);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 56);
  uint64_t v5 = sub_1DCD50D50(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1DCD505A4();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1DCF4DCA4(char *a1, uint64_t a2)
{
  if (!a2) {
    return MEMORY[0x1E4FBC860];
  }
  if (a2 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851F0);
    uint64_t v4 = 4 * a2;
    uint64_t v5 = (char *)swift_allocObject();
    int64_t v6 = _swift_stdlib_malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 29;
    }
    *((void *)v5 + 2) = a2;
    *((void *)v5 + 3) = 2 * (v7 >> 2);
    uint64_t v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 4 * a2);
      return (uint64_t)v5;
    }
  }
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

void *sub_1DCF4DDDC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE851F8);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  uint64_t v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  int64_t v6 = sub_1DCD50F08(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1DCD505A4();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1DCF4DEC4(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBE86B08);
      uint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      uint64_t v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1DD048CC8();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v5;
}

uint64_t sub_1DCF4DFCC(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t a5)
{
  int64_t v6 = (unint64_t *)__dst;
  uint64_t v8 = (unint64_t *)a2;
  uint64_t v9 = (unint64_t *)__src;
  int64_t v10 = a2 - __src;
  int64_t v11 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v11 = a2 - __src;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v13 = a3 - (void)a2;
  uint64_t v14 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v14 = a3 - (void)a2;
  }
  uint64_t v15 = v14 >> 3;
  uint64_t v50 = __src;
  long long v49 = (unint64_t *)__dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 >= -7)
    {
      if (__dst != a2 || &a2[8 * v15] <= __dst) {
        memmove(__dst, a2, 8 * v15);
      }
      uint64_t v30 = &v6[v15];
      uint64_t v48 = v30;
      uint64_t v50 = (char *)v8;
      if (v9 < v8 && v13 >= 8)
      {
        uint64_t v31 = (unint64_t *)(a3 - 8);
        while (1)
        {
          unint64_t v32 = *(v30 - 1);
          if ((v32 & 0x8000000000000000) != 0) {
            break;
          }
          uint64_t v33 = *(void *)(a5 + 16);
          unint64_t v34 = *(void *)(v33 + 16);
          if (v32 >= v34) {
            goto LABEL_58;
          }
          uint64_t v35 = *(void *)(a5 + 24);
          unint64_t v36 = *(void *)(v35 + 16);
          if (v32 >= v36) {
            goto LABEL_59;
          }
          uint64_t v37 = v8 - 1;
          unint64_t v38 = *(v8 - 1);
          if (v38 >= v34) {
            goto LABEL_60;
          }
          if (v38 >= v36) {
            goto LABEL_61;
          }
          uint64_t v39 = v33 + 32;
          uint64_t v40 = *(void *)(v39 + 8 * v32);
          uint64_t v41 = v35 + 32;
          uint64_t v42 = *(void *)(v41 + 8 * v32);
          uint64_t v43 = v31 + 1;
          uint64_t v44 = *(void *)(v39 + 8 * v38);
          BOOL v45 = v42 < *(void *)(v41 + 8 * v38);
          BOOL v27 = v40 == v44;
          BOOL v46 = v40 < v44;
          if (v27) {
            BOOL v46 = v45;
          }
          if (v46)
          {
            if (v43 != v8 || v31 >= v8) {
              *uint64_t v31 = v38;
            }
            uint64_t v50 = (char *)--v8;
            if (v37 <= v9) {
              goto LABEL_56;
            }
          }
          else
          {
            uint64_t v48 = v30 - 1;
            if (v43 < v30 || v31 >= v30 || v43 != v30) {
              *uint64_t v31 = *(v30 - 1);
            }
            --v30;
            if (v8 <= v9) {
              goto LABEL_56;
            }
          }
          --v31;
          if (v30 <= v6) {
            goto LABEL_56;
          }
        }
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
LABEL_56:
      sub_1DCD725EC((void **)&v50, (const void **)&v49, &v48);
      return 1;
    }
  }
  else if (v10 >= -7)
  {
    if (__dst != __src || &__src[8 * v12] <= __dst) {
      memmove(__dst, __src, 8 * v12);
    }
    long long v16 = &v6[v12];
    uint64_t v48 = v16;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      while (1)
      {
        unint64_t v17 = *v8;
        if ((*v8 & 0x8000000000000000) != 0) {
          break;
        }
        uint64_t v18 = *(void *)(a5 + 16);
        unint64_t v19 = *(void *)(v18 + 16);
        if (v17 >= v19) {
          goto LABEL_63;
        }
        uint64_t v20 = *(void *)(a5 + 24);
        unint64_t v21 = *(void *)(v20 + 16);
        if (v17 >= v21) {
          goto LABEL_64;
        }
        unint64_t v22 = *v6;
        if (*v6 >= v19) {
          goto LABEL_65;
        }
        if (v22 >= v21) {
          goto LABEL_66;
        }
        uint64_t v23 = v18 + 32;
        uint64_t v24 = *(void *)(v23 + 8 * v17);
        uint64_t v25 = *(void *)(v23 + 8 * v22);
        BOOL v26 = *(void *)(v20 + 32 + 8 * v17) < *(void *)(v20 + 32 + 8 * v22);
        BOOL v27 = v24 == v25;
        BOOL v28 = v24 < v25;
        if (v27) {
          BOOL v28 = v26;
        }
        if (v28)
        {
          uint64_t v29 = v8 + 1;
          if (v9 < v8 || v9 >= v29 || v9 != v8) {
            *uint64_t v9 = v17;
          }
        }
        else
        {
          if (v9 != v6) {
            *uint64_t v9 = v22;
          }
          long long v49 = ++v6;
          uint64_t v29 = v8;
        }
        ++v9;
        if (v6 < v16)
        {
          uint64_t v8 = v29;
          if ((unint64_t)v29 < a3) {
            continue;
          }
        }
        uint64_t v50 = (char *)v9;
        goto LABEL_56;
      }
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    goto LABEL_56;
  }
LABEL_67:
  swift_release();
  uint64_t result = sub_1DD048D18();
  __break(1u);
  return result;
}

uint64_t sub_1DCF4E338(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = a1[1];
  swift_retain_n();
  uint64_t v6 = sub_1DD048F68();
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_186;
    }
    if ((unint64_t)v5 > 1)
    {
      uint64_t v109 = *a1;
      swift_retain();
      uint64_t v110 = 0;
      for (uint64_t i = 1; i != v5; ++i)
      {
        unint64_t v112 = *(void *)(v109 + 8 * i);
        uint64_t v113 = v110;
        do
        {
          if ((v112 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
LABEL_182:
            __break(1u);
LABEL_183:
            __break(1u);
LABEL_184:
            __break(1u);
LABEL_185:
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            swift_release_n();
            __break(1u);
LABEL_192:
            swift_release_n();
            __break(1u);
LABEL_193:
            swift_release_n();
            __break(1u);
LABEL_194:
            swift_release_n();
            __break(1u);
LABEL_195:
            swift_release_n();
            uint64_t result = sub_1DD048C98();
            __break(1u);
            return result;
          }
          uint64_t v114 = *(void *)(a2 + 16);
          unint64_t v115 = *(void *)(v114 + 16);
          if (v112 >= v115) {
            goto LABEL_147;
          }
          uint64_t v116 = *(void *)(a2 + 24);
          unint64_t v117 = *(void *)(v116 + 16);
          if (v112 >= v117) {
            goto LABEL_148;
          }
          uint64_t v118 = (unint64_t *)(v109 + 8 * v113);
          unint64_t v119 = *v118;
          if (*v118 >= v115) {
            goto LABEL_149;
          }
          if (v119 >= v117) {
            goto LABEL_150;
          }
          uint64_t v120 = v114 + 32;
          uint64_t v121 = *(void *)(v120 + 8 * v112);
          uint64_t v122 = *(void *)(v120 + 8 * v119);
          BOOL v123 = *(void *)(v116 + 32 + 8 * v112) < *(void *)(v116 + 32 + 8 * v119);
          BOOL v26 = v121 == v122;
          BOOL v124 = v121 < v122;
          if (v26) {
            BOOL v124 = v123;
          }
          if (!v124) {
            break;
          }
          if (!v109) {
            goto LABEL_190;
          }
          v118[1] = v119;
          *(void *)(v109 + 8 * v113--) = v112;
        }
        while (v113 != -1);
        ++v110;
      }
    }
    swift_release_n();
    return swift_release();
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_195;
  }
  uint64_t v145 = a2;
  uint64_t v137 = v6;
  uint64_t v146 = v2;
  uint64_t v135 = a1;
  if (v5 >= 2)
  {
    uint64_t v8 = v7 >> 1;
    uint64_t v9 = sub_1DD0486F8();
    *(void *)(v9 + 16) = v8;
    uint64_t v136 = v9;
    __dst = (char *)(v9 + 32);
    goto LABEL_12;
  }
  int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
  uint64_t v136 = MEMORY[0x1E4FBC860];
  if (v5 != 1)
  {
    unint64_t v54 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_131:
    if (v54 >= 2)
    {
      uint64_t v125 = *v135;
      uint64_t v143 = *v135;
      do
      {
        unint64_t v126 = v54 - 2;
        if (v54 < 2) {
          goto LABEL_175;
        }
        if (!v125) {
          goto LABEL_194;
        }
        uint64_t v127 = *(void *)&v10[16 * v126 + 32];
        uint64_t v128 = *(void *)&v10[16 * v54 + 24];
        long long v129 = (char *)(v125 + 8 * v127);
        uint64_t v130 = (char *)(v125 + 8 * *(void *)&v10[16 * v54 + 16]);
        unint64_t v131 = v125 + 8 * v128;
        swift_retain();
        sub_1DCF4DFCC(v129, v130, v131, __dst, v145);
        if (v146)
        {
          uint64_t v107 = v136;
          goto LABEL_115;
        }
        swift_release();
        if (v128 < v127) {
          goto LABEL_176;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v10 = sub_1DCD729EC((uint64_t)v10);
        }
        if (v126 >= *((void *)v10 + 2)) {
          goto LABEL_177;
        }
        uint64_t v132 = &v10[16 * v126 + 32];
        *(void *)uint64_t v132 = v127;
        *((void *)v132 + 1) = v128;
        unint64_t v133 = *((void *)v10 + 2);
        if (v54 > v133) {
          goto LABEL_178;
        }
        memmove(&v10[16 * v54 + 16], &v10[16 * v54 + 32], 16 * (v133 - v54));
        *((void *)v10 + 2) = v133 - 1;
        unint64_t v54 = v133 - 1;
        uint64_t v125 = v143;
      }
      while (v133 > 2);
    }
    swift_bridgeObjectRelease();
    *(void *)(v136 + 16) = 0;
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
LABEL_12:
  uint64_t v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v134 = *a1 - 8;
  int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v138 = v5;
  uint64_t v140 = *a1;
  while (1)
  {
    uint64_t v13 = v11 + 1;
    if (v11 + 1 < v5)
    {
      unint64_t v14 = *(void *)(v12 + 8 * v13);
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_180;
      }
      uint64_t v15 = *(void *)(a2 + 16);
      unint64_t v16 = *(void *)(v15 + 16);
      if (v14 >= v16) {
        goto LABEL_181;
      }
      uint64_t v17 = *(void *)(a2 + 24);
      unint64_t v18 = *(void *)(v17 + 16);
      if (v14 >= v18) {
        goto LABEL_182;
      }
      unint64_t v19 = *(void *)(v12 + 8 * v11);
      if (v19 >= v16) {
        goto LABEL_183;
      }
      if (v19 >= v18) {
        goto LABEL_184;
      }
      uint64_t v20 = v15 + 32;
      uint64_t v21 = *(void *)(v15 + 32 + 8 * v14);
      uint64_t v22 = v17 + 32;
      uint64_t v23 = 8 * v19;
      uint64_t v24 = *(void *)(v20 + v23);
      BOOL v25 = *(void *)(v22 + 8 * v14) < *(void *)(v22 + v23);
      BOOL v26 = v21 == v24;
      int v27 = v21 < v24;
      if (v26) {
        int v27 = v25;
      }
      uint64_t v13 = v11 + 2;
      if (v11 + 2 < v5)
      {
        do
        {
          unint64_t v28 = *(void *)(v12 + 8 * v13);
          if (v28 >= v16) {
            goto LABEL_160;
          }
          if ((uint64_t)v28 >= (uint64_t)v18) {
            goto LABEL_161;
          }
          if (v14 >= v16) {
            goto LABEL_162;
          }
          if ((uint64_t)v14 >= (uint64_t)v18) {
            goto LABEL_163;
          }
          uint64_t v29 = *(void *)(v20 + 8 * v28);
          uint64_t v30 = 8 * v14;
          uint64_t v31 = *(void *)(v20 + v30);
          int v32 = *(void *)(v22 + 8 * v28) < *(void *)(v22 + v30);
          BOOL v26 = v29 == v31;
          BOOL v33 = v29 < v31;
          if (!v26) {
            int v32 = v33;
          }
          if (v27 != v32) {
            goto LABEL_31;
          }
          ++v13;
          unint64_t v14 = v28;
        }
        while (v5 != v13);
        uint64_t v13 = v5;
      }
LABEL_31:
      if (v27)
      {
        if (v13 < v11) {
          goto LABEL_189;
        }
        if (v11 < v13)
        {
          uint64_t v34 = v13 - 1;
          uint64_t v35 = v11;
          do
          {
            if (v35 != v34)
            {
              if (!v12) {
                goto LABEL_193;
              }
              uint64_t v36 = *(void *)(v12 + 8 * v35);
              *(void *)(v12 + 8 * v35) = *(void *)(v12 + 8 * v34);
              *(void *)(v12 + 8 * v34) = v36;
            }
            BOOL v85 = ++v35 < v34--;
          }
          while (v85);
        }
      }
    }
    if (v13 < v5)
    {
      if (__OFSUB__(v13, v11)) {
        goto LABEL_185;
      }
      if (v13 - v11 < v137)
      {
        uint64_t v37 = v11 + v137;
        if (__OFADD__(v11, v137)) {
          goto LABEL_187;
        }
        if (v37 >= v5) {
          uint64_t v37 = v5;
        }
        if (v37 < v11) {
          goto LABEL_188;
        }
        if (v13 != v37)
        {
          unint64_t v38 = (unint64_t *)(v134 + 8 * v13);
          do
          {
            unint64_t v39 = *(void *)(v12 + 8 * v13);
            uint64_t v40 = v11;
            uint64_t v41 = v38;
            do
            {
              if ((v39 & 0x8000000000000000) != 0) {
                goto LABEL_151;
              }
              uint64_t v42 = *(void *)(a2 + 16);
              unint64_t v43 = *(void *)(v42 + 16);
              if (v39 >= v43) {
                goto LABEL_152;
              }
              uint64_t v44 = *(void *)(a2 + 24);
              unint64_t v45 = *(void *)(v44 + 16);
              if (v39 >= v45) {
                goto LABEL_153;
              }
              unint64_t v46 = *v41;
              if (*v41 >= v43) {
                goto LABEL_154;
              }
              if (v46 >= v45) {
                goto LABEL_155;
              }
              uint64_t v47 = v42 + 32;
              uint64_t v48 = *(void *)(v47 + 8 * v39);
              uint64_t v49 = *(void *)(v47 + 8 * v46);
              BOOL v50 = *(void *)(v44 + 32 + 8 * v39) < *(void *)(v44 + 32 + 8 * v46);
              BOOL v26 = v48 == v49;
              BOOL v51 = v48 < v49;
              if (v26) {
                BOOL v51 = v50;
              }
              if (!v51) {
                break;
              }
              if (!v12) {
                goto LABEL_191;
              }
              unint64_t *v41 = v39;
              v41[1] = v46;
              --v41;
              ++v40;
            }
            while (v13 != v40);
            ++v13;
            ++v38;
          }
          while (v13 != v37);
          uint64_t v13 = v37;
        }
      }
    }
    if (v13 < v11) {
      goto LABEL_179;
    }
    uint64_t v139 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v10 = sub_1DCD71FDC(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v53 = *((void *)v10 + 2);
    unint64_t v52 = *((void *)v10 + 3);
    unint64_t v54 = v53 + 1;
    if (v53 >= v52 >> 1) {
      int64_t v10 = sub_1DCD71FDC((char *)(v52 > 1), v53 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v54;
    CGFloat v55 = v10 + 32;
    CGFloat v56 = &v10[16 * v53 + 32];
    *(void *)CGFloat v56 = v11;
    *((void *)v56 + 1) = v139;
    if (v53) {
      break;
    }
    unint64_t v54 = 1;
LABEL_112:
    uint64_t v5 = v138;
    uint64_t v11 = v139;
    if (v139 >= v138) {
      goto LABEL_131;
    }
  }
  uint64_t v141 = v10 + 32;
  uint64_t v142 = v10;
  while (1)
  {
    unint64_t v57 = v54 - 1;
    if (v54 >= 4)
    {
      CGRect v62 = &v55[16 * v54];
      uint64_t v63 = *((void *)v62 - 8);
      uint64_t v64 = *((void *)v62 - 7);
      BOOL v68 = __OFSUB__(v64, v63);
      uint64_t v65 = v64 - v63;
      if (v68) {
        goto LABEL_164;
      }
      uint64_t v67 = *((void *)v62 - 6);
      uint64_t v66 = *((void *)v62 - 5);
      BOOL v68 = __OFSUB__(v66, v67);
      uint64_t v60 = v66 - v67;
      char v61 = v68;
      if (v68) {
        goto LABEL_165;
      }
      unint64_t v69 = v54 - 2;
      uint64_t v70 = &v55[16 * v54 - 32];
      uint64_t v72 = *(void *)v70;
      uint64_t v71 = *((void *)v70 + 1);
      BOOL v68 = __OFSUB__(v71, v72);
      uint64_t v73 = v71 - v72;
      if (v68) {
        goto LABEL_167;
      }
      BOOL v68 = __OFADD__(v60, v73);
      uint64_t v74 = v60 + v73;
      if (v68) {
        goto LABEL_170;
      }
      if (v74 >= v65)
      {
        uint64_t v92 = &v55[16 * v57];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v68 = __OFSUB__(v93, v94);
        uint64_t v95 = v93 - v94;
        if (v68) {
          goto LABEL_174;
        }
        BOOL v85 = v60 < v95;
        goto LABEL_101;
      }
    }
    else
    {
      if (v54 != 3)
      {
        uint64_t v86 = *((void *)v10 + 4);
        uint64_t v87 = *((void *)v10 + 5);
        BOOL v68 = __OFSUB__(v87, v86);
        uint64_t v79 = v87 - v86;
        char v80 = v68;
        goto LABEL_95;
      }
      uint64_t v59 = *((void *)v10 + 4);
      uint64_t v58 = *((void *)v10 + 5);
      BOOL v68 = __OFSUB__(v58, v59);
      uint64_t v60 = v58 - v59;
      char v61 = v68;
    }
    if (v61) {
      goto LABEL_166;
    }
    unint64_t v69 = v54 - 2;
    uint64_t v75 = &v55[16 * v54 - 32];
    uint64_t v77 = *(void *)v75;
    uint64_t v76 = *((void *)v75 + 1);
    BOOL v78 = __OFSUB__(v76, v77);
    uint64_t v79 = v76 - v77;
    char v80 = v78;
    if (v78) {
      goto LABEL_169;
    }
    uint64_t v81 = &v55[16 * v57];
    uint64_t v83 = *(void *)v81;
    uint64_t v82 = *((void *)v81 + 1);
    BOOL v68 = __OFSUB__(v82, v83);
    uint64_t v84 = v82 - v83;
    if (v68) {
      goto LABEL_172;
    }
    if (__OFADD__(v79, v84)) {
      goto LABEL_173;
    }
    if (v79 + v84 >= v60)
    {
      BOOL v85 = v60 < v84;
LABEL_101:
      if (v85) {
        unint64_t v57 = v69;
      }
      goto LABEL_103;
    }
LABEL_95:
    if (v80) {
      goto LABEL_168;
    }
    long long v88 = &v55[16 * v57];
    uint64_t v90 = *(void *)v88;
    uint64_t v89 = *((void *)v88 + 1);
    BOOL v68 = __OFSUB__(v89, v90);
    uint64_t v91 = v89 - v90;
    if (v68) {
      goto LABEL_171;
    }
    if (v91 < v79) {
      goto LABEL_112;
    }
LABEL_103:
    unint64_t v96 = v57 - 1;
    if (v57 - 1 >= v54) {
      goto LABEL_156;
    }
    if (!v12) {
      goto LABEL_192;
    }
    uint64_t v97 = &v55[16 * v96];
    unsigned int v98 = v55;
    uint64_t v99 = *(void *)v97;
    unint64_t v100 = v57;
    uint64_t v101 = &v98[16 * v57];
    uint64_t v102 = *((void *)v101 + 1);
    uint64_t v103 = (char *)(v12 + 8 * *(void *)v97);
    os_log_type_t v104 = (char *)(v12 + 8 * *(void *)v101);
    a2 = v145;
    swift_retain();
    sub_1DCF4DFCC(v103, v104, v12 + 8 * v102, __dst, v145);
    if (v146) {
      break;
    }
    swift_release();
    if (v102 < v99) {
      goto LABEL_157;
    }
    if (v100 > *((void *)v142 + 2)) {
      goto LABEL_158;
    }
    unint64_t v105 = v100;
    *(void *)uint64_t v97 = v99;
    CGFloat v55 = v141;
    *(void *)&v141[16 * v96 + 8] = v102;
    unint64_t v106 = *((void *)v142 + 2);
    if (v100 >= v106) {
      goto LABEL_159;
    }
    int64_t v10 = v142;
    uint64_t v146 = 0;
    unint64_t v54 = v106 - 1;
    memmove(v101, v101 + 16, 16 * (v106 - 1 - v105));
    *((void *)v142 + 2) = v106 - 1;
    uint64_t v12 = v140;
    if (v106 <= 2) {
      goto LABEL_112;
    }
  }
  uint64_t v107 = v136;
LABEL_115:
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)(v107 + 16) = 0;
  swift_release_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCF4EC80(void **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_1DCEC1C14(v4);
  }
  uint64_t v5 = v4[2];
  v7[0] = (uint64_t)(v4 + 4);
  v7[1] = v5;
  swift_retain();
  sub_1DCF4E338(v7, a2);
  swift_release();
  *a1 = v4;
  return swift_release_n();
}

uint64_t sub_1DCF4ED28(double *a1, double *a2, char a3, double a4, double a5, double a6)
{
  LOBYTE(v7) = a3;
  double v8 = *a1;
  double v9 = a1[1];
  double v10 = a1[2];
  double v11 = *a2;
  double v12 = a2[1];
  double v13 = a2[2];
  *(double *)&long long v66 = *a1;
  *((double *)&v66 + 1) = v9;
  double v67 = v10;
  *(double *)&long long v64 = v11;
  *((double *)&v64 + 1) = v12;
  double v65 = v13;
  double v14 = S2Point.angle(to:)(*(VisualIntelligence::S2Point *)&a4);
  if (qword_1EAB01BE8 != -1) {
    goto LABEL_31;
  }
  while (1)
  {
    long long v66 = xmmword_1EAB02568;
    Swift::Int v15 = S2.Metric.getMaxLevel(value:)(v14 * 1.02);
    uint64_t v16 = v15;
    if (v7)
    {
      if (v15 == 30)
      {
        uint64_t v17 = 0x40000000000000;
        goto LABEL_10;
      }
      double v18 = (v11 - v8) * 0.01;
      double v19 = (v12 - v9) * 0.01;
      double v20 = (v13 - v10) * 0.01;
      double v21 = v14 * 0.01;
      double v22 = v10 * v19 - v9 * v20;
      double v23 = v8 * v20 - v10 * v18;
      double v24 = v9 * v18 - v8 * v19;
      double v25 = sqrt(v24 * v24 + v22 * v22 + v23 * v23);
      if (v25 != 0.0) {
        double v25 = 1.0 / v25;
      }
      double v14 = v21 * (v22 * v25);
      double v26 = v21 * (v23 * v25);
      double v57 = v10;
      double v58 = v11;
      double v27 = v21 * (v24 * v25);
      double v28 = v12;
      double v29 = v8 - v18;
      double v55 = v8;
      double v56 = v13;
      double v30 = v9;
      double v31 = v9 - v19;
      double v32 = v57 - v20;
      double v53 = v28 + v19;
      double v54 = v58 + v18;
      double v52 = v56 + v20;
      type metadata accessor for S2EdgeIndex();
      *(double *)&long long v66 = v29 - v14;
      *((double *)&v66 + 1) = v31 - v26;
      double v67 = v32 - v27;
      double v33 = v29 + v14;
      double v12 = v28;
      double v34 = v31 + v26;
      double v9 = v30;
      double v13 = v56;
      double v10 = v57;
      double v35 = v32 + v27;
      double v8 = v55;
      *(double *)&long long v64 = v33;
      *((double *)&v64 + 1) = v34;
      double v65 = v35;
      *(double *)&long long v61 = v54 - v14;
      *((double *)&v61 + 1) = v53 - v26;
      double v62 = v52 - v27;
      double v36 = v52 + v27;
      double v11 = v58;
      *(double *)&long long v59 = v54 + v14;
      *((double *)&v59 + 1) = v53 + v26;
      double v60 = v36;
      sub_1DCF4CCFC(&v66, &v64, &v61, &v59, &v63);
      uint64_t v17 = v63;
    }
    else
    {
      type metadata accessor for S2EdgeIndex();
      *(double *)&long long v66 = v8;
      *((double *)&v66 + 1) = v9;
      double v67 = v10;
      *(double *)&long long v64 = v11;
      *((double *)&v64 + 1) = v12;
      double v65 = v13;
      sub_1DCF4CEB0(&v66, &v64, (uint64_t *)&v61);
      uint64_t v17 = v61;
    }
    if (v17 == 0x7FFFFFFFFFFFFFFFLL) {
      goto LABEL_12;
    }
LABEL_10:
    *(void *)&long long v66 = v17;
    uint64_t v37 = &v66;
    uint64_t v38 = S2CellId.level.getter();
    unint64_t v39 = v16 - 2;
    if (__OFSUB__(v16, 2))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v38 >= (uint64_t)v39)
    {
      uint64_t v16 = (uint64_t)sub_1DCE9FE74(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v6 = *(void *)(v16 + 16);
      unint64_t v39 = *(void *)(v16 + 24);
      uint64_t v37 = (long long *)(v6 + 1);
      if (v6 < v39 >> 1)
      {
LABEL_20:
        *(void *)(v16 + 16) = v37;
        *(void *)(v16 + 8 * v6 + 32) = v17;
        *(void *)&long long v66 = v17;
        return S2CellId.level.getter();
      }
LABEL_33:
      uint64_t v16 = (uint64_t)sub_1DCE9FE74((void *)(v39 > 1), (int64_t)v37, 1, (void *)v16);
      goto LABEL_20;
    }
LABEL_12:
    if (v16) {
      break;
    }
    S2CellId.init(face:pos:level:)(0, 0, 0, (uint64_t *)&v64);
    S2CellId.childBegin(level:)(0, (unint64_t *)&v66);
    uint64_t v7 = v66;
    unint64_t v6 = 0xD000000000000000;
    if ((void)v66 == 0xD000000000000000) {
      return 0;
    }
    uint64_t v49 = sub_1DCE9FE74(0, 1, 1, MEMORY[0x1E4FBC860]);
    for (unint64_t i = v49[2]; ; ++i)
    {
      unint64_t v51 = v49[3];
      if (i >= v51 >> 1) {
        uint64_t v49 = sub_1DCE9FE74((void *)(v51 > 1), i + 1, 1, v49);
      }
      void v49[2] = i + 1;
      v49[i + 4] = v7;
      if (__OFSUB__(0, v7)) {
        break;
      }
      v7 += 2 * (-v7 & v7);
      if (v7 == 0xD000000000000000) {
        return 0;
      }
    }
    __break(1u);
LABEL_31:
    swift_once();
  }
  double v40 = (v8 + v11) * 0.5;
  double v41 = (v9 + v12) * 0.5;
  double v42 = (v10 + v13) * 0.5;
  double v43 = sqrt(v40 * v40 + v41 * v41 + v42 * v42);
  if (v43 != 0.0) {
    double v43 = 1.0 / v43;
  }
  double v44 = v40 * v43;
  double v45 = v41 * v43;
  double v46 = v42 * v43;
  if (v16 >= 29) {
    uint64_t v47 = 29;
  }
  else {
    uint64_t v47 = v16;
  }
  *(double *)&long long v66 = v44;
  *((double *)&v66 + 1) = v45;
  double v67 = v46;
  S2CellId.init(point:)((double *)&v66, &v64);
  S2CellId.getVertexNeighbors(level:)((void *)v47);
  return v47;
}

unint64_t sub_1DCF4F190()
{
  unint64_t result = qword_1EAB04378;
  if (!qword_1EAB04378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04378);
  }
  return result;
}

uint64_t sub_1DCF4F1E4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 40);
  return result;
}

uint64_t sub_1DCF4F22C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 40) = v2;
  return result;
}

uint64_t type metadata accessor for S2EdgeIndex()
{
  return self;
}

uint64_t method lookup function for S2EdgeIndex(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for S2EdgeIndex);
}

uint64_t dispatch thunk of S2EdgeIndex.isIndexComputed.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of S2EdgeIndex.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of S2EdgeIndex.numEdges.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of S2EdgeIndex.edgeFrom(index:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of S2EdgeIndex.edgeTo(index:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of S2EdgeIndex.reset()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of S2EdgeIndex.computeIndex()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of S2EdgeIndex.predictAdditionalCalls(n:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of S2EdgeIndex.findCandidateCrossings(a:b:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t destroy for S2EdgeIndex.DataEdgeIterator()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for S2EdgeIndex.DataEdgeIterator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for S2EdgeIndex.DataEdgeIterator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for S2EdgeIndex.DataEdgeIterator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for S2EdgeIndex.DataEdgeIterator(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for S2EdgeIndex.DataEdgeIterator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for S2EdgeIndex.DataEdgeIterator()
{
  return &type metadata for S2EdgeIndex.DataEdgeIterator;
}

unint64_t sub_1DCF4F620()
{
  unint64_t result = qword_1EAB029E0;
  if (!qword_1EAB029E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EAB029E0);
  }
  return result;
}

uint64_t sub_1DCF4F660(uint64_t a1)
{
  return a1;
}

BOOL sub_1DCF4F698(double *a1, double *a2, double *a3, double *a4)
{
  double v4 = *a1;
  double v5 = a1[1];
  double v6 = a1[2];
  double v7 = *a2;
  double v8 = a2[1];
  double v9 = a2[2];
  double v10 = *a3;
  double v11 = a3[1];
  double v12 = a3[2];
  double v13 = v6 * v11;
  double v14 = v6 * *a3;
  double v15 = *a1 * v12;
  double v16 = *a1 * v11;
  double v17 = v5 * *a3;
  double v18 = v9 * (v16 - v17) + *a2 * (v5 * v12 - v6 * v11) + v8 * (v14 - v15);
  BOOL result = 1;
  if (fabs(v18) >= 1.0e-14)
  {
    double v20 = a4[1];
    double v21 = a4[2];
    double v22 = v6 * (v7 * v20 - v8 * *a4) + v4 * (v8 * v21 - v9 * v20) + v5 * (v9 * *a4 - v7 * v21);
    if (fabs(v22) >= 1.0e-14)
    {
      if (v18 * v22 >= 0.0)
      {
        double v23 = *a4 * (v9 * v11 - v8 * v12) + (v7 * v12 - v9 * v10) * v20 + (v8 * v10 - v7 * v11) * v21;
        if (fabs(v23) >= 1.0e-14)
        {
          double v24 = v12 * (v17 - v16) + v10 * (v13 - v5 * v12) + v11 * (v15 - v14);
          if (fabs(v24) >= 1.0e-14) {
            return v18 * v23 >= 0.0 && v18 * v24 >= 0.0;
          }
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1DCF4F7F4(long long *a1, long long *a2, uint64_t *a3)
{
  Swift::Int v3 = 0;
  uint64_t v4 = *((void *)a1 + 2);
  long long v34 = *a2;
  long long v35 = *a1;
  uint64_t v5 = *((void *)a2 + 2);
  uint64_t v6 = *a3;
  char v7 = *((unsigned char *)a3 + 8);
  char v8 = *((unsigned char *)a3 + 9);
  char v9 = *((unsigned char *)a3 + 10);
  uint64_t v10 = a3[2];
  uint64_t v11 = MEMORY[0x1E4FBC860];
  do
  {
    *(void *)&long long v41 = v6;
    BYTE8(v41) = v7;
    BYTE9(v41) = v8;
    BYTE10(v41) = v9;
    uint64_t v42 = v10;
    S2Cell.getVertex(_:)(v3);
    long long v36 = v43;
    uint64_t v12 = v44;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1DCE9F9B4(0, *(void *)(v11 + 16) + 1, 1, (void *)v11);
      uint64_t v11 = result;
    }
    unint64_t v15 = *(void *)(v11 + 16);
    unint64_t v14 = *(void *)(v11 + 24);
    if (v15 >= v14 >> 1)
    {
      uint64_t result = (uint64_t)sub_1DCE9F9B4((void *)(v14 > 1), v15 + 1, 1, (void *)v11);
      uint64_t v11 = result;
    }
    ++v3;
    *(void *)(v11 + 16) = v15 + 1;
    unint64_t v16 = v11 + 24 * v15;
    *(_OWORD *)(v16 + 32) = v36;
    *(void *)(v16 + 48) = v12;
  }
  while (v3 != 4);
  if (!v15) {
    goto LABEL_15;
  }
  uint64_t v17 = *(void *)(v11 + 48);
  uint64_t v18 = *(void *)(v11 + 72);
  long long v19 = *(_OWORD *)(v11 + 32);
  long long v20 = *(_OWORD *)(v11 + 56);
  long long v43 = v35;
  uint64_t v44 = v4;
  long long v41 = v34;
  uint64_t v42 = v5;
  long long v39 = v19;
  uint64_t v40 = v17;
  long long v37 = v20;
  uint64_t v38 = v18;
  uint64_t result = sub_1DCF4F698((double *)&v43, (double *)&v41, (double *)&v39, (double *)&v37);
  BOOL v21 = result;
  if (result) {
    goto LABEL_14;
  }
  if (v15 < 2) {
    goto LABEL_15;
  }
  uint64_t v22 = *(void *)(v11 + 72);
  uint64_t v23 = *(void *)(v11 + 96);
  long long v24 = *(_OWORD *)(v11 + 56);
  long long v25 = *(_OWORD *)(v11 + 80);
  long long v43 = v35;
  uint64_t v44 = v4;
  long long v41 = v34;
  uint64_t v42 = v5;
  long long v39 = v24;
  uint64_t v40 = v22;
  long long v37 = v25;
  uint64_t v38 = v23;
  uint64_t result = sub_1DCF4F698((double *)&v43, (double *)&v41, (double *)&v39, (double *)&v37);
  BOOL v21 = result;
  if (result)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return v21;
  }
  if (v15 >= 3)
  {
    uint64_t v26 = *(void *)(v11 + 96);
    uint64_t v27 = *(void *)(v11 + 120);
    long long v28 = *(_OWORD *)(v11 + 80);
    long long v29 = *(_OWORD *)(v11 + 104);
    long long v43 = v35;
    uint64_t v44 = v4;
    long long v41 = v34;
    uint64_t v42 = v5;
    long long v39 = v28;
    uint64_t v40 = v26;
    long long v37 = v29;
    uint64_t v38 = v27;
    BOOL v21 = sub_1DCF4F698((double *)&v43, (double *)&v41, (double *)&v39, (double *)&v37);
    if (!v21)
    {
      uint64_t v30 = *(void *)(v11 + 120);
      uint64_t v31 = *(void *)(v11 + 48);
      long long v32 = *(_OWORD *)(v11 + 104);
      long long v33 = *(_OWORD *)(v11 + 32);
      long long v43 = v35;
      uint64_t v44 = v4;
      long long v41 = v34;
      uint64_t v42 = v5;
      long long v39 = v32;
      uint64_t v40 = v30;
      long long v37 = v33;
      uint64_t v38 = v31;
      BOOL v21 = sub_1DCF4F698((double *)&v43, (double *)&v41, (double *)&v39, (double *)&v37);
    }
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  __break(1u);
  return result;
}

uint64_t ObjectKnowledge.Property.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ObjectKnowledge.Property.value.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ObjectKnowledge.Property.typeKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ObjectKnowledge.Property.typeValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1DCF4FB78()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65756C6176;
      break;
    case 2:
      uint64_t result = 0x79654B65707974;
      break;
    case 3:
      uint64_t result = 0x756C615665707974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1DCF4FC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1DCF50798(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1DCF4FC28(uint64_t a1)
{
  unint64_t v2 = sub_1DCF5035C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1DCF4FC64(uint64_t a1)
{
  unint64_t v2 = sub_1DCF5035C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ObjectKnowledge.Property.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04380);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v12[5] = v1[3];
  v12[6] = v7;
  uint64_t v8 = v1[4];
  uint64_t v12[3] = v1[5];
  v12[4] = v8;
  uint64_t v9 = v1[6];
  v12[1] = v1[7];
  void v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCF5035C();
  sub_1DD049138();
  char v16 = 0;
  uint64_t v10 = v12[7];
  sub_1DD048EB8();
  if (!v10)
  {
    char v15 = 1;
    sub_1DD048EB8();
    char v14 = 2;
    sub_1DD048EB8();
    char v13 = 3;
    sub_1DD048EB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ObjectKnowledge.Property.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EAB04390);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1DCF5035C();
  sub_1DD049128();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v9 = sub_1DD048DC8();
  uint64_t v11 = v10;
  uint64_t v26 = v9;
  char v30 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1DD048DC8();
  uint64_t v27 = v13;
  uint64_t v25 = v12;
  char v29 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1DD048DC8();
  uint64_t v24 = v14;
  char v28 = 3;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1DD048DC8();
  uint64_t v18 = v17;
  long long v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v22 = v15;
  v19(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v20 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v26;
  a2[1] = v11;
  uint64_t v21 = v24;
  a2[2] = v25;
  a2[3] = v20;
  a2[4] = v23;
  a2[5] = v21;
  a2[6] = v22;
  a2[7] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DCF501D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ObjectKnowledge.Property.init(from:)(a1, a2);
}

uint64_t sub_1DCF501F0(void *a1)
{
  return ObjectKnowledge.Property.encode(to:)(a1);
}

uint64_t _s18VisualIntelligence15ObjectKnowledgeV8PropertyV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v16 = a1[6];
  uint64_t v17 = a1[7];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v10 = a2[7];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_1DD048FA8(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v14 = sub_1DD048FA8(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v3 == v8 && v5 == v9 || (v15 = sub_1DD048FA8(), uint64_t result = 0, (v15 & 1) != 0))
      {
        if (v16 == v11 && v17 == v10)
        {
          return 1;
        }
        else
        {
          return sub_1DD048FA8();
        }
      }
    }
  }
  return result;
}

unint64_t sub_1DCF5035C()
{
  unint64_t result = qword_1EAB04388;
  if (!qword_1EAB04388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04388);
  }
  return result;
}

uint64_t _s8PropertyVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s8PropertyVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s8PropertyVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s8PropertyVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ObjectKnowledge.Property()
{
  return &type metadata for ObjectKnowledge.Property;
}

unsigned char *_s8PropertyV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1DCF50658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8PropertyV10CodingKeysOMa()
{
  return &_s8PropertyV10CodingKeysON;
}

unint64_t sub_1DCF50694()
{
  unint64_t result = qword_1EAB04398;
  if (!qword_1EAB04398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB04398);
  }
  return result;
}

unint64_t sub_1DCF506EC()
{
  unint64_t result = qword_1EAB043A0;
  if (!qword_1EAB043A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB043A0);
  }
  return result;
}

unint64_t sub_1DCF50744()
{
  unint64_t result = qword_1EAB043A8;
  if (!qword_1EAB043A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EAB043A8);
  }
  return result;
}

uint64_t sub_1DCF50798(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79654B65707974 && a2 == 0xE700000000000000 || (sub_1DD048FA8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756C615665707974 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1DD048FA8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t VisualDomain.mappedDomainKey.getter()
{
  return sub_1DD048408();
}

uint64_t Set<>.toVisualDomains()(uint64_t a1)
{
  uint64_t v19 = MEMORY[0x1E4FBC870];
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_20:
    char v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    String.mappedVisualDomain.getter(v15, v16, (char *)&v18);
    uint64_t result = swift_bridgeObjectRelease();
    if (v18 != 26) {
      uint64_t result = sub_1DCF51818(&v17, v18);
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v11 >= v6) {
    goto LABEL_22;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_19;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v6) {
    goto LABEL_22;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_19;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v6) {
    goto LABEL_22;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_19:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_20;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v6)
  {
LABEL_22:
    swift_release();
    return v19;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_22;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_19;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t String.mappedVisualDomain.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  if (sub_1DD048408() == a1 && v6 == a2)
  {
    char v10 = 0;
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  char v8 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  char v10 = 0;
  if (v8) {
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v11 == a2)
  {
    char v10 = 2;
    goto LABEL_13;
  }
  char v13 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v13)
  {
    char v10 = 2;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v14 == a2)
  {
    char v10 = 3;
    goto LABEL_13;
  }
  char v16 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v16)
  {
    char v10 = 3;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v17 == a2)
  {
    char v10 = 1;
    goto LABEL_13;
  }
  char v18 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v18)
  {
    char v10 = 1;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v19 == a2)
  {
    char v10 = 9;
    goto LABEL_13;
  }
  char v20 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v20)
  {
    char v10 = 9;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v21 == a2)
  {
    char v10 = 7;
    goto LABEL_13;
  }
  char v22 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v22)
  {
    char v10 = 7;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v23 == a2)
  {
    char v10 = 8;
    goto LABEL_13;
  }
  char v24 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v24)
  {
    char v10 = 8;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v25 == a2)
  {
    char v10 = 11;
    goto LABEL_13;
  }
  char v26 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v26)
  {
    char v10 = 11;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v27 == a2)
  {
    char v10 = 12;
    goto LABEL_13;
  }
  char v28 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v28)
  {
    char v10 = 12;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v29 == a2)
  {
    char v10 = 10;
    goto LABEL_13;
  }
  char v30 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v30)
  {
    char v10 = 10;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v31 == a2)
  {
    char v10 = 13;
    goto LABEL_13;
  }
  char v32 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v32)
  {
    char v10 = 13;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v33 == a2)
  {
    char v10 = 14;
    goto LABEL_13;
  }
  char v34 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v34)
  {
    char v10 = 14;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v35 == a2)
  {
    char v10 = 15;
    goto LABEL_13;
  }
  char v36 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v36)
  {
    char v10 = 15;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v37 == a2)
  {
    char v10 = 16;
    goto LABEL_13;
  }
  char v38 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v38)
  {
    char v10 = 16;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v39 == a2)
  {
    char v10 = 17;
    goto LABEL_13;
  }
  char v40 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v40)
  {
    char v10 = 17;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v41 == a2)
  {
    char v10 = 18;
    goto LABEL_13;
  }
  char v42 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v42)
  {
    char v10 = 18;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v43 == a2)
  {
    char v10 = 19;
    goto LABEL_13;
  }
  char v44 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v44)
  {
    char v10 = 19;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v45 == a2)
  {
    char v10 = 20;
    goto LABEL_13;
  }
  char v46 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v46)
  {
    char v10 = 20;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v47 == a2)
  {
    char v10 = 21;
    goto LABEL_13;
  }
  char v48 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v48)
  {
    char v10 = 21;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v49 == a2)
  {
    char v10 = 4;
    goto LABEL_13;
  }
  char v50 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v50)
  {
    char v10 = 4;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v51 == a2)
  {
    char v10 = 5;
    goto LABEL_13;
  }
  char v52 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v52)
  {
    char v10 = 5;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v53 == a2)
  {
    char v10 = 22;
    goto LABEL_13;
  }
  char v54 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v54)
  {
    char v10 = 22;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v55 == a2)
  {
    char v10 = 25;
    goto LABEL_13;
  }
  char v56 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v56)
  {
    char v10 = 25;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v57 == a2)
  {
    char v10 = 6;
    goto LABEL_13;
  }
  char v58 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v58)
  {
    char v10 = 6;
    goto LABEL_14;
  }
  if (sub_1DD048408() == a1 && v59 == a2)
  {
    char v10 = 23;
    goto LABEL_13;
  }
  char v60 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v60)
  {
    char v10 = 23;
    goto LABEL_14;
  }
  char v10 = 24;
  if (sub_1DD048408() == a1 && v61 == a2) {
    goto LABEL_13;
  }
  char v62 = sub_1DD048FA8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v62) {
    char v10 = 24;
  }
  else {
    char v10 = 26;
  }
LABEL_14:
  *a3 = v10;
  return result;
}

uint64_t Set<>.toDomainNames()(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v18 = MEMORY[0x1E4FBC860];
  sub_1DCFC4948(0, v1, 0);
  uint64_t v2 = v18;
  uint64_t result = sub_1DCF55B0C(a1);
  int64_t v5 = result;
  int v7 = v6;
  char v9 = v8 & 1;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v7) {
      goto LABEL_14;
    }
    uint64_t v10 = sub_1DCD9C35C(*(unsigned char *)(*(void *)(a1 + 48) + v5));
    uint64_t v12 = v11;
    unint64_t v14 = *(void *)(v18 + 16);
    unint64_t v13 = *(void *)(v18 + 24);
    if (v14 >= v13 >> 1) {
      sub_1DCFC4948(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v18 + 16) = v14 + 1;
    uint64_t v15 = v18 + 16 * v14;
    *(void *)(v15 + 32) = v10;
    *(void *)(v15 + 40) = v12;
    uint64_t result = sub_1DCF55BAC(v5, v7, v9 & 1, a1);
    int64_t v5 = result;
    int v7 = v16;
    char v9 = v17 & 1;
    if (!--v1)
    {
      sub_1DCD74484(result, v16, v17 & 1);
      return v2;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1DCF5156C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1DD0490B8();
  swift_bridgeObjectRetain();
  sub_1DD0484F8();
  uint64_t v8 = sub_1DD049108();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1DD048FA8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1DD048FA8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1DCF533B8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}